!tape
name: -yer
interactions:
- recorded: 2016-08-15T22:29:24.304Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=-yer&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=34279 t=1471300164142784
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:24 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1193.eqiad.wmnet
      Set-Cookie: WMF-Last-Access=15-Aug-2016;Path=/;HttpOnly;secure;Expires=Fri, 16 Sep 2016 12:00:00 GMT, GeoIP=PT:17:Porto:41.15:-8.61:v4; Path=/; secure; Domain=.wiktionary.org
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;https=1;nocookies=1
      X-Cache: cp1053 pass, cp3042 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 1557241814, 1952097601, 1213986136
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="2645239" pageid="2645239" ns="0" title="-yer"><revisions><rev user="MewBot" timestamp="2016-07-27T19:21:59Z" comment="Renamed label &gt; lb" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{also|yer|YER}}
      ==English==

      ===Etymology===
      From {{etyl|enm|en}}, partly an alteration of {{m|enm|-ier}}; and partly from {{etyl|enm|en}} {{m|enm|-yere}}, {{m|enm|-iere}}, {{m|enm|-ȝere}}, the suffix {{l|en|-er}} appended to words ending in {{m|enm|ȝ}} or {{m|enm|g}}. More at {{l|en|-ier}}, {{l|en|-er}}.

      ===Suffix===
      {{en-suffix}}

      # {{lb|en|rare|usually|_|no longer productive}} Agent suffix, equivalent to {{l|en|-er}}, appended to some nouns (especially those ending in the letter &quot;w&quot; or &quot;v&quot;).
      #: ''law'''yer'''''
      #: ''whit'''yer'''''

      ====Derived terms====
      {{suffixsee|en}}</rev></revisions></page></pages></query></api>
- recorded: 2016-08-15T22:29:24.600Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aalso&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=27742 t=1471300164497975
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:24 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1284.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1068 pass, cp3043 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 1875551294, 2082308733, 1213987366
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="178449" pageid="178449" ns="10" title="Template:also"><revisions><rev user="Ruakh" timestamp="2013-03-12T06:23:44Z" comment="{{#invoke:[[Module:Template:also|Template:also]]|main}}" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:Template:also|main}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2016-08-15T22:29:24.977Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aetyl&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=26994 t=1471300164873176
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:24 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1068 pass, cp3041 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 1875552916, 2725062656, 1213988488
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="907689" pageid="907689" ns="10" title="Template:etyl"><revisions><rev user="Daniel Carrero" timestamp="2016-07-27T16:54:07Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">&lt;span class=&quot;etylcleanup&quot;&gt;{{#invoke:etymology/templates|etyl}}&lt;/span&gt;&lt;!--

      --&gt;&lt;includeonly&gt;&lt;!--
      --&gt;{{#switch:{{{2|}}}&lt;!--
      --&gt;|=[[Category:Language code missing/etyl]]&lt;!--
      --&gt;|-=[[Category:etyl cleanup no target{{#if:{{#invoke:families/templates|exists|{{{1}}}}}|/family}}{{#if:{{#invoke:etymology languages/templates|exists|{{{1}}}}}|/etymlang}}{{#if:{{#invoke:languages/templates|exists|{{{1}}}}}|/language}}]]&lt;!--
      --&gt;|br|cel-bry-pro|cel-gau|cel-pro|cnx|cy|dsb|en|ga|gd|gem-pro|gv|ine-pro|kw|mga|my|nl|obt|oco|owl|se|sga|wlm|xbm|xce|pt=[[Category:etyl cleanup/{{{2}}}]]&lt;!--
      --&gt;|#default=[[Category:etyl cleanup]]&lt;!--
      --&gt;}}&lt;!--
      --&gt;&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2016-08-15T22:29:25.282Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=24994 t=1471300165122885
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:25 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1225.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1054 pass, cp3041 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 329456898, 2725064481, 1213990712
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4998801\" pageid=\"4998801\" ns=\"828\" title=\"Module:etymology/templates\"><revisions><rev user=\"CodeCat\" timestamp=\"2016-07-26T12:22:20Z\" comment=\"\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nfunction export.etyl(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = &quot;und&quot;},\n\t\t[2] = {},\n\t\t[&quot;sort&quot;] = {},\n\t}\n\t\n\tlocal\
      \ args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal source = args[1]\n\tlocal lang = args[2]\n\tlocal sort_key = args[&quot;sort&quot;]\n\t\n\t-- Empty language means English, but &quot;-&quot; means no\
      \ language. Yes, confusing...\n\tif not lang then\n\t\tlang = &quot;en&quot;\n\telseif lang == &quot;-&quot; then\n\t\tlang = nil\n\tend\n\t\n\tif lang then\n\t\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code\
      \ \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tend\n\t\n\tsource =\n\t\trequire(&quot;Module:languages&quot;).getByCode(source) or\n\t\trequire(&quot;Module:etymology languages&quot;).getByCode(source) or\n\t\trequire(&quot;Module:families&quot;).getByCode(source)\
      \ or\n\t\terror(&quot;The language, family or etymology language code \\&quot;&quot; .. source .. &quot;\\&quot; is not valid.&quot;)\n\t\n\tif lang and (lang:getCode() == &quot;la&quot; or lang:getCode() == &quot;nl&quot;) then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;etyl/&quot;\
      \ .. lang:getCode())\n\t\trequire(&quot;Module:debug&quot;).track(&quot;etyl/&quot; .. lang:getCode() .. &quot;/&quot; .. source:getCode())\n\tend\n\t\n\treturn require(&quot;Module:etymology&quot;).format_etyl(lang, source, sort_key)\nend\n\nfunction\
      \ export.cognate(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = &quot;und&quot;},\n\t\t[2] = {},\n\t\t[3] = {alias_of = &quot;alt&quot;},\n\t\t[4] = {alias_of = &quot;gloss&quot;},\n\t\t\n\t\t[&quot;alt&quot;] = {},\n\t\t[&quot;g&quot;]\
      \ = {},\n\t\t[&quot;gloss&quot;] = {},\n\t\t[&quot;id&quot;] = {},\n\t\t[&quot;lit&quot;] = {},\n\t\t[&quot;pos&quot;] = {},\n\t\t[&quot;t&quot;] = {alias_of = &quot;gloss&quot;},\n\t\t[&quot;tr&quot;] = {},\n\t\t[&quot;sc&quot;] = {},\n\t\t[&quot;sort&quot;]\
      \ = {},\n\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal source = args[1]\n\tlocal sc = args[&quot;sc&quot;]\n\t\n\tsource =\n\t\trequire(&quot;Module:languages&quot;).getByCode(source)\
      \ or\n\t\trequire(&quot;Module:etymology languages&quot;).getByCode(source) or\n\t\trequire(&quot;Module:families&quot;).getByCode(source) or\n\t\terror(&quot;The language, family or etymology language code \\&quot;&quot; .. source .. &quot;\\&quot; is\
      \ not valid.&quot;)\n\t\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\treturn require(&quot;Module:etymology&quot;).format_cognate(\n\
      \t\t{lang = source, sc = sc, term = args[2], alt = args[&quot;alt&quot;], id = args[&quot;id&quot;], genders = {args[&quot;g&quot;]}, tr = args[&quot;tr&quot;], gloss = args[&quot;gloss&quot;], pos = args[&quot;pos&quot;], lit = args[&quot;lit&quot;]},\n\
      \t\targs[&quot;sort&quot;])\nend\n\nfunction export.derived(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = &quot;und&quot;},\n\t\t[2] = {required = true, default = &quot;und&quot;},\n\t\t[3] = {},\n\t\t[4] = {alias_of = &quot;alt&quot;},\n\
      \t\t[5] = {alias_of = &quot;gloss&quot;},\n\t\t\n\t\t[&quot;alt&quot;] = {},\n\t\t[&quot;g&quot;] = {},\n\t\t[&quot;gloss&quot;] = {},\n\t\t[&quot;id&quot;] = {},\n\t\t[&quot;lit&quot;] = {},\n\t\t[&quot;pos&quot;] = {},\n\t\t[&quot;t&quot;] = {alias_of\
      \ = &quot;gloss&quot;},\n\t\t[&quot;tr&quot;] = {},\n\t\t[&quot;sc&quot;] = {},\n\t\t[&quot;sort&quot;] = {},\n\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal lang = args[1]\n\tlocal source\
      \ = args[2]\n\tlocal sc = args[&quot;sc&quot;]\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\t\n\tsource =\n\t\trequire(&quot;Module:languages&quot;).getByCode(source)\
      \ or\n\t\trequire(&quot;Module:etymology languages&quot;).getByCode(source) or\n\t\trequire(&quot;Module:families&quot;).getByCode(source) or\n\t\terror(&quot;The language, family or etymology language code \\&quot;&quot; .. source .. &quot;\\&quot; is\
      \ not valid.&quot;)\n\t\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\treturn require(&quot;Module:etymology&quot;).format_derived(\n\
      \t\tlang, \n\t\t{lang = source, sc = sc, term = args[3], alt = args[&quot;alt&quot;], id = args[&quot;id&quot;], genders = {args[&quot;g&quot;]}, tr = args[&quot;tr&quot;], gloss = args[&quot;gloss&quot;], pos = args[&quot;pos&quot;], lit = args[&quot;lit&quot;]},\n\
      \t\targs[&quot;sort&quot;])\nend\n\nfunction export.inherited(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = &quot;und&quot;},\n\t\t[2] = {required = true, default = &quot;und&quot;},\n\t\t[3] = {},\n\t\t[4] = {alias_of = &quot;alt&quot;},\n\
      \t\t[5] = {alias_of = &quot;gloss&quot;},\n\t\t\n\t\t[&quot;alt&quot;] = {},\n\t\t[&quot;g&quot;] = {},\n\t\t[&quot;gloss&quot;] = {},\n\t\t[&quot;id&quot;] = {},\n\t\t[&quot;lit&quot;] = {},\n\t\t[&quot;pos&quot;] = {},\n\t\t[&quot;t&quot;] = {alias_of\
      \ = &quot;gloss&quot;},\n\t\t[&quot;tr&quot;] = {},\n\t\t[&quot;sc&quot;] = {},\n\t\t[&quot;sort&quot;] = {},\n\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal lang = args[1]\n\tlocal source\
      \ = args[2]\n\tlocal sc = args[&quot;sc&quot;]\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\t\n\tsource =\n\t\trequire(&quot;Module:languages&quot;).getByCode(source)\
      \ or\n\t\trequire(&quot;Module:etymology languages&quot;).getByCode(source) or\n\t\terror(&quot;The language or etymology language code \\&quot;&quot; .. source .. &quot;\\&quot; is not valid.&quot;)\n\t\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc)\
      \ or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\treturn require(&quot;Module:etymology&quot;).format_inherited(\n\t\tlang,\n\t\t{lang = source, sc = sc, term = args[3], alt = args[&quot;alt&quot;],\
      \ id = args[&quot;id&quot;], genders = {args[&quot;g&quot;]}, tr = args[&quot;tr&quot;], gloss = args[&quot;gloss&quot;], pos = args[&quot;pos&quot;], lit = args[&quot;lit&quot;]},\n\t\targs[&quot;sort&quot;])\nend\n\nfunction export.borrowed(frame)\n\t\
      local learned = frame.args[&quot;learned&quot;]; if not learned or learned == &quot;&quot; then learned = false else learned = true end\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = &quot;und&quot;},\n\t\t[2] = {required = true, default\
      \ = &quot;und&quot;},\n\t\t[3] = {},\n\t\t[4] = {alias_of = &quot;alt&quot;},\n\t\t[5] = {alias_of = &quot;gloss&quot;},\n\t\t\n\t\t[&quot;alt&quot;] = {},\n\t\t[&quot;g&quot;] = {},\n\t\t[&quot;gloss&quot;] = {},\n\t\t[&quot;id&quot;] = {},\n\t\t[&quot;lit&quot;]\
      \ = {},\n\t\t[&quot;nocap&quot;] = {type = &quot;boolean&quot;},\n\t\t[&quot;notext&quot;] = {type = &quot;boolean&quot;},\n\t\t[&quot;pos&quot;] = {},\n\t\t[&quot;t&quot;] = {alias_of = &quot;gloss&quot;},\n\t\t[&quot;tr&quot;] = {},\n\t\t[&quot;sc&quot;]\
      \ = {},\n\t\t[&quot;sort&quot;] = {},\n\t}\n\t\n\tlocal compat = false\n\t\n\tif frame:getParent().args[&quot;lang&quot;] then\n\t\tcompat = true\n\tend\n\t\n\tif compat then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;borrowing/lang&quot;)\n\t\t\
      params[&quot;lang&quot;] = table.remove(params, 1)\n\tend\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal lang = args[compat and &quot;lang&quot; or 1]\n\tlocal source = args[compat and 1\
      \ or 2]\n\tlocal sc = args[&quot;sc&quot;]\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\t\n\tsource =\n\t\trequire(&quot;Module:languages&quot;).getByCode(source)\
      \ or\n\t\trequire(&quot;Module:etymology languages&quot;).getByCode(source) or\n\t\trequire(&quot;Module:families&quot;).getByCode(source) or\n\t\terror(&quot;The language, family or etymology language code \\&quot;&quot; .. source .. &quot;\\&quot; is\
      \ not valid.&quot;)\n\t\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\treturn require(&quot;Module:etymology&quot;).format_borrowed(\n\
      \t\tlang,\n\t\t{lang = source, sc = sc, term = args[compat and 2 or 3], alt = args[&quot;alt&quot;], id = args[&quot;id&quot;], genders = {args[&quot;g&quot;]}, tr = args[&quot;tr&quot;], gloss = args[&quot;gloss&quot;], pos = args[&quot;pos&quot;], lit\
      \ = args[&quot;lit&quot;]},\n\t\targs[&quot;sort&quot;], args[&quot;nocap&quot;], args[&quot;notext&quot;], learned)\nend\n\nfunction export.calque(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = &quot;und&quot;},\n\t\t[2] = {list = true,\
      \ allow_holes = true},\n\t\t\n\t\t[&quot;alt&quot;] = {list = true, allow_holes = true},\n\t\t[&quot;gloss&quot;] = {list = true, allow_holes = true},\n\t\t[&quot;nocap&quot;] = {type = &quot;boolean&quot;},\n\t\t[&quot;notext&quot;] = {type = &quot;boolean&quot;},\n\
      \t\t[&quot;pos&quot;] = {list = true, allow_holes = true},\n\t\t[&quot;t&quot;] = {alias_of = &quot;gloss&quot;, list = true, allow_holes = true},\n\t\t[&quot;tr&quot;] = {list = true, allow_holes = true},\n\t\t[&quot;sort&quot;] = {},\n\t\t\n\t\t[&quot;etyl\
      \ lang&quot;] = {required = true},\n\t\t[&quot;etyl term&quot;] = {},\n\t\t[&quot;etyl t&quot;] = {},\n\t\t[&quot;etyl tr&quot;] = {},\n\t}\n\t\n\tlocal compat = false\n\t\n\tif frame:getParent().args[&quot;lang&quot;] then\n\t\tcompat = true\n\tend\n\t\
      \n\tif compat then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;calque/lang&quot;)\n\t\tparams[&quot;lang&quot;] = table.remove(params, 1)\n\tend\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\
      \t\n\tlocal lang = args[compat and &quot;lang&quot; or 1]\n\tlocal source = args[&quot;etyl lang&quot;]\n\tlocal sc = args[&quot;sc&quot;]\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot;\
      \ .. lang .. &quot;\\&quot; is not valid.&quot;)\n\t\n\tsource =\n\t\trequire(&quot;Module:languages&quot;).getByCode(source) or\n\t\trequire(&quot;Module:etymology languages&quot;).getByCode(source) or\n\t\terror(&quot;The language or etymology language\
      \ code \\&quot;&quot; .. source .. &quot;\\&quot; is not valid.&quot;)\n\t\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\tlocal\
      \ parts = {}\n\t\n\tfor i = 1, math.max(args[compat and 1 or 2].maxindex, args[&quot;alt&quot;].maxindex, args[&quot;gloss&quot;].maxindex, args[&quot;tr&quot;].maxindex) do\n\t\ttable.insert(parts, {\n\t\t\tterm = args[compat and 1 or 2][i],\n\t\t\talt\
      \ = args[&quot;alt&quot;][i],\n\t\t\ttr = args[&quot;tr&quot;][i],\n\t\t\tgloss = args[&quot;gloss&quot;][i],\n\t\t\tpos = args[&quot;pos&quot;][i],\n\t\t})\n\tend\n\t\n\treturn require(&quot;Module:etymology&quot;).calque(\n\t\tlang,\n\t\t{lang = source,\
      \ term = args[&quot;etyl term&quot;], tr = args[&quot;etyl tr&quot;], gloss = args[&quot;etyl t&quot;]},\n\t\tparts, args[&quot;sort&quot;], args[&quot;nocap&quot;], args[&quot;notext&quot;])\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:25.489Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aparameters&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=34460 t=1471300165375598
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:25 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1278.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1054 pass, cp3042 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 329457493, 1952101807, 1213992091
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4797340\" pageid=\"4797340\" ns=\"828\" title=\"Module:parameters\"><revisions><rev user=\"Kc kennylau\" timestamp=\"2016-01-24T10:35:50Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\n-- A helper function to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nlocal function plain(text)\n\treturn mw.ustring.gsub(text, &quot;([%^%$%(%)%%%.%[%]%*%+%-%?])&quot;,\
      \ &quot;%%%1&quot;)\nend\n\n-- A helper function that removes empty numeric indexes in a table,\n-- so that the values are tightly packed like in a normal Lua table.\nfunction export.remove_holes(list)\n\tlocal new_list = {}\n\t\n\tfor i = 1, list.maxindex\
      \ do\n\t\ttable.insert(new_list, list[i])\n\tend\n\t\n\treturn new_list\nend\n\nfunction export.process(args, params, return_unknown)\n\tlocal args_new = {}\n\t\n\t-- Process parameters for specific properties\n\tlocal required = {}\n\tlocal patterns =\
      \ {}\n\tlocal list_from_index = nil\n\t\n\tfor name, param in pairs(params) do\n\t\tif param.required then\n\t\t\trequired[name] = true\n\t\tend\n\t\t\n\t\tif param.list then\n\t\t\tif param.default ~= nil then\n\t\t\t\targs_new[type(name) == &quot;string&quot;\
      \ and mw.ustring.gsub(name, &quot;=&quot;, &quot;&quot;) or name] = {param.default, maxindex = 1}\n\t\t\telse\n\t\t\t\targs_new[type(name) == &quot;string&quot; and mw.ustring.gsub(name, &quot;=&quot;, &quot;&quot;) or name] = {maxindex = 0}\n\t\t\tend\n\
      \t\t\t\n\t\t\tif type(param.list) == &quot;string&quot; then\n\t\t\t\t-- If the list property is a string, then it represents the name\n\t\t\t\t-- to be used as the prefix for list items. This is for use with lists\n\t\t\t\t-- where the first item is a\
      \ numbered parameter and the\n\t\t\t\t-- subsequent ones are named, such as 1, pl2, pl3.\n\t\t\t\tif mw.ustring.match(param.list, &quot;=&quot;) then\n\t\t\t\t\tpatterns[&quot;^&quot; .. mw.ustring.gsub(plain(param.list), &quot;=&quot;, &quot;(%d+)&quot;)\
      \ .. &quot;$&quot;] = name\n\t\t\t\telse\n\t\t\t\t\tpatterns[&quot;^&quot; .. plain(param.list) .. &quot;(%d+)$&quot;] = name\n\t\t\t\tend\n\t\t\telseif type(name) == &quot;number&quot; then\n\t\t\t\t-- If the name is a number, then all indexed parameters\
      \ from\n\t\t\t\t-- this number onwards go in the list.\n\t\t\t\tlist_from_index = name\n\t\t\telse\n\t\t\t\tif mw.ustring.match(name, &quot;=&quot;) then\n\t\t\t\t\tpatterns[&quot;^&quot; .. mw.ustring.gsub(plain(name), &quot;=&quot;, &quot;(%d+)&quot;)\
      \ .. &quot;$&quot;] = mw.ustring.gsub(name, &quot;=&quot;, &quot;&quot;)\n\t\t\t\telse\n\t\t\t\t\tpatterns[&quot;^&quot; .. plain(name) .. &quot;(%d+)$&quot;] = mw.ustring.gsub(name, &quot;=&quot;, &quot;&quot;)\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\t\
      if mw.ustring.match(name, &quot;=&quot;) then\n\t\t\t\tparams[mw.ustring.gsub(name, &quot;=&quot;, &quot;&quot;)] = params[name]\n\t\t\t\tparams[name] = nil\n\t\t\tend\n\t\telseif param.default ~= nil then\n\t\t\targs_new[name] = param.default\n\t\tend\n\
      \tend\n\t\n\t-- Process the arguments\n\tlocal args_unknown = {}\n\t\n\tfor name, val in pairs(args) do\n\t\tlocal index = nil\n\t\t\n\t\tif type(name) == &quot;number&quot; then\n\t\t\tif list_from_index ~= nil and name &gt;= list_from_index then\n\t\t\
      \t\tindex = name - list_from_index + 1\n\t\t\t\tname = list_from_index\n\t\t\tend\n\t\telse\n\t\t\t-- Does this argument name match a pattern?\n\t\t\tfor pattern, pname in pairs(patterns) do\n\t\t\t\tindex = mw.ustring.match(name, pattern)\n\t\t\t\t\n\t\
      \t\t\t-- It matches, so store the parameter name and the\n\t\t\t\t-- numeric index extracted from the argument name.\n\t\t\t\tif index then\n\t\t\t\t\tindex = tonumber(index)\n\t\t\t\t\tname = pname\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\
      \t\n\t\t-- If no index was found, use 1 as the default index.\n\t\t-- This makes list parameters like g, g2, g3 put g at index 1.\n\t\tindex = index or 1\n\t\t\n\t\tlocal param = params[name]\n\t\t\n\t\t-- If the argument is not in the list of parameters,\
      \ trigger an error.\n\t\t-- return_unknown suppresses the error, and stores it in a separate list instead.\n\t\tif not param then\n\t\t\tif return_unknown then\n\t\t\t\targs_unknown[name] = val\n\t\t\telse\n\t\t\t\terror(&quot;The parameter \\&quot;&quot;\
      \ .. name .. &quot;\\&quot; is not used by this template.&quot;)\n\t\t\tend\n\t\telse\n\t\t\t-- Remove leading and trailing whitespace\n\t\t\tval = mw.text.trim(val)\n\t\t\t\n\t\t\t-- Empty string is equivalent to nil unless allow_empty is true.\n\t\t\t\
      if val == &quot;&quot; and not param.allow_empty then\n\t\t\t\tval = nil\n\t\t\tend\n\t\t\t\n\t\t\t-- Convert to proper type if necessary.\n\t\t\tif param.type == &quot;boolean&quot; then\n\t\t\t\tval = not (not val or val == &quot;&quot; or val == &quot;0&quot;\
      \ or val == &quot;no&quot; or val == &quot;n&quot; or val == &quot;false&quot;)\n\t\t\telseif param.type == &quot;number&quot; and val ~= nil then\n\t\t\t\tval = tonumber(val)\n\t\t\tend\n\t\t\t\n\t\t\t-- Can't use &quot;if val&quot; alone, because val\
      \ may be a boolean false.\n\t\t\tif val ~= nil then\n\t\t\t\t-- Mark it as no longer required, as it is present.\n\t\t\t\trequired[name] = nil\n\t\t\t\t\n\t\t\t\t-- Store the argument value.\n\t\t\t\tif param.list then\n\t\t\t\t\t-- If the parameter is\
      \ an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\t\targs_new[name][index] = val\n\t\t\t\t\t\t\n\t\t\t\t\t\t-- Store the highest index\
      \ we find.\n\t\t\t\t\t\targs_new[name].maxindex = math.max(index, args_new[name].maxindex)\n\t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\t\t\t\t\targs_new[param.alias_of][index]\
      \ = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest index we find.\n\t\t\t\t\t\t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of] = val\n\t\t\t\t\t\tend\n\
      \t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\t-- If the parameter is an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\t\targs_new[name] = val\n\
      \t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\t\t\t\t\targs_new[param.alias_of][1] = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest index we find.\n\t\t\t\t\t\
      \t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of] = val\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- The required table\
      \ should now be empty.\n\t-- If any entry remains, trigger an error, unless we're in the template namespace.\n\tif mw.title.getCurrentTitle().nsText ~= &quot;Template&quot; then\n\t\tfor name, param in pairs(required) do\n\t\t\terror(&quot;The parameter\
      \ \\&quot;&quot; .. name .. &quot;\\&quot; is required.&quot;)\n\t\tend\n\tend\n\t\n\t-- Remove holes in any list parameters if needed.\n\tfor name, val in pairs(args_new) do\n\t\tif type(val) == &quot;table&quot; and not params[name].allow_holes then\n\
      \t\t\targs_new[name] = export.remove_holes(val)\n\t\tend\n\tend\n\t\n\tif return_unknown then\n\t\treturn args_new, args_unknown\n\telse\n\t\treturn args_new\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:25.701Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=40203 t=1471300165583625
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:25 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1193.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1067 pass, cp3031 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 3134170453, 2016101655, 1213993386
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4453474\" pageid=\"4453474\" ns=\"828\" title=\"Module:languages\"><revisions><rev user=\"CodeCat\" timestamp=\"2016-06-04T12:21:42Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nlocal Language = {}\n\n\nfunction Language:getCode()\n\treturn self._code\nend\n\n\nfunction Language:getCanonicalName()\n\treturn self._rawData.canonicalName\nend\n\n\n-- Commented\
      \ out; I don't think anything uses this, the presence/absence of script errors should confirm\n--function Language:getAllNames()\n--\treturn self._rawData.names\n--end\n\n\nfunction Language:getOtherNames()\n\treturn self._rawData.otherNames or {}\nend\n\
      \n\nfunction Language:getType()\n\treturn self._rawData.type or &quot;regular&quot;\nend\n\n\nfunction Language:getWikimediaLanguages()\n\tif not self._wikimediaLanguageObjects then\n\t\tlocal m_wikimedia_languages = require(&quot;Module:wikimedia languages&quot;)\n\
      \t\tself._wikimediaLanguageObjects = {}\n\t\tlocal wikimedia_codes = self._rawData.wikimedia_codes or {self._code}\n\t\t\n\t\tfor _, wlangcode in ipairs(wikimedia_codes) do\n\t\t\ttable.insert(self._wikimediaLanguageObjects, m_wikimedia_languages.getByCode(wlangcode))\n\
      \t\tend\n\tend\n\t\n\treturn self._wikimediaLanguageObjects\nend\n\n\nfunction Language:getWikipediaArticle()\n\treturn self._rawData.wikipedia_article or self:getCategoryName()\nend\n\n\nfunction Language:getScripts()\n\tif not self._scriptObjects then\n\
      \t\tlocal m_scripts = require(&quot;Module:scripts&quot;)\n\t\tself._scriptObjects = {}\n\t\t\n\t\tfor _, sc in ipairs(self._rawData.scripts or {&quot;None&quot;}) do\n\t\t\ttable.insert(self._scriptObjects, m_scripts.getByCode(sc))\n\t\tend\n\tend\n\t\
      \n\treturn self._scriptObjects\nend\n\n\nfunction Language:getFamily()\n\tif self._rawData.family and not self._familyObject then\n\t\tself._familyObject = require(&quot;Module:families&quot;).getByCode(self._rawData.family)\n\tend\n\t\n\treturn self._familyObject\n\
      end\n\n\nfunction Language:getAncestors()\n\tif not self._ancestorObjects then\n\t\tself._ancestorObjects = {}\n\t\t\n\t\tif self._rawData.ancestors then\n\t\t\tfor _, ancestor in ipairs(self._rawData.ancestors) do\n\t\t\t\ttable.insert(self._ancestorObjects,\
      \ export.getByCode(ancestor) or require(&quot;Module:etymology languages&quot;).getByCode(ancestor))\n\t\t\tend\n\t\telse\n\t\t\tlocal fam = self:getFamily()\n\t\t\tlocal protoLang = fam and fam:getProtoLanguage() or nil\n\t\t\t\n\t\t\t-- For the case\
      \ where the current language is the proto-language\n\t\t\t-- of its family, we need to step up a level higher right from the start.\n\t\t\tif protoLang and protoLang:getCode() == self:getCode() then\n\t\t\t\tfam = fam:getFamily()\n\t\t\t\tprotoLang = fam\
      \ and fam:getProtoLanguage() or nil\n\t\t\tend\n\t\t\t\n\t\t\twhile not protoLang and not (not fam or fam:getCode() == &quot;qfa-not&quot;) do\n\t\t\t\tfam = fam:getFamily()\n\t\t\t\tprotoLang = fam and fam:getProtoLanguage() or nil\n\t\t\tend\n\t\t\t\n\
      \t\t\ttable.insert(self._ancestorObjects, protoLang)\n\t\tend\n\tend\n\t\n\treturn self._ancestorObjects\nend\n\nlocal function iterateOverAncestorTree(node, func)\n\tfor _, ancestor in ipairs(node:getAncestors()) do\n\t\tif ancestor then\n\t\t\tlocal\
      \ ret = func(ancestor) or iterateOverAncestorTree(ancestor, func)\n\t\t\tif ret then\n\t\t\t\treturn ret\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction Language:getAncestorChain()\n\tif not self._ancestorChain then\n\t\tself._ancestorChain = {}\n\t\tlocal\
      \ step = #self:getAncestors() == 1 and self:getAncestors()[1] or nil\n\t\t\n\t\twhile step do\n\t\t\ttable.insert(self._ancestorChain, 1, step)\n\t\t\tstep = #step:getAncestors() == 1 and step:getAncestors()[1] or nil\n\t\tend\n\tend\n\t\n\treturn self._ancestorChain\n\
      end\n\n\nfunction Language:hasAncestor(otherlang)\n\tlocal function compare(ancestor)\n\t\treturn ancestor:getCode() == otherlang:getCode()\n\tend\n\treturn iterateOverAncestorTree(self, compare) or false\nend\n\n\nfunction Language:getCategoryName()\n\
      \tlocal name = self._rawData.canonicalName\n\t\n\t-- If the name already has &quot;language&quot; in it, don't add it.\n\tif name:find(&quot;[Ll]anguage$&quot;) then\n\t\treturn name\n\telse\n\t\treturn name .. &quot; language&quot;\n\tend\nend\n\n\nfunction\
      \ Language:getStandardCharacters()\n\treturn self._rawData.standardChars\nend\n\n\nfunction Language:makeEntryName(text)\n\ttext = mw.ustring.gsub(text, &quot;^[¿¡]&quot;, &quot;&quot;)\n\ttext = mw.ustring.gsub(text, &quot;(.)[؟?!;՛՜ ՞ ՟？！।॥။၊་།]$&quot;,\
      \ &quot;%1&quot;)\n\t\n\tif self._rawData.entry_name then\n\t\tfor i, from in ipairs(self._rawData.entry_name.from) do\n\t\t\tlocal to = self._rawData.entry_name.to[i] or &quot;&quot;\n\t\t\ttext = mw.ustring.gsub(text, from, to)\n\t\tend\n\tend\n\t\n\t\
      return text\nend\n\n\nfunction Language:makeSortKey(name)\n\tname = mw.ustring.lower(name)\n\t\n\t-- Remove initial hyphens and *\n\tlocal hyphens_regex = &quot;^[-־ـ*]+(.)&quot;\n\tname = mw.ustring.gsub(name, hyphens_regex, &quot;%1&quot;)\n\n\t-- Remove\
      \ parentheses, as long as they are either preceded or followed by something\n\tname = mw.ustring.gsub(name, &quot;(.)[()]+&quot;, &quot;%1&quot;)\n\tname = mw.ustring.gsub(name, &quot;[()]+(.)&quot;, &quot;%1&quot;)\n\t\n\t-- If there are language-specific\
      \ rules to generate the key, use those\n\tif self._rawData.sort_key then\n\t\tfor i, from in ipairs(self._rawData.sort_key.from) do\n\t\t\tlocal to = self._rawData.sort_key.to[i] or &quot;&quot;\n\t\t\tname = mw.ustring.gsub(name, from, to)\n\t\tend\n\t\
      end\n\t\n\treturn mw.ustring.upper(name)\nend\n\n\nfunction Language:transliterate(text, sc, module_override)\n\tif not ((module_override or self._rawData.translit_module) and text) then\n\t\treturn nil\n\tend\n\t\n\tif module_override then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;module_override&quot;)\n\
      \tend\n\t\n\treturn require(&quot;Module:&quot; .. (module_override or self._rawData.translit_module)).tr(text, self:getCode(), sc and sc:getCode() or nil)\nend\n\n\nfunction Language:link_tr()\n\treturn self._rawData.link_tr and true or false\nend\n\n\
      \nfunction Language:toJSON()\n\tlocal entryNamePatterns = nil\n\t\n\tif self._rawData.entry_name then\n\t\tentryNamePatterns = {}\n\t\t\n\t\tfor i, from in ipairs(self._rawData.entry_name.from) do\n\t\t\tlocal to = self._rawData.entry_name.to[i] or &quot;&quot;\n\
      \t\t\ttable.insert(entryNamePatterns, {from = from, to = to})\n\t\tend\n\tend\n\t\n\tlocal ret = {\n\t\tancestors = self._rawData.ancestors,\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\
      \t\tentryNamePatterns = entryNamePatterns,\n\t\tfamily = self._rawData.family,\n\t\totherNames = self:getOtherNames(),\n\t\tscripts = self._rawData.scripts,\n\t\ttype = self:getType(),\n\t\twikimediaLanguages = self._rawData.wikimedia_codes,\n\t\t}\n\t\
      \n\treturn require(&quot;Module:JSON&quot;).toJSON(ret)\nend\n\n\n-- Do NOT use this method!\n-- All uses should be pre-approved on the talk page!\nfunction Language:getRawData()\n\treturn self._rawData\nend\n\nLanguage.__index = Language\n\n\nfunction\
      \ export.getDataModuleName(code)\n\tif code:find(&quot;^[a-z][a-z]$&quot;) then\n\t\treturn &quot;languages/data2&quot;\n\telseif code:find(&quot;^[a-z][a-z][a-z]$&quot;) then\n\t\tlocal prefix = code:sub(1, 1)\n\t\treturn &quot;languages/data3/&quot;\
      \ .. prefix\n\telseif code:find(&quot;^[a-z-]+$&quot;) then\n\t\treturn &quot;languages/datax&quot;\n\telse\n\t\treturn nil\n\tend\nend\n\n\nlocal function getRawLanguageData(code)\n\tlocal modulename = export.getDataModuleName(code)\n\treturn modulename\
      \ and mw.loadData(&quot;Module:&quot; .. modulename)[code] or nil\nend\n\n\nfunction export.makeObject(code, data)\n\tif data and data.deprecated then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;languages/deprecated&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;languages/deprecated/&quot;\
      \ .. code)\n\tend\n\t\n\treturn data and setmetatable({ _rawData = data, _code = code }, Language) or nil\nend\n\n\nfunction export.getByCode(code)\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.getByCanonicalName(name)\n\
      \tlocal code = mw.loadData(&quot;Module:languages/by name&quot;)[name]\n\t\n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.iterateAll()\n\tmw.incrementExpensiveFunctionCount()\n\
      \tlocal m_data = mw.loadData(&quot;Module:languages/alldata&quot;)\n\tlocal func, t, var = pairs(m_data)\n\t\n\treturn function()\n\t\tlocal code, data = func(t, var)\n\t\treturn export.makeObject(code, data)\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:25.992Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata2&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=35227 t=1471300165800733
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:25 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1282.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1068 pass, cp3041 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 1875556768, 2725066948, 1213994173
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4206184\" pageid=\"4206184\" ns=\"828\" title=\"Module:languages/data2\"><revisions><rev user=\"-sche\" timestamp=\"2016-08-14T19:22:25Z\" comment=\"merge and rename per rfm\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local u = mw.ustring.char\n\n-- UTF-8 encoded strings for some commonly-used diacritics\nlocal GRAVE     = u(0x0300)\nlocal ACUTE     = u(0x0301)\nlocal CIRC      = u(0x0302)\n\
      local TILDE     = u(0x0303)\nlocal MACRON    = u(0x0304)\nlocal BREVE     = u(0x0306)\nlocal DOTABOVE  = u(0x0307)\nlocal DIAER     = u(0x0308)\nlocal CARON     = u(0x030C)\nlocal DGRAVE    = u(0x030F)\nlocal INVBREVE  = u(0x0311)\nlocal DOTBELOW  = u(0x0323)\n\
      local RINGBELOW = u(0x0325)\nlocal CEDILLA   = u(0x0327)\n\n-- Puncuation to be used for standardChars field\nlocal PUNCTUATION = ' \\!\\#\\$\\%\\&amp;\\*\\+\\,\\-\\.\\/\\:\\;\\&lt;\\=\\&gt;\\?\\@\\^\\_\\`\\|\\~\\'\\(\\)'\n\nlocal m = {}\n\nm[&quot;aa&quot;]\
      \ = {\n\tcanonicalName = &quot;Afar&quot;,\n\totherNames = {&quot;Qafar&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cus&quot;,\n}\n\nm[&quot;ab&quot;] = {\n\tcanonicalName = &quot;Abkhaz&quot;,\n\totherNames = {&quot;Abkhazian&quot;, &quot;Abxazo&quot;},\n\
      \tscripts = {&quot;Cyrl&quot;, &quot;Geor&quot;, &quot;Latn&quot;},\n\tfamily = &quot;cau-abz&quot;,\n\ttranslit_module = &quot;ab-translit&quot;,\n\tentry_name = {\n\t\tfrom = {GRAVE, ACUTE},\n\t\tto   = {}} ,\n}\n\nm[&quot;ae&quot;] = {\n\tcanonicalName\
      \ = &quot;Avestan&quot;,\n\totherNames = {&quot;Zend&quot;, &quot;Old Bactrian&quot;},\n\tscripts = {&quot;Avst&quot;, &quot;Gujr&quot;},\n\tfamily = &quot;ira-eas&quot;,\n\ttranslit_module = &quot;Avst-translit&quot;,\n}\n\nm[&quot;af&quot;] = {\n\tcanonicalName\
      \ = &quot;Afrikaans&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Arab&quot;},\n\tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;nl&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;[äáâà]&quot;, &quot;[ëéêè]&quot;, &quot;[ïíîì]&quot;, &quot;[öóôò]&quot;, &quot;[ü\
      úûù]&quot;, &quot;[ÿýŷỳ]&quot;, &quot;^-&quot;, &quot;'&quot;},\n\t\tto   = {&quot;a&quot;\t , &quot;e&quot;\t, &quot;i&quot;\t, &quot;o&quot;\t, &quot;u&quot;  , &quot;y&quot; }} ,\n}\n\nm[&quot;ak&quot;] = {\n\tcanonicalName = &quot;Akan&quot;,\n\totherNames\
      \ = {&quot;Twi-Fante&quot;, &quot;Twi&quot;, &quot;Fante&quot;, &quot;Fanti&quot;, &quot;Asante&quot;, &quot;Akuapem&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-kwa&quot;,\n}\n\nm[&quot;am&quot;] = {\n\tcanonicalName = &quot;Amharic&quot;,\n\
      \tscripts = {&quot;Ethi&quot;},\n\tfamily = &quot;sem-eth&quot;,\n\ttranslit_module = &quot;Ethi-translit&quot;,\n}\n\nm[&quot;an&quot;] = {\n\tcanonicalName = &quot;Aragonese&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n\tancestors\
      \ = {&quot;roa-oan&quot;},\n}\n\nm[&quot;ar&quot;] = {\n\tcanonicalName = &quot;Arabic&quot;,\n\totherNames = {&quot;Modern Standard Arabic&quot;, &quot;Standard Arabic&quot;, &quot;Literary Arabic&quot;, &quot;Classical Arabic&quot;},\n\tscripts = {&quot;Arab&quot;,\
      \ &quot;Brai&quot;},\n\tfamily = &quot;sem-arb&quot;,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n\ttranslit_module\
      \ = &quot;ar-translit&quot;,\n}\n\nm[&quot;as&quot;] = {\n\tcanonicalName = &quot;Assamese&quot;,\n\tscripts = {&quot;Beng&quot;},\n\tfamily = &quot;inc&quot;,\n\tancestors = {&quot;pka&quot;},\n}\n\nm[&quot;av&quot;] = {\n\tcanonicalName = &quot;Avar&quot;,\n\
      \totherNames = {&quot;Avaric&quot;},\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;cau-nec&quot;,\n\tancestors = {&quot;oav&quot;},\n\ttranslit_module = &quot;av-translit&quot;,\n}\n\nm[&quot;ay&quot;] = {\n\tcanonicalName = &quot;Aymara&quot;,\n\t\
      otherNames = {&quot;Southern Aymara&quot;, &quot;Central Aymara&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;sai-aym&quot;,\n}\n\nm[&quot;az&quot;] = {\n\tcanonicalName = &quot;Azeri&quot;,\n\totherNames = {&quot;Azerbaijani&quot;, &quot;Azari&quot;,\
      \ &quot;Azeri Turkic&quot;, &quot;Azerbaijani Turkic&quot;, &quot;North Azerbaijani&quot;, &quot;South Azerbaijani&quot;},\n\tscripts = {&quot;Latn&quot;, &quot;Cyrl&quot;, &quot;fa-Arab&quot;},\n\tfamily = &quot;trk-ogz&quot;,\n}\n\nm[&quot;ba&quot;]\
      \ = {\n\tcanonicalName = &quot;Bashkir&quot;,\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;trk-kip&quot;,\n\ttranslit_module = &quot;ba-translit&quot;,\n}\n\nm[&quot;be&quot;] = {\n\tcanonicalName = &quot;Belarusian&quot;,\n\totherNames = {&quot;Belorussian&quot;,\
      \ &quot;Belarusan&quot;, &quot;Bielorussian&quot;, &quot;Byelorussian&quot;, &quot;Belarussian&quot;, &quot;White Russian&quot;},\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;zle&quot;,\n\ttranslit_module = &quot;be-translit&quot;,\n\tsort_key =\
      \ {\n\t\tfrom = {&quot;Ё&quot;, &quot;ё&quot;},\n\t\tto   = {&quot;Е&quot; , &quot;е&quot;}},\n\tentry_name = {\n\t\tfrom = {&quot;Ѐ&quot;, &quot;ѐ&quot;, GRAVE, ACUTE},\n\t\tto   = {&quot;Е&quot;, &quot;е&quot;}},\n}\n\nm[&quot;bg&quot;] = {\n\tcanonicalName\
      \ = &quot;Bulgarian&quot;,\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;zls&quot;,\n\ttranslit_module = &quot;bg-translit&quot;,\n\tentry_name = {\n\t\tfrom = {&quot;Ѐ&quot;, &quot;ѐ&quot;, &quot;Ѝ&quot;, &quot;ѝ&quot;, GRAVE, ACUTE},\n\t\tto   =\
      \ {&quot;Е&quot;, &quot;е&quot;, &quot;И&quot;, &quot;и&quot;}},\n}\n\nm[&quot;bh&quot;] = {\n\tcanonicalName = &quot;Bihari&quot;,\n\tscripts = {&quot;Deva&quot;},\n\tfamily = &quot;inc&quot;,\n\tancestors = {&quot;pka&quot;},\n}\n\nm[&quot;bi&quot;]\
      \ = {\n\tcanonicalName = &quot;Bislama&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;crp&quot;,\n\tancestors = {&quot;en&quot;},\n}\n\nm[&quot;bm&quot;] = {\n\tcanonicalName = &quot;Bambara&quot;,\n\totherNames = {&quot;Bamanankan&quot;},\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;dmn&quot;,\n}\n\nm[&quot;bn&quot;] = {\n\tcanonicalName = &quot;Bengali&quot;,\n\totherNames = {&quot;Bangla&quot;},\n\tscripts = {&quot;Beng&quot;},\n\tfamily = &quot;inc&quot;,\n\tancestors = {&quot;pka&quot;},\n\
      \ttranslit_module = &quot;bn-translit&quot;,\n}\n\nm[&quot;bo&quot;] = {\n\tcanonicalName = &quot;Tibetan&quot;,\n\totherNames = {&quot;Ü&quot;, &quot;Dbus&quot;},\n\tscripts = {&quot;Tibt&quot;},\n\tfamily = &quot;tbq&quot;,\n\tancestors = {&quot;xct&quot;},\n\
      \ttranslit_module = &quot;bo-translit&quot;,\n}\n\nm[&quot;br&quot;] = {\n\tcanonicalName = &quot;Breton&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cel-bry&quot;,\n\tancestors = {&quot;xbm&quot;},\n\tentry_name = {\n\t\tfrom = {&quot;[âà\
      ä]&quot;, &quot;[êèë]&quot;, &quot;[îìï]&quot;, &quot;[ôòö]&quot;, &quot;[ûùü]&quot;, CIRC, GRAVE, DIAER},\n\t\tto   = {&quot;a&quot;,     &quot;e&quot;,     &quot;i&quot;,     &quot;o&quot;,     &quot;u&quot;}},\n}\n\nm[&quot;ca&quot;] = {\n\tcanonicalName\
      \ = &quot;Catalan&quot;,\n\totherNames = {&quot;Valencian&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n\tancestors = {&quot;roa-oca&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;à&quot;, &quot;[èé]&quot;, &quot;[íï]&quot;, &quot;[ò\
      ó]&quot;, &quot;[úü]&quot;, &quot;ç&quot;, &quot;l·l&quot;},\n\t\tto   = {&quot;a&quot;, &quot;e&quot;   , &quot;i&quot;   , &quot;o&quot;   , &quot;u&quot;   , &quot;c&quot;, &quot;ll&quot; }} ,\n}\n\nm[&quot;ce&quot;] = {\n\tcanonicalName = &quot;Chechen&quot;,\n\
      \tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;cau-nkh&quot;,\n\ttranslit_module = &quot;ce-translit&quot;,\n\tentry_name = {\n\t\tfrom = {MACRON},\n\t\tto   = {}},\n}\n\nm[&quot;ch&quot;] = {\n\tcanonicalName = &quot;Chamorro&quot;,\n\totherNames =\
      \ {&quot;Chamoru&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-sus&quot;,\n}\n\nm[&quot;co&quot;] = {\n\tcanonicalName = &quot;Corsican&quot;,\n\totherNames = {&quot;Corsu&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n\
      }\n\nm[&quot;cr&quot;] = {\n\tcanonicalName = &quot;Cree&quot;,\n\tscripts = {&quot;Cans&quot;, &quot;Latn&quot;},\n\tfamily = &quot;alg&quot;,\n\ttranslit_module = &quot;cr-translit&quot;,\n}\n\nm[&quot;cs&quot;] = {\n\tcanonicalName = &quot;Czech&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;zlw&quot;,\n\tancestors = {&quot;zlw-ocs&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;á&quot;, &quot;é&quot;, &quot;í&quot;, &quot;ó&quot;, &quot;[úů]&quot;, &quot;ý&quot;},\n\t\tto   = {&quot;a&quot;, &quot;e&quot;,\
      \ &quot;i&quot;, &quot;o&quot;, &quot;u&quot;   , &quot;y&quot;}} ,\n}\n\nm[&quot;cu&quot;] = {\n\tcanonicalName = &quot;Old Church Slavonic&quot;,\n\totherNames = {&quot;Old Church Slavic&quot;},\n\tscripts = {&quot;Cyrs&quot;, &quot;Glag&quot;},\n\t\
      family = &quot;zls&quot;,\n\ttranslit_module = &quot;Cyrs-Glag-translit&quot;,\n\tentry_name = {\n\t\tfrom = {u(0x0484)}, -- kamora\n\t\tto   = {}},\n\tsort_key = {\n\t\tfrom = {&quot;оу&quot;, &quot;є&quot;},\n\t\tto   = {&quot;у&quot; , &quot;е&quot;}}\
      \ ,\n}\n\nm[&quot;cv&quot;] = {\n\tcanonicalName = &quot;Chuvash&quot;,\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;trk-ogr&quot;,\n\ttranslit_module = &quot;cv-translit&quot;,\n}\n\nm[&quot;cy&quot;] = {\n\tcanonicalName = &quot;Welsh&quot;,\n\t\
      scripts = {&quot;Latn&quot;},\n\tfamily = &quot;cel-bry&quot;,\n\tancestors = {&quot;wlm&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;[âáàä]&quot;, &quot;[êéèë]&quot;, &quot;[îíìï]&quot;, &quot;[ôóòö]&quot;, &quot;[ûúùü]&quot;, &quot;[ŵẃẁẅ]&quot;, &quot;[ŷ\
      ýỳÿ]&quot;, &quot;'&quot;},\n\t\tto   = {&quot;a&quot;\t , &quot;e&quot;\t , &quot;i&quot;\t , &quot;o&quot;\t , &quot;u&quot;\t , &quot;w&quot;\t , &quot;y&quot;\t }} ,\n}\n\nm[&quot;da&quot;] = {\n\tcanonicalName = &quot;Danish&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;gmq&quot;,\n\tancestors = {&quot;gmq-oda&quot;},\n}\n\nm[&quot;de&quot;] = {\n\tcanonicalName = &quot;German&quot;,\n\totherNames = {&quot;High German&quot;, &quot;New High German&quot;, &quot;Deutsch&quot;}, -- the last name is indeed\
      \ also used in English\n\tscripts = {&quot;Latn&quot;, &quot;Latf&quot;},\n\tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;gmh&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;[äàáâå]&quot;, &quot;[ëèéê]&quot;, &quot;[ïìíî]&quot;, &quot;[öòóô]&quot;, &quot;[ü\
      ùúû]&quot;, &quot;ß&quot; },\n\t\tto   = {&quot;a&quot;\t  , &quot;e&quot;\t , &quot;i&quot;\t , &quot;o&quot;\t , &quot;u&quot;\t , &quot;ss&quot;}} ,\n}\n\nm[&quot;dv&quot;] = {\n\tcanonicalName = &quot;Dhivehi&quot;,\n\totherNames = {&quot;Divehi&quot;,\
      \ &quot;Mahal&quot;, &quot;Mahl&quot;, &quot;Maldivian&quot;},\n\tscripts = {&quot;Thaa&quot;},\n\tfamily = &quot;inc&quot;,\n\tancestors = {&quot;pmh&quot;},\n\ttranslit_module = &quot;dv-translit&quot;,\n}\n\nm[&quot;dz&quot;] = {\n\tcanonicalName =\
      \ &quot;Dzongkha&quot;,\n\tscripts = {&quot;Tibt&quot;},\n\tfamily = &quot;tbq&quot;,\n\tancestors = {&quot;xct&quot;},\n\ttranslit_module = &quot;bo-translit&quot;,\n}\n\nm[&quot;ee&quot;] = {\n\tcanonicalName = &quot;Ewe&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;alv&quot;,\n}\n\nm[&quot;el&quot;] = {\n\tcanonicalName = &quot;Greek&quot;,\n\totherNames = {&quot;Modern Greek&quot;, &quot;Neo-Hellenic&quot;},\n\tscripts = {&quot;Grek&quot;, &quot;Brai&quot;},\n\tfamily = &quot;grk&quot;,\n\tancestors\
      \ = {&quot;grc&quot;},\n\ttranslit_module = &quot;el-translit&quot;,\n\tsort_key = {  -- Keep this synchronized with grc, cpg, pnt\n\t\tfrom = {&quot;[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇ]&quot;, &quot;[έὲἐἔἒἑἕἓ]&quot;, &quot;[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗ]&quot;, &quot;[ί\
      ὶῖἰἴἲἶἱἵἳἷϊΐῒῗ]&quot;, &quot;[όὸὀὄὂὁὅὃ]&quot;, &quot;[ύὺῦὐὔὒὖὑὕὓὗϋΰῢῧ]&quot;, &quot;[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧ]&quot;, &quot;ῥ&quot;, &quot;ς&quot;},\n\t\tto   = {&quot;α&quot;\t\t\t\t\t\t, &quot;ε&quot;\t\t , &quot;η&quot;\t\t\t\t\t\t, &quot;ι&quot;\t\t\
      \t\t, &quot;ο&quot;\t\t , &quot;υ&quot;\t\t\t\t, &quot;ω&quot;\t\t\t\t\t\t, &quot;ρ&quot;, &quot;σ&quot;}} ,\n}\n\nm[&quot;en&quot;] = {\n\tcanonicalName = &quot;English&quot;,\n\totherNames = {&quot;Modern English&quot;, &quot;New English&quot;, &quot;Hawaiian\
      \ Creole English&quot;, &quot;Hawai'ian Creole English&quot;, &quot;Hawaiian Creole&quot;, &quot;Hawai'ian Creole&quot;, &quot;Polari&quot;, &quot;Yinglish&quot;}, -- all but the first three are names and alt names of subsumed dialects which once had ISO\
      \ codes\n\tscripts = {&quot;Latn&quot;, &quot;Brai&quot;, &quot;Shaw&quot;, &quot;Dsrt&quot;}, -- last two are rare but probably attested; entries in them might require community approval, but it's good for the script codes not to be orphans\n\tfamily\
      \ = &quot;gmw&quot;,\n\tancestors = {&quot;enm&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;[äàáâåā]&quot;, &quot;[ëèéêē]&quot;, &quot;[ïìíîī]&quot;, &quot;[öòóôō]&quot;, &quot;[üùúûū]&quot;, &quot;æ&quot; , &quot;œ&quot; , &quot;[çč]&quot;, &quot;ñ&quot;,\
      \ &quot;'&quot;},\n\t\tto   = {&quot;a&quot;       , &quot;e&quot;      , &quot;i&quot;      , &quot;o&quot;      , &quot;u&quot;      , &quot;ae&quot;, &quot;oe&quot;, &quot;c&quot;   , &quot;n&quot;}},\n\twikimedia_codes = {&quot;en&quot;, &quot;simple&quot;},\n\
      \tstandardChars = &quot;A-Za-z0-9&quot; .. PUNCTUATION .. u(0x2800) .. &quot;-&quot; .. u(0x28FF)\n}\n\nm[&quot;eo&quot;] = {\n\tcanonicalName = &quot;Esperanto&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;art&quot;,\n\tsort_key = {\n\t\t\
      from = {&quot;[áà]&quot;, &quot;[éè]&quot;, &quot;[íì]&quot;, &quot;[óò]&quot;, &quot;[úù]&quot;, &quot;[ĉ]&quot;, &quot;[ĝ]&quot;, &quot;[ĥ]&quot;, &quot;[ĵ]&quot;, &quot;[ŝ]&quot;, &quot;[ŭ]&quot;},\n\t\tto   = {&quot;a&quot;\t   , &quot;e&quot;  , &quot;i&quot;\
      \  , &quot;o&quot;  , &quot;u&quot;, &quot;cĉ&quot;, &quot;gĉ&quot;, &quot;hĉ&quot;, &quot;jĉ&quot;, &quot;sĉ&quot;, &quot;uĉ&quot;}} ,\n}\n\nm[&quot;es&quot;] = {\n\tcanonicalName = &quot;Spanish&quot;,\n\totherNames = {&quot;Castilian&quot;, &quot;Amazonian\
      \ Spanish&quot;, &quot;Amazonic Spanish&quot;, &quot;Loreto-Ucayali Spanish&quot;},\n\tscripts = {&quot;Latn&quot;, &quot;Brai&quot;},\n\tfamily = &quot;roa&quot;,\n\tancestors = {&quot;osp&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;á&quot;, &quot;é&quot;,\
      \ &quot;í&quot;, &quot;ó&quot;, &quot;[úü]&quot;, &quot;ç&quot;, &quot;ñ&quot;},\n\t\tto   = {&quot;a&quot;, &quot;e&quot;, &quot;i&quot;, &quot;o&quot;, &quot;u&quot;   , &quot;c&quot;, &quot;n&quot;}},\n\tstandardChars = &quot;A-VXYZa-vxyz0-9ÁáÉéÍíÓó\
      ÚúÑñ¿¡&quot; .. PUNCTUATION\n}\n\nm[&quot;et&quot;] = {\n\tcanonicalName = &quot;Estonian&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;fiu-fin&quot;,\n}\n\nm[&quot;eu&quot;] = {\n\tcanonicalName = &quot;Basque&quot;,\n\totherNames = {&quot;Euskara&quot;},\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;euq&quot;,\n}\n\nm[&quot;fa&quot;] = {\n\tcanonicalName = &quot;Persian&quot;,\n\totherNames = {&quot;Farsi&quot;, &quot;New Persian&quot;, &quot;Modern Persian&quot;, &quot;Western Persian&quot;, &quot;Iranian\
      \ Persian&quot;, &quot;Eastern Persian&quot;, &quot;Dari&quot;, &quot;Aimaq&quot;, &quot;Aimak&quot;, &quot;Aymaq&quot;, &quot;Eimak&quot;},\n\tscripts = {&quot;fa-Arab&quot;},\n\tfamily = &quot;ira-wes&quot;,\n\tancestors = {&quot;pal&quot;},\n\tentry_name\
      \ = {\n\t\tfrom = {u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652)},\n\t\tto   = {}} ,\n}\n\nm[&quot;ff&quot;] = {\n\tcanonicalName = &quot;Fula&quot;,\n\totherNames = {&quot;Adamawa Fulfulde&quot;, &quot;Bagirmi Fulfulde&quot;, &quot;Borgu Fulfulde&quot;,\
      \ &quot;Central-Eastern Niger Fulfulde&quot;, &quot;Fulani&quot;, &quot;Fulfulde&quot;, &quot;Maasina Fulfulde&quot;, &quot;Nigerian Fulfulde&quot;, &quot;Pular&quot;, &quot;Pulaar&quot;, &quot;Western Niger Fulfulde&quot;}, -- Maasina, etc are dialects,\
      \ subsumed into this code\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-sng&quot;,\n}\n\nm[&quot;fi&quot;] = {\n\tcanonicalName = &quot;Finnish&quot;,\n\totherNames = {&quot;Suomi&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;fiu-fin&quot;,\n\
      \tentry_name = {\n\t\tfrom = {&quot;ˣ&quot;},  -- Used to indicate gemination of the next consonant\n\t\tto   = {}},\n\tsort_key = {\n\t\tfrom = {&quot;[áàâã]&quot;, &quot;[éèêẽ]&quot;, &quot;[íìîĩ]&quot;, &quot;[óòôõ]&quot;, &quot;[úùûũ]&quot;, &quot;[ý\
      ỳŷüű]&quot;, &quot;[øõő]&quot;, &quot;æ&quot; , &quot;œ&quot; , &quot;[čç]&quot;, &quot;š&quot;, &quot;ž&quot;, &quot;ß&quot; , &quot;[':]&quot;},\n\t\tto   = {&quot;a&quot;\t , &quot;e&quot;\t , &quot;i&quot;\t , &quot;o&quot;\t , &quot;u&quot;\t ,  &quot;y&quot;\t\
      \ , &quot;ö&quot;\t, &quot;ae&quot;, &quot;oe&quot;, &quot;c&quot;   , &quot;s&quot;, &quot;z&quot;, &quot;ss&quot;}} ,\n}\n\nm[&quot;fj&quot;] = {\n\tcanonicalName = &quot;Fijian&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-occ&quot;,\n\
      }\n\nm[&quot;fo&quot;] = {\n\tcanonicalName = &quot;Faroese&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmq&quot;,\n\tancestors = {&quot;non&quot;},\n}\n\nm[&quot;fr&quot;] = {\n\tcanonicalName = &quot;French&quot;,\n\totherNames = {&quot;Modern\
      \ French&quot;},\n\tscripts = {&quot;Latn&quot;, &quot;Brai&quot;},\n\tfamily = &quot;roa&quot;,\n\tancestors = {&quot;frm&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;[áàâä]&quot;, &quot;[éèêë]&quot;, &quot;[íìîï]&quot;, &quot;[óòôö]&quot;, &quot;[úùûü\
      ]&quot;, &quot;[ýỳŷÿ]&quot;, &quot;ç&quot;, &quot;æ&quot; , &quot;œ&quot; , &quot;'&quot;},\n\t\tto   = {&quot;a&quot;\t , &quot;e&quot;\t , &quot;i&quot;\t , &quot;o&quot;\t , &quot;u&quot;\t , &quot;y&quot;\t , &quot;c&quot;, &quot;ae&quot;, &quot;oe&quot;}},\n\
      \tstandardChars = &quot;A-Za-z0-9ÀÂÇÉÈÊËÎÏÔŒÛÙÜàâçéèêëîïôœûùü&quot; .. PUNCTUATION\n}\n\nm[&quot;fy&quot;] = {\n\tcanonicalName = &quot;West Frisian&quot;,\n\totherNames = {&quot;Western Frisian&quot;, &quot;Frisian&quot;},\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;gmw-fri&quot;,\n\tancestors = {&quot;ofs&quot;},\n}\n\nm[&quot;ga&quot;] = {\n\tcanonicalName = &quot;Irish&quot;,\n\totherNames = {&quot;Irish Gaelic&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cel-gae&quot;,\n\tancestors\
      \ = {&quot;mga&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;á&quot;, &quot;é&quot;, &quot;í&quot;, &quot;ó&quot;, &quot;ú&quot;, &quot;ý&quot;, &quot;ḃ&quot; , &quot;ċ&quot; , &quot;ḋ&quot; , &quot;ḟ&quot; , &quot;ġ&quot; , &quot;ṁ&quot; , &quot;ṗ&quot;\
      \ , &quot;ṡ&quot; , &quot;ṫ&quot; },\n\t\tto   = {&quot;a&quot;, &quot;e&quot;, &quot;i&quot;, &quot;o&quot;, &quot;u&quot;, &quot;y&quot;, &quot;bh&quot;, &quot;ch&quot;, &quot;dh&quot;, &quot;fh&quot;, &quot;gh&quot;, &quot;mh&quot;, &quot;ph&quot;,\
      \ &quot;sh&quot;, &quot;th&quot;}} ,\n}\n\nm[&quot;gd&quot;] = {\n\tcanonicalName = &quot;Scottish Gaelic&quot;,\n\totherNames = {&quot;Gàidhlig&quot;, &quot;Highland Gaelic&quot;, &quot;Scots Gaelic&quot;, &quot;Scottish&quot;},\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;cel-gae&quot;,\n\tancestors = {&quot;mga&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;[áà]&quot;, &quot;[éè]&quot;, &quot;[íì]&quot;, &quot;[óò]&quot;, &quot;[úù]&quot;, &quot;[ýỳ]&quot;},\n\t\tto   = {&quot;a&quot;   , &quot;e&quot;   ,\
      \ &quot;i&quot;   , &quot;o&quot;   , &quot;u&quot;   , &quot;y&quot;   }} ,\n}\n\nm[&quot;gl&quot;] = {\n\tcanonicalName = &quot;Galician&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n\tancestors = {&quot;roa-opt&quot;},\n\tsort_key\
      \ = {\n\t\tfrom = {&quot;á&quot;, &quot;é&quot;, &quot;í&quot;, &quot;ó&quot;, &quot;ú&quot;},\n\t\tto   = {&quot;a&quot;, &quot;e&quot;, &quot;i&quot;, &quot;o&quot;, &quot;u&quot;}} ,\n}\n\nm[&quot;gn&quot;] = {\n\tcanonicalName = &quot;Guaraní&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;tup&quot;,\n}\n\nm[&quot;gu&quot;] = {\n\tcanonicalName = &quot;Gujarati&quot;,\n\tscripts = {&quot;Gujr&quot;},\n\tfamily = &quot;inc&quot;,\n\tancestors = {&quot;inc-ogu&quot;},\n\ttranslit_module = &quot;gu-translit&quot;,\n\
      }\n\nm[&quot;gv&quot;] = {\n\tcanonicalName = &quot;Manx&quot;,\n\totherNames = {&quot;Manx Gaelic&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cel-gae&quot;,\n\tancestors = {&quot;mga&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;ç&quot;, &quot;-&quot;},\n\
      \t\tto   = {&quot;c&quot;}} ,\n}\n\nm[&quot;ha&quot;] = {\n\tcanonicalName = &quot;Hausa&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Arab&quot;},\n\tfamily = &quot;cdc-wst&quot;,\n}\n\nm[&quot;he&quot;] = {\n\tcanonicalName = &quot;Hebrew&quot;,\n\totherNames\
      \ = {&quot;Ivrit&quot;},\n\tscripts = {&quot;Hebr&quot;, &quot;Phnx&quot;, &quot;Brai&quot;},\n\tfamily = &quot;sem-can&quot;,\n\tentry_name = {\n\t\tfrom = {&quot;[&quot; .. u(0x0591) .. &quot;-&quot; .. u(0x05BD) .. u(0x05BF) .. &quot;-&quot; .. u(0x05C5)\
      \ .. u(0x05C7) .. &quot;]&quot;},\n\t\tto   = {}} ,\n}\n\nm[&quot;hi&quot;] = {\n\tcanonicalName = &quot;Hindi&quot;,\n\tscripts = {&quot;Deva&quot;},\n\tfamily = &quot;inc&quot;,\n\tancestors = {&quot;inc-ohi&quot;},\n\ttranslit_module = &quot;hi-translit&quot;,\n\
      }\n\nm[&quot;ho&quot;] = {\n\tcanonicalName = &quot;Hiri Motu&quot;,\n\totherNames = {&quot;Pidgin Motu&quot;, &quot;Police Motu&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;crp&quot;,\n\tancestors = {&quot;meu&quot;},\n}\n\nm[&quot;ht&quot;]\
      \ = {\n\tcanonicalName = &quot;Haitian Creole&quot;,\n\totherNames = {&quot;Creole&quot;, &quot;Haitian&quot;, &quot;Kreyòl&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;crp&quot;,\n}\n\nm[&quot;hu&quot;] = {\n\tcanonicalName = &quot;Hungarian&quot;,\n\
      \totherNames = {&quot;Magyar&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;fiu-ugr&quot;,\n\tancestors = {&quot;ohu&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;á&quot;, &quot;é&quot;, &quot;í&quot;, &quot;ó&quot;, &quot;ú&quot;, &quot;ő&quot;,\
      \ &quot;ű&quot;},\n\t\tto   = {&quot;a&quot;, &quot;e&quot;, &quot;i&quot;, &quot;o&quot;, &quot;u&quot;, &quot;ö&quot;, &quot;ü&quot;}} ,\n}\n\nm[&quot;hy&quot;] = {\n\tcanonicalName = &quot;Armenian&quot;,\n\totherNames = {&quot;Modern Armenian&quot;,\
      \ &quot;Eastern Armenian&quot;, &quot;Western Armenian&quot;},\n\tscripts = {&quot;Armn&quot;, &quot;Brai&quot;},\n\tfamily = &quot;hyx&quot;,\n\tancestors = {&quot;axm&quot;},\n\ttranslit_module = &quot;Armn-translit&quot;,\n\tsort_key = {\n\t\tfrom =\
      \ {&quot;ու&quot;, &quot;և&quot;, &quot;եւ&quot;},\n\t\tto   = {&quot;ւ&quot;, &quot;եվ&quot;, &quot;եվ&quot;}},\n\tentry_name = {\n\t\tfrom = {&quot;՞&quot;, &quot;՜&quot;, &quot;՛&quot;, &quot;՟&quot;, &quot;և&quot;, &quot;&lt;sup&gt;յ&lt;/sup&gt;&quot;,\
      \ &quot;&lt;sup&gt;ի&lt;/sup&gt;&quot;},\n\t\tto   = {&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;եւ&quot;, &quot;յ&quot;, &quot;ի&quot;}} ,\n}\n\nm[&quot;hz&quot;] = {\n\tcanonicalName = &quot;Herero&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;ia&quot;] = {\n\tcanonicalName = &quot;Interlingua&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;art&quot;,\n}\n\nm[&quot;id&quot;] = {\n\tcanonicalName = &quot;Indonesian&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;poz-mly&quot;,\n\tancestors = {&quot;ms&quot;},\n}\n\nm[&quot;ie&quot;] = {\n\tcanonicalName = &quot;Interlingue&quot;,\n\totherNames = {&quot;Occidental&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;art&quot;,\n}\n\nm[&quot;ig&quot;]\
      \ = {\n\tcanonicalName = &quot;Igbo&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;nic-bco&quot;,\n}\n\nm[&quot;ii&quot;] = {\n\tcanonicalName = &quot;Sichuan Yi&quot;,\n\totherNames = {&quot;Nuosu&quot;, &quot;Nosu&quot;, &quot;Northern Yi&quot;,\
      \ &quot;Liangshan Yi&quot;},\n\tscripts = {&quot;Yiii&quot;},\n\tfamily = &quot;tbq-lol&quot;,\n}\n\nm[&quot;ik&quot;] = {\n\tcanonicalName = &quot;Inupiak&quot;,\n\totherNames = {&quot;Inupiaq&quot;, &quot;Iñupiaq&quot;, &quot;Inupiatun&quot;},\n\tscripts\
      \ = {&quot;Latn&quot;},\n\tfamily = &quot;esx-inu&quot;,\n}\n\nm[&quot;io&quot;] = {\n\tcanonicalName = &quot;Ido&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;art&quot;,\n}\n\nm[&quot;is&quot;] = {\n\tcanonicalName = &quot;Icelandic&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmq&quot;,\n\tancestors = {&quot;non&quot;},\n}\n\nm[&quot;it&quot;] = {\n\tcanonicalName = &quot;Italian&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n\tsort_key = {\n\t\tfrom =\
      \ {&quot;[àáâäå]&quot;, &quot;[èéêë]&quot;, &quot;[ìíîï]&quot;, &quot;[òóôö]&quot;, &quot;[ùúûü]&quot;},\n\t\tto   = {&quot;a&quot;\t  , &quot;e&quot;\t , &quot;i&quot;\t , &quot;o&quot;\t , &quot;u&quot;\t }} ,\n}\n\nm[&quot;iu&quot;] = {\n\tcanonicalName\
      \ = &quot;Inuktitut&quot;,\n\totherNames = {&quot;Eastern Canadian Inuktitut&quot;, &quot;Eastern Canadian Inuit&quot;, &quot;Western Canadian Inuktitut&quot;, &quot;Western Canadian Inuit&quot;, &quot;Western Canadian Inuktun&quot;, &quot;Inuinnaq&quot;,\
      \ &quot;Inuinnaqtun&quot;, &quot;Inuvialuk&quot;, &quot;Inuvialuktun&quot;, &quot;Nunavimmiutit&quot;, &quot;Nunatsiavummiut&quot;, &quot;Aivilimmiut&quot;, &quot;Natsilingmiut&quot;, &quot;Kivallirmiut&quot;, &quot;Siglit&quot;, &quot;Siglitun&quot;},\n\
      \tscripts = {&quot;Cans&quot;, &quot;Latn&quot;},\n\tfamily = &quot;esx-inu&quot;,\n\ttranslit_module = &quot;iu-translit&quot;,\n}\n\nm[&quot;ja&quot;] = {\n\tcanonicalName = &quot;Japanese&quot;,\n\totherNames = {&quot;Modern Japanese&quot;, &quot;Nipponese&quot;,\
      \ &quot;Nihongo&quot;},\n\tscripts = {&quot;Jpan&quot;, &quot;Latn&quot;, &quot;Hira&quot;, &quot;Brai&quot;},\n\tfamily = &quot;jpx&quot;,\n\tancestors = {&quot;ojp&quot;},\n}\n\nm[&quot;jv&quot;] = {\n\tcanonicalName = &quot;Javanese&quot;,\n\tscripts\
      \ = {&quot;Latn&quot;, &quot;Java&quot;},\n\tfamily = &quot;poz-sus&quot;,\n\ttranslit_module = &quot;jv-translit&quot;,\n\tancestors = {&quot;kaw&quot;},\n\tlink_tr = true,\n}\n\nm[&quot;ka&quot;] = {\n\tcanonicalName = &quot;Georgian&quot;,\n\totherNames\
      \ = {&quot;Kartvelian&quot;},\n\tscripts = {&quot;Geor&quot;, &quot;Geok&quot;},\n\tfamily = &quot;ccs-gzn&quot;,\n\tancestors = {&quot;oge&quot;},\n\ttranslit_module = &quot;Geor-translit&quot;,\n\tentry_name = {\n\t\tfrom = {&quot;̂&quot;},\n\t\tto \
      \  = {&quot;&quot;}},\n}\n\nm[&quot;kg&quot;] = {\n\tcanonicalName = &quot;Kongo&quot;,\n\totherNames = {&quot;Kikongo&quot;, &quot;Koongo&quot;, &quot;Laari&quot;, &quot;San Salvador Kongo&quot;, &quot;Yombe&quot;},\n\tscripts = {&quot;Latn&quot;},\n\t\
      family = &quot;bnt&quot;,\n}\n\nm[&quot;ki&quot;] = {\n\tcanonicalName = &quot;Kikuyu&quot;,\n\totherNames = {&quot;Gikuyu&quot;, &quot;Gĩkũyũ&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;kj&quot;] = {\n\tcanonicalName\
      \ = &quot;Kwanyama&quot;,\n\totherNames = {&quot;Kuanyama&quot;, &quot;Oshikwanyama&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;kk&quot;] = {\n\tcanonicalName = &quot;Kazakh&quot;,\n\tscripts = {&quot;Cyrl&quot;,\
      \ &quot;Latn&quot;, &quot;Arab&quot;, &quot;kk-Arab&quot;},\n\tfamily = &quot;trk-kip&quot;,\n\ttranslit_module = &quot;kk-translit&quot;,\n}\n\nm[&quot;kl&quot;] = {\n\tcanonicalName = &quot;Greenlandic&quot;,\n\totherNames = {&quot;Kalaallisut&quot;},\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;esx-inu&quot;,\n}\n\nm[&quot;km&quot;] = {\n\tcanonicalName = &quot;Khmer&quot;,\n\totherNames = {&quot;Cambodian&quot;},\n\tscripts = {&quot;Khmr&quot;},\n\tfamily = &quot;mkh&quot;,\n\tancestors = {&quot;mkh-mkm&quot;},\n\
      \ttranslit_module = &quot;km-translit&quot;,\n}\n\nm[&quot;kn&quot;] = {\n\tcanonicalName = &quot;Kannada&quot;,\n\tscripts = {&quot;Knda&quot;},\n\tfamily = &quot;dra&quot;,\n\ttranslit_module = &quot;kn-translit&quot;,\n}\n\nm[&quot;ko&quot;] = {\n\t\
      canonicalName = &quot;Korean&quot;,\n\totherNames = {&quot;Modern Korean&quot;},\n\tscripts = {&quot;Kore&quot;, &quot;Brai&quot;},\n\tfamily = &quot;qfa-kor&quot;,\n\tancestors = {&quot;okm&quot;},\n\ttranslit_module = &quot;ko-translit&quot;,\n}\n\n\
      m[&quot;kr&quot;] = {\n\tcanonicalName = &quot;Kanuri&quot;,\n\totherNames = {&quot;Kanembu&quot;, &quot;Bilma Kanuri&quot;, &quot;Central Kanuri&quot;, &quot;Manga Kanuri&quot;, &quot;Tumari Kanuri&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily =\
      \ &quot;ssa&quot;,\n}\n\nm[&quot;ks&quot;] = {\n\tcanonicalName = &quot;Kashmiri&quot;,\n\tscripts = {&quot;ks-Arab&quot;, &quot;Deva&quot;},\n\tfamily = &quot;inc-dar&quot;,\n}\n\nm[&quot;ku&quot;] = {\n\tcanonicalName = &quot;Kurdish&quot;,\n\tscripts\
      \ = {&quot;Latn&quot;, &quot;ku-Arab&quot;, &quot;Armn&quot;, &quot;Cyrl&quot;},\n\tfamily = &quot;ira-wes&quot;,\n}\n\nm[&quot;kw&quot;] = {\n\tcanonicalName = &quot;Cornish&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cel-bry&quot;,\n\t\
      ancestors = {&quot;cnx&quot;},\n}\n\nm[&quot;ky&quot;] = {\n\tcanonicalName = &quot;Kyrgyz&quot;,\n\totherNames = {&quot;Kirghiz&quot;, &quot;Kirgiz&quot;},\n\tscripts = {&quot;Cyrl&quot;, &quot;Latn&quot;, &quot;Arab&quot;},\n\tfamily = &quot;trk-kip&quot;,\n\
      \ttranslit_module = &quot;ky-translit&quot;,\n}\n\nm[&quot;la&quot;] = {\n\tcanonicalName = &quot;Latin&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;itc&quot;,\n\tancestors = {&quot;itc-ola&quot;},\n\tentry_name = {\n\t\tfrom = {&quot;[ĀĂ\
      ]&quot;, &quot;[āă]&quot;, &quot;[ĒĔ]&quot;, &quot;[ēĕë]&quot;, &quot;[ĪĬÏ]&quot;, &quot;[īĭï]&quot;, &quot;[ŌŎ]&quot;, &quot;[ōŏ]&quot;, &quot;[ŪŬÜ]&quot;, &quot;[ūŭü]&quot;, &quot;Ȳ&quot;, &quot;ȳ&quot;, MACRON, BREVE, DIAER},\n\t\tto   = {&quot;A&quot;,\
      \ &quot;a&quot;, &quot;E&quot;, &quot;e&quot;, &quot;I&quot;, &quot;i&quot;, &quot;O&quot;, &quot;o&quot;, &quot;U&quot;, &quot;u&quot;, &quot;Y&quot;, &quot;y&quot;}},\n}\n\nm[&quot;lb&quot;] = {\n\tcanonicalName = &quot;Luxembourgish&quot;,\n\tscripts\
      \ = {&quot;Latn&quot;},\n\tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;gmh&quot;},\n}\n\nm[&quot;lg&quot;] = {\n\tcanonicalName = &quot;Luganda&quot;,\n\totherNames = {&quot;Ganda&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n\
      }\n\nm[&quot;li&quot;] = {\n\tcanonicalName = &quot;Limburgish&quot;,\n\totherNames = {&quot;Limburgan&quot;, &quot;Limburgian&quot;, &quot;Limburgic&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;dum&quot;},\n\
      }\n\nm[&quot;ln&quot;] = {\n\tcanonicalName = &quot;Lingala&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;lo&quot;] = {\n\tcanonicalName = &quot;Lao&quot;,\n\totherNames = {&quot;Laotian&quot;},\n\tscripts = {&quot;Laoo&quot;},\n\
      \tfamily = &quot;tai-swe&quot;,\n\ttranslit_module = &quot;lo-translit&quot;,\n}\n\nm[&quot;lt&quot;] = {\n\tcanonicalName = &quot;Lithuanian&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bat&quot;,\n\tancestors = {&quot;olt&quot;},\n\tentry_name\
      \ = {\n\t\tfrom = {&quot;[áãà]&quot;, &quot;[ÁÃÀ]&quot;, &quot;[éẽè]&quot;, &quot;[ÉẼÈ]&quot;, &quot;[íĩì]&quot;, &quot;[ÍĨÌ]&quot;, &quot;[ýỹ]&quot;, &quot;[ÝỸ]&quot;, &quot;ñ&quot;, &quot;[óõò]&quot;, &quot;[ÓÕÒ]&quot;, &quot;[úũù]&quot;, &quot;[ÚŨÙ\
      ]&quot;, ACUTE, GRAVE, TILDE},\n\t\tto   = {&quot;a&quot;,       &quot;A&quot;,     &quot;e&quot;,     &quot;E&quot;,     &quot;i&quot;,     &quot;I&quot;,     &quot;y&quot;,   &quot;Y&quot;,   &quot;n&quot;,   &quot;o&quot;,    &quot;O&quot;,     &quot;u&quot;,\
      \      &quot;U&quot;}} ,\n}\n\nm[&quot;lu&quot;] = {\n\tcanonicalName = &quot;Luba-Katanga&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;lv&quot;] = {\n\tcanonicalName = &quot;Latvian&quot;,\n\totherNames = {&quot;Lettish&quot;,\
      \ &quot;Lett&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bat&quot;,\n\tentry_name = {\n\t\tfrom = {&quot;[ÂÃÀ]&quot;, &quot;[âãà]&quot;, &quot;[ÊẼÈ]&quot;, &quot;[êẽè]&quot;, &quot;[ÎĨÌ]&quot;, &quot;[îĩì]&quot;, &quot;[ÔÕÒ]&quot;, &quot;[ô\
      õò]&quot;, &quot;[ÛŨÙ]&quot;, &quot;[ûũù]&quot;, &quot;[&quot; .. CIRC .. TILDE ..GRAVE ..&quot;]&quot;},\n\t\tto   = {&quot;Ā&quot;, &quot;ā&quot;, &quot;Ē&quot;, &quot;ē&quot;, &quot;Ī&quot;, &quot;ī&quot;, &quot;O&quot;, &quot;o&quot;, &quot;Ū&quot;,\
      \ &quot;ū&quot;, MACRON}},\n}\n\nm[&quot;mg&quot;] = {\n\tcanonicalName = &quot;Malagasy&quot;,\n\totherNames = {&quot;Betsimisaraka Malagasy&quot;, &quot;Betsimisaraka&quot;, &quot;Northern Betsimisaraka Malagasy&quot;, &quot;Northern Betsimisaraka&quot;,\
      \ &quot;Southern Betsimisaraka Malagasy&quot;, &quot;Southern Betsimisaraka&quot;, &quot;Bara Malagasy&quot;, &quot;Bara&quot;, &quot;Masikoro Malagasy&quot;, &quot;Masikoro&quot;, &quot;Antankarana&quot;, &quot;Antankarana Malagasy&quot;, &quot;Plateau\
      \ Malagasy&quot;, &quot;Sakalava&quot;, &quot;Tandroy Malagasy&quot;, &quot;Tandroy&quot;, &quot;Tanosy&quot;, &quot;Tanosy Malagasy&quot;, &quot;Tesaka&quot;, &quot;Tsimihety&quot;, &quot;Tsimihety Malagasy&quot;},\n\tscripts = {&quot;Latn&quot;},\n\t\
      family = &quot;poz-bre&quot;,\n}\n\nm[&quot;mh&quot;] = {\n\tcanonicalName = &quot;Marshallese&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-mic&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;ā&quot; , &quot;ļ&quot; , &quot;m̧&quot; , &quot;ņ\
      &quot; , &quot;n̄&quot;  , &quot;o̧&quot; , &quot;ō&quot;  , &quot;ū&quot; },\n\t\tto   = {&quot;a~&quot;, &quot;l~&quot;, &quot;m~&quot;, &quot;n~&quot;, &quot;n~~&quot;, &quot;o~&quot;, &quot;o~~&quot;, &quot;u~&quot;}} ,\n}\n\nm[&quot;mi&quot;] = {\n\
      \tcanonicalName = &quot;Maori&quot;,\n\totherNames = {&quot;Māori&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-pol&quot;,\n}\n\nm[&quot;mk&quot;] = {\n\tcanonicalName = &quot;Macedonian&quot;,\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily\
      \ = &quot;zls&quot;,\n\ttranslit_module = &quot;mk-translit&quot;,\n\tentry_name = {\n\t\tfrom = {ACUTE},\n\t\tto   = {}},\n}\n\nm[&quot;ml&quot;] = {\n\tcanonicalName = &quot;Malayalam&quot;,\n\tscripts = {&quot;Mlym&quot;},\n\tfamily = &quot;dra&quot;,\n\
      \ttranslit_module = &quot;ml-translit&quot;,\n}\n\nm[&quot;mn&quot;] = {\n\tcanonicalName = &quot;Mongolian&quot;,\n\totherNames = {&quot;Khalkha Mongolian&quot;},\n\tscripts = {&quot;Cyrl&quot;, &quot;Mong&quot;},\n\tfamily = &quot;xgn&quot;,\n\tancestors\
      \ = {&quot;cmg&quot;},\n\ttranslit_module = &quot;mn-translit&quot;,\n}\n\nm[&quot;mr&quot;] = {\n\tcanonicalName = &quot;Marathi&quot;,\n\tscripts = {&quot;Deva&quot;, &quot;Modi&quot;},\n\tfamily = &quot;inc&quot;,\n\tancestors = {&quot;omr&quot;},\n\
      \ttranslit_module = &quot;hi-translit&quot;,\n}\n\nm[&quot;ms&quot;] = {\n\tcanonicalName = &quot;Malay&quot;,\n\totherNames = {&quot;Malaysian&quot;, &quot;Standard Malay&quot;, &quot;Orang Seletar&quot;, &quot;Orang Kanaq&quot;, &quot;Jakun&quot;, &quot;Temuan&quot;},\n\
      \tscripts = {&quot;Latn&quot;, &quot;Arab&quot;},\n\tfamily = &quot;poz-mly&quot;,\n}\n\nm[&quot;mt&quot;] = {\n\tcanonicalName = &quot;Maltese&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;sem-arb&quot;,\n\tancestors = {&quot;sqr&quot;},\n\
      }\n\nm[&quot;my&quot;] = {\n\tcanonicalName = &quot;Burmese&quot;,\n\totherNames = {&quot;Myanmar&quot;},\n\tscripts = {&quot;Mymr&quot;},\n\tfamily = &quot;tbq-brm&quot;,\n\tancestors = {&quot;obr&quot;},\n\ttranslit_module = &quot;my-translit&quot;,\n\
      }\n\nm[&quot;na&quot;] = {\n\tcanonicalName = &quot;Nauruan&quot;,\n\totherNames = {&quot;Nauru&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-mic&quot;,\n}\n\nm[&quot;nb&quot;] = {\n\tcanonicalName = &quot;Norwegian Bokmål&quot;,\n\totherNames\
      \ = {&quot;Bokmål&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmq&quot;,\n\tancestors = {&quot;gmq-mno&quot;},\n\twikimedia_codes = {&quot;no&quot;},\n}\n\nm[&quot;nd&quot;] = {\n\tcanonicalName = &quot;Northern Ndebele&quot;,\n\totherNames\
      \ = {&quot;North Ndebele&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt-ngu&quot;,\n}\n\nm[&quot;ne&quot;] = {\n\tcanonicalName = &quot;Nepali&quot;,\n\totherNames = {&quot;Nepalese&quot;},\n\tscripts = {&quot;Deva&quot;},\n\tfamily = &quot;inc&quot;,\n\
      \ttranslit_module = &quot;ne-translit&quot;,\n}\n\nm[&quot;ng&quot;] = {\n\tcanonicalName = &quot;Ndonga&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;nl&quot;] = {\n\tcanonicalName = &quot;Dutch&quot;,\n\totherNames\
      \ = {&quot;Netherlandic&quot;, &quot;Flemish&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;dum&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;[äáâå]&quot;, &quot;[ëéê]&quot;, &quot;[ïíî]&quot;, &quot;[öóô]&quot;,\
      \ &quot;[üúû]&quot;, &quot;ç&quot;, &quot;ñ&quot;, &quot;^-&quot;},\n\t\tto   = {&quot;a&quot;\t , &quot;e&quot;\t, &quot;i&quot;\t, &quot;o&quot;\t, &quot;u&quot;\t, &quot;c&quot;, &quot;n&quot;}} ,\n\tstandardChars = &quot;A-Za-z0-9&quot; .. PUNCTUATION\
      \ .. u(0x2800) .. &quot;-&quot; .. u(0x28FF),\n}\n\nm[&quot;nn&quot;] = {\n\tcanonicalName = &quot;Norwegian Nynorsk&quot;,\n\totherNames = {&quot;New Norwegian&quot;, &quot;Nynorsk&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmq&quot;,\n\
      \tancestors = {&quot;gmq-mno&quot;},\n}\n\nm[&quot;no&quot;] = {\n\tcanonicalName = &quot;Norwegian&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmq&quot;,\n\tancestors = {&quot;gmq-mno&quot;},\n}\n\nm[&quot;nr&quot;] = {\n\tcanonicalName\
      \ = &quot;Southern Ndebele&quot;,\n\totherNames = {&quot;South Ndebele&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt-ngu&quot;,\n}\n\nm[&quot;nv&quot;] = {\n\tcanonicalName = &quot;Navajo&quot;,\n\tscripts = {&quot;nv-Latn&quot;},\n\t\
      family = &quot;apa&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;[áą]&quot;, &quot;[éę]&quot;, &quot;[íį]&quot;, &quot;[óǫ]&quot;, &quot;ń&quot;, &quot;^n([djlt])&quot;, &quot;ł&quot; , &quot;[ʼ’']&quot;, ACUTE},\n\t\tto   = {&quot;a&quot;   , &quot;e&quot;\
      \   , &quot;i&quot;   , &quot;o&quot;   , &quot;n&quot;, &quot;ni%1&quot;\t  , &quot;l&quot;}}, -- the copyright sign is used to guarantee that ł will always be sorted after all other words with l\n}\n\nm[&quot;ny&quot;] = {\n\tcanonicalName = &quot;Chichewa&quot;,\n\
      \totherNames = {&quot;Chicheŵa&quot;, &quot;Chinyanja&quot;, &quot;Nyanja&quot;, &quot;Chewa&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n\tentry_name = {\n\t\tfrom = {ACUTE},\n\t\tto   = {}},\n}\n\nm[&quot;oc&quot;] = {\n\tcanonicalName\
      \ = &quot;Occitan&quot;,\n\totherNames = {&quot;Provençal&quot;, &quot;Auvergnat&quot;, &quot;Auvernhat&quot;, &quot;Gascon&quot;, &quot;Languedocien&quot;, &quot;Lengadocian&quot;, &quot;Shuadit&quot;, &quot;Chouhadite&quot;, &quot;Chouhadit&quot;, &quot;Chouadite&quot;,\
      \ &quot;Chouadit&quot;, &quot;Shuhadit&quot;, &quot;Judeo-Provençal&quot;, &quot;Judeo-Provencal&quot;, &quot;Judeo-Comtadin&quot;},\n\tscripts = {&quot;Latn&quot;, &quot;Hebr&quot;},\n\tfamily = &quot;roa&quot;,\n\tancestors = {&quot;pro&quot;},\n\tsort_key\
      \ = {\n\t\tfrom = {&quot;[àá]&quot;, &quot;[èé]&quot;, &quot;[íï]&quot;, &quot;[òó]&quot;, &quot;[úü]&quot;, &quot;ç&quot;, &quot;([lns])·h&quot;},\n\t\tto   = {&quot;a&quot;   , &quot;e&quot;   , &quot;i&quot;   , &quot;o&quot;   , &quot;u&quot;   , &quot;c&quot;,\
      \ &quot;%1h&quot;\t  }} ,\n}\n\nm[&quot;oj&quot;] = {\n\tcanonicalName = &quot;Ojibwe&quot;,\n\totherNames = {&quot;Chippewa&quot;, &quot;Ojibway&quot;, &quot;Ojibwemowin&quot;, &quot;Southwestern Ojibwa&quot;},\n\tscripts = {&quot;Cans&quot;, &quot;Latn&quot;},\n\
      \tfamily = &quot;alg&quot;,\n}\n\nm[&quot;om&quot;] = {\n\tcanonicalName = &quot;Oromo&quot;,\n\totherNames = {&quot;Orma&quot;, &quot;Borana-Arsi-Guji Oromo&quot;, &quot;West Central Oromo&quot;},\n\tscripts = {&quot;Latn&quot;, &quot;Ethi&quot;},\n\t\
      family = &quot;cus&quot;,\n}\n\nm[&quot;or&quot;] = {\n\tcanonicalName = &quot;Oriya&quot;,\n\totherNames = {&quot;Odia&quot;, &quot;Oorya&quot;},\n\tscripts = {&quot;Orya&quot;},\n\tfamily = &quot;inc&quot;,\n\tancestors = {&quot;pka&quot;},\n}\n\nm[&quot;os&quot;]\
      \ = {\n\tcanonicalName = &quot;Ossetian&quot;,\n\totherNames = {&quot;Ossete&quot;, &quot;Ossetic&quot;, &quot;Digor&quot;, &quot;Iron&quot;},\n\tscripts = {&quot;Cyrl&quot;, &quot;Geor&quot;, &quot;Latn&quot;},\n\tfamily = &quot;ira&quot;,\n\ttranslit_module\
      \ = &quot;os-translit&quot;,\n\tancestors = {&quot;oos&quot;},\n\tentry_name = {\n\t\tfrom = {GRAVE, ACUTE},\n\t\tto   = {}} ,\n}\n\nm[&quot;pa&quot;] = {\n\tcanonicalName = &quot;Punjabi&quot;,\n\totherNames = {&quot;Panjabi&quot;},\n\tscripts = {&quot;Guru&quot;,\
      \ &quot;Arab&quot;, &quot;Deva&quot;},\n\tfamily = &quot;inc&quot;,\n\ttranslit_module = &quot;pa-translit&quot;,\n}\n\nm[&quot;pi&quot;] = {\n\tcanonicalName = &quot;Pali&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Deva&quot;, &quot;Sinh&quot;, &quot;Mymr&quot;,\
      \ &quot;Khmr&quot;, &quot;Thai&quot;},\n\tfamily = &quot;inc&quot;,\n\tancestors = {&quot;bh&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;ā&quot;, &quot;ī&quot;, &quot;ū&quot;, &quot;ḍ&quot;, &quot;ḷ&quot;, &quot;[ṁṃ]&quot;, &quot;[ṇñṅ]&quot;, &quot;ṭ&quot;},\n\
      \t\tto   = {&quot;a&quot;, &quot;i&quot;, &quot;u&quot;, &quot;d&quot;, &quot;l&quot;, &quot;m&quot;   , &quot;n&quot;\t, &quot;t&quot;}} ,\n}\n\nm[&quot;pl&quot;] = {\n\tcanonicalName = &quot;Polish&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily =\
      \ &quot;zlw&quot;,\n\tancestors = {&quot;zlw-opl&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;[Ąą]&quot;, &quot;[Ćć]&quot;, &quot;[Ęę]&quot;, &quot;[Łł]&quot;, &quot;[Ńń]&quot;, &quot;[Óó]&quot;, &quot;[Śś]&quot;, &quot;[Żż]&quot;, &quot;[Źź]&quot;},\n\t\
      \tto   = {\n\t\t\t&quot;a&quot; .. u(0x10FFFF),\n\t\t\t&quot;c&quot; .. u(0x10FFFF),\n\t\t\t&quot;e&quot; .. u(0x10FFFF),\n\t\t\t&quot;l&quot; .. u(0x10FFFF),\n\t\t\t&quot;n&quot; .. u(0x10FFFF),\n\t\t\t&quot;o&quot; .. u(0x10FFFF),\n\t\t\t&quot;s&quot;\
      \ .. u(0x10FFFF),\n\t\t\t&quot;z&quot; .. u(0x10FFFF),\n\t\t\t&quot;z&quot; .. u(0x10FFFE)}} ,\n}\n\nm[&quot;ps&quot;] = {\n\tcanonicalName = &quot;Pashto&quot;,\n\totherNames = {&quot;Pashtun&quot;, &quot;Pushto&quot;, &quot;Pashtu&quot;, &quot;Central\
      \ Pashto&quot;, &quot;Northern Pashto&quot;, &quot;Southern Pashto&quot;, &quot;Pukhto&quot;, &quot;Pakhto&quot;, &quot;Pakkhto&quot;, &quot;Afghani&quot;},\n\tscripts = {&quot;ps-Arab&quot;},\n\tfamily = &quot;ira-eas&quot;,\n}\n\nm[&quot;pt&quot;] =\
      \ {\n\tcanonicalName = &quot;Portuguese&quot;,\n\totherNames = {&quot;Modern Portuguese&quot;},\n\tscripts = {&quot;Latn&quot;, &quot;Brai&quot;},\n\tfamily = &quot;roa&quot;,\n\tancestors = {&quot;roa-opt&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;[àã\
      áâä]&quot;, &quot;[èẽéêë]&quot;, &quot;[ìĩíï]&quot;, &quot;[òóôõö]&quot;, &quot;[üúùũ]&quot;, &quot;ç&quot;, &quot;ñ&quot;},\n\t\tto   = {&quot;a&quot;\t  , &quot;e&quot;\t  , &quot;i&quot;\t , &quot;o&quot;\t  , &quot;u&quot;\t , &quot;c&quot;, &quot;n&quot;}}\
      \ ,\n}\n\nm[&quot;qu&quot;] = {\n\tcanonicalName = &quot;Quechua&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;qwe&quot;,\n}\n\nm[&quot;rm&quot;] = {\n\tcanonicalName = &quot;Romansch&quot;,\n\totherNames = {&quot;Romansh&quot;, &quot;Rumantsch&quot;,\
      \ &quot;Romanche&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n}\n\nm[&quot;ro&quot;] = {\n\tcanonicalName = &quot;Romanian&quot;,\n\totherNames = {&quot;Daco-Romanian&quot;, &quot;Roumanian&quot;, &quot;Rumanian&quot;},\n\tscripts\
      \ = {&quot;Latn&quot;, &quot;Cyrl&quot;},\n\tfamily = &quot;roa&quot;,\n\tsort_key = {\n        from = {&quot;ă&quot; , &quot;â&quot;  , &quot;î&quot; , &quot;ș&quot; , &quot;ț&quot; },\n        to   = {&quot;a~&quot;, &quot;a~~&quot;, &quot;i~&quot;,\
      \ &quot;s~&quot;, &quot;t~&quot;}},\n}\n\nm[&quot;ru&quot;] = {\n\tcanonicalName = &quot;Russian&quot;,\n\tscripts = {&quot;Cyrl&quot;, &quot;Brai&quot;},\n\tfamily = &quot;zle&quot;,\n\ttranslit_module = &quot;ru-translit&quot;,\n\tsort_key = {\n\t\t\
      from = {&quot;ё&quot;},\n\t\tto   = {&quot;е&quot; .. mw.ustring.char(0x10FFFF)}},\n\tentry_name = {\n\t\tfrom = {&quot;Ѐ&quot;, &quot;ѐ&quot;, &quot;Ѝ&quot;, &quot;ѝ&quot;, GRAVE, ACUTE},\n\t\tto   = {&quot;Е&quot;, &quot;е&quot;, &quot;И&quot;, &quot;и\
      &quot;}},\n}\n\nm[&quot;rw&quot;] = {\n\tcanonicalName = &quot;Rwanda-Rundi&quot;,\n\totherNames = {&quot;Rwanda&quot;, &quot;Kinyarwanda&quot;, &quot;Rundi&quot;, &quot;Kirundi&quot;, &quot;Ha&quot;, &quot;Giha&quot;, &quot;Hangaza&quot;, &quot;Vinza&quot;,\
      \ &quot;Shubi&quot;, &quot;Subi&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;sa&quot;] = {\n\tcanonicalName = &quot;Sanskrit&quot;,\n\tscripts = {&quot;Deva&quot;, &quot;Beng&quot;, &quot;Brah&quot;, &quot;Gran&quot;,\
      \ &quot;Gujr&quot;, &quot;Guru&quot;, &quot;Khar&quot;, &quot;Knda&quot;, &quot;Mlym&quot;, &quot;Mymr&quot;, &quot;Orya&quot;, &quot;Shrd&quot;, &quot;Sinh&quot;, &quot;Taml&quot;, &quot;Telu&quot;, &quot;Thai&quot;, &quot;Tibt&quot;},\n\tfamily = &quot;inc&quot;,\n\
      \ttranslit_module = &quot;sa-translit&quot;,\n}\n\nm[&quot;sc&quot;] = {\n\tcanonicalName = &quot;Sardinian&quot;,\n\totherNames = {&quot;Campidanese&quot;, &quot;Campidanese Sardinian&quot;, &quot;Logudorese&quot;, &quot;Logudorese Sardinian&quot;, &quot;Nuorese&quot;,\
      \ &quot;Nuorese Sardinian&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n}\n\nm[&quot;sd&quot;] = {\n\tcanonicalName = &quot;Sindhi&quot;,\n\tscripts = {&quot;sd-Arab&quot;, &quot;Deva&quot;},\n\tfamily = &quot;inc&quot;,\n}\n\n\
      m[&quot;se&quot;] = {\n\tcanonicalName = &quot;Northern Sami&quot;,\n\totherNames = {&quot;North Sami&quot;, &quot;Northern Saami&quot;, &quot;North Saami&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;smi&quot;,\n\tentry_name = {\n\t\tfrom\
      \ = {&quot;([đflmnŋrsšŧv])'%1&quot;},\n\t\tto   = {&quot;%1%1&quot;} },\n}\n\nm[&quot;sg&quot;] = {\n\tcanonicalName = &quot;Sango&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;crp&quot;,\n}\n\nm[&quot;sh&quot;] = {\n\tcanonicalName = &quot;Serbo-Croatian&quot;,\n\
      \totherNames = {&quot;BCS&quot;, &quot;Croato-Serbian&quot;, &quot;Serbocroatian&quot;, &quot;Bosnian&quot;, &quot;Croatian&quot;, &quot;Montenegrin&quot;, &quot;Serbian&quot;},\n\tscripts = {&quot;Latn&quot;, &quot;Cyrl&quot;},\n\tfamily = &quot;zls&quot;,\n\
      \tentry_name = {\n\t\tfrom = {&quot;[ȀÀȂÁĀ]&quot;, &quot;[ȁàȃáā]&quot;, &quot;[ȄÈȆÉĒ]&quot;, &quot;[ȅèȇéē]&quot;, &quot;[ȈÌȊÍĪ]&quot;, &quot;[ȉìȋíī]&quot;, &quot;[ȌÒȎÓŌ]&quot;, &quot;[ȍòȏóō]&quot;, &quot;[ȐȒŔ]&quot;, &quot;[ȑȓŕ]&quot;, &quot;[ȔÙȖÚŪ]&quot;,\
      \ &quot;[ȕùȗúū]&quot;, &quot;Ѐ&quot;, &quot;ѐ&quot;, &quot;[ӢЍ]&quot;, &quot;[ӣѝ]&quot;, &quot;[Ӯ]&quot;, &quot;[ӯ]&quot;, GRAVE, ACUTE, DGRAVE, INVBREVE, MACRON},\n\t\tto   = {&quot;A&quot;\t  , &quot;a&quot;\t  , &quot;E&quot;\t  , &quot;e&quot;\t  ,\
      \ &quot;I&quot;\t  , &quot;i&quot;\t  , &quot;O&quot;\t  , &quot;o&quot;\t  , &quot;R&quot;\t, &quot;r&quot;\t, &quot;U&quot;\t  , &quot;u&quot;\t  , &quot;Е&quot;, &quot;е&quot;, &quot;И&quot;   , &quot;и&quot;, &quot;У&quot;, &quot;у&quot;   }},\n\t\
      wikimedia_codes = {&quot;sh&quot;, &quot;bs&quot;, &quot;hr&quot;, &quot;sr&quot;},\n}\n\nm[&quot;si&quot;] = {\n\tcanonicalName = &quot;Sinhalese&quot;,\n\totherNames = {&quot;Singhalese&quot;, &quot;Sinhala&quot;},\n\tscripts = {&quot;Sinh&quot;},\n\t\
      family = &quot;inc&quot;,\n\tancestors = {&quot;pmh&quot;},\n\ttranslit_module = &quot;si-translit&quot;,\n}\n\nm[&quot;sk&quot;] = {\n\tcanonicalName = &quot;Slovak&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;zlw&quot;,\n\tsort_key = {\n\
      \t\tfrom = {&quot;[áä]&quot;, &quot;é&quot;, &quot;í&quot;, &quot;[óô]&quot;, &quot;ú&quot;, &quot;ý&quot;, &quot;ŕ&quot;, &quot;ĺ&quot;},\n\t\tto   = {&quot;a&quot;   , &quot;e&quot;, &quot;i&quot;, &quot;o&quot;   , &quot;u&quot;, &quot;y&quot;, &quot;r&quot;,\
      \ &quot;l&quot;}} ,\n}\n\nm[&quot;sl&quot;] = {\n\tcanonicalName = &quot;Slovene&quot;,\n\totherNames = {&quot;Slovenian&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;zls&quot;,\n\tentry_name = {\n\t\tfrom = {&quot;[ÁÀÂȂȀ]&quot;, &quot;[áà\
      âȃȁ]&quot;, &quot;[ÉÈÊȆȄỆẸ]&quot;, &quot;[éèêȇȅệẹə]&quot;, &quot;[ÍÌÎȊȈ]&quot;, &quot;[íìîȋȉ]&quot;, &quot;[ÓÒÔȎȌỘỌ]&quot;, &quot;[óòôȏȍộọ]&quot;, &quot;[ŔȒȐ]&quot;, &quot;[ŕȓȑ]&quot;, &quot;[ÚÙÛȖȔ]&quot;, &quot;[úùûȗȕ]&quot;, &quot;ł&quot;, GRAVE, ACUTE,\
      \ DGRAVE, INVBREVE, CIRC, DOTBELOW},\n\t\tto   = {&quot;A&quot;\t  , &quot;a&quot;\t  , &quot;E&quot;\t\t, &quot;e&quot;\t\t , &quot;I&quot;\t  , &quot;i&quot;\t  , &quot;O&quot;\t\t, &quot;o&quot;\t\t, &quot;R&quot;\t, &quot;r&quot;\t, &quot;U&quot;\t\
      \  , &quot;u&quot;\t  , &quot;l&quot;}} ,\n}\n\nm[&quot;sm&quot;] = {\n\tcanonicalName = &quot;Samoan&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-pol&quot;,\n}\n\nm[&quot;sn&quot;] = {\n\tcanonicalName = &quot;Shona&quot;,\n\tscripts\
      \ = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;so&quot;] = {\n\tcanonicalName = &quot;Somali&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Arab&quot;, &quot;Osma&quot;},\n\tfamily = &quot;cus&quot;,\n\tentry_name = {\n\t\tfrom = {&quot;[Á\
      ÀÂ]&quot;, &quot;[áàâ]&quot;, &quot;[ÉÈÊ]&quot;, &quot;[éèê]&quot;, &quot;[ÍÌÎ]&quot;, &quot;[íìî]&quot;, &quot;[ÓÒÔ]&quot;, &quot;[óòô]&quot;, &quot;[ÚÙÛ]&quot;, &quot;[úùû]&quot;, &quot;[ÝỲ]&quot;, &quot;[ýỳ]&quot;},\n\t\tto   = {&quot;A&quot;\t  , &quot;a&quot;\t\
      \  , &quot;E&quot;\t, &quot;e&quot; , &quot;I&quot;\t  , &quot;i&quot;\t  , &quot;O&quot;\t, &quot;o&quot;\t, &quot;U&quot;  , &quot;u&quot;, &quot;Y&quot;, &quot;y&quot;}} ,\n}\n\nm[&quot;sq&quot;] = {\n\tcanonicalName = &quot;Albanian&quot;,\n\tscripts\
      \ = {&quot;Latn&quot;, &quot;Elba&quot;},\n\tfamily = &quot;sqj&quot;,\n\tsort_key = {\n\t\tfrom = { '[âãä]', '[ÂÃÄ]', '[êẽë]', '[ÊẼË]', 'ĩ', 'Ĩ', 'õ', 'Õ', 'ũ', 'Ũ', 'ỹ', 'Ỹ', 'ç', 'Ç' },\n\t\tto   = {     'a',     'A',     'e',     'E', 'i', 'I', 'o',\
      \ 'O', 'u', 'U', 'y', 'Y', 'c', 'C' } } ,\n}\n\nm[&quot;ss&quot;] = {\n\tcanonicalName = &quot;Swazi&quot;,\n\totherNames = {&quot;Swati&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt-ngu&quot;,\n}\n\nm[&quot;st&quot;] = {\n\tcanonicalName\
      \ = &quot;Sotho&quot;,\n\totherNames = {&quot;Sesotho&quot;, &quot;Southern Sesotho&quot;, &quot;Southern Sotho&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;su&quot;] = {\n\tcanonicalName = &quot;Sundanese&quot;,\n\
      \tscripts = {&quot;Latn&quot;, &quot;Sund&quot;},\n\tfamily = &quot;poz-msa&quot;,\n\ttranslit_module = &quot;su-translit&quot;,\n}\n\nm[&quot;sv&quot;] = {\n\tcanonicalName = &quot;Swedish&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmq&quot;,\n\
      \tancestors = {&quot;gmq-osw&quot;},\n}\n\nm[&quot;sw&quot;] = {\n\tcanonicalName = &quot;Swahili&quot;,\n\totherNames = {&quot;Settler Swahili&quot;, &quot;KiSetla&quot;, &quot;KiSettla&quot;, &quot;Setla&quot;, &quot;Settla&quot;, &quot;Kitchen Swahili&quot;,\
      \ &quot;Kihindi&quot;, &quot;Indian Swahili&quot;, &quot;KiShamba&quot;, &quot;Kishamba&quot;, &quot;Field Swahili&quot;, &quot;Kibabu&quot;, &quot;Asian Swahili&quot;, &quot;Kimanga&quot;, &quot;Arab Swahili&quot;, &quot;Kitvita&quot;, &quot;Army Swahili&quot;},\n\
      \tscripts = {&quot;Latn&quot;, &quot;Arab&quot;},\n\tfamily = &quot;bnt&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;ng'&quot;, &quot;^-&quot;},\n\t\tto   = {&quot;ngz&quot;}} ,\n}\n\nm[&quot;ta&quot;] = {\n\tcanonicalName = &quot;Tamil&quot;,\n\tscripts\
      \ = {&quot;Taml&quot;},\n\tfamily = &quot;dra&quot;,\n\tancestors = {&quot;oty&quot;},\n\ttranslit_module = &quot;ta-translit&quot;,\n}\n\nm[&quot;te&quot;] = {\n\tcanonicalName = &quot;Telugu&quot;,\n\tscripts = {&quot;Telu&quot;},\n\tfamily = &quot;dra&quot;,\n\
      \ttranslit_module = &quot;te-translit&quot;,\n}\n\nm[&quot;tg&quot;] = {\n\tcanonicalName = &quot;Tajik&quot;,\n\totherNames = {&quot;Tadjik&quot;, &quot;Tadzhik&quot;, &quot;Tajiki&quot;, &quot;Tajik Persian&quot;},\n\tscripts = {&quot;Cyrl&quot;, &quot;fa-Arab&quot;,\
      \ &quot;Latn&quot;},\n\tfamily = &quot;ira-wes&quot;,\n\tancestors = {&quot;fa&quot;},\n\ttranslit_module = &quot;tg-translit&quot;,\n\t\tsort_key = {\n\t\tfrom = {&quot;Ё&quot;, &quot;ё&quot;},\n\t\tto   = {&quot;Е&quot; , &quot;е&quot;}} ,\n\tentry_name\
      \ = {\n\t\tfrom = {ACUTE},\n\t\tto   = {}} ,\n}\n\nm[&quot;th&quot;] = {\n\tcanonicalName = &quot;Thai&quot;,\n\tscripts = {&quot;Thai&quot;, &quot;Brai&quot;},\n\tfamily = &quot;tai-swe&quot;,\n\ttranslit_module = &quot;th-translit&quot;,\n\tentry_name\
      \ = {\n\t\tfrom = { &quot;-&quot; },\n\t\tto = {}} ,\n}\n\nm[&quot;ti&quot;] = {\n\tcanonicalName = &quot;Tigrinya&quot;,\n\tscripts = {&quot;Ethi&quot;},\n\tfamily = &quot;sem-eth&quot;,\n\ttranslit_module = &quot;Ethi-translit&quot;,\n}\n\nm[&quot;tk&quot;]\
      \ = {\n\tcanonicalName = &quot;Turkmen&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Cyrl&quot;},\n\tfamily = &quot;trk-ogz&quot;,\n}\n\nm[&quot;tl&quot;] = {\n\tcanonicalName = &quot;Tagalog&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Tglg&quot;},\n\t\
      family = &quot;phi&quot;,\n}\n\nm[&quot;tn&quot;] = {\n\tcanonicalName = &quot;Tswana&quot;,\n\totherNames = {&quot;Setswana&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;to&quot;] = {\n\tcanonicalName = &quot;Tongan&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-pol&quot;,\n}\n\nm[&quot;tr&quot;] = {\n\tcanonicalName = &quot;Turkish&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;trk-ogz&quot;,\n\tancestors = {&quot;ota&quot;},\n}\n\nm[&quot;ts&quot;]\
      \ = {\n\tcanonicalName = &quot;Tsonga&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;tt&quot;] = {\n\tcanonicalName = &quot;Tatar&quot;,\n\tscripts = {&quot;Cyrl&quot;, &quot;Latn&quot;, &quot;Arab&quot;, &quot;tt-Arab&quot;},\n\
      \tfamily = &quot;trk-kip&quot;,\n\ttranslit_module = &quot;tt-translit&quot;,\n}\n\nm[&quot;ty&quot;] = {\n\tcanonicalName = &quot;Tahitian&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-pol&quot;,\n}\n\nm[&quot;ug&quot;] = {\n\tcanonicalName\
      \ = &quot;Uyghur&quot;,\n\totherNames = {&quot;Uigur&quot;, &quot;Uighur&quot;, &quot;Uygur&quot;},\n\tscripts = {&quot;ug-Arab&quot;, &quot;Latn&quot;, &quot;Cyrl&quot;},\n\tfamily = &quot;trk&quot;,\n\tancestors = {&quot;chg&quot;},\n\ttranslit_module\
      \ = &quot;ug-translit&quot;,\n}\n\nm[&quot;uk&quot;] = {\n\tcanonicalName = &quot;Ukrainian&quot;,\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;zle&quot;,\n\ttranslit_module = &quot;uk-translit&quot;,\n\tentry_name = {\n\t\tfrom = {&quot;Ѐ&quot;,\
      \ &quot;ѐ&quot;, &quot;Ѝ&quot;, &quot;ѝ&quot;, GRAVE, ACUTE},\n\t\tto   = {&quot;Е&quot;, &quot;е&quot;, &quot;И&quot;, &quot;и&quot;}},\n} \nm[&quot;ur&quot;] = {\n\tcanonicalName = &quot;Urdu&quot;,\n\tscripts = {&quot;ur-Arab&quot;},\n\tfamily = &quot;inc&quot;,\n\
      \tancestors = {&quot;psu&quot;},\n\tentry_name = {\n\t\tfrom = {u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652)},\n\t\tto   = {}} ,\n}\n\nm[&quot;uz&quot;] = {\n\tcanonicalName = &quot;Uzbek&quot;,\n\totherNames =\
      \ {&quot;Northern Uzbek&quot;, &quot;Southern Uzbek&quot;},\n\tscripts = {&quot;Latn&quot;, &quot;Cyrl&quot;, &quot;fa-Arab&quot;},\n\tfamily = &quot;trk&quot;,\n\tancestors = {&quot;chg&quot;},\n}\n\nm[&quot;ve&quot;] = {\n\tcanonicalName = &quot;Venda&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;vi&quot;] = {\n\tcanonicalName = &quot;Vietnamese&quot;,\n\totherNames = {&quot;Annamese&quot;, &quot;Annamite&quot;},\n\tscripts = {&quot;Latn&quot;, &quot;Hani&quot;},\n\tfamily\
      \ = &quot;mkh-vie&quot;,\n\tancestors = {&quot;mkh-mvi&quot;},\n}\n\nm[&quot;vo&quot;] = {\n\tcanonicalName = &quot;Volapük&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;art&quot;,\n}\n\nm[&quot;wa&quot;] = {\n\tcanonicalName = &quot;Walloon&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n\tancestors = {&quot;fro&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;[áàâäå]&quot;, &quot;[éèêë]&quot;, &quot;[íìîï]&quot;, &quot;[óòôö]&quot;, &quot;[úùûü]&quot;, &quot;[ýỳŷÿ]&quot;, &quot;ç\
      &quot;, &quot;'&quot;},\n\t\tto   = {&quot;a&quot;\t  , &quot;e&quot;\t , &quot;i&quot;\t , &quot;o&quot;\t , &quot;u&quot;\t , &quot;y&quot;\t , &quot;c&quot;}} ,\n}\n\nm[&quot;wo&quot;] = {\n\tcanonicalName = &quot;Wolof&quot;,\n\totherNames = {&quot;Gambian\
      \ Wolof&quot;}, -- the subsumed dialect 'wof'\n\tscripts = {&quot;Latn&quot;, &quot;Arab&quot;},\n\tfamily = &quot;alv-sng&quot;,\n}\n\nm[&quot;xh&quot;] = {\n\tcanonicalName = &quot;Xhosa&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt-ngu&quot;,\n\
      }\n\nm[&quot;yi&quot;] = {\n\tcanonicalName = &quot;Yiddish&quot;,\n\tscripts = {&quot;Hebr&quot;},\n\tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;gmh&quot;},\n\ttranslit_module = &quot;yi-translit&quot;,\n}\n\nm[&quot;yo&quot;] = {\n\tcanonicalName\
      \ = &quot;Yoruba&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-von&quot;,\n}\n\nm[&quot;za&quot;] = {\n\tcanonicalName = &quot;Zhuang&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Hani&quot;},\n\tfamily = &quot;tai&quot;,\n}\n\nm[&quot;zh&quot;]\
      \ = {\n\tcanonicalName = &quot;Chinese&quot;,\n\tscripts = {&quot;Hani&quot;, &quot;Brai&quot;},\n\tfamily = &quot;sit&quot;,\n\tancestors = {&quot;ltc&quot;},\n}\n\nm[&quot;zu&quot;] = {\n\tcanonicalName = &quot;Zulu&quot;,\n\totherNames = {&quot;isiZulu&quot;},\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt-ngu&quot;,\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:26.253Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata3%2Fe&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=27153 t=1471300166140775
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:26 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1281.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1065 pass, cp3033 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 2761847505, 1171026333, 1213995003
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4206196\" pageid=\"4206196\" ns=\"828\" title=\"Module:languages/data3/e\"><revisions><rev user=\"-sche\" timestamp=\"2016-07-15T03:29:45Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local u = mw.ustring.char\n\n-- UTF-8 encoded strings for some commonly-used diacritics\nlocal GRAVE     = u(0x0300)\nlocal ACUTE     = u(0x0301)\nlocal CIRC      = u(0x0302)\nlocal TILDE     = u(0x0303)\n\
      local MACRON    = u(0x0304)\nlocal BREVE     = u(0x0306)\nlocal DOTABOVE  = u(0x0307)\nlocal DIAER     = u(0x0308)\nlocal CARON     = u(0x030C)\nlocal DGRAVE    = u(0x030F)\nlocal INVBREVE  = u(0x0311)\nlocal DOTBELOW  = u(0x0323)\nlocal RINGBELOW = u(0x0325)\n\
      local CEDILLA   = u(0x0327)\n\nlocal m = {}\n\nm[&quot;ebg&quot;] = {\n\tcanonicalName = &quot;Ebughu&quot;,\n}\n\nm[&quot;ebk&quot;] = {\n\tcanonicalName = &quot;Eastern Bontoc&quot;,\n\totherNames = {&quot;Eastern Bontok&quot;},\n}\n\nm[&quot;ebo&quot;]\
      \ = {\n\tcanonicalName = &quot;Teke-Ebo&quot;,\n}\n\nm[&quot;ebr&quot;] = {\n\tcanonicalName = &quot;Ebrié&quot;,\n}\n\nm[&quot;ebu&quot;] = {\n\tcanonicalName = &quot;Embu&quot;,\n}\n\nm[&quot;ecr&quot;] = {\n\tcanonicalName = &quot;Eteocretan&quot;,\n\
      \tscripts = {&quot;Grek&quot;},\n}\n\nm[&quot;ecs&quot;] = {\n\tcanonicalName = &quot;Ecuadorian Sign Language&quot;,\n\tfamily = &quot;sgn&quot;,\n}\n\nm[&quot;ecy&quot;] = {\n\tcanonicalName = &quot;Eteocypriot&quot;,\n\tscripts = {&quot;Cprt&quot;},\n\
      }\n\nm[&quot;eee&quot;] = {\n\tcanonicalName = &quot;E&quot;,\n\totherNames = {&quot;Kjang E&quot;},\n\tfamily = &quot;qfa-mix&quot;,\n}\n\nm[&quot;efa&quot;] = {\n\tcanonicalName = &quot;Efai&quot;,\n}\n\nm[&quot;efe&quot;] = {\n\tcanonicalName = &quot;Efe&quot;,\n\
      }\n\nm[&quot;efi&quot;] = {\n\tcanonicalName = &quot;Efik&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;nic-bco&quot;,\n}\n\nm[&quot;ega&quot;] = {\n\tcanonicalName = &quot;Ega&quot;,\n}\n\nm[&quot;egl&quot;] = {\n\tcanonicalName = &quot;Emilian&quot;,\n\
      \totherNames = {&quot;Emiliano&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n\twikimedia_codes = {&quot;eml&quot;},\n}\n\nm[&quot;ego&quot;] = {\n\tcanonicalName = &quot;Eggon&quot;,\n}\n\nm[&quot;egy&quot;] = {\n\tcanonicalName\
      \ = &quot;Egyptian&quot;,\n\totherNames = {&quot;Ancient Egyptian&quot;},\n\tscripts = {&quot;Latn&quot;, &quot;Egyp&quot;, &quot;Egyd&quot;},\n\tfamily = &quot;egx&quot;,\n}\n\nm[&quot;ehu&quot;] = {\n\tcanonicalName = &quot;Ehueun&quot;,\n\tscripts =\
      \ {&quot;Latn&quot;},\n\tfamily = &quot;alv-edo&quot;,\n}\n\nm[&quot;eip&quot;] = {\n\tcanonicalName = &quot;Eipomek&quot;,\n}\n\nm[&quot;eit&quot;] = {\n\tcanonicalName = &quot;Eitiep&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;qfa-tor&quot;,\n\
      }\n\nm[&quot;eiv&quot;] = {\n\tcanonicalName = &quot;Askopan&quot;,\n}\n\nm[&quot;eja&quot;] = {\n\tcanonicalName = &quot;Ejamat&quot;,\n}\n\nm[&quot;eka&quot;] = {\n\tcanonicalName = &quot;Ekajuk&quot;,\n\tfamily = &quot;nic-bod&quot;,\n}\n\nm[&quot;eke&quot;]\
      \ = {\n\tcanonicalName = &quot;Ekit&quot;,\n}\n\nm[&quot;ekg&quot;] = {\n\tcanonicalName = &quot;Ekari&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;ngf&quot;,\n}\n\nm[&quot;eki&quot;] = {\n\tcanonicalName = &quot;Eki&quot;,\n}\n\nm[&quot;ekl&quot;]\
      \ = {\n\tcanonicalName = &quot;Kolhe&quot;,\n\totherNames = {&quot;Kol&quot;, &quot;Kol (Bangladesh)&quot;},\n}\n\nm[&quot;ekm&quot;] = {\n\tcanonicalName = &quot;Elip&quot;,\n\tfamily = &quot;nic-bod&quot;,\n}\n\nm[&quot;eko&quot;] = {\n\tcanonicalName\
      \ = &quot;Koti&quot;,\n}\n\nm[&quot;ekp&quot;] = {\n\tcanonicalName = &quot;Ekpeye&quot;,\n}\n\nm[&quot;ekr&quot;] = {\n\tcanonicalName = &quot;Yace&quot;,\n}\n\nm[&quot;eky&quot;] = {\n        canonicalName = &quot;Eastern Kayah&quot;,\n        scripts\
      \ = {&quot;Kali&quot;},\n        family = &quot;kar&quot;,\n}\n\nm[&quot;ele&quot;] = {\n\tcanonicalName = &quot;Elepi&quot;,\n\tfamily = &quot;qfa-tor&quot;,\n}\n\nm[&quot;elh&quot;] = {\n\tcanonicalName = &quot;El Hugeirat&quot;,\n}\n\nm[&quot;eli&quot;]\
      \ = {\n\tcanonicalName = &quot;Nding&quot;,\n}\n\nm[&quot;elk&quot;] = {\n\tcanonicalName = &quot;Elkei&quot;,\n\tfamily = &quot;qfa-tor&quot;,\n}\n\nm[&quot;elm&quot;] = {\n\tcanonicalName = &quot;Eleme&quot;,\n\tfamily = &quot;nic-bco&quot;,\n}\n\nm[&quot;elo&quot;]\
      \ = {\n\tcanonicalName = &quot;El Molo&quot;,\n\tfamily = &quot;cus&quot;,\n}\n\nm[&quot;elu&quot;] = {\n\tcanonicalName = &quot;Elu&quot;,\n\tfamily = &quot;poz-aay&quot;,\n}\n\nm[&quot;elx&quot;] = {\n\tcanonicalName = &quot;Elamite&quot;,\n\tscripts\
      \ = {&quot;Xsux&quot;},\n\tfamily = &quot;qfa-iso&quot;,\n}\n\nm[&quot;ema&quot;] = {\n\tcanonicalName = &quot;Emai&quot;,\n\totherNames = {&quot;Aoma&quot;, &quot;Ora&quot;, &quot;Emai-Iuleha-Ora&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-edo&quot;,\n\
      }\n\nm[&quot;emb&quot;] = {\n\tcanonicalName = &quot;Embaloh&quot;,\n\totherNames = {&quot;Maloh&quot;, &quot;Malo&quot;, &quot;Matoh&quot;, &quot;Mbaloh&quot;, &quot;Memaloh&quot;, &quot;Palin&quot;, &quot;Pari&quot;, &quot;Sangau&quot;, &quot;Sanggau&quot;},\n\
      }\n\nm[&quot;eme&quot;] = {\n\tcanonicalName = &quot;Emerillon&quot;,\n}\n\nm[&quot;emg&quot;] = {\n\tcanonicalName = &quot;Eastern Meohang&quot;,\n}\n\nm[&quot;emi&quot;] = {\n\tcanonicalName = &quot;Mussau-Emira&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;poz-ocw&quot;,\n}\n\nm[&quot;emk&quot;] = {\n\tcanonicalName = &quot;Eastern Maninkakan&quot;,\n}\n\nm[&quot;emm&quot;] = {\n\tcanonicalName = &quot;Mamulique&quot;,\n}\n\nm[&quot;emn&quot;] = {\n\tcanonicalName = &quot;Eman&quot;,\n\t\
      family = &quot;nic-bod&quot;,\n}\n\nm[&quot;emp&quot;] = {\n\tcanonicalName = &quot;Northern Emberá&quot;,\n}\n\nm[&quot;ems&quot;] = {\n\tcanonicalName = &quot;Alutiiq&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;ypk&quot;,\n}\n\nm[&quot;emu&quot;]\
      \ = {\n\tcanonicalName = &quot;Eastern Muria&quot;,\n\tfamily = &quot;dra&quot;,\n\tancestors = {&quot;gon&quot;},\n}\n\nm[&quot;emw&quot;] = {\n\tcanonicalName = &quot;Emplawas&quot;,\n}\n\nm[&quot;emx&quot;] = {\n\tcanonicalName = &quot;Erromintxela&quot;,\n\
      }\n\nm[&quot;emy&quot;] = {\n\tcanonicalName = &quot;Epigraphic Mayan&quot;,\n\totherNames = {&quot;Classic Ch'olti'an&quot;, &quot;Ch'olti'&quot;},\n\tscripts = {&quot;Maya&quot;},\n\tfamily = &quot;myn&quot;,\n}\n\nm[&quot;ena&quot;] = {\n\tcanonicalName\
      \ = &quot;Apali&quot;,\n}\n\nm[&quot;enb&quot;] = {\n\tcanonicalName = &quot;Markweeta&quot;,\n\tfamily = &quot;sdv&quot;,\n}\n\nm[&quot;enc&quot;] = {\n\tcanonicalName = &quot;En&quot;,\n}\n\nm[&quot;end&quot;] = {\n\tcanonicalName = &quot;Ende&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;plf&quot;,\n}\n\nm[&quot;enf&quot;] = {\n\tcanonicalName = &quot;Forest Enets&quot;,\n}\n\nm[&quot;enh&quot;] = {\n\tcanonicalName = &quot;Tundra Enets&quot;,\n}\n\nm[&quot;enl&quot;] = {\n\tcanonicalName\
      \ = &quot;Enlhet&quot;,\n\totherNames = {&quot;Lengua&quot;},\n}\n\nm[&quot;enm&quot;] = {\n\tcanonicalName = &quot;Middle English&quot;,\n\totherNames = {&quot;Medieval English&quot;, &quot;Mediaeval English&quot;},\n\tscripts = {&quot;Latn&quot;},\n\t\
      family = &quot;gmw&quot;,\n\tancestors = {&quot;ang&quot;},\n\tentry_name = {\n\t\tfrom = {&quot;Ā&quot;, &quot;ā&quot;, &quot;Ǣ&quot;, &quot;ǣ&quot;, &quot;Ċ&quot;, &quot;ċ&quot;, &quot;Ē&quot;, &quot;ē&quot;, &quot;Ġ&quot;, &quot;ġ&quot;, &quot;Ī&quot;,\
      \ &quot;ī&quot;, &quot;Ō&quot;, &quot;ō&quot;, &quot;Ū&quot;, &quot;ū&quot;, &quot;Ȳ&quot;, &quot;ȳ&quot;, &quot;Á&quot;, &quot;á&quot;, &quot;Ǽ&quot;, &quot;ǽ&quot;, &quot;É&quot;, &quot;é&quot;, &quot;Í&quot;, &quot;í&quot;, &quot;Ó&quot;, &quot;ó&quot;,\
      \ &quot;Ú&quot;, &quot;ú&quot;, &quot;Ý&quot;, &quot;ý&quot;, &quot;Ė&quot;},\n\t\tto   = {&quot;A&quot;, &quot;a&quot;, &quot;Æ&quot;, &quot;æ&quot;, &quot;C&quot;, &quot;c&quot;, &quot;E&quot;, &quot;e&quot;, &quot;G&quot;, &quot;g&quot;, &quot;I&quot;,\
      \ &quot;i&quot;, &quot;O&quot;, &quot;o&quot;, &quot;U&quot;, &quot;u&quot;, &quot;Y&quot;, &quot;y&quot;, &quot;A&quot;, &quot;a&quot;, &quot;Æ&quot;, &quot;æ&quot;, &quot;E&quot;, &quot;e&quot;, &quot;I&quot;, &quot;i&quot;, &quot;O&quot;, &quot;o&quot;,\
      \ &quot;U&quot;, &quot;u&quot;, &quot;Y&quot;, &quot;y&quot;, &quot;ė&quot;}} ,\n}\n\nm[&quot;enn&quot;] = {\n\tcanonicalName = &quot;Engenni&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-edo&quot;,\n}\n\nm[&quot;eno&quot;] = {\n\tcanonicalName\
      \ = &quot;Enggano&quot;,\n\tfamily = &quot;poz&quot;,\n}\n\nm[&quot;enq&quot;] = {\n\tcanonicalName = &quot;Enga&quot;,\n}\n\nm[&quot;enr&quot;] = {\n\tcanonicalName = &quot;Emem&quot;,\n}\n\nm[&quot;enu&quot;] = {\n\tcanonicalName = &quot;Enu&quot;,\n\
      \tfamily = &quot;tbq-lol&quot;,\n}\n\nm[&quot;env&quot;] = {\n\tcanonicalName = &quot;Enwan&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-edo&quot;,\n}\n\nm[&quot;enw&quot;] = {\n\tcanonicalName = &quot;Enwang&quot;,\n\totherNames = {&quot;Enwan&quot;},\n\
      \tfamily = &quot;nic-bco&quot;,\n}\n\nm[&quot;enx&quot;] = {\n\tcanonicalName = &quot;Enxet&quot;,\n\totherNames = {&quot;Lengua&quot;},\n}\n\nm[&quot;eot&quot;] = {\n\tcanonicalName = &quot;Eotile&quot;,\n\totherNames = {&quot;Beti&quot;},\n\tscripts\
      \ = {&quot;Latn&quot;},\n\tfamily = &quot;alv-kwa&quot;,\n}\n\nm[&quot;epi&quot;] = {\n\tcanonicalName = &quot;Epie&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-edo&quot;,\n}\n\nm[&quot;era&quot;] = {\n\tcanonicalName = &quot;Eravallan&quot;,\n\
      \tfamily = &quot;dra&quot;,\n}\n\nm[&quot;erg&quot;] = {\n\tcanonicalName = &quot;Sie&quot;,\n}\n\nm[&quot;erh&quot;] = {\n\tcanonicalName = &quot;Eruwa&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-edo&quot;,\n}\n\nm[&quot;eri&quot;] =\
      \ {\n\tcanonicalName = &quot;Ogea&quot;,\n}\n\nm[&quot;erk&quot;] = {\n\tcanonicalName = &quot;South Efate&quot;,\n\totherNames = {&quot;Efate&quot;, &quot;Vate&quot;, &quot;Vaté&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-vnc&quot;,\n\
      }\n\nm[&quot;ero&quot;] = {\n\tcanonicalName = &quot;Horpa&quot;,\n}\n\nm[&quot;err&quot;] = {\n\tcanonicalName = &quot;Erre&quot;,\n}\n\nm[&quot;ers&quot;] = {\n\tcanonicalName = &quot;Ersu&quot;,\n}\n\nm[&quot;ert&quot;] = {\n\tcanonicalName = &quot;Eritai&quot;,\n\
      }\n\nm[&quot;erw&quot;] = {\n\tcanonicalName = &quot;Erokwanas&quot;,\n\tfamily = &quot;poz-hce&quot;,\n}\n\nm[&quot;ese&quot;] = {\n\tcanonicalName = &quot;Ese Ejja&quot;,\n\totherNames = {&quot;Tiatinagua&quot;},\n\tfamily = &quot;sai-tac&quot;,\n}\n\
      \nm[&quot;esh&quot;] = {\n\tcanonicalName = &quot;Eshtehardi&quot;,\n\tscripts = {&quot;fa-Arab&quot;},\n\tfamily = &quot;ira&quot;,\n\tancestors = {&quot;ira-azr&quot;},\n}\n\nm[&quot;esi&quot;] = {\n\tcanonicalName = &quot;North Alaskan Inupiatun&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;esx-inu&quot;,\n}\n\nm[&quot;esk&quot;] = {\n\tcanonicalName = &quot;Northwest Alaska Inupiatun&quot;,\n\tfamily = &quot;esx-inu&quot;,\n}\n\nm[&quot;esl&quot;] = {\n\tcanonicalName = &quot;Egyptian Sign\
      \ Language&quot;,\n\tfamily = &quot;sgn&quot;,\n}\n\nm[&quot;esm&quot;] = {\n\tcanonicalName = &quot;Esuma&quot;,\n}\n\nm[&quot;esn&quot;] = {\n\tcanonicalName = &quot;Salvadoran Sign Language&quot;,\n\tfamily = &quot;sgn&quot;,\n}\n\nm[&quot;eso&quot;]\
      \ = {\n\tcanonicalName = &quot;Estonian Sign Language&quot;,\n\tfamily = &quot;sgn&quot;,\n}\n\nm[&quot;esq&quot;] = {\n\tcanonicalName = &quot;Esselen&quot;,\n}\n\nm[&quot;ess&quot;] = {\n\tcanonicalName = &quot;Central Siberian Yupik&quot;,\n\totherNames\
      \ = {&quot;Central Siberian Yup'ik&quot;, &quot;St. Lawrence Yupik&quot;, &quot;St. Lawrence Yup'ik&quot;, &quot;St. Lawrence Eskimo&quot;, &quot;Siberian Yupik&quot;, &quot;Siberian Yup'ik&quot;, &quot;Siberian Yupik Eskimo&quot;, &quot;Siberian Yup'ik\
      \ Eskimo&quot;, &quot;St. Lawrence Island Eskimo&quot;, &quot;St. Lawrence Island Yupik&quot;, &quot;St. Lawrence Island Yup'ik&quot;},\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;ypk&quot;,\n}\n\nm[&quot;esu&quot;] = {\n\tcanonicalName = &quot;Yup'ik&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;ypk&quot;,\n}\n\nm[&quot;esy&quot;] = {\n\tcanonicalName = &quot;Eskayan&quot;,\n\tscripts = {&quot;Latn&quot;}, -- also its own native script\n\tfamily = &quot;art&quot;,\n}\n\nm[&quot;etb&quot;] = {\n\
      \tcanonicalName = &quot;Etebi&quot;,\n}\n\nm[&quot;etc&quot;] = {\n\tcanonicalName = &quot;Etchemin&quot;,\n\tfamily = &quot;alg&quot;,\n}\n\nm[&quot;eth&quot;] = {\n\tcanonicalName = &quot;Ethiopian Sign Language&quot;,\n\tfamily = &quot;sgn&quot;,\n\
      }\n\nm[&quot;etn&quot;] = {\n\tcanonicalName = &quot;Eton (Vanuatu)&quot;,\n\totherNames = {&quot;Eton&quot;},\n\tfamily = &quot;poz-oce&quot;,\n}\n\nm[&quot;eto&quot;] = {\n\tcanonicalName = &quot;Eton (Cameroon)&quot;,\n\totherNames = {&quot;Eton&quot;},\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;etr&quot;] = {\n\tcanonicalName = &quot;Edolo&quot;,\n}\n\nm[&quot;ets&quot;] = {\n\tcanonicalName = &quot;Yekhee&quot;,\n\totherNames = {&quot;Afenmai&quot;, &quot;Afemai&quot;,\
      \ &quot;Etsako&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-edo&quot;,\n}\n\nm[&quot;ett&quot;] = {\n\tcanonicalName = &quot;Etruscan&quot;,\n\tscripts = {&quot;Ital&quot;},\n\tfamily = &quot;qfa-tyn&quot;,\n\ttranslit_module = &quot;Ital-translit&quot;,\n\
      }\n\nm[&quot;etu&quot;] = {\n\tcanonicalName = &quot;Ejagham&quot;,\n\tfamily = &quot;nic-bod&quot;,\n}\n\nm[&quot;etx&quot;] = {\n\tcanonicalName = &quot;Eten&quot;,\n}\n\nm[&quot;etz&quot;] = {\n\tcanonicalName = &quot;Semimi&quot;,\n}\n\nm[&quot;eve&quot;]\
      \ = {\n\tcanonicalName = &quot;Even&quot;,\n\tfamily = &quot;tuw&quot;,\n}\n\nm[&quot;evh&quot;] = {\n\tcanonicalName = &quot;Uvbie&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-edo&quot;,\n}\n\nm[&quot;evn&quot;] = {\n\tcanonicalName =\
      \ &quot;Evenki&quot;,\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;tuw&quot;,\n}\n\nm[&quot;ewo&quot;] = {\n\tcanonicalName = &quot;Ewondo&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;nic-bco&quot;,\n}\n\nm[&quot;ext&quot;] = {\n\tcanonicalName\
      \ = &quot;Extremaduran&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n}\n\nm[&quot;eya&quot;] = {\n\tcanonicalName = &quot;Eyak&quot;,\n\tfamily = &quot;xnd&quot;,\n}\n\nm[&quot;eyo&quot;] = {\n\tcanonicalName = &quot;Keiyo&quot;,\n\
      \tfamily = &quot;sdv&quot;,\n}\n\nm[&quot;eza&quot;] = {\n\tcanonicalName = &quot;Ezaa&quot;,\n\totherNames = {&quot;Ezza&quot;, &quot;Eza&quot;},\n\tfamily = &quot;alv-von&quot;,\n}\n\nm[&quot;eze&quot;] = {\n\tcanonicalName = &quot;Uzekwe&quot;,\n\t\
      family = &quot;nic-bco&quot;,\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:26.457Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=29188 t=1471300166351245
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:26 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1227.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1053 pass, cp3030 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 1557249843, 2670453438, 1213996281
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4998763\" pageid=\"4998763\" ns=\"828\" title=\"Module:etymology\"><revisions><rev user=\"CodeCat\" timestamp=\"2016-08-15T15:57:39Z\" comment=\"Extra checking for term parameters\
      \ on non-languages\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nfunction export.format_etyl(lang, source, sort_key)\n\tlocal info\n\t\n\tif source:getCode() == &quot;und&quot; then\n\t\tinfo = {\n\
      \t\t\tdisplay = &quot;undetermined&quot;,\n\t\t\tcat_name = &quot;other languages&quot;}\n\telseif source:getType() == &quot;etymology language&quot; then\n\t\tinfo = {\n\t\t\tdisplay = &quot;[[w:&quot; .. source:getWikipediaArticle() .. &quot;|&quot;\
      \ .. source:getCanonicalName() .. &quot;]]&quot;,\n\t\t\tcat_name = source:getCanonicalName()}\n\telseif source:getType() == &quot;family&quot; then\n\t\tinfo = {\n\t\t\tdisplay = &quot;[[w:&quot; .. source:getCategoryName() .. &quot;|&quot; .. source:getCanonicalName()\
      \ .. &quot;]]&quot;,\n\t\t\tcat_name = source:getCategoryName()}\n\telse\n\t\tinfo = {\n\t\t\tdisplay = &quot;[[w:&quot; .. source:getWikipediaArticle() .. &quot;|&quot; .. source:getCanonicalName() .. &quot;]]&quot;,\n\t\t\tcat_name = source:getCanonicalName()}\n\
      \tend\n\t\n\t-- Add the categories, but only if there is a current language\n\tlocal categories = &quot;&quot;\n\t\n\tif lang then\n\t\tlocal m_utilities = require(&quot;Module:utilities&quot;)\n\t\t\n\t\tcategories = {}\n\t\t\n\t\tif lang:getCode() ==\
      \ source:getCode() or (source:getType() == &quot;etymology language&quot; and lang:getCode() == source:getParentCode()) then\n\t\t\tcategories = m_utilities.format_categories({lang:getCanonicalName() .. &quot; twice-borrowed terms&quot;}, lang, sort_key)\n\
      \t\telse\n\t\t\tcategories = m_utilities.format_categories({lang:getCanonicalName() .. &quot; terms derived from &quot; .. info.cat_name}, lang, sort_key)\n\t\tend\n\tend\n\t\n\treturn &quot;&lt;span class=\\&quot;etyl\\&quot;&gt;&quot; .. info.display\
      \ .. categories .. &quot;&lt;/span&gt;&quot;\nend\n\n-- Internal implementation of {{cognate|...}} and {{cog|...}} templates\nfunction export.format_cognate(terminfo, sort_key)\n\treturn export.format_derived(nil, terminfo, sort_key)\nend\n\n-- Internal\
      \ implementation of {{derived|...}} and {{der|...}} templates\nfunction export.format_derived(lang, terminfo, sort_key)\n\tlocal source = terminfo.lang\n\n\tif not (terminfo.lang:getType() == &quot;regular&quot; or terminfo.lang:getType() == &quot;reconstructed&quot;\
      \ or terminfo.lang:getType() == &quot;etymology language&quot;) then\n\t\tif terminfo.term then\n\t\t\terror(&quot;A term was provided but the given code \\&quot;&quot; .. terminfo.lang:getCode() .. &quot;\\&quot; is not a language, and therefore cannot\
      \ have terms or dictionary entries.&quot;)\n\t\telse\n\t\t\tterminfo.term = &quot;-&quot;\n\t\tend\n\tend\n\t\n\tif terminfo.lang:getType() == &quot;etymology language&quot; then\n\t\tlocal parent = require(&quot;Module:languages&quot;).getByCode(terminfo.lang:getParentCode())\
      \ or\n\t\trequire(&quot;Module:families&quot;).getByCode(terminfo.lang:getParentCode())\n\n\t\tif not (parent:getType() == &quot;regular&quot; or parent:getType() == &quot;reconstructed&quot; or parent:getType() == &quot;etymology language&quot;) then\n\
      \t\t\tif terminfo.term then\n\t\t\t\terror(&quot;A term was provided but the given code \\&quot;&quot; .. terminfo.lang:getCode() .. &quot;\\&quot; is not a language, and therefore cannot have terms or dictionary entries.&quot;)\n\t\t\telse\n\t\t\t\tterminfo.term\
      \ = &quot;-&quot;\n\t\t\tend\n\t\tend\n\n\t\tterminfo.lang = parent\n\tend\n\t\n\tlocal link = &quot;&quot;\n\t\n\tif terminfo.term ~= &quot;-&quot; then\n\t\tlink = &quot; &quot; .. require(&quot;Module:links&quot;).full_link(terminfo, &quot;term&quot;,\
      \ true)\n\tend\n\t\n\treturn export.format_etyl(lang, source, sort_key) .. link\nend\n\n-- Internal implementation of {{inherited|...}} and {{inh|...}} templates\nfunction export.format_inherited(lang, terminfo, sort_key)\n\tlocal source = terminfo.lang\n\
      \n\tif not (terminfo.lang:getType() == &quot;regular&quot; or terminfo.lang:getType() == &quot;reconstructed&quot; or terminfo.lang:getType() == &quot;etymology language&quot;) then\n\t\tif terminfo.term then\n\t\t\terror(&quot;A term was provided but\
      \ the given code \\&quot;&quot; .. terminfo.lang:getCode() .. &quot;\\&quot; is not a language, and therefore cannot have terms or dictionary entries.&quot;)\n\t\telse\n\t\t\tterminfo.term = &quot;-&quot;\n\t\tend\n\tend\n\t\n\tif terminfo.lang:getType()\
      \ == &quot;etymology language&quot; then\n\t\tlocal parent = require(&quot;Module:languages&quot;).getByCode(terminfo.lang:getParentCode()) or\n\t\trequire(&quot;Module:families&quot;).getByCode(terminfo.lang:getParentCode())\n\n\t\tif not (parent:getType()\
      \ == &quot;regular&quot; or parent:getType() == &quot;reconstructed&quot; or parent:getType() == &quot;etymology language&quot;) then\n\t\t\tif terminfo.term then\n\t\t\t\terror(&quot;A term was provided but the given code \\&quot;&quot; .. terminfo.lang:getCode()\
      \ .. &quot;\\&quot; is not a language, and therefore cannot have terms or dictionary entries.&quot;)\n\t\t\telse\n\t\t\t\tterminfo.term = &quot;-&quot;\n\t\t\tend\n\t\tend\n\t\t\n\t\tterminfo.lang = parent\n\tend\n\n\tif not lang:hasAncestor(terminfo.lang)\
      \ and mw.title.getCurrentTitle().nsText ~= &quot;Template&quot; then\n\t\terror(terminfo.lang:getCanonicalName() .. &quot; is not an ancestor of &quot; .. lang:getCanonicalName() .. &quot;.&quot;)\n\tend\n\t\n\tlocal link = &quot;&quot;\n\t\n\tif terminfo.term\
      \ ~= &quot;-&quot; then\n\t\tlink = &quot; &quot; .. require(&quot;Module:links&quot;).full_link(terminfo, &quot;term&quot;, true)\n\tend\n\t\n\tlocal categories = require(&quot;Module:utilities&quot;).format_categories({lang:getCanonicalName() .. &quot;\
      \ terms inherited from &quot; .. source:getCanonicalName()}, lang, sort_key)\n\t\n\treturn export.format_etyl(nil, source, sort_key) .. link .. categories\nend\n\n-- Internal implementation of {{borrowed|...}} and {{bor|...}} templates\nfunction export.format_borrowed(lang,\
      \ terminfo, sort_key, nocap, notext, learned)\n\tif nocap then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;bor/nocap&quot;)\n\tend\n\t\n\tlocal source = terminfo.lang\n\n\tif not (terminfo.lang:getType() == &quot;regular&quot; or terminfo.lang:getType()\
      \ == &quot;reconstructed&quot; or terminfo.lang:getType() == &quot;etymology language&quot;) then\n\t\tif terminfo.term then\n\t\t\terror(&quot;A term was provided but the given code \\&quot;&quot; .. terminfo.lang:getCode() .. &quot;\\&quot; is not a\
      \ language, and therefore cannot have terms or dictionary entries.&quot;)\n\t\telse\n\t\t\tterminfo.term = &quot;-&quot;\n\t\tend\n\tend\n\t\n\tif terminfo.lang:getType() == &quot;etymology language&quot; then\n\t\tlocal parent = require(&quot;Module:languages&quot;).getByCode(terminfo.lang:getParentCode())\
      \ or\n\t\trequire(&quot;Module:families&quot;).getByCode(terminfo.lang:getParentCode())\n\n\t\tif not (parent:getType() == &quot;regular&quot; or parent:getType() == &quot;reconstructed&quot; or parent:getType() == &quot;etymology language&quot;) then\n\
      \t\t\tif terminfo.term then\n\t\t\t\terror(&quot;A term was provided but the given code \\&quot;&quot; .. terminfo.lang:getCode() .. &quot;\\&quot; is not a language, and therefore cannot have terms or dictionary entries.&quot;)\n\t\t\telse\n\t\t\t\tterminfo.term\
      \ = &quot;-&quot;\n\t\t\tend\n\t\tend\n\t\t\n\t\tterminfo.lang = parent\n\tend\n\n\tlocal text = &quot;&quot;\n\tlocal categories = {}\n\t\n\tif lang:getCode() == terminfo.lang:getCode() then\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot;\
      \ twice-borrowed terms&quot;)\n\telseif source:getType() == &quot;family&quot; then\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; terms borrowed from &quot; .. source:getCategoryName())\n\telse\n\t\ttable.insert(categories, lang:getCanonicalName()\
      \ .. &quot; terms borrowed from &quot; .. source:getCanonicalName())\n\tend\n\t\n\tif learned then\n\t\ttext = &quot;[[learned borrowing|&quot; .. (nocap and &quot;l&quot; or &quot;L&quot;) .. &quot;earned borrowing]] from &quot;\n\t\ttable.insert(categories,\
      \ lang:getCanonicalName() .. &quot; learnedly borrowed terms&quot;)\n\telse\n\t\ttext = &quot;[[Appendix:Glossary#loanword|&quot; .. (nocap and &quot;b&quot; or &quot;B&quot;) .. &quot;orrowing]] from &quot;\n\tend\n\t\n\tlocal link = &quot;&quot;\n\t\n\
      \tif terminfo.term ~= &quot;-&quot; then\n\t\tlink = &quot; &quot; .. require(&quot;Module:links&quot;).full_link(terminfo, &quot;term&quot;, true)\n\tend\n\t\n\tcategories = require(&quot;Module:utilities&quot;).format_categories(categories, lang, sort_key)\n\
      \t\n\treturn (notext and &quot;&quot; or text) .. export.format_etyl(nil, source, sort_key) .. link .. categories\nend\n\n-- Internal implementation of {{calque|...}} template\nfunction export.calque(lang, terminfo, parts, sort_key, nocap, notext)\n\t\
      local result = &quot;&quot;\n\t\n\tif parts and #parts ~= 0 then\n\t\tresult = result .. require(&quot;Module:compound&quot;).show_compound(lang, nil, parts)\n\t\tresult = result .. &quot;, [[Appendix:Glossary#calque|calque]] of&quot;\n\t\tresult = result\
      \ .. &quot;[[Category:calque with terms]] &quot;\n\telseif not notext then\n\t\tresult = result .. &quot;[[Appendix:Glossary#calque|&quot; .. (nocap and &quot;c&quot; or &quot;C&quot;) .. &quot;alque]] of &quot;\n\tend\n\t\n\tlocal categories = require(&quot;Module:utilities&quot;).format_categories({lang:getCanonicalName()\
      \ .. &quot; calques&quot;}, lang, sort_key)\n\t\n\tresult = result .. &quot; &quot; .. export.format_borrowed(lang, terminfo, sort_key, false, true, false) .. categories\n\t\n\treturn result\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:26.659Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=34916 t=1471300166549138
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:26 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1278.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1052 pass, cp3031 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 3172172491, 2016103612, 1213996723
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4073440\" pageid=\"4073440\" ns=\"828\" title=\"Module:utilities\"><revisions><rev user=\"CodeCat\" timestamp=\"2016-02-26T15:05:21Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nlocal notneeded = {\n\t[&quot;und&quot;] = true,\n\t[&quot;cmn&quot;] = true,\n\t[&quot;ja&quot;] = true,\n\t[&quot;zu&quot;] = true,\n\t[&quot;nan&quot;] = true,\n\t[&quot;yue&quot;]\
      \ = true,\n\t[&quot;ko&quot;] = true,\n}\n\nlocal neededhassubpage = {\n\t[&quot;ga&quot;] = true,\n\t[&quot;gv&quot;] = true,\n\t[&quot;nv&quot;] = true,\n\t[&quot;roa-jer&quot;] = true,\n\t[&quot;fr&quot;] = true,\n\t[&quot;rm&quot;] = true,\n\t[&quot;prg&quot;]\
      \ = true,\n\t[&quot;gd&quot;] = true,\n\t[&quot;twf&quot;] = true,\n\t[&quot;en&quot;] = true,\n\t[&quot;ro&quot;] = true,\n\t[&quot;egl&quot;] = true,\n\t[&quot;roa-tar&quot;] = true,\n\t[&quot;gl&quot;] = true,\n\t[&quot;ast&quot;] = true,\n\t[&quot;br&quot;]\
      \ = true,\n}\n\n-- A helper function to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nfunction export.pattern_escape(text)\n\ttext = (type(text) == &quot;table&quot; and text.args[1] or text)\n\ttext = mw.ustring.gsub(text, &quot;([%^$()%%.%[%]*+%-?|])&quot;,\
      \ &quot;%%%1&quot;)\n\treturn text\nend\n\n-- Format the categories with the appropriate sort key\nfunction export.format_categories(categories, lang, sort_key, sort_base)\n\tNAMESPACE = NAMESPACE or mw.title.getCurrentTitle().nsText\n\t\n\tif NAMESPACE\
      \ == &quot;&quot; or NAMESPACE == &quot;Appendix&quot; or NAMESPACE == &quot;Reconstruction&quot; then\n\t\tPAGENAME = PAGENAME or mw.title.getCurrentTitle().text\n\t\tSUBPAGENAME = SUBPAGENAME or mw.title.getCurrentTitle().subpageText\n\t\t\n\t\tif not\
      \ lang then\n\t\t\tlang = require(&quot;Module:languages&quot;).getByCode(&quot;und&quot;)\n\t\tend\n\t\t\n\t\t-- Generate a default sort key\n\t\tsort_base = lang:makeSortKey(sort_base or SUBPAGENAME)\n\t\t\n\t\tif sort_key then\n\t\t\t-- Gather some\
      \ statistics regarding sort keys\n\t\t\tif mw.ustring.lower(sort_key) == sort_base then\n\t\t\t\ttable.insert(categories, &quot;Sort key tracking/redundant&quot;)\n\t\t\tend\n\t\telse\n\t\t\tsort_key = sort_base\n\t\tend\n\t\t\n\t\t-- If the resulting\
      \ key is the same as the wiki software's default, remove it\n\t\tif sort_key == PAGENAME then\n\t\t\tsort_key = nil\n\t\tend\n\t\t\n\t\tfor key, cat in ipairs(categories) do\n\t\t\tcategories[key] = &quot;[[Category:&quot; .. cat .. (sort_key and &quot;|&quot;\
      \ .. sort_key or &quot;&quot;) .. &quot;]]&quot;\n\t\tend\n\t\t\n\t\treturn table.concat(categories, &quot;&quot;)\n\telse\n\t\treturn &quot;&quot;\n\tend\nend\n\n-- Used by {{categorize}}\nfunction export.template_categorize(frame)\n\tNAMESPACE = NAMESPACE\
      \ or mw.title.getCurrentTitle().nsText\n\tlocal format = frame.args[&quot;format&quot;]\n\tlocal args = frame:getParent().args\n\t\n\tlocal langcode = args[1]; if langcode == &quot;&quot; then langcode = nil end\n\tlocal sort_key = args[&quot;sort&quot;];\
      \ if sort_key == &quot;&quot; then sort_key = nil end\n\tlocal categories = {}\n\t\n\tif not langcode then\n\t\tif NAMESPACE == &quot;Template&quot; then return &quot;&quot; end\n\t\terror(&quot;Language code has not been specified. Please pass parameter\
      \ 1 to the template.&quot;)\n\tend\n\t\n\tlocal lang = require(&quot;Module:languages&quot;).getByCode(langcode)\n\t\n\tif not lang then\n\t\tif NAMESPACE == &quot;Template&quot; then return &quot;&quot; end\n\t\terror(&quot;The language code \\&quot;&quot;\
      \ .. langcode .. &quot;\\&quot; is not valid.&quot;)\n\tend\n\t\n\tlocal prefix = &quot;&quot;\n\t\n\tif format == &quot;pos&quot; then\n\t\tprefix = lang:getCanonicalName() .. &quot; &quot;\n\telseif format == &quot;topic&quot; then\n\t\tprefix = lang:getCode()\
      \ .. &quot;:&quot;\n\tend\n\t\n\tlocal i = 2\n\tlocal cat = args[i]\n\t\n\twhile cat do\n\t\tif cat ~= &quot;&quot; then\n\t\t\ttable.insert(categories, prefix .. cat)\n\t\tend\n\t\t\n\t\ti = i + 1\n\t\tcat = args[i]\n\tend\n\t\n\treturn export.format_categories(categories,\
      \ lang, sort_key)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:26.885Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Am&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=29345 t=1471300166778252
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:26 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1190.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1054 pass, cp3041 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 329461368, 2725068943, 1213997657
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="4580450" pageid="4580450" ns="10" title="Template:m"><revisions><rev user="CodeCat" timestamp="2014-10-30T23:32:44Z" comment="Redirected page to [[Template:mention]]" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">#REDIRECT [[Template:mention]]</rev></revisions></page></pages></query></api>
- recorded: 2016-08-15T22:29:27.069Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Amention&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=23487 t=1471300166972129
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1068 pass, cp3033 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 1875559932, 1171028189, 1213998104
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="4064248" pageid="4064248" ns="10" title="Template:mention"><revisions><rev user="Daniel Carrero" timestamp="2016-06-28T04:54:37Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:links/templates|l_term_t|face=term&lt;noinclude&gt;|demo=term&lt;/noinclude&gt;}}&lt;!--

      --&gt;{{#if:{{{lang|}}}|[[Category:m with lang]]}}&lt;!--

      --&gt;{{#ifeq:{{PAGENAME}}|RecentChanges||&lt;!--
          --&gt;{{#ifeq:{{{1|}}}|und|[[Category:Undetermined language links]]}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;{{redlink category|{{{1|}}}|{{{2|}}}|template=m}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2016-08-15T22:29:27.361Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=22332 t=1471300167254439
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1055 pass, cp3031 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 254636848, 2016104917, 1213999062
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4282542\" pageid=\"4282542\" ns=\"828\" title=\"Module:links/templates\"><revisions><rev user=\"CodeCat\" timestamp=\"2016-07-25T15:56:25Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local m_links = require(&quot;Module:links&quot;)\n\nlocal export = {}\n\n-- Used in [[Template:l]] and [[Template:m]]\nfunction export.l_term_t(frame)\n\tlocal face = frame.args[&quot;face&quot;]\n\t\
      local allowSelfLink = frame.args[&quot;notself&quot;]; allowSelfLink = not allowSelfLink or allowSelfLink == &quot;&quot;\n\t\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = {alias_of = &quot;gloss&quot;},\n\t\
      \t[&quot;g&quot;] = {list = true},\n\t\t[&quot;gloss&quot;] = {},\n\t\t[&quot;id&quot;] = {},\n\t\t[&quot;lit&quot;] = {},\n\t\t[&quot;pos&quot;] = {},\n\t\t[&quot;tr&quot;] = {},\n\t\t[&quot;sc&quot;] = {},\n\t}\n\t\n\t-- Compatibility mode for {{term}}.\n\
      \t-- If given a nonempty value, the function uses lang= to specify the\n\t-- language, and all the positional parameters shift one number lower.\n\tlocal compat = (frame.args[&quot;compat&quot;] or &quot;&quot;) ~= &quot;&quot;\n\t\n\tif compat then\n\t\
      \tparams[&quot;lang&quot;] = {},\n\t\ttable.remove(params, 1)\n\tend\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal lang = args[compat and &quot;lang&quot; or 1]\n\t\n\t-- Tracking for missing\
      \ language or und\n\tif not lang then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;link/no lang&quot;)\n\telseif lang == &quot;und&quot; then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;link/und&quot;)\n\tend\n\t\n\tlang = lang or &quot;und&quot;\n\
      \tlocal sc = args[&quot;sc&quot;]\n\t\n\tlocal term = args[(compat and 1 or 2)]\n\tlocal alt = args[(compat and 2 or 3)]\n\t\n\t-- Check parameters\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot;\
      \ .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\tif not term and not alt and frame.args[&quot;demo&quot;]\
      \ then\n\t\tterm = frame.args[&quot;demo&quot;]\n\tend\n\t\n\t-- Forward the information to full_link\n\treturn m_links.full_link({lang = lang, sc = sc, term = term, alt = alt, id = args[&quot;id&quot;], tr = args[&quot;tr&quot;], genders = args[&quot;g&quot;],\
      \ gloss = args[&quot;gloss&quot;], pos = args[&quot;pos&quot;], lit = args[&quot;lit&quot;]}, face, allowSelfLink)\nend\n\nfunction export.ll(frame)\n\tlocal args = frame:getParent().args\n\tlocal allowSelfLink = args[&quot;notself&quot;]; allowSelfLink\
      \ = not allowSelfLink or allowSelfLink == &quot;&quot;\n\t\n\tlocal lang = args[1]\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\t\n\tlocal\
      \ text = args[2]\n\tlocal alt = args[3]\n\tif text == &quot;&quot; then return alt or &quot;&quot; end\n\tif alt == &quot;&quot; then alt = nil end\n\t\n\tlocal id = args[&quot;id&quot;]; if id == &quot;&quot; then id = nil end\n\t\n\treturn m_links.language_link(text,\
      \ alt, lang, id, allowSelfLink)\nend\n\nfunction export.def_t(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = &quot;&quot;},\n\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\
      \treturn m_links.english_links(args[1])\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:27.573Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=34193 t=1471300167451090
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1221.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1052 pass, cp3032 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 3172174349, 2169860789, 1213999773
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"3935515\" pageid=\"3935515\" ns=\"828\" title=\"Module:links\"><revisions><rev user=\"CodeCat\" timestamp=\"2016-07-25T15:52:49Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\n--TODO: move to [[Module:languages]]\nlocal override_translit = {\n\t[&quot;ab&quot;] = true,\n\t[&quot;abq&quot;] = true,\n\t[&quot;ady&quot;] = true,\n\t[&quot;av&quot;] = true,\n\
      \t[&quot;axm&quot;] = true,\n\t[&quot;ba&quot;] = true,\n\t[&quot;bo&quot;] = true,\n\t[&quot;bua&quot;] = true,\n\t[&quot;ce&quot;] = true,\n\t[&quot;chm&quot;] = true,\n\t[&quot;cv&quot;] = true,\t\n\t[&quot;dar&quot;] = true,\n\t[&quot;dv&quot;] = true,\n\
      \t[&quot;dz&quot;] = true,\n\t[&quot;el&quot;] = true,\n\t[&quot;gmy&quot;] = true,\n\t[&quot;grc&quot;] = true,\n\t[&quot;hy&quot;] = true,\n\t[&quot;inh&quot;] = true,\n\t[&quot;iu&quot;] = true,\n\t[&quot;ka&quot;] = true,\n\t[&quot;kk&quot;] = true,\n\
      \t--[&quot;ko&quot;] = true,\n\t[&quot;kbd&quot;] = true,\n\t[&quot;kca&quot;] = true,\n\t[&quot;kjh&quot;] = true,\n\t[&quot;kjj&quot;] = true,\n\t[&quot;kn&quot;] = true,\n\t[&quot;koi&quot;] = true,\n\t[&quot;kpv&quot;] = true,\n\t[&quot;ky&quot;] =\
      \ true,\n\t[&quot;kv&quot;] = true,\n\t[&quot;lo&quot;] = true,\n\t[&quot;lbe&quot;] = true,\n\t[&quot;lez&quot;] = true,\n\t[&quot;lzz&quot;] = true,\n\t[&quot;mdf&quot;] = true,\n\t[&quot;ml&quot;] = true,\n\t[&quot;mn&quot;] = true,\n\t[&quot;my&quot;]\
      \ = true,\n\t[&quot;myv&quot;] = true,\n\t[&quot;nog&quot;] = true,\t\n\t[&quot;oge&quot;] = true,\n\t[&quot;os&quot;] = true,\n\t[&quot;sah&quot;] = true,\n\t[&quot;si&quot;] = true,\n\t[&quot;sgh&quot;] = true,\n\t[&quot;sva&quot;] = true,\n\t[&quot;ta&quot;]\
      \ = true,\n\t[&quot;tab&quot;] = true,\n\t[&quot;te&quot;] = true,\n\t[&quot;tg&quot;] = true,\n\t[&quot;tt&quot;] = true,\n\t[&quot;tyv&quot;] = true,\n\t[&quot;ug&quot;] = true,\n\t[&quot;udi&quot;] = true,\n\t[&quot;udm&quot;] = true,\n\t[&quot;xal&quot;]\
      \ = true,\n\t[&quot;xcl&quot;] = true,\n\t[&quot;xmf&quot;] = true,\n}\n\nlocal ignore_cap = {\n\t[&quot;ko&quot;] = true,\n}\n\nlocal phonetic_extraction = {\n\t[&quot;th&quot;] = &quot;Module:th&quot;\n}\n\nlocal pos_tags = {\n\t[&quot;a&quot;] = &quot;adjective&quot;,\n\
      \t[&quot;adv&quot;] = &quot;adverb&quot;,\n\t[&quot;int&quot;] = &quot;interjection&quot;,\n\t[&quot;n&quot;] = &quot;noun&quot;,\n\t[&quot;pron&quot;] = &quot;pronoun&quot;,\n\t[&quot;v&quot;] = &quot;verb&quot;,\n\t[&quot;vi&quot;] = &quot;intransitive\
      \ verb&quot;,\n\t[&quot;vt&quot;] = &quot;transitive verb&quot;,\n\t[&quot;vti&quot;] = &quot;transitive and intransitive verb&quot;,\n}\n\nfunction export.getLinkPage(target, lang)\n\t-- If the link contains unexpanded template parameters, then don't\
      \ create a link.\n\tif target:find(&quot;{{{&quot;, nil, true) then\n\t\treturn nil\n\tend\n\t\n\tif target:find(&quot;^:&quot;) or target:find(&quot;^w:&quot;) or target:find(&quot;^wikipedia:&quot;) then\n\t\treturn target\n\tend\n\t\n\t-- Remove diacritics\
      \ from the page name\n\ttarget = lang:makeEntryName(target)\n\t\n\t-- Link to appendix for reconstructed terms and terms in appendix-only languages\n\tif target:find(&quot;^*.&quot;) then\n\t\tif lang:getCode() == &quot;und&quot; then\n\t\t\treturn nil\n\
      \t\tend\n\t\t\n\t\ttarget = &quot;Reconstruction:&quot; .. lang:getCanonicalName() .. &quot;/&quot; .. mw.ustring.sub(target, 2)\n\telseif lang:getType() == &quot;reconstructed&quot; then\n\t\terror(&quot;The specified language &quot; .. lang:getCanonicalName()\
      \ .. &quot; is unattested, while the given word is not marked with '*' to indicate that it is reconstructed&quot;)\n\telseif lang:getType() == &quot;appendix-constructed&quot; then\n\t\ttarget = &quot;Appendix:&quot; .. lang:getCanonicalName() .. &quot;/&quot;\
      \ .. target\n\tend\n\t\n\treturn target\nend\n\n-- Make a language-specific link from given link's parts\nlocal function makeLangLink(link, lang, id, allowSelfLink)\n\t-- If there is no display form, then create a default one\n\tif not link.display then\n\
      \t\tlink.display = link.target\n\t\t\n\t\t-- Strip the prefix from the displayed form\n\t\t-- TODO: other interwiki links?\n\t\tif link.display:find(&quot;^:&quot;) then\n\t\t\tlink.display = link.display:gsub(&quot;^:&quot;, &quot;&quot;)\n\t\telseif\
      \ link.display:find(&quot;^w:&quot;) then\n\t\t\tlink.display = link.display:gsub(&quot;^w:&quot;, &quot;&quot;)\n\t\telseif link.display:find(&quot;^wikipedia:&quot;) then\n\t\t\tlink.display = link.display:gsub(&quot;^wikipedia:&quot;, &quot;&quot;)\n\
      \t\tend\n\tend\n\t\n\t-- Process the target\n\tlink.target = export.getLinkPage(link.target, lang)\n\t\n\tif not link.target then\n\t\treturn link.display\n\tend\n\t\n\t-- If the target is the same as the current page, then return a &quot;self-link&quot;\
      \ like the software does\n\tif not allowSelfLink and not id and (link.target == mw.title.getCurrentTitle().prefixedText or link.target == &quot;:&quot; .. mw.title.getCurrentTitle().prefixedText) then\n\t\treturn &quot;&lt;strong class=\\&quot;selflink\\\
      &quot;&gt;&quot; .. link.display .. &quot;&lt;/strong&gt;&quot;\n\tend\n\t\n\t-- Add fragment\n\t-- Do not add a section link to &quot;Undetermined&quot;, as such sections do not exist and are invalid.\n\t-- TabbedLanguages handles links without a section\
      \ by linking to the &quot;last visited&quot; section,\n\t-- but adding &quot;Undetermined&quot; would break that feature.\n\tif not (link.target:find(&quot;^w:&quot;) or link.target:find(&quot;^wikipedia:&quot;)) then\n\t\tif link.fragment or mw.ustring.find(link.target,\
      \ &quot;#$&quot;) then\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;links/fragment&quot;)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;links/fragment/&quot; .. lang:getCode())\n\t\tend\n\t\t\n\t\tif not link.fragment and lang:getCode()\
      \ ~= &quot;und&quot; then\n\t\t\tif id then\n\t\t\t\tlink.fragment = lang:getCanonicalName() .. &quot;-&quot; .. id\n\t\t\telseif not link.target:find(&quot;^Appendix:&quot;) and not link.target:find(&quot;^Reconstruction:&quot;) then\n\t\t\t\tlink.fragment\
      \ = lang:getCanonicalName()\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- This allows linking to pages like [[sms:a]] without it being treated weirdly.\n\tlink.target = mw.ustring.gsub(link.target, &quot;:&quot;, &quot;&amp;#x3a;&quot;)\n\t\n\treturn &quot;[[&quot;\
      \ .. link.target .. (link.fragment and &quot;#&quot; .. link.fragment or &quot;&quot;) .. &quot;|&quot; .. link.display .. &quot;]]&quot;\nend\n\n\n-- Split a link into its parts\nlocal function parseLink(linktext)\n\tlocal link = {target = linktext}\n\
      \tlocal found, _, first, second\n\t\n\tfound, _, first, second = mw.ustring.find(link.target, &quot;^([^|]+)|(.+)$&quot;)\n\t\n\tif found then\n\t\tlink.target = first\n\t\tlink.display = second\n\telse\n\t\tlink.display = link.target\n\tend\n\t\n\tfound,\
      \ _, first, second = mw.ustring.find(link.target, &quot;^(.+)#(.+)$&quot;)\n\t\n\tif found then\n\t\tlink.target = first\n\t\tlink.fragment = second\n\tend\n\t\n\treturn link\nend\n\n\n-- Creates a basic wikilink to the given term. If the text already\
      \ contains\n-- links, these are replaced with links to the correct section.\nlocal function language_link2(terminfo, allowSelfLink, dontLinkRecons)\n\tlocal text = terminfo.term\n\t\n\tif ignore_cap[terminfo.lang:getCode()] and text then\n\t\ttext = mw.ustring.gsub(text,\
      \ &quot;%^&quot;, &quot;&quot;)\n\tend\n\t\n\t-- If the text begins with * and another character,\n\t-- then act as if each link begins with *\n\tlocal allReconstructed = false\n\t\n\tif text:find(&quot;^*.&quot;) then\n\t\tallReconstructed = true\n\t\
      end\n\t\n\t-- Do we have embedded wikilinks?\n\tif text:find(&quot;[[&quot;, nil, true) then\n\t\tif terminfo.id then\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;links/bad id&quot;)\n\t\tend\n\t\t\n\t\t-- Begins and ends with a wikilink tag\n\t\
      \tif mw.ustring.find(text, &quot;^%[%[(.+)%]%]$&quot;) then\n\t\t\t-- There are no [ ] in between.\n\t\t\t-- This makes the wikilink tag redundant.\n\t\t\tif mw.ustring.find(text, &quot;^%[%[[^%[%]]+%]%]$&quot;) then\n\t\t\t\trequire(&quot;Module:debug&quot;).track(&quot;links/redundant\
      \ wikilink&quot;)\n\t\t\telse\n\t\t\t\tlocal temp = mw.ustring.gsub(text, &quot;^%[%[(.+)%]%]$&quot;, &quot;%1&quot;)\n\t\t\t\ttemp = mw.ustring.gsub(temp, &quot;%]%], %[%[&quot;, &quot;|&quot;)\n\t\t\t\t\n\t\t\t\tif not mw.ustring.find(temp, &quot;[%[%]]&quot;)\
      \ then\n\t\t\t\t\trequire(&quot;Module:debug&quot;).track(&quot;links/list&quot;)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\ttext = mw.ustring.gsub(text, &quot;%[%[([^%]]+)%]%]&quot;,\n\t\t\tfunction(linktext)\n\t\t\t\tlocal link = parseLink(linktext)\n\
      \t\t\t\t\n\t\t\t\tif allReconstructed then\n\t\t\t\t\tlink.target = &quot;*&quot; .. link.target\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\treturn makeLangLink(link, terminfo.lang, terminfo.id, allowSelfLink, dontLinkRecons)\n\t\t\tend\n\t\t\t)\n\t\t\n\t\t-- Remove\
      \ the extra * at the beginning if it's immediately followed\n\t\t-- by a link whose display begins with * too\n\t\tif allReconstructed then\n\t\t\ttext = mw.ustring.gsub(text, &quot;^%*%[%[([^|%]]+)|%*&quot;, &quot;[[%1|*&quot;)\n\t\tend\n\telse\n\t\t\
      -- There is no embedded wikilink, make a link using the parameters.\n\t\ttext = makeLangLink({target = text, display = terminfo.alt}, terminfo.lang, terminfo.id, allowSelfLink, dontLinkRecons)\n\tend\n\t\n\treturn text\nend\n\n\n-- Format the annotations\
      \ (things following the linked term)\nfunction export.format_link_annotations(terminfo, face)\n\tlocal ret = &quot;&quot;\n\t\n\t-- Interwiki link\n\tif terminfo.interwiki then\n\t\tret = ret .. terminfo.interwiki\n\tend\n\t\n\t-- Genders\n\tif terminfo.genders\
      \ and #terminfo.genders &gt; 0 then\n\t\tlocal gen = require(&quot;Module:gender and number&quot;)\n\t\tret = ret .. &quot;&amp;nbsp;&quot; .. gen.format_list(terminfo.genders, terminfo.lang)\n\tend\n\t\n\tlocal glosses = {}\n\t\n\t-- Transliteration\n\
      \tif terminfo.tr then\n\t\tif face == &quot;term&quot; then\n\t\t\ttable.insert(glosses, &quot;&lt;span lang=\\&quot;\\&quot; class=\\&quot;tr mention-tr\\&quot;&gt;&quot; .. terminfo.tr .. &quot;&lt;/span&gt;&quot;)\n\t\telse\n\t\t\ttable.insert(glosses,\
      \ &quot;&lt;span lang=\\&quot;\\&quot; class=\\&quot;tr\\&quot;&gt;&quot; .. terminfo.tr .. &quot;&lt;/span&gt;&quot;)\n\t\tend\n\tend\n\t\n\t-- Gloss/translation\n\tif terminfo.gloss then\n\t\ttable.insert(glosses, &quot;&lt;span class=\\&quot;mention-gloss-double-quote\\\
      &quot;&gt;“&lt;/span&gt;&lt;span class=\\&quot;mention-gloss\\&quot;&gt;&quot; .. terminfo.gloss .. &quot;&lt;/span&gt;&lt;span class=\\&quot;mention-gloss-double-quote\\&quot;&gt;”&lt;/span&gt;&quot;)\n\tend\n\t\n\t-- Part of speech\n\tif terminfo.pos\
      \ then\n\t\ttable.insert(glosses, pos_tags[terminfo.pos] or terminfo.pos)\n\tend\n\t\n\t-- Literal/sum-of-parts meaning\n\tif terminfo.lit then\n\t\ttable.insert(glosses, &quot;literally &lt;span class=\\&quot;mention-gloss-double-quote\\&quot;&gt;“&lt;/span&gt;&lt;span\
      \ class=\\&quot;mention-gloss\\&quot;&gt;&quot; .. terminfo.lit .. &quot;&lt;/span&gt;&lt;span class=\\&quot;mention-gloss-double-quote\\&quot;&gt;”&lt;/span&gt;&quot;)\n\tend\n\t\n\tif #glosses &gt; 0 then\n\t\tret = ret .. &quot; &amp;lrm;(&quot; ..\
      \ table.concat(glosses, &quot;, &quot;) .. &quot;)&quot;\n\tend\n\t\n\treturn ret\nend\n\n\n-- A version of {{l}} or {{m}} that can be called from other modules too\nfunction export.full_link(term, alt, lang, sc, face, id, annotations, allowSelfLink, dontLinkRecons)\n\
      \tlocal terminfo = term\n\t\n\tif type(terminfo) == &quot;table&quot; then\n\t\tface = alt\n\t\tallowSelfLink = lang\n\t\tdontLinkRecons = sc\n\telse\n\t\tterminfo = {term = term, alt = alt, lang = lang, sc = sc, id = id, genders = annotations and annotations.genders,\
      \ tr = annotations and annotations.tr, gloss = annotations and annotations.gloss, pos = annotations and annotations.pos, lit = annotations and annotations.lit, interwiki = annotations and annotations.interwiki}\n\t\trequire(&quot;Module:debug&quot;).track(&quot;links/term\
      \ not table&quot;)\n\tend\n\t\n\t-- Create the link\n\tlocal link = &quot;&quot;\n\t\n\tlocal m_utilities = require(&quot;Module:utilities&quot;)\n\tlocal m_scriptutils = require(&quot;Module:script utilities&quot;)\n\t\n\t-- Is there any text to show?\n\
      \tif (terminfo.term or terminfo.alt) then\n\t\t-- Try to detect the script if it was not provided\n\t\tif not terminfo.sc then\n\t\t\tterminfo.sc = require(&quot;Module:scripts&quot;).findBestScript(terminfo.alt or terminfo.term, terminfo.lang)\n\t\tend\n\
      \t\t\n\t\t-- Only make a link if the term has been given, otherwise just show the alt text without a link\n\t\tlink = m_scriptutils.tag_text(terminfo.term and language_link2(terminfo, allowSelfLink, dontLinkRecons) or terminfo.alt, terminfo.lang, terminfo.sc,\
      \ face)\n\telse\n\t\t-- No term to show.\n\t\t-- Is there at least a transliteration we can work from?\n\t\tlink = m_scriptutils.request_script(terminfo.lang, terminfo.sc)\n\t\t\n\t\tif link == &quot;&quot; or not terminfo.tr or terminfo.tr == &quot;-&quot;\
      \ then\n\t\t\t-- No link to show, and no transliteration either. Show a term request.\n\t\t\tlocal category = &quot;&quot;\n\t\t\t\n\t\t\tif mw.title.getCurrentTitle().nsText ~= &quot;Template&quot; then\n\t\t\t\tcategory = &quot;[[Category:&quot; .. terminfo.lang:getCanonicalName()\
      \ .. &quot; term requests]]&quot;\n\t\t\tend\n\t\t\t\n\t\t\tlink = &quot;&lt;small&gt;[Term?]&lt;/small&gt;&quot; .. category\n\n\t\t\tif terminfo.lang:getCode() ~= &quot;la&quot;\n\t\t\tand terminfo.lang:getCode() ~= &quot;grc&quot;\n\t\t\tand terminfo.lang:getCode()\
      \ ~= &quot;fr&quot;\n\t\t\tand terminfo.lang:getCode() ~= &quot;en&quot;\n\t\t\tand terminfo.lang:getCode() ~= &quot;pro&quot;\n\t\t\tand terminfo.lang:getCode() ~= &quot;cu&quot;\n\t\t\tand terminfo.lang:getCode() ~= &quot;ar&quot;\n\t\t\tand terminfo.lang:getCode()\
      \ ~= &quot;it&quot;\n\t\t\tand terminfo.lang:getCode() ~= &quot;ota&quot;\n\t\t\tand terminfo.lang:getCode() ~= &quot;de&quot;\n\t\t\tand terminfo.lang:getCode() ~= &quot;ira-pro&quot;\n\t\t\tand terminfo.lang:getCode() ~= &quot;enm&quot;\n\t\t\tand terminfo.lang:getCode()\
      \ ~= &quot;ang&quot;\n\t\t\tand terminfo.lang:getCode() ~= &quot;ine-pro&quot;\n\t\t\tand terminfo.lang:getCode() ~= &quot;sh&quot;\n\t\t\tand terminfo.lang:getCode() ~= &quot;zlw-slv&quot;\n\t\t\tand terminfo.lang:getCode() ~= &quot;akk&quot;\n\t\t\t\
      and terminfo.lang:getCode() ~= &quot;gmh&quot;\n\t\t\tand terminfo.lang:getCode() ~= &quot;fro&quot;\n\t\t\tthen link = link .. &quot;[[Category:Daniel Carrero's test category]]&quot; end\n\t\tend\n\tend\n\t\n\tlocal mantrFix, redtrFix\n\tlocal manual_tr\
      \ = &quot;&quot;\n\t\n\tif terminfo.tr == &quot;&quot; or terminfo.tr == &quot;-&quot; then\n\t\tterminfo.tr = nil\n\t\t\n\telseif phonetic_extraction[terminfo.lang:getCode()] then\n\t\tlocal m_phonetic = require(phonetic_extraction[terminfo.lang:getCode()])\n\
      \t\tterminfo.tr = terminfo.tr or m_phonetic.getTranslit(export.remove_links(terminfo.term))\n\t\n\telseif (terminfo.term or terminfo.alt) and not ((terminfo.sc:getCode():find(&quot;Latn&quot;, nil, true)) or terminfo.sc:getCode() == &quot;Latinx&quot;)\
      \ and (not terminfo.tr or override_translit[terminfo.lang:getCode()]) then\n\t\t-- Try to generate a transliteration if necessary\n\t\tlocal automated_tr = terminfo.lang:transliterate(export.remove_links(terminfo.alt or terminfo.term), terminfo.sc)\n\t\
      \t\n\t\tif automated_tr then\n\t\t\tif terminfo.tr ~= automated_tr then\n\t\t\t\tif terminfo.tr then\n\t\t\t\t\tmanual_tr = terminfo.tr\n\t\t\t\t\tmantrFix = true\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif terminfo.lang:link_tr() then\n\t\t\t\t\tautomated_tr =\
      \ makeLangLink({target = automated_tr}, terminfo.lang)\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tterminfo.tr = automated_tr\n\t\t\telse\n\t\t\t\tredtrFix = true\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn link .. export.format_link_annotations(terminfo, face)\n\t\t\
      \t\t.. (mantrFix and &quot;[[Category:Terms with manual transliterations different from the automated ones]][[Category:Terms with manual transliterations different from the automated ones/&quot; .. terminfo.lang:getCode() .. &quot;]]&quot; or &quot;&quot;)\n\
      \t\t\t\t.. (redtrFix and &quot;[[Category:Terms with redundant transliterations]][[Category:Terms with redundant transliterations/&quot; .. terminfo.lang:getCode() .. &quot;]]&quot; or &quot;&quot;)\nend\n\n\nfunction export.language_link(text, alt, lang,\
      \ id, allowSelfLink)\n\tlocal terminfo = text\n\t\n\tif type(terminfo) == &quot;table&quot; then\n\t\tallowSelfLink = alt\n\telse\n\t\tterminfo = {term = text, alt = alt, lang = lang, id = id}\n\t\trequire(&quot;Module:debug&quot;).track(&quot;links/term\
      \ not table&quot;)\n\tend\n\t\n\treturn language_link2(terminfo, allowSelfLink)\nend\n\n\n-- Strips all square brackets out or replaces them.\nfunction export.remove_links(text)\n\tif type(text) == &quot;table&quot; then text = text.args[1] end; if not\
      \ text then text = &quot;&quot; end\n\t\n\ttext = text:gsub(&quot;%[%[Category:[^|%]]-|?[^|%]]-%]%]&quot;, &quot;&quot;)\n\ttext = text:gsub(&quot;%[%[[^|%]]-|&quot;, &quot;&quot;)\n\ttext = text:gsub(&quot;%[%[&quot;, &quot;&quot;)\n\ttext = text:gsub(&quot;%]%]&quot;,\
      \ &quot;&quot;)\n\n\treturn text\nend\n\nfunction export.english_links(text)\n\tlocal lang = require(&quot;Module:languages&quot;).getByCode(&quot;en&quot;)\n\t\n\ttext = mw.ustring.gsub(text, &quot;%[%[([^%]]+)%]%]&quot;,\n\t\tfunction(linktext)\n\t\t\
      \tlocal link = parseLink(linktext)\n\t\t\treturn makeLangLink(link, lang, nil, true, false)\n\t\tend\n\t)\n\t\n\treturn text\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:27.838Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=32500 t=1471300167726678
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1068 pass, cp3031 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 1875561155, 2016105308, 1214000427
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4099100\" pageid=\"4099100\" ns=\"828\" title=\"Module:script utilities\"><revisions><rev user=\"Benwing\" timestamp=\"2016-08-15T02:29:06Z\" comment=\"support &#039;hypothetical&#039;\
      \ face in tag_text()\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\n-- Implements [[Template:lang]]\nfunction export.lang_t(frame)\n\tlocal args = frame:getParent().args\n\tNAMESPACE = mw.title.getCurrentTitle().nsText\n\
      \t\n\tlocal lang = args[1]; if lang == &quot;&quot; then lang = nil end\n\tlocal text = args[2] or &quot;&quot;\n\tlocal sc = args[&quot;sc&quot;]; if sc == &quot;&quot; then sc = nil end\n\tlocal face = args[&quot;face&quot;]; if face == &quot;&quot;\
      \ then face = nil end\n\t\n\tlang = lang or (NAMESPACE == &quot;Template&quot; and &quot;und&quot;) or error(&quot;Language code has not been specified. Please pass parameter 1 to the template.&quot;)\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang)\
      \ or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;))\
      \ or nil)\n\t\n\treturn export.tag_text(text, lang, sc, face)\nend\n\n-- Wrap text in the appropriate HTML tags with language and script class.\nfunction export.tag_text(text, lang, sc, face)\n\tif not sc then\n\t\tsc = require(&quot;Module:scripts&quot;).findBestScript(text,\
      \ lang)\n\tend\n\t\n\t-- Add a script wrapper\n\tif face == &quot;term&quot; then\n\t\treturn '&lt;i class=&quot;' .. sc:getCode() .. ' mention&quot; lang=&quot;' .. lang:getCode() .. '&quot;&gt;' .. text .. '&lt;/i&gt;'\n\telseif face == &quot;head&quot;\
      \ then\n\t\treturn '&lt;strong class=&quot;' .. sc:getCode() .. ' headword&quot; lang=&quot;' .. lang:getCode() .. '&quot;&gt;' .. text .. '&lt;/strong&gt;'\n\telseif face == &quot;hypothetical&quot; then\n\t\treturn '&lt;span class=&quot;hypothetical-star&quot;&gt;*&lt;/span&gt;&lt;i\
      \ class=&quot;' .. sc:getCode() .. ' hypothetical&quot; lang=&quot;' .. lang:getCode() .. '&quot;&gt;' .. text .. '&lt;/i&gt;'\n\telseif face == &quot;bold&quot; then\n\t\treturn '&lt;b class=&quot;' .. sc:getCode() .. '&quot; lang=&quot;' .. lang:getCode()\
      \ .. '&quot;&gt;' .. text .. '&lt;/b&gt;'\n\telseif face == nil then\n\t\treturn '&lt;span class=&quot;' .. sc:getCode() .. '&quot; lang=&quot;' .. lang:getCode() .. '&quot;&gt;' .. text .. '&lt;/span&gt;'\n\telse\n\t\terror(&quot;Invalid script face \\\
      &quot;&quot; .. face .. &quot;\\&quot;.&quot;)\n\tend\nend\n\n-- Add a notice to request the native script of a word\nfunction export.request_script(lang, sc)\n\tlocal scripts = lang:getScripts()\n\t\n\t-- By default, request for &quot;native&quot; script\n\
      \tlocal cat_script = &quot;native&quot;\n\tlocal disp_script = &quot;script&quot;\n\t\n\t-- If the script was not specified, and the language has only one script, use that.\n\tif not sc and #scripts == 1 then\n\t\tsc = scripts[1]\n\tend\n\t\n\t-- Is the\
      \ script known?\n\tif sc then\n\t\t-- If the script is Latin, return nothing.\n\t\tif is_Latin_script(sc) then\n\t\t\treturn &quot;&quot;\n\t\tend\n\t\t\n\t\tif sc:getCode() ~= scripts[1]:getCode() then\n\t\t\tdisp_script = sc:getCanonicalName()\n\t\t\
      end\n\t\t\n\t\t-- The category needs to be specific to script only if there is chance\n\t\t-- of ambiguity. This occurs when lang=und, or when the language has\n\t\t-- multiple scripts.\n\t\tif lang:getCode() == &quot;und&quot; or scripts[2] then\n\t\t\
      \tcat_script = sc:getCanonicalName()\n\t\tend\n\telse\n\t\t-- The script is not known.\n\t\t-- Does the language have at least one non-Latin script in its list?\n\t\tlocal has_nonlatin = false\n\t\t\n\t\tfor i, val in ipairs(scripts) do\n\t\t\tif not is_Latin_script(val)\
      \ then\n\t\t\t\thas_nonlatin = true\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- If there are non-Latin scripts, return nothing.\n\t\tif not has_nonlatin then\n\t\t\treturn &quot;&quot;\n\t\tend\n\tend\n\t\n\tlocal category = &quot;&quot;\n\t\n\tif\
      \ mw.title.getCurrentTitle().nsText ~= &quot;Template&quot; then\n\t\tcategory = &quot;[[Category:&quot; .. lang:getCanonicalName() .. &quot; terms needing &quot; .. cat_script .. &quot; script]]&quot;\n\tend\n\t\n\treturn &quot;&lt;small&gt;[&quot; ..\
      \ disp_script .. &quot; needed]&lt;/small&gt;&quot; .. category\nend\n\nfunction export.template_rfscript(frame)\n\tlocal args = frame.args\n\tlocal lang = args[1] or error(&quot;The first parameter (language code) has not been given&quot;)\n\tlocal sc\
      \ = args[&quot;sc&quot;]; if sc == &quot;&quot; then sc = nil end\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc)\
      \ or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\tlocal ret = export.request_script(lang, sc)\n\t\n\tif ret == &quot;&quot; then\n\t\terror(&quot;This language is written in the Latin alphabet.\
      \ It does not need a native script.&quot;)\n\telse\n\t\treturn ret\n\tend\nend\n\nfunction is_Latin_script(sc)\n\treturn (sc:getCode():find(&quot;Latn&quot;, nil, true)) or sc:getCode() == &quot;Latinx&quot;\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:28.020Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=21218 t=1471300167923183
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1068 pass, cp3031 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 1875562163, 2016105987, 1214001423
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4216643\" pageid=\"4216643\" ns=\"828\" title=\"Module:scripts\"><revisions><rev user=\"Daniel Carrero\" timestamp=\"2016-07-29T08:24:51Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\nlocal Script = {}\n\nfunction Script:getCode()\n\treturn self._code\nend\n\nfunction Script:getCanonicalName()\n\treturn self._rawData.canonicalName\nend\n\nfunction Script:getOtherNames()\n\
      \treturn self._rawData.otherNames or {}\nend\n\nfunction Script:getParent()\n\treturn self._rawData.parent\nend\n\nfunction Script:getSystems()\n\tif not self._systemObjects then\n\t\tlocal m_systems = require(&quot;Module:Writing systems&quot;)\n\t\t\
      self._systemObjects = {}\n\t\t\n\t\tfor _, sys in ipairs(self._rawData.systems or {}) do\n\t\t\ttable.insert(self._systemObjects, m_systems.getByCode(sys))\n\t\tend\n\tend\n\t\n\treturn self._systemObjects\nend\n\n--function Script:getAllNames()\n--\t\
      return self._rawData.names\n--end\n\n\nfunction Script:getType()\n\treturn &quot;script&quot;\nend\n\n\nfunction Script:getCategoryName()\n\tlocal name = self._rawData.canonicalName\n\t\n\t-- If the name already has &quot;script&quot; in it, don't add\
      \ it.\n\tif name:find(&quot;[Ss]script$&quot;) then\n\t\treturn name\n\telse\n\t\treturn name .. &quot; script&quot;\n\tend\nend\n\n\nfunction Script:countCharacters(text)\n\tif not self._rawData.characters then\n\t\treturn 0\n\telse\n\t\tlocal _, num\
      \ = mw.ustring.gsub(text, &quot;[&quot; .. self._rawData.characters .. &quot;]&quot;, &quot;&quot;)\n\t\treturn num\n\tend\nend\n\n\nfunction Script:getRawData()\n\treturn self._rawData\nend\n\n\nfunction Script:toJSON()\n\tlocal ret = {\n\t\tcanonicalName\
      \ = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\totherNames = self:getOtherNames(),\n\t\ttype = self:getType(),\n\t\t}\n\t\n\treturn require(&quot;Module:JSON&quot;).toJSON(ret)\nend\n\n\nScript.__index\
      \ = Script\n\n\nfunction export.makeObject(code, data)\n\treturn data and setmetatable({ _rawData = data, _code = code }, Script) or nil\nend\n\n\nfunction export.getByCode(code)\n\tif code == &quot;IPAchar&quot; then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;IPAchar&quot;)\n\
      \tend\n\treturn export.makeObject(code, mw.loadData(&quot;Module:scripts/data&quot;)[code])\nend\n\n\n-- Find the best script to use, based on the characters of a string.\nfunction export.findBestScript(text, lang)\n\tif not text or not lang then\n\t\t\
      return export.getByCode(&quot;None&quot;)\n\tend\n\t\n\tlocal scripts = lang:getScripts()\n\t\n\t-- Try to match every script against the text,\n\t-- and return the one with the most matching characters.\n\tlocal bestcount = 0\n\tlocal bestscript = nil\n\
      \t\n\tfor i, script in ipairs(scripts) do\n\t\tlocal count = script:countCharacters(text)\n\t\t\n\t\tif count &gt; bestcount then\n\t\t\tbestcount = count\n\t\t\tbestscript = script\n\t\tend\n\tend\n\t\n\tif bestscript then\n\t\treturn bestscript\n\tend\n\
      \t\n\t-- No matching script was found. Return &quot;None&quot;.\n\treturn export.getByCode(&quot;None&quot;)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:28.305Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=30798 t=1471300168192253
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:28 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1205.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1067 pass, cp3041 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 3134176461, 2725071395, 1214002277
    body: !!binary |-
      
- recorded: 2016-08-15T22:29:28.527Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aredlink+category&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=24607 t=1471300168421603
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:28 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1230.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1055 pass, cp3041 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 254639813, 2725072164, 1214003524
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="5379564" pageid="5379564" ns="10" title="Template:redlink category"><revisions><rev user="Daniel Carrero" timestamp="2016-07-03T13:52:45Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">&lt;!--
      --&gt;{{#switch:{{PAGENAME}}|-ere|mies|water|=|&lt;!--
          --&gt;{{#ifeq:{{NAMESPACE}}||&lt;!--
              --&gt;{{#switch:{{{1}}}|grc|fi|it|pt|gml|ru=&lt;!-- testing
                  --&gt;{{#ifeq:{{isValidPageName|{{{2|}}}}}|valid|&lt;!--
                      --&gt;{{#invoke:redlink category|cat|{{{1}}}|{{{2}}}|template={{{template|-}}}}}&lt;!--
                  --&gt;}}&lt;!--
              --&gt;}}&lt;!--
          --&gt;}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2016-08-15T22:29:29.082Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Al&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=26527 t=1471300168982455
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1065 pass, cp3041 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 2761855335, 2725073449, 1214005693
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="4580518" pageid="4580518" ns="10" title="Template:l"><revisions><rev user="CodeCat" timestamp="2014-10-30T23:36:59Z" comment="CodeCat moved page [[Template:l]] to [[Template:link]] over redirect" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">#REDIRECT [[Template:link]]</rev></revisions></page></pages></query></api>
- recorded: 2016-08-15T22:29:29.265Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alink&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=23922 t=1471300169166766
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1233.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1068 pass, cp3033 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 1875565254, 1171032710, 1214006142
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="784216" pageid="784216" ns="10" title="Template:link"><revisions><rev user="Daniel Carrero" timestamp="2016-07-06T16:27:48Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:links/templates|l_term_t&lt;noinclude&gt;|demo=term&lt;/noinclude&gt;}}&lt;!--

      --&gt;{{#ifeq:{{PAGENAME}}|RecentChanges||&lt;!--
          --&gt;{{#ifeq:{{{1|}}}|und|[[Category:Undetermined language links]]}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;{{redlink category|{{{1|}}}|{{{2|}}}|template=l}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2016-08-15T22:29:29.730Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aen-suffix&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=29584 t=1471300169626832
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1192.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1052 pass, cp3043 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 3172180391, 2082320669, 1214007468
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="2046761" pageid="2046761" ns="10" title="Template:en-suffix"><revisions><rev user="CodeCat" timestamp="2015-05-06T14:01:01Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{head|en|suffix|head={{{head|}}}|cat2={{{cat2|}}}|cat3={{{cat3|}}}}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2016-08-15T22:29:29.921Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ahead&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=30922 t=1471300169815533
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1204.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1067 pass, cp3031 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 3134180571, 2016110099, 1214008615
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="338925" pageid="338925" ns="10" title="Template:head"><revisions><rev user="CodeCat" timestamp="2016-03-20T01:41:19Z" comment="Changed protection level for &quot;[[Template:head]]&quot;: No reason for cascading projection. This is a very restrictive protection level and needs to be well motivated. ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:headword/templates|head_t}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2016-08-15T22:29:30.140Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=31970 t=1471300170030965
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1225.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1052 pass, cp3033 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 3172181683, 1171034634, 1214009466
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4262766\" pageid=\"4262766\" ns=\"828\" title=\"Module:headword/templates\"><revisions><rev user=\"JohnC5\" timestamp=\"2016-06-25T19:51:16Z\" comment=\"Undo revision 38902248\
      \ by [[Special:Contributions/JohnC5|JohnC5]] ([[User talk:JohnC5|talk]])\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\n-- Part of speech types that should not be pluralized.\nlocal invariable = {\n\
      \t[&quot;cmavo&quot;] = true,\n\t[&quot;cmene&quot;] = true,\n\t[&quot;fu'ivla&quot;] = true,\n\t[&quot;gismu&quot;] = true,\n\t[&quot;Han tu&quot;] = true,\n\t[&quot;hanzi&quot;] = true,\n\t[&quot;hanja&quot;] = true,\n\t[&quot;jyutping&quot;] = true,\n\
      \t[&quot;kanji&quot;] = true,\n\t[&quot;lujvo&quot;] = true,\n\t[&quot;phrasebook&quot;] = true,\n\t[&quot;pinyin&quot;] = true,\n\t[&quot;rafsi&quot;] = true,\n\t[&quot;romaji&quot;] = true,\n}\n\nlocal params = {\n\t[1] = {required = true, default =\
      \ &quot;und&quot;},\n\t[&quot;sc&quot;] = {},\n\t[&quot;cat sc&quot;] = {},\n\t[&quot;sort&quot;] = {},\n\t\n\t[2] = {required = true},\n\t[&quot;cat2&quot;] = {},\n\t[&quot;cat3&quot;] = {},\n\t[&quot;cat4&quot;] = {},\n\t\n\t[&quot;head&quot;] = {list\
      \ = true, allow_holes = true, default = &quot;&quot;},\n\t[&quot;tr&quot;] = {list = true, allow_holes = true},\n\t[&quot;g&quot;] = {list = true},\n\t\n\t[3] = {list = true, allow_holes = true},\n\t\n\t[&quot;f=accel&quot;]   = {list = true, allow_holes\
      \ = true},\n\t[&quot;f=request&quot;] = {list = true, allow_holes = true},\n\t[&quot;f=alt&quot;]     = {list = true, allow_holes = true},\n\t[&quot;f=sc&quot;]      = {list = true, allow_holes = true},\n\t[&quot;f=id&quot;]      = {list = true, allow_holes\
      \ = true},\n\t[&quot;f=tr&quot;]      = {list = true, allow_holes = true},\n\t[&quot;f=g&quot;]       = {list = true, allow_holes = true},\n\t[&quot;f=qual&quot;]    = {list = true, allow_holes = true},\n\t[&quot;f=nolink&quot;]  = {list = true, allow_holes\
      \ = true, type = &quot;boolean&quot;},\n\t[&quot;f=lang&quot;]    = {list = true, allow_holes = true},\n}\n\nfunction export.head_t(frame)\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\t-- Get language\
      \ and script information\n\tlocal lang = args[1]\n\tlocal sc = args[&quot;sc&quot;]\n\tlocal cat_sc = args[&quot;cat sc&quot;]\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\\
      &quot; is not valid.&quot;)\n\t\n\tif cat_sc then\n\t\tcat_sc = (cat_sc and (require(&quot;Module:scripts&quot;).getByCode(cat_sc) or error(&quot;The script code \\&quot;&quot; .. cat_sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\tsc = cat_sc\n\
      \telse\n\t\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\tend\n\t\n\t-- Gather basic parameters\n\tlocal sort_key = args[&quot;sort&quot;]\n\
      \tlocal pos = args[2]\n\tlocal cat2 = args[&quot;cat2&quot;]\n\tlocal cat3 = args[&quot;cat3&quot;]\n\tlocal cat4 = args[&quot;cat4&quot;]\n\tlocal heads = args[&quot;head&quot;]\n\tlocal translits = args[&quot;tr&quot;]\n\tlocal genders = args[&quot;g&quot;]\n\
      \tlocal accels = args[&quot;faccel&quot;]\n\tlocal requests = args[&quot;frequest&quot;]\n\tlocal alts = args[&quot;falt&quot;]\n\tlocal gs = args[&quot;fg&quot;]\n\tlocal ids = args[&quot;fid&quot;]\n\tlocal langs = args[&quot;flang&quot;]\n\tlocal nolinks\
      \ = args[&quot;fnolink&quot;]\n\tlocal quals = args[&quot;fqual&quot;]\n\tlocal scs = args[&quot;fsc&quot;]\n\tlocal trs = args[&quot;ftr&quot;]\n\t\n\t-- Gather inflected forms\n\tlocal inflections = {}\n\t\n\t-- Go over all the inflection parameters\n\
      \tfor i = 1, math.ceil(args[3].maxindex / 2) do\n\t\tlocal infl_part = {\n\t\t\tlabel    = args[3][i * 2 - 1],\n\t\t\taccel    = accels[i],\n\t\t\trequest  = requests[i],\n\t\t\t}\n\t\t\n\t\tlocal form = {\n\t\t\tterm       =  args[3][i * 2],\n\t\t\talt\
      \        =  alts[i],\n\t\t\tgenders    = {gs[i]},\n\t\t\tid         =  ids[i],\n\t\t\tlang       =  langs[i],\n\t\t\tnolink     =  nolinks[i],\n\t\t\tqualifiers = {quals[i]},\n\t\t\tsc         =  scs[i],\n\t\t\ttranslit   =  trs[i],\n\t\t\t}\n\t\t\n\t\t\
      if form.lang ~= nil then\n\t\t\tform.lang = require(&quot;Module:languages&quot;).getByCode(form.lang) or error(&quot;The language code \\&quot;&quot; .. form.lang .. &quot;\\&quot; is not valid.&quot;)\n\t\tend\n\t\t\n\t\tif form.sc ~= nil then\n\t\t\t\
      form.sc = require(&quot;Module:scripts&quot;).getByCode(form.sc) or error(&quot;The script code \\&quot;&quot; .. form.sc .. &quot;\\&quot; is not valid.&quot;)\n\t\tend\n\t\t\n\t\t-- If no term or alt is given, then the label is shown alone.\n\t\tif form.term\
      \ or form.alt then\n\t\t\ttable.insert(infl_part, form)\n\t\tend\n\t\t\n\t\tif infl_part.label == &quot;or&quot; then\n\t\t\t-- Append to the previous inflection part, if one exists\n\t\t\tif #infl_part &gt; 0 and inflections[1] then\n\t\t\t\ttable.insert(inflections[#inflections],\
      \ form)\n\t\t\tend\n\t\telseif infl_part.label then\n\t\t\t-- Add a new inflection part\n\t\t\ttable.insert(inflections, infl_part)\n\t\tend\n\tend\n\t\n\t-- Get/set categories\n\tlocal categories = {}\n\tlocal tracking_categories = {}\n\t\n\tif pos then\n\
      \t\tif not pos:find(&quot;s$&quot;) and not invariable[pos] then\n\t\t\t-- Make the plural form of the part of speech\n\t\t\tif pos:find(&quot;x$&quot;) then\n\t\t\t\tpos = pos .. &quot;es&quot;\n\t\t\telse\n\t\t\t\tpos = pos .. &quot;s&quot;\n\t\t\tend\n\
      \t\tend\n\t\t\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; &quot; .. pos .. (cat_sc and &quot; in &quot; .. cat_sc:getCategoryName() or &quot;&quot;))\n\tend\n\t\n\tif cat2 then\n\t\ttable.insert(categories, lang:getCanonicalName() ..\
      \ &quot; &quot; .. cat2)\n\tend\n\t\n\tif cat3 then\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; &quot; .. cat3)\n\tend\n\t\n\tif cat4 then\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; &quot; .. cat4)\n\tend\n\t\n\t\
      if #categories == 0 and mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\tcategories = {&quot;Undetermined nouns&quot;}\n\tend\n\t\n\treturn\n\t\trequire(&quot;Module:headword&quot;).full_headword(lang, sc, heads, translits, genders,\
      \ inflections, categories, sort_key) ..\n\t\trequire(&quot;Module:utilities&quot;).format_categories(tracking_categories, lang, sort_key)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:30.371Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=27508 t=1471300170261177
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1287.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1053 pass, cp3030 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 1557259501, 2670461147, 1214010310
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"3989053\" pageid=\"3989053\" ns=\"828\" title=\"Module:headword\"><revisions><rev user=\"CodeCat\" timestamp=\"2016-08-15T17:25:25Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nlocal lemmas = {\n\t[&quot;abbreviations&quot;] = true,\n\t[&quot;acronyms&quot;] = true,\n\t[&quot;adjectives&quot;] = true,\n\t[&quot;adnominals&quot;] = true,\n\t[&quot;adpositions&quot;]\
      \ = true,\n\t[&quot;adverbs&quot;] = true,\n\t[&quot;affixes&quot;] = true,\n\t[&quot;ambipositions&quot;] = true,\n\t[&quot;articles&quot;] = true,\n\t[&quot;circumfixes&quot;] = true,\n\t[&quot;circumpositions&quot;] = true,\n\t[&quot;classifiers&quot;]\
      \ = true,\n\t[&quot;cmavo&quot;] = true,\n\t[&quot;cmavo clusters&quot;] = true,\n\t[&quot;cmene&quot;] = true,\n\t[&quot;comparative adjectives&quot;] = true,\n\t[&quot;comparative adverbs&quot;] = true,\n\t[&quot;conjunctions&quot;] = true,\n\t[&quot;contractions&quot;]\
      \ = true,\n\t[&quot;counters&quot;] = true,\n\t[&quot;determiners&quot;] = true,\n\t[&quot;diacritical marks&quot;] = true,\n\t[&quot;equative adjectives&quot;] = true,\n\t[&quot;fu'ivla&quot;] = true,\n\t[&quot;gismu&quot;] = true,\n\t[&quot;Han characters&quot;]\
      \ = true,\n\t[&quot;Han tu&quot;] = true,\n\t[&quot;hanzi&quot;] = true,\n\t[&quot;hanja&quot;] = true,\n\t[&quot;idioms&quot;] = true,\n\t[&quot;infixes&quot;] = true,\n\t[&quot;interfixes&quot;] = true,\n\t[&quot;initialisms&quot;] = true,\n\t[&quot;interjections&quot;]\
      \ = true,\n\t[&quot;kanji&quot;] = true,\n\t[&quot;letters&quot;] = true,\n\t[&quot;ligatures&quot;] = true,\n\t[&quot;lujvo&quot;] = true,\n\t[&quot;morphemes&quot;] = true,\n\t[&quot;non-constituents&quot;] = true,\n\t[&quot;nouns&quot;] = true,\n\t\
      [&quot;numbers&quot;] = true,\n\t[&quot;numeral symbols&quot;] = true,\n\t[&quot;numerals&quot;] = true,\n\t[&quot;particles&quot;] = true,\n\t[&quot;phrases&quot;] = true,\n\t[&quot;postpositions&quot;] = true,\n\t[&quot;predicatives&quot;] = true,\n\t\
      [&quot;prefixes&quot;] = true,\n\t[&quot;prepositions&quot;] = true,\n\t[&quot;prepositional phrases&quot;] = true,\n\t[&quot;preverbs&quot;] = true,\n\t[&quot;pronominal adverbs&quot;] = true,\n\t[&quot;pronouns&quot;] = true,\n\t[&quot;proverbs&quot;]\
      \ = true,\n\t[&quot;proper nouns&quot;] = true,\n\t[&quot;punctuation marks&quot;] = true,\n\t[&quot;relatives&quot;] = true,\n\t[&quot;roots&quot;] = true,\n\t[&quot;suffixes&quot;] = true,\n\t[&quot;superlative adjectives&quot;] = true,\n\t[&quot;superlative\
      \ adverbs&quot;] = true,\n\t[&quot;syllables&quot;] = true,\n\t[&quot;symbols&quot;] = true,\n\t[&quot;verbs&quot;] = true,\n}\n\nlocal nonlemmas = {\n\t[&quot;active participles&quot;] = true,\n\t[&quot;adjectival participles&quot;] = true,\n\t[&quot;adjective\
      \ forms&quot;] = true,\n\t[&quot;adjective comparative forms&quot;] = true,\n\t[&quot;adjective feminine forms&quot;] = true,\n\t[&quot;adjective equative forms&quot;] = true,\n\t[&quot;adjective plural forms&quot;] = true,\n\t[&quot;adjective superlative\
      \ forms&quot;] = true,\n\t[&quot;adverb forms&quot;] = true,\n\t[&quot;adverb comparative forms&quot;] = true,\n\t[&quot;adverb superlative forms&quot;] = true,\n\t[&quot;adverbial participles&quot;] = true,\n\t[&quot;agent participles&quot;] = true,\n\
      \t[&quot;article forms&quot;] = true,\n\t[&quot;circumfix forms&quot;] = true,\n\t[&quot;combined forms&quot;] = true,\n\t[&quot;determiner comparative forms&quot;] = true,\n\t[&quot;determiner forms&quot;] = true,\n\t[&quot;determiner superlative forms&quot;]\
      \ = true,\n\t[&quot;diminutive nouns&quot;] = true,\n\t[&quot;future participles&quot;] = true,\n\t[&quot;gerunds&quot;] = true,\n\t[&quot;infinitive forms&quot;] = true,\n\t[&quot;infinitives&quot;] = true,\n\t[&quot;jyutping&quot;] = true,\n\t[&quot;kanji\
      \ readings&quot;] = true,\n\t[&quot;misspellings&quot;] = true,\n\t[&quot;negative participles&quot;] = true,\n\t[&quot;nominal participles&quot;] = true,\n\t[&quot;noun case forms&quot;] = true,\n\t[&quot;noun dual forms&quot;] = true,\n\t[&quot;noun\
      \ forms&quot;] = true,\n\t[&quot;noun plural forms&quot;] = true,\n\t[&quot;noun possessive forms&quot;] = true,\n\t[&quot;noun singulative forms&quot;] = true,\n\t[&quot;numeral forms&quot;] = true,\n\t[&quot;participles&quot;] = true,\n\t[&quot;participle\
      \ forms&quot;] = true,\n\t[&quot;particle forms&quot;] = true,\n\t[&quot;passive participles&quot;] = true,\n\t[&quot;past active participles&quot;] = true,\n\t[&quot;past participles&quot;] = true,\n\t[&quot;past participle forms&quot;] = true,\n\t[&quot;past\
      \ passive participles&quot;] = true,\n\t[&quot;perfect active participles&quot;] = true,\n\t[&quot;perfect participles&quot;] = true,\n\t[&quot;perfect passive participles&quot;] = true,\n\t[&quot;pinyin&quot;] = true,\n\t[&quot;plurals&quot;] = true,\n\
      \t[&quot;postposition forms&quot;] = true,\n\t[&quot;prefix forms&quot;] = true,\n\t[&quot;preposition contractions&quot;] = true,\n\t[&quot;preposition forms&quot;] = true,\n\t[&quot;prepositional pronouns&quot;] = true,\n\t[&quot;present active participles&quot;]\
      \ = true,\n\t[&quot;present participles&quot;] = true,\n\t[&quot;present passive participles&quot;] = true,\n\t[&quot;pronoun forms&quot;] = true,\n\t[&quot;pronoun possessive forms&quot;] = true,\n\t[&quot;proper noun forms&quot;] = true,\n\t[&quot;proper\
      \ noun plural forms&quot;] = true,\n\t[&quot;rafsi&quot;] = true,\n\t[&quot;romanizations&quot;] = true,\n\t[&quot;singulatives&quot;] = true,\n\t[&quot;suffix forms&quot;] = true,\n\t[&quot;verb forms&quot;] = true,\n\t[&quot;verbal nouns&quot;] = true,\n\
      }\n\nlocal notranslit = {\n\t[&quot;az&quot;] = true,\n\t[&quot;bbc&quot;] = true,\n\t[&quot;bug&quot;] = true,\n\t[&quot;cia&quot;] = true,\n\t[&quot;cjm&quot;] = true,\n\t[&quot;cmn&quot;] = true,\n\t[&quot;hak&quot;] = true,\n\t[&quot;ja&quot;] = true,\n\
      \t[&quot;lad&quot;] = true,\n\t[&quot;lzh&quot;] = true,\n\t[&quot;ms&quot;] = true,\n\t[&quot;mul&quot;] = true,\n\t[&quot;nan&quot;] = true,\n\t[&quot;oj&quot;] = true,\n\t[&quot;pi&quot;] = true,\n\t[&quot;ro&quot;] = true,\n\t[&quot;ryu&quot;] = true,\n\
      \t[&quot;sh&quot;] = true,\n\t[&quot;tgt&quot;] = true,\n\t[&quot;th&quot;] = true,\n\t[&quot;tly&quot;] = true,\n\t[&quot;und&quot;] = true,\n\t[&quot;vi&quot;] = true,\n\t[&quot;yue&quot;] = true,\n\t[&quot;zh&quot;] = true,\n}\n\n\nlocal function preprocess(data)\n\
      \tif type(data.heads) ~= &quot;table&quot; then\n\t\tdata.heads = {data.heads}\n\tend\n\t\n\tif type(data.translits) ~= &quot;table&quot; then\n\t\tdata.translits = {data.translits}\n\tend\n\t\n\tif #data.heads == 0 then\n\t\tdata.heads = {&quot;&quot;}\n\
      \tend\n\t\n\t-- Create a default headword.\n\tlocal default_head = mw.title.getCurrentTitle().subpageText\n\t\n\t-- Determine if term is reconstructed\n\tlocal is_reconstructed = data.lang:getType() == &quot;reconstructed&quot; or mw.title.getCurrentTitle().nsText\
      \ == &quot;Reconstruction&quot;\n\t\n\t-- Add links to multi-word page names when appropriate\n\tif data.lang:getCode() ~= &quot;zh&quot; then\n\t\tlocal WORDBREAKCHARS = &quot;([%p%s]+)&quot;\n\t\tlocal EXCLUDECHARS = &quot;([^-־׳״'.·*]+)&quot; -- workaround\
      \ for excluding characters from the above\n\t\tlocal contains_words = false; mw.ustring.gsub(default_head, WORDBREAKCHARS, function(b) contains_words = contains_words or mw.ustring.match(b, &quot;^&quot; .. EXCLUDECHARS .. &quot;$&quot;); end)\n\t\t\n\t\
      \tif (not is_reconstructed) and contains_words then\n\t\t\tlocal function workaround_to_exclude_chars(s)\n\t\t\t\treturn mw.ustring.gsub(s, EXCLUDECHARS, &quot;]]%1[[&quot;)\n\t\t\tend\n\t\t\t\n\t\t\tdefault_head = &quot;[[&quot; .. mw.ustring.gsub(default_head,\
      \ WORDBREAKCHARS, workaround_to_exclude_chars) .. &quot;]]&quot;\n\t\t\t-- default_head = &quot;[[&quot; .. mw.ustring.gsub(default_head, WORDBREAKCHARS, &quot;]]%1[[&quot;) .. &quot;]]&quot; -- use this when workaround is no longer needed\n\t\t\tdefault_head\
      \ = mw.ustring.gsub(default_head, &quot;%[%[%]%]&quot;, &quot;&quot;) -- remove any empty links (which could have been created above at the beginning or end of the string)\n\t\tend\n\tend\n\t\n\tif is_reconstructed then\n\t\tdefault_head = &quot;*&quot;\
      \ .. default_head\n\tend\n\t\n\t-- If a head is the empty string &quot;&quot;, then replace it with the default\n\tfor i, head in ipairs(data.heads) do\n\t\tif head == &quot;&quot; then\n\t\t\thead = default_head\n\t\tend\n\t\t\n\t\tdata.heads[i] = head\n\
      \tend\n\t\n\t-- Try to detect the script if it was not provided\n\t-- We use the first headword for this, and assume that all of them have the same script\n\t-- This *should* always be true, right?\n\tif not data.sc then\n\t\tdata.sc = require(&quot;Module:scripts&quot;).findBestScript(data.heads[1],\
      \ data.lang)\n\tend\n\t\n\t-- Make transliterations\n\tfor i, head in ipairs(data.heads) do\n\t\tlocal translit = data.translits[i]\n\t\t\n\t\t-- Try to generate a transliteration if necessary\n\t\t-- Generate it if the script is not Latn or similar, and\
      \ if no transliteration was provided\n\t\tif translit == &quot;-&quot; then\n\t\t\ttranslit = nil\n\t\telseif not translit and not ((data.sc:getCode():find(&quot;Latn&quot;, nil, true)) or data.sc:getCode() == &quot;Latinx&quot; or data.sc:getCode() ==\
      \ &quot;None&quot;) then\n\t\t\ttranslit = data.lang:transliterate(require(&quot;Module:links&quot;).remove_links(head), data.sc)\n\t\t\t\n\t\t\t-- There is still no transliteration?\n\t\t\t-- Add the entry to a cleanup category.\n\t\t\tif not translit\
      \ and not notranslit[data.lang:getCode()] then\n\t\t\t\ttranslit = &quot;&lt;small&gt;transliteration needed&lt;/small&gt;&quot;\n\t\t\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. &quot; terms needing transliteration&quot;)\n\t\t\t\
      end\n\t\t\t\n\t\t\tif translit and data.lang:link_tr() then\n\t\t\t\ttranslit = require(&quot;Module:links&quot;).full_link({term = translit, lang = data.lang, sc = require(&quot;Module:scripts&quot;).getByCode(&quot;Latn&quot;)}, nil, false)\n\t\t\tend\n\
      \t\tend\n\t\t\n\t\tdata.translits[i] = translit\n\tend\nend\n\n\n-- Format a headword with transliterations\nlocal function format_headword(data)\n\tlocal m_links = require(&quot;Module:links&quot;)\n\tlocal m_scriptutils = require(&quot;Module:script\
      \ utilities&quot;)\n\t\n\t-- Are there non-empty transliterations?\n\t-- Need to do it this way because translit[1] might be nil while translit[2] is not\n\tlocal has_translits = false\n\t\n\t-- Format the headwords\n\tfor i, head in ipairs(data.heads)\
      \ do\n\t\tif data.translits[i] then\n\t\t\thas_translits = true\n\t\tend\n\t\t\n\t\t-- Apply processing to the headword, for formatting links and such\n\t\tif head:find(&quot;[[&quot;, nil, true) then\n\t\t\thead = m_links.language_link({term = head, lang\
      \ = data.lang}, false)\n\t\tend\n\t\t\n\t\t-- Add language and script wrapper\n\t\thead = m_scriptutils.tag_text(head, data.lang, data.sc, &quot;head&quot;)\n\t\t\n\t\tdata.heads[i] = head\n\tend\n\t\n\tlocal translits_formatted = &quot;&quot;\n\t\n\t\
      if has_translits then\n\t\t-- Format the transliterations\n\t\tfor i, head in ipairs(data.heads) do\n\t\t\tlocal translit = data.translits[i]\n\t\t\t\n\t\t\tif not translit then\n\t\t\t\ttranslit = &quot;?&quot;\n\t\t\tend\n\t\t\t\n\t\t\ttranslit = &quot;&lt;span\
      \ class=\\&quot;tr\\&quot; lang=\\&quot;\\&quot;&gt;&quot; .. translit .. &quot;&lt;/span&gt;&quot;\n\t\t\t\n\t\t\tdata.translits[i] = translit\n\t\tend\n\t\t\n\t\ttranslits_formatted = &quot; &amp;lrm;(&lt;span class=\\&quot;tr\\&quot; lang=\\&quot;\\\
      &quot;&gt;&quot; .. table.concat(data.translits, &quot; ''or'' &quot;) .. &quot;&lt;/span&gt;)&quot;\n\t\t\n\t\tif mw.title.new(data.lang:getCanonicalName() .. &quot; transliteration&quot;, &quot;Wiktionary&quot;).exists then\n\t\t\ttranslits_formatted\
      \ = &quot; [[Wiktionary:&quot; .. data.lang:getCanonicalName() .. &quot; transliteration|•]]&quot; .. translits_formatted\n\t\tend\n\tend\n\t\n\treturn table.concat(data.heads, &quot; ''or'' &quot;) .. translits_formatted\nend\n\n\nlocal function format_genders(data)\n\
      \tif data.genders and #data.genders &gt; 0 then\n\t\tlocal gen = require(&quot;Module:gender and number&quot;)\n\t\treturn &quot;&amp;nbsp;&quot; .. gen.format_list(data.genders, data.lang)\n\telse\n\t\treturn &quot;&quot;\n\tend\nend\n\n\nlocal function\
      \ format_inflection_parts(data, parts)\n\tlocal m_links = require(&quot;Module:links&quot;)\n\t\n\tfor key, part in ipairs(parts) do\n\t\tif type(part) ~= &quot;table&quot; then\n\t\t\tpart = {term = part}\n\t\tend\n\t\t\n\t\tlocal qualifiers = &quot;&quot;\n\
      \t\t\n\t\tif part.qualifiers and #part.qualifiers &gt; 0 then\n\t\t\tqualifiers = mw.getCurrentFrame():expandTemplate{title = &quot;qualifier&quot;, args = part.qualifiers} .. &quot; &quot;\n\t\tend\n\t\t\n\t\tlocal partaccel = part.accel\n\t\tlocal face\
      \ = part.hypothetical and &quot;hypothetical&quot; or &quot;bold&quot;\n\t\tlocal nolink = part.hypothetical or part.nolink\n\t\t\n\t\t-- Convert the term into a full link\n\t\t-- Don't show a transliteration here, the consensus seems to be not to\n\t\t\
      -- show them in headword lines to avoid clutter.\n\t\tpart = m_links.full_link({term = not nolink and part.term or nil, alt = part.alt or (nolink and part.term or nil), lang = part.lang or data.lang, sc = part.sc or (not part.lang and data.sc), id = part.id,\
      \ genders = part.genders, tr = part.translit or ((not (parts.enable_auto_translit or data.lang:getCode() == &quot;ar&quot;)) and &quot;-&quot; or nil)}, face, false)\n\t\t\n\t\tif parts.accel or partaccel then\n\t\t\tpart = &quot;&lt;span class=\\&quot;form-of\
      \ lang-&quot; .. data.lang:getCode() .. &quot; &quot; .. (parts.accel or &quot;&quot;) .. &quot; &quot; .. (partaccel or &quot;&quot;) .. &quot;\\&quot;&gt;&quot; .. part .. &quot;&lt;/span&gt;&quot;\n\t\tend\n\t\t\n\t\tpart = qualifiers .. part\n\t\t\n\
      \t\tparts[key] = part\n\tend\n\t\n\tlocal parts_output = &quot;&quot;\n\t\n\tif #parts &gt; 0 then\n\t\tparts_output = &quot; &quot; .. table.concat(parts, &quot; ''or'' &quot;)\n\telseif parts.request then\n\t\tparts_output = &quot; &lt;small&gt;[please\
      \ provide]&lt;/small&gt;&quot; .. require(&quot;Module:utilities&quot;).format_categories({data.lang:getCanonicalName() .. &quot; entries needing inflection&quot;}, lang)\n\tend\n\t\n\treturn &quot;''&quot; .. parts.label .. &quot;''&quot; .. parts_output\n\
      end\n\n-- Format the inflections following the headword\nlocal function format_inflections(data)\n\tif data.inflections and #data.inflections &gt; 0 then\n\t\t-- Format each inflection individually\n\t\tfor key, infl in ipairs(data.inflections) do\n\t\t\
      \tdata.inflections[key] = format_inflection_parts(data, infl)\n\t\tend\n\t\t\n\t\treturn &quot; &amp;lrm;(&quot; .. table.concat(data.inflections, &quot;, &quot;) .. &quot;)&quot;\n\telse\n\t\treturn &quot;&quot;\n\tend\nend\n\nfunction export.show_headword_line(data)\n\
      \t-- Check the namespace against the language type\n\tif mw.title.getCurrentTitle().nsText == &quot;&quot; then\n\t\tif data.lang:getType() == &quot;reconstructed&quot; then\n\t\t\terror(&quot;Entries for this language must be placed in the Reconstruction:\
      \ namespace.&quot;)\n\t\telseif data.lang:getType() == &quot;appendix-constructed&quot; then\n\t\t\terror(&quot;Entries for this language must be placed in the Appendix: namespace.&quot;)\n\t\tend\n\tend\n\t\n\tdata.categories = {}\n\tlocal tracking_categories\
      \ = {}\n\t\n\t-- Is it a lemma category?\n\tif lemmas[data.pos_category] or lemmas[data.pos_category:gsub(&quot;^reconstructed &quot;, &quot;&quot;)] then\n\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. &quot; lemmas&quot;)\n\t-- Is\
      \ it a nonlemma category?\n\telseif nonlemmas[data.pos_category] or nonlemmas[data.pos_category:gsub(&quot;^reconstructed &quot;, &quot;&quot;)] or lemmas[data.pos_category:gsub(&quot;^mutated &quot;, &quot;&quot;)] or nonlemmas[data.pos_category:gsub(&quot;^mutated\
      \ &quot;, &quot;&quot;)] then\n\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. &quot; non-lemma forms&quot;)\n\t-- It's neither; we don't know what this category is, so tag it with a tracking category.\n\telse\n\t\ttable.insert(tracking_categories,\
      \ &quot;head tracking/unrecognized pos&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;head tracking/unrecognized pos&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;head tracking/unrecognized pos/lang/&quot; .. data.lang:getCode())\n\
      \t\trequire(&quot;Module:debug&quot;).track(&quot;head tracking/unrecognized pos/pos/&quot; .. data.pos_category)\n\tend\n\t\n\ttable.insert(data.categories, data.lang:getCanonicalName() .. &quot; &quot; .. data.pos_category)\n\t\n\t-- Preprocess\n\tpreprocess(data)\n\
      \t\n\t-- Format and return all the gathered information\n\treturn\n\t\tformat_headword(data) ..\n\t\tformat_genders(data) ..\n\t\tformat_inflections(data) ..\n\t\trequire(&quot;Module:utilities&quot;).format_categories(data.categories, data.lang, data.sort_key)\
      \ ..\n\t\trequire(&quot;Module:utilities&quot;).format_categories(tracking_categories, data.lang, data.sort_key)\nend\n\nfunction export.full_headword(lang, sc, heads, translits, genders, inflections, categories, sort_key)\n\tlocal data = {lang = lang,\
      \ sc = sc, heads = heads, translits = translits, genders = genders, inflections = inflections, pos_category = nil, sort_key = sort_key}\n\tlocal tracking_categories = {}\n\tcategories = categories or {}\n\t\n\t-- Were any categories specified?\n\tif #categories\
      \ == 0 then\n\t\tif lang:getCode() ~= &quot;und&quot; then\n\t\t\ttable.insert(tracking_categories, &quot;head tracking/no pos&quot;)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;head tracking/no pos&quot;)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;head\
      \ tracking/no pos/lang/&quot; .. lang:getCode())\n\t\tend\n\telse\n\t\tfor _, cat in ipairs(categories) do\n\t\t\t-- Does the category begin with the language name? If not, tag it with a tracking category.\n\t\t\tif mw.ustring.sub(cat, 1, mw.ustring.len(lang:getCanonicalName())\
      \ + 1) ~= lang:getCanonicalName() .. &quot; &quot; then\n\t\t\t\ttable.insert(tracking_categories, &quot;head tracking/no lang category&quot;)\n\t\t\t\trequire(&quot;Module:debug&quot;).track(&quot;head tracking/no lang category&quot;)\n\t\t\t\trequire(&quot;Module:debug&quot;).track(&quot;head\
      \ tracking/no lang category/lang/&quot; .. lang:getCode())\n\t\t\tend\n\t\tend\n\t\t\n\t\tif mw.ustring.sub(categories[1], 1, mw.ustring.len(lang:getCanonicalName() .. &quot; &quot;)) == lang:getCanonicalName() .. &quot; &quot; then\n\t\t\tdata.pos_category\
      \ = mw.ustring.sub(categories[1], mw.ustring.len(lang:getCanonicalName()) + 2)\n\t\t\ttable.remove(categories, 1)\n\t\tend\n\tend\n\t\n\tlocal standard = data.lang:getStandardCharacters()\n\t\n\tif standard then\n\t\tif mw.ustring.len(mw.title.getCurrentTitle().subpageText)\
      \ ~= 1 then\n\t\t\tfor character in mw.ustring.gmatch(mw.title.getCurrentTitle().subpageText, &quot;([^&quot; .. standard .. &quot;])&quot;) do\n\t\t\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; terms spelled with &quot; .. mw.ustring.upper(character))\n\
      \t\t\tend\n\t\tend\n\tend\n\t\n\treturn\n\t\texport.show_headword_line(data) ..\n\t\trequire(&quot;Module:utilities&quot;).format_categories(categories, data.lang, data.sort_key) ..\n\t\trequire(&quot;Module:utilities&quot;).format_categories(tracking_categories,\
      \ data.lang, data.sort_key)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:30.591Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alb&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=24015 t=1471300170493549
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1234.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1052 pass, cp3030 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 3172183439, 2670462542, 1214012062
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="4376313" pageid="4376313" ns="10" title="Template:lb"><revisions><rev user="CodeCat" timestamp="2014-03-28T22:52:19Z" comment="Redirected page to [[Template:label]]" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">#REDIRECT [[Template:label]]</rev></revisions></page></pages></query></api>
- recorded: 2016-08-15T22:29:30.771Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alabel&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=21696 t=1471300170675497
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1066 pass, cp3041 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 3508237354, 2725077480, 1214012425
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="3734544" pageid="3734544" ns="10" title="Template:label"><revisions><rev user="TheDaveRoss" timestamp="2016-02-06T16:23:44Z" comment="Adding closing [[Category:Templates with unbalanced tags|noinclude/includeonly]] tag." contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:labels/templates|show}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2016-08-15T22:29:31.003Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=21989 t=1471300170904060
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1055 pass, cp3041 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 254648004, 2725078654, 1214013928
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4393059\" pageid=\"4393059\" ns=\"828\" title=\"Module:labels/templates\"><revisions><rev user=\"Kc kennylau\" timestamp=\"2016-03-04T15:02:39Z\" comment=\"Reverted edits by\
      \ [[Special:Contributions/Kc kennylau|Kc kennylau]]. If you think this rollback is in error, please leave a message on my talk page.\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local m_labels = require(&quot;Module:labels&quot;)\n\
      \nlocal export = {}\n\nfunction export.show(frame)\n\tlocal compat = (frame.args[&quot;compat&quot;] or &quot;&quot;) ~= &quot;&quot;\n\tlocal term_mode = (frame.args[&quot;term&quot;] or &quot;&quot;) ~= &quot;&quot;\n\t\n\tlocal params = {\n\t\t[1] =\
      \ {required = true},\n\t\t[2] = {list = true},\n\t\t[&quot;nocat&quot;] = {type = &quot;boolean&quot;},\n\t\t[&quot;script&quot;] = {},\n\t\t[&quot;script2&quot;] = {},\n\t\t[&quot;sort&quot;] = {},\n\t\t[&quot;sort2&quot;] = {},\n\t}\n\t\n\tif compat\
      \ then\n\t\tparams[1] = params[2]\n\t\tparams[2] = nil\n\t\tparams[&quot;lang&quot;] = {required = true}\n\tend\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\t-- Gather parameters\n\tlocal lang\
      \ = args[compat and &quot;lang&quot; or 1]\n\tlocal labels = args[compat and 1 or 2]\n\tlocal nocat = args[&quot;nocat&quot;]\n\tlocal script = args[&quot;script&quot;]\n\tlocal script2 = args[&quot;script2&quot;]\n\tlocal sort_key = args[&quot;sort&quot;]\n\
      \tlocal sort_key2 = args[&quot;sort2&quot;]\n\n\tif not lang then\n\t\tif mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\t\tlang = &quot;und&quot;\n\t\telse\n\t\t\terror(&quot;Language code has not been specified. Please provide it\
      \ to the template using the first parameter.&quot;)\n\t\tend\n\tend\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\t\n\treturn m_labels.show_labels(labels,\
      \ lang, script, script2, sort_key, sort_key2, nocat, term_mode)\nend\n\n-- temporary. intentionally undocumented.\n-- this function is only to be used in {{alternative spelling of}}, {{eye dialect of}} and similar templates\nfunction export.show_from(frame)\n\
      \tlocal m_labeldata = require('Module:labels/data')\n\t\n\tlocal froms = {}\n\tlocal args = frame:getParent().args\n\tlocal nocat = args[&quot;nocat&quot;]\n\tlocal lang = args[&quot;lang&quot;] or &quot;en&quot;\n\tlocal limit = frame.args.limit and tonumber(frame.args.limit)\
      \ or 99999\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\n\tlocal key, i = 'from', 1\n\twhile args[key] do\n\t\tlocal k = args[key]\n\
      \t\tk = m_labeldata.aliases[k] or k\n\t\tlocal data = m_labeldata.labels[k]\n\t\tlocal label = data and data.display or k\n\t\t\n\t\tif not nocat and data then\n\t\t\tif data.regional_categories then\n\t\t\t\tfor j, cat in ipairs(data.regional_categories)\
      \ do\n\t\t\t\t\tlabel = label .. '[[Category:' .. cat .. ' ' .. lang:getCanonicalName() .. ']]'\t\n\t\t\t\tend\n\t\t\tend\n\t\t\n\t\t\tif data.plain_categories then\n\t\t\t\tfor j, cat in ipairs(data.plain_categories) do\n\t\t\t\t\tlabel = label .. '[[Category:'\
      \ .. cat .. ']]'\t\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\ttable.insert(froms, label)\n\t\ti = i + 1\n\t\tif i &gt; limit then\n\t\t\tbreak\t\n\t\tend\n\t\tkey = 'from' .. i\n\tend\n\t\n\tif #froms == 0 then\n\t\treturn frame.args.default\t\n\tend\n\t\n\
      \tif #froms == 2 then\n\t\treturn froms[1] .. &quot; and &quot; .. froms[2]\n\tend\n\t\n\tlocal result = &quot;&quot;\n\tfor i, item in ipairs(froms) do\n\t\tif i == 1 then\n\t\t\t-- nothing\n\t\telseif i == #froms then\n\t\t\tresult = result .. '&lt;span\
      \ class=&quot;serial-comma&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;serial-and&quot;&gt; and&lt;/span&gt; '\n\t\telse\n\t\t\tresult = result .. ', '\n\t\tend\n\t\t\n\t\tresult = result .. item\n\tend\n\treturn result\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:31.195Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=29490 t=1471300171088154
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1228.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1052 pass, cp3032 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 3172185588, 2169869958, 1214014774
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4073701\" pageid=\"4073701\" ns=\"828\" title=\"Module:labels\"><revisions><rev user=\"CodeCat\" timestamp=\"2016-08-15T21:23:42Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local m_labeldata = mw.loadData(&quot;Module:labels/data&quot;)\nlocal m_utilities = require(&quot;Module:utilities&quot;)\n\nlocal export = {}\n\nlocal function show_categories(data, lang, script, sort_key,\
      \ script2, sort_key2, term_mode)\n\tlocal categories = {}\n\tlocal categories2 = {}\n\t\n\tfor i, cat in ipairs(data.topical_categories or {}) do\n\t\ttable.insert(categories, lang:getCode() .. &quot;:&quot; .. cat)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories,\
      \ lang:getCode() .. &quot;:&quot; .. cat .. &quot; in &quot; .. script .. &quot; script&quot;)\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, lang:getCode() .. &quot;:&quot; .. cat .. &quot; in &quot; .. script2 .. &quot; script&quot;)\n\
      \t\tend\n\tend\n\t\n\tfor i, cat in ipairs(data.sense_categories or {}) do\n\t\tcat = (term_mode and (cat .. &quot; terms&quot;) or (&quot;terms with &quot; .. cat .. &quot; senses&quot;))\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot;\
      \ &quot; .. cat)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; &quot; .. cat .. &quot; in &quot; .. script .. &quot; script&quot;)\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, lang:getCanonicalName()\
      \ .. &quot; &quot; .. cat .. &quot; in &quot; .. script2 .. &quot; script&quot;)\n\t\tend\n\tend\n\n\tfor i, cat in ipairs(data.pos_categories or {}) do\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; &quot; .. cat)\n\t\t\n\t\tif script\
      \ then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; &quot; .. cat .. &quot; in &quot; .. script .. &quot; script&quot;)\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, lang:getCanonicalName() .. &quot; &quot; ..\
      \ cat .. &quot; in &quot; .. script2 .. &quot; script&quot;)\n\t\tend\n\tend\n\t\n\tfor i, cat in ipairs(data.regional_categories or {}) do\n\t\ttable.insert(categories, cat .. &quot; &quot; .. lang:getCanonicalName())\n\t\t\n\t\tif script then\n\t\t\t\
      table.insert(categories, cat .. &quot; &quot; .. lang:getCanonicalName() .. &quot; in &quot; .. script .. &quot; script&quot;)\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, cat .. &quot; &quot; .. lang:getCanonicalName() .. &quot;\
      \ in &quot; .. script2 .. &quot; script&quot;)\n\t\tend\n\tend\n\t\n\tfor i, cat in ipairs(data.plain_categories or {}) do\n\t\ttable.insert(categories, cat)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories, cat .. &quot; in &quot; .. script ..\
      \ &quot; script&quot;)\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, cat .. &quot; in &quot; .. script2 .. &quot; script&quot;)\n\t\tend\n\tend\n\t\n\treturn m_utilities.format_categories(categories, lang, sort_key) .. m_utilities.format_categories(categories2,\
      \ lang, sort_key2)\nend\n\nfunction export.show_labels(labels, lang, script, script2, sort_key, sort_key2, nocat, term_mode)\n\tif #labels &lt; 1 then\n\t\tif mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\t\tlabels = {&quot;example&quot;}\n\
      \t\telse\n\t\t\terror(&quot;You must specify at least one label.&quot;)\n\t\tend\n\tend\n\t\n\t-- Show the labels\n\tlocal omit_preComma = false\n\tlocal omit_postComma = false\n\t\n\tfor i, label in ipairs(labels) do\n\t\tif omit_postComma then\n\t\t\t\
      omit_preComma = true\n\t\t\tomit_postComma = false\n\t\tend\n\t\t\n\t\tlocal deprecated = false\n\t\tif m_labeldata.deprecated[label] then\n\t\t\tdeprecated = true\n\t\tend\n\t\tif m_labeldata.aliases[label] then\n\t\t\tlabel = m_labeldata.aliases[label]\n\
      \t\tend\n\t\tif m_labeldata.deprecated[label] then\n\t\t\tdeprecated = true\n\t\tend\n\t\t\t\n\t\tlocal data = m_labeldata.labels[label] or {}\n\t\t\t\n\t\tlabel = data.display or label\n\t\t\n\t\tlocal omit_comma = omit_preComma or data.omit_preComma\n\
      \t\tomit_preComma = false\n\t\tomit_postComma = data.omit_postComma\n\t\t\n\t\tif deprecated then\n\t\t\tlabel = '&lt;span class=&quot;deprecated-label&quot;&gt;' .. label .. '&lt;/span&gt;'\n\t\t\tif not nocat then\n\t\t\t\tlabel = label .. m_utilities.format_categories({\
      \ &quot;Entries with deprecated labels&quot; }, lang)\n\t\t\tend\n\t\tend\n\t\t\n\t\tif i &gt; 1 then\n\t\t\tlabel = (not omit_comma and &quot;&lt;span class=\\&quot;ib-comma\\&quot;&gt;,&lt;/span&gt;&quot; or &quot;&quot;) .. &quot;&amp;#32;&quot; ..\
      \ label\n\t\tend\n\t\t\n\t\tlabels[i] = label .. (nocat and &quot;&quot; or show_categories(data, lang, script, sort_key, script2, sort_key2, term_mode))\n\tend\n\t\n\treturn\n\t\t&quot;&lt;span class=\\&quot;ib-brac\\&quot;&gt;(&lt;/span&gt;&lt;span class=\\\
      &quot;ib-content\\&quot;&gt;&quot; ..\n\t\ttable.concat(labels, &quot;&quot;) ..\n\t\t&quot;&lt;/span&gt;&lt;span class=\\&quot;ib-brac\\&quot;&gt;)&lt;/span&gt;&quot;\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:31.630Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=30764 t=1471300171367381
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1234.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1054 pass, cp3032 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 329473997, 2169870110, 1214015231
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4077514\" pageid=\"4077514\" ns=\"828\" title=\"Module:labels/data\"><revisions><rev user=\"Arctic.gnome\" timestamp=\"2016-07-25T15:27:52Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\nlocal deprecated = {}\n\n--  Helper labels\n\nlabels['_'] = {\n\tdisplay = '',\n\tomit_preComma = true,\n\tomit_postComma = true }\n\nlabels['and'] = {\n\tomit_preComma\
      \ = true,\n\tomit_postComma = true }\naliases['&amp;'] = 'and'\n\nlabels['or'] = {\n\tomit_preComma = true,\n\tomit_postComma = true }\n\nlabels['except'] = { -- combine with 'except in', 'outside'? or retain for entries like &quot;wnuczę&quot;?\n\tomit_preComma\
      \ = true,\n\tomit_postComma = true }\n\nlabels['outside'] = {\n\tomit_preComma = true,\n\tomit_postComma = true }\naliases['except in'] = 'outside'\n\n-- Qualifier labels\n\nlabels['chiefly'] = {omit_postComma = true}\naliases['especially'] = 'chiefly'\n\
      aliases['mainly'] = 'chiefly'\naliases['mostly'] = 'chiefly'\naliases['particularly'] = 'chiefly'\naliases['primarily'] = 'chiefly'\n\nlabels['excluding'] = {omit_postComma = true}\n\nlabels['extremely'] = {omit_postComma = true}\n\nlabels['frequently']\
      \ = {omit_postComma = true}\n\nlabels['humorously'] = {omit_postComma = true,\n\tpos_categories = {&quot;jocular terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving &quot;X terms&quot; to the term-context temp?\n\nlabels['including'] =\
      \ {omit_postComma = true}\n\nlabels['literally'] = {display = '[[Appendix:Glossary#literally|literally]]',\n\tomit_postComma = true}\naliases['literal'] = 'literally'\n\nlabels['many'] = {omit_postComma = true} -- e.g. &quot;many dialects&quot;\n\nlabels['markedly']\
      \ = {omit_postComma = true}\n\nlabels['mildly'] = {omit_postComma = true}\n\nlabels['now'] = {omit_postComma = true}\naliases['nowadays'] = 'now'\n\nlabels['of'] = {omit_postComma = true}\n\nlabels['of a'] = {omit_postComma = true}\n\nlabels['of an'] =\
      \ {omit_postComma = true}\n\nlabels['often'] = {omit_postComma = true}\n\nlabels['originally'] = {omit_postComma = true}\n\nlabels['possibly'] = {omit_postComma = true}\n-- aliases['perhaps'] = 'possibly'\n\nlabels['rarely'] = {omit_postComma = true}\n\
      \nlabels['slightly'] = {omit_postComma = true}\n\nlabels['sometimes'] = {omit_postComma = true}\n\nlabels['somewhat'] = {omit_postComma = true}\n\nlabels['strongly'] = {omit_postComma = true}\n\nlabels['typically'] = {omit_postComma = true}\n\nlabels['usually']\
      \ = {omit_postComma = true}\n\nlabels['very'] = {omit_postComma = true}\n\n-- Grammatical labels\n\nlabels[&quot;abbreviation&quot;] = {\n\tdisplay = &quot;[[abbreviation]]&quot;,\n\tpos_categories = {&quot;abbreviations&quot;} }\n\nlabels[&quot;acronym&quot;]\
      \ = {\n\tdisplay = &quot;[[acronym]]&quot;,\n\tpos_categories = {&quot;acronyms&quot;} }\n\nlabels[&quot;active&quot;] = {\n\tdisplay = &quot;[[w:Active voice|active]]&quot; }\naliases[&quot;active voice&quot;] = &quot;active&quot;\naliases[&quot;in the\
      \ active&quot;] = &quot;active&quot;\n\nlabels[&quot;ambitransitive&quot;] = {\n\tdisplay = &quot;[[transitive]], [[intransitive]]&quot;,\n\tpos_categories = {&quot;transitive verbs&quot;, &quot;intransitive verbs&quot;} }\n\nlabels[&quot;archaic-verb-form&quot;]\
      \ = {\n\tdisplay = &quot;[[Appendix:Glossary#archaic|archaic]]&quot;,\n\tpos_categories = {&quot;archaic verb forms&quot;} }\n\nlabels[&quot;attributive&quot;] = {\n\tdisplay = &quot;[[Appendix:English nouns#Attributive|attributive]]&quot; }\n\nlabels[&quot;attributively&quot;]\
      \ = {\n\tdisplay = &quot;[[Appendix:English nouns#Attributive|attributively]]&quot; }\n\nlabels[&quot;auxiliary&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#auxiliary|auxiliary]]&quot; }\n\nlabels[&quot;by ellipsis&quot;] = {\n\tdisplay = &quot;by\
      \ [[ellipsis]]&quot;,\n\tpos_categories = {&quot;ellipses&quot;} }\n\nlabels[&quot;by extension&quot;] = {}\n\nlabels[&quot;cardinal&quot;] = {\n\tpos_categories = {&quot;cardinal numbers&quot;} }\n\nlabels[&quot;causative&quot;] = {\n\tdisplay = &quot;[[causative]]&quot;}\n\
      \nlabels[&quot;collective&quot;] = {\n\tdisplay = &quot;collective&quot;,\n\tpos_categories = {&quot;collective nouns&quot;} }\n\nlabels[&quot;collectively&quot;] = {\n\tdisplay = &quot;collectively&quot;,\n\tpos_categories = {&quot;collective nouns&quot;}\
      \ }\n\nlabels[&quot;comparable&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#comparable|comparable]]&quot;}\n\nlabels[&quot;copulative&quot;] = {\n\tdisplay = &quot;[[copular verb|copulative]]&quot;,\n\tpos_categories = {&quot;copulative verbs&quot;}\
      \ }\naliases[&quot;copular&quot;] = &quot;copulative&quot;\n\nlabels[&quot;countable&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#countable|countable]]&quot;,\n\tpos_categories = {&quot;countable nouns&quot;} }\n\nlabels[&quot;ditransitive&quot;]\
      \ = {\n\tdisplay = &quot;[[Appendix:Glossary#D|ditransitive]]&quot;,\n\tpos_categories = {&quot;ditransitive verbs&quot;} }\n\nlabels[&quot;emphatic&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#emphatic|emphatic]]&quot;}\n\nlabels[&quot;ergative&quot;]\
      \ = {\n\tdisplay = &quot;[[Appendix:Glossary#ergative|ergative]]&quot;,\n\tpos_categories = {&quot;ergative verbs&quot;} }\n\nlabels[&quot;fractional&quot;] = {\n\tpos_categories = {&quot;fractional numbers&quot;} }\n\nlabels[&quot;idiomatic&quot;] = {\n\
      \tdisplay = &quot;[[Appendix:Glossary#idiomatic|idiomatic]]&quot;,\n\tpos_categories = {&quot;idioms&quot;} }\naliases[&quot;idiom&quot;] = &quot;idiomatic&quot;\n\nlabels[&quot;snowclone&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#snowclone|snowclone]]&quot;,\n\
      \tpos_categories = {&quot;snowclones&quot;} }\n\nlabels[&quot;impersonal&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#impersonal verb|impersonal]]&quot;,\n\tpos_categories = {&quot;impersonal verbs&quot;} }\n\nlabels[&quot;in the singular&quot;] =\
      \ {\n\tdisplay = &quot;in the [[singular]]&quot; }\naliases[&quot;in singular&quot;] = &quot;in the singular&quot;\n\nlabels[&quot;in the dual&quot;] = {\n\tdisplay = &quot;in the [[dual]]&quot; }\naliases[&quot;in dual&quot;] = &quot;in the dual&quot;\n\
      \nlabels[&quot;in the plural&quot;] = {\n\tdisplay = &quot;in the [[plural]]&quot; }\naliases[&quot;in plural&quot;] = &quot;in the plural&quot;\n\nlabels[&quot;in the mediopassive&quot;] = {\n\tdisplay = &quot;in the [[mediopassive]]&quot;}\naliases[&quot;in\
      \ mediopassive&quot;] = &quot;in the mediopassive&quot;\naliases[&quot;mediopassive&quot;] = &quot;in the mediopassive&quot;\n\nlabels[&quot;inanimate&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#inanimate|inanimate]]&quot;}\n\naliases[&quot;indef&quot;]\
      \ = &quot;indefinite&quot;\n\nlabels[&quot;initialism&quot;] = {\n\tdisplay = &quot;[[initialism]]&quot;,\n\tpos_categories = {&quot;initialisms&quot;} }\n\nlabels[&quot;intransitive&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#intransitive|intransitive]]&quot;,\n\
      \tpos_categories = {&quot;intransitive verbs&quot;} }\n\nlabels[&quot;not comparable&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#uncomparable|not comparable]]&quot;}\naliases[&quot;notcomp&quot;] = &quot;not comparable&quot;\naliases[&quot;uncomparable&quot;]\
      \ = &quot;not comparable&quot;\n\nlabels[&quot;middle&quot;] = {\n\tdisplay = &quot;[[w:Voice (grammar)#Middle|middle voice]]&quot; }\naliases[&quot;middle voice&quot;] = &quot;middle&quot;\naliases[&quot;in the middle&quot;] = &quot;middle&quot;\n\nlabels[&quot;onomatopoeia&quot;]\
      \ = {\n\tdisplay = &quot;[[onomatopoeia]]&quot;,\n\tpos_categories = {&quot;onomatopoeias&quot;} }\n\nlabels[&quot;ordinal&quot;] = {\n\tpos_categories = {&quot;ordinal numbers&quot;} }\n\ndeprecated[&quot;plural&quot;] = true\n\nlabels[&quot;passive&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Passive voice|passive]]&quot; }\naliases[&quot;passive voice&quot;] = &quot;passive&quot;\naliases[&quot;in the passive&quot;] = &quot;passive&quot;\n\nlabels[&quot;plural only&quot;] = {\n\tpos_categories = {&quot;pluralia\
      \ tantum&quot;} }\naliases[&quot;pluralonly&quot;] = &quot;plural only&quot;\naliases[&quot;plurale tantum&quot;] = &quot;plural only&quot;\n\nlabels[&quot;possessive pronoun&quot;] = {\n\tdisplay = &quot;possessive&quot;,\n\tpos_categories = {&quot;possessive\
      \ pronouns&quot;} }\n\nlabels[&quot;postpositive&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#postpositive|postpositive]]&quot;}\n\nlabels[&quot;productive&quot;] = {\n\tdisplay = &quot;[[productive|productive]]&quot;}\n\nlabels[&quot;reciprocal&quot;]\
      \ = {\n\tdisplay = &quot;[[reciprocal]]&quot;}\n\nlabels[&quot;reflexive&quot;] = {\n\tdisplay = &quot;[[reflexive]]&quot;}\n\nlabels[&quot;rhetorical question&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#rhetorical question|rhetorical question]]&quot;,\n\
      \tpos_categories = {&quot;rhetorical questions&quot;} }\n\nlabels[&quot;set phrase&quot;] = {\n\tdisplay = &quot;[[set phrase]]&quot;}\n\nlabels[&quot;simile&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#simile|simile]]&quot;,\n\tpos_categories = {&quot;similes&quot;}\
      \ }\n\ndeprecated[&quot;singular&quot;] = true\n\nlabels[&quot;singular only&quot;] = {\n\tdisplay = &quot;singular only&quot;,\n\tpos_categories = {&quot;singularia tantum&quot;} }\naliases[&quot;singulare tantum&quot;] = &quot;singular only&quot;\naliases[&quot;no\
      \ plural&quot;] = &quot;singular only&quot;\n\nlabels[&quot;transitive&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#transitive|transitive]]&quot;,\n\tpos_categories = {&quot;transitive verbs&quot;} }\n\nlabels[&quot;uncountable&quot;] = {\n\tdisplay\
      \ = &quot;[[Appendix:Glossary#uncountable|uncountable]]&quot;,\n\tpos_categories = {&quot;uncountable nouns&quot;} }\n\nlabels[&quot;usually plural&quot;] = {\n\tdisplay = &quot;chiefly in the [[plural]]&quot; }\naliases[&quot;usually in the plural&quot;]\
      \ = &quot;usually plural&quot;\naliases[&quot;usually in plural&quot;] = &quot;usually plural&quot;\n\n\n-- Regional labels\nlocal regional = require(&quot;Module:labels/data/regional&quot;)\n\nfor key, val in pairs(regional.labels) do\n\tlabels[key] =\
      \ val\nend\n\nfor key, val in pairs(regional.aliases) do\n\taliases[key] = val\nend\n\nfor key, val in pairs(regional.deprecated) do\n\tdeprecated[key] = val\nend\n\n-- Topical labels\n\nlabels[&quot;accounting&quot;] = {\n\ttopical_categories = {&quot;Accounting&quot;}\
      \ }\n\nlabels[&quot;acoustics&quot;] = {\n\tdisplay = &quot;[[acoustics]]&quot;,\n\ttopical_categories = {&quot;Acoustics&quot;} }\n\nlabels[&quot;acting&quot;] = {\n\ttopical_categories = {&quot;Acting&quot;} }\n\nlabels[&quot;advertising&quot;] = {\n\
      \ttopical_categories = {&quot;Advertising&quot;} }\n\nlabels[&quot;aeronautics&quot;] = {\n\tdisplay = &quot;[[aeronautics]]&quot;,\n\ttopical_categories = {&quot;Aeronautics&quot;} }\n\nlabels[&quot;aerospace&quot;] = {\n\tdisplay = &quot;[[aeronautics]],\
      \ [[space science|space]]&quot;,\n\ttopical_categories = {&quot;Aerospace&quot;} }\n\nlabels[&quot;agriculture&quot;] = {\n\tdisplay = &quot;[[agriculture]]&quot;,\n\ttopical_categories = {&quot;Agriculture&quot;} }\n\nlabels[&quot;aircraft&quot;] = {\n\
      \ttopical_categories = {&quot;Aircraft&quot;} }\n\nlabels[&quot;alchemy&quot;] = {\n\tdisplay = &quot;[[alchemy]]&quot;,\n\ttopical_categories = {&quot;Alchemy&quot;} }\n\nlabels[&quot;alcohol&quot;] = {\n\ttopical_categories = {&quot;Alcoholism&quot;}\
      \ }\n\nlabels[&quot;algebra&quot;] = {\n\ttopical_categories = {&quot;Algebra&quot;} }\n\nlabels[&quot;algebraic geometry&quot;] = {\n\ttopical_categories = {&quot;Geometry&quot;} }\n\nlabels[&quot;alternative medicine&quot;] = {\n\tdisplay = &quot;[[alternative\
      \ medicine]]&quot;,\n\ttopical_categories = {&quot;Alternative medicine&quot;} }\n\nlabels[&quot;amateur radio&quot;] = {\n\tdisplay = &quot;[[amateur radio]]&quot;,\n\ttopical_categories = {&quot;Amateur radio&quot;} }\naliases[&quot;ham radio&quot;]\
      \ = &quot;amateur radio&quot;\n\nlabels[&quot;American football&quot;] = {\n\tdisplay = &quot;[[American football]]&quot;,\n\ttopical_categories = {&quot;Football (American)&quot;} }\n\nlabels[&quot;amino acid&quot;] = {\n\tdisplay = &quot;biochemistry&quot;,\n\
      \ttopical_categories = {&quot;Amino acids&quot;} }\n\nlabels[&quot;analysis&quot;] = {\n\ttopical_categories = {&quot;Mathematical analysis&quot;} }\naliases[&quot;mathematical analysis&quot;] = &quot;analysis&quot;\n\nlabels[&quot;analytic geometry&quot;]\
      \ = {\n\ttopical_categories = {&quot;Geometry&quot;} }\n\nlabels[&quot;analytical chemistry&quot;] = {\n\tdisplay = &quot;[[analytical]] [[chemistry]]&quot;,\n\ttopical_categories = {&quot;Analytical chemistry&quot;} }\n\nlabels[&quot;anarchism&quot;]\
      \ = {\n\ttopical_categories = {&quot;Anarchism&quot;} }\n\nlabels[&quot;anatomy&quot;] = {\n\tdisplay = &quot;[[anatomy]]&quot;,\n\ttopical_categories = {&quot;Anatomy&quot;} }\n\nlabels[&quot;Ancient Rome&quot;] = {\n\ttopical_categories = {&quot;Ancient\
      \ Rome&quot;} }\n\nlabels[&quot;Anglicanism&quot;] = {\n\tdisplay = &quot;[[Anglicanism]]&quot;,\n\ttopical_categories = {&quot;Anglicanism&quot;} }\n\nlabels[&quot;animation&quot;] = {\n\ttopical_categories = {&quot;Animation&quot;} }\n\nlabels[&quot;anime&quot;]\
      \ = {\n\tdisplay = &quot;[[anime]]&quot;,\n\ttopical_categories = {&quot;Japanese fiction&quot;} }\n\nlabels[&quot;anthropology&quot;] = {\n\tdisplay = &quot;[[anthropology]]&quot;,\n\ttopical_categories = {&quot;Anthropology&quot;} }\n\nlabels[&quot;arachnology&quot;]\
      \ = {\n\tdisplay = &quot;[[arachnology]]&quot;,\n\ttopical_categories = {&quot;Arachnology&quot;} }\n\nlabels[&quot;archaeology&quot;] = {\n\tdisplay = &quot;[[archaeology]]&quot;,\n\ttopical_categories = {&quot;Archaeology&quot;} }\n\nlabels[&quot;archery&quot;]\
      \ = {\n\tdisplay = &quot;[[archery]]&quot;,\n\ttopical_categories = {&quot;Archery&quot;} }\n\nlabels[&quot;architecture&quot;] = {\n\tdisplay = &quot;[[architecture]]&quot;,\n\ttopical_categories = {&quot;Architecture&quot;} }\n\nlabels[&quot;arithmetic&quot;]\
      \ = {\n\ttopical_categories = {&quot;Arithmetic&quot;} }\n\nlabels[&quot;Armenian mythology&quot;] = {\n\tdisplay = &quot;[[Armenian]] [[mythology]]&quot;,\n\ttopical_categories = {&quot;Armenian mythology&quot;} }\n\nlabels[&quot;artificial intelligence&quot;]\
      \ = {\n\ttopical_categories = {&quot;Artificial intelligence&quot;} }\n\nlabels[&quot;arts&quot;] = {\n\tdisplay = &quot;art&quot;,\n\ttopical_categories = {&quot;Art&quot;} }\naliases[&quot;art&quot;] = &quot;arts&quot;\n\nlabels[&quot;asterism&quot;]\
      \ = {\n\tdisplay = &quot;[[uranography]]&quot;,\n\ttopical_categories = {&quot;Asterisms&quot;} }\n\nlabels[&quot;astrology&quot;] = {\n\ttopical_categories = {&quot;Astrology&quot;} }\n\nlabels[&quot;astronautics&quot;] = {\n\tdisplay = &quot;[[astronautics]]&quot;,\n\
      \ttopical_categories = {&quot;Astronautics&quot;} }\n\nlabels[&quot;astronomy&quot;] = {\n\tdisplay = &quot;[[astronomy]]&quot;,\n\ttopical_categories = {&quot;Astronomy&quot;} }\n\nlabels[&quot;astrophysics&quot;] = {\n\tdisplay = &quot;[[astrophysics]]&quot;,\n\
      \ttopical_categories = {&quot;Astrophysics&quot;} }\n\nlabels[&quot;Asturian mythology&quot;] = {\n\tdisplay = &quot;[[Asturian]] [[mythology]]&quot;,\n\ttopical_categories = {&quot;Asturian mythology&quot;} }\n\nlabels[&quot;athletics&quot;] = {\n\tdisplay\
      \ = &quot;[[athletics]]&quot;,\n\ttopical_categories = {&quot;Athletics&quot;} }\n\nlabels[&quot;Australian Aboriginal mythology&quot;] = {\n\ttopical_categories = {&quot;Australian Aboriginal mythology&quot;} }\n\nlabels[&quot;Australian rules football&quot;]\
      \ = {\n\tdisplay = &quot;[[Australian rules football]]&quot;,\n\ttopical_categories = {&quot;Australian rules football&quot;} }\n\nlabels[&quot;auto racing&quot;] = {\n\tdisplay = &quot;[[auto racing]]&quot;,\n\ttopical_categories = {&quot;Auto racing&quot;}\
      \ }\n\nlabels[&quot;automotive&quot;] = {\n\ttopical_categories = {&quot;Automotive&quot;} }\naliases[&quot;automobiles&quot;] = &quot;automotive&quot;\n\nlabels[&quot;aviation&quot;] = {\n\tdisplay = &quot;[[aviation]]&quot;,\n\ttopical_categories = {&quot;Aviation&quot;}\
      \ }\n\nlabels[&quot;backgammon&quot;] = {\n\tdisplay = &quot;[[backgammon]]&quot;,\n\ttopical_categories = {&quot;Backgammon&quot;} }\n\nlabels[&quot;bacteriology&quot;] = {\n\tdisplay = &quot;[[bacteriology]]&quot;,\n\ttopical_categories = {&quot;Bacteriology&quot;}\
      \ }\n\nlabels[&quot;badminton&quot;] = {\n\tdisplay = &quot;[[badminton]]&quot;,\n\ttopical_categories = {&quot;Badminton&quot;} }\n\nlabels[&quot;ball games&quot;] = {\n\tdisplay = &quot;[[ball game]]s&quot;,\n\ttopical_categories = {&quot;Ball games&quot;}\
      \ }\n\nlabels[&quot;ballet&quot;] = {\n\ttopical_categories = {&quot;Ballet&quot;} }\n\nlabels[&quot;banking&quot;] = {\n\ttopical_categories = {&quot;Banking&quot;} }\n\nlabels[&quot;baseball&quot;] = {\n\tdisplay = &quot;[[baseball]]&quot;,\n\ttopical_categories\
      \ = {&quot;Baseball&quot;} }\n\nlabels[&quot;basketball&quot;] = {\n\tdisplay = &quot;[[basketball]]&quot;,\n\ttopical_categories = {&quot;Basketball&quot;} }\n\nlabels[&quot;BDSM&quot;] = {\n\ttopical_categories = {&quot;BDSM&quot;} }\n\nlabels[&quot;beekeeping&quot;]\
      \ = {\n\ttopical_categories = {&quot;Beekeeping&quot;} }\n\nlabels[&quot;betting&quot;] = {\n\tdisplay = &quot;gambling&quot;,\n\ttopical_categories = {&quot;Betting&quot;} }\n\nlabels[&quot;biblical&quot;] = {\n\ttopical_categories = {&quot;Bible&quot;}\
      \ }\naliases[&quot;Bible&quot;] = &quot;biblical&quot;\naliases[&quot;Biblical&quot;] = &quot;biblical&quot;\n\nlabels[&quot;biblical character&quot;] = {\n\tdisplay = &quot;biblical&quot;,\n\ttopical_categories = {&quot;Biblical characters&quot;} }\n\
      aliases[&quot;Biblical character&quot;] = &quot;biblical character&quot;\naliases[&quot;biblical figure&quot;] = &quot;biblical character&quot;\naliases[&quot;Biblical figure&quot;] = &quot;biblical character&quot;\n\nlabels[&quot;billiards&quot;] = {\n\
      \tdisplay = &quot;[[billiards]]&quot;,\n\ttopical_categories = {&quot;Billiards&quot;} }\n\nlabels[&quot;bingo&quot;] = {\n\tdisplay = &quot;[[bingo]]&quot;,\n\ttopical_categories = {&quot;Bingo&quot;} }\n\nlabels[&quot;biochemistry&quot;] = {\n\tdisplay\
      \ = &quot;[[biochemistry]]&quot;,\n\ttopical_categories = {&quot;Biochemistry&quot;} }\n\nlabels[&quot;biology&quot;] = {\n\tdisplay = &quot;[[biology]]&quot;,\n\ttopical_categories = {&quot;Biology&quot;} }\n\nlabels[&quot;biotechnology&quot;] = {\n\t\
      topical_categories = {&quot;Biotechnology&quot;} }\n\nlabels[&quot;birdwatching&quot;] = {\n\tdisplay = &quot;[[birdwatching]]&quot;,\n\ttopical_categories = {&quot;Birdwatching&quot;} }\n\nlabels[&quot;blogging&quot;] = {\n\ttopical_categories = {&quot;Internet&quot;}\
      \ }\n\nlabels[&quot;board games&quot;] = {\n\tdisplay = &quot;[[board game]]s&quot;,\n\ttopical_categories = {&quot;Board games&quot;} }\n\nlabels[&quot;board sports&quot;] = {\n\ttopical_categories = {&quot;Board sports&quot;} }\n\nlabels[&quot;bodybuilding&quot;]\
      \ = {\n\tdisplay = &quot;[[bodybuilding]]&quot;,\n\ttopical_categories = {&quot;Bodybuilding&quot;} }\n\nlabels[&quot;book of the bible&quot;] = {\n\tdisplay = &quot;biblical&quot;,\n\ttopical_categories = {&quot;Books of the Bible&quot;} }\n\nlabels[&quot;botany&quot;]\
      \ = {\n\tdisplay = &quot;[[botany]]&quot;,\n\ttopical_categories = {&quot;Botany&quot;} }\n\nlabels[&quot;bowling&quot;] = {\n\tdisplay = &quot;[[bowling]]&quot;,\n\ttopical_categories = {&quot;Bowling&quot;} }\n\nlabels[&quot;boxing&quot;] = {\n\tdisplay\
      \ = &quot;[[boxing]]&quot;,\n\ttopical_categories = {&quot;Boxing&quot;} }\n\nlabels[&quot;brewing&quot;] = {\n\ttopical_categories = {&quot;Brewing&quot;} }\n\nlabels[&quot;bridge&quot;] = {\n\tdisplay = &quot;[[bridge]]&quot;,\n\ttopical_categories =\
      \ {&quot;Bridge&quot;} }\n\nlabels[&quot;broadcasting&quot;] = {\n\ttopical_categories = {&quot;Broadcasting&quot;} }\n\nlabels[&quot;bryology&quot;] = {\n\ttopical_categories = {&quot;Bryology&quot;} }\n\nlabels[&quot;Buddhism&quot;] = {\n\ttopical_categories\
      \ = {&quot;Buddhism&quot;} }\n\nlabels[&quot;bullfighting&quot;] = {\n\tdisplay = &quot;[[bullfighting]]&quot;,\n\ttopical_categories = {&quot;Bullfighting&quot;} }\n\nlabels[&quot;business&quot;] = {\n\tdisplay = &quot;[[business]]&quot;,\n\ttopical_categories\
      \ = {&quot;Business&quot;} }\n\nlabels[&quot;calculus&quot;] = {\n\tdisplay = &quot;[[calculus]]&quot;,\n\ttopical_categories = {&quot;Calculus&quot;} }\n\nlabels[&quot;Canadian football&quot;] = {\n\tdisplay = &quot;[[Canadian football]]&quot;,\n\ttopical_categories\
      \ = {&quot;Canadian football&quot;} }\n\nlabels[&quot;canid&quot;] = {\n\tdisplay = &quot;[[zoology]]&quot;,\n\ttopical_categories = {&quot;Canids&quot;} }\n\nlabels[&quot;canoeing&quot;] = {\n\tdisplay = &quot;[[canoeing]]&quot;,\n\ttopical_categories\
      \ = {&quot;Water sports&quot;} }\n\nlabels[&quot;carbohydrate&quot;] = {\n\tdisplay = &quot;biochemistry&quot;,\n\ttopical_categories = {&quot;Carbohydrates&quot;} }\n\nlabels[&quot;card games&quot;] = {\n\tdisplay = &quot;[[card game]]s&quot;,\n\ttopical_categories\
      \ = {&quot;Card games&quot;} }\naliases[&quot;cards&quot;] = &quot;card games&quot;\naliases[&quot;playing card&quot;] = &quot;card games&quot;\n\nlabels[&quot;cardiology&quot;] = {\n\ttopical_categories = {&quot;Cardiology&quot;} }\n\nlabels[&quot;carpentry&quot;]\
      \ = {\n\ttopical_categories = {&quot;Carpentry&quot;} }\n\nlabels[&quot;cartography&quot;] = {\n\tdisplay = &quot;[[cartography]]&quot;,\n\ttopical_categories = {&quot;Cartography&quot;} }\n\nlabels[&quot;category theory&quot;] = {\n\tdisplay = &quot;[[category\
      \ theory]]&quot;,\n\ttopical_categories = {&quot;Category theory&quot;} }\n\nlabels[&quot;caving&quot;] = {\n\tdisplay = &quot;[[caving]]&quot;,\n\ttopical_categories = {&quot;Caving&quot;} }\n\nlabels[&quot;Celtic mythology&quot;] = {\n\tdisplay = &quot;[[Celtic]]\
      \ [[mythology]]&quot;,\n\ttopical_categories = {&quot;Celtic mythology&quot;} }\n\nlabels[&quot;ceramics&quot;] = {\n\tdisplay = &quot;[[ceramics]]&quot;,\n\ttopical_categories = {&quot;Ceramics&quot;} }\n\nlabels[&quot;cheerleading&quot;] = {\n\tdisplay\
      \ = &quot;[[cheerleading]]&quot;,\n\ttopical_categories = {&quot;Cheerleading&quot;} }\n\nlabels[&quot;chemical engineering&quot;] = {\n\ttopical_categories = {&quot;Chemical engineering&quot;} }\n\nlabels[&quot;chemistry&quot;] = {\n\tdisplay = &quot;[[chemistry]]&quot;,\n\
      \ttopical_categories = {&quot;Chemistry&quot;} }\n\nlabels[&quot;chess&quot;] = {\n\tdisplay = &quot;[[chess]]&quot;,\n\ttopical_categories = {&quot;Chess&quot;} }\n\nlabels[&quot;Chinese mythology&quot;] = {\n\tdisplay = &quot;[[Chinese]] [[mythology]]&quot;,\n\
      \ttopical_categories = {&quot;Chinese mythology&quot;} }\n\nlabels[&quot;Christianity&quot;] = {\n\tdisplay = &quot;[[Christianity]]&quot;,\n\ttopical_categories = {&quot;Christianity&quot;} }\naliases[&quot;christianity&quot;] = &quot;Christianity&quot;\n\
      deprecated[&quot;christianity&quot;] = true\n\nlabels[&quot;cinematography&quot;] = {\n\ttopical_categories = {&quot;Cinematography&quot;} }\naliases[&quot;filmology&quot;] = &quot;cinematography&quot;\n\nlabels[&quot;cladistics&quot;] = {\n\tdisplay =\
      \ &quot;[[cladistics]]&quot;,\n\ttopical_categories = {&quot;Systematics&quot;} }\n\nlabels[&quot;classical mechanics&quot;] = {\n\tdisplay = &quot;[[classical mechanics]]&quot;,\n\ttopical_categories = {&quot;Classical mechanics&quot;} }\n\nlabels[&quot;classical\
      \ studies&quot;] = {\n\ttopical_categories = {&quot;Classical studies&quot;} }\n\nlabels[&quot;climatology&quot;] = {\n\ttopical_categories = {&quot;Climatology&quot;} }\n\nlabels[&quot;climbing&quot;] = {\n\ttopical_categories = {&quot;Climbing&quot;}\
      \ }\n\nlabels[&quot;clinical psychology&quot;] = {\n\tdisplay = &quot;[[clinical]] [[psychology]]&quot;,\n\ttopical_categories = {&quot;Clinical psychology&quot;} }\n\nlabels[&quot;clothing&quot;] = {\n\tdisplay = &quot;clothing&quot;,\n\ttopical_categories\
      \ = {&quot;Clothing&quot;} }\n\nlabels[&quot;coenzyme&quot;] = {\n\tdisplay = &quot;[[biochemistry]]&quot;,\n\ttopical_categories = {&quot;Coenzymes&quot;} }\n\nlabels[&quot;combinatorics&quot;] = {\n\tdisplay = &quot;[[combinatorics]]&quot;,\n\ttopical_categories\
      \ = {&quot;Combinatorics&quot;} }\n\nlabels[&quot;comedy&quot;] = {\n\ttopical_categories = {&quot;Comedy&quot;} }\n\nlabels[&quot;comics&quot;] = {\n\ttopical_categories = {&quot;Comics&quot;} }\n\nlabels[&quot;communication&quot;] = {\n\ttopical_categories\
      \ = {&quot;Communication&quot;} }\naliases[&quot;communications&quot;] = &quot;communication&quot;\n\nlabels[&quot;communism&quot;] = {\n\ttopical_categories = {&quot;Communism&quot;} }\naliases[&quot;Communism&quot;] = &quot;communism&quot;\n\nlabels[&quot;complex\
      \ analysis&quot;] = {\n\tdisplay = &quot;[[complex analysis]]&quot;,\n\ttopical_categories = {&quot;Complex analysis&quot;} }\n\nlabels[&quot;computational linguistics&quot;] = {\n\ttopical_categories = {&quot;Computational linguistics&quot;} }\n\t\nlabels[&quot;computer\
      \ games&quot;] = {\n\tdisplay = &quot;[[computer game]]s&quot;,\n\ttopical_categories = {&quot;Video games&quot;} }\n\nlabels[&quot;computer graphics&quot;] = {\n\ttopical_categories = {&quot;Computer graphics&quot;} }\n\nlabels[&quot;computer hardware&quot;]\
      \ = {\n\ttopical_categories = {&quot;Computer hardware&quot;} }\n\nlabels[&quot;computer science&quot;] = {\n\tdisplay = &quot;[[computer science]]&quot;,\n\ttopical_categories = {&quot;Computer science&quot;} }\naliases[&quot;comp sci&quot;] = &quot;computer\
      \ science&quot;\n\nlabels[&quot;computer security&quot;] = {\n\ttopical_categories = {&quot;Computer security&quot;} }\n\nlabels[&quot;computing&quot;] = {\n\tdisplay = &quot;[[computing]]&quot;,\n\ttopical_categories = {&quot;Computing&quot;} }\naliases[&quot;computer&quot;]\
      \ = &quot;computing&quot;\naliases[&quot;computers&quot;] = &quot;computing&quot;\n\nlabels[&quot;computing theory&quot;] = {\n\ttopical_categories = {&quot;Theory of computing&quot;} }\naliases[&quot;comptheory&quot;] = &quot;computing theory&quot;\n\n\
      labels[&quot;conchology&quot;] = {\n\tdisplay = &quot;[[conchology#English|conchology]]&quot;,\n\ttopical_categories = {&quot;Conchology&quot;} }\n\nlabels[&quot;constellation&quot;] = {\n\tdisplay = &quot;[[astronomy]]&quot;,\n\ttopical_categories = {&quot;Constellations&quot;}\
      \ }\n\nlabels[&quot;construction&quot;] = {\n\ttopical_categories = {&quot;Construction&quot;} }\n\nlabels[&quot;cooking&quot;] = {\n\ttopical_categories = {&quot;Cooking&quot;} }\naliases[&quot;culinary&quot;] = &quot;cooking&quot;\naliases[&quot;cuisine&quot;]\
      \ = &quot;cooking&quot;\naliases[&quot;cookery&quot;] = &quot;cooking&quot;\naliases[&quot;gastronomy&quot;] = &quot;cooking&quot;\n\nlabels[&quot;cookware&quot;] = {\n\tdisplay = &quot;cooking&quot;,\n\ttopical_categories = {&quot;Cookware and bakeware&quot;}\
      \ }\n\nlabels[&quot;copyright&quot;] = {\n\tdisplay = &quot;copyright law&quot;,\n\ttopical_categories = {&quot;Copyright&quot;} }\n\nlabels[&quot;cosmetics&quot;] = {\n\ttopical_categories = {&quot;Cosmetics&quot;} }\naliases[&quot;cosmetology&quot;]\
      \ = &quot;cosmetics&quot;\n\nlabels[&quot;cribbage&quot;] = {\n\tdisplay = &quot;[[cribbage]]&quot;,\n\ttopical_categories = {&quot;Cribbage&quot;} }\n\nlabels[&quot;cricket&quot;] = {\n\tdisplay = &quot;[[cricket]]&quot;,\n\ttopical_categories = {&quot;Cricket&quot;}\
      \ }\n\nlabels[&quot;crime&quot;] = {\n\ttopical_categories = {&quot;Crime&quot;} }\n\nlabels[&quot;criminology&quot;] = {\n\ttopical_categories = {&quot;Criminology&quot;} }\n\nlabels[&quot;cryptography&quot;] = {\n\tdisplay = &quot;[[cryptography]]&quot;,\n\
      \ttopical_categories = {&quot;Cryptography&quot;} }\n\nlabels[&quot;cryptozoology&quot;] = {\n\tdisplay = &quot;[[cryptozoology]]&quot;,\n\ttopical_categories = {&quot;Cryptozoology&quot;} }\n\nlabels[&quot;crystallography&quot;] = {\n\ttopical_categories\
      \ = {&quot;Crystallography&quot;} }\n\nlabels[&quot;cultural anthropology&quot;] = {\n\ttopical_categories = {&quot;Cultural anthropology&quot;} }\n\nlabels[&quot;curling&quot;] = {\n\tdisplay = &quot;[[curling]]&quot;,\n\ttopical_categories = {&quot;Curling&quot;}\
      \ }\n\nlabels[&quot;numismatics&quot;] = {\n\tdisplay = &quot;numismatics&quot;,\n\ttopical_categories = {&quot;Currency&quot;} }\naliases[&quot;currency&quot;] = &quot;numismatics&quot;\ndeprecated[&quot;currency&quot;] = true\n\nlabels[&quot;cybernetics&quot;]\
      \ = {\n\ttopical_categories = {&quot;Cybernetics&quot;} }\n\nlabels[&quot;cycling&quot;] = {\n\tdisplay = &quot;[[cycling]]&quot;,\n\ttopical_categories = {&quot;Cycling&quot;} }\n\nlabels[&quot;cytology&quot;] = {\n\tdisplay = &quot;[[cytology]]&quot;,\n\
      \ttopical_categories = {&quot;Cytology&quot;} }\n\nlabels[&quot;dance&quot;] = {\n\tdisplay = &quot;[[dance]]&quot;,\n\ttopical_categories = {&quot;Dance&quot;} }\n\nlabels[&quot;darts&quot;] = {\n\tdisplay = &quot;[[darts]]&quot;,\n\ttopical_categories\
      \ = {&quot;Darts&quot;} }\n\nlabels[&quot;data management&quot;] = {\n\ttopical_categories = {&quot;Data management&quot;} }\n\nlabels[&quot;data modeling&quot;] = {\n\ttopical_categories = {&quot;Data modeling&quot;} }\n\nlabels[&quot;databases&quot;]\
      \ = {\n\ttopical_categories = {&quot;Databases&quot;} }\naliases[&quot;database&quot;] = &quot;databases&quot;\n\nlabels[&quot;deltiology&quot;] = {\n\tdisplay = &quot;[[deltiology]]&quot;,\n\ttopical_categories = {&quot;Deltiology&quot;} }\n\nlabels[&quot;demoscene&quot;]\
      \ = {\n\tdisplay = &quot;[[demoscene]]&quot;,\n\ttopical_categories = {&quot;Demoscene&quot;} }\n\nlabels[&quot;dentistry&quot;] = {\n\ttopical_categories = {&quot;Dentistry&quot;} }\n\nlabels[&quot;dermatology&quot;] = {\n\ttopical_categories = {&quot;Dermatology&quot;}\
      \ }\n\nlabels[&quot;dice games&quot;] = {\n\tdisplay = &quot;[[dice game]]s&quot;,\n\ttopical_categories = {&quot;Dice games&quot;} }\naliases[&quot;dice&quot;] = &quot;dice games&quot;\n\nlabels[&quot;dictation&quot;] = {\n\tdisplay = &quot;[[dictation]]&quot;,\n\
      \ttopical_categories = {&quot;Dictation&quot;} }\n\nlabels[&quot;diplomacy&quot;] = {\n\ttopical_categories = {&quot;Diplomacy&quot;} }\n\nlabels[&quot;disease&quot;] = {\n\tdisplay = &quot;[[pathology]]&quot;,\n\ttopical_categories = {&quot;Diseases&quot;}\
      \ }\naliases[&quot;diseases&quot;] = &quot;disease&quot;\n\nlabels[&quot;diving&quot;] = {\n\tdisplay = &quot;[[diving]]&quot;,\n\ttopical_categories = {&quot;Diving&quot;} }\n\nlabels[&quot;dominoes&quot;] = {\n\tdisplay = &quot;[[dominoes]]&quot;,\n\t\
      topical_categories = {&quot;Dominoes&quot;} }\n\nlabels[&quot;drama&quot;] = {\n\ttopical_categories = {&quot;Drama&quot;} }\n\nlabels[&quot;dressage&quot;] = {\n\tdisplay = &quot;[[dressage]]&quot;,\n\ttopical_categories = {&quot;Dressage&quot;} }\n\n\
      labels[&quot;E number&quot;] = {\n\tdisplay = &quot;food manufacture&quot;,\n\tplain_categories = {&quot;E numbers&quot;} }\n\nlabels[&quot;earth science&quot;] = {\n\tdisplay = &quot;[[earth science]]&quot;,\n\ttopical_categories = {&quot;Earth sciences&quot;}\
      \ }\n\nlabels[&quot;Eastern Orthodoxy&quot;] = {\n\ttopical_categories = {&quot;Eastern Orthodoxy&quot;} }\n\nlabels[&quot;ecclesiastical&quot;] = {\n\ttopical_categories = {&quot;Christianity&quot;} }\n\nlabels[&quot;ecology&quot;] = {\n\tdisplay = &quot;[[ecology]]&quot;,\n\
      \ttopical_categories = {&quot;Ecology&quot;} }\n\nlabels[&quot;economics&quot;] = {\n\tdisplay = &quot;[[economics]]&quot;,\n\ttopical_categories = {&quot;Economics&quot;} }\n\nlabels[&quot;education&quot;] = {\n\ttopical_categories = {&quot;Education&quot;}\
      \ }\n\nlabels[&quot;Egyptian mythology&quot;] = {\n\tdisplay = &quot;[[Egyptian]] [[mythology]]&quot;,\n\ttopical_categories = {&quot;Egyptian mythology&quot;} }\n\nlabels[&quot;Egyptology&quot;] = {\n\ttopical_categories = {&quot;Ancient Egypt&quot;}\
      \ }\n\nlabels[&quot;electrencephalography&quot;] = {\n\tdisplay = &quot;[[electrencephalography]]&quot;,\n\ttopical_categories = {&quot;Electrencephalography&quot;} }\n\nlabels[&quot;electrical engineering&quot;] = {\n\ttopical_categories = {&quot;Electrical\
      \ engineering&quot;} }\n\nlabels[&quot;electricity&quot;] = {\n\ttopical_categories = {&quot;Electricity&quot;} }\n\nlabels[&quot;electrodynamics&quot;] = {\n\ttopical_categories = {&quot;Electrodynamics&quot;} }\n\nlabels[&quot;electromagnetism&quot;]\
      \ = {\n\ttopical_categories = {&quot;Electromagnetism&quot;} }\n\nlabels[&quot;electronics&quot;] = {\n\ttopical_categories = {&quot;Electronics&quot;} }\n\nlabels[&quot;element symbol&quot;] = {\n\tdisplay = &quot;chemistry&quot;,\n\tplain_categories\
      \ = {&quot;Symbols for chemical elements&quot;} }\n\nlabels[&quot;embryology&quot;] = {\n\ttopical_categories = {&quot;Embryology&quot;} }\n\nlabels[&quot;emergency medicine&quot;] = {\n\tdisplay = &quot;[[emergency medicine]]&quot;,\n\ttopical_categories\
      \ = {&quot;Emergency medicine&quot;} }\n\nlabels[&quot;endocrinology&quot;] = {\n\tdisplay = &quot;[[endocrinology]]&quot;,\n\ttopical_categories = {&quot;Endocrinology&quot;} }\n\nlabels[&quot;engineering&quot;] = {\n\tdisplay = &quot;[[engineering]]&quot;,\n\
      \ttopical_categories = {&quot;Engineering&quot;} }\n\nlabels[&quot;enterprise engineering&quot;] = {\n\ttopical_categories = {&quot;Enterprise engineering&quot;} }\n\nlabels[&quot;entomology&quot;] = {\n\tdisplay = &quot;[[entomology]]&quot;,\n\ttopical_categories\
      \ = {&quot;Entomology&quot;} }\n\nlabels[&quot;enzyme&quot;] = {\n\tdisplay = &quot;biochemistry&quot;,\n\ttopical_categories = {&quot;Enzymes&quot;} }\n\nlabels[&quot;epidemiology&quot;] = {\n\tdisplay = &quot;[[epidemiology]]&quot;,\n\ttopical_categories\
      \ = {&quot;Epidemiology&quot;} }\n\nlabels[&quot;epistemology&quot;] = {\n\tdisplay = &quot;[[epistemology]]&quot;,\n\ttopical_categories = {&quot;Epistemology&quot;} }\n\nlabels[&quot;equestrianism&quot;] = {\n\tdisplay = &quot;[[equestrianism]]&quot;,\n\
      \ttopical_categories = {&quot;Equestrianism&quot;} }\n\nlabels[&quot;espionage&quot;] = {\n\tdisplay = &quot;[[espionage]]&quot;,\n\ttopical_categories = {&quot;Espionage&quot;} }\n\nlabels[&quot;ethics&quot;] = {\n\ttopical_categories = {&quot;Ethics&quot;}\
      \ }\n\nlabels[&quot;ethnography&quot;] = {\n\tdisplay = &quot;[[ethnography]]&quot;,\n\ttopical_categories = {&quot;Ethnography&quot;} }\n\nlabels[&quot;European folklore&quot;] = {\n\tdisplay = &quot;European [[folklore]]&quot;,\n\ttopical_categories\
      \ = {&quot;European folklore&quot;} }\n\nlabels[&quot;exercise&quot;] = {\n\tdisplay = &quot;[[exercise|exercise (sport)]]&quot;,\n\ttopical_categories = {&quot;Exercise&quot;} }\n\nlabels[&quot;falconry&quot;] = {\n\tdisplay = &quot;[[falconry]]&quot;,\n\
      \ttopical_categories = {&quot;Falconry&quot;} }\n\nlabels[&quot;fantasy&quot;] = {\n\ttopical_categories = {&quot;Fantasy&quot;} }\n\nlabels[&quot;fashion&quot;] = {\n\ttopical_categories = {&quot;Fashion&quot;} }\n\nlabels[&quot;fatty acid&quot;] = {\n\
      \tdisplay = &quot;organic chemistry&quot;,\n\ttopical_categories = {&quot;Fatty acids&quot;} }\n\nlabels[&quot;felid&quot;] = {\n\tdisplay = &quot;[[zoology]]&quot;,\n\ttopical_categories = {&quot;Felids&quot;} }\n\nlabels[&quot;feminism&quot;] = {\n\t\
      display = &quot;[[feminism]]&quot;,\n\ttopical_categories = {&quot;Feminism&quot;} }\n\nlabels[&quot;fencing&quot;] = {\n\tdisplay = &quot;[[fencing]]&quot;,\n\ttopical_categories = {&quot;Fencing&quot;} }\n\nlabels[&quot;fiction&quot;] = {\n\ttopical_categories\
      \ = {&quot;Fiction&quot;} }\n\nlabels[&quot;fictional character&quot;] = {\n\ttopical_categories = {&quot;Fictional characters&quot;} }\n\nlabels[&quot;field hockey&quot;] = {\n\tdisplay = &quot;[[field hockey]]&quot;,\n\ttopical_categories = {&quot;Field\
      \ hockey&quot;} }\n\nlabels[&quot;figure of speech&quot;] = {\n\tdisplay = &quot;rhetoric&quot;,\n\ttopical_categories = {&quot;Figures of speech&quot;} }\n\nlabels[&quot;figure skating&quot;] = {\n\tdisplay = &quot;[[figure skating]]&quot;,\n\ttopical_categories\
      \ = {&quot;Figure skating&quot;} }\n\nlabels[&quot;film&quot;] = {\n\ttopical_categories = {&quot;Film&quot;} }\naliases[&quot;cinema&quot;] = &quot;film&quot;\n\nlabels[&quot;finance&quot;] = {\n\ttopical_categories = {&quot;Finance&quot;} }\n\nlabels[&quot;firefighting&quot;]\
      \ = {\n\ttopical_categories = {&quot;Firefighting&quot;} }\n\nlabels[&quot;fishing&quot;] = {\n\tdisplay = &quot;[[fishing]]&quot;,\n\ttopical_categories = {&quot;Fishing&quot;} }\naliases[&quot;angling&quot;] = &quot;fishing&quot;\n\nlabels[&quot;fluid\
      \ dynamics&quot;] = {\n\ttopical_categories = {&quot;Fluid dynamics&quot;} }\n\nlabels[&quot;fluid mechanics&quot;] = {\n\ttopical_categories = {&quot;Mechanics&quot;} }\n\nlabels[&quot;folklore&quot;] = {\n\tdisplay = &quot;folklore&quot;,\n\ttopical_categories\
      \ = {&quot;Folklore&quot;} }\n\nlabels[&quot;footwear&quot;] = {\n\tdisplay = &quot;[[footwear]]&quot;,\n\ttopical_categories = {&quot;Footwear&quot;} }\n\nlabels[&quot;forestry&quot;] = {\n\ttopical_categories = {&quot;Forestry&quot;} }\n\nlabels[&quot;freemasonry&quot;]\
      \ = {\n\tdisplay = &quot;[[freemasonry]]&quot;,\n\ttopical_categories = {&quot;Freemasonry&quot;} }\n\nlabels[&quot;functional analysis&quot;] = {\n\tdisplay = &quot;[[functional analysis]]&quot;,\n\ttopical_categories = {&quot;Functional analysis&quot;}\
      \ }\n\nlabels[&quot;functional group prefix&quot;] = {\n\tdisplay = &quot;organic chemistry&quot;,\n\ttopical_categories = {&quot;Functional group prefixes&quot;} }\n\nlabels[&quot;functional group suffix&quot;] = {\n\tdisplay = &quot;organic chemistry&quot;,\n\
      \ttopical_categories = {&quot;Functional group suffixes&quot;} }\n\nlabels[&quot;furniture&quot;] = {\n\ttopical_categories = {&quot;Furniture&quot;} }\n\nlabels[&quot;fuzzy logic&quot;] = {\n\tdisplay = &quot;[[fuzzy logic]]&quot;,\n\ttopical_categories\
      \ = {&quot;Fuzzy logic&quot;} }\n\nlabels[&quot;Gaelic football&quot;] = {\n\tdisplay = &quot;[[Gaelic football]]&quot;,\n\ttopical_categories = {&quot;Gaelic football&quot;} }\n\nlabels[&quot;galaxy&quot;] = {\n\tdisplay = &quot;astronomy&quot;,\n\ttopical_categories\
      \ = {&quot;Galaxies&quot;} }\n\nlabels[&quot;gambling&quot;] = {\n\ttopical_categories = {&quot;Gambling&quot;} }\n\nlabels[&quot;game of go&quot;] = {\n\tdisplay = &quot;[[Go|game of Go]]&quot;,\n\ttopical_categories = {&quot;Go&quot;} }\n\nlabels[&quot;game\
      \ theory&quot;] = {\n\tdisplay = &quot;[[game theory]]&quot;,\n\ttopical_categories = {&quot;Game theory&quot;} }\n\nlabels[&quot;games&quot;] = {\n\tdisplay = &quot;[[game]]s&quot;,\n\ttopical_categories = {&quot;Games&quot;} }\naliases[&quot;game&quot;]\
      \ = &quot;games&quot;\n\nlabels[&quot;gaming&quot;] = {\n\tdisplay = &quot;[[gaming]]&quot;,\n\ttopical_categories = {&quot;Gaming&quot;} }\n\nlabels[&quot;genealogy&quot;] = {\n\ttopical_categories = {&quot;Genealogy&quot;} }\n\nlabels[&quot;genetic disorder&quot;]\
      \ = {\n\tdisplay = &quot;[[medical]] [[genetics]]&quot;,\n\ttopical_categories = {&quot;Genetic disorders&quot;} }\n\nlabels[&quot;genetics&quot;] = {\n\tdisplay = &quot;[[genetics]]&quot;,\n\ttopical_categories = {&quot;Genetics&quot;} }\n\nlabels[&quot;geography&quot;]\
      \ = {\n\tdisplay = &quot;[[geography]]&quot;,\n\ttopical_categories = {&quot;Geography&quot;} }\n\nlabels[&quot;geology&quot;] = {\n\tdisplay = &quot;[[geology]]&quot;,\n\ttopical_categories = {&quot;Geology&quot;} }\n\nlabels[&quot;geometry&quot;] = {\n\
      \tdisplay = &quot;[[geometry]]&quot;,\n\ttopical_categories = {&quot;Geometry&quot;} }\n\nlabels[&quot;geomorphology&quot;] = {\n\tdisplay = &quot;[[geomorphology]]&quot;,\n\ttopical_categories = {&quot;Geomorphology&quot;} }\n\nlabels[&quot;gerontology&quot;]\
      \ = {\n\tdisplay = &quot;[[gerontology]]&quot;,\n\ttopical_categories = {&quot;Gerontology&quot;} }\n\nlabels[&quot;glassblowing&quot;] = {\n\ttopical_categories = {&quot;Glassblowing&quot;} }\n\nlabels[&quot;Gnosticism&quot;] = {\n\ttopical_categories\
      \ = {&quot;Gnosticism&quot;} }\naliases[&quot;gnosticism&quot;] = &quot;Gnosticism&quot;\n\nlabels[&quot;golf&quot;] = {\n\tdisplay = &quot;[[golf]]&quot;,\n\ttopical_categories = {&quot;Golf&quot;} }\n\nlabels[&quot;government&quot;] = {\n\ttopical_categories\
      \ = {&quot;Government&quot;} }\n\nlabels[&quot;grammar&quot;] = {\n\tdisplay = &quot;[[grammar]]&quot;,\n\ttopical_categories = {&quot;Grammar&quot;} }\n\nlabels[&quot;graph theory&quot;] = {\n\tdisplay = &quot;[[graph theory]]&quot;,\n\ttopical_categories\
      \ = {&quot;Graph theory&quot;} }\n\nlabels[&quot;graphical user interface&quot;] = {\n\tdisplay = &quot;[[graphical user interface]]&quot;,\n\ttopical_categories = {&quot;Graphical user interface&quot;} }\naliases[&quot;GUI&quot;] = &quot;graphical user\
      \ interface&quot;\n\nlabels[&quot;Greek god&quot;] = {\n\tdisplay = &quot;[[Greek]] [[mythology]]&quot;,\n\ttopical_categories = {&quot;Greek deities&quot;} }\n\nlabels[&quot;Greek mythology&quot;] = {\n\tdisplay = &quot;[[Greek]] [[mythology]]&quot;,\n\
      \ttopical_categories = {&quot;Greek mythology&quot;} }\naliases[&quot;greekmyth&quot;] = &quot;Greek mythology&quot;\ndeprecated[&quot;greekmyth&quot;] = true\n\nlabels[&quot;group theory&quot;] = {\n\tdisplay = &quot;[[group theory]]&quot;,\n\ttopical_categories\
      \ = {&quot;Group theory&quot;} }\n\nlabels[&quot;gymnastics&quot;] = {\n\tdisplay = &quot;[[gymnastics]]&quot;,\n\ttopical_categories = {&quot;Gymnastics&quot;} }\n\nlabels[&quot;gynaecology&quot;] = {\n\ttopical_categories = {&quot;Gynaecology&quot;}\
      \ }\n\nlabels[&quot;handball&quot;] = {\n\tdisplay = &quot;[[handball]]&quot;,\n\ttopical_categories = {&quot;Handball&quot;} }\n\nlabels[&quot;Hawaiian mythology&quot;] = {\n\tdisplay = &quot;[[Hawaiian]] [[mythology]]&quot;,\n\ttopical_categories = {&quot;Hawaiian\
      \ mythology&quot;} }\n\nlabels[&quot;healthcare&quot;] = {\n\ttopical_categories = {&quot;Healthcare&quot;} }\n\nlabels[&quot;hematology&quot;] = {\n\ttopical_categories = {&quot;Hematology&quot;} }\n\nlabels[&quot;heraldiccharge&quot;] = {\n\tdisplay\
      \ = &quot;heraldry&quot;,\n\ttopical_categories = {&quot;Heraldic charges&quot;} }\n\nlabels[&quot;heraldry&quot;] = {\n\ttopical_categories = {&quot;Heraldry&quot;} }\n\nlabels[&quot;herbalism&quot;] = {\n\ttopical_categories = {&quot;Herbs&quot;} }\n\
      \nlabels[&quot;herpetology&quot;] = {\n\tdisplay = &quot;[[herpetology]]&quot;,\n\ttopical_categories = {&quot;Herpetology&quot;} }\n\nlabels[&quot;Hinduism&quot;] = {\n\ttopical_categories = {&quot;Hinduism&quot;} }\n\nlabels[&quot;Hindu god&quot;] =\
      \ {\n\tdisplay = &quot;Hinduism&quot;,\n\ttopical_categories = {&quot;Hindu deities&quot;} }\n\nlabels[&quot;historiography&quot;] = {\n\ttopical_categories = {&quot;Historiography&quot;} }\n\nlabels[&quot;history&quot;] = {\n\ttopical_categories = {&quot;History&quot;}\
      \ }\n\nlabels[&quot;hockey&quot;] = {\n\tdisplay = &quot;[[field hockey]] or [[ice hockey]]&quot;,\n\ttopical_categories = {&quot;Field hockey&quot;, &quot;Ice hockey&quot;} }\n\nlabels[&quot;Hokkien&quot;] = {\n\tdisplay = &quot;Hokkien&quot;,\n\tregional_categories\
      \ = {&quot;Hokkien&quot;} }\n\nlabels[&quot;homeopathy&quot;] = {\n\ttopical_categories = {&quot;Homeopathy&quot;} }\n\nlabels[&quot;hormone&quot;] = {\n\tdisplay = &quot;biochemistry&quot;,\n\ttopical_categories = {&quot;Hormones&quot;} }\n\nlabels[&quot;horse\
      \ racing&quot;] = {\n\tdisplay = &quot;[[horse racing]]&quot;,\n\ttopical_categories = {&quot;Horse racing&quot;} }\n\nlabels[&quot;horticulture&quot;] = {\n\ttopical_categories = {&quot;Horticulture&quot;} }\naliases[&quot;gardening&quot;] = &quot;horticulture&quot;\n\
      \nlabels[&quot;HTML&quot;] = {\n\ttopical_categories = {&quot;HTML&quot;} }\n\nlabels[&quot;human resources&quot;] = {\n\ttopical_categories = {&quot;Human resources&quot;} }\n\nlabels[&quot;humanities&quot;] = {\n\ttopical_categories = {&quot;Humanities&quot;}\
      \ }\n\nlabels[&quot;hunting&quot;] = {\n\ttopical_categories = {&quot;Hunting&quot;} }\n\nlabels[&quot;hurling&quot;] = {\n\tdisplay = &quot;[[hurling]]&quot;,\n\ttopical_categories = {&quot;Hurling&quot;} }\n\nlabels[&quot;hydrocarbon chain prefix&quot;]\
      \ = {\n\tdisplay = &quot;organic chemistry&quot;,\n\ttopical_categories = {&quot;Hydrocarbon chain prefixes&quot;} }\n\nlabels[&quot;hydrocarbon chain suffix&quot;] = {\n\tdisplay = &quot;organic chemistry&quot;,\n\ttopical_categories = {&quot;Hydrocarbon\
      \ chain suffixes&quot;} }\n\nlabels[&quot;hydrology&quot;] = {\n\tdisplay = &quot;[[hydrology]]&quot;,\n\ttopical_categories = {&quot;Hydrology&quot;} }\n\nlabels[&quot;ice hockey&quot;] = {\n\tdisplay = &quot;[[ice hockey]]&quot;,\n\ttopical_categories\
      \ = {&quot;Ice hockey&quot;} }\n\nlabels[&quot;ichthyology&quot;] = {\n\tdisplay = &quot;[[ichthyology]]&quot;,\n\ttopical_categories = {&quot;Ichthyology&quot;} }\n\nlabels[&quot;immunochemistry&quot;] = {\n\ttopical_categories = {&quot;Immunochemistry&quot;}\
      \ }\n\nlabels[&quot;immunology&quot;] = {\n\tdisplay = &quot;[[immunology]]&quot;,\n\ttopical_categories = {&quot;Immunology&quot;} }\n\nlabels[&quot;import/export&quot;] = {\n\ttopical_categories = {&quot;Import/export&quot;} }\n\nlabels[&quot;incoterm&quot;]\
      \ = {\n\tdisplay = &quot;[[incoterm]]&quot;,\n\ttopical_categories = {&quot;Incoterms&quot;} }\n\nlabels[&quot;Indo-European studies&quot;] = {\n\tdisplay = &quot;[[linguistics]]&quot;,\n\ttopical_categories = {&quot;Indo-European studies&quot;} }\naliases[&quot;indo-european\
      \ studies&quot;] = &quot;Indo-European studies&quot;\n\nlabels[&quot;information science&quot;] = {\n\ttopical_categories = {&quot;Information science&quot;} }\n\nlabels[&quot;information theory&quot;] = {\n\ttopical_categories = {&quot;Information theory&quot;}\
      \ }\n\nlabels[&quot;inorganic chemistry&quot;] = {\n\ttopical_categories = {&quot;Inorganic chemistry&quot;} }\n\nlabels[&quot;inorganic compound&quot;] = {\n\tdisplay = &quot;inorganic chemistry&quot;,\n\ttopical_categories = {&quot;Inorganic compounds&quot;}\
      \ }\n\nlabels[&quot;international law&quot;] = {\n\ttopical_categories = {&quot;International law&quot;} }\n\nlabels[&quot;Internet&quot;] = {\n\tdisplay = &quot;[[Internet]]&quot;,\n\ttopical_categories = {&quot;Internet&quot;} }\naliases[&quot;internet&quot;]\
      \ = &quot;Internet&quot;\naliases[&quot;online&quot;] = &quot;Internet&quot;\n\nlabels[&quot;Iranian mythology&quot;] = {\n\tdisplay = &quot;[[Iranian]] [[mythology]]&quot;,\n\ttopical_categories = {&quot;Iranian mythology&quot;} }\n\nlabels[&quot;Irish\
      \ mythology&quot;] = {\n\tdisplay = &quot;[[Irish]] [[mythology]]&quot;,\n\ttopical_categories = {&quot;Irish mythology&quot;} }\n\nlabels[&quot;Islam&quot;] = {\n\ttopical_categories = {&quot;Islam&quot;} }\n\nlabels[&quot;isotope&quot;] = {\n\tdisplay\
      \ = &quot;[[physics]]&quot;,\n\ttopical_categories = {&quot;Isotopes&quot;} }\n\nlabels[&quot;Jainism&quot;] = {\n\ttopical_categories = {&quot;Jainism&quot;} }\n\nlabels[&quot;Java programming language&quot;] = {\n\tdisplay = &quot;[[w:Java (programming\
      \ language)|Java programming language]]&quot;,\n\ttopical_categories = {&quot;Java programming language&quot;} }\naliases[&quot;JavaPL&quot;] = &quot;Java programming language&quot;\naliases[&quot;Java PL&quot;] = &quot;Java programming language&quot;\n\
      \nlabels[&quot;jazz&quot;] = {\n\ttopical_categories = {&quot;Jazz&quot;} }\n\nlabels[&quot;Jewish law&quot;] = {\n\ttopical_categories = {&quot;Jewish law&quot;} }\naliases[&quot;Halacha&quot;] = &quot;Jewish law&quot;\naliases[&quot;Halachah&quot;] =\
      \ &quot;Jewish law&quot;\naliases[&quot;Halakha&quot;] = &quot;Jewish law&quot;\naliases[&quot;Halakhah&quot;] = &quot;Jewish law&quot;\naliases[&quot;halacha&quot;] = &quot;Jewish law&quot;\naliases[&quot;halachah&quot;] = &quot;Jewish law&quot;\naliases[&quot;halakha&quot;]\
      \ = &quot;Jewish law&quot;\naliases[&quot;halakhah&quot;] = &quot;Jewish law&quot;\naliases[&quot;jewish law&quot;] = &quot;Jewish law&quot;\naliases[&quot;Jewish Law&quot;] = &quot;Jewish law&quot;\n\nlabels[&quot;journalism&quot;] = {\n\ttopical_categories\
      \ = {&quot;Media&quot;} }\n\nlabels[&quot;Judaism&quot;] = {\n\ttopical_categories = {&quot;Judaism&quot;} }\n\nlabels[&quot;judo&quot;] = {\n\tdisplay = &quot;[[judo]]&quot;,\n\ttopical_categories = {&quot;Judo&quot;} }\n\nlabels[&quot;juggling&quot;]\
      \ = {\n\ttopical_categories = {&quot;Juggling&quot;} }\n\nlabels[&quot;knitting&quot;] = {\n\ttopical_categories = {&quot;Knitting&quot;} }\n\nlabels[&quot;lacrosse&quot;] = {\n\tdisplay = &quot;[[lacrosse]]&quot;,\n\ttopical_categories = {&quot;Lacrosse&quot;}\
      \ }\n\nlabels[&quot;landforms&quot;] = {\n\tdisplay = &quot;landform&quot;,\n\ttopical_categories = {&quot;Landforms&quot;} }\n\nlabels[&quot;law&quot;] = {\n\ttopical_categories = {&quot;Law&quot;} }\naliases[&quot;legal&quot;] = &quot;law&quot;\n\nlabels[&quot;law\
      \ enforcement&quot;] = {\n\ttopical_categories = {&quot;Law enforcement&quot;} }\naliases[&quot;police&quot;] = &quot;law enforcement&quot;\n\nlabels[&quot;letterpress&quot;] = {\n\tdisplay = &quot;letterpress typography&quot;,\n\ttopical_categories =\
      \ {&quot;Typography&quot;} }\naliases[&quot;metal type&quot;] = &quot;letterpress&quot;\naliases[&quot;metal typesetting&quot;] = &quot;letterpress&quot;\n\nlabels[&quot;lexicography&quot;] = {\n\tdisplay = &quot;[[lexicography]]&quot;,\n\ttopical_categories\
      \ = {&quot;Lexicography&quot;} }\n\nlabels[&quot;LGBT&quot;] = {\n\tdisplay = &quot;[[LGBT]]&quot;,\n\ttopical_categories = {&quot;LGBT&quot;} }\n\nlabels[&quot;library science&quot;] = {\n\ttopical_categories = {&quot;Library science&quot;} }\n\nlabels[&quot;lichenology&quot;]\
      \ = {\n\tdisplay = &quot;[[lichenology]]&quot;,\n\ttopical_categories = {&quot;Lichenology&quot;} }\n\nlabels[&quot;limnology&quot;] = {\n\tdisplay = &quot;[[limnology]]&quot;,\n\ttopical_categories = {&quot;Ecology&quot;} }\n\nlabels[&quot;linear algebra&quot;]\
      \ = {\n\ttopical_categories = {&quot;Linear algebra&quot;} }\naliases[&quot;vector&quot;] = &quot;linear algebra&quot;\naliases[&quot;vector algebra&quot;] = &quot;linear algebra&quot;\ndeprecated[&quot;vector&quot;] = true\n\nlabels[&quot;linguistic morphology&quot;]\
      \ = {\n\tdisplay = &quot;linguistics&quot;,\n\ttopical_categories = {&quot;Linguistic morphology&quot;} }\naliases[&quot;morphology&quot;] = &quot;linguistic morphology&quot;\ndeprecated[&quot;morphology&quot;] = true\n\nlabels[&quot;linguistics&quot;]\
      \ = {\n\tdisplay = &quot;[[linguistics]]&quot;,\n\ttopical_categories = {&quot;Linguistics&quot;} }\n\nlabels[&quot;literature&quot;] = {\n\ttopical_categories = {&quot;Literature&quot;} }\n\nlabels[&quot;logic&quot;] = {\n\ttopical_categories = {&quot;Logic&quot;}\
      \ }\n\nlabels[&quot;logical fallacy&quot;] = {\n\tdisplay = &quot;[[rhetoric]]&quot;,\n\ttopical_categories = {&quot;Logical fallacies&quot;} }\n\nlabels[&quot;luge&quot;] = {\n\tdisplay = &quot;[[luge]]&quot;,\n\ttopical_categories = {&quot;Luge&quot;}\
      \ }\n\nlabels[&quot;machining&quot;] = {\n\ttopical_categories = {&quot;Machining&quot;} }\n\nlabels[&quot;mahjong&quot;] = {\n\tdisplay = &quot;[[mahjong]]&quot;,\n\ttopical_categories = {&quot;Mahjong&quot;} }\n\nlabels[&quot;malacology&quot;] = {\n\t\
      display = &quot;[[malacology]]&quot;,\n\ttopical_categories = {&quot;Malacology&quot;} }\n\nlabels[&quot;mammalogy&quot;] = {\n\tdisplay = &quot;[[mammalogy]]&quot;,\n\ttopical_categories = {&quot;Mammalogy&quot;} }\n\nlabels[&quot;management&quot;] =\
      \ {\n\ttopical_categories = {&quot;Management&quot;} }\n\nlabels[&quot;manga&quot;] = {\n\tdisplay = &quot;[[manga]]&quot;,\n\ttopical_categories = {&quot;Japanese fiction&quot;} }\n\nlabels[&quot;manufacturing&quot;] = {\n\ttopical_categories = {&quot;Manufacturing&quot;}\
      \ }\naliases[&quot;industry&quot;] = &quot;manufacturing&quot;\ndeprecated[&quot;industry&quot;] = true\n\nlabels[&quot;marching&quot;] = {\n\tdisplay = &quot;[[w:Marching|marching]]&quot;,\n\ttopical_categories = {&quot;Marching&quot;} }\n\nlabels[&quot;marine\
      \ biology&quot;] = {\n\tdisplay = &quot;[[marine biology]]&quot;,\n\ttopical_categories = {&quot;Marine biology&quot;} }\naliases[&quot;coral science&quot;] = &quot;marine biology&quot;\n\nlabels[&quot;marketing&quot;] = {\n\ttopical_categories = {&quot;Marketing&quot;}\
      \ }\n\nlabels[&quot;martial arts&quot;] = {\n\tdisplay = &quot;[[martial arts]]&quot;,\n\ttopical_categories = {&quot;Martial arts&quot;} }\n\nlabels[&quot;Marxism&quot;] = {\n\tdisplay = &quot;[[Marxism]]&quot;,\n\ttopical_categories = {&quot;Marxism&quot;}\
      \ }\n\nlabels[&quot;massage&quot;] = {\n\tdisplay = &quot;[[massage]]&quot;,\n\ttopical_categories = {&quot;Massage&quot;} }\n\nlabels[&quot;materials science&quot;] = {\n\ttopical_categories = {&quot;Materials science&quot;} }\n\nlabels[&quot;mathematics&quot;]\
      \ = {\n\tdisplay = &quot;[[mathematics]]&quot;,\n\ttopical_categories = {&quot;Mathematics&quot;} }\naliases[&quot;math&quot;] = &quot;mathematics&quot;\naliases[&quot;maths&quot;] = &quot;mathematics&quot;\n\nlabels[&quot;mechanical engineering&quot;]\
      \ = {\n\ttopical_categories = {&quot;Mechanical engineering&quot;} }\n\nlabels[&quot;mechanics&quot;] = {\n\ttopical_categories = {&quot;Mechanics&quot;} }\n\nlabels[&quot;media&quot;] = {\n\ttopical_categories = {&quot;Media&quot;} }\n\nlabels[&quot;mediaeval\
      \ folklore&quot;] = {\n\tdisplay = &quot;mediaeval [[folklore]]&quot;,\n\ttopical_categories = {&quot;European folklore&quot;} }\naliases[&quot;medieval folklore&quot;] = &quot;mediaeval folklore&quot;\n\nlabels[&quot;medical genetics&quot;] = {\n\tdisplay\
      \ = &quot;[[medical]] [[genetics]]&quot;,\n\ttopical_categories = {&quot;Medical genetics&quot;} }\n\nlabels[&quot;medicine&quot;] = {\n\tdisplay = &quot;[[medicine]]&quot;,\n\ttopical_categories = {&quot;Medicine&quot;} }\naliases[&quot;medical&quot;]\
      \ = &quot;medicine&quot;\n\nlabels[&quot;Mesopotamian god&quot;] = {\n\tdisplay = &quot;[[Mesopotamian]] [[mythology]]&quot;,\n\ttopical_categories = {&quot;Mesopotamian deities&quot;} }\n\nlabels[&quot;Mesopotamian mythology&quot;] = {\n\tdisplay = &quot;[[Mesopotamian]]\
      \ [[mythology]]&quot;,\n\ttopical_categories = {&quot;Mesopotamian mythology&quot;} }\n\nlabels[&quot;metadata&quot;] = {\n\ttopical_categories = {&quot;Data management&quot;} }\n\nlabels[&quot;metallurgy&quot;] = {\n\tdisplay = &quot;[[metallurgy]]&quot;,\n\
      \ttopical_categories = {&quot;Metallurgy&quot;} }\n\nlabels[&quot;metamaterial&quot;] = {\n\tdisplay = &quot;[[physics]]&quot;,\n\ttopical_categories = {&quot;Metamaterials&quot;} }\n\nlabels[&quot;metaphysics&quot;] = {\n\ttopical_categories = {&quot;Metaphysics&quot;}\
      \ }\n\nlabels[&quot;meteorology&quot;] = {\n\tdisplay = &quot;[[meteorology]]&quot;,\n\ttopical_categories = {&quot;Meteorology&quot;} }\n\nlabels[&quot;metrology&quot;] = {\n\ttopical_categories = {&quot;Metrology&quot;} }\n\nlabels[&quot;microbiology&quot;]\
      \ = {\n\ttopical_categories = {&quot;Microbiology&quot;} }\n\nlabels[&quot;microelectronics&quot;] = {\n\ttopical_categories = {&quot;Microelectronics&quot;} }\n\nlabels[&quot;microscopy&quot;] = {\n\ttopical_categories = {&quot;Microscopy&quot;} }\n\n\
      labels[&quot;military&quot;] = {\n\tdisplay = &quot;[[military]]&quot;,\n\ttopical_categories = {&quot;Military&quot;} }\n\nlabels[&quot;military ranks&quot;] = {\n\tdisplay = &quot;military&quot;,\n\ttopical_categories = {&quot;Military ranks&quot;} }\n\
      aliases[&quot;military rank&quot;] = &quot;military ranks&quot;\n\nlabels[&quot;military unit&quot;] = {\n\tdisplay = &quot;military&quot;,\n\ttopical_categories = {&quot;Military units&quot;} }\n\nlabels[&quot;mineral&quot;] = {\n\tdisplay = &quot;mineralogy&quot;,\n\
      \ttopical_categories = {&quot;Minerals&quot;} }\n\nlabels[&quot;mineralogy&quot;] = {\n\ttopical_categories = {&quot;Mineralogy&quot;} }\n\nlabels[&quot;mining&quot;] = {\n\ttopical_categories = {&quot;Mining&quot;} }\n\nlabels[&quot;mobile phones&quot;]\
      \ = {\n\tdisplay = &quot;mobile telephony&quot;,\n\ttopical_categories = {&quot;Mobile phones&quot;} }\naliases[&quot;cell phone&quot;] = &quot;mobile phones&quot;\naliases[&quot;cell phones&quot;] = &quot;mobile phones&quot;\naliases[&quot;mobile phone&quot;]\
      \ = &quot;mobile phones&quot;\naliases[&quot;mobile telephony&quot;] = &quot;mobile phones&quot;\n\nlabels[&quot;molecular biology&quot;] = {\n\ttopical_categories = {&quot;Molecular biology&quot;} }\n\nlabels[&quot;monarchy&quot;] = {\n\ttopical_categories\
      \ = {&quot;Monarchy&quot;} }\n\nlabels[&quot;money&quot;] = {\n\ttopical_categories = {&quot;Money&quot;} }\n\nlabels[&quot;Mormonism&quot;] = {\n\ttopical_categories = {&quot;Mormonism&quot;} }\n\nlabels[&quot;motorcycling&quot;] = {\n\ttopical_categories\
      \ = {&quot;Motorcycles&quot;} }\n\nlabels[&quot;motor racing&quot;] = {\n\tdisplay = &quot;[[motor racing]]&quot;,\n\ttopical_categories = {&quot;Motor racing&quot;} }\naliases[&quot;motor sport&quot;] = &quot;motor racing&quot;\n\nlabels[&quot;muscle&quot;]\
      \ = {\n\tdisplay = &quot;anatomy&quot;,\n\ttopical_categories = {&quot;Muscles&quot;} }\n\nlabels[&quot;mushroom&quot;] = {\n\tdisplay = &quot;mycology&quot;,\n\ttopical_categories = {&quot;Mushrooms&quot;} }\naliases[&quot;mushrooms&quot;] = &quot;mushroom&quot;\n\
      \nlabels[&quot;music&quot;] = {\n\tdisplay = &quot;[[music]]&quot;,\n\ttopical_categories = {&quot;Music&quot;} }\n\nlabels[&quot;musical instruments&quot;] = {\n\tdisplay = &quot;[[music]]&quot;,\n\ttopical_categories = {&quot;Musical instruments&quot;}\
      \ }\naliases[&quot;musical instrument&quot;] = &quot;musical instruments&quot;\naliases[&quot;musici&quot;] = &quot;musical instruments&quot;\ndeprecated[&quot;musici&quot;] = true\n\nlabels[&quot;music genre&quot;] = {\n\tdisplay = &quot;[[music]]&quot;,\n\
      \ttopical_categories = {&quot;Music genres&quot;} }\n\nlabels[&quot;musician&quot;] = {\n\tdisplay = &quot;[[music]]&quot;,\n\ttopical_categories = {&quot;Musicians&quot;} }\n\nlabels[&quot;mycology&quot;] = {\n\tdisplay = &quot;[[mycology]]&quot;,\n\t\
      topical_categories = {&quot;Mycology&quot;} }\n\nlabels[&quot;mythological creature&quot;] = {\n\tdisplay = &quot;[[mythology]]&quot;,\n\ttopical_categories = {&quot;Mythological creatures&quot;} }\n\nlabels[&quot;mythology&quot;] = {\n\tdisplay = &quot;[[mythology]]&quot;,\n\
      \ttopical_categories = {&quot;Mythology&quot;} }\n\nlabels[&quot;nanotechnology&quot;] = {\n\ttopical_categories = {&quot;Nanotechnology&quot;} }\n\nlabels[&quot;narratology&quot;] = {\n\ttopical_categories = {&quot;Narratology&quot;} }\n\nlabels[&quot;nautical&quot;]\
      \ = {\n\tdisplay = &quot;[[nautical]]&quot;,\n\ttopical_categories = {&quot;Nautical&quot;} }\n\nlabels[&quot;navigation&quot;] = {\n\ttopical_categories = {&quot;Navigation&quot;} }\n\nlabels[&quot;Nazism&quot;] = {\n\tdisplay = &quot;[[w:Nazism|Nazism]]&quot;,\n\
      \ttopical_categories = {&quot;Nazism&quot;} }\naliases[&quot;Nazi&quot;] = &quot;Nazism&quot;\naliases[&quot;nazi&quot;] = &quot;Nazism&quot;\naliases[&quot;nazism&quot;] = &quot;Nazism&quot;\n\nlabels[&quot;nematology&quot;] = {\n\ttopical_categories\
      \ = {&quot;Zoology&quot;} }\n\nlabels[&quot;netball&quot;] = {\n\tdisplay = &quot;[[netball]]&quot;,\n\ttopical_categories = {&quot;Netball&quot;} }\n\nlabels[&quot;networking&quot;] = {\n\ttopical_categories = {&quot;Networking&quot;} }\n\nlabels[&quot;neuroanatomy&quot;]\
      \ = {\n\ttopical_categories = {&quot;Neuroanatomy&quot;} }\n\nlabels[&quot;neurology&quot;] = {\n\tdisplay = &quot;[[neurology]]&quot;,\n\ttopical_categories = {&quot;Neurology&quot;} }\n\nlabels[&quot;neuroscience&quot;] = {\n\ttopical_categories = {&quot;Neuroscience&quot;}\
      \ }\n\nlabels[&quot;neurosurgery&quot;] = {\n\ttopical_categories = {&quot;Neurosurgery&quot;} }\n\nlabels[&quot;neurotoxin&quot;] = {\n\tdisplay = &quot;neurotoxicology&quot;,\n\ttopical_categories = {&quot;Neurotoxins&quot;} }\n\nlabels[&quot;neurotransmitter&quot;]\
      \ = {\n\tdisplay = &quot;biochemistry&quot;,\n\ttopical_categories = {&quot;Neurotransmitters&quot;} }\n\nlabels[&quot;newspapers&quot;] = {\n\ttopical_categories = {&quot;Newspapers&quot;} }\n\nlabels[&quot;Norse mythology&quot;] = {\n\tdisplay = &quot;[[Norse]]\
      \ [[mythology]]&quot;,\n\ttopical_categories = {&quot;Norse mythology&quot;} }\n\nlabels[&quot;nuclear physics&quot;] = {\n\ttopical_categories = {&quot;Nuclear physics&quot;} }\n\nlabels[&quot;number theory&quot;] = {\n\ttopical_categories = {&quot;Number\
      \ theory&quot;} }\n\nlabels[&quot;numismatics&quot;] = {\n\ttopical_categories = {&quot;Money&quot;} }\n\nlabels[&quot;nutrition&quot;] = {\n\ttopical_categories = {&quot;Nutrition&quot;} }\n\nlabels[&quot;object-oriented&quot;] = {\n\tdisplay = &quot;[[w:Object-oriented\
      \ programming|object-oriented programming]]&quot;,\n\ttopical_categories = {&quot;Object-oriented programming&quot;} }\naliases[&quot;object-oriented programming&quot;] = &quot;object-oriented&quot;\n\nlabels[&quot;occult&quot;] = {\n\ttopical_categories\
      \ = {&quot;Occult&quot;} }\n\nlabels[&quot;oceanography&quot;] = {\n\ttopical_categories = {&quot;Oceanography&quot;} }\n\nlabels[&quot;oenology&quot;] = {\n\ttopical_categories = {&quot;Wine&quot;} }\n\nlabels[&quot;oil industry&quot;] = {\n\ttopical_categories\
      \ = {&quot;Oil industry&quot;} }\naliases[&quot;oil drilling&quot;] = &quot;oil industry&quot;\n\nlabels[&quot;oncology&quot;] = {\n\tdisplay = &quot;[[oncology]]&quot;,\n\ttopical_categories = {&quot;Oncology&quot;} }\n\nlabels[&quot;online gaming&quot;]\
      \ = {\n\ttopical_categories = {&quot;Video games&quot;} }\naliases[&quot;online games&quot;] = &quot;online gaming&quot;\naliases[&quot;MMO&quot;] = &quot;online gaming&quot;\naliases[&quot;MMORPG&quot;] = &quot;online gaming&quot;\n\nlabels[&quot;opera&quot;]\
      \ = {\n\ttopical_categories = {&quot;Opera&quot;} }\n\nlabels[&quot;operating systems&quot;] = {\n\ttopical_categories = {&quot;Software&quot;} }\n\nlabels[&quot;ophthalmology&quot;] = {\n\ttopical_categories = {&quot;Ophthalmology&quot;} }\n\nlabels[&quot;optics&quot;]\
      \ = {\n\ttopical_categories = {&quot;Optics&quot;} }\n\nlabels[&quot;organic chemistry&quot;] = {\n\ttopical_categories = {&quot;Organic chemistry&quot;} }\n\nlabels[&quot;organic compound&quot;] = {\n\tdisplay = &quot;organic chemistry&quot;,\n\ttopical_categories\
      \ = {&quot;Organic compounds&quot;} }\n\nlabels[&quot;ornithology&quot;] = {\n\ttopical_categories = {&quot;Ornithology&quot;} }\n\nlabels[&quot;orthodontics&quot;] = {\n\ttopical_categories = {&quot;Dentistry&quot;} }\n\nlabels[&quot;orthography&quot;]\
      \ = {\n\ttopical_categories = {&quot;Orthography&quot;} }\n\nlabels[&quot;paganism&quot;] = {\n\ttopical_categories = {&quot;Paganism&quot;} }\naliases[&quot;pagan&quot;] = &quot;paganism&quot;\naliases[&quot;neopagan&quot;] = &quot;paganism&quot;\naliases[&quot;neopaganism&quot;]\
      \ = &quot;paganism&quot;\naliases[&quot;neo-pagan&quot;] = &quot;paganism&quot;\naliases[&quot;neo-paganism&quot;] = &quot;paganism&quot;\n\nlabels[&quot;paintball&quot;] = {\n\tdisplay = &quot;[[paintball]]&quot;,\n\ttopical_categories = {&quot;Paintball&quot;}\
      \ }\n\nlabels[&quot;painting&quot;] = {\n\ttopical_categories = {&quot;Painting&quot;} }\n\nlabels[&quot;palaeography&quot;] = {\n\tdisplay = &quot;[[paleography|palaeography]]&quot;,\n\ttopical_categories = {&quot;Palaeography&quot;} }\naliases[&quot;paleography&quot;]\
      \ = &quot;palaeography&quot;\n\nlabels[&quot;paleontology&quot;] = {\n\tdisplay = &quot;[[paleontology]]&quot;,\n\ttopical_categories = {&quot;Paleontology&quot;} }\naliases[&quot;palaeontology&quot;] = &quot;paleontology&quot;\n\nlabels[&quot;palmistry&quot;]\
      \ = {\n\ttopical_categories = {&quot;Palmistry&quot;} }\n\nlabels[&quot;palynology&quot;] = {\n\tdisplay = &quot;[[palynology]]&quot;,\n\ttopical_categories = {&quot;Palynology&quot;} }\n\nlabels[&quot;parapsychology&quot;] = {\n\ttopical_categories =\
      \ {&quot;Parapsychology&quot;} }\n\nlabels[&quot;part of speech&quot;] = {\n\tdisplay = &quot;[[grammar]]&quot;,\n\ttopical_categories = {&quot;Parts of speech&quot;} }\n\nlabels[&quot;particle&quot;] = {\n\tdisplay = &quot;physics&quot;,\n\ttopical_categories\
      \ = {&quot;Subatomic particles&quot;} }\n\nlabels[&quot;particle physics&quot;] = {\n\tdisplay = &quot;[[particle physics]]&quot;,\n\ttopical_categories = {&quot;Particle physics&quot;} }\n\nlabels[&quot;pasteurisation&quot;] = {\n\tdisplay = &quot;[[pasteurisation#English|pasteurisation]]&quot;,\n\
      \ttopical_categories = {&quot;Pasteurisation&quot;} }\n\nlabels[&quot;patent law&quot;] = {\n\tdisplay = &quot;patents&quot;,\n\ttopical_categories = {&quot;Patent law&quot;} }\naliases[&quot;patents&quot;] = &quot;patent law&quot;\n\nlabels[&quot;pathology&quot;]\
      \ = {\n\tdisplay = &quot;[[pathology]]&quot;,\n\ttopical_categories = {&quot;Pathology&quot;} }\n\nlabels[&quot;petrochemistry&quot;] = {\n\ttopical_categories = {&quot;Petrochemistry&quot;} }\n\nlabels[&quot;petrology&quot;] = {\n\tdisplay = &quot;[[petrology]]&quot;,\n\
      \ttopical_categories = {&quot;Petrology&quot;} }\n\nlabels[&quot;pharmaceutical drug&quot;] = {\n\tdisplay = &quot;[[pharmacology]]&quot;,\n\ttopical_categories = {&quot;Pharmaceutical drugs&quot;} }\n\nlabels[&quot;pharmacology&quot;] = {\n\tdisplay =\
      \ &quot;[[pharmacology]]&quot;,\n\ttopical_categories = {&quot;Pharmacology&quot;} }\n\nlabels[&quot;pharmacy&quot;] = {\n\ttopical_categories = {&quot;Pharmacy&quot;} }\n\nlabels[&quot;pharyngology&quot;] = {\n\tdisplay = &quot;[[pharyngology]]&quot;,\n\
      \ttopical_categories = {&quot;Pharyngology&quot;} }\n\nlabels[&quot;philately&quot;] = {\n\ttopical_categories = {&quot;Philately&quot;} }\n\nlabels[&quot;philosophy&quot;] = {\n\tdisplay = &quot;[[philosophy]]&quot;,\n\ttopical_categories = {&quot;Philosophy&quot;}\
      \ }\n\nlabels[&quot;phonetics&quot;] = {\n\tdisplay = &quot;[[phonetics]]&quot;,\n\ttopical_categories = {&quot;Phonetics&quot;} }\n\nlabels[&quot;phonology&quot;] = {\n\tdisplay = &quot;[[phonology]]&quot;,\n\ttopical_categories = {&quot;Phonology&quot;}\
      \ }\n\nlabels[&quot;photography&quot;] = {\n\tdisplay = &quot;[[photography]]&quot;,\n\ttopical_categories = {&quot;Photography&quot;} }\n\nlabels[&quot;phrenology&quot;] = {\n\tdisplay = &quot;[[phrenology]]&quot;,\n\ttopical_categories = {&quot;Phrenology&quot;}\
      \ }\n\nlabels[&quot;physical chemistry&quot;] = {\n\tdisplay = &quot;[[physical chemistry]]&quot;,\n\ttopical_categories = {&quot;Physical chemistry&quot;} }\n\nlabels[&quot;physics&quot;] = {\n\tdisplay = &quot;[[physics]]&quot;,\n\ttopical_categories\
      \ = {&quot;Physics&quot;} }\n\nlabels[&quot;physiology&quot;] = {\n\tdisplay = &quot;[[physiology]]&quot;,\n\ttopical_categories = {&quot;Physiology&quot;} }\n\nlabels[&quot;phytopathology&quot;] = {\n\tdisplay = &quot;[[phytopathology]]&quot;,\n\ttopical_categories\
      \ = {&quot;Phytopathology&quot;} }\n\nlabels[&quot;planetology&quot;] = {\n\tdisplay = &quot;[[planetology]]&quot;,\n\ttopical_categories = {&quot;Planetology&quot;} }\n\nlabels[&quot;plant&quot;] = {\n\tdisplay = &quot;botany&quot;,\n\ttopical_categories\
      \ = {&quot;Plants&quot;} }\n\nlabels[&quot;plant disease&quot;] = {\n\tdisplay = &quot;[[phytopathology]]&quot;,\n\ttopical_categories = {&quot;Plant diseases&quot;} }\n\nlabels[&quot;poetry&quot;] = {\n\ttopical_categories = {&quot;Poetry&quot;} }\n\n\
      labels[&quot;poison&quot;] = {\n\tdisplay = &quot;toxicology&quot;,\n\ttopical_categories = {&quot;Poisons&quot;} }\n\nlabels[&quot;poker&quot;] = {\n\tdisplay = &quot;[[poker]]&quot;,\n\ttopical_categories = {&quot;Poker&quot;} }\n\nlabels[&quot;poker\
      \ slang&quot;] = {\n\tdisplay = &quot;[[poker]] [[slang]]&quot;,\n\ttopical_categories = {&quot;Poker&quot;} }\n\nlabels[&quot;political science&quot;] = {\n\ttopical_categories = {&quot;Political science&quot;} }\n\nlabels[&quot;political subdivision&quot;]\
      \ = {\n\tdisplay = &quot;government&quot;,\n\ttopical_categories = {&quot;Political subdivisions&quot;} }\n\nlabels[&quot;politics&quot;] = {\n\ttopical_categories = {&quot;Politics&quot;} }\naliases[&quot;political&quot;] = &quot;politics&quot;\n\nlabels[&quot;polymer\
      \ science&quot;] = {\n\ttopical_categories = {&quot;Polymer science&quot;} }\n\nlabels[&quot;pornography&quot;] = {\n\ttopical_categories = {&quot;Pornography&quot;} }\n\nlabels[&quot;Portuguese folklore&quot;] = {\n\tdisplay = &quot;Portuguese [[folklore]]&quot;,\n\
      \ttopical_categories = {&quot;European folklore&quot;} }\n\nlabels[&quot;pottery&quot;] = {\n\ttopical_categories = {&quot;Ceramics&quot;} }\n\nlabels[&quot;pragmatics&quot;] = {\n\ttopical_categories = {&quot;Pragmatics&quot;} }\n\nlabels[&quot;printing&quot;]\
      \ = {\n\tdisplay = &quot;[[printing]]&quot;,\n\ttopical_categories = {&quot;Printing&quot;} }\n\nlabels[&quot;probability theory&quot;] = {\n\ttopical_categories = {&quot;Probability theory&quot;} }\n\nlabels[&quot;programming&quot;] = {\n\tdisplay = &quot;[[programming]]&quot;,\n\
      \ttopical_categories = {&quot;Programming&quot;} }\naliases[&quot;computer programming&quot;] = &quot;programming&quot;\n\nlabels[&quot;pronominal&quot;] = {\n\tdisplay = &quot;takes a [[reflexive pronoun]]&quot; }\n\nlabels[&quot;property law&quot;] =\
      \ {\n\ttopical_categories = {&quot;Property law&quot;} }\n\nlabels[&quot;prosody&quot;] = {\n\ttopical_categories = {&quot;Prosody&quot;} }\n\nlabels[&quot;protein&quot;] = {\n\tdisplay = &quot;biochemistry&quot;,\n\ttopical_categories = {&quot;Proteins&quot;}\
      \ }\naliases[&quot;proteins&quot;] = &quot;protein&quot;\n\nlabels[&quot;Protestantism&quot;] = {\n\ttopical_categories = {&quot;Protestantism&quot;} }\n\nlabels[&quot;pseudoscience&quot;] = {\n\ttopical_categories = {&quot;Pseudoscience&quot;} }\n\nlabels[&quot;psychiatry&quot;]\
      \ = {\n\ttopical_categories = {&quot;Psychiatry&quot;} }\n\nlabels[&quot;psychoanalysis&quot;] = {\n\ttopical_categories = {&quot;Psychoanalysis&quot;} }\n\nlabels[&quot;psychology&quot;] = {\n\ttopical_categories = {&quot;Psychology&quot;} }\n\nlabels[&quot;psychotherapy&quot;]\
      \ = {\n\ttopical_categories = {&quot;Psychotherapy&quot;} }\n\nlabels[&quot;publishing&quot;] = {\n\tdisplay = &quot;[[publishing]]&quot;,\n\ttopical_categories = {&quot;Publishing&quot;} }\n\nlabels[&quot;pyrotechnics&quot;] = {\n\ttopical_categories\
      \ = {&quot;Pyrotechnics&quot;} }\n\nlabels[&quot;Quakerism&quot;] = {\n\ttopical_categories = {&quot;Quakerism&quot;} }\n\nlabels[&quot;quantum mechanics&quot;] = {\n\tdisplay = &quot;[[quantum mechanics]]&quot;,\n\ttopical_categories = {&quot;Quantum\
      \ mechanics&quot;} }\naliases[&quot;quantum physics&quot;] = &quot;quantum mechanics&quot;\naliases[&quot;quantum&quot;] = &quot;quantum mechanics&quot;\ndeprecated[&quot;quantum&quot;] = true\n\nlabels[&quot;radiation&quot;] = {\n\tdisplay = &quot;[[physics]]&quot;,\n\
      \ttopical_categories = {&quot;Radiation&quot;} }\n\nlabels[&quot;radio&quot;] = {\n\tdisplay = &quot;[[radio]]&quot;,\n\ttopical_categories = {&quot;Radio&quot;} }\n\nlabels[&quot;Raëlism&quot;] = {\n\tdisplay = &quot;[[Raëlism]]&quot;,\n\ttopical_categories\
      \ = {&quot;Raëlism&quot;} }\n\nlabels[&quot;rail transport&quot;] = {\n\ttopical_categories = {&quot;Rail transportation&quot;} }\naliases[&quot;railroading&quot;] = &quot;rail transport&quot;\naliases[&quot;rail&quot;] = &quot;rail transport&quot;\n\n\
      labels[&quot;railroads&quot;] = {\n\tdisplay = &quot;rail transport&quot;,\n\ttopical_categories = {&quot;Rail transportation&quot;} }\n\nlabels[&quot;rasta&quot;] = {\n\tdisplay = &quot;Rastafarian&quot;,\n\ttopical_categories = {&quot;Rastafarian&quot;}\
      \ }\n\nlabels[&quot;real estate&quot;] = {\n\tdisplay = &quot;[[real estate]]&quot;,\n\ttopical_categories = {&quot;Real estate&quot;} }\n\nlabels[&quot;relativity&quot;] = {\n\tdisplay = &quot;physics&quot;,\n\ttopical_categories = {&quot;Relativity&quot;}\
      \ }\n\nlabels[&quot;religion&quot;] = {\n\tdisplay = &quot;[[religion]]&quot;,\n\ttopical_categories = {&quot;Religion&quot;} }\n\nlabels[&quot;rhetoric&quot;] = {\n\tdisplay = &quot;[[rhetoric]]&quot;,\n\ttopical_categories = {&quot;Rhetoric&quot;} }\n\
      \nlabels[&quot;robotics&quot;] = {\n\ttopical_categories = {&quot;Robotics&quot;} }\n\nlabels[&quot;role-playing games&quot;] = {\n\ttopical_categories = {&quot;Role-playing games&quot;} }\naliases[&quot;role playing games&quot;] = &quot;role-playing games&quot;\n\
      aliases[&quot;RPG&quot;] = &quot;role-playing games&quot;\n\nlabels[&quot;roller derby&quot;] = {\n\tdisplay = &quot;[[roller derby]]&quot;,\n\ttopical_categories = {&quot;Roller derby&quot;} }\n\nlabels[&quot;Roman Catholicism&quot;] = {\n\ttopical_categories\
      \ = {&quot;Roman Catholicism&quot;} }\n\nlabels[&quot;Roman god&quot;] = {\n\tdisplay = &quot;[[Roman]] [[mythology]]&quot;,\n\ttopical_categories = {&quot;Roman deities&quot;} }\n\nlabels[&quot;Roman mythology&quot;] = {\n\tdisplay = &quot;[[Roman]] [[mythology]]&quot;,\n\
      \ttopical_categories = {&quot;Roman mythology&quot;} }\n\nlabels[&quot;roofing&quot;] = {\n\ttopical_categories = {&quot;Roofing&quot;} }\n\nlabels[&quot;rosiculture&quot;] = {\n\tdisplay = &quot;[[rosiculture]]&quot;,\n\ttopical_categories = {&quot;Rosiculture&quot;}\
      \ }\n\nlabels[&quot;rowing&quot;] = {\n\tdisplay = &quot;[[rowing]]&quot;,\n\ttopical_categories = {&quot;Rowing&quot;} }\n\nlabels[&quot;Rubik's Cube&quot;] = {\n\tdisplay = &quot;[[Rubik's Cube]]&quot;,\n\ttopical_categories = {&quot;Rubik's Cube&quot;}\
      \ }\naliases[&quot;Rubik's cubes&quot;] = &quot;Rubik's Cube&quot;\n\nlabels[&quot;rugby&quot;] = {\n\tdisplay = &quot;[[rugby]]&quot;,\n\ttopical_categories = {&quot;Rugby&quot;} }\n\nlabels[&quot;rugby league&quot;] = {\n\ttopical_categories = {&quot;Rugby\
      \ league&quot;} }\n\nlabels[&quot;rugby union&quot;] = {\n\tdisplay = &quot;[[rugby union]]&quot;,\n\ttopical_categories = {&quot;Rugby union&quot;} }\n\nlabels[&quot;sailing&quot;] = {\n\tdisplay = &quot;[[sailing]]&quot;,\n\ttopical_categories = {&quot;Sailing&quot;}\
      \ }\n\nlabels[&quot;schools&quot;] = {\n\tdisplay = &quot;education&quot;,\n\ttopical_categories = {&quot;Schools&quot;} }\n\nlabels[&quot;science fiction&quot;] = {\n\ttopical_categories = {&quot;Science fiction&quot;} }\naliases[&quot;scifi&quot;] =\
      \ &quot;science fiction&quot;\n\nlabels[&quot;sciences&quot;] = {\n\ttopical_categories = {&quot;Sciences&quot;} }\naliases[&quot;science&quot;] = &quot;sciences&quot;\naliases[&quot;scientific&quot;] = &quot;sciences&quot;\n\nlabels[&quot;Scientology&quot;]\
      \ = {\n\tdisplay = &quot;[[Scientology]]&quot;,\n\ttopical_categories = {&quot;Scientology&quot;} }\n\nlabels[&quot;scrapbooks&quot;] = {\n\ttopical_categories = {&quot;Scrapbooks&quot;} }\n\nlabels[&quot;sculpture&quot;] = {\n\ttopical_categories = {&quot;Sculpture&quot;}\
      \ }\n\nlabels[&quot;seduction community&quot;] = {\n\tdisplay = &quot;[[w:Seduction community|seduction community]]&quot;,\n\ttopical_categories = {&quot;Seduction community&quot;} }\n\nlabels[&quot;seismology&quot;] = {\n\tdisplay = &quot;[[seismology]]&quot;,\n\
      \ttopical_categories = {&quot;Seismology&quot;} }\n\nlabels[&quot;semantics&quot;] = {\n\ttopical_categories = {&quot;Semantics&quot;} }\n\nlabels[&quot;semiotics&quot;] = {\n\ttopical_categories = {&quot;Semiotics&quot;} }\n\nlabels[&quot;set theory&quot;]\
      \ = {\n\ttopical_categories = {&quot;Set theory&quot;} }\n\nlabels[&quot;sewing&quot;] = {\n\ttopical_categories = {&quot;Sewing&quot;} }\n\nlabels[&quot;sexology&quot;] = {\n\ttopical_categories = {&quot;Sexology&quot;} }\n\nlabels[&quot;sexuality&quot;]\
      \ = {\n\tdisplay = &quot;[[sexuality]]&quot;,\n\ttopical_categories = {&quot;Sexuality&quot;} }\n\nlabels[&quot;Shinto&quot;] = {\n\tdisplay = &quot;[[Shintō]]&quot;,\n\ttopical_categories = {&quot;Shinto&quot;} }\n\nlabels[&quot;shipping&quot;] = {\n\t\
      topical_categories = {&quot;Shipping&quot;} }\n\nlabels[&quot;shogi&quot;] = {\n\tdisplay = &quot;[[shogi]]&quot;,\n\ttopical_categories = {&quot;Shogi&quot;} }\n\nlabels[&quot;signal processing&quot;] = {\n\ttopical_categories = {&quot;Signal processing&quot;}\
      \ }\n\nlabels[&quot;Sikhism&quot;] = {\n\ttopical_categories = {&quot;Sikhism&quot;} }\n\nlabels[&quot;singing&quot;] = {\n\tdisplay = &quot;[[singing]]&quot;,\n\ttopical_categories = {&quot;Singing&quot;} }\n\nlabels[&quot;skateboarding&quot;] = {\n\t\
      display = &quot;[[skateboarding]]&quot;,\n\ttopical_categories = {&quot;Skateboarding&quot;} }\n\nlabels[&quot;skating&quot;] = {\n\tdisplay = &quot;[[skating]]&quot;,\n\ttopical_categories = {&quot;Skating&quot;} }\n\nlabels[&quot;skeleton&quot;] = {\n\
      \tdisplay = &quot;anatomy&quot;,\n\ttopical_categories = {&quot;Skeleton&quot;} }\n\nlabels[&quot;skiing&quot;] = {\n\tdisplay = &quot;[[skiing]]&quot;,\n\ttopical_categories = {&quot;Skiing&quot;} }\n\nlabels[&quot;snooker&quot;] = {\n\tdisplay = &quot;[[snooker]]&quot;,\n\
      \ttopical_categories = {&quot;Snooker&quot;} }\n\nlabels[&quot;snowboarding&quot;] = {\n\tdisplay = &quot;[[snowboarding]]&quot;,\n\ttopical_categories = {&quot;Snowboarding&quot;} }\n\nlabels[&quot;soccer&quot;] = {\n\tdisplay = &quot;[[soccer]]&quot;,\n\
      \ttopical_categories = {&quot;Football (soccer)&quot;} }\naliases[&quot;football&quot;] = &quot;soccer&quot;\n\nlabels[&quot;social sciences&quot;] = {\n\ttopical_categories = {&quot;Social sciences&quot;} }\naliases[&quot;social science&quot;] = &quot;social\
      \ sciences&quot;\n\nlabels[&quot;sociolinguistics&quot;] = {\n\ttopical_categories = {&quot;Sociolinguistics&quot;} }\n\nlabels[&quot;sociology&quot;] = {\n\ttopical_categories = {&quot;Sociology&quot;} }\n\nlabels[&quot;softball&quot;] = {\n\tdisplay\
      \ = &quot;[[softball]]&quot;,\n\ttopical_categories = {&quot;Softball&quot;} }\n\nlabels[&quot;software&quot;] = {\n\ttopical_categories = {&quot;Software&quot;} }\n\nlabels[&quot;software architecture&quot;] = {\n\ttopical_categories = {&quot;Software\
      \ engineering&quot;, &quot;Programming&quot;} }\n\nlabels[&quot;software engineering&quot;] = {\n\ttopical_categories = {&quot;Software engineering&quot;} }\n\nlabels[&quot;soil science&quot;] = {\n\ttopical_categories = {&quot;Soil science&quot;} }\n\n\
      labels[&quot;sound&quot;] = {\n\tdisplay = &quot;[[sound]]&quot;,\n\ttopical_categories = {&quot;Sound&quot;} }\n\nlabels[&quot;sound engineering&quot;] = {\n\ttopical_categories = {&quot;Sound engineering&quot;} }\n\nlabels[&quot;Soviet Union&quot;] =\
      \ {\n\ttopical_categories = {&quot;Soviet Union&quot;} }\naliases[&quot;USSR&quot;] = &quot;Soviet Union&quot;\n\nlabels[&quot;space flight&quot;] = {\n\ttopical_categories = {&quot;Space&quot;} }\n\nlabels[&quot;space science&quot;] = {\n\ttopical_categories\
      \ = {&quot;Space&quot;} }\naliases[&quot;space&quot;] = &quot;space science&quot;\n\nlabels[&quot;spectroscopy&quot;] = {\n\ttopical_categories = {&quot;Spectroscopy&quot;} }\n\nlabels[&quot;spiritualism&quot;] = {\n\ttopical_categories = {&quot;Spiritualism&quot;}\
      \ }\n\nlabels[&quot;sports&quot;] = {\n\tdisplay = &quot;[[sports]]&quot;,\n\ttopical_categories = {&quot;Sports&quot;} }\naliases[&quot;sport&quot;] = &quot;sports&quot;\n\nlabels[&quot;squash&quot;] = {\n\tdisplay = &quot;[[squash|squash (sport)]]&quot;,\n\
      \ttopical_categories = {&quot;Squash&quot;} }\n\nlabels[&quot;standard of identity&quot;] = {\n\tdisplay = &quot;[[standard of identity]]&quot;,\n\ttopical_categories = {&quot;Standards of identity&quot;} }\n\nlabels[&quot;star&quot;] = {\n\tdisplay =\
      \ &quot;astronomy&quot;,\n\ttopical_categories = {&quot;Stars&quot;} }\n\nlabels[&quot;statistics&quot;] = {\n\ttopical_categories = {&quot;Statistics&quot;} }\n\nlabels[&quot;Star Wars&quot;] = {\n\ttopical_categories = {&quot;Star Wars&quot;} }\n\nlabels[&quot;steroid&quot;]\
      \ = {\n\tdisplay = &quot;[[biochemistry]]&quot;,\n\ttopical_categories = {&quot;Steroids&quot;} }\n\nlabels[&quot;steroid hormone&quot;] = {\n\tdisplay = &quot;[[biochemistry]], [[steroids]]&quot;,\n\ttopical_categories = {&quot;Hormones&quot;} }\naliases[&quot;steroid\
      \ drug&quot;] = &quot;steroid hormone&quot;\n\nlabels[&quot;stock market&quot;] = {\n\ttopical_categories = {&quot;Stock market&quot;} }\n\nlabels[&quot;stock symbol&quot;] = {\n\ttopical_categories = {&quot;Stock symbols for companies&quot;} }\n\nlabels[&quot;subculture&quot;]\
      \ = {\n\ttopical_categories = {&quot;Culture&quot;} }\n\nlabels[&quot;sumo&quot;] = {\n\tdisplay = &quot;[[sumo]]&quot;,\n\ttopical_categories = {&quot;Sumo&quot;} }\n\nlabels[&quot;surface feature&quot;] = {\n\tdisplay = &quot;planetology&quot;,\n\ttopical_categories\
      \ = {&quot;Planetary nomenclature&quot;} }\n\nlabels[&quot;surfing&quot;] = {\n\tdisplay = &quot;[[surfing]]&quot;,\n\ttopical_categories = {&quot;Surfing&quot;} }\n\nlabels[&quot;surgery&quot;] = {\n\tdisplay = &quot;[[surgery]]&quot;,\n\ttopical_categories\
      \ = {&quot;Surgery&quot;} }\n\nlabels[&quot;surveying&quot;] = {\n\ttopical_categories = {&quot;Surveying&quot;} }\n\nlabels[&quot;sushi&quot;] = {\n\ttopical_categories = {&quot;Sushi&quot;} }\n\nlabels[&quot;swimming&quot;] = {\n\tdisplay = &quot;[[swimming]]&quot;,\n\
      \ttopical_categories = {&quot;Swimming&quot;} }\n\nlabels[&quot;swords&quot;] = {\n\ttopical_categories = {&quot;Swords&quot;} }\n\nlabels[&quot;symptom&quot;] = {\n\tdisplay = &quot;medicine&quot;,\n\ttopical_categories = {&quot;Medical signs and symptoms&quot;}\
      \ }\n\nlabels[&quot;systematics&quot;] = {\n\tdisplay = &quot;[[systematics]]&quot;,\n\ttopical_categories = {&quot;Systematics&quot;} }\n\nlabels[&quot;systems engineering&quot;] = {\n\ttopical_categories = {&quot;Systems engineering&quot;} }\n\nlabels[&quot;systems\
      \ theory&quot;] = {\n\tdisplay = &quot;[[systems theory]]&quot;,\n\ttopical_categories = {&quot;Systems theory&quot;} }\n\nlabels[&quot;table tennis&quot;] = {\n\tdisplay = &quot;[[table tennis]]&quot;,\n\ttopical_categories = {&quot;Table tennis&quot;}\
      \ }\n\nlabels[&quot;tarot&quot;] = {\n\tdisplay = &quot;[[tarot]]&quot;,\n\ttopical_categories = {&quot;Divination&quot;} }\n\nlabels[&quot;taxation&quot;] = {\n\tdisplay = &quot;[[taxation]]&quot;,\n\ttopical_categories = {&quot;Law&quot;} }\naliases[&quot;tax&quot;]\
      \ = &quot;taxation&quot;\naliases[&quot;taxes&quot;] = &quot;taxation&quot;\n\nlabels[&quot;taxonomic name&quot;] = {\n\tdisplay = &quot;taxonomy&quot;,\n\ttopical_categories = {&quot;Taxonomic names&quot;} }\n\nlabels[&quot;taxonomy&quot;] = {\n\tdisplay\
      \ = &quot;[[taxonomy]]&quot;,\n\ttopical_categories = {&quot;Taxonomy&quot;} }\n\nlabels[&quot;technology&quot;] = {\n\ttopical_categories = {&quot;Technology&quot;} }\n\nlabels[&quot;telecommunications&quot;] = {\n\ttopical_categories = {&quot;Telecommunications&quot;}\
      \ }\naliases[&quot;telecommunication&quot;] = &quot;telecommunications&quot;\naliases[&quot;telecom&quot;] = &quot;telecommunications&quot;\n\nlabels[&quot;telegraphy&quot;] = {\n\ttopical_categories = {&quot;Telegraphy&quot;} }\n\nlabels[&quot;telephony&quot;]\
      \ = {\n\ttopical_categories = {&quot;Telephony&quot;} }\naliases[&quot;telephone&quot;] = &quot;telephony&quot;\naliases[&quot;telephones&quot;] = &quot;telephony&quot;\n\nlabels[&quot;television&quot;] = {\n\ttopical_categories = {&quot;Television&quot;}\
      \ }\n\nlabels[&quot;tennis&quot;] = {\n\tdisplay = &quot;[[tennis]]&quot;,\n\ttopical_categories = {&quot;Tennis&quot;} }\n\nlabels[&quot;teratology&quot;] = {\n\ttopical_categories = {&quot;Teratology&quot;} }\n\nlabels[&quot;Tetris&quot;] = {\n\tdisplay\
      \ = &quot;[[Tetris]]&quot;,\n\ttopical_categories = {&quot;Tetris&quot;} }\n\nlabels[&quot;textiles&quot;] = {\n\ttopical_categories = {&quot;Textiles&quot;} }\n\nlabels[&quot;theater&quot;] = {\n\ttopical_categories = {&quot;Theater&quot;} }\naliases[&quot;theatre&quot;]\
      \ = &quot;theater&quot;\n\nlabels[&quot;theology&quot;] = {\n\tdisplay = &quot;[[theology]]&quot;,\n\ttopical_categories = {&quot;Theology&quot;} }\n\nlabels[&quot;thermodynamics&quot;] = {\n\tdisplay = &quot;[[thermodynamics]]&quot;,\n\ttopical_categories\
      \ = {&quot;Thermodynamics&quot;} }\n\nlabels[&quot;tincture&quot;] = {\n\tdisplay = &quot;[[heraldry]]&quot;,\n\ttopical_categories = {&quot;Heraldic tincture&quot;} }\n\nlabels[&quot;topology&quot;] = {\n\tdisplay = &quot;[[topology]]&quot;,\n\ttopical_categories\
      \ = {&quot;Topology&quot;} }\n\nlabels[&quot;tourism&quot;] = {\n\ttopical_categories = {&quot;Tourism&quot;} }\n\nlabels[&quot;toxicology&quot;] = {\n\ttopical_categories = {&quot;Toxicology&quot;} }\n\nlabels[&quot;trading&quot;] = {\n\ttopical_categories\
      \ = {&quot;Trading&quot;} }\n\nlabels[&quot;trading cards&quot;] = {\n\tdisplay = &quot;[[trading card]]s&quot;,\n\ttopical_categories = {&quot;Trading cards&quot;} }\n\nlabels[&quot;transgender&quot;] = {\n\tdisplay = &quot;[[transgender]]&quot;,\n\t\
      topical_categories = {&quot;Transgender&quot;} }\n\nlabels[&quot;translation studies&quot;] = {\n\ttopical_categories = {&quot;Translation studies&quot;} }\n\nlabels[&quot;transport&quot;] = {\n\ttopical_categories = {&quot;Transport&quot;} }\naliases[&quot;transportation&quot;]\
      \ = &quot;transport&quot;\n\nlabels[&quot;travel&quot;] = {\n\ttopical_categories = {&quot;Travel&quot;} }\n\nlabels[&quot;trigonometry&quot;] = {\n\ttopical_categories = {&quot;Trigonometry&quot;} }\n\nlabels[&quot;two-up&quot;] = {\n\tdisplay = &quot;[[two-up]]&quot;,\n\
      \ttopical_categories = {&quot;Two-up&quot;} }\n\nlabels[&quot;typography&quot;] = {\n\tdisplay = &quot;[[typography]]&quot;,\n\ttopical_categories = {&quot;Typography&quot;} }\naliases[&quot;typesetting&quot;] = &quot;typography&quot;\n\nlabels[&quot;ufology&quot;]\
      \ = {\n\tdisplay = &quot;[[ufology]]&quot;,\n\ttopical_categories = {&quot;Ufology&quot;} }\n\nlabels[&quot;uranography&quot;] = {\n\tdisplay = &quot;[[astronomy]]&quot;,\n\ttopical_categories = {&quot;Uranograsphy&quot;} }\n\nlabels[&quot;vehicle&quot;]\
      \ = {\n\tdisplay = &quot;vehicles&quot;,\n\ttopical_categories = {&quot;Vehicles&quot;} }\naliases[&quot;vehicles&quot;] = &quot;vehicle&quot;\n\nlabels[&quot;veterinary medicine&quot;] = {\n\ttopical_categories = {&quot;Veterinary medicine&quot;} }\n\n\
      labels[&quot;video game genre&quot;] = {\n\tdisplay = &quot;[[video game]]s&quot;,\n\ttopical_categories = {&quot;Video game genres&quot;} }\n\nlabels[&quot;video games&quot;] = {\n\tdisplay = &quot;[[video game]]s&quot;,\n\ttopical_categories = {&quot;Video\
      \ games&quot;} }\naliases[&quot;video gaming&quot;] = &quot;video games&quot;\n\nlabels[&quot;virology&quot;] = {\n\ttopical_categories = {&quot;Virology&quot;} }\n\nlabels[&quot;vitamin&quot;] = {\n\tdisplay = &quot;biochemistry&quot;,\n\ttopical_categories\
      \ = {&quot;Vitamins&quot;} }\n\nlabels[&quot;volcanology&quot;] = {\n\ttopical_categories = {&quot;Volcanology&quot;} }\naliases[&quot;vulcanology&quot;] = &quot;volcanology&quot;\n\nlabels[&quot;volleyball&quot;] = {\n\tdisplay = &quot;[[volleyball]]&quot;,\n\
      \ttopical_categories = {&quot;Volleyball&quot;} }\n\nlabels[&quot;weaponry&quot;] = {\n\ttopical_categories = {&quot;Weapons&quot;} }\naliases[&quot;weapons&quot;] = &quot;weaponry&quot;\n\nlabels[&quot;weather&quot;] = {\n\ttopical_categories = {&quot;Weather&quot;}\
      \ }\n\nlabels[&quot;weaving&quot;] = {\n\ttopical_categories = {&quot;Weaving&quot;} }\n\nlabels[&quot;web design&quot;] = {\n\tdisplay = &quot;[[web design]]&quot;,\n\ttopical_categories = {&quot;Web design&quot;} }\n\nlabels[&quot;web development&quot;]\
      \ = {\n\tdisplay = &quot;web development&quot;,\n\ttopical_categories = {&quot;Programming&quot;, &quot;Web design&quot;} }\n\nlabels[&quot;weightlifting&quot;] = {\n\tdisplay = &quot;[[weightlifting]]&quot;,\n\ttopical_categories = {&quot;Weightlifting&quot;}\
      \ }\n\nlabels[&quot;wine&quot;] = {\n\ttopical_categories = {&quot;Wine&quot;} }\n\nlabels[&quot;woodworking&quot;] = {\n\ttopical_categories = {&quot;Woodworking&quot;} }\n\nlabels[&quot;wrestling&quot;] = {\n\tdisplay = &quot;[[wrestling]]&quot;,\n\t\
      topical_categories = {&quot;Wrestling&quot;} }\n\nlabels[&quot;writing&quot;] = {\n\ttopical_categories = {&quot;Writing&quot;} }\n\nlabels[&quot;yoga&quot;] = {\n\tdisplay = &quot;[[yoga]]&quot;,\n\ttopical_categories = {&quot;Yoga&quot;} }\n\nlabels[&quot;yoga\
      \ pose&quot;] = {\n\tdisplay = &quot;[[yoga]]&quot;,\n\ttopical_categories = {&quot;Yoga poses&quot;} }\naliases[&quot;asana&quot;] = &quot;yoga pose&quot;\n\nlabels[&quot;zodiac constellations&quot;] = {\n\tdisplay = &quot;[[astronomy]]&quot;,\n\ttopical_categories\
      \ = {&quot;Constellations in the zodiac&quot;} }\n\nlabels[&quot;zoology&quot;] = {\n\tdisplay = &quot;[[zoology]]&quot;,\n\ttopical_categories = {&quot;Zoology&quot;} }\n\nlabels[&quot;zootomy&quot;] = {\n\tdisplay = &quot;[[zootomy]]&quot;,\n\ttopical_categories\
      \ = {&quot;Zootomy&quot;} }\n\nlabels[&quot;Zoroastrianism&quot;] = {\n\ttopical_categories = {&quot;Zoroastrianism&quot;} }\n\n\n-- Usage labels\n\nlabels[&quot;ACG&quot;] = {\n\tdisplay = &quot;[[ACG]]&quot;,\n\tpos_categories = {&quot;fandom slang&quot;}\
      \ } -- see also &quot;fandom slang&quot;\n\nlabels[&quot;advertising slang&quot;] = {\n\tpos_categories = {&quot;advertising slang&quot;} }\naliases[&quot;ad slang&quot;] = &quot;advertising slang&quot;\naliases[&quot;cosmo&quot;] = &quot;advertising slang&quot;\n\
      \nlabels[&quot;affectionate&quot;] = {\n\tdisplay = &quot;[[affectionate]]&quot;,\n\tpos_categories = {&quot;affectionate terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving &quot;X terms&quot; to the term-context temp\naliases[&quot;endearing&quot;]\
      \ = &quot;affectionate&quot;\n\nlabels[&quot;archaic&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#archaic|archaic]]&quot;,\n\tsense_categories = {&quot;archaic&quot;} }\n\nlabels[&quot;Australian slang&quot;] = {\n\tregional_categories = {&quot;Australian&quot;},\n\
      \tplain_categories = {&quot;Australian slang&quot;} }\n\nlabels[&quot;avoidance&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#avoidance|avoidance term]]&quot;}\n\nlabels[&quot;Braille&quot;] = {\n\tdisplay = &quot;[[w:Braille|Braille]]&quot; }\n\n\
      labels[&quot;British slang&quot;] = {\n\tplain_categories = {&quot;British slang&quot;} }\naliases[&quot;UK slang&quot;] = &quot;British slang&quot;\n\nlabels[&quot;buzzword&quot;] = {\n\tdisplay = &quot;[[buzzword]]&quot;,\n\tpos_categories = {&quot;buzzwords&quot;}\
      \ }\n\nlabels[&quot;cant&quot;] = {\n\tdisplay = &quot;[[cant]]&quot;,\n\tpos_categories = {&quot;cant&quot;} }\n\nlabels[&quot;capitalized&quot;] = {\n\tdisplay = &quot;[[capitalized]]&quot;}\n\nlabels[&quot;childish&quot;] = {\n\tdisplay = &quot;[[childish]]&quot;,\n\
      \tpos_categories = {&quot;childish terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving &quot;X terms&quot; to the term-context temp?\naliases[&quot;baby talk&quot;] = &quot;childish&quot;\naliases[&quot;child language&quot;] = &quot;childish&quot;\n\
      \nlabels[&quot;chu Nom&quot;] = {\n\tdisplay = &quot;[[Vietnamese]] [[chữ Nôm]]&quot;,\n\tplain_categories = {&quot;Vietnamese Han tu&quot;} }\n\nlabels[&quot;Classic 1811 Dictionary of the Vulgar Tongue&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#archaic|archaic]],\
      \ [[Appendix:Glossary#slang|slang]]&quot;,\n\tplain_categories = {&quot;Classic 1811 Dictionary of the Vulgar Tongue&quot;} }\naliases[&quot;1811&quot;] = &quot;Classic 1811 Dictionary of the Vulgar Tongue&quot;\n\nlabels[&quot;Cockney rhyming slang&quot;]\
      \ = {\n\tdisplay = &quot;[[Cockney rhyming slang]]&quot;,\n\tplain_categories = {&quot;Cockney rhyming slang&quot;} }\n\nlabels[&quot;colloquial&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#colloquial|colloquial]]&quot;,\n\tpos_categories = {&quot;colloquialisms&quot;}\
      \ }\naliases[&quot;colloquially&quot;] = &quot;colloquial&quot;\n\nlabels[&quot;colloquial-um&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#colloquial|colloquial]]&quot;,\n\tpos_categories = {&quot;colloquialisms containing sequence um&quot;} }\n\n\
      labels[&quot;colloquial-un&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#colloquial|colloquial]]&quot;,\n\tpos_categories = {&quot;colloquialisms containing sequence un&quot;} }\n\nlabels[&quot;dated&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#dated|dated]]&quot;,\n\
      \tpos_categories = {&quot;dated terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving &quot;X terms&quot; to the term-context temp\n\nlabels[&quot;dated form&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#dated|dated form]]&quot;,\n\t\
      pos_categories = {&quot;dated forms&quot;} }\n\nlabels[&quot;dated sense&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#dated|dated]]&quot;,\n\tsense_categories = {&quot;dated&quot;} } -- combine with previous\n\nlabels[&quot;derogatory&quot;] = {\n\
      \tdisplay = &quot;[[derogatory]]&quot;,\n\tpos_categories = {&quot;derogatory terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving &quot;X terms&quot; to the term-context temp\n\nlabels[&quot;dialect&quot;] = {\n\tpos_categories = {&quot;dialectal\
      \ terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving &quot;X terms&quot; to the term-context temp\n\nlabels[&quot;dialectal&quot;] = {\n\tpos_categories = {&quot;dialectal terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving\
      \ &quot;X terms&quot; to the term-context temp\n\nlabels[&quot;dialects&quot;] = {\n\tpos_categories = {&quot;dialectal terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving &quot;X terms&quot; to the term-context temp\n\nlabels[&quot;dismissal&quot;]\
      \ = {\n\tdisplay = &quot;[[dismissal]]&quot;,\n\tpos_categories = {&quot;dismissals&quot;} }\n\nlabels[&quot;ethnic slur&quot;] = {\n\tdisplay = &quot;[[ethnic]] [[slur]]&quot;,\n\tpos_categories = {&quot;ethnic slurs&quot;} }\naliases[&quot;racial slur&quot;]\
      \ = &quot;ethnic slur&quot;\n\nlabels[&quot;euphemistic&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#euphemism|euphemistic]]&quot;,\n\tpos_categories = {&quot;euphemisms&quot;} }\naliases[&quot;euphemism&quot;] = &quot;euphemistic&quot;\n\nlabels[&quot;eye\
      \ dialect&quot;] = {\n\tpos_categories = {&quot;eye dialect&quot;} }\n\nlabels[&quot;familiar&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#familiar|familiar]]&quot;,\n\tpos_categories = {&quot;familiar terms&quot;} } -- should be &quot;terms with\
      \ X senses&quot;, leaving &quot;X terms&quot; to the term-context temp?\n\nlabels[&quot;fandom slang&quot;] = {\n\tpos_categories = {&quot;fandom slang&quot;} }\naliases[&quot;fandom&quot;] = &quot;fandom slang&quot;\n\nlabels[&quot;figuratively&quot;]\
      \ = {\n\tdisplay = &quot;[[Appendix:Glossary#figurative|figuratively]]&quot;}\naliases[&quot;figurative&quot;] = &quot;figuratively&quot;\naliases[&quot;metaphorically&quot;] = &quot;figuratively&quot;\naliases[&quot;metaphorical&quot;] = &quot;figuratively&quot;\n\
      aliases[&quot;metaphor&quot;] = &quot;figuratively&quot;\n\nlabels[&quot;formal&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#formal|formal]]&quot;,\n\tpos_categories = {&quot;formal terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving\
      \ &quot;X terms&quot; to the term-context temp?\n\nlabels[&quot;gay slang&quot;] = {\n\tpos_categories = {&quot;gay slang&quot;} }\n\nlabels[&quot;historical&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#historical|historical]]&quot;,\n\tsense_categories\
      \ = {&quot;historical&quot;} }\naliases[&quot;historic&quot;] = &quot;historical&quot;\naliases[&quot;history&quot;] = &quot;historical&quot;\n\n-- applies to Japanese and Korean, etc., please do not confuse with &quot;polite&quot;\nlabels[&quot;honorific&quot;]\
      \ = {\n\tpos_categories = {&quot;honorific terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving &quot;X terms&quot; to the term-context temp?\n\n-- for Ancient Greek\nlabels['Homeric epithet'] = {\n  display = &quot;[[Homeric Greek|Homeric]]\
      \ [[w:Homeric epithets|epithet]]&quot;,\n  omit_postComma = true }\n  \n-- applies to Japanese and Korean, etc.\nlabels[&quot;humble&quot;] = {\n\tpos_categories = {&quot;humble terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving &quot;X\
      \ terms&quot; to the term-context temp?\n\nlabels[&quot;humorous&quot;] = {\n\tpos_categories = {&quot;jocular terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving &quot;X terms&quot; to the term-context temp; NB and cf a similar &quot;jocular&quot;\
      \ label further up on this page\naliases[&quot;jocular&quot;] = &quot;humorous&quot;\n\nlabels[&quot;hyperbolic&quot;] = {\n\tpos_categories = {&quot;hyperboles&quot;} }\naliases[&quot;hyperbole&quot;] = &quot;hyperbolic&quot;\n\nlabels[&quot;hypercorrect&quot;]\
      \ = {\n\tdisplay = &quot;[[Appendix:Glossary#hypercorrect|hypercorrect]]&quot;,\n\tpos_categories = {&quot;hypercorrections&quot;} }\n\nlabels[&quot;hyperforeign&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#hyperforeign|hyperforeign]]&quot;,\n\tpos_categories\
      \ = {&quot;hyperforeign terms&quot;} }\n\nlabels[&quot;informal&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#informal|informal]]&quot;,\n\tpos_categories = {&quot;informal terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving &quot;X\
      \ terms&quot; to the term-context temp\naliases[&quot;informally&quot;] = &quot;informal&quot;\n\nlabels[&quot;Internet slang&quot;] = {\n\tpos_categories = {&quot;internet slang&quot;} }\naliases[&quot;internet slang&quot;] = &quot;Internet slang&quot;\n\
      \nlabels[&quot;IRC&quot;] = {\n\tdisplay = &quot;[[IRC]]&quot;,\n\tpos_categories = {&quot;internet slang&quot;} }\n\nlabels[&quot;ironic&quot;] = {}\n\nlabels[&quot;leet&quot;] = {\n\tdisplay = &quot;[[leetspeak]]&quot;,\n\tpos_categories = {&quot;leet&quot;}\
      \ }\naliases[&quot;leetspeak&quot;] = &quot;leet&quot;\n\nlabels[&quot;literary&quot;] = {\n\tpos_categories = {&quot;literary terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving &quot;X terms&quot; to the term-context temp\naliases[&quot;bookish&quot;]\
      \ = &quot;literary&quot;\n\nlabels[&quot;loosely&quot;] = {\n\tdisplay = &quot;[[loosely#Adverb|loosely]]&quot;}\n\nlabels[&quot;Lubunyaca&quot;] = {\n\tdisplay = &quot;[[Lubunyaca]]&quot;,\n\tpos_categories = {&quot;Lubunyaca&quot;} }\n\nlabels[&quot;medical\
      \ slang&quot;] = {\n\tpos_categories = {&quot;medical slang&quot;} }\n\nlabels[&quot;men's speech&quot;] = { -- for Awetí, Karajá, etc., where men and women use different words\n\tdisplay = &quot;[[Appendix:Glossary#men's speech|men's speech]]&quot;,\n\
      \tpos_categories = {&quot;men's speech terms&quot;} }\naliases[&quot;male speech&quot;] = &quot;men's speech&quot;\n\nlabels[&quot;metonymically&quot;] = {\n\tdisplay = &quot;[[metonymy|metonymically]]&quot;,\n\tpos_categories = {&quot;metonyms&quot;}\
      \ }\naliases[&quot;metonymic&quot;] = &quot;metonymically&quot;\naliases[&quot;metonymy&quot;] = &quot;metonymically&quot;\naliases[&quot;metonym&quot;] = &quot;metonymically&quot;\n\nlabels[&quot;military slang&quot;] = {\n\tpos_categories = {&quot;military\
      \ slang&quot;} }\n\nlabels[&quot;minced oath&quot;] = {\n\tdisplay = &quot;[[minced oath]]&quot;,\n\tpos_categories = {&quot;euphemisms&quot;} }\n\nlabels[&quot;neologism&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#neologism|neologism]]&quot;,\n\t\
      pos_categories = {&quot;neologisms&quot;} }\naliases[&quot;neologistic&quot;] = &quot;neologism&quot;\n\nlabels[&quot;New Julfa&quot;] = {\n\tregional_categories = {&quot;New Julfa&quot;} }\naliases[&quot;Jugha&quot;] = &quot;New Julfa&quot;\n\nlabels[&quot;no\
      \ longer productive&quot;] = {\n\tdisplay = &quot;no longer [[Appendix:Glossary#productive|productive]]&quot; }\n\nlabels[&quot;nonce word&quot;] = {\n\tpos_categories = {&quot;nonce terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving\
      \ &quot;X terms&quot; to the term-context temp?\naliases[&quot;nonce&quot;] = &quot;nonce word&quot;\n\nlabels[&quot;nonstandard&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#nonstandard|nonstandard]]&quot;,\n\tpos_categories = {&quot;nonstandard terms&quot;}\
      \ } -- should be &quot;terms with X senses&quot;, leaving &quot;X terms&quot; to the term-context temp\naliases[&quot;non-standard&quot;] = &quot;nonstandard&quot;\n\nlabels[&quot;nonstandard form&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#nonstandard|nonstandard\
      \ form]]&quot;,\n\tpos_categories = {&quot;nonstandard forms&quot;} }\n\nlabels[&quot;obsolete&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#obsolete|obsolete]]&quot;,\n\tsense_categories = {&quot;obsolete&quot;} }\n\nlabels[&quot;obsolete term&quot;]\
      \ = {\n\tdisplay = &quot;[[Appendix:Glossary#obsolete|obsolete]]&quot;,\n\tpos_categories = {&quot;obsolete terms&quot;} } -- combine with previous two, q.v.\n\nlabels[&quot;offensive&quot;] = {\n\tdisplay = &quot;[[offensive]]&quot;,\n\tpos_categories\
      \ = {&quot;offensive terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving &quot;X terms&quot; to the term-context temp\n\nlabels[&quot;pejorative&quot;] = {\n\tdisplay = &quot;[[pejorative]]&quot;,\n\tpos_categories = {&quot;pejoratives&quot;}\
      \ }\naliases[&quot;disparaging&quot;] = &quot;pejorative&quot;\n\nlabels[&quot;poetic&quot;] = {\n\tpos_categories = {&quot;poetic terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving &quot;X terms&quot; to the term-context temp\n\nlabels[&quot;Polari&quot;]\
      \ = {\n\tdisplay = &quot;[[Polari]]&quot;,\n\tpos_categories = {&quot;Polari slang&quot;} }\n\nlabels[&quot;polite&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#polite|polite]]&quot;}\n\nlabels[&quot;politically correct&quot;] = {\n\tpos_categories\
      \ = {&quot;politically correct terms&quot;} } -- should be &quot;terms with X senses&quot;, leaving &quot;X terms&quot; to term-context?\n\nlabels[&quot;post-classical&quot;] = {\n\tdisplay = &quot;post-classical&quot;,\n\tregional_categories = {&quot;Post-classical&quot;}\
      \ }\naliases[&quot;Post-classical&quot;] = &quot;post-classical&quot;\naliases[&quot;post-Classical&quot;] = &quot;post-classical&quot;\naliases[&quot;Post-Classical&quot;] = &quot;post-classical&quot;\naliases[&quot;Postclassical&quot;] = &quot;post-classical&quot;\n\
      aliases[&quot;postclassical&quot;] = &quot;post-classical&quot;\n\nlabels[&quot;proscribed&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#proscribed|proscribed]]&quot;,\n\tpos_categories = {&quot;disputed terms&quot;} }\n\nlabels[&quot;radio slang&quot;]\
      \ = {\n\tpos_categories = {&quot;radio slang&quot;} }\n\nlabels[&quot;rare&quot;] = {\n\tsense_categories = {&quot;rare&quot;} }\naliases[&quot;rare sense&quot;] = &quot;rare&quot;\n\nlabels[&quot;rare term&quot;] = {\n\tdisplay = &quot;rare&quot;,\n\t\
      pos_categories = {&quot;rare terms&quot;} } -- see comments about &quot;obsolete&quot;\n\nlabels[&quot;religious slur&quot;] = {\n\tdisplay = &quot;[[religious]] [[slur]]&quot;,\n\tpos_categories = {&quot;religious slurs&quot;} }\naliases[&quot;sectarian\
      \ slur&quot;] = &quot;religious slur&quot;\n\nlabels[&quot;retronym&quot;] = {\n\tdisplay = &quot;[[retronym]]&quot;,\n\tpos_categories = {&quot;retronyms&quot;} }\n\nlabels[&quot;rock&quot;] = {\n\tdisplay = &quot;petrology&quot;,\n\ttopical_categories\
      \ = {&quot;Rocks&quot;} }\n\nlabels[&quot;sarcastic&quot;] = {\n\tdisplay = &quot;[[sarcastic]]&quot;,\n\tpos_categories = {&quot;sarcastic terms&quot;} }\n\nlabels[&quot;slang&quot;] = {\n\tdisplay = &quot;[[Appendix:Glossary#slang|slang]]&quot;,\n\t\
      pos_categories = {&quot;slang&quot;} }\n\nlabels[&quot;text messaging&quot;] = {\n\tdisplay = &quot;[[text messaging]]&quot;,\n\tpos_categories = {&quot;text messaging slang&quot;} }\naliases[&quot;texting&quot;] = &quot;text messaging&quot;\n\nlabels[&quot;trademark&quot;]\
      \ = {\n\tdisplay = &quot;[[trademark]]&quot;,\n\tpos_categories = {&quot;trademarks&quot;} }\n\nlabels[&quot;transferred sense&quot;] = {\n\tdisplay = &quot;[[transferred sense#English|transferred sense]]&quot;,\n\tpos_categories = {&quot;terms with transferred\
      \ senses&quot;} }\n\nlabels[&quot;transferred senses&quot;] = {\n\tdisplay = &quot;[[transferred sense#English|transferred senses]]&quot;,\n\tpos_categories = {&quot;terms with transferred senses&quot;} }\n\nlabels[&quot;uds.&quot;] = {\n\tdisplay = &quot;[[Appendix:Spanish\
      \ pronouns#Ustedes and vosotros|used formally in Spain]]&quot;}\n\nlabels[&quot;uncommon&quot;] = {\n\tpos_categories = {&quot;rare forms&quot;} }\n\nlabels[&quot;very rare&quot;] = {\n\tpos_categories = {&quot;rare forms&quot;} }\n\nlabels[&quot;vulgar&quot;]\
      \ = {\n\tdisplay = &quot;[[Appendix:Glossary#vulgar|vulgar]]&quot;,\n\tpos_categories = {&quot;vulgarities&quot;} }\naliases[&quot;coarse&quot;] = &quot;vulgar&quot;\naliases[&quot;obscene&quot;] = &quot;vulgar&quot;\naliases[&quot;profane&quot;] = &quot;vulgar&quot;\n\
      \nlabels[&quot;vesre&quot;] = {\n\tplain_categories = {&quot;Vesre&quot;} }\n\nlabels[&quot;watercraft&quot;] = {\n\tdisplay = &quot;[[nautical]]&quot;,\n\ttopical_categories = {&quot;Watercraft&quot;} }\n\nlabels[&quot;Wiktionary and WMF jargon&quot;]\
      \ = {\n\tdisplay = &quot;Wiktionary and [[Appendix:Glossary#W|WMF]] jargon&quot;,\n\ttopical_categories = {&quot;Wiki&quot;} }\naliases[&quot;WMF&quot;] = &quot;Wiktionary and WMF jargon&quot;\naliases[&quot;WMF jargon&quot;] = &quot;Wiktionary and WMF\
      \ jargon&quot;\naliases[&quot;Wiktionary&quot;] = &quot;Wiktionary and WMF jargon&quot;\naliases[&quot;Wiktionary jargon&quot;] = &quot;Wiktionary and WMF jargon&quot;\n\nlabels[&quot;women's speech&quot;] = { -- for Awetí, Karajá, etc., where men &amp;\
      \ women use different words\n\tdisplay = &quot;[[Appendix:Glossary#women's speech|women's speech]]&quot;,\n\tpos_categories = {&quot;women's speech terms&quot;} }\naliases[&quot;female speech&quot;] = &quot;women's speech&quot;\n\n\nreturn {[&quot;labels&quot;]\
      \ = labels, [&quot;aliases&quot;] = aliases, [&quot;deprecated&quot;] = deprecated}</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:31.947Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Fregional&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=27538 t=1471300171740587
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1067 pass, cp3042 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 3134187400, 1952117152, 1214017182
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4952140\" pageid=\"4952140\" ns=\"828\" title=\"Module:labels/data/regional\"><revisions><rev user=\"-sche\" timestamp=\"2016-08-13T08:12:51Z\" comment=\"\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\nlocal deprecated = {}\n\n-- Generic\n\n--not sure where to put this\nlabels[&quot;classical&quot;] = {\n--\tdisplay = &quot;[[Classical &quot; .. lang:getCanonicalName()\
      \ .. &quot;]]&quot;, -- don't know how to make this work\n\tregional_categories = {&quot;Classical&quot;},\n}\n\nlabels[&quot;regional&quot;] = {\n\tregional_categories = {&quot;Regional&quot;},\n}\n\n\n-- Africa\n\nlabels[&quot;Africa&quot;] = {\n\tregional_categories\
      \ = {&quot;African&quot;},\n}\n\nlabels[&quot;Algeria&quot;] = {\n\tdisplay = &quot;Algerian&quot;,\n\tregional_categories = {&quot;Algerian&quot;},\n}\naliases[&quot;Algeria&quot;] = &quot;Algerian&quot;\n\nlabels[&quot;Cape Verde&quot;] = {\n\tregional_categories\
      \ = {&quot;Cape Verdean&quot;},\n}\n\nlabels[&quot;Congo&quot;] = {\n\tdisplay = &quot;Congo&quot;,\n\tregional_categories = {&quot;Congolese&quot;},\n}\naliases[&quot;Democratic Republic of the Congo&quot;] = &quot;Congo&quot;\naliases[&quot;Democratic\
      \ Republic of Congo&quot;] = &quot;Congo&quot;\naliases[&quot;DR Congo&quot;] = &quot;Congo&quot;\naliases[&quot;Congo-Kinshasa&quot;] = &quot;Congo&quot;\naliases[&quot;Republic of the Congo&quot;] = &quot;Congo&quot;\naliases[&quot;Republic of Congo&quot;]\
      \ = &quot;Congo&quot;\naliases[&quot;Congo-Brazzaville&quot;] = &quot;Congo&quot;\n\nlabels[&quot;East Africa&quot;] = {\n\tregional_categories = {&quot;East African&quot;},\n}\naliases[&quot;East African&quot;] = &quot;East Africa&quot;\n\nlabels[&quot;Egypt&quot;]\
      \ = {\n\tregional_categories = {&quot;Egyptian&quot;},\n}\naliases[&quot;Egyptian&quot;] = &quot;Egypt&quot;\n\nlabels[&quot;Haketia&quot;] = {\n    display = &quot;[[w:Haketia|Haketia]]&quot;,\n    plain_categories = {&quot;Haketia&quot;},\n}\naliases[&quot;Hakitia&quot;]\
      \ = &quot;Haketia&quot;\naliases[&quot;Haquitía&quot;] = &quot;Haketia&quot;\n\nlabels[&quot;Kenya&quot;] = {\n\tregional_categories = {&quot;Kenyan&quot;},\n}\naliases[&quot;Kenyan&quot;] = &quot;Kenya&quot;\n\nlabels[&quot;Morocco&quot;] = {\n\tregional_categories\
      \ = {&quot;Moroccan&quot;},\n}\n\nlabels[&quot;Namibia&quot;] = {\n\tregional_categories = {&quot;Namibian&quot;},\n}\n\nlabels[&quot;Rwanda&quot;] = {\n\tdisplay = &quot;Rwanda&quot;,\n\tregional_categories = {&quot;Rwandan&quot;},\n}\n\nlabels[&quot;Ré\
      union&quot;] = {\n\tregional_categories = {&quot;Réunion&quot;},\n}\n\nlabels[&quot;South Africa&quot;] = {\n\tdisplay = &quot;[[w:South Africa|South Africa]]&quot;,\n\tregional_categories = {&quot;South African&quot;},\n}\naliases[&quot;South African&quot;]\
      \ = &quot;South Africa&quot;\n\nlabels[&quot;Tanzania&quot;] = {\n\tregional_categories = {&quot;Tanzanian&quot;},\n}\n\nlabels[&quot;Tunisian&quot;] = {\n\tdisplay = &quot;Tunisian&quot;,\n\tregional_categories = {&quot;Tunisian&quot;} }\naliases[&quot;Tunisia&quot;]\
      \ = &quot;Tunisian&quot;\n\nlabels[&quot;Zimbabwe&quot;] = {\n\tdisplay = &quot;[[Zimbabwe]]&quot;,\n\tregional_categories = {&quot;Zimbabwe&quot;},\n}\n\n\n-- North America\n\nlabels[&quot;Acadia&quot;] = {\n\tdisplay = &quot;Acadian&quot;,\n\tregional_categories\
      \ = {&quot;Acadian&quot;},\n}\n\nlabels[&quot;Alberta&quot;] = {\n\tregional_categories = {&quot;Canadian&quot;},\n}\n\nlabels[&quot;Appalachia&quot;] = {\n\tdisplay = &quot;[[Appalachia]]&quot;,\n\tregional_categories = {&quot;Appalachian&quot;},\n}\n\
      aliases[&quot;Appalachian&quot;] = &quot;Appalachia&quot;\n\nlabels[&quot;Atlantic Canada&quot;] = {\n\tregional_categories = {&quot;Atlantic Canadian&quot;},\n}\n\nlabels[&quot;British Columbia&quot;] = {\n\tregional_categories = {&quot;Canadian&quot;},\n\
      }\n\nlabels[&quot;Cajun&quot;] = {\n\tdisplay = &quot;[[w:Cajun|Louisiana]]&quot;,\n\tregional_categories = {&quot;Louisiana&quot;},\n}\n\nlabels[&quot;Canada&quot;] = {\n\tdisplay = &quot;[[w:Canada|Canada]]&quot;,\n\tregional_categories = {&quot;Canadian&quot;},\n\
      }\naliases[&quot;Canadian&quot;] = &quot;Canada&quot;\n\nlabels[&quot;Canadian Prairies&quot;] = {\n\tregional_categories = {&quot;Canadian&quot;},\n}\n\nlabels[&quot;Georgia&quot;] = {\n\tdisplay = &quot;[[w:Georgia (U.S. state)|Georgia]]&quot;,\n\tregional_categories\
      \ = {&quot;Georgian&quot;},\n}\n\nlabels[&quot;Labrador&quot;] = {\n\tdisplay = &quot;[[Labrador]]&quot;,\n\tregional_categories = {&quot;Labrador&quot;},\n}\n\nlabels[&quot;Louisiana&quot;] = {\n\tregional_categories = {&quot;Louisiana&quot;},\n}\naliases[&quot;New\
      \ Orleans&quot;] = &quot;Louisiana&quot;\n\nlabels[&quot;Manitoba&quot;] = {\n\tregional_categories = {&quot;Canadian&quot;},\n}\n\nlabels[&quot;Maryland&quot;] = {\n\tdisplay = &quot;[[w:Maryland|Maryland]]&quot;,\n\tregional_categories = {&quot;Maryland&quot;},\n\
      }\n\nlabels[&quot;Mecayapan&quot;] = {\n\tregional_categories = {&quot;Mecayapan&quot;},\n}\n\nlabels[&quot;Mexico&quot;] = {\n\tregional_categories = {&quot;Mexican&quot;},\n}\naliases[&quot;Mexican&quot;] = &quot;Mexico&quot;\n\nlabels[&quot;Midland\
      \ US&quot;] = {\n\tdisplay = &quot;[[w:Midland American English|Midland US]]&quot;, -- for lack of a better link target\n\tregional_categories = {&quot;Midland US&quot;},\n}\naliases[&quot;North Midland US&quot;] = &quot;Midland US&quot; -- split North\
      \ and South off?\naliases[&quot;Northern Midland US&quot;] = &quot;Midland US&quot;\naliases[&quot;South Midland US&quot;] = &quot;Midland US&quot;\naliases[&quot;Southern Midland US&quot;] = &quot;Midland US&quot;\n\nlabels[&quot;Midwest US&quot;] = {\n\
      \tdisplay = &quot;[[w:Midwestern United States|Midwestern US]]&quot;,\n\tregional_categories = {&quot;Midwest US&quot;},\n}\naliases[&quot;Midwestern US&quot;] = &quot;Midwest US&quot;\n\nlabels[&quot;Missouri&quot;] = {\n\tdisplay = &quot;[[w:Missouri|Missouri]]&quot;,\n\
      \tregional_categories = {&quot;Missourian&quot;},\n}\naliases[&quot;St Louis, Missouri&quot;] = &quot;Missouri&quot;\naliases[&quot;St. Louis, Missouri&quot;] = &quot;Missouri&quot;\n\nlabels[&quot;New Brunswick&quot;] = {\n\tregional_categories = {&quot;Atlantic\
      \ Canadian&quot;},\n}\n\nlabels[&quot;New England&quot;] = {\n\tdisplay = &quot;[[w:New England|New England]]&quot;,\n\tregional_categories = {&quot;New England&quot;},\n}\n\nlabels[&quot;New Jersey&quot;] = {\n\tdisplay = &quot;[[w:New Jersey|New Jersey]]&quot;,\n\
      \tregional_categories = {&quot;New Jersey&quot;},\n}\n\nlabels[&quot;New York&quot;] = {\n\tdisplay = &quot;[[w:New York|New York]]&quot;,\n\tregional_categories = {&quot;New York&quot;},\n}\naliases[&quot;NY&quot;] = &quot;New York&quot;\naliases[&quot;New\
      \ York City&quot;] = &quot;New York&quot;\n\nlabels[&quot;Newfoundland&quot;] = {\n\tdisplay = &quot;[[Newfoundland English|Newfoundland]]&quot;,\n\tregional_categories = {&quot;Newfoundland&quot;},\n}\n\nlabels[&quot;North America&quot;] = {\n\tdisplay\
      \ = &quot;[[Canada]], [[American English|US]]&quot;,\n\tregional_categories = {&quot;Canadian&quot;, &quot;American&quot;},\n}\naliases[&quot;North American&quot;] = &quot;North America&quot;\n\nlabels[&quot;North Carolina&quot;] = {\n\tdisplay = &quot;[[w:North\
      \ Carolina|North Carolina]]&quot;,\n\tregional_categories = {&quot;North Carolinian&quot;},\n}\n\nlabels[&quot;Northwest Territories&quot;] = {\n\tregional_categories = {&quot;Canadian&quot;},\n}\n\nlabels[&quot;Northwestern US&quot;] = {\n\tdisplay =\
      \ &quot;[[w:Northwestern United States|Northwestern US]]&quot;,\n\tregional_categories = {&quot;Northwestern US&quot;},\n}\naliases[&quot;northwestern US&quot;] = &quot;Northwestern US&quot;\n\nlabels[&quot;Nova Scotia&quot;] = {\n\tregional_categories\
      \ = {&quot;Atlantic Canadian&quot;},\n}\n\nlabels[&quot;Nunavut&quot;] = {\n\tregional_categories = {&quot;Canadian&quot;},\n}\n\nlabels[&quot;Ontario&quot;] = {\n\tregional_categories = {&quot;Canadian&quot;},\n}\n\nlabels[&quot;Pennsylvania&quot;] =\
      \ {\n\tdisplay = &quot;[[w:Pennsylvania|Pennsylvania]]&quot;,\n\tregional_categories = {&quot;Pennsylvanian&quot;},\n}\n\nlabels[&quot;Pittsburgh&quot;] = {\n\tdisplay = &quot;[[w:Pittsburgh|Pittsburgh]]&quot;,\n\tregional_categories = {&quot;Pennsylvanian&quot;},\n\
      } -- can be split off if enough entries in it arise; group with PA for now\n\nlabels[&quot;Prince Edward Island&quot;] = {\n\tregional_categories = {&quot;Atlantic Canadian&quot;},\n}\n\nlabels[&quot;Quebec&quot;] = {\n\tregional_categories = {&quot;Quebec&quot;},\n\
      }\naliases[&quot;Québec&quot;] = &quot;Quebec&quot;\n\nlabels[&quot;Saskatchewan&quot;] = {\n\tregional_categories = {&quot;Canadian&quot;},\n}\n\nlabels[&quot;Southern US&quot;] = {\n\tdisplay = &quot;[[w:Southern United States|Southern US]]&quot;,\n\t\
      regional_categories = {&quot;Southern US&quot;},\n}\naliases[&quot;US South&quot;] = &quot;Southern US&quot;\naliases[&quot;southern US&quot;] = &quot;Southern US&quot;\n\nlabels[&quot;Texas&quot;] = {\n\tdisplay = &quot;[[w:Texas|Texas]]&quot;,\n\tregional_categories\
      \ = {&quot;Texan&quot;},\n}\naliases[&quot;TX&quot;] = &quot;Texas&quot;\n\nlabels[&quot;US&quot;] = {\n\tdisplay = &quot;[[w:United States|US]]&quot;,\n\tregional_categories = {&quot;American&quot;},\n}\naliases[&quot;U.S.&quot;] = &quot;US&quot;\naliases[&quot;United\
      \ States&quot;] = &quot;US&quot;\naliases[&quot;United States of America&quot;] = &quot;US&quot;\naliases[&quot;USA&quot;] = &quot;US&quot;\naliases[&quot;America&quot;] = &quot;US&quot; -- or should these be aliases of 'North America'?\naliases[&quot;American&quot;]\
      \ = &quot;US&quot;\n\nlabels[&quot;Virginia&quot;] = {\n\tdisplay = &quot;[[w:Virginia|Virginia]]&quot;,\n\tregional_categories = {&quot;Virginian&quot;},\n}\n\nlabels[&quot;Yukon&quot;] = {\n\tregional_categories = {&quot;Canadian&quot;},\n}\n\n-- Yokuts\
      \ tribal varieties\n\nlabels[&quot;Chawchila&quot;] = {\n\tregional_categories = {&quot;Chawchila&quot;},\n}\n\nlabels[&quot;Choinimni&quot;] = {\n\tregional_categories = {&quot;Choinimni&quot;},\n}\naliases[&quot;Choynimni&quot;] = &quot;Choinimni&quot;\n\
      \nlabels[&quot;Choinok&quot;] = {\n\tregional_categories = {&quot;Choinok&quot;},\n}\naliases[&quot;Choynok&quot;] = &quot;Choinok&quot;\n\n\nlabels[&quot;Chukaimina&quot;] = {\n\tregional_categories = {&quot;Chukaimina&quot;},\n}\naliases[&quot;Chukaymina&quot;]\
      \ = &quot;Chukaimina&quot;\n\nlabels[&quot;Chukchansi&quot;] = {\n\tregional_categories = {&quot;Chukchansi&quot;},\n}\n\nlabels[&quot;Chulamni&quot;] = {\n\tregional_categories = {&quot;Chulamni&quot;},\n}\naliases[&quot;Yachikumne&quot;] = &quot;Chulamni&quot;\n\
      aliases[&quot;Yachikumni&quot;] = &quot;Chulamni&quot;\n\nlabels[&quot;Dumna&quot;] = {\n\tregional_categories = {&quot;Dumna&quot;},\n}\n\nlabels[&quot;Hometwoli&quot;] = {\n\tregional_categories = {&quot;Hometwoli&quot;},\n}\n\nlabels[&quot;Kechayi&quot;]\
      \ = {\n\tregional_categories = {&quot;Kechayi&quot;},\n}\n\nlabels[&quot;Kocheyali&quot;] = {\n\tregional_categories = {&quot;Kocheyali&quot;},\n}\naliases[&quot;Ayitcha&quot;] = &quot;Kocheyali&quot;\naliases[&quot;Ayticha&quot;] = &quot;Kocheyali&quot;\n\
      \nlabels[&quot;Koyeti&quot;] = {\n\tregional_categories = {&quot;Koyeti&quot;},\n}\n\nlabels[&quot;Lakisamni&quot;] = {\n\tregional_categories = {&quot;Lakisamni&quot;},\n}\n\nlabels[&quot;Michahay&quot;] = {\n\tregional_categories = {&quot;Michahay&quot;},\n\
      }\n\nlabels[&quot;Noptinte&quot;] = {\n\tregional_categories = {&quot;Noptinte&quot;},\n}\naliases[&quot;Nopṭinṭe&quot;] = &quot;Noptinte&quot;\naliases[&quot;Nopthrinthre&quot;] = &quot;Noptinte&quot;\naliases[&quot;Nopchinchi&quot;] = &quot;Noptinte&quot;\n\
      \nlabels[&quot;Tachi&quot;] = {\n\tregional_categories = {&quot;Tachi&quot;},\n}\n\nlabels[&quot;Tawalimni&quot;] = {\n\tregional_categories = {&quot;Tawalimni&quot;},\n}\n\nlabels[&quot;Tulamni&quot;] = {\n\tregional_categories = {&quot;Tulamni&quot;},\n\
      }\naliases[&quot;Tulamne&quot;] = &quot;Tulamni&quot;\n\nlabels[&quot;Wechihit&quot;] = {\n\tregional_categories = {&quot;Wechihit&quot;},\n}\n\nlabels[&quot;Wo'lasi&quot;] = {\n\tregional_categories = {&quot;Wo'lasi&quot;},\n}\n\nlabels[&quot;Wukchumni&quot;]\
      \ = {\n\tregional_categories = {&quot;Wukchumni&quot;},\n}\naliases[&quot;Wukchamni&quot;] = &quot;Wukchumni&quot;\naliases[&quot;Wikchamni&quot;] = &quot;Wukchumni&quot;\n\nlabels[&quot;Yawdanchi&quot;] = {\n\tregional_categories = {&quot;Yawdanchi&quot;},\n\
      }\n\nlabels[&quot;Yawelmani&quot;] = {\n\tregional_categories = {&quot;Yawelmani&quot;},\n}\n\n\n-- Central America and Caribbean\n\nlabels[&quot;Barbados&quot;] = {\n\tregional_categories = {&quot;Barbadian&quot;},\n}\naliases[&quot;Barbadian&quot;] =\
      \ &quot;Barbados&quot;\n\nlabels[&quot;Belize&quot;] = {\n\tdisplay = &quot;[[w:Belize|Belize]]&quot;,\n\tregional_categories = {&quot;Belizean&quot;},\n}\naliases[&quot;Belizean&quot;] = &quot;Belize&quot;\n\nlabels[&quot;Caribbean&quot;] = {\n\tregional_categories\
      \ = {&quot;Caribbean&quot;},\n}\n\nlabels[&quot;Central America&quot;] = {\n\tregional_categories = {&quot;Central American&quot;},\n}\n\nlabels[&quot;Costa Rica&quot;] = {\n\tregional_categories = {&quot;Costa Rican&quot;},\n}\n\nlabels[&quot;Cuba&quot;]\
      \ = {\n\tregional_categories = {&quot;Cuban&quot;},\n}\n\nlabels[&quot;Dominican Republic&quot;] = {\n\tregional_categories = {&quot;Dominican&quot;},\n}\n\nlabels[&quot;El Salvador&quot;] = {\n\tregional_categories = {&quot;Salvadorian&quot;},\n}\n\n\
      labels[&quot;Guatemala&quot;] = {\n\tregional_categories = {&quot;Guatemalan&quot;},\n}\n\nlabels[&quot;Honduras&quot;] = {\n\tregional_categories = {&quot;Honduran&quot;},\n}\n\nlabels[&quot;Jamaica&quot;] = {\n\tregional_categories = {&quot;Jamaican&quot;},\n\
      }\naliases[&quot;Jamaican&quot;] = &quot;Jamaica&quot;\n\nlabels[&quot;Nicaragua&quot;] = {\n\tregional_categories = {&quot;Nicaraguan&quot;},\n}\n\nlabels[&quot;Panama&quot;] = {\n\tregional_categories = {&quot;Panamanian&quot;},\n}\n\n\n-- South America\n\
      \nlabels[&quot;Argentina&quot;] = {\n\tregional_categories = {&quot;Argentinian&quot;},\n}\n\nlabels[&quot;Bolivia&quot;] = {\n\tregional_categories = {&quot;Bolivian&quot;},\n}\n\nlabels[&quot;Brazil&quot;] = {\n\tregional_categories = {&quot;Brazilian&quot;},\n\
      }\n\nlabels[&quot;Chile&quot;] = {\n\tregional_categories = {&quot;Chilean&quot;},\n}\n\nlabels[&quot;Colombia&quot;] = {\n\tregional_categories = {&quot;Colombian&quot;},\n}\n\nlabels[&quot;Ecuador&quot;] = {\n\tregional_categories = {&quot;Ecuadorian&quot;},\n\
      }\n\nlabels[&quot;Paraguay&quot;] = {\n\tregional_categories = {&quot;Paraguayan&quot;},\n}\n\nlabels[&quot;Paraná&quot;] = {\n\tdisplay = &quot;[[w:Paraná (state)|Paraná]]&quot;,\n\tregional_categories = {&quot;Paranaense&quot;},\n}\naliases[&quot;Paranaense&quot;]\
      \ = &quot;Paraná&quot;\n\nlabels[&quot;Peru&quot;] = {\n\tregional_categories = {&quot;Peruvian&quot;},\n}\n\nlabels[&quot;Rio de Janeiro&quot;] = {\n\tdisplay = &quot;Rio de Janeiro&quot;,\n\tregional_categories = {&quot;Carioca&quot;},\n}\n\nlabels[&quot;Rio\
      \ Grande do Sul&quot;] = {\n\tregional_categories = {&quot;Gaúcho&quot;} }\n\nlabels[&quot;São Paulo&quot;] = {\n\tdisplay = &quot;São Paulo&quot;,\n\tregional_categories = {&quot;Paulista&quot;},\n}\naliases[&quot;Sao Paulo&quot;] = &quot;São Paulo&quot;\n\
      \nlabels[&quot;South Brazil&quot;] = {\n\tregional_categories = {&quot;Southern Brazilian&quot;} }\n\nlabels[&quot;Trinidad and Tobago&quot;] = {\n\tregional_categories = {&quot;Trinidad and Tobago&quot;},\n}\n\nlabels[&quot;Uruguay&quot;] = {\n\tregional_categories\
      \ = {&quot;Uruguayan&quot;},\n}\n\nlabels[&quot;Venezuela&quot;] = {\n\tregional_categories = {&quot;Venezuelan&quot;},\n}\naliases[&quot;Venezuelan&quot;] = &quot;Venezuela&quot;\n\n\n-- Asia\n\nlabels[&quot;Adana&quot;] = {\n\tdisplay = &quot;[[w:Adana|Adana]]&quot;,\n\
      \tregional_categories = {&quot;Adana&quot;},\n}\naliases[&quot;Atana&quot;] = &quot;Adana&quot;\n\nlabels[&quot;Afyonkarahisar&quot;] = {\n\tdisplay = &quot;[[w:Afyonkarahisar|Afyonkarahisar]]&quot;,\n\tregional_categories = {&quot;Afyonkarahisar&quot;},\n\
      }\naliases[&quot;Afyon&quot;] = &quot;Afyonkarahisar&quot;\n\nlabels[&quot;Ağın&quot;] = {\n\tdisplay = &quot;[[w:Ağın|Ağın]]&quot;,\t\n\tregional_categories = {&quot;Ağın&quot;},\n}\naliases[&quot;Aghin&quot;] = &quot;Ağın&quot;\naliases[&quot;Vaghaver&quot;]\
      \ = &quot;Ağın&quot;\n\nlabels[&quot;Ağrı&quot;] = {\n\tdisplay = &quot;[[w:Ağrı|Ağrı]]&quot;,\n\tregional_categories = {&quot;Ağrı&quot;},\n}\naliases[&quot;Aghri&quot;] = &quot;Ağrı&quot;\naliases[&quot;Karaköse&quot;] = &quot;Ağrı&quot;\n\nlabels[&quot;Ahlat&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Ahlat|Ahlat]]&quot;,\n\tregional_categories = {&quot;Ahlat&quot;},\n}\naliases[&quot;Khlat&quot;] = &quot;Ahlat&quot;\naliases[&quot;Xlat&quot;] = &quot;Ahlat&quot;\n\nlabels[&quot;Angkorian&quot;] = {\n\tdisplay = &quot;[[w:Khmer\
      \ language#Historical periods|Angkorian]]&quot;,\n\tregional_categories = {&quot;Angkorian&quot;},\n}\n\nlabels[&quot;Ankara&quot;] = {\n\tdisplay = &quot;[[w:Ankara|Ankara]]&quot;,\n\tregional_categories = {&quot;Ankara&quot;},\n}\n\nlabels[&quot;Antalya&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Antalya|Antalya]]&quot;,\n\tregional_categories = {&quot;Antalya&quot;},\n}\n\nlabels[&quot;Arapgir&quot;] = {\n\tdisplay = &quot;[[w:Arapgir|Arapgir]]&quot;,\n\tregional_categories = {&quot;Arapgir&quot;},\n}\naliases[&quot;Arapkir&quot;]\
      \ = &quot;Arapgir&quot;\naliases[&quot;Arabkir&quot;] = &quot;Arapgir&quot;\n\nlabels[&quot;Ardanuç&quot;] = {\n\tdisplay = &quot;[[w:Ardanuç|Ardanuç]]&quot;,\n\tregional_categories = {&quot;Ardanuç&quot;},\n}\naliases[&quot;Artanuj&quot;] = &quot;Ardanuç\
      &quot;\naliases[&quot;Ardanuji&quot;] = &quot;Ardanuç&quot;\n\nlabels[&quot;Artvin&quot;] = {\n\tdisplay = &quot;[[w:Artvin|Artvin]]&quot;,\n\tregional_categories = {&quot;Artvin&quot;},\n}\naliases[&quot;Ardvin&quot;] = &quot;Artvin&quot;\naliases[&quot;Ardvini&quot;]\
      \ = &quot;Artvin&quot;\n\nlabels[&quot;Beijing&quot;] = {\n\tdisplay = &quot;[[w:Beijing|Beijing]]&quot;,\n\tregional_categories = {&quot;Beijing&quot;},\n}\n\nlabels[&quot;Balıkesir&quot;] = {\n\tdisplay = &quot;[[w:Balıkesir|Balıkesir]]&quot;,\n\tregional_categories\
      \ = {&quot;Balıkesir&quot;},\n}\n\nlabels[&quot;Bitlis&quot;] = {\n\tdisplay = &quot;[[w:Bitlis|Bitlis]]&quot;,\n\tregional_categories = {&quot;Bitlis&quot;},\n}\naliases[&quot;Baghesh&quot;] = &quot;Bitlis&quot;\n\nlabels[&quot;hbo&quot;] = {\n    display\
      \ = &quot;[[w:Biblical Hebrew|Biblical Hebrew]]&quot;,\n    plain_categories = {&quot;Biblical Hebrew&quot;},\n}\naliases[&quot;Biblical Hebrew&quot;] = &quot;hbo&quot;\naliases[&quot;Classical Hebrew&quot;] = &quot;hbo&quot;\naliases[&quot;Ancient Hebrew&quot;]\
      \ = &quot;hbo&quot;\naliases[&quot;Old Hebrew&quot;] = &quot;hbo&quot;\n\nlabels[&quot;Brunei&quot;] = {\n\tdisplay = &quot;[[w:Brunei|Brunei]]&quot;,\n\tregional_categories = {&quot;Bruneian&quot;},\n}\n\nlabels[&quot;Burdur&quot;] = {\n\tdisplay = &quot;[[w:Burdur|Burdur]]&quot;,\n\
      \tregional_categories = {&quot;Burdur&quot;},\n}\n\nlabels[&quot;Bursa&quot;] = {\n\tdisplay = &quot;[[w:Bursa|Bursa]]&quot;,\n\tregional_categories = {&quot;Bursa&quot;},\n}\n\nlabels[&quot;Byzantine&quot;] = {\n\tdisplay = &quot;[[w:Medieval Greek|Byzantine]]&quot;,\n\
      \tplain_categories = {&quot;Byzantine Greek&quot;},\n}\naliases[&quot;Byzantine Greek&quot;] = &quot;Byzantine&quot;\naliases[&quot;Medieval Greek&quot;] = &quot;Byzantine&quot;\n\nlabels[&quot;Çanakkale&quot;] = {\n\tdisplay = &quot;[[w:Çanakkale|Çanakkale]]&quot;,\n\
      \tregional_categories = {&quot;Çanakkale&quot;},\n}\n\nlabels[&quot;Çemişgezek&quot;] = {\n\tdisplay = &quot;[[w:Çemişgezek|Çemişgezek]]&quot;,\n\tregional_categories = {&quot;Çemişgezek&quot;},\n}\naliases[&quot;Chmshkatsag&quot;] = &quot;Çemişgezek&quot;\n\
      aliases[&quot;Çemişkezek&quot;] = &quot;Çemişgezek&quot;\naliases[&quot;Čmškacag&quot;] = &quot;Çemişgezek&quot;\n\nlabels[&quot;central Vietnam&quot;] = {\n\tdisplay = &quot;[[w:Central Vietnam|Central Vietnam]]&quot;,\n\tregional_categories = {&quot;Central&quot;},\n\
      }\naliases[&quot;Central Vietnam&quot;] = &quot;Central Vietnam&quot;\n\nlabels[&quot;China&quot;] = {\n\tdisplay = &quot;[[w:China|China]]&quot;,\n\tregional_categories = {&quot;Chinese&quot;},\n}\n\nlabels[&quot;Cypriot&quot;] = {\n\tdisplay = &quot;[[w:Cyprus|Cyprus]]&quot;,\n\
      \tregional_categories = {&quot;Cypriot&quot;},\n}\naliases['cypriot'] = 'Cypriot'\n\nlabels[&quot;Delhi&quot;] = {\n\tregional_categories = {&quot;Delhi&quot;},\n}\n\nlabels[&quot;Divriği&quot;] = {\n\tdisplay = &quot;[[w:Divriği|Divriği]]&quot;,\n\tregional_categories\
      \ = {&quot;Divriği&quot;},\n}\naliases[&quot;Tevrik&quot;] = &quot;Divriği&quot;\naliases[&quot;Tewrik&quot;] = &quot;Divriği&quot;\naliases[&quot;Dewrik&quot;] = &quot;Divriği&quot;\naliases[&quot;Devrik&quot;] = &quot;Divriği&quot;\naliases[&quot;Devrike&quot;]\
      \ = &quot;Divriği&quot;\naliases[&quot;Dewrike&quot;] = &quot;Divriği&quot;\n\nlabels[&quot;Denizli&quot;] = {\n\tdisplay = &quot;[[w:Denizli|Denizli]]&quot;,\n\tregional_categories = {&quot;Denizli&quot;},\n}\n\nlabels[&quot;Diyarbakır&quot;] = {\n\t\
      display = &quot;[[w:Diyarbakır|Diyarbakır]]&quot;,\n\tregional_categories = {&quot;Diyarbakır&quot;},\n}\naliases[&quot;Diyarbakir&quot;] = &quot;Diyarbakır&quot;\naliases[&quot;Tigranakert&quot;] = &quot;Diyarbakır&quot;\n\nlabels[&quot;Elazığ&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Elazığ|Elazığ]]&quot;,\n\tregional_categories = {&quot;Elazığ&quot;},\n}\naliases[&quot;Elazig&quot;] = &quot;Elazığ&quot;\naliases[&quot;Elazigh&quot;] = &quot;Elazığ&quot;\n\nlabels[&quot;Erciş&quot;] = {\n\tdisplay = &quot;[[w:Erciş\
      |Erciş]]&quot;,\n\tregional_categories = {&quot;Erciş&quot;},\n}\naliases[&quot;Ercis&quot;] = &quot;Erciş&quot;\naliases[&quot;Archesh&quot;] = &quot;Erciş&quot;\naliases[&quot;Artchesh&quot;] = &quot;Erciş&quot;\naliases[&quot;Erdîş&quot;] = &quot;Erciş\
      &quot;\n\nlabels[&quot;Erzurum&quot;] = {\n\tdisplay = &quot;[[w:Erzurum|Erzurum]]&quot;,\n\tregional_categories = {&quot;Erzurum&quot;},\n}\naliases[&quot;Karin&quot;] = &quot;Erzurum&quot;\naliases[&quot;Erzrum&quot;] = &quot;Erzurum&quot;\n\nlabels[&quot;Eskiş\
      ehir&quot;] = {\n\tdisplay = &quot;[[w:Eskişehir|Eskişehir]]&quot;,\n\tregional_categories = {&quot;Eskişehir&quot;},\n}\n\nlabels[&quot;Fuzuli&quot;] = {\n\tdisplay = &quot;[[w:Fuzuli District|Fuzuli]]&quot;,\n\tregional_categories = {&quot;Fuzuli&quot;},\n\
      }\naliases[&quot;Füzuli&quot;] = &quot;Fuzuli&quot;\naliases[&quot;Fizuli&quot;] = &quot;Fuzuli&quot;\n\nlabels[&quot;Ganja&quot;] = {\n\tdisplay = &quot;[[w:Ganja, Azerbaijan|Ganja]]&quot;,\n\tregional_categories = {&quot;Ganja&quot;},\n}\naliases[&quot;Gandzak&quot;]\
      \ = &quot;Ganja&quot;\n\nlabels[&quot;Giresun&quot;] = {\n\tdisplay = &quot;[[w:Giresun|Giresun]]&quot;,\n\tregional_categories = {&quot;Giresun&quot;},\n}\n\nlabels[&quot;Goris&quot;] = {\n\tdisplay = &quot;[[w:Goris|Goris]]&quot;,\n\tregional_categories\
      \ = {&quot;Goris&quot;},\n}\n\nlabels[&quot;Hakkari&quot;] = {\n\tdisplay = &quot;[[w:Hakkari|Hakkari]]&quot;,\t\n\tregional_categories = {&quot;Hakkari&quot;},\n}\naliases[&quot;Hakkiari&quot;] = &quot;Hakkari&quot;\naliases[&quot;Hakari&quot;] = &quot;Hakkari&quot;\n\
      aliases[&quot;Hakiari&quot;] = &quot;Hakkari&quot;\naliases[&quot;Hakkâri&quot;] = &quot;Hakkari&quot;\n\nlabels[&quot;Hejazi&quot;] = {\n\tdisplay = &quot;[[w:Hejaz|Hejaz]]&quot;,\n\tregional_categories = {&quot;Hejazi&quot;},\n}\n\nlabels[&quot;Hemş\
      in&quot;] = {\n\tdisplay = &quot;[[w:Hemşin|Hemşin]]&quot;,\n\tregional_categories = {&quot;Hemşin&quot;},\n}\n\nlabels[&quot;Hong Kong&quot;] = {\n\tdisplay = &quot;[[w:Hong Kong|Hong Kong]]&quot;,\n\tregional_categories = {&quot;Hong Kong&quot;},\n}\n\
      \nlabels[&quot;İçel&quot;] = {\n\tdisplay = &quot;[[w:Mersin Province|İçel]]&quot;,\n\tregional_categories = {&quot;İçel&quot;},\n}\naliases[&quot;Içel&quot;] = &quot;İçel&quot;\n\nlabels[&quot;India&quot;] = {\n\tdisplay = &quot;[[w:India|India]]&quot;,\n\
      \tregional_categories = {&quot;Indian&quot;},\n}\naliases[&quot;Indian&quot;] = &quot;India&quot;\n\nlabels[&quot;Indonesia&quot;] = {\n\tdisplay = &quot;[[w:Indonesia|Indonesia]]&quot;,\n\tregional_categories = {&quot;Indonesian&quot;},\n}\n\nlabels[&quot;Iran&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Iran|Iran]]&quot;,\n\tregional_categories = {&quot;Iranian&quot;},\n}\n\nlabels[&quot;Iraqi&quot;] = {\n\tdisplay = &quot;Iraq&quot;,\n\tregional_categories = {&quot;Iraqi&quot;} }\naliases[&quot;Iraq&quot;] = &quot;Iraqi&quot;\n\
      \nlabels[&quot;Isparta&quot;] = {\n\tdisplay = &quot;[[w:Isparta|Isparta]]&quot;,\n\tregional_categories = {&quot;Isparta&quot;},\n}\n\nlabels[&quot;Israel&quot;] = {\n\tdisplay = &quot;[[w:Israel|Israel]]&quot;,\n\tregional_categories = {&quot;Israeli&quot;},\n\
      }\naliases[&quot;Israeli&quot;] = &quot;Israel&quot;\n\nlabels[&quot;İzmir&quot;] = {\n\tdisplay = &quot;[[w:İzmir|İzmir]]&quot;,\n\tregional_categories = {&quot;İzmir&quot;},\n}\naliases[&quot;Izmir&quot;] = &quot;İzmir&quot;\n\nlabels[&quot;İzmit&quot;]\
      \ = {\n\tdisplay = &quot;[[w:İzmit|İzmit]]&quot;,\n\tregional_categories = {&quot;İzmit&quot;},\n}\naliases[&quot;Izmit&quot;] = &quot;İzmit&quot;\naliases[&quot;Nicomedia&quot;] = &quot;İzmit&quot;\naliases[&quot;Nikomedia&quot;] = &quot;İzmit&quot;\n\
      \nlabels[&quot;Jakarta&quot;] = {\n\tdisplay = &quot;[[w:Jakarta|Jakarta]]&quot;,\n\tregional_categories = {&quot;Jakarta&quot;},\n}\n\nlabels[&quot;Java&quot;] = {\n\tdisplay = &quot;[[w:Java|Java]]&quot;,\n\tregional_categories = {&quot;Javanese&quot;},\n\
      }\naliases[&quot;Javanese&quot;] = &quot;Java&quot;\n\nlabels[&quot;Jordanian&quot;] = {\n\tdisplay = &quot;Jordanian&quot;,\n\tregional_categories = {&quot;Jordanian&quot;} }\naliases[&quot;Jordan&quot;] = &quot;Jordanian&quot;\n\nlabels[&quot;Kaptanpaş\
      a&quot;] = {\n\tdisplay = &quot;[[w:tr:Kaptanpaşa, Çayeli|Kaptanpaşa]]&quot;,\n\tregional_categories = {&quot;Rize&quot;},\n}\n\nlabels[&quot;Kars&quot;] = {\n\tdisplay = &quot;[[w:Kars|Kars]]&quot;,\n\tregional_categories = {&quot;Kars&quot;},\n}\naliases[&quot;Ghars&quot;]\
      \ = &quot;Kars&quot;\n\nlabels[&quot;Kathiyawadi&quot;] = {\n\tdisplay = &quot;[[w:Kathiawar|Kathiyawadi]]&quot;,\n\tregional_categories = {&quot;Kathiyawadi&quot;},\n}\naliases[&quot;Kathiawadi&quot;] = &quot;Kathiyawadi&quot;\naliases[&quot;Sorathi&quot;]\
      \ = &quot;Kathiyawadi&quot;\naliases[&quot;Bhawnagari&quot;] = &quot;Kathiyawadi&quot;\naliases[&quot;Gohilwadi&quot;] = &quot;Kathiyawadi&quot;\naliases[&quot;Holadi&quot;] = &quot;Kathiyawadi&quot;\naliases[&quot;Jhalawadi&quot;] = &quot;Kathiyawadi&quot;\n\
      \nlabels[&quot;Kayseri&quot;] = {\n\tdisplay = &quot;[[w:Kayseri|Kayseri]]&quot;,\n\tregional_categories = {&quot;Kayseri&quot;},\n}\naliases[&quot;Kesaria&quot;] = &quot;Kayseri&quot;\n\nlabels[&quot;Kazym&quot;] = {\n\tregional_categories = {&quot;Kazym&quot;},\n\
      }\n\nlabels[&quot;Kemaliye&quot;] = {\n\tdisplay = &quot;[[w:Kemaliye|Kemaliye]]&quot;,\n\tregional_categories = {&quot;Kemaliye&quot;},\n}\naliases[&quot;Akn&quot;] = &quot;Kemaliye&quot;\naliases[&quot;Agn&quot;] = &quot;Kemaliye&quot;\naliases[&quot;Egin&quot;]\
      \ = &quot;Kemaliye&quot;\naliases[&quot;Eğin&quot;] = &quot;Kemaliye&quot;\n\nlabels[&quot;Kharberd&quot;] = {\n\tdisplay = &quot;[[w:Elazığ|Kharberd]]&quot;,\n\tregional_categories = {&quot;Kharberd&quot;},\n}\naliases[&quot;Kharpert&quot;] = &quot;Kharberd&quot;\n\
      aliases[&quot;Kharput&quot;] = &quot;Kharberd&quot;\naliases[&quot;Harput&quot;] = &quot;Kharberd&quot;\n\nlabels[&quot;Khevsureti&quot;] = {\n\tdisplay = &quot;[[w:Khevsureti|Khevsureti]]&quot;,\n\tregional_categories = {&quot;Khevsureti&quot;},\n}\n\
      aliases[&quot;Khevsuria&quot;] = &quot;Khevsureti&quot;\n\nlabels[&quot;Konya&quot;] = {\n\tdisplay = &quot;[[w:Konya|Konya]]&quot;,\n\tregional_categories = {&quot;Konya&quot;},\n}\n\nlabels[&quot;Lachin&quot;] = {\n\tdisplay = &quot;[[w:Lachin District|Lachin]]&quot;,\n\
      \tregional_categories = {&quot;Lachin&quot;},\n}\naliases[&quot;Laçın&quot;] = &quot;Lachin&quot;\naliases[&quot;Laçîn&quot;] = &quot;Lachin&quot;\n\nlabels[&quot;Lebanese&quot;] = {\n\tdisplay = &quot;Lebanese&quot;,\n\tregional_categories = {&quot;Lebanese&quot;}\
      \ }\naliases[&quot;Lebanon&quot;] = &quot;Lebanese&quot;\n\nlabels[&quot;Levantine&quot;] = {\n\tdisplay = &quot;[[w:Levant|Levantine]]&quot;,\n\tregional_categories = {&quot;Levantine&quot;},\n}\naliases[&quot;Levant&quot;] = &quot;Levantine&quot;\n\n\
      labels[&quot;Lucknow&quot;] = {\n\tregional_categories = {&quot;Lucknow&quot;},\n}\n\nlabels[&quot;Malatya&quot;] = {\n\tdisplay = &quot;[[w:Malatya|Malatya]]&quot;,\n\tregional_categories = {&quot;Malatya&quot;},\n}\naliases[&quot;Malatia&quot;] = &quot;Malatya&quot;\n\
      \nlabels[&quot;Malayeri&quot;] = {\n\tdisplay = &quot;[[w:Malayer|Malayeri]]&quot;,\n\tregional_categories = {&quot;Malayeri&quot;},\n}\n\nlabels[&quot;Malaysia&quot;] = {\n\tdisplay = &quot;[[w:Malaysia|Malaysia]]&quot;,\n\tregional_categories = {&quot;Malaysian&quot;},\n\
      }\naliases[&quot;Malaysian&quot;] = &quot;Malaysia&quot;\n\nlabels[&quot;Medieval Hebrew&quot;] = {\n    display = &quot;[[w:Medieval Hebrew|Medieval Hebrew]]&quot;,\n    plain_categories = {&quot;Medieval Hebrew&quot;},\n}\n\nlabels[&quot;Mesudiye&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Mesudiye, Ordu|Mesudiye]]&quot;,\n\tregional_categories = {&quot;Mesudiye&quot;},\n}\n\nlabels[&quot;Mishnaic Hebrew&quot;] = {\n    display = &quot;[[w:Mishnaic Hebrew|Mishnaic Hebrew]]&quot;,\n    plain_categories = {&quot;Mishnaic\
      \ Hebrew&quot;},\n}\naliases[&quot;Mishnaic&quot;] = &quot;Mishnaic Hebrew&quot;\n\nlabels[&quot;Muğla&quot;] = {\n\tdisplay = &quot;[[w:Muğla|Muğla]]&quot;,\n\tregional_categories = {&quot;Muğla&quot;},\n}\n\nlabels[&quot;Mumbai&quot;] = {\n\tregional_categories\
      \ = {&quot;Mumbai&quot;},\n}\n\nlabels[&quot;Muş&quot;] = {\n\tdisplay = &quot;[[w:Muş|Muş]]&quot;,\n\tregional_categories = {&quot;Muş&quot;},\n}\naliases[&quot;Mush&quot;] = &quot;Muş&quot;\n\nlabels[&quot;Negeri Sembilan&quot;] = {\n\tdisplay = &quot;[[w:Negeri\
      \ Sembilan|Negeri Sembilan]]&quot;,\n\tregional_categories = {&quot;Negeri Sembilan&quot;},\n}\n\nlabels[&quot;Niğde&quot;] = {\n\tdisplay = &quot;[[w:Niğde|Niğde]]&quot;,\n\tregional_categories = {&quot;Niğde&quot;},\n}\naliases[&quot;Nigde&quot;] = &quot;Niğ\
      de&quot;\n\nlabels[&quot;North Korea&quot;] = {\n\tdisplay = &quot;[[w:North Korea|North Korea]]&quot;,\n\tregional_categories = {&quot;North&quot;},\n}\n\nlabels[&quot;northern Vietnam&quot;] = {\n\tdisplay = &quot;[[w:Northern Vietnam|Northern Vietnam]]&quot;,\n\
      \tregional_categories = {&quot;Northern&quot;},\n}\naliases[&quot;north Vietnam&quot;] = &quot;Northern Vietnam&quot;\naliases[&quot;North Vietnam&quot;] = &quot;Northern Vietnam&quot;\naliases[&quot;Northern Vietnam&quot;] = &quot;Northern Vietnam&quot;\n\
      \nlabels[&quot;Pahang&quot;] = {\n\tdisplay = &quot;[[w:Pahang|Pahang]]&quot;,\n\tregional_categories = {&quot;Pahang&quot;},\n}\n\nlabels[&quot;Pakistan&quot;] = {\n\tdisplay = &quot;[[w:Pakistan|Pakistan]]&quot;,\n\tregional_categories = {&quot;Pakistani&quot;},\n\
      }\n\nlabels[&quot;Palestinian&quot;] = {\n\tdisplay = &quot;Palestinian&quot;,\n\tregional_categories = {&quot;Palestinian&quot;} }\naliases[&quot;Palestine&quot;] = &quot;Palestinian&quot;\n\nlabels[&quot;Partizak&quot;] = {\n\tdisplay = &quot;[[w:Partizak|Partizak]]&quot;,\n\
      \tregional_categories = {&quot;Partizak&quot;},\n}\naliases[&quot;Bardizag&quot;] = &quot;Partizak&quot;\n\nlabels[&quot;Perak&quot;] = {\n\tdisplay = &quot;[[w:Perak|Perak]]&quot;,\n\tregional_categories = {&quot;Perak&quot;},\n}\n\nlabels[&quot;Philippines&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Philippines|Philippines]]&quot;,\n\tregional_categories = {&quot;Filipino&quot;},\n}\n\nlabels[&quot;Pre-Angkorian&quot;] = {\n\tdisplay = &quot;[[w:Khmer language#Historical periods|Pre-Angkorian]]&quot;,\n\tregional_categories\
      \ = {&quot;Pre-Angkorian&quot;},\n}\n\nlabels[&quot;Pshavi&quot;] = {\n\tdisplay = &quot;[[w:Pshavi|Pshavi]]&quot;,\n\tregional_categories = {&quot;Pshavi&quot;},\n}\n\nlabels[&quot;Pulur&quot;] = {\n\tdisplay = &quot;[[w:Ovacık, Dersim|Pulur]]&quot;,\n\
      \tregional_categories = {&quot;Pulur&quot;},\n}\n\nlabels[&quot;Qakh&quot;] = {\n\tdisplay = &quot;[[w:Qakh District|Qakh]]&quot;,\n\tregional_categories = {&quot;Qakh&quot;},\n}\naliases[&quot;Kakhi&quot;] = &quot;Qakh&quot;\naliases[&quot;Gakh&quot;]\
      \ = &quot;Qakh&quot;\naliases[&quot;Qax&quot;] = &quot;Qakh&quot;\n\nlabels[&quot;Rize&quot;] = {\n\tdisplay = &quot;[[w:Rize|Rize]]&quot;,\n\tregional_categories = {&quot;Rize&quot;},\n}\n\nlabels[&quot;Shamakhi&quot;] = {\n\tdisplay = &quot;[[w:Shamakhi|Shamakhi]]&quot;,\n\
      \tregional_categories = {&quot;Shamakhi&quot;},\n}\naliases[&quot;Şamaxı&quot;] = &quot;Shamakhi&quot;\n\nlabels[&quot;Shanghai&quot;] = {\n\tdisplay = &quot;[[w:Shanghai|Shanghai]]&quot;,\n\tregional_categories = {&quot;Shanghainese&quot;},\n}\naliases[&quot;Shanghainese&quot;]\
      \ = &quot;Shanghai&quot;\n\nlabels[&quot;Sheki&quot;] = {\n\tdisplay = &quot;[[w:Sheki, Azerbaijan|Sheki]]&quot;,\n\tregional_categories = {&quot;Sheki&quot;},\n}\naliases[&quot;Şəki&quot;] = &quot;Sheki&quot;\naliases[&quot;Shaki&quot;] = &quot;Sheki&quot;\n\
      \nlabels[&quot;Shuryshkar&quot;] = {\n\tregional_categories = {&quot;Shuryshkar&quot;},\n}\naliases[&quot;Shurishkar&quot;] = &quot;Shuryshkar&quot;\n\nlabels[&quot;Singapore&quot;] = {\n\tdisplay = &quot;[[w:Singapore|Singapore]]&quot;,\n\tregional_categories\
      \ = {&quot;Singapore&quot;},\n}\naliases[&quot;Singaporian&quot;] = &quot;Singapore&quot;\n\nlabels[&quot;Sivas&quot;] = {\n\tdisplay = &quot;[[w:Sivas|Sivas]]&quot;,\n\tregional_categories = {&quot;Sivas&quot;},\n}\naliases[&quot;Sebastia&quot;] = &quot;Sivas&quot;\n\
      aliases[&quot;Sebastea&quot;] = &quot;Sivas&quot;\n\nlabels[&quot;South Korea&quot;] = {\n\tdisplay = &quot;[[w:South Korea|South Korea]]&quot;,\n\tregional_categories = {&quot;South&quot;},\n}\n\nlabels[&quot;southern Vietnam&quot;] = {\n\tdisplay = &quot;[[w:Southern\
      \ Vietnam|Southern Vietnam]]&quot;,\n\tregional_categories = {&quot;Southern&quot;},\n}\naliases[&quot;south Vietnam&quot;] = &quot;Southern Vietnam&quot;\naliases[&quot;South Vietnam&quot;] = &quot;Southern Vietnam&quot;\naliases[&quot;Southern Vietnam&quot;]\
      \ = &quot;Southern Vietnam&quot;\n\nlabels[&quot;Surati&quot;] = {\n\tdisplay = &quot;[[w:Surat district|Surati]]&quot;,\n\tregional_categories = {&quot;Surati&quot;},\n}\n\nlabels[&quot;Surgut&quot;] = {\n\tdisplay = &quot;[[w:Surgut|Surgut]]&quot;,\n\
      \tregional_categories = {&quot;Surgut&quot;},\n}\n\nlabels[&quot;Syrian&quot;] = {\n\tdisplay = &quot;Syrian&quot;,\n\tregional_categories = {&quot;Syrian&quot;} }\naliases[&quot;Syria&quot;] = &quot;Syrian&quot;\n\nlabels[&quot;Taiwan&quot;] = {\n\tdisplay\
      \ = &quot;[[w:Taiwan|Taiwan]]&quot;,\n\tregional_categories = {&quot;Taiwanese&quot;},\n}\naliases[&quot;Taiwanese&quot;] = &quot;Taiwan&quot;\n\nlabels[&quot;Tbilisi&quot;] = {\n\tdisplay = &quot;[[w:Tbilisi|Tbilisi]]&quot;,\n\tregional_categories = {&quot;Tbilisi&quot;},\n\
      }\naliases[&quot;Tiflis&quot;] = &quot;Tbilisi&quot;\n\nlabels[&quot;Tokat&quot;] = {\n\tdisplay = &quot;[[w:Tokat|Tokat]]&quot;,\n\tregional_categories = {&quot;Tokat&quot;},\n}\naliases[&quot;Evdokia&quot;] = &quot;Tokat&quot;\n\nlabels[&quot;Trabzon&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Trabzon|Trabzon]]&quot;,\n\tregional_categories = {&quot;Trabzon&quot;},\n}\naliases[&quot;Trapizon&quot;] = &quot;Trabzon&quot;\n\nlabels[&quot;Urfa&quot;] = {\n\tdisplay = &quot;[[w:Şanlıurfa|Urfa]]&quot;,\n\tregional_categories\
      \ = {&quot;Urfa&quot;},\n}\naliases[&quot;Urha&quot;] = &quot;Urfa&quot;\naliases[&quot;Şanlıurfa&quot;] = &quot;Urfa&quot;\n\nlabels[&quot;Uşak&quot;] = {\n\tdisplay = &quot;[[w:Uşak|Uşak]]&quot;,\n\tregional_categories = {&quot;Uşak&quot;},\n}\n\nlabels[&quot;Van&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Van, Turkey|Van]]&quot;,\n\tregional_categories = {&quot;Van&quot;},\n}\n\nlabels[&quot;Yanbian&quot;] = {\n\tdisplay = &quot;[[w:Yanbian|Yanbian]]&quot;,\n\tregional_categories = {&quot;Yanbian&quot;},\n}\n\nlabels[&quot;Yerevan&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Yerevan|Yerevan]]&quot;,\n\tregional_categories = {&quot;Yerevan&quot;},\n}\n\nlabels[&quot;Zangilan&quot;] = {\n\tdisplay = &quot;[[w:Zəngilan|Zangilan]]&quot;,\n\tregional_categories = {&quot;Zangilan&quot;},\n}\naliases[&quot;Zə\
      ngilan&quot;] = &quot;Zangilan&quot;\naliases[&quot;Zangelan&quot;] = &quot;Zangilan&quot;\n\nlabels[&quot;Zanjan&quot;] = {\n\tdisplay = &quot;[[w:Zanjan, Iran|Zanjan]]&quot;,\n\tregional_categories = {&quot;Zanjan&quot;},\n}\naliases[&quot;Zәncan&quot;]\
      \ = &quot;Zanjan&quot;\naliases[&quot;Zәngan&quot;] = &quot;Zanjan&quot;\n\nlabels[&quot;Zaqatala&quot;] = {\n\tdisplay = &quot;[[w:Zaqatala District|Zaqatala]]&quot;,\n\tregional_categories = {&quot;Zaqatala&quot;},\n}\naliases[&quot;Zakatala&quot;] =\
      \ &quot;Zaqatala&quot;\naliases[&quot;Zagatala&quot;] = &quot;Zaqatala&quot;\n\n\n-- Europe\n\nlabels[&quot;Aachen&quot;] = {\n\tdisplay = &quot;[[w:Aachen dialect|Aachen]]&quot;,\n\tregional_categories = {&quot;Aachen&quot;},\n}\n\nlabels[&quot;Alghero&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Alghero|Alghero]]&quot;,\n\tregional_categories = {&quot;Algherese&quot;},\n}\n\nlabels[&quot;Alsatian&quot;] = {\n\tdisplay = &quot;[[w:Alsatian dialect|Alsatian]]&quot;,\n\tregional_categories = {&quot;Alsatian&quot;},\n\
      }\naliases[&quot;Alsace&quot;] = &quot;Alsatian&quot;\naliases[&quot;Alsacien&quot;] = &quot;Alsatian&quot;\naliases[&quot;Alsatian German&quot;] = &quot;Alsatian&quot;\naliases[&quot;Elsässisch&quot;] = &quot;Alsatian&quot;\n\nlabels[&quot;Antrim&quot;]\
      \ = {\n\tdisplay = &quot;[[w:County Antrim|Antrim]]&quot;,\n\tregional_categories = {&quot;Ulster&quot;},\n}\n\nlabels[&quot;Aran&quot;] = {\n\tdisplay = &quot;[[w:Aran Islands|Aran]]&quot;,\n\tregional_categories = {&quot;Connacht&quot;},\n}\n\nlabels[&quot;Arvanitika&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Arvanitika|Arvanitika]]&quot;,\n\tregional_categories = {&quot;Arvanitika&quot;},\n}\n\nlabels[&quot;Austria&quot;] = {\n\tdisplay = &quot;[[w:Austria|Austria]]&quot;,\n\tregional_categories = {&quot;Austrian&quot;},\n}\naliases[&quot;Austrian&quot;]\
      \ = &quot;Austria&quot;\n\nlabels[&quot;Auvergne&quot;] = {\n\tdisplay = &quot;[[w:Auvergnat dialect|Auvergne]]&quot;,\n\tregional_categories = {&quot;Auvergnese&quot;},\n}\nlabels[&quot;Bedfordshire&quot;] = {\n\tdisplay = &quot;[[w:Bedfordshire|Bedfordshire]]&quot;,\n\
      \tregional_categories = {&quot;Bedfordshire&quot;},\n}\naliases[&quot;Bedfordshire dialect&quot;] = &quot;Bedfordshire&quot;\n\nlabels[&quot;Balearics&quot;] = {\n\tdisplay = &quot;[[w:Balearic Islands|Balearics]]&quot;,\n\tregional_categories = {&quot;Balearic&quot;},\n\
      }\n\nlabels[&quot;Banat&quot;] = {\n\tdisplay = &quot;[[w:Banat|Banat]]&quot;,\n\tregional_categories = {&quot;Banat&quot;},\n}\n\nlabels[&quot;Belgium&quot;] = {\n\tdisplay = &quot;[[w:Belgium|Belgium]]&quot;,\n\tregional_categories = {&quot;Belgian&quot;},\n\
      }\naliases[&quot;Belgian&quot;] = &quot;Belgium&quot;\n\naliases[&quot;Bologna&quot;] = &quot;Bolognese&quot;\nlabels[&quot;Bolognese&quot;] = {\n\tdisplay = &quot;[[Bolognese]]&quot;,\n\tregional_categories = {&quot;Bolognese&quot;},\n}\n\nlabels[&quot;Bosnia&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Bosnia|Bosnia]]&quot;,\n\tregional_categories = {&quot;Bosnian&quot;},\n}\naliases[&quot;Bosnian&quot;] = &quot;Bosnia&quot;\n\nlabels[&quot;Brabant&quot;] = {\n\tdisplay = &quot;[[w:Brabant|Brabant]]&quot;,\n\tregional_categories\
      \ = {&quot;Brabantian&quot;},\n}\n\nlabels[&quot;Bristol&quot;] = {\n\tdisplay = &quot;[[w:Bristol|Bristol]]&quot;,\n\tregional_categories = {&quot;Bristolian&quot;},\n}\naliases[&quot;Bristolian&quot;] = &quot;Bristol&quot;\n\nlabels[&quot;Britain&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Britain|Britain]]&quot;,\n\tregional_categories = {&quot;British&quot;},\n}\naliases[&quot;Brit&quot;] = &quot;Britain&quot;\naliases[&quot;British&quot;] = &quot;Britain&quot;\naliases[&quot;Great Britain&quot;] = &quot;Britain&quot;\n\
      aliases[&quot;UK&quot;] = &quot;Britain&quot;\naliases[&quot;United Kingdom&quot;] = &quot;Britain&quot;\n\nlabels[&quot;Bukovina&quot;] = {\n\tdisplay = &quot;[[w:Bukovina|Bukovina]]&quot;,\n\tregional_categories = {&quot;Bukovinian&quot;},\n}\naliases[&quot;Bucovina&quot;]\
      \ = &quot;Bukovina&quot;\naliases[&quot;Bukovinian&quot;] = &quot;Bukovina&quot;\n\naliases[&quot;Carpi&quot;] = &quot;Carpigiano&quot;\nlabels[&quot;Carpigiano&quot;] = {\n\tdisplay = &quot;[[w:Carpi, Emilia-Romagna|Carpigiano]]&quot;,\n\tregional_categories\
      \ = {&quot;Carpigiano&quot;},\n}\n\nlabels[&quot;Central Germany&quot;] = {\n\tdisplay = &quot;central Germany&quot;,\n\tregional_categories = {&quot;Central German&quot;},\n}\naliases[&quot;Central German&quot;] = &quot;Central Germany&quot;\naliases[&quot;central\
      \ Germany&quot;] = &quot;Central Germany&quot;\naliases[&quot;central German&quot;] = &quot;Central Germany&quot;\n\nlabels[&quot;Channel Islands&quot;] = {\n\tdisplay = &quot;[[w:Channel Islands|Channel Islands]]&quot;,\n\tregional_categories = {&quot;Channel\
      \ Islands&quot;},\n}\n\nlabels[&quot;Connacht&quot;] = {\n\tdisplay = &quot;[[w:Connacht|Connacht]]&quot;,\n\tregional_categories = {&quot;Connacht&quot;},\n}\n\nlabels[&quot;Connemara&quot;] = {\n\tdisplay = &quot;[[w:Connemara|Connemara]]&quot;,\n\t\
      regional_categories = {&quot;Connacht&quot;},\n}\n\nlabels[&quot;Cornwall&quot;] = {\n\tdisplay = &quot;[[w:Cornwall|Cornwall]]&quot;,\n\tregional_categories = {&quot;Cornish&quot;},\n}\naliases[&quot;Cornish&quot;] = &quot;Cornwall&quot;\naliases[&quot;Cornish\
      \ dialect&quot;] = &quot;Cornwall&quot;\n\nlabels[&quot;Crimea&quot;] = {\n\tdisplay = &quot;[[w:Crimea|Crimea]]&quot;,\n\tregional_categories = {&quot;Crimean&quot;},\n}\naliases[&quot;Crimean&quot;] = &quot;Crimea&quot;\n\nlabels[&quot;Croatia&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Croatia|Croatia]]&quot;,\n\tregional_categories = {&quot;Croatian&quot;},\n}\naliases[&quot;Croatian&quot;] = &quot;Croatia&quot;\n\nlabels[&quot;Cumbria&quot;] = {\n\tdisplay = &quot;[[w:Cumbria|Cumbria]]&quot;,\n\tregional_categories\
      \ = {&quot;Cumbrian&quot;},\n}\naliases[&quot;Cumbrian&quot;] = &quot;Cumbria&quot;\n\nlabels[&quot;DDR&quot;] = {\n\tdisplay = &quot;[[w:German Democratic Republic|East Germany]]&quot;,\n\tregional_categories = {&quot;DDR&quot;},\n}\naliases[&quot;GDR&quot;]\
      \ = &quot;DDR&quot;\naliases[&quot;East German&quot;] = &quot;DDR&quot;\naliases[&quot;East Germany&quot;] = &quot;DDR&quot;\n\nlabels[&quot;Derbyshire&quot;] = {\n\tdisplay = &quot;[[w:Derbyshire|Derbyshire]]&quot;,\n\tregional_categories = {&quot;Derbyshire&quot;},\n\
      }\naliases[&quot;Derbyshire dialect&quot;] = &quot;Derbyshire&quot;\n\nlabels[&quot;Devon&quot;] = {\n\tdisplay = &quot;[[w:Devon|Devon]]&quot;,\n\tregional_categories = {&quot;Devonian&quot;},\n}\naliases[&quot;Devonian&quot;] = &quot;Devon&quot;\naliases[&quot;Devonian\
      \ dialect&quot;] = &quot;Devon&quot;\naliases[&quot;Devonshire&quot;] = &quot;Devon&quot;\naliases[&quot;Devonshire dialect&quot;] = &quot;Devon&quot;\n\nlabels[&quot;Dobruja&quot;] = {\n\tdisplay = &quot;[[w:Dobruja|Dobruja]]&quot;,\n\tregional_categories\
      \ = {&quot;Dobrujan&quot;},\n}\naliases[&quot;Dobrogea&quot;] = &quot;Dobruja&quot;\naliases[&quot;Dobrujan&quot;] = &quot;Dobruja&quot;\n\nlabels[&quot;Dublin&quot;] = {\n\tdisplay = &quot;[[w:Dublin|Dublin]]&quot;,\n\tregional_categories = {&quot;Dublin&quot;},\n\
      }\n\nlabels[&quot;East Anglia&quot;] = {\n\tdisplay = &quot;[[w:East Anglia|East Anglia]]&quot;,\n\tregional_categories = {&quot;East Anglian&quot;},\n}\naliases[&quot;East Anglian&quot;] = &quot;East Anglia&quot;\naliases[&quot;East Anglian dialect&quot;]\
      \ = &quot;East Anglia&quot;\n\nlabels[&quot;East Midlands&quot;] = {\n\tdisplay = &quot;[[w:East Midlands|East Midlands]]&quot;,\n\tregional_categories = {&quot;East Midlands&quot;},\n}\naliases[&quot;East Midlands dialect&quot;] = &quot;East Midlands&quot;\n\
      \nlabels[&quot;East Palatine&quot;] = {\n\tdisplay = &quot;[[w:Palatine German language|Vorderpfälzisch]]&quot;,\n\tregional_categories = {&quot;East Palatine&quot;},\n}\naliases[&quot;Vorderpfälzisch&quot;] = &quot;East Palatine&quot;\n\nlabels[&quot;Edirne&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Edirne|Edirne]]&quot;,\n\tregional_categories = {&quot;Edirne&quot;},\n}\naliases[&quot;Adrianople&quot;] = &quot;Edirne&quot;\naliases[&quot;Odrin&quot;] = &quot;Edirne&quot;\n\nlabels[&quot;England&quot;] = {\n\tdisplay =\
      \ &quot;[[w:England|England]]&quot;,\n\tregional_categories = {&quot;English&quot;},\n}\n\nlabels[&quot;Essex&quot;] = {\n\tdisplay = &quot;[[w:Essex|Essex]]&quot;,\n\tregional_categories = {&quot;Essex&quot;},\n}\naliases[&quot;Essex dialect&quot;] =\
      \ &quot;Essex&quot;\n\nlabels[&quot;Europe&quot;] = {\n\tdisplay = &quot;[[w:Europe|Europe]]&quot;,\n\tregional_categories = {&quot;European&quot;},\n}\n\nlabels[&quot;Finland&quot;] = {\n\tdisplay = &quot;[[w:Finland|Finland]]&quot;,\n\tregional_categories\
      \ = {&quot;Finland&quot;},\n}\naliases[&quot;Finnish&quot;] = &quot;Finland&quot;\n\nlabels[&quot;France&quot;] = {\n\tdisplay = &quot;[[w:France|France]]&quot;,\n\tregional_categories = {&quot;French&quot;},\n}\n\nlabels[&quot;Föhr-Amrum&quot;] = {\n\t\
      display = &quot;[[w:Föhr-Amrum|Föhr-Amrum]]&quot;,\n\tregional_categories = {&quot;Föhr-Amrum&quot;},\n}\naliases[&quot;Föhr-Amrum dialect&quot;] = &quot;Föhr-Amrum&quot;\naliases[&quot;Feer&quot;] = &quot;Föhr-Amrum&quot;\naliases[&quot;Fering&quot;]\
      \ = &quot;Föhr-Amrum&quot;\naliases[&quot;Oomram&quot;] = &quot;Föhr-Amrum&quot;\naliases[&quot;Öömrang&quot;] = &quot;Föhr-Amrum&quot;\n\nlabels[&quot;Galway&quot;] = {\n\tdisplay = &quot;[[w:County Galway|Galway]]&quot;,\n\tregional_categories = {&quot;Connacht&quot;},\n\
      }\n\nlabels[&quot;Gascony&quot;] = {\n\tdisplay = &quot;[[w:Gascony|Gascony]]&quot;,\n\tregional_categories = {&quot;Gascon&quot;},\n}\n\nlabels[&quot;Germany&quot;] = {\n\tregional_categories = {&quot;German&quot;},\n}\naliases[&quot;German&quot;] = &quot;Germany&quot;\
      \ -- comment this alias out if it causes problems\n\nlabels[&quot;Guernsey&quot;] = {\n\tdisplay = &quot;[[w:Guernsey|Guernsey]]&quot;,\n\tregional_categories = {&quot;Guernsey&quot;},\n}\n\nlabels[&quot;The Hague&quot;] = {\n\tdisplay = &quot;[[w:The\
      \ Hague|The Hague]]&quot;,\n\tregional_categories = {&quot;Hague&quot;},\n}\naliases[&quot;Hague&quot;] = &quot;The Hague&quot;\naliases[&quot;Den Haag&quot;] = &quot;The Hague&quot;\n\nlabels[&quot;Hartlepool&quot;] = {\n\tdisplay = &quot;[[w:Hartlepool|Hartlepool]]&quot;,\n\
      \tregional_categories = {&quot;Teesside&quot;},\n}\n\nlabels[&quot;Heligoland&quot;] = {\n\tdisplay = &quot;[[w:Heligoland|Heligoland]]&quot;,\n\tregional_categories = {&quot;Heligolandic&quot;},\n}\naliases[&quot;Heligoland dialect&quot;] = &quot;Heligoland&quot;\n\
      aliases[&quot;Halunder&quot;] = &quot;Heligoland&quot;\naliases[&quot;Heligolandic&quot;] = &quot;Heligoland&quot;\naliases[&quot;Helgoland&quot;] = &quot;Heligoland&quot;\naliases[&quot;Helgoland dialect&quot;] = &quot;Heligoland&quot;\n\nlabels[&quot;Herefordshire&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Herefordshire|Herefordshire]]&quot;,\n\tregional_categories = {&quot;Herefordshire&quot;},\n}\naliases[&quot;Herefordshire dialect&quot;] = &quot;Herefordshire&quot;\n\nlabels[&quot;Hessian&quot;] = {\n\tdisplay = &quot;[[w:Hessian\
      \ dialects|Hessian]]&quot;,\n\tregional_categories = {&quot;Hessian&quot;},\n}\naliases[&quot;Hesse&quot;] = &quot;Hessian&quot;\naliases[&quot;Hessen&quot;] = &quot;Hessian&quot;\naliases[&quot;Hessisch&quot;] = &quot;Hessian&quot;\n\nlabels[&quot;Holland&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Holland|Holland]]&quot;,\n\tregional_categories = {&quot;Hollandic&quot;},\n}\naliases[&quot;Hollandic&quot;] = &quot;Holland&quot;\n\nlabels[&quot;Ireland&quot;] = {\n\tdisplay = &quot;[[w:Ireland|Ireland]]&quot;,\n\tregional_categories\
      \ = {&quot;Irish&quot;},\n}\naliases[&quot;Irish&quot;] = &quot;Ireland&quot;\n\nlabels[&quot;Isle of Man&quot;] = {\n\tdisplay = &quot;[[w:Isle of Man|Isle of Man]]&quot;,\n\tregional_categories = {&quot;Manx&quot;},\n}\naliases[&quot;Manx&quot;] = &quot;Isle\
      \ of Man&quot;\naliases[&quot;Isle of Mann&quot;] = &quot;Isle of Man&quot;\n\nlabels[&quot;Istanbul&quot;] = {\n\tdisplay = &quot;[[w:Istanbul|Istanbul]]&quot;,\n\tregional_categories = {&quot;Istanbul&quot;},\n}\naliases[&quot;İstanbul&quot;] = &quot;Istanbul&quot;\n\
      aliases[&quot;Polis&quot;] = &quot;Istanbul&quot;\n\nlabels[&quot;Jersey&quot;] = {\n\tdisplay = &quot;[[w:Jersey|Jersey]]&quot;,\n\tregional_categories = {&quot;Jersey&quot;},\n}\n\nlabels[&quot;Kazan&quot;] = {\n\tdisplay = &quot;[[w:Kazan|Kazan]]&quot;,\n\
      \tregional_categories = {&quot;Kazan&quot;},\n}\n\nlabels[&quot;Kent&quot;] = {\n\tdisplay = &quot;[[w:Kent|Kent]]&quot;,\n\tregional_categories = {&quot;Kentish&quot;},\n}\naliases[&quot;Kentish&quot;] = &quot;Kent&quot;\naliases[&quot;Kentish dialect&quot;]\
      \ = &quot;Kent&quot;\naliases[&quot;Kent dialect&quot;] = &quot;Kent&quot;\n\nlabels[&quot;Kerry&quot;] = {\n\tdisplay = &quot;[[w:County Kerry|Kerry]]&quot;,\n\tregional_categories = {&quot;Munster&quot;},\n}\n\nlabels[&quot;Kırklareli&quot;] = {\n\t\
      display = &quot;[[w:Kırklareli|Kırklareli]]&quot;,\n\tregional_categories = {&quot;Kırklareli&quot;},\n}\naliases[&quot;Kirklareli&quot;] = &quot;Kırklareli&quot;\n\nlabels[&quot;Kölsch&quot;] = {\n\tdisplay = &quot;[[w:Colognian language|Kölsch]]&quot;,\n\
      \tregional_categories = {&quot;Kölsch&quot;},\n}\naliases[&quot;Colognian&quot;] = &quot;Kölsch&quot;\naliases[&quot;Cologne&quot;] = &quot;Kölsch&quot;\naliases[&quot;Köln&quot;] = &quot;Kölsch&quot;\n\nlabels[&quot;Kukkuzi&quot;] = {\n\tdisplay = &quot;[[w:Kukkuzi|Kukkuzi]]&quot;,\n\
      \tregional_categories = {&quot;Kukkuzi&quot;},\n}\n\nlabels[&quot;Lancashire&quot;] = {\n\tdisplay = &quot;[[w:Lancashire|Lancashire]]&quot;,\n\tregional_categories = {&quot;Lancashire&quot;},\n}\n\nlabels[&quot;Languedoc&quot;] = {\n\tdisplay = &quot;[[w:Languedoc|Languedoc]]&quot;,\n\
      \tregional_categories = {&quot;Languedocian&quot;},\n}\n\nlabels[&quot;Liechtenstein&quot;] = {\n\tdisplay = &quot;[[w:Liechenstein|Liechtenstein]]&quot;,\n\tregional_categories = {&quot;Liechtenstein&quot;},\n}\n\nlabels[&quot;Limousin&quot;] = {\n\t\
      display = &quot;[[w:Limousin|Limousin]]&quot;,\n\tregional_categories = {&quot;Limousin&quot;},\n}\n\nlabels[&quot;Lincolnshire&quot;] = {\n\tdisplay = &quot;[[w:Lincolnshire|Lincolnshire]]&quot;,\n\tregional_categories = {&quot;Lincolnshire&quot;},\n\
      }\n\nlabels[&quot;Liverpool&quot;] = {\n\tdisplay = &quot;[[w:Liverpool|Liverpudlian]]&quot;,\n\tregional_categories = {&quot;Liverpudlian&quot;},\n}\n\nlabels[&quot;London&quot;] = {\n\tdisplay = &quot;[[w:London|London]]&quot;,\n\tregional_categories\
      \ = {&quot;London&quot;},\n}\n\nlabels[&quot;Lorraine Franconian&quot;] = {\n\tdisplay = &quot;[[w:Lorraine Franconian|Lorraine Franconian]]&quot;,\n\tregional_categories = {&quot;Lorraine&quot;},\n}\naliases[&quot;Lorraine&quot;] = &quot;Lorraine Franconian&quot;\n\
      aliases[&quot;Lorrainian&quot;] = &quot;Lorraine Franconian&quot;\naliases[&quot;Lothringian&quot;] = &quot;Lorraine Franconian&quot;\naliases[&quot;Lothringisch&quot;] = &quot;Lorraine Franconian&quot;\n\nlabels[&quot;Luxembourg&quot;] = {\n\tdisplay\
      \ = &quot;[[w:Luxembourg|Luxembourg]]&quot;,\n\tregional_categories = {&quot;Luxembourgish&quot;},\n}\naliases[&quot;Luxembourgish&quot;] = &quot;Luxembourg&quot;\naliases[&quot;Luxemburg&quot;] = &quot;Luxembourg&quot;\naliases[&quot;Luxemburgish&quot;]\
      \ = &quot;Luxembourg&quot;\n\nlabels[&quot;Lviv&quot;] = {\n\tdisplay = &quot;[[w:Lviv|Lviv]]&quot;,\n\tregional_categories = {&quot;Lviv&quot;},\n}\naliases[&quot;Lvov&quot;] = &quot;Lviv&quot;\n\nlabels[&quot;Maastrichtian&quot;] = {\n\tdisplay = &quot;[[w:Maastrichtian\
      \ dialect|Maastrichtian]]&quot;,\n\tplain_categories = {&quot;Maastrichtian Limburgish&quot;},\n}\n\nlabels[&quot;Mallorca&quot;] = {\n\tdisplay = &quot;[[w:Mallorca|Mallorca]]&quot;,\n\tregional_categories = {&quot;Mallorcan&quot;},\n}\n\naliases[&quot;Mantua&quot;]\
      \ = &quot;Mantovano&quot;\nlabels[&quot;Mantovano&quot;] = {\n\tdisplay = &quot;[[w:Mantua|Mantovano]]&quot;,\n\tregional_categories = {&quot;Mantovano&quot;},\n}\n\nlabels[&quot;Maramureș&quot;] = {\n\tdisplay = &quot;[[w:Maramureș|Maramureș]]&quot;,\n\
      \tregional_categories = {&quot;Maramureș&quot;},\n}\naliases[&quot;Maramures&quot;] = &quot;Maramureș&quot;\n\nlabels[&quot;Marseille&quot;] = {\n\tdisplay = &quot;[[w:Marseille|Marseille]]&quot;,\n\tregional_categories = {&quot;Marseille&quot;},\n}\n\n\
      labels[&quot;Midlands&quot;] = {\n\tdisplay = &quot;[[w:The Midlands|Midlands]]&quot;,\n\tregional_categories = {&quot;Midlands&quot;},\n}\naliases[&quot;Midlands dialect&quot;] = &quot;Midlands&quot;\naliases[&quot;South Midlands&quot;] = &quot;Midlands&quot;\
      \ -- OK as alias? or a subvariety worth distinguishing?\n\naliases[&quot;Mirandola&quot;] = &quot;Mirandolese&quot;\nlabels[&quot;Mirandolese&quot;] = {\n\tdisplay = &quot;[[w:Mirandola|Mirandolese]]&quot;,\n\tregional_categories = {&quot;Mirandolese&quot;},\n\
      }\n\naliases[&quot;Modena&quot;] = &quot;Modenese&quot;\nlabels[&quot;Modenese&quot;] = {\n\tdisplay = &quot;[[w:Modena|Modenese]]&quot;,\n\tregional_categories = {&quot;Modenese&quot;},\n}\n\nlabels[&quot;Moldavia&quot;] = {\n\tdisplay = &quot;[[w:Moldavia|Moldavia]]&quot;,\n\
      \tregional_categories = {&quot;Moldavian&quot;},\n}\naliases[&quot;Moldavian&quot;] = &quot;Moldavia&quot;\naliases[&quot;Moldova&quot;] = &quot;Moldavia&quot;\naliases[&quot;Moldovan&quot;] = &quot;Moldavia&quot;\n\n\nlabels[&quot;Montenegro&quot;] =\
      \ {\n\tdisplay = &quot;[[w:Montenegro|Montenegro]]&quot;,\n\tregional_categories = {&quot;Montenegrin&quot;},\n}\naliases[&quot;Montenegrin&quot;] = &quot;Montenegro&quot;\n\nlabels[&quot;Moscow&quot;] = {\n\tdisplay = &quot;[[w:Moscow|Moscow]]&quot;,\n\
      \tregional_categories = {&quot;Moscow&quot;},\n}\n\nlabels[&quot;Moselle Franconian&quot;] = {\n\tdisplay = &quot;[[w:Moselle Franconian dialects|Moselle Franconian]]&quot;,\n\tregional_categories = {&quot;Moselle&quot;},\n}\naliases[&quot;Moselfränkisch&quot;]\
      \ = &quot;Moselle Franconian&quot;\n\nlabels[&quot;Munster&quot;] = {\n\tdisplay = &quot;[[w:Munster|Munster]]&quot;,\n\tregional_categories = {&quot;Munster&quot;},\n}\n\nlabels[&quot;Muntenia&quot;] = {\n\tdisplay = &quot;[[w:Muntenia|Muntenia]]&quot;,\n\
      \tregional_categories = {&quot;Muntenian&quot;},\n}\naliases[&quot;Muntenian&quot;] = &quot;Muntenia&quot;\n\nlabels[&quot;Netherlands&quot;] = {\n\tdisplay = &quot;[[w:Netherlands|Netherlands]]&quot;,\n\tregional_categories = {&quot;Netherlands&quot;},\n\
      }\n\nlabels[&quot;Norfolk&quot;] = {\n\tdisplay = &quot;[[w:Norfolk|Norfolk]]&quot;,\n\tregional_categories = {&quot;Norfolk&quot;},\n}\n\nlabels[&quot;North Wales&quot;] = {\n\tdisplay = &quot;[[w:North Wales|North Wales]]&quot;,\n\tregional_categories\
      \ = {&quot;North Wales&quot;},\n}\n\nlabels[&quot;Northern and Central Germany&quot;] = {\n\tdisplay = &quot;[[w:Northern Germany|northern]] and central Germany&quot;,\n\tregional_categories = {&quot;Northern&quot;, &quot;Central&quot;},\n}\naliases[&quot;northern\
      \ and central Germany&quot;] = &quot;Northern and Central Germany&quot;\naliases[&quot;Northern and Central German&quot;] = &quot;Northern and Central Germany&quot;\naliases[&quot;northern and central German&quot;] = &quot;Northern and Central Germany&quot;\n\
      aliases[&quot;North and Central Germany&quot;] = &quot;Northern and Central Germany&quot;\naliases[&quot;north and central Germany&quot;] = &quot;Northern and Central Germany&quot;\naliases[&quot;North and Central German&quot;] = &quot;Northern and Central\
      \ Germany&quot;\naliases[&quot;north and central German&quot;] = &quot;Northern and Central Germany&quot;\n\nlabels[&quot;Northern Crimea&quot;] = {\n\tdisplay = &quot;Northern [[w:Crimea|Crimea]]&quot;,\n\tregional_categories = {&quot;Northern&quot;},\n\
      }\n\nlabels[&quot;Northern England&quot;] = {\n\tdisplay = &quot;[[w:Northern England|Northern England]]&quot;,\n\tregional_categories = {&quot;Northern England&quot;},\n}\naliases[&quot;northern England&quot;] = &quot;Northern England&quot;\naliases[&quot;North\
      \ England&quot;] = &quot;Northern England&quot;\naliases[&quot;north England&quot;] = &quot;Northern England&quot;\n\nlabels[&quot;Northern Germany&quot;] = {\n\tdisplay = &quot;[[w:Northern Germany|Northern Germany]]&quot;,\n\tregional_categories = {&quot;Northern&quot;},\n\
      }\naliases[&quot;northern Germany&quot;] = &quot;Northern Germany&quot;\naliases[&quot;Northern German&quot;] = &quot;Northern Germany&quot;\naliases[&quot;northern German&quot;] = &quot;Northern Germany&quot;\naliases[&quot;North Germany&quot;] = &quot;Northern\
      \ Germany&quot;\naliases[&quot;north Germany&quot;] = &quot;Northern Germany&quot;\naliases[&quot;North German&quot;] = &quot;Northern Germany&quot;\naliases[&quot;north German&quot;] = &quot;Northern Germany&quot;\n\nlabels[&quot;Northern Ireland&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Northern Ireland|Northern Ireland]]&quot;,\n\tregional_categories = {&quot;Ulster&quot;},\n}\naliases[&quot;Northern Irish&quot;] = &quot;Northern Ireland&quot;\n\nlabels[&quot;Northumbria&quot;] = {\n\tdisplay = &quot;[[w:Northumbria|Northumbria]]&quot;,\n\
      \tregional_categories = {&quot;Northumbrian&quot;},\n}\naliases[&quot;Northumbrian&quot;] = &quot;Northumbria&quot;\naliases[&quot;Northeast England&quot;] = &quot;Northumbria&quot;\n\nlabels[&quot;Nottinghamshire&quot;] = {\n\tdisplay = &quot;[[w:Nottinghamshire|Nottinghamshire]]&quot;,\n\
      \tregional_categories = {&quot;Nottinghamshire&quot;},\n}\naliases[&quot;Nottinghamshire dialect&quot;] = &quot;Nottinghamshire&quot;\n\nlabels[&quot;Oltenia&quot;] = {\n\tdisplay = &quot;[[w:Oltenia|Oltenia]]&quot;,\n\tregional_categories = {&quot;Oltenian&quot;},\n\
      }\naliases[&quot;Oltenian&quot;] = &quot;Oltenia&quot;\n\nlabels[&quot;Orenburg&quot;] = {\n\tdisplay = &quot;[[w:Orenburg|Orenburg]]&quot;,\n\tregional_categories = {&quot;Orenburg&quot;},\n}\n\nlabels[&quot;Palatine German&quot;] = {\n\tdisplay = &quot;[[w:Palatine\
      \ German language|Palatine]]&quot;,\n\tregional_categories = {&quot;Palatine&quot;},\n}\naliases[&quot;Palatinate German&quot;] = &quot;Palatine German&quot;\naliases[&quot;Palatinate&quot;] = &quot;Palatine German&quot;\naliases[&quot;Palatine&quot;]\
      \ = &quot;Palatine German&quot; -- remove if other languages have 'palatine' varieties\naliases[&quot;Pälzisch&quot;] = &quot;Palatine German&quot;\naliases[&quot;Pfälzisch&quot;] = &quot;Palatine German&quot;\n\naliases[&quot;Parma&quot;] = &quot;Parmigiano&quot;\n\
      labels[&quot;Parmigiano&quot;] = {\n\tdisplay = &quot;[[w:Parma|Parmigiano]]&quot;,\n\tregional_categories = {&quot;Parmigiano&quot;},\n}\n\naliases[&quot;Piacenza&quot;] = &quot;Piacentino&quot;\nlabels[&quot;Piacentino&quot;] = {\n\tdisplay = &quot;[[w:Piacenza|Piacentino]]&quot;,\n\
      \tregional_categories = {&quot;Piacentino&quot;},\n}\n\nlabels[&quot;Picardy&quot;] = {\n\tdisplay = &quot;[[w:Picardy|Picardy]]&quot;,\n\tregional_categories = {&quot;Picard&quot;},\n}\n\nlabels[&quot;Portugal&quot;] = {\n\tdisplay = &quot;[[w:Portugal|Portugal]]&quot;,\n\
      \tregional_categories = {&quot;Portuguese&quot;},\n}\n\nlabels[&quot;Provence&quot;] = {\n\tdisplay = &quot;[[w:Provence|Provence]]&quot;,\n\tregional_categories = {&quot;Provençal&quot;},\n}\n\nlabels[&quot;Prussia&quot;] = {\n\tdisplay = &quot;[[w:Prussia\
      \ (region)|Prussia]]&quot;,\n\tregional_categories = {&quot;Prussian&quot;},\n}\naliases[&quot;Prussian&quot;] = &quot;Prussia&quot;\naliases[&quot;East Prussia&quot;] = &quot;Prussia&quot; -- aliased for now; if many entries use it, it can be separated\n\
      aliases[&quot;East Prussian&quot;] = &quot;Prussia&quot;\naliases[&quot;West Prussia&quot;] = &quot;Prussia&quot;\naliases[&quot;West Prussian&quot;] = &quot;Prussia&quot;\n\nlabels[&quot;Pskov&quot;] = {\n\tdisplay = &quot;[[w:Pskov|Pskov]]&quot;,\n\t\
      regional_categories = {&quot;Pskov&quot;},\n}\n\naliases[&quot;Reggio Emilia&quot;] = &quot;Reggiano&quot;\nlabels[&quot;Reggiano&quot;] = {\n\tdisplay = &quot;[[w:Reggio Emilia|Reggiano]]&quot;,\n\tregional_categories = {&quot;Reggiano&quot;},\n}\n\n\
      labels[&quot;Ripuarian&quot;] = {\n\tdisplay = &quot;[[w:Ripuarian language|Ripuarian]]&quot;,\n\tregional_categories = {&quot;Ripuarian&quot;},\n}\naliases[&quot;Ripuarian Franconian&quot;] = &quot;Ripuarian&quot;\naliases[&quot;Ripuarisch&quot;] = &quot;Ripuarian&quot;\n\
      \nlabels[&quot;Saint Ouen&quot;] = {\n\tdisplay = &quot;[[w:Saint Ouen, Jersey|Saint Ouën]]&quot;,\n\tregional_categories = {&quot;Saint Ouënnais&quot;},\n}\n\nlabels[&quot;Saint Petersburg&quot;] = {\n\tdisplay = &quot;[[w:Saint Petersburg|Saint Petersburg]]&quot;,\n\
      \tregional_categories = {&quot;Saint Petersburg&quot;},\n}\naliases[&quot;St Petersburg&quot;] = &quot;Saint Petersburg&quot;\naliases[&quot;St. Petersburg&quot;] = &quot;Saint Petersburg&quot;\n\nlabels[&quot;Sark&quot;] = {\n\tdisplay = &quot;[[w:Sercquiais|Sark]]&quot;,\n\
      \tregional_categories = {&quot;Sarkese&quot;},\n}\n\nlabels[&quot;Scania&quot;] = {\n\tdisplay = &quot;[[w:Scania|Scania]]&quot;,\n\tregional_categories = {&quot;Scanian&quot;},\n}\naliases[&quot;Skanian&quot;] = &quot;Scania&quot;\naliases[&quot;Skåne&quot;]\
      \ = &quot;Scania&quot;\n\nlabels[&quot;Scotland&quot;] = {\n\tdisplay = &quot;[[w:Scotland|Scotland]]&quot;,\n\tregional_categories = {&quot;Scottish&quot;},\n}\naliases[&quot;Scottish&quot;] = &quot;Scotland&quot;\n\nlabels[&quot;Serbia&quot;] = {\n\t\
      display = &quot;[[w:Serbia|Serbia]]&quot;,\n\tregional_categories = {&quot;Serbian&quot;},\n}\naliases[&quot;Serbian&quot;] = &quot;Serbia&quot;\n\nlabels[&quot;Somerset&quot;] = {\n\tdisplay = &quot;[[w:Somerset|Somerset]]&quot;,\n\tregional_categories\
      \ = {&quot;Somerset&quot;},\n}\naliases[&quot;Somerset dialect&quot;] = &quot;Somerset&quot;\n\nlabels[&quot;South Hessian&quot;] = {\n\tdisplay = &quot;South Hessian&quot;,\n\tregional_categories = {&quot;South Hessian&quot;},\n}\naliases[&quot;South\
      \ Hesse&quot;] = &quot;South Hessian&quot;\naliases[&quot;south Hesse&quot;] = &quot;South Hessian&quot;\naliases[&quot;South Hessen&quot;] = &quot;South Hessian&quot;\naliases[&quot;south Hessen&quot;] = &quot;South Hessian&quot;\naliases[&quot;south\
      \ Hessian&quot;] = &quot;South Hessian&quot;\naliases[&quot;Südhessisch&quot;] = &quot;South Hessian&quot;\n\nlabels[&quot;South Wales&quot;] = {\n\tdisplay = &quot;[[w:South Wales|South Wales]]&quot;,\n\tregional_categories = {&quot;South Wales&quot;},\n\
      }\n\nlabels[&quot;Southern England&quot;] = {\n\tdisplay = &quot;[[w:Southern England|Southern England]]&quot;,\n\tregional_categories = {&quot;Southern England&quot;},\n}\naliases[&quot;southern England&quot;] = &quot;Southern England&quot;\naliases[&quot;South\
      \ England&quot;] = &quot;Southern England&quot;\naliases[&quot;south England&quot;] = &quot;Southern England&quot;\n\nlabels[&quot;Spain&quot;] = {\n\tdisplay = &quot;[[w:Spain|Spain]]&quot;,\n\tregional_categories = {&quot;Spanish&quot;},\n}\n\nlabels[&quot;Suffolk&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Suffolk|Suffolk]]&quot;,\n\tregional_categories = {&quot;Suffolk&quot;},\n}\naliases[&quot;Suffolk dialect&quot;] = &quot;Suffolk&quot;\n\nlabels[&quot;Suðuroy&quot;] = {\n\tdisplay = &quot;[[w:Suðuroy|Suðuroy]]&quot;,\n\t\
      regional_categories = {&quot;Suðuroy&quot;},\n}\n\nlabels[&quot;Sweden&quot;] = {\n\tdisplay = &quot;[[w:Sweden|Sweden]]&quot;,\n\tregional_categories = {&quot;Swedish&quot;},\n}\n\nlabels[&quot;Switzerland&quot;] = {\n\tdisplay = &quot;[[w:Switzerland|Switzerland]]&quot;,\n\
      \tregional_categories = {&quot;Switzerland&quot;},\n}\naliases[&quot;Swiss&quot;] = &quot;Switzerland&quot;\naliases[&quot;Swiss German&quot;] = &quot;Switzerland&quot; -- some German entries use this alias; let -sche know if it causes problems\n\nlabels[&quot;Sylt&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Sylt|Sylt]]&quot;,\n\tregional_categories = {&quot;Sylt&quot;},\n}\naliases[&quot;Söl&quot;] = &quot;Sylt&quot;\naliases[&quot;Sölring&quot;] = &quot;Sylt&quot;\naliases[&quot;Söl'&quot;] = &quot;Sylt&quot;\naliases[&quot;Sö\
      l'ring&quot;] = &quot;Sylt&quot;\n\nlabels[&quot;Teesside&quot;] = {\n\tdisplay = &quot;[[w:Teesside|Teesside]]&quot;,\n\tregional_categories = {&quot;Teesside&quot;},\n}\n\nlabels[&quot;Torlakian&quot;] = {\n        display = &quot;[[w:Torlakian dialect|Torlakian]]&quot;,\n\
      \        plain_categories = {&quot;Torlakian Serbo-Croatian&quot;},\n}\n\nlabels[&quot;Transylvania&quot;] = {\n\tdisplay = &quot;[[w:Transylvania|Transylvania]]&quot;,\n\tregional_categories = {&quot;Transylvanian&quot;},\n}\naliases[&quot;Transilvania&quot;]\
      \ = &quot;Transylvania&quot;\naliases[&quot;Transylvanian&quot;] = &quot;Transylvania&quot;\n\nlabels[&quot;Ukraine&quot;] = {\n\tdisplay = &quot;[[w:Ukraine|Ukraine]]&quot;,\n\tregional_categories = {&quot;Ukrainian&quot;},\n}\n\nlabels[&quot;Ulster&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Ulster|Ulster]]&quot;,\n\tregional_categories = {&quot;Ulster&quot;},\n}\n\nlabels[&quot;Valencia&quot;] = {\n\tdisplay = &quot;[[w:Valencia|Valencia]]&quot;,\n\tregional_categories = {&quot;Valencian&quot;},\n}\naliases[&quot;Valencian&quot;]\
      \ = &quot;Valencia&quot;\n\nlabels[&quot;Venice&quot;] = {\n\tdisplay = &quot;[[w:Venice|Venice]]&quot;,\n\tregional_categories = {&quot;Venetian&quot;},\n}\naliases[&quot;Venetian&quot;] = &quot;Venice&quot;\n\nlabels[&quot;Wales&quot;] = {\n\tdisplay\
      \ = &quot;[[w:Wales|Wales]]&quot;,\n\tregional_categories = {&quot;Welsh&quot;},\n}\naliases[&quot;Welsh&quot;] = &quot;Wales&quot;\n\nlabels[&quot;Wallonia&quot;] = {\n\tdisplay = &quot;[[w:Wallonia|Wallonia]]&quot;,\n\tregional_categories = {&quot;Wallonian&quot;},\n\
      }\n\nlabels[&quot;Wearside&quot;] = {\n\tdisplay = &quot;[[w:Wearside|Wearside]]&quot;,\n\tregional_categories = {&quot;Wearside&quot;},\n}\n\nlabels[&quot;West Country&quot;] = {\n\tdisplay = &quot;[[w:West Country|West Country]]&quot;,\n\tregional_categories\
      \ = {&quot;West Country&quot;},\n}\naliases[&quot;West England&quot;] = &quot;West Country&quot;\naliases[&quot;west England&quot;] = &quot;West Country&quot;\n\nlabels[&quot;West Midlands&quot;] = {\n\tdisplay = &quot;[[w:West Midlands|West Midlands]]&quot;,\n\
      \tregional_categories = {&quot;West Midlands&quot;},\n}\n\nlabels[&quot;West Palatine&quot;] = {\n\tdisplay = &quot;[[w:Palatine German language|Westpfälzisch]]&quot;,\n\tregional_categories = {&quot;West Palatine&quot;},\n}\naliases[&quot;Westpfälzisch&quot;]\
      \ = &quot;West Palatine&quot;\n\nlabels[&quot;Western Ukraine&quot;] = {\n\tdisplay = &quot;[[w:Western Ukraine|Western Ukraine]]&quot;,\n\tregional_categories = {&quot;Western&quot;},\n}\n\nlabels[&quot;Wiltshire&quot;] = {\n\tdisplay = &quot;[[w:Wiltshire|Wiltshire]]&quot;,\n\
      \tregional_categories = {&quot;Wiltshire&quot;},\n}\naliases[&quot;Wiltshire dialect&quot;] = &quot;Wiltshire&quot;\naliases[&quot;Wilts&quot;] = &quot;Wiltshire&quot;\naliases[&quot;Wilts dialect&quot;] = &quot;Wiltshire&quot;\n\nlabels[&quot;Yorkshire&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Yorkshire|Yorkshire]]&quot;,\n\tregional_categories = {&quot;Yorkshire&quot;},\n}\n\n\n-- Australia and Oceania\n\nlabels[&quot;Australia&quot;] = {\n\tdisplay = &quot;[[w:Australia|Australia]]&quot;,\n\tregional_categories\
      \ = {&quot;Australian&quot;},\n}\naliases[&quot;AU&quot;] = &quot;Australia&quot;\naliases[&quot;Australian&quot;] = &quot;Australia&quot;\n\nlabels[&quot;Hawaii&quot;] = {\n\tregional_categories = {&quot;Hawaiian&quot;},\n}\n\nlabels[&quot;Kauaʻi&quot;]\
      \ = {\n\tregional_categories = {&quot;Kauaʻi&quot;},\n}\naliases[&quot;Kauai&quot;] = &quot;Kauaʻi&quot;\naliases[&quot;Kaua'i&quot;] = &quot;Kauaʻi&quot;\n\nlabels[&quot;Lānaʻi&quot;] = {\n\tregional_categories = {&quot;Lānaʻi&quot;},\n}\naliases[&quot;Lanaʻ\
      i&quot;] = &quot;Lānaʻi&quot;\naliases[&quot;Lanai&quot;] = &quot;Lānaʻi&quot;\naliases[&quot;Lāna'i&quot;] = &quot;Lānaʻi&quot;\naliases[&quot;Lana'i&quot;] = &quot;Lānaʻi&quot;\n\nlabels[&quot;Maui&quot;] = {\n\tregional_categories = {&quot;Maui&quot;},\n\
      }\n\nlabels[&quot;Molokaʻi&quot;] = {\n\tregional_categories = {&quot;Molokaʻi&quot;},\n}\naliases[&quot;Molokai&quot;] = &quot;Molokaʻi&quot;\naliases[&quot;Moloka'i&quot;] = &quot;Molokaʻi&quot;\n\nlabels[&quot;New Zealand&quot;] = {\n\tdisplay = &quot;[[w:New\
      \ Zealand|New Zealand]]&quot;,\n\tregional_categories = {&quot;New Zealand&quot;},\n}\naliases[&quot;NZ&quot;] = &quot;New Zealand&quot;\n\nlabels[&quot;Niʻihau&quot;] = {\n\tregional_categories = {&quot;Niʻihau&quot;},\n}\naliases[&quot;Ni'ihau&quot;]\
      \ = &quot;Niʻihau&quot;\naliases[&quot;Niihau&quot;] = &quot;Niʻihau&quot;\n\n\n-- Other/unclear\n\nlabels[&quot;Antilles&quot;] = {\n\tregional_categories = {&quot;Antilles&quot;},\n}\n\nlabels[&quot;Commonwealth&quot;] = {\n\tdisplay = &quot;[[Commonwealth\
      \ of Nations]]&quot;,\n\tregional_categories = {&quot;Commonwealth&quot;},\n}\n\nlabels[&quot;Jin&quot;] = {\n\tregional_categories = {&quot;Jin&quot;},\n}\n\nlabels[&quot;Kitti&quot;] = {\n\tregional_categories = {&quot;Kitti&quot;},\n}\n\n\n-- Language\
      \ specific\n\nlabels[&quot;Advanced Mandarin&quot;] = {\n\tdisplay = &quot;[[Appendix:HSK list of Mandarin words/Advanced Mandarin|Advanced Mandarin]]&quot;,\n\tplain_categories = {&quot;Advanced Mandarin&quot;},\n}\n\nlabels[&quot;Aeolic&quot;] = {\n\t\
      display = &quot;[[w:Aeolic Greek|Aeolic]]&quot;,\n\tplain_categories = {&quot;Aeolic Ancient Greek&quot;},\n}\naliases[&quot;Aeolic Greek&quot;] = &quot;Aeolic&quot;\n\nlabels[&quot;African American Vernacular English&quot;] = {\n\tdisplay = &quot;[[w:African\
      \ American Vernacular English|African American Vernacular]]&quot;,\n\tregional_categories = {&quot;African American Vernacular&quot;},\n}\naliases[&quot;AAVE&quot;] = &quot;African American Vernacular English&quot;\naliases[&quot;ebonics&quot;] = &quot;African\
      \ American Vernacular English&quot;\n\nlabels[&quot;American spelling&quot;] = {\n\tdisplay = &quot;[[American spelling|American]]&quot;,\n\tplain_categories = {&quot;American English forms&quot;},\n}\n\nlabels[&quot;Anglo-Norman&quot;] = {\n\tdisplay\
      \ = &quot;[[w:Anglo-Norman language|Anglo-Norman]]&quot;,\n\tplain_categories = {&quot;Anglo-Norman Old French&quot;},\n}\n\nlabels[&quot;Attic&quot;] = {\n\tdisplay = &quot;[[w:Attic Greek|Attic]]&quot;,\n\tplain_categories = {&quot;Attic Ancient Greek&quot;},\n\
      }\naliases[&quot;Attic Greek&quot;] = &quot;Attic&quot;\n\nlabels[&quot;Australian English&quot;] = {\n\tdisplay = &quot;[[w:Australian English|Australia]]&quot;,\n\tplain_categories = {&quot;Australian English&quot;},\n}\n\nlabels[&quot;Beginning Mandarin&quot;]\
      \ = {\n\tdisplay = &quot;[[Appendix:HSK list of Mandarin words/Beginning Mandarin|Beginning Mandarin]]&quot;,\n\tplain_categories = {&quot;Beginning Mandarin&quot;},\n}\n\nlabels[&quot;Akhmimic&quot;] = {\n\tdisplay = &quot;[[w:Coptic language#Akhmimic|Akhmimic]]&quot;,\n\
      \tplain_categories = {&quot;Akhmimic Coptic&quot;},\n}\n\nlabels[&quot;Ararat&quot;] = {\n\tdisplay = &quot;[[w:Araratian dialect|Ararat]]&quot;,\n\tplain_categories = {&quot;Ararat Armenian&quot;},\n}\n\nlabels[&quot;Balhae&quot;] = {\n\tplain_categories\
      \ = {&quot;Balhae Old Korean&quot;},\n}\n\nlabels[&quot;Balkar&quot;] = {\n\tplain_categories = {&quot;Balkar&quot;},\n}\n\nlabels[&quot;Birmingham&quot;] = {\n\tdisplay = &quot;[[wikipedia:Brummie|Birmingham]]&quot;,\n\tplain_categories = {&quot;Birmingham\
      \ English&quot;},\n}\naliases[&quot;Brummie&quot;] = &quot;Birmingham&quot;\naliases[&quot;Brummy&quot;] = &quot;Birmingham&quot;\n\nlabels[&quot;Bohairic&quot;] = {\n\tdisplay = &quot;[[w:Coptic language#Bohairic|Bohairic]]&quot;,\n\tplain_categories\
      \ = {&quot;Bohairic Coptic&quot;},\n}\naliases[&quot;Memphitic&quot;] = &quot;Bohairic&quot;\n\nlabels[&quot;Bokmål&quot;] = {\n\tdisplay = &quot;[[w:Bokmål|Bokmål]]&quot;,\n\tplain_categories = {&quot;Norwegian Bokmål&quot;},\n}\n\nlabels[&quot;Border\
      \ Scots&quot;] = {\n\tplain_categories = {&quot;Border Scots&quot;},\n}\n\nlabels[&quot;British English&quot;] = {\n\tdisplay = &quot;[[w:British English|British]]&quot;,\n\tplain_categories = {&quot;British English&quot;},\n}\n\nlabels[&quot;British spelling&quot;]\
      \ = {\n\tdisplay = &quot;[[British spelling|British]]&quot;,\n\tplain_categories = {&quot;British English forms&quot;},\n}\naliases[&quot;Commonwealth spelling&quot;] = &quot;British spelling&quot;\n\nlabels[&quot;Canadian English&quot;] = {\n\tdisplay\
      \ = &quot;[[w:Canadian English|Canada]]&quot;,\n\tplain_categories = {&quot;Canadian English&quot;},\n}\n\nlabels[&quot;Canadian spelling&quot;] = {\n\tdisplay = &quot;[[w:Canadian spelling|Canadian]]&quot;,\n\tplain_categories = {&quot;Canadian English\
      \ forms&quot;},\n}\n\nlabels[&quot;Cantonese&quot;] = {\n\tdisplay = &quot;[[w:Cantonese|Cantonese]]&quot;,\n\tplain_categories = {&quot;Cantonese Chinese&quot;},\n}\n\nlabels[&quot;Chakavian&quot;] = {\n\tdisplay = &quot;[[Chakavian]]&quot;,\n\tplain_categories\
      \ = {&quot;Chakavian Serbo-Croatian&quot;},\n}\naliases[&quot;Čakavian&quot;] = &quot;Chakavian&quot;\n\nlabels[&quot;Cham Albanian&quot;] = {\n\tdisplay = &quot;[[w:Cham Albanian dialect|Cham]]&quot;,\n\tplain_categories = {&quot;Cham Albanian&quot;},\n\
      }\n\nlabels[&quot;Chinglish&quot;] = {\n\tdisplay = &quot;[[w:Chinglish|Chinglish]]&quot;,\n\tplain_categories = {&quot;Chinglish&quot;},\n}\n\nlabels[&quot;Cockney&quot;] = {\n\tdisplay = &quot;[[w:Cockney#Speech|Cockney]]&quot;,\n\tplain_categories =\
      \ {&quot;Cockney English&quot;},\n}\n\nlabels[&quot;Cois Fharraige&quot;] = {\n\tdisplay = &quot;[[w:Gaeltacht Cois Fharraige|Cois Fharraige]]&quot;,\n\tplain_categories = {&quot;Connacht Irish&quot;},\n}\naliases[&quot;Cois Fhairrge&quot;] = &quot;Cois\
      \ Fharraige&quot;\n\nlabels[&quot;Cretan&quot;] = {\n\tdisplay = &quot;[[w:Cretan Greek|Cretan]]&quot;,\n\tplain_categories = {&quot;Cretan Greek&quot;},\n}\naliases[&quot;cretan&quot;] = &quot;Cretan&quot;\n\nlabels[&quot;Dari&quot;] = {\n\tdisplay =\
      \ &quot;[[w:Dari (Persian)|Dari (Afghanistan)]]&quot;,\n\tplain_categories = {&quot;Dari Persian&quot;},\n}\n\nlabels[&quot;De'kwana&quot;] = {\n\tdisplay = &quot;De'kwana dialect&quot;,\n\tplain_categories = {&quot;De'kwana Maquiritari&quot;},\n}\naliases[&quot;De'kwana\
      \ dialect&quot;] = &quot;De'kwana&quot;\n\nlabels[&quot;Digor&quot;] = {\n\tdisplay = &quot;Digor dialect&quot;,\n\tplain_categories = {&quot;Digor Ossetian&quot;},\n}\naliases[&quot;Digor dialect&quot;] = &quot;Digor&quot;\n\nlabels[&quot;Doric&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Doric Greek|Doric]]&quot;,\n\tplain_categories = {&quot;Doric Ancient Greek&quot;},\n}\naliases[&quot;Doric Greek&quot;] = &quot;Doric&quot;\n\nlabels[&quot;Doric Scots&quot;] = {\n\tdisplay = &quot;[[w:Doric dialect (Scotland)|Doric]]&quot;,\n\
      \tplain_categories = {&quot;Doric Scots&quot;},\n}\n\nlabels[&quot;East Anglian English&quot;] = {\n\tdisplay = &quot;[[w:East Anglian English|East Anglia]]&quot;,\n\tplain_categories = {&quot;East Anglian English&quot;},\n}\n\nlabels[&quot;East Frisian&quot;]\
      \ = {\n\tdisplay = &quot;[[w:East Frisian Low Saxon|East Frisian]]&quot;,\n\tplain_categories = {&quot;East Frisian Low German&quot;},\n} -- for East Frisian dialectal German Low German, not the Frisianic language\n\nlabels[&quot;East Germanic&quot;] =\
      \ {\n\tdisplay = &quot;[[w:East Germanic languages|East Germanic]]&quot;,\n\tplain_categories = {&quot;East Proto-Germanic&quot;},\n}\n\nlabels[&quot;East Midlands English&quot;] = {\n\tdisplay = &quot;[[w:East Midlands English|East Midlands]]&quot;,\n\
      \tplain_categories = {&quot;East Midlands English&quot;},\n}\n\nlabels[&quot;Eastern Armenian&quot;] = {\n\tdisplay = &quot;[[w:Eastern Armenian|Eastern Armenian]]&quot;,\n\tplain_categories = {&quot;Eastern Armenian&quot;},\n}\n\nlabels[&quot;Eastern\
      \ Catalan&quot;] = {\n\tdisplay = &quot;[[w:Catalan dialects|Eastern Catalan]]&quot;,\n\tplain_categories = {&quot;Eastern Catalan&quot;},\n}\n\nlabels[&quot;Ecclesiastical Latin&quot;] = {\n\tdisplay = &quot;[[w:Ecclesiastical Latin|Ecclesiastical Latin]]&quot;,\n\
      \tplain_categories = {&quot;Ecclesiastical Latin&quot;},\n}\naliases[&quot;Church Latin&quot;] = &quot;Ecclesiastical Latin&quot;\n\nlabels[&quot;Ekavian&quot;] = {\n\tdisplay = &quot;[[Ekavian]]&quot;,\n}\n\nlabels[&quot;Elementary Mandarin&quot;] = {\n\
      \tdisplay = &quot;[[Appendix:HSK list of Mandarin words/Elementary Mandarin|Elementary Mandarin]]&quot;,\n\tplain_categories = {&quot;Elementary Mandarin&quot;},\n}\n\nlabels[&quot;Epic&quot;] = {\n\tdisplay = &quot;[[w:Homeric Greek|Epic]]&quot;,\n\t\
      plain_categories = {&quot;Epic Ancient Greek&quot;},\n}\naliases[&quot;Homeric&quot;] = &quot;Epic&quot;\naliases[&quot;Epic Greek&quot;] = &quot;Epic&quot;\naliases[&quot;Homeric Greek&quot;] = &quot;Homeric&quot;\n\nlabels[&quot;European French&quot;]\
      \ = {\n\tdisplay = &quot;[[w:European French|Europe]]&quot;,\n\tplain_categories = {&quot;European French&quot;},\n}\n\nlabels[&quot;Fayyumic&quot;] = {\n\tdisplay = &quot;[[w:Coptic language#Fayyumic|Fayyumic]]&quot;,\n\tplain_categories = {&quot;Fayyumic\
      \ Coptic&quot;},\n}\naliases[&quot;Faiyumic&quot;] = &quot;Fayyumic&quot;\naliases[&quot;Bashmuric&quot;] = &quot;Fayyumic&quot;\n\nlabels[&quot;East and West Flanders&quot;] = {\n\tdisplay = &quot;[[w:East Flanders|East]] and [[w:West Flanders|West Flanders]]&quot;,\n\
      \tplain_categories = {&quot;East and West Flemish Dutch&quot;},\n}\naliases[&quot;Flanders&quot;] = &quot;East and West Flanders&quot;\naliases[&quot;Flemish&quot;] = &quot;East and West Flanders&quot;\n\nlabels[&quot;Gan&quot;] = {\n\tdisplay = &quot;[[w:Gan\
      \ Chinese|Gan]]&quot;,\n\tplain_categories = {&quot;Gan Chinese&quot;},\n}\n\nlabels[&quot;Geordie&quot;] = {\n\tdisplay = &quot;[[w:Geordie|Geordie]]&quot;,\n\tplain_categories = {&quot;Geordie English&quot;},\n}\n\nlabels[&quot;Gheg&quot;] = {\n\tdisplay\
      \ = &quot;[[w:Gheg Albanian|Gheg]]&quot;,\n\tplain_categories = {&quot;Gheg Albanian&quot;},\n}\n\nlabels[&quot;Gottscheerisch&quot;] = {\n\tdisplay = &quot;[[w:Gottscheerisch|Gottscheerisch]]&quot;,\n\tplain_categories = {&quot;Gottscheerisch German&quot;},\n\
      }\naliases[&quot;Gottscheerish&quot;] = &quot;Gottscheerisch&quot;\n\nlabels[&quot;Guardiol&quot;] = {\n\tdisplay = &quot;[[w:Guardia Piemontese|Guardiol]]&quot;,\n\tplain_categories = {&quot;Guardiol Occitan&quot;},\n}\n\nlabels[&quot;Hakka&quot;] = {\n\
      \tdisplay = &quot;[[w:Hakka Chinese|Hakka]]&quot;,\n\tplain_categories = {&quot;Hakka Chinese&quot;},\n}\n\nlabels[&quot;Hamburgisch&quot;] = {\n\tdisplay = &quot;[[w:Hamburgisch dialect|Hamburgisch]]&quot;,\n\tplain_categories = {&quot;Hamburgisch Low\
      \ German&quot;},\n}\n\nlabels[&quot;Hamshen&quot;] = {\n\tdisplay = &quot;[[w:Homshetsi dialect|Hamshen]]&quot;,\n\tplain_categories = {&quot;Hamshen Armenian&quot;},\n}\naliases[&quot;Homshetsi&quot;] = &quot;Hamshen&quot;\naliases[&quot;Homshetsma&quot;]\
      \ = &quot;Hamshen&quot;\n\nlabels[&quot;Helsinki slang&quot;] = {\n\tdisplay = &quot;[[w:Helsinki slang|Helsinki slang]]&quot;,\n\tplain_categories = {&quot;Helsinki slang&quot;},\n}\n\nlabels[&quot;Hulu Pahang&quot;] = {\n\tplain_categories = {&quot;Hulu\
      \ Pahang Malay&quot;},\n}\n\nlabels[&quot;Ikavian&quot;] = {\n\tdisplay = &quot;[[Ikavian]]&quot;,\n\tplain_categories = {&quot;Ikavian Serbo-Croatian&quot;},\n}\n\nlabels[&quot;Indian English&quot;] = {\n\tdisplay = &quot;[[w:Indian English|India]]&quot;,\n\
      \tplain_categories = {&quot;Indian English&quot;},\n}\n\nlabels[&quot;Ingilo&quot;] = {\n\tdisplay = &quot;[[w:Ingiloy people|Ingilo]]&quot;,\n\tplain_categories = {&quot;Ingilo Georgian&quot;},\n}\naliases[&quot;Ingiloy&quot;] = &quot;Ingilo&quot;\naliases[&quot;Saingilo&quot;]\
      \ = &quot;Ingilo&quot;\n\nlabels[&quot;Inner Mbugu&quot;] = {\n\tdisplay = &quot;[[Wiktionary:About Mbugu|Ma'a]]&quot;,\n\tplain_categories = {&quot;Inner Mbugu&quot;},\n}\naliases[&quot;inner Mbugu&quot;] = &quot;Inner Mbugu&quot;\n\nlabels[&quot;Intermediate\
      \ Mandarin&quot;] = {\n\tdisplay = &quot;[[Appendix:HSK list of Mandarin words/Intermediate Mandarin|Intermediate Mandarin]]&quot;,\n\tplain_categories = {&quot;Intermediate Mandarin&quot;},\n}\n\nlabels[&quot;Inuktun&quot;] = {\n\tplain_categories = {&quot;Inuktun\
      \ Inuktitut&quot;},\n}\naliases[&quot;Polar Eskimo&quot;] = &quot;Inuktun&quot;\n\nlabels[&quot;Inuttut&quot;] = {\n\tplain_categories = {&quot;Inuttut Inuktitut&quot;},\n}\naliases[&quot;Nunatsiavummiutut&quot;] = &quot;Inuttut&quot;\naliases[&quot;Labradorimiutut&quot;]\
      \ = &quot;Inuttut&quot;\naliases[&quot;Inuttitut&quot;] = &quot;Inuttut&quot;\n\nlabels[&quot;Ionic&quot;] = {\n\tdisplay = &quot;[[w:Ionic Greek|Ionic]]&quot;,\n\tplain_categories = {&quot;Ionic Ancient Greek&quot;},\n}\naliases[&quot;Ionic Greek&quot;]\
      \ = &quot;Ionic&quot;\n\nlabels[&quot;Irish English&quot;] = {\n\tdisplay = &quot;[[w:Irish English|Ireland]]&quot;,\n\tplain_categories = {&quot;Irish English&quot;},\n}\n\nlabels[&quot;Iron&quot;] = {\n\tdisplay = &quot;Iron dialect&quot;,\n\tplain_categories\
      \ = {&quot;Iron Ossetian&quot;},\n}\naliases[&quot;Iron dialect&quot;] = &quot;Iron&quot;\n\nlabels[&quot;Itivimuit&quot;] = {\n\tplain_categories = {&quot;Itivimuit Inuktitut&quot;},\n}\n\nlabels[&quot;Kajkavian&quot;] = {\n\tdisplay = &quot;[[Kajkavian]]&quot;,\n\
      \tplain_categories = {&quot;Kajkavian Serbo-Croatian&quot;},\n}\n\nlabels[&quot;Karabakh&quot;] = {\n\tdisplay = &quot;[[w:Karabakh dialect (Armenian)|Karabakh]]&quot;,\n\tplain_categories = {&quot;Karabakh Armenian&quot;},\n}\naliases[&quot;Gharabagh&quot;]\
      \ = &quot;Karabakh&quot;\naliases[&quot;Artsakh&quot;] = &quot;Karabakh&quot;\n\nlabels[&quot;Kansai&quot;] = {\n\tdisplay = &quot;[[w:Kansai dialect|Kansai]]&quot;,\n\tplain_categories = {&quot;Kansai Japanese&quot;},\n}\n\nlabels[&quot;Karachay&quot;]\
      \ = {\n\tplain_categories = {&quot;Karachay&quot;},\n}\n\nlabels[&quot;Kichwa&quot;] = {\n\tdisplay = &quot;[[w:Kichwa language|Standard Ecuadorian Kichwa]]&quot;,\n\tplain_categories = {&quot;Standard Kichwa&quot;},\n}\n\nlabels[&quot;Koine&quot;] = {\n\
      \tdisplay = &quot;[[w:Koine Greek|Koine Greek]]&quot;,\n\tplain_categories = {&quot;Koine Greek&quot;},\n}\naliases[&quot;Koine Greek&quot;] = &quot;Koine&quot;\naliases[&quot;Hellenistic&quot;] = &quot;Koine&quot;\naliases[&quot;Hellenistic Greek&quot;]\
      \ = &quot;Koine&quot;\n\nlabels[&quot;Kromanti&quot;] = {\n\tdisplay = &quot;[[w:Jamaican Maroon spirit-possession language|Kromanti spirit possession language]]&quot;,\n\tplain_categories = {&quot;Kromanti Akan&quot;},\n}\n\nlabels[&quot;Late Latin&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Late Latin|Late Latin]]&quot;,\n\tplain_categories = {&quot;Late Latin&quot;},\n}\n\nlabels[&quot;Latin America&quot;] = {\n\tplain_categories = {&quot;Latin American Spanish&quot;},\n}\naliases[&quot;Latin American Spanish&quot;]\
      \ = &quot;Latin America&quot;\n\nlabels[&quot;Louisiana French&quot;] = {\n\tdisplay = &quot;[[w:Cajun French|Louisiana]]&quot;,\n\tplain_categories = {&quot;Louisiana French&quot;},\n}\n\nlabels[&quot;Low Prussian&quot;] = {\n\tdisplay = &quot;[[w:Low\
      \ Prussian dialect|Low Prussian]]&quot;,\n\tplain_categories = {&quot;Low Prussian Low German&quot;},\n}\n\nlabels[&quot;Lowlands Scots&quot;] = {\n\tplain_categories = {&quot;Lowlands Scots&quot;},\n}\n\nlabels[&quot;Lycopolitan&quot;] = {\n\tdisplay\
      \ = &quot;[[w:Coptic language#Lycopolitan|Lycopolitan]]&quot;,\n\tplain_categories = {&quot;Lycopolitan Coptic&quot;},\n}\naliases[&quot;Subakhmimic&quot;] = &quot;Lycopolitan&quot;\naliases[&quot;Assiutic&quot;] = &quot;Lycopolitan&quot;\n\nlabels[&quot;Maniot&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Maniot dialect|Maniot dialect]]&quot;,\n\tplain_categories = {&quot;Maniot Greek&quot;},\n}\naliases['maniot'] = &quot;Maniot&quot;\n\nlabels[&quot;Mecklenburgisch Low German&quot;] = {\n\tdisplay = &quot;[[w:Mecklenburgisch\
      \ dialect|Mecklenburgisch]]&quot;,\n\tplain_categories = {&quot;Mecklenburgisch Low German&quot;},\n}\naliases[&quot;Mecklenburgisch&quot;] = &quot;Mecklenburgisch Low German&quot;\naliases[&quot;Mecklenburg&quot;] = &quot;Mecklenburgisch Low German&quot;\n\
      \nlabels[&quot;Medieval Latin&quot;] = {\n\tdisplay = &quot;[[w:Medieval Latin|Medieval Latin]]&quot;,\n\tplain_categories = {&quot;Medieval Latin&quot;},\n}\n\nlabels[&quot;Midlands English&quot;] = {\n\tdisplay = &quot;[[w:Midlands English|Midlands]]&quot;,\n\
      \tplain_categories = {&quot;Midlands English&quot;},\n}\n\nlabels[&quot;Min&quot;] = {\n\tdisplay = &quot;[[w:Min Chinese|Min]]&quot;,\n\tplain_categories = {&quot;Min Chinese&quot;},\n}\n\nlabels[&quot;Min Bei&quot;] = {\n\tdisplay = &quot;[[w:Northern\
      \ Min|Min Bei]]&quot;,\n\tplain_categories = {&quot;Min Bei Chinese&quot;},\n}\n\nlabels[&quot;Min Dong&quot;] = {\n\tdisplay = &quot;[[w:Eastern Min|Min Dong]]&quot;,\n\tplain_categories = {&quot;Min Dong Chinese&quot;},\n}\n\nlabels[&quot;Min Nan&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Southern Min|Min Nan]]&quot;,\n\tplain_categories = {&quot;Min Nan Chinese&quot;},\n}\n\nlabels[&quot;Min Zhong&quot;] = {\n\tdisplay = &quot;[[w:Central Min|Min Zhong]]&quot;,\n\tplain_categories = {&quot;Min Zhong Chinese&quot;},\n\
      }\n\nlabels[&quot;Mistralian&quot;] = {\n\tdisplay = &quot;[[w:Occitan language#Writing system|Mistralian]]&quot;,\n\tplain_categories = {&quot;Mistralian Occitan&quot;},\n}\n\nlabels[&quot;Mooring&quot;] = {\n\tdisplay = &quot;[[w:Mooring (North Frisian\
      \ dialect)|Mooring]]&quot;,\n\tplain_categories = {&quot;Mooring North Frisian&quot;},\n}\naliases[&quot;Mooring dialect&quot;] = &quot;Mooring&quot;\n\nlabels[&quot;Multicultural London English&quot;] = {\n\tdisplay = &quot;[[w:Multicultural London English|MLE]]&quot;,\n\
      \tplain_categories = {&quot;Multicultural London English&quot;},\n}\naliases[&quot;MLE&quot;] = &quot;Multicultural London English&quot;\n\nlabels[&quot;New Latin&quot;] = {\n\tdisplay = &quot;[[w:New Latin|New Latin]]&quot;,\n\tplain_categories = {&quot;New\
      \ Latin&quot;},\n}\n\nlabels[&quot;New Zealand English&quot;] = {\n\tdisplay = &quot;[[w:New Zealand English|New Zealand]]&quot;,\n\tplain_categories = {&quot;New Zealand English&quot;},\n}\n\nlabels[&quot;Non-Oxford British spelling&quot;] = {\n\tdisplay\
      \ = &quot;Non-[[w:Oxford spelling|Oxford]] [[British English]]&quot;,\n\tplain_categories = {&quot;British English forms&quot;},\n}\naliases[&quot;non-Oxford British spelling&quot;] = &quot;Non-Oxford British spelling&quot;\naliases[&quot;Non-Oxford&quot;]\
      \ = &quot;Non-Oxford British spelling&quot;\naliases[&quot;non-Oxford&quot;] = &quot;Non-Oxford British spelling&quot;\n\nlabels[&quot;Normal Mbugu&quot;] = {\n\tdisplay = &quot;[[Wiktionary:About Mbugu|Mbugu]]&quot;,\n\tplain_categories = {&quot;Normal\
      \ Mbugu&quot;},\n}\naliases[&quot;normal Mbugu&quot;] = &quot;Normal Mbugu&quot;\n\nlabels[&quot;North Germanic&quot;] = {\n\tdisplay = &quot;[[w:North Germanic languages|North Germanic]]&quot;,\n\tplain_categories = {&quot;North Proto-Germanic&quot;},\n\
      }\n\nlabels[&quot;Northern Dutch&quot;] = {\n\tdisplay = &quot;[[w:Dutch dialects|Northern]]&quot;,\n\tplain_categories = {&quot;Northern Dutch&quot;},\n}\n\nlabels[&quot;Northern England English&quot;] = {\n\tdisplay = &quot;[[w:Northern England English|Northern\
      \ England]]&quot;,\n\tplain_categories = {&quot;Northern England English&quot;},\n}\naliases[&quot;Northern English dialect&quot;] = &quot;Northern England English&quot;\naliases[&quot;northern English&quot;] = &quot;Northern England English&quot;\naliases[&quot;North\
      \ English&quot;] = &quot;Northern England English&quot;\naliases[&quot;north English&quot;] = &quot;Northern England English&quot;\n\nlabels[&quot;Northern Finnic&quot;] = {\n\tplain_categories = {&quot;Northern Proto-Finnic&quot;},\n}\n\nlabels[&quot;Northwest\
      \ Germanic&quot;] = {\n\tdisplay = &quot;[[w:Northwest Germanic languages|Northwest Germanic]]&quot;,\n\tplain_categories = {&quot;Northwest Proto-Germanic&quot;},\n}\n\nlabels[&quot;Nynorsk&quot;] = {\n\tdisplay = &quot;Nynorsk&quot;,\n\tplain_categories\
      \ = {&quot;Norwegian Nynorsk&quot;},\n}\n\nlabels[&quot;Old East Norse&quot;] = {\n\tdisplay = &quot;[[w:Old East Norse|Old East Norse]]&quot;,\n\tplain_categories = {&quot;Old East Norse&quot;},\n}\naliases[&quot;East Norse&quot;] = &quot;Old East Norse&quot;\n\
      \nlabels[&quot;Old West Norse&quot;] = {\n\tdisplay = &quot;[[w:Old West Norse|Old West Norse]]&quot;,\n\tplain_categories = {&quot;Old West Norse&quot;},\n}\naliases[&quot;West Norse&quot;] = &quot;Old West Norse&quot;\n\nlabels[&quot;Oxford British spelling&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Oxford spelling|Oxford]] [[British English]]&quot;,\n\tplain_categories = {&quot;Oxford spellings&quot;},\n}\naliases[&quot;Oxford&quot;] = &quot;Oxford British spelling&quot;\n\nlabels[&quot;Oxyrhynchite&quot;] = {\n\tdisplay\
      \ = &quot;[[w:Coptic language#Oxyrhynchite|Oxyrhynchite]]&quot;,\n\tplain_categories = {&quot;Oxyrhynchite Coptic&quot;},\n}\naliases[&quot;Mesokemic&quot;] = &quot;Oxyrhynchite&quot;\n\nlabels[&quot;Pennsylvania Dutch English&quot;] = {\n\tdisplay = &quot;[[w:Pennsylvania\
      \ Dutch English|Pennsylvania Dutch English]]&quot;,\n\tplain_categories = {&quot;Pennsylvania Dutch English&quot;},\n}\n\nlabels[&quot;Pomeranian Low German&quot;] = {\n\tdisplay = &quot;[[w:Pomeranian Low German|Pomeranian]]&quot;,\n\tplain_categories\
      \ = {&quot;Pomeranian Low German&quot;},\n}\naliases[&quot;Pomeranian LG&quot;] = &quot;Pomeranian Low German&quot;\n\nlabels[&quot;Potteries&quot;] = {\n\tdisplay = &quot;[[w:Potteries dialect|Potteries]]&quot;,\n\tplain_categories = {&quot;Potteries\
      \ English&quot;},\n}\naliases[&quot;Potteries dialect&quot;] = &quot;Potteries&quot;\n\nlabels[&quot;Puter&quot;] = {\n\tdisplay = &quot;[[w:Putèr|Puter]]&quot;,\n\tplain_categories = {&quot;Puter Romansch&quot;},\n}\n\nlabels[&quot;Royal Thai&quot;] =\
      \ {\n\tdisplay = &quot;royal&quot;,\n\tplain_categories = {&quot;Thai royal vocabulary&quot;},\n}\n\nlabels[&quot;Rumantsch Grischun&quot;] = {\n\tdisplay = &quot;[[w:Rumantsch Grischun|Rumantsch Grischun]]&quot;,\n}\n\nlabels[&quot;Saarland&quot;] = {\n\
      \tdisplay = &quot;Saarland&quot;,\n\tregional_categories = {&quot;Saarland&quot;},\n}\naliases[&quot;Saarländisch&quot;] = &quot;Saarland&quot;\naliases[&quot;Saarlandic&quot;] = &quot;Saarland&quot;\naliases[&quot;Saarlandish&quot;] = &quot;Saarland&quot;\n\
      \nlabels[&quot;Sahidic&quot;] = {\n\tdisplay = &quot;[[w:Coptic language#Sahidic|Sahidic]]&quot;,\n\tplain_categories = {&quot;Sahidic Coptic&quot;},\n}\naliases[&quot;Thebaic&quot;] = &quot;Sahidic&quot;\n\nlabels[&quot;Scottish English&quot;] = {\n\t\
      display = &quot;[[w:Scottish English|Scotland]]&quot;,\n\tplain_categories = {&quot;Scottish English&quot;},\n}\n\nlabels[&quot;Shapsug&quot;] = {\n\tdisplay = &quot;[[w:Shapsug Adyghe dialect|Shapsug dialect]]&quot;,\n\tplain_categories = {&quot;Shapsug\
      \ Adyghe&quot;},\n}\n\nlabels[&quot;Shopski&quot;] = {\n\tdisplay = &quot;[[w:Shopi#Dialects|Shopski]]&quot;,\n\tplain_categories = {&quot;Shopski Bulgarian&quot;},\n}\n\nlabels[&quot;Silla&quot;] = {\n\tplain_categories = {&quot;Silla Old Korean&quot;},\n\
      }\n\nlabels[&quot;Sistani&quot;] = {\n\tdisplay = &quot;[[w:Sistani dialect|Sistani]]&quot;,\n\tplain_categories = {&quot;Sistani Persian&quot;},\n}\n\nlabels[&quot;Skiri Pawnee&quot;] = {\n\tplain_categories = {&quot;Skiri Pawnee&quot;},\n}\n\nlabels[&quot;South\
      \ African English&quot;] = {\n\tdisplay = &quot;[[w:South African English|South Africa]]&quot;,\n\tplain_categories = {&quot;South African English&quot;},\n}\n\nlabels[&quot;South Scots&quot;] = {\n\tdisplay = &quot;[[w:Southern Scots|South Scots]]&quot;,\n\
      \tplain_categories = {&quot;South Scots&quot;},\n}\n\nlabels[&quot;Southern Dutch&quot;] = {\n\tdisplay = &quot;[[w:Dutch dialects|Southern]]&quot;,\n\tplain_categories = {&quot;Southern Dutch&quot;},\n}\n\nlabels[&quot;Southern England English&quot;]\
      \ = {\n\tdisplay = &quot;[[w:English in southern England|Southern England]]&quot;,\n\tplain_categories = {&quot;Southern England English&quot;},\n}\naliases[&quot;Southern English&quot;] = &quot;Southern England English&quot;\naliases[&quot;Southern English\
      \ dialect&quot;] = &quot;Southern England English&quot;\n\nlabels[&quot;Southern Germany&quot;] = {\n\tdisplay = &quot;[[w:Southern Germany|southern Germany]]&quot;,\n\tregional_categories = {&quot;Southern&quot;},\n}\naliases[&quot;southern Germany&quot;]\
      \ = &quot;southern Germany&quot;\naliases[&quot;Southern German&quot;] = &quot;southern Germany&quot;\naliases[&quot;southern German&quot;] = &quot;southern Germany&quot;\naliases[&quot;South Germany&quot;] = &quot;southern Germany&quot;\naliases[&quot;south\
      \ Germany&quot;] = &quot;southern Germany&quot;\naliases[&quot;South German&quot;] = &quot;southern Germany&quot;\naliases[&quot;south German&quot;] = &quot;southern Germany&quot;\n\nlabels[&quot;Southern US English&quot;] = {\n\tdisplay = &quot;[[w:Southern\
      \ American English|Southern US]]&quot;,\n\tplain_categories = {&quot;Southern US English&quot;},\n}\naliases[&quot;Southern American English&quot;] = &quot;Southern US English&quot;\n\nlabels[&quot;Surmiran&quot;] = {\n\tdisplay = &quot;[[w:Surmiran dialect|Surmiran]]&quot;,\n\
      \tplain_categories = {&quot;Surmiran Romansch&quot;},\n}\n\nlabels[&quot;Sursilvan&quot;] = {\n\tdisplay = &quot;[[w:Sursilvan dialects (Romansh)|Sursilvan]]&quot;,\n\tplain_categories = {&quot;Sursilvan Romansch&quot;},\n}\n\nlabels[&quot;Sussex&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Sussex dialect|Sussex]]&quot;,\n\tplain_categories = {&quot;Sussex English&quot;},\n}\n\nlabels[&quot;Sutsilvan&quot;] = {\n\tdisplay = &quot;[[w:Sutsilvan dialects (Romansh)|Sutsilvan]]&quot;,\n\tplain_categories = {&quot;Sutsilvan\
      \ Romansch&quot;},\n}\n\nlabels[&quot;Switzerland and Liechtenstein spelling&quot;] = {\n\tdisplay = &quot;[[Switzerland]] and [[Liechtenstein]]&quot;,\n\tplain_categories = {&quot;Switzerland and Liechtenstein German forms&quot;},\n}\naliases[&quot;SLDE&quot;]\
      \ = &quot;Switzerland and Liechtenstein spelling&quot;\n\nlabels[&quot;Taishanese&quot;] = {\n\tdisplay = &quot;[[w:Taishanese|Taishanese]]&quot;,\n\tplain_categories = {&quot;Taishanese Chinese&quot;},\n}\naliases[&quot;Hoisanese&quot;] = &quot;Taishanese&quot;\n\
      \nlabels[&quot;Taiwanese Mandarin&quot;] = {\n\tdisplay = &quot;[[w:Taiwanese Mandarin|Taiwan]]&quot;,\n\tplain_categories = {&quot;Taiwanese Mandarin&quot;},\n}\n\nlabels[&quot;Teochew&quot;] = {\n\tdisplay = &quot;[[w:Teochew dialect|Teochew]]&quot;,\n\
      \tplain_categories = {&quot;Teochew Chinese&quot;},\n}\n\nlabels[&quot;Tosk&quot;] = {\n\tdisplay = &quot;[[w:Tosk Albanian|Tosk]]&quot;,\n\tplain_categories = {&quot;Tosk Albanian&quot;},\n}\n\nlabels[&quot;Trás-os-Montes&quot;] = {\n\tdisplay = &quot;[[Trá\
      s-os-Montes]]&quot;,\n\tplain_categories = {&quot;Transmontane Portuguese&quot;},\n}\n\nlabels[&quot;Tyneside&quot;] = {\n\tplain_categories = {&quot;Geordie English&quot;},\n}\n\nlabels[&quot;Ulster Scots&quot;] = {\n\tdisplay = &quot;[[w:Ulster Scots\
      \ dialects|Ulster Scots]]&quot;,\n\tplain_categories = {&quot;Ulster Scots&quot;},\n}\naliases[&quot;Ullans&quot;] = &quot;Ulster Scots&quot;\n\nlabels[&quot;US English&quot;] = {\n\tdisplay = &quot;[[w:American English|US]]&quot;,\n\tplain_categories\
      \ = {&quot;American English&quot;},\n}\naliases[&quot;U.S. English&quot;] = &quot;US English&quot;\naliases[&quot;American English&quot;] = &quot;US English&quot;\n\nlabels[&quot;Vallader&quot;] = {\n\tdisplay = &quot;[[w:Vallader dialect (Romansh)|Vallader]]&quot;,\n\
      \tplain_categories = {&quot;Vallader Romansch&quot;},\n}\n\nlabels[&quot;Vivaro-Alpine&quot;] = {\n\tdisplay = &quot;[[w:Vivaro-Alpine dialect|Vivaro-Alpine]]&quot;,\n\tplain_categories = {&quot;Vivaro-Alpine Occitan&quot;},\n}\n\nlabels[&quot;Vulgar Latin&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Vulgar Latin|Vulgar Latin]]&quot;,\n\tplain_categories = {&quot;Vulgar Latin&quot;},\n}\n\nlabels[&quot;West Arabian&quot;] = {\n\tdisplay = &quot;Hejazi&quot;,\n\tplain_categories = {&quot;Hejazi Arabic&quot;},\n}\n\nlabels[&quot;West\
      \ Country English&quot;] = {\n\tdisplay = &quot;[[w:West Country English|West Country]]&quot;,\n\tplain_categories = {&quot;West Country English&quot;},\n}\naliases[&quot;West Country dialect&quot;] = &quot;West Country English&quot;\n\nlabels[&quot;West\
      \ Germanic&quot;] = {\n\tdisplay = &quot;[[w:West Germanic languages|West Germanic]]&quot;,\n\tplain_categories = {&quot;West Proto-Germanic&quot;},\n}\n\nlabels[&quot;West Midlands English&quot;] = {\n\tdisplay = &quot;[[w:West Midlands English|West Midlands]]&quot;,\n\
      \tplain_categories = {&quot;West Midlands English&quot;},\n}\naliases[&quot;West Midlands dialect&quot;] = &quot;West Midlands English&quot;\n\nlabels[&quot;Western Armenian&quot;] = {\n\tdisplay = &quot;[[w:Western Armenian|Western Armenian]]&quot;,\n\
      \tplain_categories = {&quot;Western Armenian&quot;},\n}\n\nlabels[&quot;Western Catalan&quot;] = {\n\tdisplay = &quot;[[w:Catalan dialects|Western Catalan]]&quot;,\n\tplain_categories = {&quot;Western Catalan&quot;},\n}\n\nlabels[&quot;Western Malayo-Polynesian&quot;]\
      \ = {\n\tdisplay = &quot;[[w:Western Malayo-Polynesian languages|Western Malayo-Polynesian]]&quot;,\n\tplain_categories = {&quot;Western Proto-Malayo-Polynesian&quot;},\n}\n\nlabels[&quot;Western Pomeranian Low German&quot;] = {\n\tdisplay = &quot;Western\
      \ Pomeranian&quot;,\n\tplain_categories = {&quot;Western Pomeranian Low German&quot;},\n}\naliases[&quot;West Pomeranian Low German&quot;] = &quot;Western Pomeranian Low German&quot;\naliases[&quot;Western Pomeranian LG&quot;] = &quot;Western Pomeranian\
      \ Low German&quot;\naliases[&quot;West Pomeranian LG&quot;] = &quot;Western Pomeranian Low German&quot;\n\nlabels[&quot;Western Samic&quot;] = {\n\tplain_categories = {&quot;Western Proto-Samic&quot;},\n}\n\nlabels[&quot;Wu&quot;] = {\n\tdisplay = &quot;[[w:Wu\
      \ Chinese|Wu]]&quot;,\n\tplain_categories = {&quot;Wu Chinese&quot;},\n}\n\nlabels[&quot;Xiang&quot;] = {\n\tdisplay = &quot;[[w:Xiang Chinese|Xiang]]&quot;,\n\tplain_categories = {&quot;Xiang Chinese&quot;},\n}\n\nlabels[&quot;Ye'kwana&quot;] = {\n\t\
      display = &quot;Ye'kwana dialect&quot;,\n\tplain_categories = {&quot;Ye'kwana Maquiritari&quot;},\n}\naliases[&quot;Ye'kwana dialect&quot;] = &quot;Ye'kwana&quot;\n\nreturn {labels = labels, aliases = aliases, deprecated = deprecated}</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:32.227Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Asuffixsee&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=29050 t=1471300172124030
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1208.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1054 pass, cp3032 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 329476464, 2169872295, 1214018627
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="1877023" pageid="1877023" ns="10" title="Template:suffixsee"><revisions><rev user="DTLHS" timestamp="2015-09-03T18:34:28Z" comment="Reverted edits by [[Special:Contributions/DTLHS|DTLHS]]. If you think this rollback is in error, please leave a message on my talk page." contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:compound/templates|derivsee|derivtype=suffix}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2016-08-15T22:29:32.430Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Acompound%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=23587 t=1471300172327927
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1287.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1066 pass, cp3030 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 3508242631, 2670466836, 1214019047
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4534570\" pageid=\"4534570\" ns=\"828\" title=\"Module:compound/templates\"><revisions><rev user=\"CodeCat\" timestamp=\"2016-05-30T16:57:21Z\" comment=\"\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local m_compound = require(&quot;Module:compound&quot;)\n\nlocal export = {}\n\nlocal function get_part(args, offset, i)\n\toffset = offset or 0\n\t\n\tlocal term = args[i + offset]; if term\
      \ == &quot;&quot; then term = nil end\n\tlocal alt = args[&quot;alt&quot; .. i]; if alt == &quot;&quot; then alt = nil end\n\tlocal id = args[&quot;id&quot; .. i]; if id == &quot;&quot; then id = nil end\n\tlocal lang = args[&quot;lang&quot; .. i]; if\
      \ lang == &quot;&quot; then lang = nil end\n\tlocal sc = args[&quot;sc&quot; .. i]; if sc == &quot;&quot; then sc = nil end\n\t\n\tlocal tr = args[&quot;tr&quot; .. i]; if tr == &quot;&quot; then tr = nil end\n\tlocal gloss = args[&quot;t&quot; .. i] or\
      \ args[&quot;gloss&quot; .. i]; if gloss == &quot;&quot; then gloss = nil end\n\tlocal pos = args[&quot;pos&quot; .. i]; if pos == &quot;&quot; then pos = nil end\n\tlocal lit = args[&quot;lit&quot; .. i]; if lit == &quot;&quot; then lit = nil end\n\t\n\
      \tif lang then\n\t\tlang =\n\t\t\trequire(&quot;Module:languages&quot;).getByCode(lang) or\n\t\t\trequire(&quot;Module:etymology languages&quot;).getByCode(lang) or\n\t\t\terror(&quot;The language or etymology language code \\&quot;&quot; .. lang .. &quot;\\\
      &quot; is not valid.&quot;)\n\tend\n\t\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\tif not term and not alt and not tr then\n\
      \t\treturn nil\n\telse\n\t\treturn {term = term, alt = alt, id = id, lang = lang, sc = sc, tr = tr, gloss = gloss, pos = pos, lit = lit}\n\tend\nend\n\nlocal function get_parts(args, offset, i)\n\tlocal parts = {}\n\ti = i or 1\n\t\n\twhile true do\n\t\
      \tlocal part = get_part(args, offset, i)\n\t\t\n\t\tif not part then\n\t\t\tbreak\n\t\tend\n\t\t\n\t\ttable.insert(parts, part)\n\t\t\n\t\ti = i + 1\n\tend\n\t\n\treturn parts\nend\n\nfunction export.affix(frame)\n\tlocal args = frame:getParent().args\n\
      \t\n\tlocal lang = args[1]; if lang == &quot;&quot; then lang = nil end\n\tlocal sc = args[&quot;sc&quot;] or &quot;&quot;; if sc == &quot;&quot; then sc = nil end\n\tlocal pos = args[&quot;pos&quot;]; if pos == &quot;&quot; then pos = nil end\n\tlocal\
      \ sort_key = args[&quot;sort&quot;]; if sort_key == &quot;&quot; then sort_key = nil end\n\tlocal nocat = args[&quot;nocat&quot;]; if not nocat or nocat == &quot;&quot; then nocat = false else nocat = true end\n\t\n\tif not lang then\n\t\tif mw.title.getCurrentTitle().nsText\
      \ == &quot;Template&quot; then\n\t\t\tlang = &quot;und&quot;\n\t\telse\n\t\t\terror(&quot;Language code has not been specified. Please pass parameter 1 to the template.&quot;)\n\t\tend\n\tend\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang)\
      \ or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;))\
      \ or nil)\n\t\n\tlocal parts = get_parts(args, 1)\n\t\n\t-- There must be at least one part to display.\n\tif #parts &lt; 1 then\n\t\tif mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\t\tparts = { {term = &quot;prefix-&quot;}, {term\
      \ = &quot;base&quot;}, {term = &quot;-suffix&quot;} }\n\t\telse\n\t\t\terror(&quot;You must provide at least one part.&quot;)\n\t\tend\n\tend\n\t\n\treturn m_compound.show_affixes(lang, sc, parts, pos, sort_key, nocat)\nend\n\nfunction export.compound(frame)\n\
      \tlocal args = frame:getParent().args\n\tlocal compat = true\n\t\n\tlocal lang = args[&quot;lang&quot;]; if lang == &quot;&quot; then lang = nil end\n\tlocal sc = args[&quot;sc&quot;] or &quot;&quot;; if sc == &quot;&quot; then sc = nil end\n\tlocal pos\
      \ = args[&quot;pos&quot;]; if pos == &quot;&quot; then pos = nil end\n\tlocal sort_key = args[&quot;sort&quot;]; if sort_key == &quot;&quot; then sort_key = nil end\n\tlocal nocat = args[&quot;nocat&quot;]; if not nocat or nocat == &quot;&quot; then nocat\
      \ = false else nocat = true end\n\t\n\tif not lang then\n\t\tcompat = false\n\t\tlang = args[1]; if lang == &quot;&quot; then lang = nil end\n\tend\n\t\n\tif not lang and mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\tlang = &quot;und&quot;\n\
      \tend\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The\
      \ script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\tlocal parts = get_parts(args, compat and 0 or 1)\n\t\n\t-- There must be at least one part to display.\n\tif #parts &lt; 1 then\n\t\tif mw.title.getCurrentTitle().nsText\
      \ == &quot;Template&quot; then\n\t\t\tparts = { {term = &quot;first&quot;}, {term = &quot;second&quot;} }\n\t\telse\n\t\t\terror(&quot;You must provide at least one part of a compound.&quot;)\n\t\tend\n\tend\n\t\n\treturn m_compound.show_compound(lang,\
      \ sc, parts, pos, sort_key, nocat)\nend\n\nfunction export.interfix_compound(frame)\n\tlocal args = frame:getParent().args\n\t\n\tlocal lang = args[1]; if lang == &quot;&quot; then lang = nil end\n\tlocal sc = args[&quot;sc&quot;] or &quot;&quot;; if sc\
      \ == &quot;&quot; then sc = nil end\n\tlocal sort_key = args[&quot;sort&quot;]; if sort_key == &quot;&quot; then sort_key = nil end\n\tlocal nocat = args[&quot;nocat&quot;]; if not nocat or nocat == &quot;&quot; then nocat = false else nocat = true end\n\
      \tlocal pos = args[&quot;pos&quot;]; if pos == &quot;&quot; then pos = nil end\n\t\n\tif not lang then\n\t\tif mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\t\tlang = &quot;und&quot;\n\t\telse\n\t\t\terror(&quot;Language code has not\
      \ been specified. Please pass parameter 1 to the template.&quot;)\n\t\tend\n\tend\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tsc =\
      \ (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\tlocal parts = get_parts(args, 1)\n\tlocal base1 = parts[1]\n\tlocal interfix = parts[2]\n\
      \tlocal base2 = parts[3]\n\t\n\t-- Just to make sure someone didn't use the template in a silly way\n\tif not (base1 and interfix and base2) then\n\t\tif mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\t\tbase1 = {term = &quot;base1&quot;}\n\
      \t\t\tinterfix = {term = &quot;interfix&quot;}\n\t\t\tbase2 = {term = &quot;base2&quot;}\n\t\telse\n\t\t\terror(&quot;You must provide a base term, an interfix and a second base term.&quot;)\n\t\tend\n\tend\n\t\n\treturn m_compound.show_interfix_compound(lang,\
      \ sc, base1, interfix, base2, pos, sort_key, nocat)\nend\n\nfunction export.circumfix(frame)\n\tlocal args = frame:getParent().args\n\tlocal compat = true\n\t\n\tlocal lang = args[&quot;lang&quot;]; if lang == &quot;&quot; then lang = nil end\n\tlocal\
      \ sc = args[&quot;sc&quot;] or &quot;&quot;; if sc == &quot;&quot; then sc = nil end\n\tlocal sort_key = args[&quot;sort&quot;]; if sort_key == &quot;&quot; then sort_key = nil end\n\tlocal nocat = args[&quot;nocat&quot;]; if not nocat or nocat == &quot;&quot;\
      \ then nocat = false else nocat = true end\n\tlocal pos = args[&quot;pos&quot;]; if pos == &quot;&quot; then pos = nil end\n\t\n\tif not lang then\n\t\tcompat = false\n\t\tlang = args[1]; if lang == &quot;&quot; then lang = nil end\n\tend\n\t\n\tif not\
      \ lang and mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\tlang = &quot;und&quot;\n\tend\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is\
      \ not valid.&quot;)\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\tlocal parts = get_parts(args, compat and 0 or 1)\n\tlocal\
      \ prefix = parts[1]\n\tlocal base = parts[2]\n\tlocal suffix = parts[3]\n\t\n\t-- Just to make sure someone didn't use the template in a silly way\n\tif not (prefix and base and suffix) then\n\t\tif mw.title.getCurrentTitle().nsText == &quot;Template&quot;\
      \ then\n\t\t\tprefix = {term = &quot;circumfix&quot;, alt = &quot;prefix&quot;}\n\t\t\tbase = {term = &quot;base&quot;}\n\t\t\tsuffix = {term = &quot;circumfix&quot;, alt = &quot;suffix&quot;}\n\t\telse\n\t\t\terror(&quot;You must specify a prefix part,\
      \ a base term and a suffix part.&quot;)\n\t\tend\n\tend\n\t\n\treturn m_compound.show_circumfix(lang, sc, prefix, base, suffix, pos, sort_key, nocat)\nend\n\nfunction export.confix(frame)\n\tlocal args = frame:getParent().args\n\tlocal compat = true\n\t\
      \n\tlocal lang = args[&quot;lang&quot;]; if lang == &quot;&quot; then lang = nil end\n\tlocal sc = args[&quot;sc&quot;] or &quot;&quot;; if sc == &quot;&quot; then sc = nil end\n\tlocal sort_key = args[&quot;sort&quot;]; if sort_key == &quot;&quot; then\
      \ sort_key = nil end\n\tlocal nocat = args[&quot;nocat&quot;]; if not nocat or nocat == &quot;&quot; then nocat = false else nocat = true end\n\tlocal pos = args[&quot;pos&quot;]; if pos == &quot;&quot; then pos = nil end\n\t\n\tif not lang then\n\t\t\
      compat = false\n\t\tlang = args[1]; if lang == &quot;&quot; then lang = nil end\n\tend\n\t\n\tif not lang and mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\tlang = &quot;und&quot;\n\tend\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang)\
      \ or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;))\
      \ or nil)\n\t\n\tlocal parts = get_parts(args, compat and 0 or 1)\n\tlocal prefix = parts[1]\n\tlocal base = #parts &gt;= 3 and parts[2] or nil\n\tlocal suffix = #parts &gt;= 3 and parts[3] or parts[2]\n\t\n\t-- Just to make sure someone didn't use the\
      \ template in a silly way\n\tif not (prefix and suffix) then\n\t\tif mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\t\tprefix = {term = &quot;prefix&quot;}\n\t\t\tsuffix = {term = &quot;suffix&quot;}\n\t\telse\n\t\t\terror(&quot;You\
      \ must specify a prefix part, an optional base term and a suffix part.&quot;)\n\t\tend\n\tend\n\t\n\treturn m_compound.show_confix(lang, sc, prefix, base, suffix, pos, sort_key, nocat)\nend\n\nfunction export.infix(frame)\n\tlocal args = frame:getParent().args\n\
      \tlocal compat = true\n\t\n\tlocal lang = args[&quot;lang&quot;]; if lang == &quot;&quot; then lang = nil end\n\tlocal sc = args[&quot;sc&quot;] or &quot;&quot;; if sc == &quot;&quot; then sc = nil end\n\tlocal sort_key = args[&quot;sort&quot;]; if sort_key\
      \ == &quot;&quot; then sort_key = nil end\n\tlocal nocat = args[&quot;nocat&quot;]; if not nocat or nocat == &quot;&quot; then nocat = false else nocat = true end\n\tlocal pos = args[&quot;pos&quot;]; if pos == &quot;&quot; then pos = nil end\n\t\n\tif\
      \ not lang then\n\t\tcompat = false\n\t\tlang = args[1]; if lang == &quot;&quot; then lang = nil end\n\tend\n\t\n\tif not lang and mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\tlang = &quot;und&quot;\n\tend\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang)\
      \ or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;))\
      \ or nil)\n\t\n\tlocal parts = get_parts(args, compat and 0 or 1)\n\tlocal base = parts[1]\n\tlocal infix = parts[2]\n\t\n\t-- Just to make sure someone didn't use the template in a silly way\n\tif not (base and infix) then\n\t\tif mw.title.getCurrentTitle().nsText\
      \ == &quot;Template&quot; then\n\t\t\tbase = {term = &quot;base&quot;}\n\t\t\tinfix = {term = &quot;infix&quot;}\n\t\telse\n\t\t\terror(&quot;You must provide a base term and an infix.&quot;)\n\t\tend\n\tend\n\t\n\treturn m_compound.show_infix(lang, sc,\
      \ base, infix, pos, sort_key, nocat)\nend\n\nfunction export.prefix(frame)\n\tlocal args = frame:getParent().args\n\tlocal compat = true\n\t\n\tlocal lang = args[&quot;lang&quot;]; if lang == &quot;&quot; then lang = nil end\n\tlocal sc = args[&quot;sc&quot;]\
      \ or &quot;&quot;; if sc == &quot;&quot; then sc = nil end\n\tlocal sort_key = args[&quot;sort&quot;]; if sort_key == &quot;&quot; then sort_key = nil end\n\tlocal nocat = args[&quot;nocat&quot;]; if not nocat or nocat == &quot;&quot; then nocat = false\
      \ else nocat = true end\n\tlocal pos = args[&quot;pos&quot;]; if pos == &quot;&quot; then pos = nil end\n\t\n\tif not lang then\n\t\tcompat = false\n\t\tlang = args[1]; if lang == &quot;&quot; then lang = nil end\n\tend\n\t\n\tif not lang and mw.title.getCurrentTitle().nsText\
      \ == &quot;Template&quot; then\n\t\tlang = &quot;und&quot;\n\tend\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc)\
      \ or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\tlocal prefixes = get_parts(args, compat and 0 or 1)\n\tlocal base = nil\n\t\n\tif #prefixes &gt;= 2 then\n\t\tbase = prefixes[#prefixes]\n\t\t\
      prefixes[#prefixes] = nil\n\tend\n\t\n\t-- Just to make sure someone didn't use the template in a silly way\n\tif #prefixes == 0 then\n\t\tif mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\t\tbase = {term = &quot;base&quot;}\n\t\t\t\
      prefixes = { {term = &quot;prefix&quot;} }\n\t\telse\n\t\t\terror(&quot;You must provide at least one prefix.&quot;)\n\t\tend\n\tend\n\t\n\treturn m_compound.show_prefixes(lang, sc, prefixes, base, pos, sort_key, nocat)\nend\n\nfunction export.suffix(frame)\n\
      \tlocal args = frame:getParent().args\n\tlocal compat = true\n\t\n\tlocal lang = args[&quot;lang&quot;]; if lang == &quot;&quot; then lang = nil end\n\tlocal sc = args[&quot;sc&quot;] or &quot;&quot;; if sc == &quot;&quot; then sc = nil end\n\tlocal sort_key\
      \ = args[&quot;sort&quot;]; if sort_key == &quot;&quot; then sort_key = nil end\n\tlocal nocat = args[&quot;nocat&quot;]; if not nocat or nocat == &quot;&quot; then nocat = false else nocat = true end\n\tlocal pos = args[&quot;pos&quot;]; if pos == &quot;&quot;\
      \ then pos = nil end\n\t\n\tif not lang then\n\t\tcompat = false\n\t\tlang = args[1]; if lang == &quot;&quot; then lang = nil end\n\tend\n\t\n\tif not lang and mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\tlang = &quot;und&quot;\n\
      \tend\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The\
      \ script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\tlocal base = get_part(args, compat and 0 or 1, 1)\n\tlocal suffixes = get_parts(args, compat and 0 or 1, 2)\n\t\n\t-- Just to make sure someone didn't use the template\
      \ in a silly way\n\tif #suffixes == 0 then\n\t\tif mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\t\tbase = {term = &quot;base&quot;}\n\t\t\tsuffixes = { {term = &quot;suffix&quot;} }\n\t\telse\n\t\t\terror(&quot;You must provide at\
      \ least one suffix.&quot;)\n\t\tend\n\tend\n\t\n\treturn m_compound.show_suffixes(lang, sc, base, suffixes, pos, sort_key, nocat)\nend\n\nfunction export.derivsee(frame)\n\tlocal args = frame:getParent().args\n\t\n\tlocal derivtype = frame.args[&quot;derivtype&quot;]\n\
      \tlocal mode = frame.args[&quot;mode&quot;]; if mode == &quot;&quot; then mode = nil end\n\tlocal lang\n\tlocal term\n\t\n\tif derivtype == &quot;PIE root&quot; then\n\t\tlang = &quot;ine-pro&quot;\n\t\tterm = args[1] or args[&quot;head&quot;]; if term\
      \ == &quot;&quot; then term = nil end\n\n\t\tif term then\n\t\t\tterm = &quot;*&quot; .. term .. &quot;-&quot;\n\t\tend\n\telse\n\t\tlang = args[1] or (mw.title.getCurrentTitle().nsText == &quot;Template&quot; and &quot;und&quot;) or error(&quot;Language\
      \ code has not been specified. Please pass parameter 1 to the template.&quot;)\n\t\tterm = args[2] or args[&quot;head&quot;]; if term == &quot;&quot; then term = nil end\n\tend\n\t\n\tlocal id = args[&quot;id&quot;]; if id == &quot;&quot; then id = nil\
      \ end\n\tlocal sc = args[&quot;sc&quot;]; if sc == &quot;&quot; then sc = nil end\n\tlocal pos = args[&quot;pos&quot;]; if pos == &quot;&quot; then pos = nil end\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang)\n\tsc = (sc and require(&quot;Module:scripts&quot;).getByCode(sc)\
      \ or nil)\n\t\n\tpos = pos or &quot;word&quot;\n\t\n\t-- Pluralize the part of speech name\n\tif pos:find(&quot;[sx]$&quot;) then\n\t\tpos = pos .. &quot;es&quot;\n\telse\n\t\tpos = pos .. &quot;s&quot;\n\tend\n\t\n\tif not term then\n\t\tif lang:getType()\
      \ == &quot;reconstructed&quot; then\n\t\t\tterm = &quot;*&quot; .. mw.title.getCurrentTitle().subpageText\n\t\telseif lang:getType() == &quot;appendix-constructed&quot; then\n\t\t\tterm = mw.title.getCurrentTitle().subpageText\n\t\telseif mw.title.getCurrentTitle().nsText\
      \ == &quot;Reconstruction&quot; then\n\t\t\tterm = &quot;*&quot; .. mw.title.getCurrentTitle().subpageText\n\t\telse\n\t\t\tterm = mw.title.getCurrentTitle().subpageText\n\t\tend\n\tend\n\t\n\tlocal category = nil\n\t\n\tif derivtype == &quot;PIE root&quot;\
      \ then\n\t\treturn frame:callParserFunction{\n\t\t\tname = &quot;#categorytree&quot;,\n\t\t\targs = {\n\t\t\t\t&quot;Terms derived from the PIE root &quot; .. term .. (id and &quot; (&quot; .. id .. &quot;)&quot; or &quot;&quot;),\n\t\t\t\tdepth = 0,\n\
      \t\t\t\tclass = &quot;\\&quot;derivedterms\\&quot;&quot;,\n\t\t\t\tmode = mode,\n\t\t\t\t}\n\t\t\t}\n\tend\n\t\n\tif derivtype == &quot;compound&quot; then\n\t\tcategory = lang:getCanonicalName() .. &quot; compounds with &quot; .. term\n\telse\n\t\tcategory\
      \ = lang:getCanonicalName() .. &quot; &quot; .. pos .. &quot; &quot; .. derivtype .. &quot;ed with &quot; .. term .. (id and &quot; (&quot; .. id .. &quot;)&quot; or &quot;&quot;)\n\tend\n\t\n\treturn frame:callParserFunction{\n\t\tname = &quot;#categorytree&quot;,\n\
      \t\targs = {\n\t\t\tcategory,\n\t\t\tdepth = 0,\n\t\t\tclass = &quot;\\&quot;derivedterms&quot; .. (sc and &quot; &quot; .. sc:getCode() or &quot;&quot;) .. &quot;\\&quot;&quot;,\n\t\t\tnamespaces = &quot;-&quot; .. (mw.title.getCurrentTitle().nsText ==\
      \ &quot;Reconstruction&quot; and &quot; Reconstruction&quot; or &quot;&quot;),\n\t\t\t}\n\t\t}\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-08-15T22:29:32.715Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Acompound&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Porto:41.15:-8.61:v4; WMF-Last-Access=15-Aug-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=31553 t=1471300172598557
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Aug 2016 22:29:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1199.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Aug-2016;https=1
      X-Cache: cp1066 pass, cp3032 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.1
      X-Varnish: 3508243437, 2169872613, 1214019493
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4105621\" pageid=\"4105621\" ns=\"828\" title=\"Module:compound\"><revisions><rev user=\"CodeCat\" timestamp=\"2016-05-30T16:54:04Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local m_links = require(&quot;Module:links&quot;)\nlocal m_utilities = require(&quot;Module:utilities&quot;)\n\nlocal export = {}\n\n-- FIXME: should be script-based\n-- But we can't do that unless we\
      \ do script detection before linking.\nlocal hyphens = {\n\t[&quot;ar&quot;] = &quot;ـ&quot;,\n\t[&quot;fa&quot;] = &quot;ـ&quot;,\n\t[&quot;he&quot;] = &quot;־&quot;,\n\t[&quot;ja&quot;] = &quot;&quot;,\n\t[&quot;ko&quot;] = &quot;&quot;,\n\t[&quot;yi&quot;]\
      \ = &quot;־&quot;,\n\t[&quot;zh&quot;] = &quot;&quot;,\n}\n\n\nlocal function link_term(terminfo, lang, sc)\n\tlocal terminfo_new = {}\n\t\n\tfor key, val in pairs(terminfo) do\n\t\tterminfo_new[key] = val\n\tend\n\t\n\tif terminfo_new.lang then\n\t\t\
      return require(&quot;Module:etymology&quot;).format_borrowed(lang, terminfo, sort_key, false, true)\n\telse\n\t\tterminfo_new.lang = lang\n\t\tterminfo_new.sc = terminfo_new.sc or sc\n\t\treturn m_links.full_link(terminfo_new, &quot;term&quot;, false)\n\
      \tend\nend\n\n\nlocal function get_hyphen(lang, sc)\n\t--The script will be &quot;Latn&quot; for transliterations.\n\tif sc and sc:getCode() == &quot;Latn&quot; then\n\t\treturn &quot;-&quot;\n\telse\n\t\treturn hyphens[lang:getCode()] or &quot;-&quot;\n\
      \tend\nend\n\n\nlocal function get_affix_type(lang, sc, part)\n\tif not part then\n\t\treturn nil\n\tend\n\t\n\tlocal hyphen = get_hyphen(lang, sc)\n\t\n\tpart = part:gsub(&quot;^*&quot;, &quot;&quot;)\n\n\tif mw.ustring.sub(part, 1, 1) == hyphen and mw.ustring.sub(part,\
      \ -1) == hyphen then\n\t\treturn &quot;infix&quot;\n\telseif mw.ustring.sub(part, -1) == hyphen then\n\t\treturn &quot;prefix&quot;\n\telseif mw.ustring.sub(part, 1, 1) == hyphen then\n\t\treturn &quot;suffix&quot;\n\telse\n\t\treturn nil\n\tend\nend\n\
      \n\nfunction export.show_affixes(lang, sc, parts, pos, sort_key, nocat)\n\tpos = pos or &quot;words&quot;\n\t\n\t-- Process each part\n\tlocal parts_formatted = {}\n\tlocal categories_formatted = {}\n\tlocal whole_words = 0\n\t\n\tfor i, part in ipairs(parts)\
      \ do\n\t\t-- Make a link for the part\n\t\ttable.insert(parts_formatted, link_term(part, lang, sc, sort_key))\n\t\t\n\t\t-- Is it an affix, and if so, what type of affix?\n\t\tlocal affix_type = get_affix_type(part.lang or lang, part.sc or sc, part.term)\n\
      \t\t\n\t\tif affix_type then\n\t\t\t-- Make a sort key\n\t\t\t-- For the first part, use the second part as the sort key\n\t\t\tlocal part_sort_base = nil\n\t\t\tlocal part_sort = part.sort or sort_key\n\t\t\t\n\t\t\tif i == 1 and parts[2] and parts[2].term\
      \ then\n\t\t\t\tpart_sort_base = lang:makeEntryName(parts[2].term)\n\t\t\tend\n\t\t\t\n\t\t\tif affix_type == &quot;infix&quot; then affix_type = &quot;interfix&quot; end\n\t\t\t\n\t\t\ttable.insert(categories_formatted, m_utilities.format_categories({lang:getCanonicalName()\
      \ .. &quot; &quot; .. pos .. &quot; &quot; .. affix_type .. &quot;ed with &quot; .. lang:makeEntryName(part.term) .. (part.id and &quot; (&quot; .. part.id .. &quot;)&quot; or &quot;&quot;)}, lang, part_sort, part_sort_base))\n\t\telse\n\t\t\twhole_words\
      \ = whole_words + 1\n\t\t\t\n\t\t\tif whole_words == 2 then\n\t\t\t\ttable.insert(categories_formatted, m_utilities.format_categories({lang:getCanonicalName() .. &quot; compound &quot; .. pos}, lang, sort_key))\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- If there\
      \ are no categories, then there were no actual affixes, only regular words.\n\t-- This function does not support compounds (yet?), so show an error.\n\tif #categories_formatted == 0 then\n\t\terror(&quot;The parameters did not include any affixes, and\
      \ the word is not a compound. Please provide at least one affix.&quot;)\n\tend\n\t\n\treturn table.concat(parts_formatted, &quot; +&amp;lrm; &quot;) .. (nocat and &quot;&quot; or table.concat(categories_formatted))\nend\n\n\nfunction export.show_compound(lang,\
      \ sc, parts, pos, sort_key, nocat)\n\tpos = pos or &quot;words&quot;\n\tlocal parts_formatted = {}\n\tlocal categories_formatted = {}\n\ttable.insert(categories_formatted, m_utilities.format_categories({lang:getCanonicalName() .. &quot; compound words&quot;},\
      \ lang, sort_key))\n\t\n\t-- Make links out of all the parts\n\tlocal whole_words = 0\n\tfor i, part in ipairs(parts) do\n\t\ttable.insert(parts_formatted, link_term(part, lang, sc, sort_key))\n\t\t\n\t\tlocal affix_type = get_affix_type(part.lang or lang,\
      \ part.sc or sc, part.term)\n\t\t\n\t\tif affix_type == &quot;infix&quot; then\n\t\t\ttable.insert(categories_formatted, m_utilities.format_categories({lang:getCanonicalName() .. &quot; &quot; .. pos .. &quot; interfixed with &quot; .. lang:makeEntryName(part.term)},\
      \ lang, part.sort or sort_key))\n\t\telseif affix_type then\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;compound&quot;)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;compound/&quot; .. affix_type)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;compound/&quot;\
      \ .. affix_type .. &quot;/lang/&quot; .. lang:getCode())\n\t\telse\n\t\t\twhole_words = whole_words + 1\n\t\tend\n\tend\n\n\tif whole_words == 1 then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;compound/one whole word&quot;)\n\telseif whole_words\
      \ == 0 then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;compound/looks like confix&quot;)\n\tend\n\t\n\treturn table.concat(parts_formatted, &quot; +&amp;lrm; &quot;) .. (nocat and &quot;&quot; or table.concat(categories_formatted))\nend\n\n\nfunction\
      \ export.show_circumfix(lang, sc, prefix, base, suffix, pos, sort_key, nocat)\n\tlocal categories = {}\n\tpos = pos or &quot;word&quot;\n\t\n\t-- Pluralize the part of speech name\n\tif pos:find(&quot;[sx]$&quot;) then\n\t\tpos = pos .. &quot;es&quot;\n\
      \telse\n\t\tpos = pos .. &quot;s&quot;\n\tend\n\t\n\t-- Hyphenate the affixes\n\tprefix.term = export.make_affix(prefix.term, prefix.lang or lang, prefix.sc or sc, &quot;prefix&quot;)\n\tprefix.alt = export.make_affix(prefix.alt, prefix.lang or lang, prefix.sc\
      \ or sc, &quot;prefix&quot;)\n\t\n\tif prefix.annotations then\n\t\tprefix.annotations.tr = export.make_affix(prefix.annotations.tr, prefix.lang or lang, require(&quot;Module:scripts&quot;).getByCode(&quot;Latn&quot;), &quot;prefix&quot;)\n\tend\n\t\n\t\
      suffix.term = export.make_affix(suffix.term, suffix.lang or lang, suffix.sc or sc, &quot;suffix&quot;)\n\tsuffix.alt = export.make_affix(suffix.alt, suffix.lang or lang, suffix.sc or sc, &quot;suffix&quot;)\n\t\n\tif suffix.annotations then\n\t\tsuffix.annotations.tr\
      \ = export.make_affix(suffix.annotations.tr, suffix.lang or lang, require(&quot;Module:scripts&quot;).getByCode(&quot;Latn&quot;), &quot;suffix&quot;)\n\tend\n\t\n\tlocal prefix_affix_type = get_affix_type(prefix.lang or lang, prefix.sc or sc, prefix.term)\n\
      \tif prefix_affix_type ~= &quot;prefix&quot; then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;circumfix&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;circumfix/prefix&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;circumfix/prefix/&quot;\
      \ .. (prefix_affix_type or &quot;none&quot;))\n\t\trequire(&quot;Module:debug&quot;).track(&quot;circumfix/prefix/&quot; .. (prefix_affix_type or &quot;none&quot;) .. &quot;/lang/&quot; .. lang:getCode())\n\tend\n\t\n\tlocal base_affix_type = get_affix_type(base.lang\
      \ or lang, base.sc or sc, base.term)\n\tif base_affix_type then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;circumfix&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;circumfix/base&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;circumfix/base/&quot;\
      \ .. base_affix_type)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;circumfix/base/&quot; .. base_affix_type .. &quot;/lang/&quot; .. lang:getCode())\n\tend\n\t\n\tlocal suffix_affix_type = get_affix_type(suffix.lang or lang, suffix.sc or sc, suffix.term)\n\
      \tif suffix_affix_type ~= &quot;suffix&quot; then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;circumfix&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;circumfix/suffix&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;circumfix/suffix/&quot;\
      \ .. (suffix_affix_type or &quot;none&quot;))\n\t\trequire(&quot;Module:debug&quot;).track(&quot;circumfix/suffix/&quot; .. (suffix_affix_type or &quot;none&quot;) .. &quot;/lang/&quot; .. lang:getCode())\n\tend\n\t\n\t-- Create circumfix term\n\tlocal\
      \ circumfix = nil\n\t\n\tif prefix.term and suffix.term then\n\t\tcircumfix = prefix.term .. &quot; &quot; .. suffix.term\n\t\tprefix.alt = prefix.alt or prefix.term\n\t\tsuffix.alt = suffix.alt or suffix.term\n\t\tprefix.term = circumfix\n\t\tsuffix.term\
      \ = circumfix\n\tend\n\t\n\t-- Make links out of all the parts\n\tlocal parts_formatted = {}\n\tlocal sort_base = lang:makeEntryName(base.term)\n\t\n\ttable.insert(parts_formatted, link_term(prefix, lang, sc, sort_key))\n\ttable.insert(parts_formatted,\
      \ link_term(base, lang, sc, sort_key))\n\ttable.insert(parts_formatted, link_term(suffix, lang, sc, sort_key))\n\t\n\t-- Insert the categories\n\ttable.insert(categories, lang:getCanonicalName() .. &quot; &quot; .. pos .. &quot; circumfixed with &quot;\
      \ .. lang:makeEntryName(circumfix, lang))\n\t\n\treturn table.concat(parts_formatted, &quot; +&amp;lrm; &quot;) .. (nocat and &quot;&quot; or m_utilities.format_categories(categories, lang, sort_key, sort_base))\nend\n\n\nfunction export.show_confix(lang,\
      \ sc, prefix, base, suffix, pos, sort_key, nocat)\n\tpos = pos or &quot;word&quot;\n\t\n\t-- Pluralize the part of speech name\n\tif pos:find(&quot;[sx]$&quot;) then\n\t\tpos = pos .. &quot;es&quot;\n\telse\n\t\tpos = pos .. &quot;s&quot;\n\tend\n\t\n\t\
      -- Hyphenate the affixes\n\tprefix.term = export.make_affix(prefix.term, prefix.lang or lang, prefix.sc or sc, &quot;prefix&quot;)\n\tprefix.alt = export.make_affix(prefix.alt, prefix.lang or lang, prefix.sc or sc, &quot;prefix&quot;)\n\t\n\tif prefix.annotations\
      \ then\n\t\tprefix.annotations.tr = export.make_affix(prefix.annotations.tr, prefix.lang or lang, require(&quot;Module:scripts&quot;).getByCode(&quot;Latn&quot;), &quot;prefix&quot;)\n\tend\n\t\n\tsuffix.term = export.make_affix(suffix.term, suffix.lang\
      \ or lang, suffix.sc or sc, &quot;suffix&quot;)\n\tsuffix.alt = export.make_affix(suffix.alt, suffix.lang or lang, suffix.sc or sc, &quot;suffix&quot;)\n\t\n\tif suffix.annotations then\n\t\tsuffix.annotations.tr = export.make_affix(suffix.annotations.tr,\
      \ suffix.lang or lang, require(&quot;Module:scripts&quot;).getByCode(&quot;Latn&quot;), &quot;suffix&quot;)\n\tend\n\t\n\tlocal prefix_affix_type = get_affix_type(prefix.lang or lang, prefix.sc or sc, prefix.term)\n\tif prefix_affix_type ~= &quot;prefix&quot;\
      \ then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;confix&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;confix/prefix&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;confix/prefix/&quot; .. (prefix_affix_type or &quot;none&quot;))\n\
      \t\trequire(&quot;Module:debug&quot;).track(&quot;confix/prefix/&quot; .. (prefix_affix_type or &quot;none&quot;) .. &quot;/lang/&quot; .. lang:getCode())\n\tend\n\t\n\tif base then\n\t\tlocal base_affix_type = get_affix_type(base.lang or lang, base.sc\
      \ or sc, base.term)\n\t\tif base_affix_type then\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;confix&quot;)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;confix/base&quot;)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;confix/base/&quot;\
      \ .. base_affix_type)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;confix/base/&quot; .. base_affix_type .. &quot;/lang/&quot; .. lang:getCode())\n\t\tend\n\tend\n\t\n\tlocal suffix_affix_type = get_affix_type(suffix.lang or lang, suffix.sc or\
      \ sc, suffix.term)\n\tif suffix_affix_type ~= &quot;suffix&quot; then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;confix&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;confix/suffix&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;confix/suffix/&quot;\
      \ .. (suffix_affix_type or &quot;none&quot;))\n\t\trequire(&quot;Module:debug&quot;).track(&quot;confix/suffix/&quot; .. (suffix_affix_type or &quot;none&quot;) .. &quot;/lang/&quot; .. lang:getCode())\n\tend\n\t\n\t-- Make links out of all the parts\n\
      \tlocal parts_formatted = {}\n\tlocal prefix_sort_base = lang:makeEntryName(suffix.term)\n\tlocal prefix_categories = {}\n\tlocal suffix_categories = {}\n\t\n\ttable.insert(parts_formatted, link_term(prefix, lang, sc, sort_key))\n\ttable.insert(prefix_categories,\
      \ lang:getCanonicalName() .. &quot; &quot; .. pos .. &quot; prefixed with &quot; .. lang:makeEntryName(prefix.term, lang))\n\t\n\tif base then\n\t\tprefix_sort_base = lang:makeEntryName(base.term)\n\t\ttable.insert(parts_formatted, link_term(base, lang,\
      \ sc, sort_key))\n\tend\n\t\n\ttable.insert(parts_formatted, link_term(suffix, lang, sc, sort_key))\n\ttable.insert(suffix_categories, lang:getCanonicalName() .. &quot; &quot; .. pos .. &quot; suffixed with &quot; .. lang:makeEntryName(suffix.term, lang))\n\
      \t\n\treturn table.concat(parts_formatted, &quot; +&amp;lrm; &quot;) .. (nocat and &quot;&quot; or m_utilities.format_categories(prefix_categories, lang, sort_key, prefix_sort_base) .. m_utilities.format_categories(suffix_categories, lang, sort_key))\n\
      end\n\n\nfunction export.show_infix(lang, sc, base, infix, pos, sort_key, nocat)\n\tlocal categories = {}\n\tpos = pos or &quot;word&quot;\n\t\n\t-- Pluralize the part of speech name\n\tif pos:find(&quot;[sx]$&quot;) then\n\t\tpos = pos .. &quot;es&quot;\n\
      \telse\n\t\tpos = pos .. &quot;s&quot;\n\tend\n\t\n\t-- Hyphenate the affixes\n\tinfix.term = export.make_affix(infix.term, infix.lang or lang, infix.sc or sc, &quot;infix&quot;)\n\tinfix.alt = export.make_affix(infix.alt, infix.lang or lang, infix.sc\
      \ or sc, &quot;infix&quot;)\n\t\n\tif infix.annotations then\n\t\tinfix.annotations.tr = export.make_affix(infix.annotations.tr, infix.lang or lang, require(&quot;Module:scripts&quot;).getByCode(&quot;Latn&quot;), &quot;infix&quot;)\n\tend\n\t\n\tlocal\
      \ base_affix_type = get_affix_type(base.lang or lang, base.sc or sc, base.term)\n\tif base_affix_type then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;infix&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;infix/base&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;infix/base/&quot;\
      \ .. base_affix_type)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;infix/base/&quot; .. base_affix_type .. &quot;/lang/&quot; .. lang:getCode())\n\tend\n\t\n\tlocal infix_affix_type = get_affix_type(infix.lang or lang, infix.sc or sc, infix.term)\n\
      \tif infix_affix_type ~= &quot;infix&quot; then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;infix&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;infix/infix&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;infix/infix/&quot;\
      \ .. (infix_affix_type or &quot;none&quot;))\n\t\trequire(&quot;Module:debug&quot;).track(&quot;infix/infix/&quot; .. (infix_affix_type or &quot;none&quot;) .. &quot;/lang/&quot; .. lang:getCode())\n\tend\n\t\n\t-- Make links out of all the parts\n\tlocal\
      \ parts_formatted = {}\n\t\n\ttable.insert(parts_formatted, link_term(base, lang, sc, sort_key))\n\ttable.insert(parts_formatted, link_term(infix, lang, sc, sort_key))\n\t\n\t-- Insert the categories\n\ttable.insert(categories, lang:getCanonicalName()\
      \ .. &quot; &quot; .. pos .. &quot; infixed with &quot; .. lang:makeEntryName(infix.term))\n\t\n\treturn table.concat(parts_formatted, &quot; +&amp;lrm; &quot;) .. (nocat and &quot;&quot; or m_utilities.format_categories(categories, lang, sort_key))\n\
      end\n\n\nfunction export.show_prefixes(lang, sc, prefixes, base, pos, sort_key, nocat)\n\tpos = pos or &quot;word&quot;\n\t\n\t-- Pluralize the part of speech name\n\tif pos:find(&quot;[sx]$&quot;) then\n\t\tpos = pos .. &quot;es&quot;\n\telse\n\t\tpos\
      \ = pos .. &quot;s&quot;\n\tend\n\t\n\t-- Hyphenate the affixes\n\tfor i, prefix in ipairs(prefixes) do\n\t\tprefixes[i].term = export.make_affix(prefix.term, prefix.lang or lang, prefix.sc or sc, &quot;prefix&quot;)\n\t\tprefixes[i].alt = export.make_affix(prefix.alt,\
      \ prefix.lang or lang, prefix.sc or sc, &quot;prefix&quot;)\n\t\t\n\t\tif prefix.annotations then\n\t\t\tprefixes[i].annotations.tr = export.make_affix(prefix.annotations.tr, prefix.lang or lang, require(&quot;Module:scripts&quot;).getByCode(&quot;Latn&quot;),\
      \ &quot;prefix&quot;)\n\t\tend\n\tend\n\t\n\tfor i, prefix in ipairs(prefixes) do\n\t\tlocal prefix_affix_type = get_affix_type(prefix.lang or lang, prefix.sc or sc, prefix.term)\n\t\tif prefix_affix_type ~= &quot;prefix&quot; then\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;prefix&quot;)\n\
      \t\t\trequire(&quot;Module:debug&quot;).track(&quot;prefix/prefix&quot;)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;prefix/prefix/&quot; .. (prefix_affix_type or &quot;none&quot;))\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;prefix/prefix/&quot;\
      \ .. (prefix_affix_type or &quot;none&quot;) .. &quot;/lang/&quot; .. lang:getCode())\n\t\tend\n\tend\n\t\n\tif base then\n\t\tlocal base_affix_type = get_affix_type(base.lang or lang, base.sc or sc, base.term)\n\t\tif base_affix_type then\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;prefix&quot;)\n\
      \t\t\trequire(&quot;Module:debug&quot;).track(&quot;prefix/base&quot;)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;prefix/base/&quot; .. base_affix_type)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;prefix/base/&quot; .. base_affix_type\
      \ .. &quot;/lang/&quot; .. lang:getCode())\n\t\tend\n\tend\n\t\n\t-- Make links out of all the parts\n\tlocal parts_formatted = {}\n\tlocal first_sort_base = nil\n\tlocal categories = {}\n\t\n\tfor i, prefix in ipairs(prefixes) do\n\t\ttable.insert(parts_formatted,\
      \ link_term(prefix, lang, sc, sort_key))\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; &quot; .. pos .. &quot; prefixed with &quot; .. lang:makeEntryName(prefix.term, lang) .. (prefix.id and &quot; (&quot; .. prefix.id .. &quot;)&quot;\
      \ or &quot;&quot;))\n\t\t\n\t\tif i &gt; 1 and first_sort_base == nil then\n\t\t\tfirst_sort_base = lang:makeEntryName(prefix.term)\n\t\tend\n\tend\n\t\n\tif base then\n\t\tif first_sort_base == nil then\n\t\t\tfirst_sort_base = lang:makeEntryName(base.term)\n\
      \t\tend\n\t\t\n\t\ttable.insert(parts_formatted, link_term(base, lang, sc, sort_key))\n\telse\n\t\ttable.insert(parts_formatted, &quot;&quot;)\n\tend\n\t\n\tlocal first_category = table.remove(categories, 1)\n\treturn table.concat(parts_formatted, &quot;\
      \ +&amp;lrm; &quot;) .. (nocat and &quot;&quot; or m_utilities.format_categories({first_category}, lang, sort_key, first_sort_base) .. m_utilities.format_categories(categories, lang, sort_key))\nend\n\n\nfunction export.show_suffixes(lang, sc, base, suffixes,\
      \ pos, sort_key, nocat)\n\tlocal categories = {}\n\tpos = pos or &quot;word&quot;\n\t\n\t-- Pluralize the part of speech name\n\tif pos:find(&quot;[sx]$&quot;) then\n\t\tpos = pos .. &quot;es&quot;\n\telse\n\t\tpos = pos .. &quot;s&quot;\n\tend\n\t\n\t\
      -- Hyphenate the affixes\n\tfor i, suffix in ipairs(suffixes) do\n\t\tsuffixes[i].term = export.make_affix(suffix.term, suffix.lang or lang, suffix.sc or sc, &quot;suffix&quot;)\n\t\tsuffixes[i].alt = export.make_affix(suffix.alt, suffix.lang or lang,\
      \ suffix.sc or sc, &quot;suffix&quot;)\n\t\t\n\t\tif suffix.annotations then\n\t\t\tsuffixes[i].annotations.tr = export.make_affix(suffix.annotations.tr, suffix.lang or lang, require(&quot;Module:scripts&quot;).getByCode(&quot;Latn&quot;), &quot;suffix&quot;)\n\
      \t\tend\n\tend\n\t\n\tif base then\n\t\tlocal base_affix_type = get_affix_type(base.lang or lang, base.sc or sc, base.term)\n\t\tif base_affix_type then\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;suffix&quot;)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;suffix/base&quot;)\n\
      \t\t\trequire(&quot;Module:debug&quot;).track(&quot;suffix/base/&quot; .. base_affix_type)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;suffix/base/&quot; .. base_affix_type .. &quot;/lang/&quot; .. lang:getCode())\n\t\tend\n\tend\n\t\n\tfor i,\
      \ suffix in ipairs(suffixes) do\n\t\tlocal suffix_affix_type = get_affix_type(suffix.lang or lang, suffix.sc or sc, suffix.term)\n\t\tif suffix_affix_type ~= &quot;suffix&quot; then\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;suffix&quot;)\n\t\
      \t\trequire(&quot;Module:debug&quot;).track(&quot;suffix/suffix&quot;)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;suffix/suffix/&quot; .. (suffix_affix_type or &quot;none&quot;))\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;suffix/suffix/&quot;\
      \ .. (suffix_affix_type or &quot;none&quot;) .. &quot;/lang/&quot; .. lang:getCode())\n\t\tend\n\tend\n\t\n\t-- Make links out of all the parts\n\tlocal parts_formatted = {}\n\t\n\tif base then\n\t\ttable.insert(parts_formatted, link_term(base, lang, sc,\
      \ sort_key))\n\telse\n\t\ttable.insert(parts_formatted, &quot;&quot;)\n\tend\n\t\n\tfor i, suffix in ipairs(suffixes) do\n\t\ttable.insert(parts_formatted, link_term(suffix, lang, sc, sort_key))\n\tend\n\t\n\t-- Insert the categories\n\tfor i, suffix in\
      \ ipairs(suffixes) do\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; &quot; .. pos .. &quot; suffixed with &quot; .. lang:makeEntryName(suffix.term) .. (suffix.id and &quot; (&quot; .. suffix.id .. &quot;)&quot; or &quot;&quot;))\n\tend\n\
      \t\n\treturn table.concat(parts_formatted, &quot; +&amp;lrm; &quot;) .. (nocat and &quot;&quot; or m_utilities.format_categories(categories, lang, sort_key))\nend\n\n\n-- Adds a hyphen to a word in the appropriate place\nfunction export.make_affix(term,\
      \ lang, sc, affixtype)\n\tif not (affixtype == &quot;prefix&quot; or affixtype == &quot;suffix&quot; or affixtype == &quot;circumfix&quot; or affixtype == &quot;infix&quot; or affixtype == &quot;interfix&quot;) then\n\t\terror(&quot;Invalid affix type&quot;)\n\
      \tend\n\t\n\tif not term then\n\t\treturn nil\n\telseif affixtype == &quot;circumfix&quot; then\n\t\treturn term\n\telseif affixtype == &quot;interfix&quot; then\n\t\taffixtype = &quot;infix&quot;\n\tend\n\t\n\tlocal detected_type = get_affix_type(lang,\
      \ sc, term)\n\t\n\tif affixtype and detected_type == affixtype or (detected_type == &quot;infix&quot; and affixtype == &quot;prefix&quot;) or (detected_type == &quot;infix&quot; and affixtype == &quot;suffix&quot;) then\n\t\treturn term\n\tend\n\t\n\t\
      --remove an asterisk if the morpheme is reconstructed and add it in the end\n\tlocal reconstructed = &quot;&quot;\n\tif term:find(&quot;^*&quot;) then \n\t\treconstructed = &quot;*&quot;\n\t\tterm = term:gsub(&quot;^*&quot;, &quot;&quot;)\n\tend\n\t\n\t\
      local hyphen = get_hyphen(lang, sc)\n\t\n\tif affixtype == &quot;suffix&quot; then\n\t\tterm = hyphen .. term\n\telseif affixtype == &quot;prefix&quot; then\n\t\tterm = term .. hyphen\n\telseif affixtype == &quot;infix&quot; then\n\t\tterm = hyphen ..\
      \ term .. hyphen\n\telse\n\t\terror(&quot;Invalid affix type&quot;)\n\tend\n\t\n\treturn reconstructed .. term\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
