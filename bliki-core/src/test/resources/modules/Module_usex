local m_languages_old = mw.loadData("Module:languages/alldata")
local translit_data = mw.loadData("Module:translations/data")
local needs_translit = translit_data[2]

local export = {}

function export.display(frame)
	NAMESPACE = mw.title.getCurrentTitle().nsText
	local args = frame:getParent().args
	
	if (frame.args["compat"] or "") ~= "" then
		args[3] = args["t"] or args["translation"] or args[2]
		args[2] = args["example"] or args[1]
		args[1] = args["lang"]
	end
	
	local lang = args[1]; if lang == "" then lang = nil end
	lang = lang or "und"
	local langinfo = m_languages_old[lang]
	local auto_translit = langinfo["translit_module"]
	local sc = args["sc"]; if sc == "" then sc = nil end
	sc = sc or langinfo.scripts[1]
	
	local usex = args[2]; if usex == "" then usex = nil end
	local transliteration = args["tr"] or args["transliteration"]; if transliteration == "" then transliteration = nil end
	local translation = args[3]; if translation == "" then translation = nil end
	local noenum = args["noenum"]; if noenum == "" then noenum = nil end
	local inline = args["inline"]; if inline == "" then inline = nil end
	local ref = args["ref"]; if ref == "" then ref = nil end
	
	local categories = {}
	
	-- temporary category for japanese
	if transliteration and (string.find(transliteration, "<br/>") or string.find(transliteration, "<br>")) then
		table.insert(categories, "usex with multiple transliterations")
	end
	
	-- category if no langcode specified
	if lang == "und" then
		table.insert(categories, "Language code missing/usex")
	end
	
	-- auto translit
	if not transliteration and usex and auto_translit then
		local translit_module = require("Module:" .. auto_translit)
		transliteration = translit_module.tr(frame:expandTemplate{ title = "delink", args = {usex}}, lang, sc)
	end
	
	-- add category if transliteration is needed
	if not transliteration and needs_translit[lang] then
		table.insert(categories, langinfo.names[1] .. " terms needing transliteration")
	end
	
	-- add trreq category if translation is unspecified and language is specified and not english
	if not translation and lang ~= "en" and lang ~= "und" then
		table.insert(categories, "Translation requests (" .. langinfo.names[1] .. ")")
		translation = "<small>(please add an English translation of this usage example)</small>"
	end
	
	local result = ""
	
	if noenum then
		result = "\n: " .. result
	end
	
	local usex_expanded
	
	if not usex then
		usex_expanded = '<small>(please add the primary text of this usage example)</small>'
		-- TODO: Trigger some kind of error here
	else
		usex_expanded = '<span class="' .. sc .. '" lang="' .. lang .. '">' .. usex .. '</span>'
		
		-- italicize if script is Latn or lang is unspecified
		if sc == "Latn" or lang == "und" then
			usex_expanded = "<i>" .. usex_expanded .. "</i>"
		end
	end
	
	if inline then
		result = result .. usex_expanded .. (ref or "")
		if transliteration then
			result = result .. " — <i>" .. transliteration .. "</i>"
		end
		if translation then
			result = result .. " — " .. translation
		end
		for key, cat in ipairs(categories) do
			result = result .. "[[Category:" .. cat .. "]]"
		end
		return result
	end	

	if mw.title.getCurrentTitle().fullText ~= 'Template:usex' then
		for key, cat in ipairs(categories) do
			result = result .. "[[Category:" .. cat .. "]]"
		end
	end
	
	result = result .. usex_expanded .. (ref or "")
	
	if transliteration or translation then
		result = result .. "<dl>"
		if transliteration then
			if lang == "ja" then
				result = result .. "<dd>" .. transliteration .. "</dd>"
			else
				result = result .. "<dd><i>" .. transliteration .. "</i></dd>"
			end
		end
		if translation then
			result = result .. "<dd>" .. translation .. "</dd>"
		end
		result = result .. "</dl>"
	end
	
	return result
end

return export