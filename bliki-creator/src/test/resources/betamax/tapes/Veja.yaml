!tape
name: Veja
interactions:
- recorded: 2019-04-15T21:06:20.431Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=veja&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43758 t=1555362380339053
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '2600'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:20 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1347.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Set-Cookie: WMF-Last-Access=15-Apr-2019;Path=/;HttpOnly;secure;Expires=Fri, 17 May 2019 12:00:00 GMT, WMF-Last-Access-Global=15-Apr-2019;Path=/;Domain=.wiktionary.org;HttpOnly;secure;Expires=Fri, 17 May 2019 12:00:00 GMT, GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; Path=/; secure; Domain=.wiktionary.org
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;https=1;nocookies=1
      X-Cache: cp1087 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 745683153, 735878169, 689390816
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="451922" pageid="451922" ns="0" title="veja"><revisions><rev user="NadandoBot" timestamp="2018-09-22T21:10:07Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Lang section formatting (wrong order, missing dividers, category placement)" xml:space="preserve">==Lithuanian==

      ===Noun===
      {{lt-noun|f|vẽjos|4|head=vejà}}

      # [[lawn]]

      =====Declension=====
      {{lt-noun-f-a-4|vej|vẽj}}

      ----

      ==Portuguese==

      ===Etymology 1===
      Inflected form of {{m|pt|ver||to see}}.

      ====Alternative forms====
      * {{l|pt|vêja}} {{qualifier|superseded}}

      ====Pronunciation====
      * {{a|Brazil}} {{IPA|/ˈve.ʒa/|/ˈve.ʒɐ/|lang=pt}}
      * {{a|PT}} {{IPA|/ˈvɐ(j).ʒɐ/|/ˈve.ʒɐ/|lang=pt}}

      ====Verb====
      {{head|pt|verb form}}

      # {{pt-verb-form-of|ver|a}}

      ===Etymology 2===

      ====Noun====
      {{pt-noun|f|s}}

      # {{l|en|[[Mediterranean]] [[parrotfish]]}} {{gloss|{{taxlink|Sparisoma cretense|species|noshow=1}}, a fish of the Atlantic Ocean}}

      =====Synonyms=====
      * {{l|pt|peixe-papagaio}}

      {{catlangname|pt|terms with multiple etymologies}}

      [[Category:pt:Fish]]

      ----

      ==Slovene==

      ===Etymology===
      From {{etyl|sla-pro|sl}}. Cognates include Bulgarian {{m|bg|вейка}} and {{m|bg|ветва}}, Russian {{m|ru|ветвь}}, Slovak {{m|sk|vetva}}. Non-Slavic cognates include Latin {{m|la|vītis||vine}}, German {{m|de|Weide||willow}}, Old Prussian [[witwan]] (''willow''), Persian {{m|fa|sc=fa-Arab|بید|tr=bid||willow}}.

      ===Pronunciation===
      * {{IPA|lang=sl|/ˈʋɛ́ːja/}}
      * {{sl-tonal|vȇja}}

      ===Noun===
      {{sl-noun|vêja|f|vêje|vêje}}

      # [[branch]] (woody part of a tree arising from the trunk and usually dividing)

      ====Declension====
      {{sl-decl-noun-f|vêj}}

      [[Category:sl:Trees]]

      ----

      ==Spanish==

      ===Verb===
      {{head|es|verb form}}

      # {{es-verb form of|person=third-person|number=singular|tense=present|mood=indicative|ending=ar|vejar}}
      # {{es-verb form of|formal=no|person=second-person|number=singular|sense=affirmative|mood=imperative|ending=ar|vejar}}</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:20.584Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alt-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38085 t=1555362380499774
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1817'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:20 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 588517557, 260900350, 685070520
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="910851" pageid="910851" ns="10" title="Template:lt-noun"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T19:19:10Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:lt-noun]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{head|lt|nouns|head={{{head|{{{sg|}}}}}}&lt;!--

      --&gt;|g={{#switch:{{{1|{{{g|}}}}}}|m|f|m-p|f-p={{{1|{{{g|}}}}}}|#default=?}}&lt;!--
      --&gt;|g2={{#switch:{{{g2}}}|m|f|m-p|f-p={{{g2}}}}}&lt;!--

      --&gt;|{{#ifeq:{{{2}}}|-|[[Appendix:Glossary‎#uncountable|uncountable]]}}&lt;!--
      --&gt;|&lt;!--

      --&gt;|{{#switch:{{{2|}}}|-|=|#default=plural}}&lt;!--
      --&gt;|{{{pl|{{{2}}}}}}&lt;!--

      --&gt;|{{#if:{{{f|}}}|feminine}}&lt;!--
      --&gt;|{{{f}}}&lt;!--

      --&gt;|{{#if:{{{m|}}}|masculine}}&lt;!--
      --&gt;|{{{m}}}&lt;!--

      --&gt;}}&lt;!--

      --&gt;{{#if:{{{3|}}}|&amp;#32;&lt;small&gt;stress pattern {{{3}}}&lt;/small&gt;}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:20.753Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ahead&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44023 t=1555362380663285
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:20 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1283.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 425428651, 479555689, 702153789
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="338925" pageid="338925" ns="10" title="Template:head"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T18:15:15Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:head]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:headword/templates|head_t}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:20.951Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52830 t=1555362380847409
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:20 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1316.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 503130501, 565973738, 687925422
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4262766\" pageid=\"4262766\" ns=\"828\" title=\"Module:headword/templates\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-08T17:54:19Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Update to new [[WT:ACCEL]] standard\" xml:space=\"preserve\">local export = {}\n\n-- Part of speech types that should not be pluralized.\nlocal invariable = mw.loadData(\"Module:headword/data\"\
      ).invariable\n\nfunction export.head_t(frame)\n\tlocal plain_param = {}\n\tlocal list_with_holes = {list = true, allow_holes = true}\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[\"sc\"] = plain_param,\n\t\t[\"cat sc\"] = plain_param,\n\
      \t\t[\"sort\"] = plain_param,\n\t\t\n\t\t[2] = {required = true, default = \"nouns\"},\n\t\t[\"noposcat\"] = {type = \"boolean\"},\n\t\t[\"cat2\"] = plain_param,\n\t\t[\"cat3\"] = plain_param,\n\t\t[\"cat4\"] = plain_param,\n\t\t\n\t\t[\"head\"] = {list\
      \ = true, allow_holes = true, default = \"\"},\n\t\t[\"id\"] = plain_param,\n\t\t[\"tr\"] = list_with_holes,\n\t\t[\"ts\"] = list_with_holes,\n\t\t[\"g\"] = {list = true},\n\t\t\n\t\t[3] = list_with_holes,\n\t\t\n\t\t[\"f=accel-form\"]     = list_with_holes,\n\
      \t\t[\"f=accel-nostore\"]  = {list = true, allow_holes = true, type = \"boolean\"},\n\t\t[\"f=accel-translit\"] = list_with_holes,\n\t\t[\"f=request\"]        = list_with_holes,\n\t\t[\"f=alt\"]            = list_with_holes,\n\t\t[\"f=sc\"]           \
      \  = list_with_holes,\n\t\t[\"f=id\"]             = list_with_holes,\n\t\t[\"f=tr\"]             = list_with_holes,\n\t\t[\"f=g\"]              = list_with_holes,\n\t\t[\"f=qual\"]           = list_with_holes,\n\t\t[\"f=nolink\"]         = {list = true,\
      \ allow_holes = true, type = \"boolean\"},\n\t\t[\"f=lang\"]           = list_with_holes,\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\t-- Get language and script information\n\tlocal data = {}\n\
      \tdata.lang = require(\"Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\tdata.sort_key = args[\"sort\"]\n\tdata.heads = args[\"head\"]\n\tdata.id = args[\"id\"]\n\tdata.translits = args[\"tr\"]\n\tdata.transcriptions\
      \ = args[\"ts\"]\n\tdata.genders = args[\"g\"]\n\t\n\t-- Script\n\tlocal cat_sc\n\t\n\tif args[\"cat sc\"] then\n\t\tdata.sc = (args[\"cat sc\"] and (require(\"Module:scripts\").getByCode(args[\"cat sc\"]) or error(\"The script code \\\"\" .. args[\"cat\
      \ sc\"] .. \"\\\" is not valid.\")) or nil)\n\t\tcat_sc = cat_sc\n\telse\n\t\tdata.sc = (args[\"sc\"] and (require(\"Module:scripts\").getByCode(args[\"sc\"]) or error(\"The script code \\\"\" .. args[\"sc\"] .. \"\\\" is not valid.\")) or nil)\n\tend\n\
      \t\n\t-- Part-of-speech category\n\tdata.pos_category = args[2]\n\tdata.noposcat = args[\"noposcat\"]\n\t\n\tif not data.pos_category:find(\"s$\") and not invariable[data.pos_category] then\n\t\t-- Make the plural form of the part of speech\n\t\tif data.pos_category:find(\"\
      x$\") then -- prefix, suffix, confix, infix, circumfix, affix, interfix, transfix\n\t\t\tdata.pos_category = data.pos_category .. \"es\"\n\t\telse\n\t\t\tdata.pos_category = data.pos_category .. \"s\"\n\t\tend\n\tend\n\t\n\tif cat_sc then\n\t\tdata.pos_category\
      \ = data.pos_category .. \" in \" .. cat_sc:getCategoryName()\n\tend\n\t\n\t-- Additional categories\n\tdata.categories = {}\n\t\n\tif args[\"cat2\"] then\n\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" \" .. args[\"cat2\"])\n\tend\n\
      \t\n\tif args[\"cat3\"] then\n\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" \" .. args[\"cat3\"])\n\tend\n\t\n\tif args[\"cat4\"] then\n\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" \" .. args[\"cat4\"])\n\t\
      end\n\t\n\t-- Inflected forms\n\tdata.inflections = {}\n\t\n\tfor i = 1, math.ceil(args[3].maxindex / 2) do\n\t\tlocal infl_part = {\n\t\t\tlabel    = args[3][i * 2 - 1],\n\t\t\taccel    = args[\"faccel-form\"][i] and {\n\t\t\t\tform     = args[\"faccel-form\"\
      ][i],\n\t\t\t\tnostore  = args[\"faccel-nostore\"][i],\n\t\t\t\ttranslit = args[\"faccel-translit\"][i],\n\t\t\t} or nil,\n\t\t\trequest  = args[\"frequest\"][i],\n\t\t}\n\t\t\n\t\tlocal form = {\n\t\t\tterm       =  args[3][i * 2],\n\t\t\talt        =\
      \  args[\"falt\"][i],\n\t\t\tgenders    = {args[\"fg\"][i]},\n\t\t\tid         =  args[\"fid\"][i],\n\t\t\tlang       =  args[\"flang\"][i],\n\t\t\tnolink     =  args[\"fnolink\"][i],\n\t\t\tqualifiers = {args[\"fqual\"][i]},\n\t\t\tsc         =  args[\"\
      fsc\"][i],\n\t\t\ttranslit   =  args[\"ftr\"][i],\n\t\t}\n\t\t\n\t\tif form.lang then\n\t\t\tform.lang = require(\"Module:languages\").getByCode(form.lang) or require(\"Module:languages\").err(form.lang, \"f\" .. i .. \"lang\")\n\t\tend\n\t\t\n\t\tif form.sc\
      \ then\n\t\t\tform.sc = require(\"Module:scripts\").getByCode(form.sc) or error(\"The script code \\\"\" .. form.sc .. \"\\\" is not valid.\")\n\t\tend\n\t\t\n\t\t-- If no term or alt is given, then the label is shown alone.\n\t\tif form.term or form.alt\
      \ then\n\t\t\ttable.insert(infl_part, form)\n\t\tend\n\t\t\n\t\tif infl_part.label == \"or\" then\n\t\t\t-- Append to the previous inflection part, if one exists\n\t\t\tif #infl_part &gt; 0 and data.inflections[1] then\n\t\t\t\ttable.insert(data.inflections[#data.inflections],\
      \ form)\n\t\t\tend\n\t\telseif infl_part.label then\n\t\t\t-- Add a new inflection part\n\t\t\ttable.insert(data.inflections, infl_part)\n\t\tend\n\tend\n\t\n\treturn require(\"Module:headword\").full_headword(data)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:21.493Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aparameters&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54157 t=1555362381384602
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:21 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 402219234, 494941701, 687820736
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4797340\" pageid=\"4797340\" ns=\"828\" title=\"Module:parameters\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-01T01:32:55Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"OK, resurrect the bug fix for disappearing &quot;falt&quot; and such while I figure out how to clone a table properly\" xml:space=\"preserve\">local export = {}\n\n-- A helper function\
      \ to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nlocal plain = require(\"Module:string\").pattern_escape\n\n-- A helper function that removes empty numeric indexes in a table,\n-- so that the values are tightly packed like in\
      \ a normal Lua table.\nlocal remove_holes = require(\"Module:table\").compressSparseArray\n\nfunction export.process(args, params, return_unknown)\n\tlocal args_new = {}\n\t\n\t-- Process parameters for specific properties\n\tlocal required = {}\n\tlocal\
      \ patterns = {}\n\tlocal names_with_equal_sign = {}\n\tlocal list_from_index = nil\n\t\n\tfor name, param in pairs(params) do\n\t\tif param.required then\n\t\t\tif param.alias_of then\n\t\t\t\trequire(\"Module:debug\").track(\"parameters/required alias\"\
      )\n\t\t\tend\n\t\t\trequired[name] = true\n\t\tend\n\t\t\n\t\tif param.list then\n\t\t\tlocal key = name\n\t\t\tif type(name) == \"string\" then\n\t\t\t\tkey = string.gsub(name, \"=\", \"\")\n\t\t\tend\n\t\t\tif param.default ~= nil then\n\t\t\t\targs_new[key]\
      \ = {param.default, maxindex = 1}\n\t\t\telse\n\t\t\t\targs_new[key] = {maxindex = 0}\n\t\t\tend\n\t\t\t\n\t\t\tif type(param.list) == \"string\" then\n\t\t\t\t-- If the list property is a string, then it represents the name\n\t\t\t\t-- to be used as the\
      \ prefix for list items. This is for use with lists\n\t\t\t\t-- where the first item is a numbered parameter and the\n\t\t\t\t-- subsequent ones are named, such as 1, pl2, pl3.\n\t\t\t\tif string.find(param.list, \"=\") then\n\t\t\t\t\tpatterns[\"^\" ..\
      \ string.gsub(plain(param.list), \"=\", \"(%%d+)\") .. \"$\"] = name\n\t\t\t\telse\n\t\t\t\t\tpatterns[\"^\" .. plain(param.list) .. \"(%d+)$\"] = name\n\t\t\t\tend\n\t\t\telseif type(name) == \"number\" then\n\t\t\t\t-- If the name is a number, then all\
      \ indexed parameters from\n\t\t\t\t-- this number onwards go in the list.\n\t\t\t\tlist_from_index = name\n\t\t\telse\n\t\t\t\tif string.find(name, \"=\") then\n\t\t\t\t\tpatterns[\"^\" .. string.gsub(plain(name), \"=\", \"(%%d+)\") .. \"$\"] = string.gsub(name,\
      \ \"=\", \"\")\n\t\t\t\telse\n\t\t\t\t\tpatterns[\"^\" .. plain(name) .. \"(%d+)$\"] = name\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif string.find(name, \"=\") then\n\t\t\t\t-- DO NOT SIDE-EFFECT A TABLE WHILE ITERATING OVER IT.\n\t\t\t\t-- Some elements\
      \ may be skipped or processed twice if you do.\n\t\t\t\t-- Instead, track the changes we want to make to `params`, and\n\t\t\t\t-- do them after the iteration over `params` is done.\n\t\t\t\ttable.insert(names_with_equal_sign, name)\n\t\t\tend\n\t\telseif\
      \ param.default ~= nil then\n\t\t\targs_new[name] = param.default\n\t\tend\n\tend\n\n\t--Process required changes to `params`\n\tfor _, name in ipairs(names_with_equal_sign) do\n\t\trequire(\"Module:debug\").track(\"parameters/name with equals\")\n\t\t\
      params[string.gsub(name, \"=\", \"\")] = params[name]\n\t\tparams[name] = nil\n\tend\n\n\t-- Process the arguments\n\tlocal args_unknown = {}\n\t\n\tfor name, val in pairs(args) do\n\t\tlocal index = nil\n\t\t\n\t\tif type(name) == \"number\" then\n\t\t\
      \tif list_from_index ~= nil and name &gt;= list_from_index then\n\t\t\t\tindex = name - list_from_index + 1\n\t\t\t\tname = list_from_index\n\t\t\tend\n\t\telse\n\t\t\t-- Does this argument name match a pattern?\n\t\t\tfor pattern, pname in pairs(patterns)\
      \ do\n\t\t\t\tindex = mw.ustring.match(name, pattern)\n\t\t\t\t\n\t\t\t\t-- It matches, so store the parameter name and the\n\t\t\t\t-- numeric index extracted from the argument name.\n\t\t\t\tif index then\n\t\t\t\t\tindex = tonumber(index)\n\t\t\t\t\t\
      name = pname\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal param = params[name]\n\t\t\n\t\t-- If a parameter without the trailing index was found, and\n\t\t-- require_index is set on the param, set the param to nil to treat it\n\t\t\
      -- as if it isn't recognized.\n\t\tif not index and param and param.require_index then\n\t\t\tparam = nil\n\t\tend\n\t\t\n\t\t-- If no index was found, use 1 as the default index.\n\t\t-- This makes list parameters like g, g2, g3 put g at index 1.\n\t\t\
      index = index or 1\n\t\t\n\t\t-- If the argument is not in the list of parameters, trigger an error.\n\t\t-- return_unknown suppresses the error, and stores it in a separate list instead.\n\t\tif not param then\n\t\t\tif return_unknown then\n\t\t\t\targs_unknown[name]\
      \ = val\n\t\t\telse\n\t\t\t\terror(\"The parameter \\\"\" .. name .. \"\\\" is not used by this template.\", 2)\n\t\t\tend\n\t\telse\n\t\t\t-- Remove leading and trailing whitespace unless allow_whitespace is true.\n\t\t\tif not param.allow_whitespace\
      \ then\n\t\t\t\tval = mw.text.trim(val)\n\t\t\tend\n\t\t\t\n\t\t\t-- Empty string is equivalent to nil unless allow_empty is true.\n\t\t\tif val == \"\" and not param.allow_empty then\n\t\t\t\tval = nil\n\t\t\tend\n\t\t\t\n\t\t\t-- Convert to proper type\
      \ if necessary.\n\t\t\tif param.type == \"boolean\" then\n\t\t\t\tval = not (not val or val == \"\" or val == \"0\" or val == \"no\" or val == \"n\" or val == \"false\")\n\t\t\telseif param.type == \"number\" then\n\t\t\t\tval = tonumber(val)\n\t\t\telseif\
      \ param.type then\n\t\t\t\trequire(\"Module:debug\").track {\n\t\t\t\t\t\"parameters/unrecognized type\",\n\t\t\t\t\t\"parameters/unrecognized type/\" .. tostring(param.type)\n\t\t\t\t}\n\t\t\tend\n\t\t\t\n\t\t\t-- Can't use \"if val\" alone, because val\
      \ may be a boolean false.\n\t\t\tif val ~= nil then\n\t\t\t\t-- Mark it as no longer required, as it is present.\n\t\t\t\trequired[param.alias_of or name] = nil\n\t\t\t\t\n\t\t\t\t-- Store the argument value.\n\t\t\t\tif param.list then\n\t\t\t\t\t-- If\
      \ the parameter is an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\t\targs_new[name][index] = val\n\t\t\t\t\t\t\n\t\t\t\t\t\t-- Store\
      \ the highest index we find.\n\t\t\t\t\t\targs_new[name].maxindex = math.max(index, args_new[name].maxindex)\n\t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\t\t\t\t\t\
      args_new[param.alias_of][index] = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest index we find.\n\t\t\t\t\t\t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of]\
      \ = val\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\t-- If the parameter is an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\
      \t\targs_new[name] = val\n\t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\t\t\t\t\targs_new[param.alias_of][1] = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest\
      \ index we find.\n\t\t\t\t\t\t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of] = val\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\
      \t\n\t-- The required table should now be empty.\n\t-- If any entry remains, trigger an error, unless we're in the template namespace.\n\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\tlocal list = {}\n\t\tfor name, param in pairs(required)\
      \ do\n\t\t\ttable.insert(list, name)\n\t\tend\n\t\t\n\t\tlocal count = #list\n\t\tif count == 1 then\n\t\t\terror('The parameter \"' .. list[1] .. '\" is required.', 2)\n\t\telseif count == 2 then\n\t\t\terror('The parameters \"' .. table.concat(list,\
      \ '\" and \"') .. '\" are required.', 2)\n\t\telseif count &gt; 2 then\n\t\t\terror('The parameters \"' .. mw.text.listToText(list, '\", \"', '\", and \"') .. '\" are required.', 2)\n\t\tend\n\tend\n\t\n\t-- Remove holes in any list parameters if needed.\n\
      \tfor name, val in pairs(args_new) do\n\t\tif type(val) == \"table\" and not params[name].allow_holes then\n\t\t\targs_new[name] = remove_holes(val)\n\t\tend\n\tend\n\t\n\tif return_unknown then\n\t\treturn args_new, args_unknown\n\telse\n\t\treturn args_new\n\
      \tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-08-28T19:11:23.522Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alt-noun-f-a&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=28-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 28 Aug 2015 19:11:22 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Aug-2015
      X-Cache: cp1068 miss (0), cp3014 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2812269784, 1282707689, 3656413218
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="909947" pageid="909947" ns="10" title="Template:lt-noun-f-a"><revisions><rev user="MewBot" timestamp="2012-04-01T21:22:07Z" comment="Move templates" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{lt-decl-noun
      |1={{{1}}}a
      |2={{{1}}}os
      |3={{{1}}}os
      |4={{{1}}}ų
      |5={{{1}}}ai
      |6={{{1}}}oms
      |7={{{1}}}ą
      |8={{{1}}}as
      |9={{{1}}}a
      |10={{{1}}}omis
      |11={{{1}}}oje
      |12={{{1}}}ose
      |13={{{1}}}a
      |14={{{1}}}os}}&lt;noinclude&gt;[[Category:Lithuanian noun inflection-table templates|2nd declension]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2015-08-28T19:11:23.740Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alt-decl-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=28-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 28 Aug 2015 19:11:22 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Aug-2015
      X-Cache: cp1066 miss (0), cp3009 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 4007383233, 3747281515, 3656413397
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"883813\" pageid=\"883813\" ns=\"10\" title=\"Template:lt-decl-noun\"><revisions><rev user=\"MewBot\" timestamp=\"2012-04-01T21:21:59Z\" comment=\"Move templates\" contentformat=\"\
      text/x-wiki\" contentmodel=\"wikitext\" xml:space=\"preserve\">&lt;div class=&quot;NavFrame&quot; style=&quot;&quot;&gt;\n&lt;div class=&quot;NavHead&quot; style=&quot;&quot; &gt;declension of {{{1}}}&lt;/div&gt;\n&lt;div class=&quot;NavContent&quot;&gt;\n\
      \n{| border=&quot;1&quot; color=&quot;#cdcdcd&quot; style=&quot;border-collapse:collapse; background:#F9F9F9;text-align:center; width:100%&quot; class=&quot;inflection-table&quot;\n|-\n! style=&quot;width:30%;background:#DEDEDE&quot; | \n! style=&quot;width:35%;background:#DEDEDE&quot;\
      \ | singular &lt;small&gt;([[vienaskaita]])&lt;/small&gt;\n! style=&quot;width:35%;background:#DEDEDE&quot; | plural &lt;small&gt;([[daugiskaita]])&lt;/small&gt;\n|-\n! style=&quot;background:#EFEFEF&quot; | nominative &lt;small&gt;([[vardininkas]])&lt;/small&gt;\n\
      | [[{{{1}}}]]\n| [[{{{2}}}]]\n|-\n! style=&quot;background:#EFEFEF&quot; | genitive &lt;small&gt;([[kilmininkas]])&lt;/small&gt;\n| [[{{{3}}}]]\n| [[{{{4}}}]]\n|-\n! style=&quot;background:#EFEFEF&quot; | dative &lt;small&gt;([[naudininkas]])&lt;/small&gt;\n\
      | [[{{{5}}}]]\n| [[{{{6}}}]]\n|-\n! style=&quot;background:#EFEFEF&quot; | accusative &lt;small&gt;([[galininkas]])&lt;/small&gt;\n| [[{{{7}}}]]\n| [[{{{8}}}]]\n|-\n! style=&quot;background:#EFEFEF&quot; | instrumental &lt;small&gt;([[įnagininkas]])&lt;/small&gt;\n\
      | [[{{{9}}}]]\n| [[{{{10}}}]]\n|-\n! style=&quot;background:#EFEFEF&quot; | locative &lt;small&gt;([[vietininkas]])&lt;/small&gt;\n| [[{{{11}}}]]\n| [[{{{12}}}]]\n|-\n! style=&quot;background:#EFEFEF&quot; | vocative &lt;small&gt;([[šauksmininkas]])&lt;/small&gt;\n\
      | [[{{{13}}}]]\n| [[{{{14}}}]]\n|}&lt;/div&gt;&lt;/div&gt;&lt;noinclude&gt;\n[[Category:Lithuanian noun inflection-table templates|*noun1]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>"
- recorded: 2015-08-28T19:11:23.965Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aterm&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=28-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 28 Aug 2015 19:11:23 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Aug-2015
      X-Cache: cp1052 miss (0), cp3006 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2354313042, 165981481, 3656413670
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="724759" pageid="724759" ns="10" title="Template:term"><revisions><rev user="CodeCat" timestamp="2014-04-09T16:57:43Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:links/templates|l_term_t|face=term|compat=1}}&lt;!--

      Add categories for certain bad or missing parameters.
      --&gt;&lt;includeonly&gt;{{#invoke:term cleanup|cleanup}}&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:26.362Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48887 t=1555362386238915
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:26 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1347.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 669205787, 735387799, 700452432
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4282542\" pageid=\"4282542\" ns=\"828\" title=\"Module:links/templates\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T18:56:49Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\tModules used:\n\t[[Module:links]]\n\t[[Module:languages]]\n\t[[Module:scripts]]\n\t[[Module:parameters]]\n\t[[Module:debug]]\n]=]\n\
      \n-- Used in [[Template:l]] and [[Template:m]].\nfunction export.l_term_t(frame)\n\tlocal face = frame.args[\"face\"]\n\tlocal allowSelfLink = frame.args[\"notself\"]; allowSelfLink = not allowSelfLink or allowSelfLink == \"\"\n\t\n\tlocal params = {\n\
      \t\t[1] = {required = true},\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"gloss\"},\n\t\t[\"accel-form\"] = {},\n\t\t[\"accel-nostore\"] = {type = \"boolean\"},\n\t\t[\"accel-translit\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] =\
      \ {},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {alias_of = \"gloss\"},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t}\n\t\n\t-- Compatibility mode for {{term}}.\n\t-- If given a nonempty value, the\
      \ function uses lang= to specify the\n\t-- language, and all the positional parameters shift one number lower.\n\tlocal compat = (frame.args[\"compat\"] or \"\") ~= \"\"\n\t\n\tif compat then\n\t\tparams[\"lang\"] = {},\n\t\ttable.remove(params, 1)\n\t\
      end\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = args[compat and \"lang\" or 1]\n\t\n\t-- Tracking for missing language or und\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"\
      link/no lang\")\n\telseif lang == \"und\" then\n\t\trequire(\"Module:debug\").track(\"link/und\")\n\tend\n\t\n\tlang = lang or \"und\"\n\tlocal sc = args[\"sc\"]\n\t\n\tlocal term = args[(compat and 1 or 2)]\n\tlocal alt = args[(compat and 2 or 3)]\n\t\
      \n\t-- Check parameters\n\tlang = require(\"Module:languages\").getByCode(lang) or\n\t\trequire(\"Module:languages\").err(lang, 1)\n\t\n\tif sc then\n\t\tsc = require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is\
      \ not valid.\")\n\tend\n\t\n\tif not term and not alt and frame.args[\"demo\"] then\n\t\tterm = frame.args[\"demo\"]\n\tend\n\t\n\t-- Forward the information to full_link\n\treturn require(\"Module:links\").full_link( \n\t\t{\n\t\t\tlang = lang, \n\t\t\
      \tsc = sc, \n\t\t\tterm = term,\n\t\t\talt = alt, \n\t\t\tid = args[\"id\"], \n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgenders = args[\"g\"], \n\t\t\tgloss = args[\"gloss\"], \n\t\t\tpos = args[\"pos\"], \n\t\t\tlit = args[\"lit\"],\n\
      \t\t\taccel = args[\"accel-form\"] and {\n\t\t\t\tform = args[\"accel-form\"],\n\t\t\t\tnostore = args[\"accel-nostore\"],\n\t\t\t\ttranslit = args[\"accel-translit\"],\n\t\t\t} or nil,\n\t\t},\n\t\tface,\n\t\tallowSelfLink\n\t)\nend\n\n-- Used in [[Template:ll]].\n\
      function export.ll(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2] = { allow_empty = true },\n\t\t[3] = {},\n\t\t[\"notself\"] = { type = \"boolean\", default = false },\n\t\t[\"id\"] = {},\n\t}\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\tlocal allowSelfLink = not args[\"notself\"]\n\t\n\tlocal lang = args[1]\n\tlang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, 1)\n\t\n\tlocal text = args[2]\n\tlocal\
      \ alt = args[3]\n\tif text == \"\" then\n\t\treturn alt or \"\"\n\tend\n\t\n\tlocal id = args[\"id\"]\n\t\n\treturn require(\"Module:links\").language_link(\n\t\t{\n\t\t\tterm = text,\n\t\t\talt = alt,\n\t\t\tlang = lang,\n\t\t\tid = id\n\t\t},\n\t\tallowSelfLink\n\
      \t)\nend\n\nfunction export.def_t(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn require(\"Module:links\").english_links(args[1])\n\
      end\n\n\nfunction export.linkify_t(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\targs[1] = mw.text.trim(args[1])\n\t\n\tif\
      \ args[1] == \"\" or args[1]:find(\"[[\", nil, true) then\n\t\treturn args[1]\n\telse\n\t\treturn \"[[\" .. args[1] .. \"]]\"\n\tend\nend\n\nfunction export.section_link_t(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\t\n\treturn require(\"Module:links\").section_link(args[1])\nend\n\nfunction export.language_name_link_t(frame)\n\tlocal face = frame.args[\"face\"]\n\tlocal allowSelfLink = frame.args[\"notself\"]; allowSelfLink\
      \ = not allowSelfLink or allowSelfLink == \"\"\n\t\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"gloss\"},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"\
      ] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {alias_of = \"gloss\"},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"w\"] = { type = \"boolean\", default = false },\n\t}\n\t\n\t-- Compatibility mode for {{term}}.\n\t-- If given a nonempty\
      \ value, the function uses lang= to specify the\n\t-- language, and all the positional parameters shift one number lower.\n\tlocal compat = (frame.args[\"compat\"] or \"\") ~= \"\"\n\t\n\tif compat then\n\t\tparams[\"lang\"] = {},\n\t\ttable.remove(params,\
      \ 1)\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = args[compat and \"lang\" or 1]\n\t\n\t-- Tracking for missing language or und\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"\
      link/no lang\")\n\telseif lang == \"und\" then\n\t\trequire(\"Module:debug\").track(\"link/und\")\n\tend\n\t\n\tlang = lang or \"und\"\n\tlocal sc = args[\"sc\"]\n\t\n\tlocal term = args[(compat and 1 or 2)]\n\tlocal alt = args[(compat and 2 or 3)]\n\t\
      \n\t-- Check parameters\n\tlang = require(\"Module:languages\").getByCode(lang) or\n\t\trequire(\"Module:languages\").err(lang, 1)\n\tif sc then\n\t\tsc = require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not\
      \ valid.\")\n\tend\n\t\n\tif not term and not alt and frame.args[\"demo\"] then\n\t\tterm = frame.args[\"demo\"]\n\tend\n\t\n\t--[[\n\t\tAdd a language name, linked to Wikipedia if the Wikipedia parameter is set to true.\n\t\tForward the information to\
      \ full_link.\n\t]]\n\tlocal language_name = args.w and lang:makeWikipediaLink() or lang:getCanonicalName()\n\t\n\tif term == \"-\" then\n\t\treturn language_name\n\telse\n\t\treturn language_name .. \" \" ..\n\t\t\trequire(\"Module:links\").full_link(\
      \ \n\t\t\t\t{\n\t\t\t\t\tlang = lang, \n\t\t\t\t\tsc = sc, \n\t\t\t\t\tterm = term, \n\t\t\t\t\talt = alt, \n\t\t\t\t\tid = args[\"id\"], \n\t\t\t\t\ttr = args[\"tr\"], \n\t\t\t\t\tts = args[\"ts\"], \n\t\t\t\t\tgenders = args[\"g\"], \n\t\t\t\t\tgloss\
      \ = args[\"gloss\"], \n\t\t\t\t\tpos = args[\"pos\"], \n\t\t\t\t\tlit = args[\"lit\"]\n\t\t\t\t},\n\t\t\t\tface,\n\t\t\t\tallowSelfLink\n\t\t\t)\n\tend\nend\n\nfunction export.light_link_t(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t\
      [2] = { required = true },\n\t\t[3] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"langname\"] = { required = true },\n\t}\n\t\n\tlocal args = frame:getParent().args\n\t\n\tfor key, value in pairs (params) do\n\t\tif value.required then\n\t\t\tif not args[key] then\n\
      \t\t\t\terror('Parameter \"' .. key .. '\" is required.')\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn require(\"Module:links\").light_link{  \n\t\tlangCode = args[1], \n\t\tterm = args[2], \n\t\talt = args[3], \n\t\tscCode = args.sc or \"Latn\",  \n\t\tlangName\
      \ = args.langname\n\t}\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:23.842Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=36987 t=1555362383736078
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:23 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1344.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 198792190, 731493507, 694564945
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3935515\" pageid=\"3935515\" ns=\"828\" title=\"Module:links\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T18:59:00Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\t[[Unsupported titles]] and pages with high\n\tmemory usage are listed at [[Module:links/data]].\n\t\n\tOther modules used:\n\t\t[[Module:script utilities]]\n\
      \t\t[[Module:scripts]]\n\t\t[[Module:languages]] and its submodules\n\t\t[[Module:gender and number]]\n\t\t[[Module:utilities]]\n\t\t[[Module:string]]\n\t\t[[Module:debug]]\n]=]\n\n-- These are prefixed with u to avoid confusion with the default string\
      \ methods\n-- of the same name.\nlocal usub = mw.ustring.sub\n\nlocal table_insert = table.insert\nlocal table_concat = table.concat\n\nlocal ignore_cap = {\n\t[\"ko\"] = true,\n}\n\nlocal phonetic_extraction = {\n\t[\"th\"] = \"Module:th\",\n\t[\"km\"\
      ] = \"Module:km\",\n}\n\nlocal pos_tags = {\n\t[\"a\"] = \"adjective\",\n\t[\"adv\"] = \"adverb\",\n\t[\"int\"] = \"interjection\",\n\t[\"n\"] = \"noun\",\n\t[\"pron\"] = \"pronoun\",\n\t[\"v\"] = \"verb\",\n\t[\"vi\"] = \"intransitive verb\",\n\t[\"vt\"\
      ] = \"transitive verb\",\n\t[\"vti\"] = \"transitive and intransitive verb\",\n}\n\nlocal unsupported_titles\nfunction export.getLinkPage(target, lang)\n\tunsupported_titles = unsupported_titles or mw.loadData(\"Module:links/data\").unsupported_titles\n\
      \tif unsupported_titles[target] then\n\t\treturn \"Unsupported titles/\" .. unsupported_titles[target]\n\tend\n\t\n\t-- If the link contains unexpanded template parameters, then don't create a link.\n\tif target:find(\"{{{\") then\n\t\treturn nil\n\tend\n\
      \t\n\tif target:sub(1, 1) == \":\" or target:sub(1, 2) == \"w:\" or target:sub(1, 10) == \"wikipedia:\" then\n\t\treturn target\n\tend\n\t\n\t-- Remove diacritics from the page name\n\ttarget = lang:makeEntryName(target)\n\t\n\tif target:sub(1, 1) == \"\
      /\" then\n\t\treturn \":\" .. target\n\t\n\t-- Link to appendix for reconstructed terms and terms in appendix-only languages\n\telseif target:sub(1, 1) == \"*\" and #target &gt; 1 then\n\t\tif lang:getCode() == \"und\" then\n\t\t\treturn nil\n\t\tend\n\
      \t\t\n\t\ttarget = \"Reconstruction:\" .. lang:getCanonicalName() .. \"/\" .. usub(target, 2)\n\telseif lang:getType() == \"reconstructed\" then\n\t\terror(\"The specified language \" .. lang:getCanonicalName()\n\t\t\t.. \" is unattested, while the given\
      \ word is not marked with '*' to indicate that it is reconstructed\")\n\telseif lang:getType() == \"appendix-constructed\" then\n\t\ttarget = \"Appendix:\" .. lang:getCanonicalName() .. \"/\" .. target\n\tend\n\t\n\treturn target\nend\n\n-- Make a language-specific\
      \ link from given link's parts\nlocal function makeLangLink(link, lang, id, allowSelfLink)\n\t-- Temporary tracking code\n\tlocal langCode = lang:getCode()\n\tif langCode == \"se\" or langCode == \"sia\" or langCode:find(\"^sm[ajns]$\")\n\t\t\tor langCode:find(\"\
      ^sj[dektu]$\") then\n\t\tif link.display and link.display:find(\"'\") then\n\t\t\trequire(\"Module:debug\").track(\"links/Sami apostrophe display\")\n\t\telseif link.target and link.target:find(\"'\") then\n\t\t\trequire(\"Module:debug\").track(\"links/Sami\
      \ apostrophe target\")\n\t\tend\n\tend\n\t\n\t-- Find fragments (when link didn't come from parseLink).\n\t-- Prevents {{l|en|word#Etymology 2|word}} from linking to [[word#Etymology 2#English]].\n\tif link.fragment == nil then\n\t\t-- Replace numeric\
      \ character references with the corresponding character (&amp;#29; → '),\n\t\t-- as they contain #, which causes the numeric character reference to be\n\t\t-- misparsed (wa'a → wa&amp;#29;a → pagename wa&amp;, fragment 29;a).\n\t\tlink.target = link.target:gsub(\"\
      &amp;#(%d+);\",\n\t\t\tfunction(number) return mw.ustring.char(tonumber(number)) end)\n\t\tlocal first, second = link.target:match(\"^([^#]+)#(.+)$\")\n\t\tif first then\n\t\t\tlink.target, link.fragment = first, second\n\t\tend\n\tend\n\t\n\t-- If there\
      \ is no display form, then create a default one\n\tif not link.display then\n\t\tlink.display = link.target\n\t\t\n\t\t-- Strip the prefix from the displayed form\n\t\t-- TODO: other interwiki links?\n\t\tif link.display:sub(1, 1) == \":\" and not mw.loadData(\"\
      Module:links/data\").unsupported_titles[link.display] then\n\t\t\tlink.display = link.display:sub(2) -- remove colon from beginning\n\t\telse\n\t\t\tlocal prefix = link.display:match(\"^([^:]+):\")\n\t\t\tlocal prefixes = {\n\t\t\t\tw = true,\n\t\t\t\t\
      wikipedia = true,\n\t\t\t}\n\t\t\t\n\t\t\tif prefixes[prefix] then\n\t\t\t\tlink.display = link.display:sub(#prefix + 2) -- remove prefix plus colon\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Process the target\n\tlink.target = export.getLinkPage(link.target,\
      \ lang)\n\t\n\tif not link.target then\n\t\treturn link.display\n\tend\n\t\n\t-- If the target is the same as the current page and there is no sense id\n\t-- and linking to the same page hasn't been turned on, then return a \"self-link\"\n\t-- like the\
      \ software does.\n\tif not (allowSelfLink or id) and link.target:gsub(\"^:\", \"\") == mw.title.getCurrentTitle().prefixedText then\n\t\treturn \"&lt;strong class=\\\"selflink\\\"&gt;\" .. link.display .. \"&lt;/strong&gt;\"\n\tend\n\t\n\t--[[\n\t\tAdd\
      \ fragment\n\t\tDo not add a section link to \"Undetermined\", as such sections do not exist and are invalid.\n\t\tTabbedLanguages handles links without a section by linking to the \"last visited\" section,\n\t\tbut adding \"Undetermined\" would break\
      \ that feature.\n\t\tFor localized prefixes that make syntax error, please use the format: [\"xyz\"] = true,\n\t]]\n\tlocal prefix = link.target:match(\"^:?([^:]+):\")\n\tlocal prefixes = {\n\t\tw = true,\n\t\twikipedia = true,\n\t\tCategory = true,\n\t\
      }\n\t\n\tif not prefixes[prefix] then\n\t\tif link.fragment or link.target:find(\"#$\") then\n\t\t\trequire(\"Module:debug\").track {\n\t\t\t\t\"links/fragment\",\n\t\t\t\t\"links/fragment/\" .. lang:getCode()\n\t\t\t}\n\t\tend\n\t\t\n\t\tif not link.fragment\
      \ and lang:getCode() ~= \"und\" then\n\t\t\tif id then\n\t\t\t\tlink.fragment = require(\"Module:utilities\").make_id(lang, id)\n\t\t\telseif not mw.ustring.find(link.target, \"^Appendix:\")\n\t\t\t\t\tand not mw.ustring.find(link.target, \"^Reconstruction:\"\
      ) then\n\t\t\t\tlink.fragment = lang:getCanonicalName()\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- This allows linking to pages like [[sms:a]] without it being treated weirdly.\n\t\tlink.target = link.target:gsub(\":\", \"&amp;#x3a;\")\n\tend\n\t\n\treturn \"[[\"\
      \ .. link.target .. (link.fragment and \"#\" .. link.fragment or \"\") .. \"|\" .. link.display .. \"]]\"\nend\n\n\n-- Split a link into its parts\nlocal function parseLink(linktext)\n\tlocal link = { target = linktext }\n\tlocal first, second = link.target:match(\"\
      ^([^|]+)|(.+)$\")\n\t\n\tif first then\n\t\tlink.target = first\n\t\tlink.display = second\n\telse\n\t\tlink.display = link.target\n\tend\n\t\n\tfirst, second = link.target:match(\"^(.+)#(.+)$\")\n\t\n\tif first then\n\t\tlink.target = first\n\t\tlink.fragment\
      \ = second\n\telse\n\t\t-- So that makeLangLink does not look for a fragment again\n\t\tlink.fragment = false\n\tend\n\t\n\treturn link\nend\n\n\n-- Creates a basic wikilink to the given term. If the text already contains\n-- links, these are replaced\
      \ with links to the correct section.\nfunction export.language_link(data, allowSelfLink, dontLinkRecons)\n\tif type(data) ~= \"table\" then\n\t\terror(\"The first argument to the function language_link must be a table. See Module:links/documentation for\
      \ more information.\")\n\tend\n\t\n\tlocal text = data.term\n\t\n\tif ignore_cap[data.lang:getCode()] and text then\n\t\ttext = text:gsub(\"%^\", \"\")\n\tend\n\t\n\t-- If the text begins with * and another character,\n\t-- then act as if each link begins\
      \ with *\n\tlocal allReconstructed = false\n\t\n\tif text:find(\"^*.\") then\n\t\tallReconstructed = true\n\tend\n\t\n\t-- Do we have embedded wikilinks?\n\tif text:find(\"[[\", nil, true) then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/links/alt-ignored]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/links/id-ignored]]\n\t\t]=]\n\t\t\n\t\tif data.alt then\n\t\t\trequire(\"Module:debug\").track(\"links/alt-ignored\")\n\t\t\tmw.log(\"(from Module:links)\", \"text with embedded wikilinks:\", text,\n\t\t\t\t\
      \"ignored alt:\", data.alt, \"lang:\", data.lang:getCode())\n\t\tend\n\t\t\n\t\tif data.id then\n\t\t\trequire(\"Module:debug\").track(\"links/id-ignored\")\n\t\t\tmw.log(\"(from Module:links)\", \"text with embedded wikilinks:\", text,\n\t\t\t\t\"ignored\
      \ id:\", data.id, \"lang:\", data.lang:getCode())\n\t\tend\n\t\t\n\t\t-- Begins and ends with a wikilink tag\n\t\tif text:find(\"^%[%[(.+)%]%]$\") then\n\t\t\t-- There are no [ ] in between.\n\t\t\t-- This makes the wikilink tag redundant.\n\t\t\tif text:find(\"\
      ^%[%[[^%[%]]+%]%]$\") then\n\t\t\t\trequire(\"Module:debug\").track(\"links/redundant wikilink\")\n\t\t\telse\n\t\t\t\tlocal temp = text:gsub(\"^%[%[(.+)%]%]$\", \"%1\")\n\t\t\t\ttemp = temp:gsub(\"%]%], %[%[\", \"|\")\n\t\t\t\t\n\t\t\t\tif not temp:find(\"\
      [%[%]]\") then\n\t\t\t\t\trequire(\"Module:debug\").track(\"links/list\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\ttext = text:gsub(\"%[%[([^%]]+)%]%]\",\n\t\t\tfunction(linktext)\n\t\t\t\tlocal link = parseLink(linktext)\n\t\t\t\t\n\t\t\t\tif allReconstructed\
      \ then\n\t\t\t\t\tlink.target = \"*\" .. link.target\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\treturn makeLangLink(link, data.lang, data.id, allowSelfLink, dontLinkRecons)\n\t\t\tend)\n\t\t\n\t\t-- Remove the extra * at the beginning if it's immediately followed\n\
      \t\t-- by a link whose display begins with * too\n\t\tif allReconstructed then\n\t\t\ttext = text:gsub(\"^%*%[%[([^|%]]+)|%*\", \"[[%1|*\")\n\t\tend\n\telse\n\t\t-- There is no embedded wikilink, make a link using the parameters.\n\t\ttext = makeLangLink({\
      \ target = text, display = data.alt }, data.lang, data.id, allowSelfLink, dontLinkRecons)\n\tend\n\t\n\treturn text\nend\n\nfunction export.mark(text, itemType, face, lang)\n\tlocal tag = { \"\", \"\" }\n\t\n\tif itemType == \"gloss\" then\n\t\ttag = {\
      \ '&lt;span class=\"mention-gloss-double-quote\"&gt;“&lt;/span&gt;&lt;span class=\"mention-gloss\"&gt;',\n\t\t\t'&lt;/span&gt;&lt;span class=\"mention-gloss-double-quote\"&gt;”&lt;/span&gt;' }\n\telseif itemType == \"tr\" then\n\t\tif face == \"term\"\
      \ then\n\t\t\ttag = { '&lt;span lang=\"' .. lang:getCode() .. '\" class=\"tr mention-tr Latn\"&gt;',\n\t\t\t\t'&lt;/span&gt;' }\n\t\telse\n\t\t\ttag = { '&lt;span lang=\"' .. lang:getCode() .. '\" class=\"tr Latn\"&gt;', '&lt;/span&gt;' }\n\t\tend\n\t\
      elseif itemType == \"ts\" then\n\t\ttag = { '&lt;span class=\"ts mention-ts Latn\"&gt;/', '/&lt;/span&gt;' }\n\telseif itemType == \"pos\" then\n\t\ttag = { '&lt;span class=\"ann-pos\"&gt;', '&lt;/span&gt;' }\n\telseif itemType == \"annotations\" then\n\
      \t\ttag = { '&lt;span class=\"mention-gloss-paren annotation-paren\"&gt;(&lt;/span&gt;',\n\t\t\t'&lt;span class=\"mention-gloss-paren annotation-paren\"&gt;)&lt;/span&gt;' }\n\tend\n\t\n\tif type(text) == \"string\" then\n\t\treturn tag[1] .. text .. tag[2]\n\
      \telse\n\t\treturn \"\"\n\tend\nend\n\n-- Format the annotations (things following the linked term)\nfunction export.format_link_annotations(data, face)\n\tlocal output = {}\n\t\n\t-- Interwiki link\n\tif data.interwiki then\n\t\ttable_insert(output, data.interwiki)\n\
      \tend\n\t\n\t-- Genders\n\tif type(data.genders) ~= \"table\" then\n\t\tdata.genders = { data.genders }\n\tend\n\t\n\tif data.genders and #data.genders &gt; 0 then\n\t\tlocal m_gen = require(\"Module:gender and number\")\n\t\ttable_insert(output, \"&amp;nbsp;\"\
      \ .. m_gen.format_list(data.genders, data.lang))\n\tend\n\t\n\tlocal annotations = {}\n\t\n\t-- Transliteration and transcription\n\tif data.tr or data.ts then\n\t\tlocal kind\n\t\tif face == \"term\" then\n\t\t\tkind = face\n\t\telse\n\t\t\tkind = \"\
      default\"\n\t\tend\n\t\t\n\t\tif data.tr and data.ts then\n\t\t\ttable_insert(annotations,\n\t\t\t\trequire(\"Module:script utilities\").tag_translit(data.tr, data.lang, kind)\n\t\t\t\t.. \" \" .. export.mark(data.ts, \"ts\"))\n\t\telseif data.ts then\n\
      \t\t\ttable_insert(annotations, export.mark(data.ts, \"ts\"))\n\t\telse\n\t\t\ttable_insert(annotations,\n\t\t\t\trequire(\"Module:script utilities\").tag_translit(data.tr, data.lang, kind))\n\t\tend\n\tend\n\t\n\t-- Gloss/translation\n\tif data.gloss\
      \ then\n\t\ttable_insert(annotations, export.mark(data.gloss, \"gloss\"))\n\tend\n\t\n\t-- Part of speech\n\tif data.pos then\n\t\t-- debug category for pos= containing transcriptions\n\t\tif data.pos:find(\"/[^&gt;&lt;]*/\") then\n\t\t\tdata.pos = data.pos\
      \ .. \"[[Category:links likely containing transcriptions in pos]]\"\n\t\tend\n\n\t\ttable_insert(annotations, export.mark(pos_tags[data.pos] or data.pos, \"pos\"))\n\tend\n\t\n\t-- Literal/sum-of-parts meaning\n\tif data.lit then\n\t\ttable_insert(annotations,\
      \ \"literally \" .. export.mark(data.lit, \"gloss\"))\n\tend\n\t\n\tif #annotations &gt; 0 then\n\t\ttable_insert(output, \" \" .. export.mark(table_concat(annotations, \", \"), \"annotations\"))\n\tend\n\t\n\treturn table_concat(output)\nend\n\n-- A version\
      \ of {{l}} or {{m}} that can be called from other modules too\nfunction export.full_link(data, face, allowSelfLink, dontLinkRecons)\n\tif type(data) ~= \"table\" then\n\t\terror(\"The first argument to the function full_link must be a table. \"\n\t\t\t\
      .. \"See Module:links/documentation for more information.\")\n\tend\n\t\n\t-- Create the link\n\tlocal output = {}\n\tlocal categories = {}\n\tlocal link = \"\"\n\tlocal annotations\n\t\n\t--local m_utilities = require(\"Module:utilities\")\n\t\n\t-- Is\
      \ there any text to show?\n\tif (data.term or data.alt) then\n\t\t-- Try to detect the script if it was not provided\n\t\tif not data.sc then\n\t\t\tdata.sc = require(\"Module:scripts\").findBestScript(data.alt or data.term, data.lang)\n\t\telse\n\t\t\t\
      -- Track uses of sc parameter\n\t\t\tlocal best = require(\"Module:scripts\").findBestScript(data.alt or data.term, data.lang)\n\t\t\trequire(\"Module:debug\").track(\"links/sc\")\n\t\t\t\n\t\t\tif data.sc:getCode() == best:getCode() then\n\t\t\t\trequire(\"\
      Module:debug\").track(\"links/sc/redundant\")\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/redundant/\" .. data.sc:getCode())\n\t\t\telse\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/needed\")\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/needed/\"\
      \ .. data.sc:getCode())\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal class = \"\"\n\t\t\n\t\tif data.accel then\n\t\t\tlocal form = data.accel.form and data.accel.form .. \"-form-of\" or \"\"\n\t\t\tlocal gender = data.accel.gender and \"gender-\" .. data.accel.gender\
      \ or \"\"\n\t\t\tlocal translit = data.accel.translit and \"transliteration-\" .. data.accel.translit or \"\"\n\t\t\t-- This is decoded again by [[WT:ACCEL]].\n\t\t\tlocal lemma = data.accel.lemma and \"origin-\" .. data.accel.lemma:gsub(\"%%\", \".\"\
      ):gsub(\" \", \"_\") or \"\" \n\t\t\tlocal lemma_translit = data.accel.lemma_translit and \"origin-transliteration-\" .. data.accel.lemma_translit or \"\"\n\t\t\tlocal no_store = data.accel.no_store and \"form-of-nostore\" or \"\"\n\t\t\t\n\t\t\taccel\
      \ =\n\t\t\t\tform .. \" \" ..\n\t\t\t\tgender .. \" \" ..\n\t\t\t\ttranslit .. \" \" ..\n\t\t\t\tlemma .. \" \" ..\n\t\t\t\tlemma_translit .. \" \" ..\n\t\t\t\tno_store .. \" \"\n\t\t\t\n\t\t\tclass = \"form-of lang-\" .. data.lang:getCode() .. \" \" ..\
      \ accel\n\t\tend\n\t\t\n\t\t-- Only make a link if the term has been given, otherwise just show the alt text without a link\n\t\tlink = require(\"Module:script utilities\").tag_text(\n\t\t\tdata.term and export.language_link(data, allowSelfLink, dontLinkRecons)\n\
      \t\t\tor data.alt, data.lang, data.sc, face, class)\n\telse\n\t\t--[[\tNo term to show.\n\t\t\t\tIs there at least a transliteration we can work from?\t]]\n\t\tlink = require(\"Module:script utilities\").request_script(data.lang, data.sc)\n\t\t\n\t\tif\
      \ link == \"\" or not data.tr or data.tr == \"-\" then\n\t\t\t-- No link to show, and no transliteration either. Show a term request.\n\t\t\tlocal category = \"\"\n\t\t\t\n\t\t\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\t\t\ttable_insert(categories,\
      \ \"[[Category:\" .. data.lang:getCanonicalName() .. \" term requests]]\")\n\t\t\tend\n\t\t\t\n\t\t\tlink = \"&lt;small&gt;[Term?]&lt;/small&gt;\"\n\t\tend\n\tend\n\t\n\ttable_insert(output, link)\n\t\n\tif data.tr == \"\" or data.tr == \"-\" then\n\t\t\
      data.tr = nil\n\t\n\telseif phonetic_extraction[data.lang:getCode()] then\n\t\tlocal m_phonetic = require(phonetic_extraction[data.lang:getCode()])\n\t\tdata.tr = data.tr or m_phonetic.getTranslit(export.remove_links(data.term))\n\t\n\telseif (data.term\
      \ or data.alt) and not data.sc:getCode():find(\"Lati?n\") then\n\t\t\n\t\t-- Try to generate a transliteration, unless transliteration has been\n\t\t-- supplied and we are in a high-memory entry.\n\t\tif not (data.tr and mw.loadData(\"Module:links/data\"\
      ).high_memory_entries[mw.title.getCurrentTitle().text]) then\n\t\t\tlocal automated_tr = data.lang:transliterate(export.remove_links(data.alt or data.term), data.sc)\n\t\t\t\n\t\t\tif automated_tr then\n\t\t\t\tlocal manual_tr = data.tr\n\t\t\t\t\n\t\t\
      \t\tif manual_tr then\n\t\t\t\t\tif manual_tr == automated_tr then\n\t\t\t\t\t\ttable_insert(categories,\n\t\t\t\t\t\t\t\"[[Category:Terms with redundant transliterations]]\"\n\t\t\t\t\t\t\t\t\t.. \"[[Category:Terms with redundant transliterations/\" ..\
      \ data.lang:getCode() .. \"]]\")\n\t\t\t\t\telse\n\t\t\t\t\t\t-- Prevents Arabic root categories from flooding the tracking categories.\n\t\t\t\t\t\tif mw.title.getCurrentTitle().nsText ~= \"Category\" then\n\t\t\t\t\t\t\ttable_insert(categories,\n\t\t\
      \t\t\t\t\t\t\"[[Category:Terms with manual transliterations different from the automated ones]]\"\n\t\t\t\t\t\t\t\t\t\t.. \"[[Category:Terms with manual transliterations different from the automated ones/\" .. data.lang:getCode() .. \"]]\")\n\t\t\t\t\t\
      \tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif (not manual_tr) or data.lang:overrideManualTranslit() then\n\t\t\t\t\tdata.tr = automated_tr\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Link to the transliteration entry for languages that\
      \ require this\n\tif data.tr and data.lang:link_tr() then\n\t\tdata.tr = export.language_link { lang = data.lang, term = data.tr }\n\tend\n\t\n\ttable_insert(output, export.format_link_annotations(data, face))\n\t\n\treturn table_concat(output) .. table_concat(categories)\n\
      end\n\n\n--[[\tStrips links: deletes category links,\n\t\tthe targets of piped links,\n\t\tand all double square brackets.\t\t\t]]\nfunction export.remove_links(text)\n\tif type(text) == \"table\" then\n\t\ttext = text.args[1]\n\tend\n\t\n\tif not text\
      \ or text == \"\" then\n\t\treturn \"\"\n\tend\n\t\n\ttext = mw.ustring.gsub(text, \"%[%[Category:[^|%]]-|?[^|%]]-%]%]\", \"\")\n\ttext = text:gsub(\"%[%[[^|%]]-|\", \"\")\n\ttext = text:gsub(\"%[%[\", \"\")\n\ttext = text:gsub(\"%]%]\", \"\")\n\t\n\t\
      return text\nend\n\nfunction export.english_links(text)\n\tlocal lang = require(\"Module:languages\").getByCode(\"en\")\n\t\n\t-- Parentheses around function call to remove second return value, the\n\t-- number of replacements.\n\treturn (text:gsub(\"\
      %[%[([^%]]+)%]%]\",\n\t\tfunction(linktext)\n\t\t\tlocal link = parseLink(linktext)\n\t\t\treturn makeLangLink(link, lang, nil, true, false)\n\t\tend))\nend\n\nfunction export.light_link(data)\n\tlocal language_names = mw.loadData(\"Module:languages/code\
      \ to canonical name\")\n\tlocal script_codes = mw.loadData(\"Module:scripts/codes\")\n\t\n\tif data.langCode then\n\t\tdata.langName = language_names[data.langCode] or error('The language code \"' .. data.langCode .. '\" is not recognized.')\n\telse\n\t\
      \terror('Language code is required.')\n\tend\n\t\n\tif not data.term then\n\t\terror('Term to link to is required.')\n\tend\n\t\n\tif data.scCode then\n\t\tif not script_codes[data.scCode] then\n\t\t\terror('The script code \"' .. data.sc .. '\" is not\
      \ recognized.')\n\t\tend\n\telse\n\t\terror(\"The function light_link requires a script code.\")\n\tend\n\t\n\tlocal fragment\n\tif data.id then\n\t\tfragment = data.langName .. \"-\" .. mw.uri.encode(data.id, \"WIKI\")\n\telse\n\t\tfragment = data.langName\n\
      \tend\n\t\n\treturn table_concat {\n\t\t'&lt;span class=\"', data.scCode, '\" lang=\"', data.langCode,\n\t\t'\"&gt;[[', data.term, \"#\", fragment, \"|\", (data.alt or data.term), \"]]&lt;/span&gt;\"\n\t}\nend\n\n--[=[\n\tFor example, Norwegian_Bokm.C3.A5l\
      \ → Norwegian_Bokmål. 0xC3 and 0xA5 are the\n\thexadecimal-base representation of the two bytes used to encode the character\n\tå in the UTF-8 encoding:\n\t\t11000011 10100101\n\t\n\tNote that the bytes used to represent a character are actually different\
      \ from\n\tthe Unicode codepoint. For å, the codepoint is 0xE5. The bits (digits) that\n\tactually spell the codepoint are found in the brackets: 110[00011] 10[100101].\n\tFor further explanation, see [[w:UTF-8#Description]].\n]=]\n\n-- The character class\
      \ %x should not be used, as it includes the characters a-f,\n-- which do not occur in these anchor encodings.\nlocal capitalHex = \"[0-9A-F]\"\n\nlocal function decodeAnchor(anchor)\n\treturn (anchor:gsub(\"%.(\" .. capitalHex .. capitalHex .. \")\",\n\
      \t\tfunction(hexByte)\n\t\t\treturn string.char(tonumber(hexByte, 16))\n\t\tend))\nend\n\nfunction export.section_link(link)\n\tif type(link) ~= \"string\" then\n\t\terror(\"The first argument to section_link was a \" .. type(link) .. \", but it should\
      \ be a string.\")\n\tend\n\t\n\tlink = link:gsub(\"_\", \" \")\n\t\n\tlocal numberSigns = require(\"Module:string\").count(link, \"#\")\n\t\n\tif numberSigns &gt; 1 then\n\t\terror(\"The section link should only contain one number sign (#).\")\n\tend\n\
      \t\n\tlocal page, section = link:match(\"^([^#]+)#(.+)$\")\n\t\n\tif page and section then\n\t\tsection = decodeAnchor(section)\n\t\t\n\t\t-- URI-encode (percent-encode) section to allow square brackets, [],\n\t\t-- in section name. If not percent-encoded,\
      \ they prevent the parser from\n\t\t-- recognizing the link.\n\t\treturn table_concat { \"[[\", page, \"#\", mw.uri.encode(section, \"WIKI\"), \"|\", page, \" § \", section, \"]]\" }\n\telse\n\t\terror('The function \"' .. section_link .. '\" could not\
      \ find a number sign marking a section name.')\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:22.471Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=62259 t=1555362382344010
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:22 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1224.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 587828146, 255495694, 692861606
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4453474\" pageid=\"4453474\" ns=\"828\" title=\"Module:languages\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-13T02:06:03Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add getNonEtymological\" xml:space=\"preserve\">local export = {}\n\n--[=[\tThis function checks for things that could plausibly be a language code:\n\t\ttwo or three lowercase letters,\
      \ two or three groups of three lowercase\n\t\tletters with hyphens between them. If such a pattern is not found,\n\t\tit is likely the editor simply forgot to enter a language code. ]=]\n\nfunction export.err(langCode, param, text, template_tag)\n\tlocal\
      \ ordinals = {\n\t\t\"first\", \"second\", \"third\", \"fourth\", \"fifth\", \"sixth\",\n\t\t\"seventh\", \"eighth\", \"ninth\", \"tenth\", \"eleventh\", \"twelfth\",\n\t\t\"thirteenth\", \"fourteenth\", \"fifteenth\", \"sixteenth\", \"seventeenth\",\n\
      \t\t\"eighteenth\", \"nineteenth\", \"twentieth\"\n\t}\n\t\n\tif not template_tag then\n\t\ttemplate_tag = \"\"\n\telse\n\t\tif type(template_tag) ~= \"string\" then\n\t\t\ttemplate_tag = template_tag()\n\t\tend\n\t\ttemplate_tag = \" (Original template:\
      \ \" .. template_tag .. \")\"\n\tend\n\tlocal paramType = type(param)\n\tif paramType == \"number\" then\n\t\tordinal = ordinals[param]\n\t\tparam = ordinal .. ' parameter'\n\telseif paramType == \"string\" then\n\t\tparam = 'parameter \"' .. param ..\
      \ '\"'\n\telse\n\t\terror(\"The parameter name is \"\n\t\t\t\t.. (paramType == \"table\" and \"a table\" or tostring(param))\n\t\t\t\t.. \", but it should be a number or a string.\" .. template_tag, 2)\n\tend\n\t\n\t-- Can use string.find because language\
      \ codes only contain ASCII.\n\tif not langCode or langCode == \"\" then\n\t\terror(\"The \" .. param .. \" (\" .. (text or \"language code\") .. \") is missing.\" .. template_tag, 2)\n\telseif langCode:find(\"^%l%l%l?$\")\n\t\t\tor langCode:find(\"^%l%l%l%-%l%l%l$\"\
      )\n\t\t\tor langCode:find(\"^%l%l%l%-%l%l%l%-%l%l%l$\") then\n\t\terror(\"The language code \\\"\" .. langCode .. \"\\\" is not valid.\" .. template_tag, 2)\n\telse\n\t\terror(\"Please enter a \" .. (text or \"language code\") .. \" in the \" .. param\
      \ .. \".\" .. template_tag, 2)\n\tend\nend\n\nlocal function do_entry_name_or_sort_key_replacements(text, replacements)\n\tif replacements.from then\n\t\tfor i, from in ipairs(replacements.from) do\n\t\t\tlocal to = replacements.to[i] or \"\"\n\t\t\ttext\
      \ = mw.ustring.gsub(text, from, to)\n\t\tend\n\tend\n\t\n\tif replacements.remove_diacritics then\n\t\ttext = mw.ustring.toNFD(text)\n\t\ttext = mw.ustring.gsub(text,\n\t\t\t'[' .. replacements.remove_diacritics .. ']',\n\t\t\t'')\n\t\ttext = mw.ustring.toNFC(text)\n\
      \tend\n\t\n\treturn text\nend\n\nlocal Language = {}\n\nfunction Language:getCode()\n\treturn self._code\nend\n\n\nfunction Language:getCanonicalName()\n\treturn self._rawData[1] or self._rawData.canonicalName\nend\n\n\nfunction Language:getOtherNames()\n\
      \treturn self._rawData.otherNames or {}\nend\n\n\nfunction Language:getType()\n\treturn self._rawData.type or \"regular\"\nend\n\n\nfunction Language:getWikimediaLanguages()\n\tif not self._wikimediaLanguageObjects then\n\t\tlocal m_wikimedia_languages\
      \ = require(\"Module:wikimedia languages\")\n\t\tself._wikimediaLanguageObjects = {}\n\t\tlocal wikimedia_codes = self._rawData.wikimedia_codes or { self._code }\n\t\t\n\t\tfor _, wlangcode in ipairs(wikimedia_codes) do\n\t\t\ttable.insert(self._wikimediaLanguageObjects,\
      \ m_wikimedia_languages.getByCode(wlangcode))\n\t\tend\n\tend\n\t\n\treturn self._wikimediaLanguageObjects\nend\n\nfunction Language:getWikipediaArticle()\n\tif self._rawData.wikipedia_article then\n\t\treturn self._rawData.wikipedia_article \n\telseif\
      \ self._wikipedia_article then\n\t\treturn self._wikipedia_article\n\telseif self:getWikidataItem() and mw.wikibase then\n\t\tself._wikipedia_article = mw.wikibase.sitelink(self:getWikidataItem(), 'enwiki')\n\tend\n\tif not self._wikipedia_article then\n\
      \t\tself._wikipedia_article = mw.ustring.gsub(self:getCategoryName(), \"Creole language\", \"Creole\")\n\tend\n\treturn self._wikipedia_article\nend\n\nfunction Language:makeWikipediaLink()\n\treturn \"[[w:\" .. self:getWikipediaArticle() .. \"|\" .. self:getCanonicalName()\
      \ .. \"]]\"\nend\n\nfunction Language:getWikidataItem()\n\treturn self._rawData[2] or self._rawData.wikidata_item\nend\n\nfunction Language:getScripts()\n\tif not self._scriptObjects then\n\t\tlocal m_scripts = require(\"Module:scripts\")\n\t\tself._scriptObjects\
      \ = {}\n\t\t\n\t\tfor _, sc in ipairs(self._rawData.scripts or { \"None\" }) do\n\t\t\ttable.insert(self._scriptObjects, m_scripts.getByCode(sc))\n\t\tend\n\tend\n\t\n\treturn self._scriptObjects\nend\n\nfunction Language:getScriptCodes()\n\treturn self._rawData.scripts\
      \ or { \"None\" }\nend\n\nfunction Language:getFamily()\n\tif self._familyObject then\n\t\treturn self._familyObject\n\tend\n\t\t\n\tlocal family = self._rawData[3] or self._rawData.family \n\tif family then\n\t\tself._familyObject = require(\"Module:families\"\
      ).getByCode(family)\n\tend\n\t\n\treturn self._familyObject\nend\n\n\nfunction Language:getAncestors()\n\tif not self._ancestorObjects then\n\t\tself._ancestorObjects = {}\n\t\t\n\t\tif self._rawData.ancestors then\n\t\t\tfor _, ancestor in ipairs(self._rawData.ancestors)\
      \ do\n\t\t\t\ttable.insert(self._ancestorObjects, export.getByCode(ancestor) or require(\"Module:etymology languages\").getByCode(ancestor))\n\t\t\tend\n\t\telse\n\t\t\tlocal fam = self:getFamily()\n\t\t\tlocal protoLang = fam and fam:getProtoLanguage()\
      \ or nil\n\t\t\t\n\t\t\t-- For the case where the current language is the proto-language\n\t\t\t-- of its family, we need to step up a level higher right from the start.\n\t\t\tif protoLang and protoLang:getCode() == self:getCode() then\n\t\t\t\tfam =\
      \ fam:getFamily()\n\t\t\t\tprotoLang = fam and fam:getProtoLanguage() or nil\n\t\t\tend\n\t\t\t\n\t\t\twhile not protoLang and not (not fam or fam:getCode() == \"qfa-not\") do\n\t\t\t\tfam = fam:getFamily()\n\t\t\t\tprotoLang = fam and fam:getProtoLanguage()\
      \ or nil\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(self._ancestorObjects, protoLang)\n\t\tend\n\tend\n\t\n\treturn self._ancestorObjects\nend\n\nlocal function iterateOverAncestorTree(node, func)\n\tfor _, ancestor in ipairs(node:getAncestors()) do\n\t\t\
      if ancestor then\n\t\t\tlocal ret = func(ancestor) or iterateOverAncestorTree(ancestor, func)\n\t\t\tif ret then\n\t\t\t\treturn ret\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction Language:getAncestorChain()\n\tif not self._ancestorChain then\n\t\tself._ancestorChain\
      \ = {}\n\t\tlocal step = #self:getAncestors() == 1 and self:getAncestors()[1] or nil\n\t\t\n\t\twhile step do\n\t\t\ttable.insert(self._ancestorChain, 1, step)\n\t\t\tstep = #step:getAncestors() == 1 and step:getAncestors()[1] or nil\n\t\tend\n\tend\n\t\
      \n\treturn self._ancestorChain\nend\n\n\nfunction Language:hasAncestor(otherlang)\n\tlocal function compare(ancestor)\n\t\treturn ancestor:getCode() == otherlang:getCode()\n\tend\n\t\n\treturn iterateOverAncestorTree(self, compare) or false\nend\n\n\n\
      function Language:getCategoryName()\n\tlocal name = self:getCanonicalName()\n\t\n\t-- If the name already has \"language\" in it, don't add it.\n\tif name:find(\"[Ll]anguage$\") then\n\t\treturn name\n\telse\n\t\treturn name .. \" language\"\n\tend\nend\n\
      \n\nfunction Language:getStandardCharacters()\n\treturn self._rawData.standardChars\nend\n\n\nfunction Language:makeEntryName(text)\n\ttext = mw.ustring.gsub(text, \"^[¿¡]\", \"\")\n\ttext = mw.ustring.gsub(text, \"(.)[؟?!;՛՜ ՞ ՟？！︖︕।॥။၊་།]$\", \"%1\"\
      )\n\t\n\tif self:getCode() == \"ar\" then\n\t\tlocal U = mw.ustring.char\n\t\tlocal taTwiil = U(0x640)\n\t\tlocal waSla = U(0x671)\n\t\t-- diacritics ordinarily removed by entry_name replacements\n\t\tlocal Arabic_diacritics = U(0x64B, 0x64C, 0x64D, 0x64E,\
      \ 0x64F, 0x650, 0x651, 0x652, 0x670)\n\t\t\n\t\tif text == waSla or mw.ustring.find(text, \"^\" .. taTwiil .. \"?[\" .. Arabic_diacritics .. \"]\" .. \"$\") then\n\t\t\treturn text\n\t\tend\n\tend\n\t\n\tif type(self._rawData.entry_name) == \"table\" then\n\
      \t\ttext = do_entry_name_or_sort_key_replacements(text, self._rawData.entry_name)\n\tend\n\t\n\treturn text\nend\n\n\n-- Add to data tables?\nlocal has_dotted_undotted_i = {\n\t[\"az\"] = true,\n\t[\"crh\"] = true,\n\t[\"gag\"] = true,\n\t[\"kaa\"] = true,\n\
      \t[\"tt\"] = true,\n\t[\"tr\"] = true,\n\t[\"zza\"] = true,\n}\n\nfunction Language:makeSortKey(name, sc)\n\tif has_dotted_undotted_i[self:getCode()] then\n\t\tname = name:gsub(\"I\", \"ı\")\n\tend\n\t\n\tname = mw.ustring.lower(name)\n\t\n\t-- Remove\
      \ initial hyphens and *\n\tlocal hyphens_regex = \"^[-־ـ*]+(.)\"\n\tname = mw.ustring.gsub(name, hyphens_regex, \"%1\")\n\t\n\t-- If there are language-specific rules to generate the key, use those\n\tif type(self._rawData.sort_key) == \"table\" then\n\
      \t\tname = do_entry_name_or_sort_key_replacements(name, self._rawData.sort_key)\n\telseif type(self._rawData.sort_key) == \"string\" then\n\t\tname = require(\"Module:\" .. self._rawData.sort_key).makeSortKey(name, self:getCode(), sc and sc:getCode())\n\
      \tend\n\t\n\t-- Remove parentheses, as long as they are either preceded or followed by something\n\tname = mw.ustring.gsub(name, \"(.)[()]+\", \"%1\")\n\tname = mw.ustring.gsub(name, \"[()]+(.)\", \"%1\")\n\t\n\tif has_dotted_undotted_i[self:getCode()]\
      \ then\n\t\tname = name:gsub(\"i\", \"İ\")\n\tend\n\t\n\treturn mw.ustring.upper(name)\nend\n\nfunction Language:overrideManualTranslit()\n\tif self._rawData.override_translit then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\n\nfunction Language:transliterate(text,\
      \ sc, module_override)\n\tif not ((module_override or self._rawData.translit_module) and text) then\n\t\treturn nil\n\tend\n\t\n\tif module_override then\n\t\trequire(\"Module:debug\").track(\"module_override\")\n\tend\n\t\n\treturn require(\"Module:\"\
      \ .. (module_override or self._rawData.translit_module)).tr(text, self:getCode(), sc and sc:getCode() or nil)\nend\n\nfunction Language:hasTranslit()\n\treturn self._rawData.translit_module and true or false\nend\n\n\nfunction Language:link_tr()\n\treturn\
      \ self._rawData.link_tr and true or false\nend\n\n\nfunction Language:toJSON()\n\tlocal entryNamePatterns = nil\n\tlocal entryNameRemoveDiacritics = nil\n\t\n\tif self._rawData.entry_name then\n\t\tentryNameRemoveDiacritics = self._rawData.entry_name.remove_diacritics\n\
      \t\tif self._rawData.entry_name.from then\n\t\t\tentryNamePatterns = {}\n\t\t\tfor i, from in ipairs(self._rawData.entry_name.from) do\n\t\t\t\tlocal to = self._rawData.entry_name.to[i] or \"\"\n\t\t\t\ttable.insert(entryNamePatterns, { from = from, to\
      \ = to })\n\t\t\tend\n\t\tend\n\tend\n\t\n\tlocal ret = {\n\t\tancestors = self._rawData.ancestors,\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\tentryNamePatterns = entryNamePatterns,\n\
      \t\tfamily = self._rawData[3] or self._rawData.family,\n\t\totherNames = self:getOtherNames(),\n\t\tscripts = self._rawData.scripts,\n\t\ttype = self:getType(),\n\t\twikimediaLanguages = self._rawData.wikimedia_codes,\n\t\twikidataItem = self:getWikidataItem(),\n\
      \t}\n\t\n\treturn require(\"Module:JSON\").toJSON(ret)\nend\n\n\n-- Do NOT use this method!\n-- All uses should be pre-approved on the talk page!\nfunction Language:getRawData()\n\treturn self._rawData\nend\n\nLanguage.__index = Language\n\n\nfunction\
      \ export.getDataModuleName(code)\n\tif code:find(\"^%l%l$\") then\n\t\treturn \"languages/data2\"\n\telseif code:find(\"^%l%l%l$\") then\n\t\tlocal prefix = code:sub(1, 1)\n\t\treturn \"languages/data3/\" .. prefix\n\telseif code:find(\"^[%l-]+$\") then\n\
      \t\treturn \"languages/datax\"\n\telse\n\t\treturn nil\n\tend\nend\n\n\nlocal function getRawLanguageData(code)\n\tlocal modulename = export.getDataModuleName(code)\n\treturn modulename and mw.loadData(\"Module:\" .. modulename)[code] or nil\nend\n\n\n\
      function export.makeObject(code, data)\n\tif data and data.deprecated then\n\t\trequire(\"Module:debug\").track {\n\t\t\t\"languages/deprecated\",\n\t\t\t\"languages/deprecated/\" .. code\n\t\t}\n\tend\n\t\n\treturn data and setmetatable({ _rawData = data,\
      \ _code = code }, Language) or nil\nend\n\n\nfunction export.getByCode(code)\n\tif type(code) ~= \"string\" then\n\t\terror(\"The function getByCode expects a string as its first argument, but received \" .. (code == nil and \"nil\" or \"a \" .. type(code))\
      \ .. \".\")\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.getByName(name)\n\tlocal byName = mw.loadData(\"Module:languages/by name\")\n\tlocal code = byName.all and byName.all[name] or byName[name]\n\t\
      \n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.getByCanonicalName(name)\n\tlocal byName = mw.loadData(\"Module:languages/canonical names\")\n\tlocal code = byName and\
      \ byName[name]\n\t\n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.iterateAll()\n\tmw.incrementExpensiveFunctionCount()\n\tlocal m_data = mw.loadData(\"Module:languages/alldata\"\
      )\n\tlocal func, t, var = pairs(m_data)\n\t\n\treturn function()\n\t\tlocal code, data = func(t, var)\n\t\treturn export.makeObject(code, data)\n\tend\nend\n\n--[[\tIf language is an etymology language, iterates through parent languages\n\t\tuntil it finds\
      \ a non-etymology language. ]]\nfunction export.getNonEtymological(lang)\n\twhile lang:getType() == \"etymology language\" do\n\t\tlocal parentCode = lang:getParentCode()\n\t\tlocal parent = export.getByCode(parentCode)\n\t\t\tor require(\"Module:etymology\
      \ languages\").getByCode(parentCode)\n\t\t\tor require(\"Module:families\").getByCode(parentCode)\n\t\t\n\t\tlang = parent\n--\t\tmw.log(terminfo.lang:getCode() .. \" \" .. terminfo.lang:getType())\n\tend\n\t\n\treturn lang\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:22.706Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata2&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50354 t=1555362382551755
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:22 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1283.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 190512071, 647401852, 686612054
    body: !!binary |-
      
- recorded: 2019-04-15T21:06:25.242Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=64767 t=1555362385122097
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:25 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1278.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 666294747, 499786455, 695479680
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4073440\" pageid=\"4073440\" ns=\"828\" title=\"Module:utilities\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-10-30T22:40:37Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"pipe doesn&#039;t have to be escaped\" xml:space=\"preserve\">local export = {}\n\nlocal data = mw.loadData(\"Module:utilities/data\")\nlocal notneeded = data.notneeded\nlocal neededhassubpage\
      \ = data.neededhassubpage\n\n-- A helper function to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nfunction export.pattern_escape(text)\n\tif type(text) == \"table\" then\n\t\ttext = text.args[1]\n\tend\n\ttext = mw.ustring.gsub(text,\
      \ \"([%^$()%%.%[%]*+%-?])\", \"%%%1\")\n\treturn text\nend\n\nfunction export.plain_gsub(text, pattern, replacement)\n\tlocal invoked = false\n\t\n\tif type(text) == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\
      \t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = {},\n\t\t\t\t[2] = {},\n\t\t\t\t[3] = { allow_empty = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\
      \t\t\treplacement = args[3]\n\t\telse\n\t\t\terror(\"If the first argument to plain_gsub is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not ( type(pattern) == \"string\" or type(pattern) == \"number\" ) then\n\t\t\terror(\"The second\
      \ argument to plain_gsub should be a string or a number.\")\n\t\tend\n\t\t\n\t\tif not ( type(replacement) == \"string\" or type(replacement) == \"number\" ) then\n\t\t\terror(\"The third argument to plain_gsub should be a string or a number.\")\n\t\t\
      end\n\tend\n\t\n\tpattern = export.pattern_escape(pattern)\n\t\n\tif invoked then\n\t\ttext = mw.ustring.gsub(text, pattern, replacement)\n\t\treturn text\n\telse\n\t\treturn mw.ustring.gsub(text, pattern, replacement)\n\tend\nend\n\n--[[\nFormat the categories\
      \ with the appropriate sort key. CATEGORIES is a list of\ncategories.\n\t-- LANG is an object encapsulating a language; if nil, the object for\n\t   language code 'und' (undetermined) will be used.\n\t-- SORT_KEY is placed in the category invocation, and\
      \ indicates how the\n\t   page will sort in the respective category. Normally this should be nil,\n\t   and a default sort key based on the subpage name (the part after the\n\t   colon) will be used.\n\t-- SORT_BASE lets you override the default sort key\
      \ used when SORT_KEY is\n\t   nil. Normally, this should be nil, and a language-specific default sort\n\t   key is computed from the subpage name (e.g. for Russian this converts\n\t   Cyrillic ё to a string consisting of Cyrillic е followed by U+10FFFF,\n\
      \t   so that effectively ё sorts after е instead of the default Wikimedia\n\t   sort, which (I think) is based on Unicode sort order and puts ё after я,\n\t   the last letter of the Cyrillic alphabet.\n\t-- FORCE_OUTPUT forces normal output in all namespaces.\
      \ Normally, nothing\n\t   is output if the page isn't in the main, Appendix:, Reconstruction: or\n\t   Citations: namespaces.\n]]\nfunction export.format_categories(categories, lang, sort_key, sort_base, force_output, sc)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\
      \t\n\tif type(lang) == \"table\" and not lang.getCode then\n\t\terror(\"The second argument to format_categories should be a language object.\")\n\tend\n\t\n\tif force_output or data.allowedNamespaces[NAMESPACE] then\n\t\tlocal PAGENAME = mw.title.getCurrentTitle().text\n\
      \t\tlocal SUBPAGENAME = mw.title.getCurrentTitle().subpageText\n\t\t\n\t\tif not lang then\n\t\t\tlang = require(\"Module:languages\").getByCode(\"und\")\n\t\tend\n\t\t\n\t\t-- Generate a default sort key\n\t\tsort_base = lang:makeSortKey(sort_base or\
      \ SUBPAGENAME, sc)\n\t\t\n\t\tif sort_key and sort_key ~= \"\" then\n\t\t\t-- Gather some statistics regarding sort keys\n\t\t\tif mw.ustring.upper(sort_key) == sort_base then\n\t\t\t\ttable.insert(categories, \"Sort key tracking/redundant\")\n\t\t\tend\n\
      \t\telse\n\t\t\tsort_key = sort_base\n\t\tend\n\t\t\n\t\t--[[\tIf the resulting key is the same as the wiki software's\n\t\t\t\tdefault, or if the sortkey is empty, remove it\t\t\t ]]\n\t\tif sort_key == PAGENAME or sort_key == \"\" then\n\t\t\tsort_key\
      \ = nil\n\t\tend\n\t\t\n\t\tlocal out_categories = {}\n\t\tfor key, cat in ipairs(categories) do\n\t\t\tout_categories[key] = \"[[Category:\" .. cat .. (sort_key and \"|\" .. sort_key or \"\") .. \"]]\"\n\t\tend\n\t\t\n\t\treturn table.concat(out_categories,\
      \ \"\")\n\telse\n\t\treturn \"\"\n\tend\nend\n\n-- Used by {{categorize}}\nfunction export.template_categorize(frame)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\tlocal format = frame.args[\"format\"]\n\tlocal args = frame:getParent().args\n\
      \t\n\tlocal langcode = args[1]; if langcode == \"\" then langcode = nil end\n\tlocal sort_key = args[\"sort\"]; if sort_key == \"\" then sort_key = nil end\n\tlocal categories = {}\n\t\n\tif not langcode then\n\t\tif NAMESPACE == \"Template\" then return\
      \ \"\" end\n\t\terror(\"Language code has not been specified. Please pass parameter 1 to the template.\")\n\tend\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(langcode)\n\t\n\tif not lang then\n\t\tif NAMESPACE == \"Template\" then return\
      \ \"\" end\n\t\terror(\"The language code \\\"\" .. langcode .. \"\\\" is not valid.\")\n\tend\n\t\n\tlocal prefix = \"\"\n\t\n\tif format == \"pos\" then\n\t\tprefix = lang:getCanonicalName() .. \" \"\n\telseif format == \"topic\" then\n\t\tprefix = lang:getCode()\
      \ .. \":\"\n\tend\n\t\n\tlocal i = 2\n\tlocal cat = args[i]\n\t\n\twhile cat do\n\t\tif cat ~= \"\" then\n\t\t\ttable.insert(categories, prefix .. cat)\n\t\tend\n\t\t\n\t\ti = i + 1\n\t\tcat = args[i]\n\tend\n\t\n\treturn export.format_categories(categories,\
      \ lang, sort_key)\nend\n\nfunction export.catfix(lang, sc)\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"catfix/no lang\")\n\t\treturn nil\n\telseif type(lang) ~= \"table\" then\n\t\trequire(\"Module:debug\").track(\"catfix/lang not table\"\
      )\n\t\treturn nil\n\tend\n\tlocal canonicalName = lang:getCanonicalName() or error('The first argument to the function \"catfix\" should be a language object from Module:languages.')\n\t\n\tif sc and not sc.getCode then\n\t\terror('The second argument\
      \ to the function \"catfix\" should be a script object from Module:scripts.')\n\tend\n\t\n\t-- To add script classes to links on pages created by category boilerplate templates.\n\tif not sc then\n\t\tsc = data.catfix_scripts[lang:getCode()]\n\t\tif sc\
      \ then\n\t\t\tsc = require(\"Module:scripts\").getByCode(sc)\n\t\tend\n\tend\n\t\n\treturn \"&lt;span id=\\\"catfix\\\" style=\\\"display:none;\\\" class=\\\"CATFIX-\" .. mw.uri.anchorEncode(canonicalName) .. \"\\\"&gt;\" ..\n\t\trequire(\"Module:script\
      \ utilities\").tag_text(\"&amp;nbsp;\", lang, sc, nil) ..\n\t\t\"&lt;/span&gt;\"\nend\n\nfunction export.catfix_template(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t\t[2] = { alias_of = \"sc\" },\n\t\t[\"sc\"] = {},\n\t}\n\t\n\tlocal args = require(\"\
      Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal sc = args.sc\n\tif sc then\n\t\tsc = require(\"Module:scripts\"\
      ).getByCode(sc) or error('The script code \"' .. sc .. '\", provided in the second parameter, is not valid.')\n\tend\n\t\n\treturn export.catfix(lang, sc)\nend\n\n-- Not exporting because it is not used yet.\nlocal function getDateTense(frame) \n\tlocal\
      \ name_num_mapping = {[\"January\"] = 1, [\"February\"] = 2, [\"March\"] = 3, [\"April\"] = 4, [\"May\"] = 5, [\"June\"] = 6, \n\t\t[\"July\"] = 7, [\"August\"] = 8, [\"September\"] = 9, [\"October\"] = 10, [\"November\"] = 11, [\"December\"] = 12, \n\t\
      \t[1] = 1, [2] = 2, [3] = 3, [4] = 4, [5] = 5, [6] = 6, [7] = 7, [8] = 8, [9] = 9, [10] = 10, [11] = 11, [12] = 12}\n\tlocal month = name_num_mapping[frame.args[2]]\n\tlocal date = os.time({year = frame.args[1], day = frame.args[3], month = month})\n\t\
      local today = os.time() -- 12 AM/PM\n\tlocal diff = os.difftime(date, today)\n\tlocal daylength = 24 * 3600\n\t\n\tif diff &lt; -daylength / 2 then return \"past\"\n\telse \n\t\tif diff &gt; daylength / 2  then return \"future\"\n\t\telse return \"present\"\
      \ end\n\tend\nend\n\nfunction export.make_id(lang, str)\n\t--[[\tIf called with invoke, first argument is a frame object.\n\t\t\tIf called by a module, first argument is a language object. ]]\n\tlocal invoked = false\n\t\n\tif type(lang) == \"table\" then\n\
      \t\tif lang.args then\n\t\t\tinvoked = true\n\t\t\t\n\t\t\tlocal frame = lang\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = {},\n\t\t\t\t[2] = {},\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\
      \t\t\t\n\t\t\tlocal langCode = args[1]\n\t\t\tstr = args[2]\n\t\t\t\n\t\t\tlocal m_languages = require(\"Module:languages\")\n\t\t\t\n\t\t\tlang = m_languages.getByCode(langCode) or m_languages.err(langCode, 1)\n\t\telseif not lang.getCanonicalName then\n\
      \t\t\terror(\"The first argument to make_id should be a language object.\")\n\t\tend\n\tend\n\n\tif not ( type(str) == \"string\" or type(str) == \"number\" ) then\n\t\terror(\"The second argument to make_id should be a string or a number.\")\n\tend\n\t\
      \n\tlocal canonicalName = lang:getCanonicalName()\n\t\n\tstr = mw.uri.encode(str, \"WIKI\")\n\t\n\tlocal id = canonicalName .. \"-\" .. str\n\t\n\tif invoked then\n\t\treturn '&lt;li class=\"senseid\" id=\"' .. id .. '\"&gt;'\n\telse\n\t\treturn id\n\t\
      end\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:24.224Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55061 t=1555362384106986
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:24 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1284.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 909799923, 257332985, 695316210
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4099100\" pageid=\"4099100\" ns=\"828\" title=\"Module:script utilities\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T16:56:29Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 52248476 by [[Special:Contributions/Rua|Rua]] ([[User talk:Rua|talk]])\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\tModules used:\n\t[[Module:script utilities/data]]\n\
      \t[[Module:scripts]]\n\t[[Module:languages]]\n\t[[Module:parameters]]\n\t[[Module:utilities]]\n\t[[Module:debug]]\n]=]\n\nfunction export.is_Latin_script(sc)\n\t-- Latn, Latf, Latinx, nv-Latn, pjt-Latn\n\treturn sc:getCode():find(\"Lat\") and true or false\n\
      end\n\n-- Used by [[Template:lang]]\nfunction export.lang_t(frame)\n\tparams = {\n\t\t[1] = {},\n\t\t[2] = { allow_empty = true, default = \"\" },\n\t\t[\"sc\"] = {},\n\t\t[\"face\"] = {},\n\t\t[\"class\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\t\n\tlocal lang = args[1] or (NAMESPACE == \"Template\" and \"und\") or error(\"Language code has not been specified. Please pass parameter 1 to the template.\"\
      )\n\tlang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, 1)\n\t\n\tlocal text = args[2]\n\t\n\tlocal sc = args[\"sc\"]\n\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\
      \" .. sc .. \"\\\" is not valid.\")) or nil)\n\t\n\tlocal face = args[\"face\"]\n\t\n\treturn export.tag_text(text, lang, sc, face, class)\nend\n\n-- Ustring turns on the codepoint-aware string matching. The basic string function\n-- should be used for\
      \ simple sequences of characters, Ustring function for\n-- sets – [].\nlocal function trackPattern(text, pattern, tracking, ustring)\n\tlocal find = ustring and mw.ustring.find or string.find\n\tif pattern and find(text, pattern) then\n\t\trequire(\"Module:debug\"\
      ).track(\"script/\" .. tracking)\n\tend\nend\n\nlocal function track(text, lang, sc)\n\tlocal U = mw.ustring.char\n\t\n\tif lang and text then\n\t\tlocal langCode = lang:getCode()\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/ang/acute]]\n\
      \t\tif langCode == \"ang\" then\n\t\t\tlocal decomposed = mw.ustring.toNFD(text)\n\t\t\tlocal acute = U(0x301)\n\t\t\t\n\t\t\ttrackPattern(decomposed, acute, \"ang/acute\")\n\t\t\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-phi]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-theta]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-kappa]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-rho]]\n\t\t\tϑ, ϰ, ϱ, ϕ should generally\
      \ be replaced with θ, κ, ρ, φ.\n\t\t]=]\n\t\telseif langCode == \"el\" or langCode == \"grc\" then\n\t\t\ttrackPattern(text, \"ϑ\", \"Greek/wrong-theta\")\n\t\t\ttrackPattern(text, \"ϰ\", \"Greek/wrong-kappa\")\n\t\t\ttrackPattern(text, \"ϱ\", \"Greek/wrong-rho\"\
      )\n\t\t\ttrackPattern(text, \"ϕ\", \"Greek/wrong-phi\")\n\t\t\n\t\t\t--[=[\n\t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/spacing-coronis]]\n\t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/spacing-smooth-breathing]]\n\
      \t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/wrong-apostrophe]]\n\t\t\t\tWhen spacing coronis and spacing smooth breathing are used as apostrophes, \n\t\t\t\tthey should be replaced with right single quotation marks (’).\n\t\t\t\
      ]=]\n\t\t\tif langCode == \"grc\" then\n\t\t\t\ttrackPattern(text, U(0x1FBD), \"Ancient Greek/spacing-coronis\")\n\t\t\t\ttrackPattern(text, U(0x1FBF), \"Ancient Greek/spacing-smooth-breathing\")\n\t\t\t\ttrackPattern(text, \"[\" .. U(0x1FBD) .. U(0x1FBF)\
      \ .. \"]\", \"Ancient Greek/wrong-apostrophe\", true)\n\t\t\tend\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/Russian/grave-accent]]\n\t\telseif langCode == \"ru\" then\n\t\t\tlocal decomposed = mw.ustring.toNFD(text)\n\t\t\t\n\t\t\t\
      trackPattern(decomposed, U(0x300), \"Russian/grave-accent\")\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/Tibetan/trailing-punctuation]]\n\t\telseif langCode == \"bo\" then\n\t\t\ttrackPattern(text, \"[་།]$\", \"Tibetan/trailing-punctuation\"\
      , true)\n\t\t\ttrackPattern(text, \"[་།]%]%]$\", \"Tibetan/trailing-punctuation\", true)\n\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/broken-ae]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/broken-am]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/wrong-rue-lue]]\n\
      \t\t]=]\n\t\telseif langCode == \"th\" then\n\t\t\ttrackPattern(text, \"เ\"..\"เ\", \"Thai/broken-ae\")\n\t\t\ttrackPattern(text, \"ํ[่้๊๋]?า\", \"Thai/broken-am\", true)\n\t\t\ttrackPattern(text, \"[ฤฦ]า\", \"Thai/wrong-rue-lue\", true)\n\n\t\t--[=[\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Lao/broken-ae]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Lao/broken-am]]\n\t\t]=]\n\t\telseif langCode == \"lo\" then\n\t\t\ttrackPattern(text, \"ເ\"..\"ເ\", \"Lao/broken-ae\")\n\t\t\ttrackPattern(text,\
      \ \"ໍ[່້໊໋]?າ\", \"Lao/broken-am\", true)\n\t\tend\n\tend\nend\n\n-- Wrap text in the appropriate HTML tags with language and script class.\nfunction export.tag_text(text, lang, sc, face, class, id)\n\tif not sc then\n\t\tsc = require(\"Module:scripts\"\
      ).findBestScript(text, lang)\n\tend\n\t\n\ttrack(text, lang, sc)\n\t\t\n\t-- Replace space characters with newlines in Mongolian-script text, which is written top-to-bottom.\n\tif sc and sc:getDirection() == \"down\" then\n\t\t--[[\tFirst, escape targets\
      \ of wikilinks and HTML tags,\n\t\t\t\twhich should not have their spaces\n\t\t\t\treplaced with line breaks. ]]\n\t\tlocal escaped = {}\n\t\tlocal i = 0\n\t\tlocal escape_format = \"$%d\"\n\t\t\n\t\tlocal function escape(text, pattern, prefix)\n\t\t\t\
      return text:gsub(\n\t\t\t\tpattern,\n\t\t\t\tfunction(item)\n\t\t\t\t\ti = i + 1\n\t\t\t\t\tescaped[i] = item\n\t\t\t\t\treturn (prefix or \"\") .. escape_format:format(i)\n\t\t\t\tend)\n\t\tend\n\t\t\n\t\ttext = escape(text, \"%[%[([^|]+|)\", \"[[\")\n\
      \t\ttext = escape(text, \"&lt;[^&gt;]+&gt;\")\n\t\t\n\t\ttext = text:gsub(\" +\", \"&lt;br&gt;\")\n\t\t\n\t\t-- Unescape whatever was escaped.\n\t\ttext = text:gsub(\n\t\t\t\"$(%d)\",\n\t\t\tfunction(a)\n\t\t\t\ta = tonumber(a)\n\t\t\t\treturn escaped[a]\n\
      \t\t\tend\n\t\t)\n\tend\n\n\tif sc:getCode() == \"Imag\" then\n\t\tface = nil\n\tend\n\n\tlocal function class_attr(classes)\n\t\ttable.insert(classes, 1, sc:getCode())\n\t\tif class and class ~= '' then\n\t\t\ttable.insert(classes, class)\n\t\tend\n\t\
      \treturn 'class=\"' .. table.concat(classes, ' ') .. '\"'\n\tend\n\t\n\tlocal function tag_attr(...)\n\t\tlocal output = {}\n\t\tif id then\n\t\t\ttable.insert(output, 'id=\"' .. require(\"Module:utilities\").make_id(lang, id) .. '\"')\n\t\tend\n\t\t\n\
      \t\ttable.insert(output, class_attr({...}) )\n\t\t\n\t\tif lang then\n\t\t\ttable.insert(output, 'lang=\"' .. lang:getCode() .. '\"')\n\t\tend\n\t\t\n\t\treturn table.concat(output, \" \")\n\tend\n\t\n\tif face == \"hypothetical\" then\n\t-- [[Special:WhatLinksHere/Template:tracking/script-utilities/face/hypothetical]]\n\
      \t\trequire(\"Module:debug\").track(\"script-utilities/face/hypothetical\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").faces[face or \"nil\"]\n\t\n\tlocal post = \"\"\n\tif sc:getDirection() == \"rtl\" and (face == \"translation\"\
      \ or mw.ustring.find(text, \"%p$\")) then\n\t\tpost = \"&amp;lrm;\"\n\tend\n\t\n\t-- Add a script wrapper\n\tif data then\n\t\treturn ( data.prefix or \"\" ) .. '&lt;' .. data.tag .. ' ' .. tag_attr(data.class) .. '&gt;' .. text .. '&lt;/' .. data.tag\
      \ .. '&gt;' .. post\n\telse\n\t\terror('Invalid script face \"' .. face .. '\".')\n\tend\nend\n\nfunction export.tag_translit(translit, lang, kind, attributes, is_manual)\n\tif type(lang) == \"table\" then\n\t\tlang = lang.getCode and lang:getCode()\n\t\
      \t\tor error(\"Third argument to tag_translit should be a language code or language object.\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").translit[kind or \"default\"]\n\t\n\tlocal opening_tag = {}\n\t\n\ttable.insert(opening_tag,\
      \ data.tag)\n\tif lang == \"ja\" then\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. (is_manual and \"manual-tr \" or \"\") .. 'tr\"')\n\telse\n\t\ttable.insert(opening_tag, 'lang=\"' .. lang .. '-Latn\"\
      ')\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. (is_manual and \"manual-tr \" or \"\") .. 'tr Latn\"')\n\tend\n\t\n\tif data.dir then\n\t\ttable.insert(opening_tag, 'dir=\"' .. data.dir .. '\"')\n\tend\n\
      \t\n\ttable.insert(opening_tag, attributes)\n\t\n\treturn \"&lt;\" .. table.concat(opening_tag, \" \") .. \"&gt;\" .. translit .. \"&lt;/\" .. data.tag .. \"&gt;\"\nend\n\nfunction export.tag_transcription(transcription, lang, kind, attributes)\n\tif type(lang)\
      \ == \"table\" then\n\t\tlang = lang.getCode and lang:getCode()\n\t\t\tor error(\"Third argument to tag_translit should be a language code or language object.\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").transcription[kind\
      \ or \"default\"]\n\t\n\tlocal opening_tag = {}\n\t\n\ttable.insert(opening_tag, data.tag)\n\tif lang == \"ja\" then\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. 'ts\"')\n\telse\n\t\ttable.insert(opening_tag,\
      \ 'lang=\"' .. lang .. '-Latn\"')\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. 'ts Latn\"')\n\tend\n\t\n\tif data.dir then\n\t\ttable.insert(opening_tag, 'dir=\"' .. data.dir .. '\"')\n\tend\n\t\n\ttable.insert(opening_tag,\
      \ attributes)\n\t\n\treturn \"&lt;\" .. table.concat(opening_tag, \" \") .. \"&gt;\" .. transcription .. \"&lt;/\" .. data.tag .. \"&gt;\"\t\nend\n\n-- Add a notice to request the native script of a word\nfunction export.request_script(lang, sc)\n\tlocal\
      \ scripts = lang.getScripts and lang:getScripts() or error('The language \"' .. lang:getCode() .. '\" does not have the method getScripts. It may be unwritten.')\n\t\n\t-- By default, request for \"native\" script\n\tlocal cat_script = \"native\"\n\tlocal\
      \ disp_script = \"script\"\n\t\n\t-- If the script was not specified, and the language has only one script, use that.\n\tif not sc and #scripts == 1 then\n\t\tsc = scripts[1]\n\tend\n\t\n\t-- Is the script known?\n\tif sc then\n\t\t-- If the script is\
      \ Latin, return nothing.\n\t\tif export.is_Latin_script(sc) then\n\t\t\treturn \"\"\n\t\tend\n\t\t\n\t\tif sc:getCode() ~= scripts[1]:getCode() then\n\t\t\tdisp_script = sc:getCanonicalName()\n\t\tend\n\t\t\n\t\t-- The category needs to be specific to\
      \ script only if there is chance\n\t\t-- of ambiguity. This occurs when lang=und, or when the language has\n\t\t-- multiple scripts.\n\t\tif lang:getCode() == \"und\" or scripts[2] then\n\t\t\tcat_script = sc:getCanonicalName()\n\t\tend\n\telse\n\t\t--\
      \ The script is not known.\n\t\t-- Does the language have at least one non-Latin script in its list?\n\t\tlocal has_nonlatin = false\n\t\t\n\t\tfor i, val in ipairs(scripts) do\n\t\t\tif not export.is_Latin_script(val) then\n\t\t\t\thas_nonlatin = true\n\
      \t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- If there are non-Latin scripts, return nothing.\n\t\tif not has_nonlatin then\n\t\t\treturn \"\"\n\t\tend\n\tend\n\t\n\tlocal category = \"\"\n\t\n\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\
      \t\tcategory = \"[[Category:\" .. lang:getCanonicalName() .. \" terms needing \" .. cat_script .. \" script]]\"\n\tend\n\t\n\treturn \"&lt;small&gt;[\" .. disp_script .. \" needed]&lt;/small&gt;\" .. category\nend\n\nfunction export.template_rfscript(frame)\n\
      \tlocal args = frame.args\n\tlocal lang = args[1] or error(\"The first parameter (language code) has not been given\")\n\tlocal sc = args[\"sc\"]; if sc == \"\" then sc = nil end\n\tlang = require(\"Module:languages\").getByCode(lang) or error(\"The language\
      \ code \\\"\" .. lang .. \"\\\" is not valid.\")\n\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil)\n\t\n\tlocal ret = export.request_script(lang, sc)\n\t\n\tif ret ==\
      \ \"\" then\n\t\terror(\"This language is written in the Latin alphabet. It does not need a native script.\")\n\telse\n\t\treturn ret\n\tend\nend\n\nfunction export.checkScript(text, scriptCode, result)\n\tlocal scriptObject = require(\"Module:scripts\"\
      ).getByCode(scriptCode)\n\t\n\tif not scriptObject then\n\t\terror('The script code \"' .. scriptCode .. '\" is not recognized.')\n\tend\n\t\n\tlocal originalText = text\n\t\n\t-- Remove non-letter characters.\n\ttext = mw.ustring.gsub(text, \"[%A]\",\
      \ \"\")\n\t\n\t-- Remove all characters of the script in question.\n\ttext = mw.ustring.gsub(text, \"[\" .. scriptObject:getCharacters() .. \"]\", \"\")\n\t\n\tif text ~= \"\" then\n\t\tif type(result) == \"string\" then\n\t\t\terror(result)\n\t\telse\n\
      \t\t\terror('The text \"' .. originalText .. '\" contains the letters \"' .. text .. '\" that do not belong to the ' .. scriptObject:getCategoryName() .. '.', 2)\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:23.077Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=37033 t=1555362382987878
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:23 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 485881480, 730346512, 699241402
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4216643\" pageid=\"4216643\" ns=\"828\" title=\"Module:scripts\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-02-03T10:53:06Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"that was incorrect, but it turns out there aren&#039;t even any scripts whose canonical names contain &quot;script&quot;, so it didn&#039;t cause problems\" xml:space=\"preserve\">local export = {}\nlocal\
      \ Script = {}\n\nfunction Script:getCode()\n\treturn self._code\nend\n\nfunction Script:getCanonicalName()\n\treturn self._rawData.canonicalName\nend\n\nfunction Script:getOtherNames()\n\treturn self._rawData.otherNames or {}\nend\n\nfunction Script:getParent()\n\
      \treturn self._rawData.parent\nend\n\nfunction Script:getSystems()\n\tif not self._systemObjects then\n\t\tlocal m_systems = require(\"Module:writing systems\")\n\t\tself._systemObjects = {}\n\t\t\n\t\tfor _, sys in ipairs(self._rawData.systems or {})\
      \ do\n\t\t\ttable.insert(self._systemObjects, m_systems.getByCode(sys))\n\t\tend\n\tend\n\t\n\treturn self._systemObjects\nend\n\n--function Script:getAllNames()\n--\treturn self._rawData.names\n--end\n\n\nfunction Script:getType()\n\treturn \"script\"\
      \nend\n\n\nfunction Script:getCategoryName()\n\tlocal name = self._rawData.canonicalName\n\t\n\t-- If the name already has \"code\" or \"semaphore\" in it, don't add it.\n\t-- No names contain \"script\".\n\tif name:find(\"[Cc]ode$\") or name:find(\"[Ss]emaphore$\"\
      ) then\n\t\treturn name\n\telse\n\t\treturn name .. \" script\"\n\tend\nend\n\n\nfunction Script:getWikipediaArticle()\n\treturn self._rawData.wikipedia_article or self:getCategoryName()\nend\n\n\nfunction Script:getCharacters()\n\tif self._rawData.characters\
      \ then\n\t\treturn self._rawData.characters\n\telse\n\t\treturn nil\n\tend\nend\n\n\nfunction Script:countCharacters(text)\n\tif not self._rawData.characters then\n\t\treturn 0\n\telse\n\t\tlocal _, num = mw.ustring.gsub(text, \"[\" .. self._rawData.characters\
      \ .. \"]\", \"\")\n\t\treturn num\n\tend\nend\n\nfunction Script:getDirection()\n\tlocal direction = self._rawData.direction\n\tif not direction then\n\t\treturn nil\n\telse\n\t\treturn direction\n\tend\nend\n\n\nfunction Script:getRawData()\n\treturn\
      \ self._rawData\nend\n\n\nfunction Script:toJSON()\n\tlocal ret = {\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\totherNames = self:getOtherNames(),\n\t\ttype = self:getType(),\n\t\
      \t}\n\t\n\treturn require(\"Module:JSON\").toJSON(ret)\nend\n\n\nScript.__index = Script\n\n\nfunction export.makeObject(code, data)\n\treturn data and setmetatable({ _rawData = data, _code = code }, Script) or nil\nend\n\n\nfunction export.getByCode(code)\n\
      \tif code == \"IPAchar\" then\n\t\trequire(\"Module:debug\").track(\"IPAchar\")\n\tend\n\treturn export.makeObject(code, mw.loadData(\"Module:scripts/data\")[code])\nend\n\nfunction export.getByCanonicalName(name)\n\tlocal code = mw.loadData(\"Module:scripts/by\
      \ name\")[name]\n\t\n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, mw.loadData(\"Module:scripts/data\")[code])\nend\n\n-- Find the best script to use, based on the characters of a string.\nfunction export.findBestScript(text,\
      \ lang)\n\tif not text or not lang or not lang.getScripts then\n\t\treturn export.getByCode(\"None\")\n\tend\n\t\n\tlocal scripts = lang:getScripts()\n\t\n\tif not scripts[2] then\n\t\treturn scripts[1]\n\tend\n\t\n\t--[=[\n\t\tRemove any HTML entities;\
      \ catfix function in [[Module:utilities]]\n\t\tadds tagging to a no-break space (&amp;nbsp;), which contains Latin characters;\n\t\thence Latin was returned as the script if \"Latn\" is one of the language's scripts.\n\t]=]\n\ttext = string.gsub(text,\
      \ \"&amp;[a-zA-Z0-9]+;\", \"\")\n\t\n\t-- Try to match every script against the text,\n\t-- and return the one with the most matching characters.\n\tlocal bestcount = 0\n\tlocal bestscript = nil\n\t\n\t-- Get length of text minus any spacing or punctuation\
      \ characters.\n\t-- Counting instances of UTF-8 character pattern is faster than mw.ustring.len.\n\tlocal _, length = string.gsub(mw.ustring.gsub(text, \"[%s%p]+\", \"\"), \"[\\1-\\127\\194-\\244][\\128-\\191]*\", \"\")\n\t\n\tif length == 0 then\n\t\t\
      return export.getByCode(\"None\")\n\tend\n\t\n\tfor i, script in ipairs(scripts) do\n\t\tlocal count = script:countCharacters(text)\n\t\t\n\t\tif count &gt;= length then\n\t\t\treturn script\n\t\tend\n\t\t\n\t\tif count &gt; bestcount then\n\t\t\tbestcount\
      \ = count\n\t\t\tbestscript = script\n\t\tend\n\tend\n\t\n\tif bestscript then\n\t\treturn bestscript\n\tend\n\t\n\t-- No matching script was found. Return \"None\".\n\treturn export.getByCode(\"None\")\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:23.269Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=35363 t=1555362383154885
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:23 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 201178768, 727209090, 696852487
    body: !!binary |-
      
- recorded: 2015-08-28T19:11:26.901Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aterm+cleanup&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=28-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 28 Aug 2015 19:11:25 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Aug-2015
      X-Cache: cp1053 miss (0), cp3041 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 1235768770, 2009883094, 3656415972
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"3981465\" pageid=\"3981465\" ns=\"828\" title=\"Module:term cleanup\"><revisions><rev user=\"CodeCat\" timestamp=\"2013-05-15T19:27:30Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nfunction export.cleanup(frame)\n    local args = frame:getParent().args\n    local title = mw.title.getCurrentTitle()\n    \n    local lang = args[&quot;lang&quot;]\n    local sc\
      \ = args[&quot;sc&quot;]\n    local tr = args[&quot;tr&quot;]\n    local term = (args[1] or &quot;&quot;) .. (args[2] or &quot;&quot;)\n    \n    if lang == &quot;und&quot; then\n        return &quot;[[Category:term cleanup/lang=und]]&quot;\n    elseif\
      \ not lang or lang == &quot;&quot; then\n        if title.nsText == &quot;Template&quot; then\n            return &quot;[[Category:term cleanup/template namespace]]&quot;\n        elseif sc then\n            if sc == &quot;Arab&quot; then\n           \
      \     return &quot;[[Category:term cleanup/sc=Arab]]&quot;\n            elseif sc == &quot;fa-Arab&quot; then\n                return &quot;[[Category:term cleanup/sc=fa-Arab]]&quot;\n            elseif sc == &quot;Deva&quot; then\n                return\
      \ &quot;[[Category:term cleanup/sc=Deva]]&quot;\n            elseif sc == &quot;Grek&quot; then\n                return &quot;[[Category:term cleanup/sc=Grek]]&quot;\n            elseif sc == &quot;Hebr&quot; then\n                return &quot;[[Category:term\
      \ cleanup/sc=Hebr]]&quot;\n            elseif sc == &quot;Hani&quot; or sc == &quot;Hant&quot; or sc == &quot;Hans&quot; then\n                return &quot;[[Category:term cleanup/sc=Hani]]&quot;\n            else\n                return &quot;[[Category:term\
      \ cleanup/with sc]]&quot;\n            end\n        elseif lang == &quot;&quot; then\n            return &quot;[[Category:term cleanup/lang=]]&quot;\n        elseif title.isTalkPage then\n            return &quot;[[Category:term cleanup/talk]]&quot;\n\
      \        elseif title.nsText == &quot;User&quot; then\n            return &quot;[[Category:term cleanup/user namespace]]&quot;\n        elseif title.nsText == &quot;Wiktionary&quot; then\n            return &quot;[[Category:term cleanup/wiktionary namespace]]&quot;\n\
      \        elseif tr then\n            return &quot;[[Category:term cleanup/with tr]]&quot;\n        -- Categorise by character range\n        elseif containsRange(term, 0x0600, 0x06FF) then\n            return &quot;[[Category:term cleanup/Arabic]]&quot;\n\
      \        elseif containsRange(term, 0x0530, 0x058F) then\n            return &quot;[[Category:term cleanup/Armenian]]&quot;\n        elseif containsRange(term, 0x3400, 0x9FFF) then\n            return &quot;[[Category:term cleanup/Chinese]]&quot;\n   \
      \     elseif containsRange(term, 0x0400, 0x04FF) then\n            return &quot;[[Category:term cleanup/Cyrillic]]&quot;\n        elseif containsRange(term, 0x0900, 0x097F) then\n            return &quot;[[Category:term cleanup/Devanagari]]&quot;\n   \
      \     elseif containsRange(term, 0x10A0, 0x10FF) then\n            return &quot;[[Category:term cleanup/Georgian]]&quot;\n        elseif containsRange(term, 0x2C00, 0x2C5F) then\n            return &quot;[[Category:term cleanup/Glagolitic]]&quot;\n   \
      \     elseif containsRange(term, 0x10330, 0x1034F) then\n            return &quot;[[Category:term cleanup/Gothic]]&quot;\n        elseif containsRange(term, 0x0370, 0x03FF) then\n            return &quot;[[Category:term cleanup/Greek]]&quot;\n        elseif\
      \ containsRange(term, 0x1F00, 0x1FFF) then\n            return &quot;[[Category:term cleanup/Polytonic Greek]]&quot;\n        elseif containsRange(term, 0x0590, 0x05FF) or containsRange(term, 0xFB1D, 0xFB4F) then\n            return &quot;[[Category:term\
      \ cleanup/Hebrew]]&quot;\n        elseif containsRange(term, 0x3040, 0x30FF) then\n            return &quot;[[Category:term cleanup/Kana]]&quot;\n        elseif containsRange(term, 0xAC00, 0xD7AF) then\n            return &quot;[[Category:term cleanup/Korean]]&quot;\n\
      \        elseif containsRange(term, 0x0E00, 0x0E7F) then\n            return &quot;[[Category:term cleanup/Thai]]&quot;\n        elseif containsRange(term, 0x80, 0x024F) then\n            return &quot;[[Category:term cleanup/Latin extended]]&quot;\n  \
      \      -- Any other non-ASCII\n        elseif containsRange(term, 0x80, 0x10FFFF) then\n            return &quot;[[Category:term cleanup/containing characters]]&quot;\n        elseif term:find(&quot;@&quot;) then\n            return &quot;[[Category:term\
      \ cleanup/sign language]]&quot;\n        else\n            return &quot;[[Category:term cleanup]]&quot;\n        end\n    end\nend\n\nfunction containsRange(str, first, last)\n    for codepoint in mw.ustring.gcodepoint(str) do\n        if codepoint &gt;=\
      \ first and codepoint &lt;= last then\n            return true\n        end\n    end\n    return false\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:25.971Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Al&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44675 t=1555362385879672
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:25 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 669498719, 502174112, 690931686
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4580518" pageid="4580518" ns="10" title="Template:l"><revisions><rev user="Rua" timestamp="2014-10-30T23:36:59Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="CodeCat moved page [[Template:l]] to [[Template:link]] over redirect" xml:space="preserve">#REDIRECT [[Template:link]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:26.152Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alink&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55618 t=1555362386049539
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:26 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 923968206, 246953796, 682261360
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="784216" pageid="784216" ns="10" title="Template:link"><revisions><rev user="Dixtosa" timestamp="2016-11-05T20:05:15Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="undo myslef. moving template data to documentation page to see if that works too" xml:space="preserve">{{#invoke:links/templates|l_term_t&lt;noinclude&gt;|demo=term&lt;/noinclude&gt;}}&lt;!--

      --&gt;{{#ifeq:{{PAGENAME}}|RecentChanges||&lt;!--
          --&gt;{{#ifeq:{{{1|}}}|und|[[Category:Undetermined language links]]}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;{{redlink category|{{{1|}}}|{{{2|}}}|template=l}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:28.586Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aqualifier&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46053 t=1555362388493969
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:28 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 575881996, 564304667, 680227636
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="278931" pageid="278931" ns="10" title="Template:qualifier"><revisions><rev user="Jberkel" timestamp="2017-04-24T22:24:06Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Replaced content with &quot;{{#invoke:qualifier|qualifier_t}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&quot;" xml:space="preserve">{{#invoke:qualifier|qualifier_t}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:29.701Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aa&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48148 t=1555362389607280
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 579657985, 234708710, 700746783
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5658976" pageid="5658976" ns="10" title="Template:a"><revisions><rev user="-sche" timestamp="2016-07-02T23:45:24Z" contentformat="text/x-wiki" contentmodel="wikitext"
      comment="-sche moved page [[Template:a]] to [[Template:accent]]: per RFM" xml:space="preserve">#REDIRECT [[Template:accent]]</rev></revisions></page></pages></query></api>'
- recorded: 2015-08-28T19:11:28.431Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aa&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=28-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 28 Aug 2015 19:11:27 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Aug-2015
      X-Cache: cp1065 miss (0), cp3005 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 981162249, 3659420191, 3656417503
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4830341\" pageid=\"4830341\" ns=\"828\" title=\"Module:a\"><revisions><rev user=\"Kc kennylau\" timestamp=\"2015-06-21T07:11:15Z\" comment=\"Protected &quot;[[Module:a]]&quot;:\
      \ Highly visible template/module ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nfunction export.show(frame)\n\
      \tdata = require(&quot;Module:a/data&quot;)\n\tlocal args = frame:getParent().args\n\tif not args[1] or args[1] == &quot;&quot; then\n\t\tif mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\t\treturn '&lt;span class=&quot;ib-brac&quot;&gt;&lt;span\
      \ class=&quot;qualifier-brac&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-content&quot;&gt;&lt;span class=&quot;qualifier-content&quot;&gt;{{{1}}}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-brac&quot;&gt;&lt;span class=&quot;qualifier-brac&quot;&gt;)&lt;/span&gt;&lt;/span&gt;'\n\
      \t\telse\n\t\t\terror(&quot;No accents specified.&quot;, 2)\n\t\t\treturn\n\t\tend\n\tend\n\t\n\tlocal accents = {}\n\t\n\tfor i,j in ipairs(args) do\n\t\tif j then \n\t\t\tlocal accent = mw.text.trim(j)\n\t\t\tif accent == &quot;&quot; then\n\t\t\t\t\
      --ignore\n\t\t\telseif data[accent] then\n\t\t\t\tif data[accent].link then\n\t\t\t\t\ttable.insert(accents, &quot;[[w:&quot; .. data[accent].link .. &quot;|&quot; .. (data[accent].display or data[accent].link) .. &quot;]]&quot;)\n\t\t\t\telseif data[accent].display\
      \ then\n\t\t\t\t\ttable.insert(accents, data[accent].display)\n\t\t\t\tend\n\t\t\telse\n\t\t\t\ttable.insert(accents, accent)\n\t\t\tend\n\t\tend\n\tend\n\t\n\tlocal output = table.concat(accents, &quot;, &quot;)\n\tif output == &quot;&quot; then\n\t\t\
      error(&quot;No accents specified.&quot;, 2)\n\t\treturn\n\telse\n\t\treturn\n\t\t\t'&lt;span class=&quot;ib-brac&quot;&gt;&lt;span class=&quot;qualifier-brac&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-content&quot;&gt;&lt;span class=&quot;qualifier-content&quot;&gt;'\
      \ ..\n\t\t\toutput .. '&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-brac&quot;&gt;&lt;span class=&quot;qualifier-brac&quot;&gt;)&lt;/span&gt;&lt;/span&gt;'\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-08-28T19:11:28.722Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aa%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=28-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 28 Aug 2015 19:11:27 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Aug-2015
      X-Cache: cp1068 miss (0), cp3008 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2812277240, 3216135711, 3656417821
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4830339\" pageid=\"4830339\" ns=\"828\" title=\"Module:a/data\"><revisions><rev user=\"Espreon\" timestamp=\"2015-08-28T01:08:42Z\" comment=\"Put yeísmo under Y now that it&#039;s\
      \ been properly distinguished from lleísmo\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local m = {}\n\n-- A\n\nm[&quot;AAVE&quot;] = {\n\tlink = &quot;African American Vernacular English&quot;,\n\tdisplay = &quot;AAVE&quot;\n\
      }\n\nm[&quot;æ-tensing&quot;] = {\n\tlink = &quot;æ-tensing&quot;\n}\nm[&quot;ae-tensing&quot;] = m[&quot;æ-tensing&quot;]\n\nm[&quot;Anglicised&quot;] = {\n\tlink = &quot;Anglicisation#Anglicisation_of_non-English-language_vocabulary_and_names&quot;,\n\
      \tdisplay = &quot;Anglicised&quot;\n}\nm[&quot;Anglicized&quot;] = m[&quot;Anglicised&quot;]\n\nm[&quot;ar-Cairene&quot;] = {\n\tlink = &quot;Egyptian Arabic&quot;,\n\tdisplay = &quot;Cairene&quot;\n}\nm[&quot;Cairene&quot;] = m[&quot;ar-Cairene&quot;]\n\
      \nm[&quot;Arvanite&quot;] = {\n\tlink = &quot;Arvanitika&quot;,\n\tdisplay = &quot;Arvanite&quot;\n}\n\nm[&quot;Ashkenazi Hebrew&quot;] = {\n\tlink = &quot;Ashkenazi Hebrew&quot;,\n\tdisplay = &quot;Ashkenazi Hebrew&quot;\n}\nm[&quot;Ashkenazi&quot;] =\
      \ m[&quot;Ashkenazi Hebrew&quot;]\n\nm[&quot;Australia&quot;] = {\n\tlink = &quot;Australian English phonology&quot;,\n\tdisplay = &quot;Australia&quot;\n}\nm[&quot;AU&quot;] = m[&quot;Australia&quot;]\nm[&quot;Aus&quot;] = m[&quot;Australia&quot;]\nm[&quot;AusE&quot;]\
      \ = m[&quot;Australia&quot;]\n\n-- B\n\nm[&quot;BE-nl&quot;] = {\n\tlink = &quot;Belgian Dutch&quot;,\n\tdisplay = &quot;Belgium&quot;\n}\nm[&quot;BE&quot;] = m[&quot;BE-nl&quot;]\n\nm[&quot;Beijing&quot;] = {\n\tlink = &quot;Beijing dialect&quot;,\n\t\
      display = &quot;Beijing&quot;\n}\n\nm[&quot;Boston&quot;] = {\n\tlink = &quot;Boston English&quot;,\n\tdisplay = &quot;Boston&quot;\n}\nm[&quot;Bos&quot;] = m[&quot;Boston&quot;]\n\nm[&quot;Brazil&quot;] = {\n\tlink = &quot;Brazilian Portuguese&quot;,\n\
      \tdisplay = &quot;Brazil&quot;\n}\nm[&quot;BP&quot;] = m[&quot;Brazil&quot;]\nm[&quot;BR&quot;] = m[&quot;Brazil&quot;]\nm[&quot;Brazilian Portuguese&quot;] = m[&quot;Brazil&quot;]\n\n-- C\n\nm[&quot;Canada&quot;] = {\n\tlink = &quot;Canadian English&quot;,\n\
      \tdisplay = &quot;Canada&quot;\n}\nm[&quot;CA&quot;] = m[&quot;Canada&quot;]\nm[&quot;Canadian&quot;] = m[&quot;Canada&quot;]\n\nm[&quot;Canadian Shift&quot;] = {\n\tlink = &quot;Canadian Shift&quot;,\n\tdisplay = &quot;Canadian Vowel Shift&quot;\n}\n\
      m[&quot;Canadian shift&quot;] = m[&quot;Canadian Shift&quot;]\nm[&quot;Canadian Vowel Shift&quot;] = m[&quot;Canadian Shift&quot;]\nm[&quot;Canadian vowel shift&quot;] = m[&quot;Canadian Shift&quot;]\n\nm[&quot;Carioca&quot;] = {\n\tlink = &quot;Carioca#Carioca\
      \ Dialect&quot;,\n\tdisplay = &quot;Carioca&quot;\n}\nm[&quot;RJ&quot;] = m[&quot;Carioca&quot;]\n\nm[&quot;Castilian&quot;] = {\n\tlink = &quot;Castilian Spanish&quot;,\n\tdisplay = &quot;Castilian&quot;\n}\nm[&quot;Spain&quot;] = m[&quot;Castilian&quot;]\n\
      \nm[&quot;ceceo&quot;] = {\n\tlink = &quot;Phonological history of Spanish coronal fricatives#Ceceo&quot;,\n\tdisplay = &quot;''ceceo'' merger&quot;\n}\n\nm[&quot;Central Scotland&quot;] = {\n\tlink = &quot;Central Scots&quot;,\n\tdisplay = &quot;Central\
      \ Scotland&quot;\n}\n\nm[&quot;ceseo&quot;] = {\n\tlink = &quot;Phonological history of Spanish coronal fricatives#Ceseo_or_seceo&quot;,\n\tdisplay = &quot;''ceseo''-''seceo'' mixing&quot;\n}\nm[&quot;seceo&quot;] = m[&quot;ceseo&quot;]\n\nm[&quot;Classical&quot;]\
      \ = {\n\tlink = &quot;Classical Latin&quot;,\n\tdisplay = &quot;Classical&quot;\n}\n\nm[&quot;Connacht&quot;] = {\n\tlink = &quot;Connacht Irish&quot;,\n\tdisplay = &quot;Connacht&quot;\n}\n\nm[&quot;cot-caught&quot;] = {\n\tlink = &quot;Phonological history\
      \ of English low back vowels#Cot–caught merger&quot;,\n\tdisplay = &quot;''cot''–''caught'' merger&quot;\n}\nm[&quot;caught-cot&quot;] = m[&quot;cot-caught&quot;]\n\nm[&quot;cy-N&quot;] = {\n\tlink = &quot;Welsh language#Dialects&quot;,\n\tdisplay = &quot;North\
      \ Wales&quot;\n}\nm[&quot;cy-g&quot;] = m[&quot;cy-N&quot;]\n\nm[&quot;cy-S&quot;] = {\n\tlink = &quot;Welsh language#Dialects&quot;,\n\tdisplay = &quot;South Wales&quot;\n}\nm[&quot;cy-h&quot;] = m[&quot;cy-S&quot;]\n\n-- D\n\nm[&quot;Dari&quot;] = {\n\
      \tlink = &quot;Dari Persian&quot;,\n\tdisplay = &quot;Dari&quot;\n}\n\nm[&quot;distinción&quot;] = {\n\tlink = &quot;Phonological_history_of_Spanish_coronal_fricatives#Distinction&quot;,\n\tdisplay = &quot;''z''-''s'' distinction&quot;\n}\n\n-- E\n\nm[&quot;Ecclesiastical&quot;]\
      \ = {\n\tlink = &quot;Ecclesiastical Latin&quot;,\n\tdisplay = &quot;Ecclesiastical&quot;\n}\n\nm[&quot;Egyptological&quot;] = {\n\tlink = &quot;Egyptian language#Egyptological pronunciation&quot;,\n\tdisplay = &quot;Egyptological&quot;\n}\n\nm[&quot;Estuary\
      \ English&quot;] = {\n\tlink = &quot;Estuary English&quot;\n}\n\n-- F\n\nm[&quot;father-bother&quot;] = {\n\tlink = &quot;Phonological history of English low back vowels#Father–bother merger&quot;,\n\tdisplay = &quot;''father''-''bother'' merger&quot;\n\
      }\n\nm[&quot;FS&quot;] = {\n\tlink = &quot;Standard French&quot;,\n\tdisplay = &quot;FS&quot;\n}\n\nm[&quot;FV&quot;] = {\n\tlink = &quot;French Flemish&quot;,\n\tdisplay = &quot;French Flanders&quot;\n}\n\n-- G\n\nm[&quot;GenAm&quot;] = {\n\tlink = &quot;General\
      \ American&quot;\n}\n\nm[&quot;Geordie&quot;] = {\n\tlink = &quot;Geordie&quot;\n}\n\nm[&quot;Gheg&quot;] = {\n\tlink = &quot;Gheg Albanian&quot;,\n\tdisplay = &quot;Gheg&quot;\n}\n\nm[&quot;Givi&quot;] = {\n\tlink = &quot;Giv, South Khorasan&quot;,\n\t\
      display = &quot;Givi&quot;\n}\n\n-- H\n\nm[&quot;hbo&quot;] = {\n\tlink = &quot;Biblical_Hebrew#Phonology&quot;,\n\tdisplay = &quot;Biblical Hebrew&quot;\n}\n\nm[&quot;Biblical Hebrew&quot;] = m[&quot;hbo&quot;]\n\nm[&quot;horse-hoarse&quot;] = {\n   \
      \ link = &quot;English-language_vowel_changes_before_historic_/r/#Horse.E2.80.93hoarse_merger&quot;,\n    display = &quot;without the horse–hoarse merger&quot;\n}\n\nm[&quot;hy-E&quot;] = {\n\tlink = &quot;Eastern Armenian language&quot;,\n\tdisplay =\
      \ &quot;Eastern Armenian&quot;\n}\n\nm[&quot;hy-IR&quot;] = {\n\tlink = &quot;Armenian Iranians#Culture_and_language&quot;,\n\tdisplay = &quot;Eastern Armenian - Iran&quot;\n}\n\nm[&quot;hy-W&quot;] = {\n\tlink = &quot;Western Armenian language&quot;,\n\
      \tdisplay = &quot;Western Armenian&quot;\n}\n\nm[&quot;hy-Y&quot;] = {\n\tlink = &quot;Yerevan&quot;,\n\tdisplay = &quot;Eastern Armenian - Yerevan&quot;\n}\n\n-- I\n\nm[&quot;IL&quot;] = {\n\tlink = &quot;Modern Hebrew phonology&quot;,\n\tdisplay = &quot;Modern/Israeli\
      \ Hebrew&quot;\n}\nm[&quot;Israeli Hebrew&quot;] = m[&quot;IL&quot;]\nm[&quot;Modern Hebrew&quot;] = m[&quot;IL&quot;]\nm[&quot;Modern Israeli&quot;] = m[&quot;IL&quot;]\nm[&quot;Modern/Israeli Hebrew&quot;] = m[&quot;IL&quot;]\n\nm[&quot;InE&quot;] =\
      \ {\n\tlink = &quot;Indian English&quot;,\n\tdisplay = &quot;InE&quot;\n}\n\nm[&quot;IR&quot;] = {\n\tlink = &quot;Western Persian&quot;,\n\tdisplay = &quot;Iranian Persian&quot;\n}\n\nm[&quot;Ireland&quot;] = {\n\tlink = &quot;Hiberno-English&quot;,\n\
      \tdisplay = &quot;Ireland&quot;\n}\nm[&quot;HE&quot;] = m[&quot;Ireland&quot;]\nm[&quot;IE&quot;] = m[&quot;Ireland&quot;]\n\nm[&quot;Italian Hebrew&quot;] = {\n\tlink = &quot;Italian Hebrew&quot;,\n\tdisplay = &quot;Italian Hebrew&quot;\n}\n\n-- J\n\n\
      m[&quot;Johor-Selangor&quot;] = {\n\tlink = &quot;Malayan languages&quot;,\n\tdisplay = &quot;Johor-Selangor&quot;\n}\n\n-- K\n\nm[&quot;Kabul, Peshawar&quot;] = {\n\tlink = &quot;Pashto dialects&quot;,\n\tdisplay = &quot;Kabul, Peshawar&quot;\n}\n\nm[&quot;Kandahar&quot;]\
      \ = {\n\tlink = &quot;Kandahari Pashto&quot;,\n\tdisplay = &quot;Kandahar&quot;\n}\nm[&quot;ps-Kandahar&quot;] = m[&quot;Kandahar&quot;]\n\n-- L\n\nm[&quot;Latinate&quot;] = {\n\tlink = &quot;Latin#Phonology&quot;,\n\tdisplay = &quot;Latinate&quot;\n}\n\
      \nm[&quot;lleísmo&quot;] = {\n\tlink = &quot;Yeísmo&quot;,\n\tdisplay = &quot;''ll''-''y'' distinction&quot;\n}\n\n-- M\n\nm[&quot;Mary-marry-merry&quot;] = {\n\tlink = &quot;English-language vowel changes before historic /r/#Mary.E2.80.93marry.E2.80.93merry_merger&quot;,\n\
      \tdisplay = &quot;''Mary''-''marry''-''merry'' merger&quot;\n}\nm[&quot;Mmmm&quot;] = m[&quot;Mary-marry-merry&quot;]\n\nm[&quot;Midwestern US&quot;] = {\n\tlink = &quot;Midwestern United States#Linguistic_characteristics&quot;,\n\tdisplay = &quot;Midwestern\
      \ US&quot;\n}\nm[&quot;Midwest US&quot;] = m[&quot;Midwestern US&quot;]\nm[&quot;Midwest US English&quot;] = m[&quot;Midwestern US&quot;]\nm[&quot;Midwestern US English&quot;] = m[&quot;Midwestern US&quot;]\n\nm[&quot;Mizrahi Hebrew&quot;] = {\n\tlink\
      \ = &quot;Mizrahi Hebrew&quot;,\n\tdisplay = &quot;Mizrahi Hebrew&quot;\n}\nm[&quot;Mizrahi&quot;] = m[&quot;Mizrahi Hebrew&quot;]\nm[&quot;Mizrakhi&quot;] = m[&quot;Mizrahi Hebrew&quot;]\nm[&quot;Mizrachi&quot;] = m[&quot;Mizrahi Hebrew&quot;]\nm[&quot;Mizrakhi\
      \ Hebrew&quot;] = m[&quot;Mizrahi Hebrew&quot;]\nm[&quot;Mizrachi Hebrew&quot;] = m[&quot;Mizrahi Hebrew&quot;]\n\nm[&quot;Munster&quot;] = {\n\tlink = &quot;Munster Irish&quot;,\n\tdisplay = &quot;Munster&quot;\n}\n\n-- N\n\nm[&quot;Netherlands&quot;]\
      \ = {\n\tlink = &quot;Dutch phonology&quot;,\n\tdisplay = &quot;Netherlands&quot;\n}\nm[&quot;NL&quot;] = m[&quot;Netherlands&quot;]\n\nm[&quot;New Latin&quot;] = {\n\tlink = &quot;New Latin&quot;\n}\n\nm[&quot;New York&quot;] = {\n\tlink = &quot;New York\
      \ dialect#Linguistic_features&quot;,\n\tdisplay = &quot;NYC&quot;\n}\nm[&quot;NY&quot;] = m[&quot;New York&quot;]\nm[&quot;NYC&quot;] = m[&quot;New York&quot;]\n\nm[&quot;New Zealand&quot;] = {\n\tlink = &quot;New Zealand English&quot;,\n\tdisplay = &quot;New\
      \ Zealand&quot;\n}\nm[&quot;NZ&quot;] = m[&quot;New Zealand&quot;]\n\nm[&quot;non-Mary-marry-merry&quot;] = {\n\tlink = &quot;English-language vowel changes before historic /r/#Mary.E2.80.93marry.E2.80.93merry_merger&quot;,\n\tdisplay = &quot;''Mary''-''marry''-''merry''\
      \ distinction&quot;\n}\nm[&quot;nMmmm&quot;] = m[&quot;non-Mary-marry-merry&quot;]\n\nm[&quot;non-rhotic&quot;] = {\n\tlink = &quot;Rhoticity in English&quot;,\n\tdisplay = &quot;non-rhotic&quot;\n}\nm[&quot;nonrhotic&quot;] = m[&quot;non-rhotic&quot;]\n\
      \nm[&quot;Northern England&quot;] = {\n\tlink = &quot;Northern England&quot;\n}\nm[&quot;North England&quot;] = m[&quot;Northern England&quot;]\n\nm[&quot;Northern Scotland&quot;] = {\n\tlink = &quot;Northern Scots&quot;,\n\tdisplay = &quot;Northern Scotland&quot;\n\
      }\n\n-- O\n\n-- P\n\nm[&quot;Palestinian Hebrew&quot;] = {\n\tlink = &quot;Palestinian vocalization&quot;,\n\tdisplay = &quot;Palestinian Hebrew&quot;\n}\n\nm[&quot;pin-pen&quot;] = {\n\tlink = &quot;Phonological history of English high front vowels#Pin–\
      pen merger&quot;,\n\tdisplay = &quot;''pin''–''pen'' merger&quot;\n}\nm[&quot;pen-pin&quot;] = m[&quot;pin-pen&quot;]\n\nm[&quot;Philippine&quot;] = {\n\tlink = &quot;Philippine English&quot;,\n\tdisplay = &quot;Philippine&quot;\n}\nm[&quot;Philippines&quot;]\
      \ = m[&quot;Philippine&quot;]\n\nm[&quot;Portugal&quot;] = {\n\tlink = &quot;European Portuguese&quot;,\n\tdisplay = &quot;Portugal&quot;\n}\nm[&quot;EP&quot;] = m[&quot;Portugal&quot;]\nm[&quot;PT&quot;] = m[&quot;Portugal&quot;]\n\nm[&quot;ps-Kabul&quot;]\
      \ = {\n\tlink = &quot;Pashto dialects&quot;,\n\tdisplay = &quot;Kabuli&quot;\n}\n\n-- Q\n\nm[&quot;Quanzhou&quot;] = {\n\tlink = &quot;Quanzhou&quot;\n}\n\nm[&quot;Quetta&quot;] = {\n\tlink = &quot;Pashto dialects&quot;,\n\tdisplay = &quot;Quetta&quot;\n\
      }\n\n-- R\n\nm[&quot;rhotic&quot;] = {\n\tlink = &quot;Rhotic and non-rhotic accents&quot;,\n\tdisplay = &quot;rhotic&quot;\n}\n\nm[&quot;Riau-Lingga&quot;] = {\n\tlink = &quot;Riau-Lingga Sultanate&quot;,\n\tdisplay = &quot;Riau-Lingga&quot;\n}\n\nm[&quot;RP&quot;]\
      \ = {\n\tlink = &quot;Received Pronunciation&quot;\n}\n\n-- S\n\nm[&quot;São Paulo&quot;] = {\n\tlink = &quot;Brazilian Portuguese&quot;,\n\tdisplay = &quot;São Paulo&quot;\n}\n\nm[&quot;Scotland&quot;] = {\n\tlink = &quot;Scottish English&quot;,\n\tdisplay\
      \ = &quot;Scotland&quot;\n}\n\nm[&quot;Sephardi Hebrew&quot;] = {\n\tlink = &quot;Sephardi Hebrew&quot;,\n\tdisplay = &quot;Sephardi Hebrew&quot;\n}\nm[&quot;Sephardi&quot;] = m[&quot;Sephardi Hebrew&quot;]\n\nm[&quot;seseo&quot;] = {\n\tlink = &quot;Phonological\
      \ history of Spanish coronal fricatives#Seseo&quot;,\n\tdisplay = &quot;''seseo'' merger&quot;\n}\n\nm[&quot;Sistani&quot;] = {\n\tlink = &quot;Sistani dialect&quot;,\n\tdisplay = &quot;Sistani&quot;\n}\n\nm[&quot;South Africa&quot;] = {\n\tlink = &quot;South\
      \ African English&quot;,\n\tdisplay = &quot;South Africa&quot;\n}\nm[&quot;SAE&quot;] = m[&quot;South Africa&quot;]\n\nm[&quot;Southern American English&quot;] = {\n\tlink = &quot;Southern American English&quot;\n}\nm[&quot;Southern US&quot;] = m[&quot;Southern\
      \ American English&quot;]\nm[&quot;Southern US English&quot;] = m[&quot;Southern American English&quot;]\nm[&quot;Southern U.S. English&quot;] = m[&quot;Southern American English&quot;]\n\nm[&quot;South Brazil&quot;] = {\n\tlink = &quot;Brazilian Portuguese&quot;,\n\
      \tdisplay = &quot;South Brazil&quot;\n}\n\nm[&quot;Southern Scotland&quot;] = {\n\tlink = &quot;Southern Scots&quot;,\n\tdisplay = &quot;Southern Scotland&quot;\n}\n\nm[&quot;St. Louis&quot;] = {\n\tlink = &quot;North American regional phonology#St._Louis_and_vicinity&quot;,\n\
      \tdisplay = &quot;St. Louis (Missouri)&quot;\n}\nm[&quot;STL&quot;] = m[&quot;St. Louis&quot;]\n\nm[&quot;standard&quot;] = {\n\tdisplay = &quot;standard&quot;\n}\nm[&quot;Standard&quot;] = m[&quot;standard&quot;]\n\nm[&quot;Swedish&quot;] = {\n\tlink\
      \ = &quot;Swedish pronunciation&quot;,\n\tdisplay = &quot;Swedish&quot;\n}\n\nm[&quot;Syrian Hebrew&quot;] = {\n\tlink = &quot;Syrian_Jews#Pronunciation_of_Hebrew&quot;,\n\tdisplay = &quot;Syrian Hebrew&quot;\n}\n\n-- T\n\nm[&quot;Tajik&quot;] = {\n\t\
      link = &quot;Tajik language&quot;,\n\tdisplay = &quot;Tajik&quot;\n}\nm[&quot;Tajiki&quot;] = m[&quot;Tajik&quot;]\n\nm[&quot;Tehrani&quot;] = {\n\tlink = &quot;Tehrani accent&quot;,\n\tdisplay = &quot;Tehrani&quot;\n}\n\nm[&quot;Tiberian Hebrew&quot;]\
      \ = {\n\tlink = &quot;Tiberian Hebrew&quot;,\n\tdisplay = &quot;Tiberian Hebrew&quot;\n}\nm[&quot;Tiberian&quot;] = m[&quot;Tiberian Hebrew&quot;]\n\nm[&quot;Tosk&quot;] = {\n\tlink = &quot;Tosk Albanian&quot;,\n\tdisplay = &quot;Tosk&quot;\n}\n\n-- U\n\
      \nm[&quot;UK&quot;] = {\n\tlink = &quot;British English&quot;,\n\tdisplay = &quot;UK&quot;\n}\nm[&quot;British&quot;] = m[&quot;UK&quot;]\n\nm[&quot;Ulster&quot;] = {\n\tlink = &quot;Ulster Irish&quot;,\n\tdisplay = &quot;Ulster&quot;\n}\n\nm[&quot;US&quot;]\
      \ = {\n\tlink = &quot;American English&quot;,\n\tdisplay = &quot;US&quot;\n}\n\n-- V\n\nm[&quot;Valencia&quot;] = {\n\tlink = &quot;Valencian&quot;\n}\nm[&quot;Valencian&quot;] = m[&quot;Valencia&quot;]\n\n-- W\n\nm[&quot;Wales&quot;] = {\n\tlink = &quot;Welsh\
      \ English&quot;,\n\tdisplay = &quot;Wales&quot;\n}\nm[&quot;Welsh&quot;] = m[&quot;Wales&quot;]\n\nm[&quot;Wardak&quot;] = {\n\tlink = &quot;Pashto dialects&quot;,\n\tdisplay = &quot;Wardak&quot;\n}\n\nm[&quot;Wazirwola&quot;] = {\n\tlink = &quot;Wazirwola\
      \ dialect&quot;,\n\tdisplay = &quot;Wazirwola&quot;\n}\n\n-- X\n\nm[&quot;Xiamen&quot;] = {\n\tlink = &quot;Xiamen&quot;\n}\n\n-- Y\n\nm[&quot;yeísmo&quot;] = {\n\tlink = &quot;Yeísmo&quot;,\n\tdisplay = &quot;''ll''-''y'' neutralization&quot;\n}\n\nm[&quot;Yemenite\
      \ Hebrew&quot;] = {\n\tlink = &quot;Yemenite Hebrew&quot;,\n\tdisplay = &quot;Yemenite Hebrew&quot;\n}\n\nm[&quot;YIVO&quot;] = {\n\tlink = &quot;YIVO&quot;\n}\n\n-- Z\n\nm[&quot;Zhangzhou&quot;] = {\n\tlink = &quot;Zhangzhou&quot;\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:30.475Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AIPA&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=57046 t=1555362390371921
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 605228803, 495364000, 691129522
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="82468" pageid="82468" ns="10" title="Template:IPA"><revisions><rev user="Rua" timestamp="2019-03-31T20:37:23Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:IPA/templates|IPA}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:30.662Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46706 t=1555362390562416
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1340.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 507746563, 568067895, 690474642
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4463906\" pageid=\"4463906\" ns=\"828\" title=\"Module:IPA/templates\"><revisions><rev user=\"Rua\" timestamp=\"2019-03-31T20:38:27Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal m_IPA = require(\"Module:IPA\")\n\nlocal U = mw.ustring.char\nlocal syllabic = U(0x0329)\n\n-- Used for [[Template:IPA]].\nfunction\
      \ export.IPA(frame)\n\tlocal parent_args = frame.getParent and frame:getParent().args or frame\n\tlocal compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default =\
      \ \"\"},\n\t\t[1 + offset] = {list = true, allow_holes = true},\n\t\t[\"n\"] = {list = true, allow_holes = true},\n\t\t[\"qual\"] = {list = true, allow_holes = true},\n\t\t[\"nocount\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args\
      \ = require(\"Module:parameters\").process(parent_args, params)\n\tlocal langarg = args[compat and \"lang\" or 1]\n\tlocal lang = mw.title.getCurrentTitle().nsText == \"Template\" and \"en\" or langarg\n\tlang = require(\"Module:languages\").getByCode(lang)\n\
      \n\t-- [[Special:WhatLinksHere/Template:tracking/IPA/grc]]\n\tif lang and lang:getCode() == \"grc\" then\n\t\trequire(\"Module:debug\").track(\"IPA/grc\")\n\tend\n\t\n\tlocal items = {}\n\t\n\tfor i = 1, math.max(args[1 + offset].maxindex, args[\"n\"].maxindex)\
      \ do\n\t\tlocal pron = args[1 + offset][i]\n\t\tlocal note = args[\"n\"][i]\n\t\tlocal qual = args[\"qual\"][i]\n\t\t\n\t\tif lang then\n\t\t\trequire(\"Module:IPA/tracking\").run_tracking(pron, lang)\n\t\tend\n\t\t\n\t\tif pron or note or qual then\n\t\
      \t\ttable.insert(items, {pron = pron, note = note, qualifiers = {qual}})\n\t\tend\n\tend\n\t\n\treturn m_IPA.format_IPA_full(lang, items, nil, nil, args.sort, args.nocount)\nend\n\n-- Used for [[Template:IPAchar]].\nfunction export.IPAchar(frame)\n\tlocal\
      \ params = {\n\t\t[1] = {list = true, allow_holes = true},\n\t\t[\"n\"] = {list = true, allow_holes = true},\n\t\t[\"lang\"] = {}, -- This parameter is not used and does nothing, but is allowed for futureproofing.\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame.getParent and frame:getParent().args or frame, params)\n\t\n\tlocal items = {}\n\t\n\tfor i = 1, math.max(args[1].maxindex, args[\"n\"].maxindex) do\n\t\tlocal pron = args[1][i]\n\t\tlocal note = args[\"n\"][i]\n\t\t\n\t\tif pron or note\
      \ then\n\t\t\ttable.insert(items, {pron = pron, note = note})\n\t\tend\n\tend\n\t\n\t-- Format\n\treturn m_IPA.format_IPA_multiple(nil, items)\nend\n\nfunction export.XSAMPA(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t}\n\tlocal args\
      \ = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn m_IPA.XSAMPA_to_IPA(args[1] or \"[Eg'zA:mp5=]\")\nend\n\n-- Used by [[Template:X2IPA]]\nfunction export.X2IPAtemplate(frame)\n\tlocal parent_args = frame.getParent\
      \ and frame:getParent().args or frame\n\tlocal compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default = \"und\"},\n\t\t[1 + offset] = {list = true, allow_holes\
      \ = true},\n\t\t[\"n\"] = { list = true, allow_holes = true },\n\t\t[\"qual\"] = { list = true, allow_holes = true },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(parent_args, params)\n\t\n\tlocal m_XSAMPA = require(\"Module:IPA/X-SAMPA\"\
      )\n\t\n\tpronunciations, notes, qualifiers, lang = args[1 + offset], args[\"n\"], args[\"qual\"], args[compat and \"lang\" or 1]\n\t\n\tlocal output = {}\n\ttable.insert(output, \"{{IPA\")\n\t\n\ttable.insert(output, \"|\" .. lang)\n\n\tfor i = 1, math.max(pronunciations.maxindex,\
      \ notes.maxindex, qualifiers.maxindex) do\n\t\tif pronunciations[i] then\n\t\t\ttable.insert(output, \"|\"..m_XSAMPA.XSAMPA_to_IPA(pronunciations[i]))\n\t\tend\n\t\tif notes[i] then\n\t\t\ttable.insert(output, \"|n\"..i..\"=\"..notes[i])\n\t\tend\n\t\t\
      if qualifiers[i] then\n\t\t\ttable.insert(output, \"|qual\"..i..\"=\"..qualifiers[i])\n\t\tend\n\tend\n\t\n\ttable.insert(output, \"}}\")\n\n\treturn table.concat(output)\nend\n\n-- Used by [[Template:X2IPAchar]]\nfunction export.X2IPAchar(frame)\n\tlocal\
      \ params = {\n\t\t[1] = { list = true, allow_holes = true },\n\t\t[\"n\"] = { list = true, allow_holes = true },\n\t\t[\"lang\"] = { },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal m_XSAMPA\
      \ = require(\"Module:IPA/X-SAMPA\")\n\t\n\tpronunciations, notes, lang = args[1], args[\"n\"], args[\"lang\"]\n\t\n\tlocal output = {}\n\ttable.insert(output, \"{{IPAchar\")\n\t\n\tfor i = 1, math.max(pronunciations.maxindex, notes.maxindex) do\n\t\tif\
      \ pronunciations[i] then\n\t\t\ttable.insert(output, \"|\"..m_XSAMPA.XSAMPA_to_IPA(pronunciations[i]))\n\t\tend\n\t\tif notes[i] then\n\t\t\ttable.insert(output, \"|n\"..i..\"=\"..notes[i])\n\t\tend\n\tend\n\t\n\tif lang then\n\t\ttable.insert(output,\
      \ \"|lang=\"..lang)\n\tend\n\t\n\ttable.insert(output, \"}}\")\n\t\n\treturn table.concat(output)\nend\n\n-- Used by [[Template:x2rhymes]]\nfunction export.X2rhymes(frame)\n\tlocal parent_args = frame.getParent and frame:getParent().args or frame\n\tlocal\
      \ compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default = \"und\"},\n\t\t[1 + offset] = {required = true, list = true, allow_holes = true},\n\t}\n\t\n\tlocal\
      \ args = require(\"Module:parameters\").process(parent_args, params)\n\t\n\tlocal m_XSAMPA = require(\"Module:IPA/X-SAMPA\")\n\t\n\tpronunciations, lang = args[1 + offset], args[compat and \"lang\" or 1]\n\t\n\tlocal output =  {}\n\ttable.insert(output,\
      \ \"{{rhymes\")\n\t\n\ttable.insert(output, \"|\" .. lang)\n\n\tfor i = 1, pronunciations.maxindex do\n\t\tif pronunciations[i] then\n\t\t\ttable.insert(output, \"|\"..m_XSAMPA.XSAMPA_to_IPA(pronunciations[i]))\n\t\tend\n\tend\n\t\n\ttable.insert(output,\
      \ \"}}\")\n\t\n\treturn table.concat(output)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:30.848Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46129 t=1555362390739302
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 190117134, 566102924, 696758907
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3923940\" pageid=\"3923940\" ns=\"828\" title=\"Module:IPA\"><revisions><rev user=\"Suzukaze-c\" timestamp=\"2019-02-27T02:22:09Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"move leading space inside .previewonly.error\" xml:space=\"preserve\">local export = {}\n-- [[Module:IPA/data]]\n\nlocal m_data = mw.loadData('Module:IPA/data') -- [[Module:IPA/data]]\nlocal m_symbols =\
      \ mw.loadData('Module:IPA/data/symbols') -- [[Module:IPA/data/symbols]]\nlocal m_syllables -- [[Module:syllables]]; loaded below if needed\n\nlocal sub = mw.ustring.sub\nlocal find = mw.ustring.find\nlocal gsub = mw.ustring.gsub\nlocal match = mw.ustring.match\n\
      local gmatch = mw.ustring.gmatch\nlocal U = mw.ustring.char\n\nfunction export.format_IPA_full(lang, items, err, separator, sortKey, no_count)\n\tlocal IPA_key, key_link, err_text, prefix, IPAs, category\n\tlocal hasKey = m_data.langs_with_infopages\n\t\
      local namespace = mw.title.getCurrentTitle().nsText\n\t\n\tif err then\n\t\terr_text = '&lt;span class=\"error\"&gt;' .. err .. '&lt;/span&gt;'\n\telse\n\t\tif hasKey[lang:getCode()] then\n\t\t\tIPA_key = \"Appendix:\" .. lang:getCanonicalName() .. \"\
      \ pronunciation\"\n\t\telse\n\t\t\tIPA_key = \"wikipedia:\" .. lang:getCanonicalName() .. \" phonology\"\n\t\tend\n\t\t\n\t\tkey_link = \"[[\" .. IPA_key .. \"|key]]\"\n\tend\n\n\t\n\tlocal prefix = \"[[Wiktionary:International Phonetic Alphabet|IPA]]&lt;sup&gt;(\"\
      \ .. ( key_link or err_text ) .. \")&lt;/sup&gt;:&amp;#32;\"\n\t\n\tIPAs = export.format_IPA_multiple(lang, items, separator, no_count)\n\t\n\tif lang and (namespace == \"\" or namespace == \"Reconstruction\") then\n\t\tsortKey = sortKey or lang:makeSortKey(mw.title.getCurrentTitle().text)\n\
      \t\tsortKey = sortKey and (\"|\" .. sortKey) or \"\"\n\t\tcategory = \"[[Category:\" .. lang:getCanonicalName() .. \" terms with IPA pronunciation\" .. sortKey .. \"]]\"\n\telse\n\t\tcategory = \"\"\n\tend\n\n\treturn prefix .. IPAs .. category\nend\n\n\
      local function determine_repr(pron)\n\tlocal repr_mark = {}\n\tlocal repr, reconstructed\n\t\n\t-- remove initial asterisk before representation marks, used on some Reconstruction pages\n\tif find(pron, \"^%*\") then\n\t\treconstructed = true\n\t\tpron\
      \ = sub(pron, 2)\n\tend\n\t\n\tlocal representation_types = {\n\t\t['/'] = { right = '/', type = 'phonemic', },\n\t\t['['] = { right = ']', type = 'phonetic', },\n\t\t['⟨'] = { right = '⟩', type = 'orthographic', },\n\t\t['-'] = { type = 'rhyme' },\n\t\
      }\n\t\n\trepr_mark.i, repr_mark.f, repr_mark.left, repr_mark.right = find(pron, '^(.).-(.)$')\n\t\n\tlocal representation_type = representation_types[repr_mark.left]\n\t\n\tif representation_type then\n\t\tif representation_type.right then\n\t\t\tif repr_mark.right\
      \ == representation_type.right then\n\t\t\t\trepr = representation_type.type\n\t\t\tend\n\t\telse\n\t\t\trepr = representation_type.type\n\t\tend\n\telse\n\t\trepr = nil\n\tend\n\t\n\treturn repr, reconstructed\nend\n\nlocal function hasInvalidSeparators(transcription)\n\
      \tif find(transcription, \"%.[ˈˌ]\") then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\nfunction export.format_IPA_multiple(lang, items, separator, no_count)\n\tlocal notes = {}\n\tlocal categories = {}\n\tseparator = separator or ', '\n\t\n\
      \t-- Format\n\tif not items[1] then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\ttable.insert(items, {pron = \"/aɪ piː ˈeɪ/\"})\n\t\telse\n\t\t\ttable.insert(categories, \"[[Category:Pronunciation templates without a pronunciation]]\"\
      )\n\t\tend\n\tend\n\t\n\tlocal bits = {}\n\t\n\tfor _, item in ipairs(items) do\n\t\tlocal bit = export.format_IPA(lang, item.pron)\n\t\t\n\t\tif item.qualifiers and item.qualifiers[1] then\n\t\t\tbit = require(\"Module:qualifier\").format_qualifier(item.qualifiers)\
      \ .. \" \" .. bit\n\t\tend\n\t\t\n\t\tif item.note then\n\t\t\tbit = bit .. mw.getCurrentFrame():extensionTag(\"ref\", item.note)\n\t\tend\n\t\t\n\t\ttable.insert(bits, bit)\n\t\t\n\t\t--[=[\t[[Special:WhatLinksHere/Template:tracking/IPA/syntax-error]]\n\
      \t\t\t\tThe length or gemination symbol should not appear after a syllable break or stress symbol.\t]=]\n\t\t\n\t\tif find(item.pron, \"[ˈˌ%.][ːˑ]\") then\n\t\t\trequire(\"Module:debug\").track(\"IPA/syntax-error\")\n\t\tend\n\t\t\n\t\tif lang then\n\t\
      \t\t-- Add syllable count if the language's diphthongs are listed in [[Module:syllables]].\n\t\t\tif not no_count and mw.title.getCurrentTitle().namespace == 0 then\n\t\t\t\tm_syllables = m_syllables or require('Module:syllables')\n\t\t\t\tif m_syllables.hasDiphthongs(lang)\
      \ then\n\t\t\t\t\tif determine_repr(item.pron) == \"phonemic\" or lang:getCode() == \"ru\" then\n\t\t\t\t\t\tlocal syllable_count = m_syllables.getVowels(item.pron, lang)\n\t\t\t\t\t\tif syllable_count then\n\t\t\t\t\t\t\ttable.insert(categories, \"[[Category:\"\
      \ .. lang:getCanonicalName() .. \" \" .. syllable_count .. \"-syllable words]]\")\n\t\t\t\t\t\tend\t\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tif lang:getCode() == \"en\" then\n\t\t\t\tif hasInvalidSeparators(item.pron) then\n\t\t\t\t\ttable.insert(categories,\
      \ \"[[Category:IPA for English using .ˈ or .ˌ]]\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\n\treturn table.concat(bits, separator) .. table.concat(categories)\nend\n\n-- Takes an IPA pronunciation and formats it and adds cleanup categories.\nfunction\
      \ export.format_IPA(lang, pron, split_output)\n\tlocal err = {}\n\tlocal categories = {}\n\t\n\t-- Remove wikilinks, so that wikilink brackets are not misinterpreted as\n\t-- indicating phonemic transcription\n\tlocal str_gsub = string.gsub\n\tlocal without_links\
      \ = str_gsub(pron, '%[%[[^|%]]+|([^%]]+)%]%]', '%1')\n\twithout_links = str_gsub(without_links, '%[%[[^%]]+%]%]', '%1')\n\t\n\t-- Detect whether this is a phonemic or phonetic transcription\n\tlocal repr, reconstructed = determine_repr(without_links)\n\
      \t\n\tif reconstructed then\n\t\tpron = sub(pron, 2)\n\tend\n\t\n\t-- If valid, strip the representation marks\n\tif repr == \"phonemic\" then\n\t\tpron = sub(pron, 2, -2)\n\t\twithout_links = sub(without_links, 2, -2)\n\telseif repr == \"phonetic\" then\n\
      \t\tpron = sub(pron, 2, -2)\n\t\twithout_links = sub(without_links, 2, -2)\n\telseif repr == \"orthographic\" then\n\t\tpron = sub(pron, 2, -2)\n\t\twithout_links = sub(without_links, 2, -2)\n\telseif repr == \"rhyme\" then\n\t\tpron = sub(pron, 2)\n\t\
      \twithout_links = sub(without_links, 2)\n\telse\n\t\ttable.insert(categories, \"[[Category:IPA pronunciations with invalid representation marks]]\")\n\t\t-- table.insert(err, \"invalid representation marks\")\n\t\t-- Removed because it's annoying when\
      \ previewing pronunciation pages.\n\tend\n\t\n\t-- Check for obsolete and nonstandard symbols\n\tfor i, symbol in ipairs(m_data.nonstandard) do\n\t\tlocal result\n\t\tfor nonstandard in gmatch(pron, symbol) do\n\t\t\tif not result then\n\t\t\t\tresult\
      \ = {}\n\t\t\tend\n\t\t\ttable.insert(result, nonstandard)\n\t\t\ttable.insert(categories, \"[[Category:IPA pronunciations with obsolete or nonstandard characters|\" .. nonstandard .. \"]]\")\n\t\tend\n\t\t\n\t\tif result then\n\t\t\ttable.insert(err,\
      \ \"obsolete or nonstandard characters (\" .. table.concat(result) .. \")\")\n\t\t\tbreak\n\t\tend\n\tend\n\t\n\t--[[ Check for invalid symbols after removing the following:\n\t\t\t1. wikilinks (handled above)\n\t\t\t2. paired HTML tags\n\t\t\t3. bolding\n\
      \t\t\t4. italics\n\t\t\t5. HTML entity for space\n\t\t\t6. asterisk at beginning of transcription\n\t\t\t7. comma followed by spacing characters\n\t\t\t8. superscripts enclosed in superscript parentheses\t\t]]\n\tlocal found_HTML\n\tlocal result = str_gsub(without_links,\
      \ \"&lt;(%a+)[^&gt;]*&gt;([^&lt;]+)&lt;/%1&gt;\",\n\t\tfunction(tagName, content)\n\t\t\tfound_HTML = true\n\t\t\treturn content\n\t\tend)\n\tresult = str_gsub(result, \"'''([^']*)'''\", \"%1\")\n\tresult = str_gsub(result, \"''([^']*)''\", \"%1\")\n\t\
      result = str_gsub(result, \"&amp;[^;]+;\", \"\") -- This may catch things that are not valid character entities.\n\tresult = str_gsub(result, \"^%*\", \"\")\n\tresult = gsub(result, \",%s+\", \"\")\n\tresult = gsub(result, \"⁽[\".. m_symbols.superscripts\
      \ .. \"]+⁾\", \"\")\n\tresult = gsub(result, '[' .. m_symbols.valid .. ']', '')\n\tif result ~= '' then\n\t\tlocal suggestions = {}\n\t\tmw.log(pron, result)\n\t\tlocal namespace = mw.title.getCurrentTitle().namespace\n\t\tlocal category\n\t\tif namespace\
      \ == 0 then\n\t\t\t-- main namespace\n\t\t\tcategory = \"IPA pronunciations with invalid IPA characters\"\n\t\telseif namespace == 118 then\n\t\t\t-- reconstruction namespace\n\t\t\tcategory = \"IPA pronunciations with invalid IPA characters/reconstruction\"\
      \n\t\telse\n\t\t\tcategory = \"IPA pronunciations with invalid IPA characters/non_mainspace\"\n\t\tend\n\t\tfor character in gmatch(result, \".\") do\n\t\t\tlocal suggestion = m_symbols.suggestions[character]\n\t\t\tif suggestion then\n\t\t\t\ttable.insert(suggestions,\
      \ character .. \" with \" .. suggestion)\n\t\t\tend\n\t\t\ttable.insert(categories, \"[[Category:\" .. category .. \"|\" .. character .. \"]]\")\n\t\tend\n\t\ttable.insert(err, \"invalid IPA characters (\" .. result .. \")\")\n\t\tif suggestions[1] then\n\
      \t\t\ttable.insert(err, \"replace \" .. table.concat(suggestions, \", \"))\n\t\tend\n\tend\n\t\n\tif found_HTML then\n\t\ttable.insert(categories, \"[[Category:IPA pronunciations with paired HTML tags]]\")\n\tend\n\t\n\t-- Reference inside IPA template\
      \ usage\n\t-- FIXME: Doesn't work; you can't put HTML in module output.\n\t--if mw.ustring.find(pron, '&lt;/ref&gt;') then\n\t--\ttable.insert(categories, \"[[Category:IPA pronunciations with reference]]\")\n\t--end\n\t\n\tif repr == \"phonemic\" or repr\
      \ == \"rhyme\" then\n\t\tif lang and m_data.phonemes[lang:getCode()] then\n\t\t\tlocal valid_phonemes = m_data.phonemes[lang:getCode()]\n\t\t\tlocal rest = pron\n\t\t\tlocal phonemes = {}\n\t\t\t\n\t\t\twhile mw.ustring.len(rest) &gt; 0 do\n\t\t\t\tlocal\
      \ longestmatch = \"\"\n\t\t\t\t\n\t\t\t\tif sub(rest, 1, 1) == \"(\" or sub(rest, 1, 1) == \")\" then\n\t\t\t\t\tlongestmatch = sub(rest, 1, 1)\n\t\t\t\telse\n\t\t\t\t\tfor _, phoneme in ipairs(valid_phonemes) do\n\t\t\t\t\t\tif mw.ustring.len(phoneme)\
      \ &gt; mw.ustring.len(longestmatch) and sub(rest, 1, mw.ustring.len(phoneme)) == phoneme then\n\t\t\t\t\t\t\tlongestmatch = phoneme\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif mw.ustring.len(longestmatch) &gt; 0 then\n\t\t\t\t\t\
      table.insert(phonemes, longestmatch)\n\t\t\t\t\trest = sub(rest, mw.ustring.len(longestmatch) + 1)\n\t\t\t\telse\n\t\t\t\t\tlocal phoneme = sub(rest, 1, 1)\n\t\t\t\t\ttable.insert(phonemes, \"&lt;span style=\\\"color: red\\\"&gt;\" .. phoneme .. \"&lt;/span&gt;\"\
      )\n\t\t\t\t\trest = sub(rest, 2)\n\t\t\t\t\ttable.insert(categories, \"[[Category:IPA pronunciations with invalid phonemes/\" .. lang:getCode() .. \"]]\")\n\t\t\t\t\trequire(\"Module:debug\").track(\"IPA/invalid phonemes/\" .. phoneme)\n\t\t\t\tend\n\t\
      \t\tend\n\t\t\t\n\t\t\tpron = table.concat(phonemes)\n\t\tend\n\t\t\n\t\tif repr == \"phonemic\" then\n\t\t\tpron = \"/\" .. pron .. \"/\"\n\t\telse\n\t\t\tpron = \"-\" .. pron\n\t\tend\n\telseif repr == \"phonetic\" then\n\t\tpron = \"[\" .. pron .. \"\
      ]\"\n\telseif repr == \"orthographic\" then\n\t\tpron = \"⟨\" .. pron .. \"⟩\"\n\tend\n\t\n\tif reconstructed then\n\t\tpron = \"*\" .. pron\n\tend\n\t\n\tif err[1] then\n\t\terr = '&lt;span class=\"previewonly error\" style=\"font-size: small;&gt;&amp;#32;'\
      \ .. table.concat(err, ', ') .. '&lt;/span&gt;'\n\telse\n\t\terr = \"\"\n\tend\n\t\n\tif split_output then -- for use of IPA in links \n\t\treturn '&lt;span class=\"IPA\"&gt;' .. pron .. '&lt;/span&gt;', table.concat(categories), err\n\telse\n\t\treturn\
      \ '&lt;span class=\"IPA\"&gt;' .. pron .. '&lt;/span&gt;' .. err .. table.concat(categories)\n\tend\nend\n\nfunction export.example(frame)\n\tlocal output = {}\n\t\n\tlocal m_links = require('Module:links')\n\tlocal m_languages = require('Module:languages')\n\
      \t\n\ttable.insert(\n\t\toutput,\n[[\n{| class=\"wikitable\"\n! Term !! IPA !! Generated X-SAMPA !! Regenerated IPA !! Matched?\n]]\n\t)\n\tlocal row =\n[[\n|-\n| link || IPA || XSAMPA || regenerated_IPA || matched\n]]\n\t\n\tlocal examples = mw.text.split(frame.args[1],\
      \ \",%s*\")\n\t\n\tlocal m_XSAMPA = require(\"Module:IPA/X-SAMPA\")\n\t\n\tfor _, example in pairs(examples) do\n\t\tlocal lang, word = match(example, \"(%l%l%l?):(.+) [/%[]\")\n\t\t\n\t\tif lang then\n\t\t\tlang = m_languages.getByCode(lang) or error('\"\
      ' .. lang .. '\" is not a valid language code.')\n\t\tend\n\t\t\n\t\tlocal IPA = match(example, \"/[^/]+/\")\n\t\t\tor match(example, \"%[[^%]]+%]\")\n\t\t\tor error('No IPA transcription found in \"' .. example .. '\".')\n\t\tlocal XSAMPA = m_XSAMPA.IPA_to_XSAMPA(IPA)\n\
      \t\tlocal regenerated_IPA = m_XSAMPA.XSAMPA_to_IPA(XSAMPA)\n\t\t\n\t\tcontent = {\n\t\t\tlink = lang and word and m_links.full_link{ term = word, lang = lang },\n\t\t\tmatched = IPA == regenerated_IPA\n\t\t\t\tand '&lt;span style=\"color: green;\"&gt;yes&lt;/span&gt;'\n\
      \t\t\t\tor '&lt;span style=\"color: red;\"&gt;no&lt;/span&gt;',\n\t\t\tIPA = '&lt;span class=\"IPA\"&gt;' .. IPA .. '&lt;/span&gt;',\n\t\t\tXSAMPA = '&lt;code&gt;' .. XSAMPA .. '&lt;/span&gt;',\n\t\t\tregenerated_IPA = '&lt;span class=\"IPA\"&gt;' .. regenerated_IPA\
      \ .. '&lt;/span&gt;'\n\t\t}\n\t\t\n\t\tlocal function add_content(item)\n\t\t\treturn content[item] or \"\"\n\t\tend\n\t\tlocal row = gsub(row, \"[%a_]+\", add_content)\n\t\ttable.insert(output, row)\n\tend\n\t\n\ttable.insert(output, \"|}\")\n\t\n\treturn\
      \ table.concat(output)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:31.016Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=40955 t=1555362390926755
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1280.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 208083136, 556417090, 690732753
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4118506\" pageid=\"4118506\" ns=\"828\" title=\"Module:IPA/data\"><revisions><rev user=\"Mahagaja\" timestamp=\"2019-02-27T13:31:09Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"mfe now exists\" xml:space=\"preserve\">local data = {}\n\n--[=[\tPlease add language codes for new pronunciation keys to the list below.\n\t\tThis will allow [[Template:IPA]] and the\
      \ functions in [[Module:IPA]] to\n\t\tautomatically link to the key.\t]=]\nlocal langcodes = {\n\t\"ca\",\n    \"cy\",\n\t\"de\",\n    \"dsb\",\n    \"el\",\n\t\"en\",\n    \"eo\",\n    \"es\",\n    \"fr\",\n    \"ga\",\n    \"gd\",\n    \"got\",\n   \
      \ \"hu\",\n    \"it\",\n    \"la\",\n    \"liv\",\n    \"mdf\",\n    \"mfe\",\n    \"my\",\n    \"nci\",\n\t\"nl\",\n    \"no\",\n    \"pjt\",\n    \"pl\",\n    \"pt\",\n    \"sl\",\n    \"sga\",\n    \"sv\",\n    \"ug\",\n    \"wlm\",\n    \"yi\",\n}\n\
      \ndata.langs_with_infopages = {}\n\n--[=[\tThis goes through the list of langcodes, and fills\n\t\tthe table data.langs_with_infopages with items\n\t\tsuch as [\"ca\"] = true, [\"cy\"] = true, ... ,\n\t\tso that [[Module:IPA]] can easily access them. ]=]\n\
      for _, langcode in ipairs(langcodes) do\n\tdata.langs_with_infopages[langcode] = true\nend\n\n-- Non-standard or obsolete IPA symbols.\ndata.nonstandard = {\n\t--[[\tThe following symbols consist of more than one character,\n\t\t\tso we can't put them\
      \ in the line below.\t\t]]\n\t\"ɑ̢\", \"d̂\", \"t̂\", \"n̂\", \"l̂\", \"k̫\", \"ɔ̗\", \"ɔ̖\",\n\t\n\t\"[ʦʣʧʤʨʥ?ƍσƺƪƻƾƞᶀᶁᶂᶃᶄᶅᶆᶈᶇᶉᶊᶋƫᶌᶍᶎʓʆλƛłščžǰǧǯẋᵻᵿⱻʚ\"\n\t.. \"ɷωıȹȸ∅ØƥƭƈƙʠʇʗʖʞɩɼȣяɿʅʮʯᴀᴀᴇGRŒQȡȶȵȴKPT]\"\n}\n\n-- See valid IPA characters at [[Module:IPA/data/symbols]].\n\
      \ndata.phonemes = {}\ndata.phonemes[\"nl\"] = {\n\t\"m\", \"n\", \"ŋ\",\n\t\"p\", \"b\", \"t\", \"d\", \"k\", \"ɡ\",\n\t\"f\", \"v\", \"s\", \"z\", \"ʃ\", \"ʒ\", \"x\", \"ɣ\", \"ɦ\",\n\t\"ʋ\", \"l\", \"j\", \"r\",\n\t\"ɪ\", \"ʏ\", \"ɛ\", \"ə\", \"ɔ\",\
      \ \"ɑ\",\n\t\"i\", \"iː\", \"y\", \"yː\", \"u\", \"uː\", \"eː\", \"øː\", \"oː\", \"ɛː\", \"œː\", \"ɔː\", \"aː\",\n\t\"ɛi̯\", \"œy̯\", \"ɔi̯\", \"ɑu̯\", \"ɑi̯\",\n\t\"iu̯\", \"yu̯\", \"ui̯\", \"eːu̯\", \"oːi̯\", \"aːi̯\",\n\t\"ˈ\", \"ˌ\", \".\", \" \",\n\
      \t}\ndata.phonemes[\"hy\"] = {\n\t\"ɑ\", \"b\", \"ɡ\", \"d\", \"ɛ\", \"z\", \"ɛ\", \"ə\", \"tʰ\", \"ʒ\", \"i\", \"l\", \"χ\", \"t͡s\",\n\t\"k\", \"h\", \"d͡z\", \"ʁ\", \"t͡ʃ\", \"m\", \"j\", \"n\", \"ʃ\", \"ɔ\", \"t͡ʃʰ\", \"p\", \"d͡ʒ\",\n\t\"r\", \"s\"\
      , \"v\", \"t\", \"ɾ\", \"t͡sʰ\", \"v\", \"pʰ\", \"kʰ\", \"ɔ\", \"f\", \"ŋɡ\", \"ŋk\",\n\t\"ŋχ\", \"u\", \"ˈ\", \"ˌ\", \".\", \" \", \"ː\",\n\t}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2015-08-28T19:11:30.312Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Apt-verb-form&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=28-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 28 Aug 2015 19:11:29 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Aug-2015
      X-Cache: cp1053 miss (0), cp3012 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 1235772856, 3327030975, 3656419431
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="1617912" pageid="1617912" ns="10" title="Template:pt-verb-form"><revisions><rev user="CodeCat" timestamp="2014-12-24T02:30:45Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{head|pt|verb form|sort={{{sort|}}}|head={{{head|{{{sg|}}}}}}}}&lt;!--

      --&gt;{{#if:{{{verb|{{{1|}}}}}}|[[Category:pt-verb-form with infinitive]]}}&lt;!--
      --&gt;{{#if:{{{2|}}}|[[Category:pt-verb-form with 2]]}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:22.908Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43861 t=1555362382794971
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:22 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1227.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 581090037, 643736563, 700845195
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3989053\" pageid=\"3989053\" ns=\"828\" title=\"Module:headword\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-04T11:34:46Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal m_data = mw.loadData(\"Module:headword/data\")\n\nlocal title = mw.title.getCurrentTitle()\n\nlocal isLemma = m_data.lemmas\nlocal isNonLemma = m_data.nonlemmas\n\
      local notranslit = m_data.notranslit\nlocal toBeTagged = m_data.toBeTagged\n\nlocal parameters = {\n\tlang = { type = \"object\" },\n\tscript = { type = \"object\" },\n\theads = { type = \"table\" },\n\ttranslits = { type = \"table\" },\n\ttranscriptions\
      \ = { type = \"table\" },\n\tinflections = { type = \"table\" },\n\tgenders = { type = \"table\" },\n\tcategories = { type = \"table\" },\n\tpos_category = { type = \"string\" },\n\tsort_key = { type = \"string\" },\n\tid = { type = \"string\" },\n}\n\n\
      local function test_script(text, script_code)\n\tif type(text) == \"string\" and type(script_code) == \"string\" then\n\t\tlocal sc = require(\"Module:scripts\").getByCode(script_code)\n\t\tlocal characters\n\t\tif sc then\n\t\t\tcharacters = sc:getCharacters()\n\
      \t\tend\n\t\t\n\t\tlocal out\n\t\tif characters then\n\t\t\ttext = mw.ustring.gsub(text, \"%W\", \"\")\n\t\t\tout = mw.ustring.find(text, \"[\" .. characters .. \"]\")\n\t\tend\n\t\t\n\t\tif out then\n\t\t\treturn true\n\t\telse\n\t\t\treturn false\n\t\
      \tend\n\telse\n\t\tmw.log(\"Parameters to test_script were incorrect.\")\n\t\treturn nil\n\tend\nend\n\n\nlocal function preprocess(data)\n\t--[=[\n\t[[Special:WhatLinksHere/Template:tracking/headword/heads-not-table]]\n\t[[Special:WhatLinksHere/Template:tracking/headword/translits-not-table]]\n\
      \t]=]\n\tif type(data.heads) ~= \"table\" then\n\t\tif data.heads then\n\t\t\trequire(\"Module:debug\").track(\"headword/heads-not-table\")\n\t\tend\n\t\t\n\t\tdata.heads = { data.heads }\n\tend\n\t\n\tif type(data.translits) ~= \"table\" then\n\t\tif\
      \ data.translits then\n\t\t\trequire(\"Module:debug\").track(\"headword/translits-not-table\")\n\t\tend\n\t\t\n\t\tdata.translits = { data.translits }\n\tend\n\t\n\tif type(data.transcriptions) ~= \"table\" then\n\t\tif data.transcriptions then\n\t\t\t\
      require(\"Module:debug\").track(\"headword/transcriptions-not-table\")\n\t\tend\n\t\t\n\t\tdata.transcriptions = { data.transcriptions }\n\tend\n\t\n\tif not data.heads or #data.heads == 0 then\n\t\tdata.heads = {\"\"}\n\tend\n\t\n\t-- Determine if term\
      \ is reconstructed\n\tlocal is_reconstructed = data.lang:getType() == \"reconstructed\"\n\t\tor title.nsText == \"Reconstruction\"\n\t\n\t-- Create a default headword.\n\tlocal subpagename = title.subpageText\n\tlocal pagename = title.text\n\tlocal default_head\n\
      \tif is_reconstructed then\n\t\tdefault_head = require(\"Module:utilities\").plain_gsub(pagename, data.lang:getCanonicalName() .. \"/\", \"\")\n\telse\n\t\tdefault_head = subpagename\n\tend\n\t\n\t-- Add links to multi-word page names when appropriate\n\
      \tif data.lang:getCode() ~= \"zh\" then\n\t\tlocal spacingPunctuation = \"([%s%p]+)\"\n\t\t--[[ \tVariable containing anything that is\n\t\t\t\tnot a punctuation character found inside of words.\n\t\t\t\tUsed to exclude characters from the above regex.\t\
      ]]\n\t\tlocal notWordPunc = \"([^-־׳״'.·*’]+)\"\n\t\tlocal contains_words = false\n\t\t\n\t\tfor possibleWordBreak in mw.ustring.gmatch(default_head, spacingPunctuation) do\n\t\t\tif mw.ustring.find(possibleWordBreak, notWordPunc) then\n\t\t\t\tcontains_words\
      \ = true\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\n\t\tif (not is_reconstructed) and contains_words then\n\t\t\tlocal function workaround_to_exclude_chars(s)\n\t\t\t\treturn mw.ustring.gsub(s, notWordPunc, \"]]%1[[\")\n\t\t\tend\n\t\t\t\n\t\t\tdefault_head\
      \ = \"[[\"\n\t\t\t\t.. mw.ustring.gsub(\n\t\t\t\t\tdefault_head,\n\t\t\t\t\tspacingPunctuation,\n\t\t\t\t\tworkaround_to_exclude_chars\n\t\t\t\t\t)\n\t\t\t\t.. \"]]\"\n\t\t\t--[=[\n\t\t\tuse this when workaround is no longer needed:\n\t\t\tdefault_head\
      \ = \"[[\"\n\t\t\t\t.. mw.ustring.gsub(default_head, WORDBREAKCHARS, \"]]%1[[\")\n\t\t\t\t.. \"]]\"\n\t\t\t\n\t\t\tRemove any empty links, which could have been created above\n\t\t\tat the beginning or end of the string.\n\t\t\t]=]\n\t\t\tdefault_head\
      \ = mw.ustring.gsub(default_head, \"%[%[%]%]\", \"\")\n\t\tend\n\tend\n\t\n\tif is_reconstructed then\n\t\tdefault_head = \"*\" .. default_head\n\tend\n\t\n\t-- If a head is the empty string \"\", then replace it with the default\n\tfor i, head in ipairs(data.heads)\
      \ do\n\t\tif head == \"\" then\n\t\t\thead = default_head\n\t\telse\n\t\t\tif head == default_head and data.lang:getCanonicalName() == \"English\" then\n\t\t\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" terms with redundant head\
      \ parameter\")\n\t\t\tend\t\t\t\n\t\tend\n\t\tdata.heads[i] = head\n\tend\n\t\n\t--[[\tTry to detect the script if it was not provided\n\t\t\tWe use the first headword for this, and assume\n\t\t\tthat all of them have the same script\n\t\t\tThis *should*\
      \ always be true, right?\t\t]]\n\tif not data.sc then\n\t\tdata.sc = require(\"Module:scripts\").findBestScript(data.heads[1], data.lang)\n\tend\n\t\n\tfor i, val in pairs(data.translits) do\n\t\tdata.translits[i] = {display = val, is_manual = true}\n\t\
      end\n\t\n\t-- Make transliterations\n\tfor i, head in ipairs(data.heads) do\n\t\tlocal translit = data.translits[i]\n\t\t\n\t\t-- Try to generate a transliteration if necessary\n\t\t-- Generate it if the script is not Latn or similar, and if no transliteration\
      \ was provided\n\t\tif translit and translit.display == \"-\" then\n\t\t\ttranslit = nil\n\t\telseif not translit and not (data.sc:getCode():find(\"Latn\", nil, true) or data.sc:getCode() == \"Latinx\" or data.sc:getCode() == \"None\") and (not data.sc\
      \ or data.sc:getCode() ~= \"Imag\") then\n\t\t\ttranslit = data.lang:transliterate(require(\"Module:links\").remove_links(head), data.sc)\n\t\t\t\n\t\t\t-- There is still no transliteration?\n\t\t\t-- Add the entry to a cleanup category.\n\t\t\tif not\
      \ translit and not notranslit[data.lang:getCode()] then\n\t\t\t\ttranslit = \"&lt;small&gt;transliteration needed&lt;/small&gt;\"\n\t\t\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" terms needing transliteration\")\n\t\t\tend\n\t\t\
      \t\n\t\t\tif translit then\n\t\t\t\ttranslit = {display = translit, is_manual = false}\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Link to the transliteration entry for languages that require this\n\t\tif translit and data.lang:link_tr() then\n\t\t\ttranslit.display\
      \ = require(\"Module:links\").full_link{\n\t\t\t\tterm = translit.display,\n\t\t\t\tlang = data.lang,\n\t\t\t\tsc = require(\"Module:scripts\").getByCode(\"Latn\"),\n\t\t\t\ttr = \"-\"\n\t\t\t\t}\n\t\tend\n\t\t\n\t\tdata.translits[i] = translit\n\tend\n\
      \t\n\tif data.id and type(data.id) ~= \"string\" then\n\t\terror(\"The id in the data table should be a string.\")\n\tend\nend\n\n\n-- Format a headword with transliterations\nlocal function format_headword(data)\n\tlocal m_links = require(\"Module:links\"\
      )\n\tlocal m_scriptutils = require(\"Module:script utilities\")\n\t\n\t-- Are there non-empty transliterations?\n\t-- Need to do it this way because translit[1] might be nil while translit[2] is not\n\tlocal has_translits = false\n\t\n\t-- Format the headwords\n\
      \tfor i, head in ipairs(data.heads) do\n\t\tif data.translits[i] or data.transcriptions[i] then\n\t\t\thas_translits = true\n\t\tend\n\t\t\n\t\t-- Apply processing to the headword, for formatting links and such\n\t\tif head:find(\"[[\", nil, true) and\
      \ (not data.sc or data.sc:getCode() ~= \"Imag\") then\n\t\t\thead = m_links.language_link({term = head, lang = data.lang}, false)\n\t\tend\n\t\t\n\t\t-- Add language and script wrapper\n\t\tif i == 1 then\n\t\t\thead = m_scriptutils.tag_text(head, data.lang,\
      \ data.sc, \"head\", nil, data.id)\n\t\telse\n\t\t\thead = m_scriptutils.tag_text(head, data.lang, data.sc, \"head\", nil)\n\t\tend\n\t\t\n\t\tdata.heads[i] = head\n\tend\n\t\n\tlocal translits_formatted = \"\"\n\t\n\tif has_translits then\n\t\t-- Format\
      \ the transliterations\n\t\tlocal translits = data.translits\n\t\tlocal transcriptions = data.transcriptions\n\t\t\n\t\tif translits then\n\t\t\t-- using pairs() instead of ipairs() in case there is a gap\n\t\t\tfor i, _ in pairs(translits) do\n\t\t\t\t\
      if type(i) == \"number\" then\n\t\t\t\t\ttranslits[i] = m_scriptutils.tag_translit(translits[i].display, data.lang:getCode(), \"head\", nil, translits[i].is_manual)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\tif transcriptions then\n\t\t\tfor i, _ in pairs(transcriptions)\
      \ do\n\t\t\t\tif type(i) == \"number\" then\n\t\t\t\t\ttranscriptions[i] = m_scriptutils.tag_transcription(transcriptions[i], data.lang:getCode(), \"head\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\tfor i = 1, math.max(#translits, #transcriptions) do\n\t\
      \t\tlocal translits_formatted = {}\n\t\t\ttable.insert(translits_formatted, translits[i] and translits[i] or \"\")\n\t\t\ttable.insert(translits_formatted, (translits[i] and transcriptions[i]) and \" \" or \"\")\n\t\t\ttable.insert(translits_formatted,\
      \ transcriptions[i] and \"/\" .. transcriptions[i] .. \"/\" or \"\")\n\t\t\tdata.translits[i] = table.concat(translits_formatted)\n\t\tend\n\t\t\n\t\ttranslits_formatted = \" (\" .. table.concat(data.translits, \" &lt;i&gt;or&lt;/i&gt; \") .. \")\"\n\t\
      \t\n\t\tlocal transliteration_page = mw.title.new(data.lang:getCanonicalName() .. \" transliteration\", \"Wiktionary\")\n\t\t\n\t\tif transliteration_page then\n\t\t\tlocal success, exists = pcall(function () return transliteration_page.exists end)\n\t\
      \t\tif success and exists then\n\t\t\t\ttranslits_formatted = \" [[Wiktionary:\" .. data.lang:getCanonicalName() .. \" transliteration|•]]\" .. translits_formatted\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn table.concat(data.heads, \" &lt;i&gt;or&lt;/i&gt;\
      \ \") .. translits_formatted\nend\n\n\nlocal function format_genders(data)\n\tif data.genders and #data.genders &gt; 0 then\n\t\tlocal gen = require(\"Module:gender and number\")\n\t\treturn \"&amp;nbsp;\" .. gen.format_list(data.genders, data.lang)\n\t\
      else\n\t\treturn \"\"\n\tend\nend\n\n\nlocal function format_inflection_parts(data, parts)\n\tlocal m_links = require(\"Module:links\")\n\t\n\tfor key, part in ipairs(parts) do\n\t\tif type(part) ~= \"table\" then\n\t\t\tpart = {term = part}\n\t\tend\n\
      \t\t\n\t\tlocal qualifiers = \"\"\n\t\t\n\t\tif part.qualifiers and #part.qualifiers &gt; 0 then\n\t\t\tqualifiers = require(\"Module:qualifier\").format_qualifier(part.qualifiers) .. \" \"\n\t\t\t\n\t\t\t-- [[Special:WhatLinksHere/Template:tracking/headword/qualifier]]\n\
      \t\t\trequire(\"Module:debug\").track(\"headword/qualifier\")\n\t\tend\n\t\t\n\t\tlocal partaccel = part.accel\n\t\tlocal face = part.hypothetical and \"hypothetical\" or \"bold\"\n\t\tlocal nolink = part.hypothetical or part.nolink\n\t\t\n\t\t-- Convert\
      \ the term into a full link\n\t\t-- Don't show a transliteration here, the consensus seems to be not to\n\t\t-- show them in headword lines to avoid clutter.\n\t\tpart = m_links.full_link(\n\t\t\t{\n\t\t\t\tterm = not nolink and part.term or nil,\n\t\t\
      \t\talt = part.alt or (nolink and part.term or nil),\n\t\t\t\tlang = part.lang or data.lang,\n\t\t\t\tsc = part.sc or parts.sc or (not part.lang and data.sc),\n\t\t\t\tid = part.id,\n\t\t\t\tgenders = part.genders,\n\t\t\t\ttr = part.translit or (not (parts.enable_auto_translit\
      \ or data.inflections.enable_auto_translit) and \"-\" or nil),\n\t\t\t\tts = part.transcription,\n\t\t\t\taccel = parts.accel or partaccel,\n\t\t\t},\n\t\t\tface,\n\t\t\tfalse\n\t\t\t)\n\t\t\n\t\tpart = qualifiers .. part\n\t\t\n\t\tparts[key] = part\n\
      \tend\n\t\n\tlocal parts_output = \"\"\n\t\n\tif #parts &gt; 0 then\n\t\tparts_output = \" \" .. table.concat(parts, \" &lt;i&gt;or&lt;/i&gt; \")\n\telseif parts.request then\n\t\tparts_output = \" &lt;small&gt;[please provide]&lt;/small&gt;\"\n\t\t\t\
      .. require(\"Module:utilities\").format_categories(\n\t\t\t\t{data.lang:getCanonicalName() .. \" entries needing inflection\"},\n\t\t\t\tlang,\n\t\t\t\tnil,\n\t\t\t\tnil,\n\t\t\t\tdata.force_cat_output,\n\t\t\t\tdata.sc\n\t\t\t\t)\n\tend\n\t\n\treturn\
      \ \"&lt;i&gt;\" .. parts.label .. \"&lt;/i&gt;\" .. parts_output\nend\n\n-- Format the inflections following the headword\nlocal function format_inflections(data)\n\tif data.inflections and #data.inflections &gt; 0 then\n\t\t-- Format each inflection individually\n\
      \t\tfor key, infl in ipairs(data.inflections) do\n\t\t\tdata.inflections[key] = format_inflection_parts(data, infl)\n\t\tend\n\t\t\n\t\treturn \" (\" .. table.concat(data.inflections, \", \") .. \")\"\n\telse\n\t\treturn \"\"\n\tend\nend\n\nlocal function\
      \ show_headword_line(data)\n\tlocal namespace = title.nsText\n\n\t-- Check the namespace against the language type\n\tif namespace == \"\" then\n\t\tif data.lang:getType() == \"reconstructed\" then\n\t\t\terror(\"Entries for this language must be placed\
      \ in the Reconstruction: namespace.\")\n\t\telseif data.lang:getType() == \"appendix-constructed\" then\n\t\t\terror(\"Entries for this language must be placed in the Appendix: namespace.\")\n\t\tend\n\tend\n\t\n\tlocal tracking_categories = {}\n\n\tif\
      \ not data.noposcat then\t\n\t\tlocal pos_category = data.lang:getCanonicalName() .. \" \" .. data.pos_category\n\t\tif pos_category ~= \"Translingual Han characters\" then\n\t\t\ttable.insert(data.categories, 1, pos_category)\n\t\tend\n\tend\n\t\n\t--\
      \ Is it a lemma category?\n\tif isLemma[data.pos_category] or isLemma[data.pos_category:gsub(\"^reconstructed \", \"\")] then\n\t\tif not data.noposcat then\n\t\t\ttable.insert(data.categories, 1, data.lang:getCanonicalName() .. \" lemmas\")\n\t\tend\n\
      \t-- Is it a nonlemma category?\n\telseif isNonLemma[data.pos_category]\n\t\tor isNonLemma[data.pos_category:gsub(\"^reconstructed \", \"\")]\n\t\tor isLemma[data.pos_category:gsub(\"^mutated \", \"\")]\n\t\tor isNonLemma[data.pos_category:gsub(\"^mutated\
      \ \", \"\")] then\n\t\t\n\t\tif not data.noposcat then\n\t\t\ttable.insert(data.categories, 1, data.lang:getCanonicalName() .. \" non-lemma forms\")\n\t\tend\n\t-- It's neither; we don't know what this category is, so tag it with a tracking category.\n\
      \telse\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/headword/unrecognized pos]]\n\t\t]=]\n\t\ttable.insert(tracking_categories, \"head tracking/unrecognized pos\")\n\t\trequire(\"Module:debug\").track{\n\t\t\t\"headword/unrecognized pos\"\
      ,\n\t\t\t\"headword/unrecognized pos/lang/\" .. data.lang:getCode(),\n\t\t\t\"headword/unrecognized pos/pos/\" .. data.pos_category\n\t\t}\n\tend\n\t\n\t-- Preprocess\n\tpreprocess(data)\n\t\n\tlocal m_links = require(\"Module:links\")\n\t\n\tif namespace\
      \ == \"\" and data.lang:getType() ~= \"reconstructed\" then\n\t\tfor _, head in ipairs(data.heads) do\n\t\t\tif title.prefixedText ~= m_links.getLinkPage(m_links.remove_links(head), data.lang) then\n\t\t\t\t--[=[\n\t\t\t\t[[Special:WhatLinksHere/Template:tracking/headword/pagename\
      \ spelling mismatch]]\n\t\t\t\t]=]\n\t\t\t\trequire(\"Module:debug\").track{\n\t\t\t\t\t\"headword/pagename spelling mismatch\",\n\t\t\t\t\t\"headword/pagename spelling mismatch/\" .. data.lang:getCode()\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\
      end\n\t\n\t-- Format and return all the gathered information\n\treturn\n\t\tformat_headword(data) ..\n\t\tformat_genders(data) ..\n\t\tformat_inflections(data) ..\n\t\trequire(\"Module:utilities\").format_categories(\n\t\t\ttracking_categories, data.lang,\
      \ data.sort_key, nil, data.force_cat_output, data.sc\n\t\t\t)\nend\n\nfunction export.full_headword(data)\n\tlocal tracking_categories = {}\n\t\n\t-- Script-tags the topmost header.\n\tlocal pagename = title.text\n\tlocal fullPagename = title.fullText\n\
      \tlocal namespace = title.nsText\n\t\n\tif not data.lang or type(data.lang) ~= \"table\" or not data.lang.getCode then\n\t\terror(\"In data, the first argument to full_headword, data.lang should be a language object.\")\n\tend\n\t\n\tif not data.sc then\n\
      \t\tdata.sc = require(\"Module:scripts\").findBestScript(data.heads and data.heads[1] ~= \"\" and data.heads[1] or pagename, data.lang)\n\telse\n\t\t-- Track uses of sc parameter\n\t\tlocal best = require(\"Module:scripts\").findBestScript(pagename, data.lang)\n\
      \t\trequire(\"Module:debug\").track(\"headword/sc\")\n\t\t\n\t\tif data.sc:getCode() == best:getCode() then\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/redundant\")\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/redundant/\" .. data.sc:getCode())\n\
      \t\telse\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/needed\")\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/needed/\" .. data.sc:getCode())\n\t\tend\n\tend\n\t\n\tlocal displayTitle\n\t-- Assumes that the scripts in \"toBeTagged\" will\
      \ never occur in the Reconstruction namespace.\n\tif namespace == \"\" and data.sc and toBeTagged[data.sc:getCode()] or\n\t\t\tdata.sc:getCode() == \"Jpan\" and (test_script(pagename, \"Hira\") or test_script(pagename, \"Kana\")) then\n\t\tdisplayTitle\
      \ = '&lt;span class=\"' .. data.sc:getCode() .. '\"&gt;' .. pagename .. '&lt;/span&gt;'\n\telseif namespace == \"Reconstruction\" then\n\t\tdisplayTitle, matched = mw.ustring.gsub(\n\t\t\tfullPagename,\n\t\t\t\"^(Reconstruction:[^/]+/)(.+)$\",\n\t\t\t\
      function(before, term)\n\t\t\t\treturn before ..\n\t\t\t\t\trequire(\"Module:script utilities\").tag_text(\n\t\t\t\t\t\tterm,\n\t\t\t\t\t\tdata.lang,\n\t\t\t\t\t\tdata.sc\n\t\t\t\t\t)\n\t\t\tend\n\t\t)\n\t\t\n\t\tif matched == 0 then\n\t\t\tdisplayTitle\
      \ = nil\n\t\tend\n\tend\n\t\n\tif displayTitle then\n\t\tlocal frame = mw.getCurrentFrame()\n\t\tframe:callParserFunction(\n\t\t\t\"DISPLAYTITLE\",\n\t\t\tdisplayTitle\n\t\t)\n\tend\n\t\n\tif data.force_cat_output then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/headword/force\
      \ cat output]]\n\t\t]=]\n\t\trequire(\"Module:debug\").track(\"headword/force cat output\")\n\tend\n\t\n\tif data.getCanonicalName then\n\t\terror('The \"data\" variable supplied to \"full_headword\" should not be a language object.')\n\tend\n\t\t\n\t\
      -- Were any categories specified?\n\tif data.categories and #data.categories &gt; 0 then\n\t\tlocal lang_name = require(\"Module:string\").pattern_escape(data.lang:getCanonicalName())\n\t\tfor _, cat in ipairs(data.categories) do\n\t\t\t-- Does the category\
      \ begin with the language name? If not, tag it with a tracking category.\n\t\t\tif not mw.ustring.find(cat, \"^\" .. lang_name) then\n\t\t\t\tmw.log(cat, data.lang:getCanonicalName())\n\t\t\t\ttable.insert(tracking_categories, \"head tracking/no lang category\"\
      )\n\t\t\t\t\n\t\t\t\t--[=[\n\t\t\t\t[[Special:WhatLinksHere/Template:tracking/head tracking/no lang category]]\n\t\t\t\t]=]\n\t\t\t\trequire(\"Module:debug\").track{\n\t\t\t\t\t\"headword/no lang category\",\n\t\t\t\t\t\"headword/no lang category/lang/\"\
      \ .. data.lang:getCode()\n\t\t\t\t}\n\t\t\tend\n\t\tend\n\t\t\n\t\tif not data.pos_category\n\t\t\tand mw.ustring.find(data.categories[1], \"^\" .. data.lang:getCanonicalName())\n\t\t\t\tthen\n\t\t\tdata.pos_category = mw.ustring.gsub(data.categories[1],\
      \ \"^\" .. data.lang:getCanonicalName() .. \" \", \"\")\n\t\t\ttable.remove(data.categories, 1)\n\t\tend\n\tend\n\t\n\tif not data.pos_category then\n\t\terror(\n\t\t\t'No valid part-of-speech categories were found in the list '\n\t\t\t.. 'of categories\
      \ passed to the function \"full_headword\". '\n\t\t\t.. 'The part-of-speech category should consist of a language\\'s '\n\t\t\t.. 'canonical name plus a part of speech.'\n\t\t\t)\n\tend\n\t\n\t-- Categorise for unusual characters\n\tlocal standard = data.lang:getStandardCharacters()\n\
      \t\n\tif standard then\n\t\tif mw.ustring.len(title.subpageText) ~= 1 and not mw.ustring.match(title.text, \"^Unsupported titles/\") then\n\t\t\tfor character in mw.ustring.gmatch(title.subpageText, \"([^\" .. standard .. \"])\") do\n\t\t\t\tlocal upper\
      \ = mw.ustring.upper(character)\n\t\t\t\tif not mw.ustring.find(upper, \"[\" .. standard .. \"]\") then\n\t\t\t\t\tcharacter = upper\n\t\t\t\tend\n\t\t\t\ttable.insert(\n\t\t\t\t\tdata.categories,\n\t\t\t\t\tdata.lang:getCanonicalName() .. \" terms spelled\
      \ with \" .. character\n\t\t\t\t)\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Categorise for palindromes\n\tif title.nsText ~= \"Reconstruction\"\n\t\tand require('Module:palindromes').is_palindrome(\n\t\t\ttitle.subpageText, data.lang, data.sc\n\t\t\t) then\n\
      \t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" palindromes\")\n\tend\n\t\n\treturn\n\t\tshow_headword_line(data) ..\n\t\trequire(\"Module:utilities\").format_categories(\n\t\t\tdata.categories, data.lang, data.sort_key, nil, data.force_cat_output,\
      \ data.sc\n\t\t\t) ..\n\t\trequire(\"Module:utilities\").format_categories(\n\t\t\ttracking_categories, data.lang, data.sort_key, nil, data.force_cat_output, data.sc\n\t\t\t)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-08-28T19:11:30.948Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Apt-verb+form+of&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=28-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 28 Aug 2015 19:11:30 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Aug-2015
      X-Cache: cp1052 miss (0), cp3014 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2354322809, 1282712673, 3656419933
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"1056186\" pageid=\"1056186\" ns=\"10\" title=\"Template:pt-verb form of\"><revisions><rev user=\"CodeCat\" timestamp=\"2013-05-19T19:05:48Z\" comment=\"\" contentformat=\"text/x-wiki\"\
      \ contentmodel=\"wikitext\" xml:space=\"preserve\">&lt;includeonly&gt;&lt;!--\n--&gt;{{#if:{{{tense|}}}|[[Category:Requests for cleanup (Portuguese verb form)]]}}&lt;!--\n--&gt;{{#if:{{{number|}}}|[[Category:Requests for cleanup (Portuguese verb form)]]}}&lt;!--\n\
      --&gt;{{#if:{{{person|}}}|[[Category:Requests for cleanup (Portuguese verb form)]]}}&lt;!--\n\n--&gt;&lt;span class='use-with-mention'&gt;&lt;!--\n\n--&gt;{{#switch:{{{dialect}}}&lt;!--\n--&gt;|brazil={{qualifier|Brazil}}&lt;!--\n--&gt;|portugal={{qualifier|Portugal}}&lt;!--\n\
      --&gt;}} &lt;!--\n\n--&gt;{{{{#if:{{{nocap|}}}|l|u}}cfirst:&lt;!--\n\n  --&gt;{{#switch:{{{3|}}}&lt;!--\n  --&gt;|indicative=&lt;!--\n    --&gt;{{#switch:{{{4|{{{tense}}}}}}&lt;!--\n    --&gt;|present|imperfect|preterite|pluperfect|future|conditional=&lt;!--\n\
      \      --&gt;{{#switch:{{{5|{{{number}}}}}}&lt;!--\n      --&gt;|singular|plural=&lt;!--\n        --&gt;{{#switch:{{{6|{{{person}}}}}}&lt;!--\n        --&gt;|first|second|third|first-person|second-person|third-person=&lt;!--\n          --&gt;{{pt-verb\
      \ form of/doWork|mood=indicative|tense={{{4|{{{tense}}}}}}|number={{{5|{{{number}}}}}}|person={{#switch:{{{6|{{{person|}}}}}}|first|first-person=first-person|second|second-person=second-person|third|third-person=third-person}}|dialect={{{dialect}}}|suffix={{{2}}}}}&lt;!--\n\
      \        --&gt;|#default=&lt;!--\n          --&gt;{{pt-verb form of/error}}&lt;!--\n        --&gt;}}&lt;!--\n      --&gt;|#default=&lt;!--\n        --&gt;{{pt-verb form of/error}}&lt;!--\n      --&gt;}}&lt;!--\n    --&gt;|#default=&lt;!--\n      --&gt;{{pt-verb\
      \ form of/error}}&lt;!--\n    --&gt;}}&lt;!--\n  \n  --&gt;|subjunctive=&lt;!--\n    --&gt;{{#switch:{{{4|{{{tense}}}}}}&lt;!--\n    --&gt;|present|imperfect|future=&lt;!--\n      --&gt;{{#switch:{{{5|{{{number}}}}}}&lt;!--\n      --&gt;|singular|plural=&lt;!--\n\
      \        --&gt;{{#switch:{{{6|{{{person}}}}}}&lt;!--\n        --&gt;|first|second|third|first-person|second-person|third-person=&lt;!--\n          --&gt;{{pt-verb form of/doWork|mood=subjunctive|tense={{{4|{{{tense}}}}}}|number={{{5|{{{number}}}}}}|person={{#switch:{{{6|{{{person|}}}}}}|first|first-person=first-person|second|second-person=second-person|third|third-person=third-person}}|dialect={{{dialect}}}|suffix={{{2}}}}}&lt;!--\n\
      \        --&gt;|#default=&lt;!--\n          --&gt;{{pt-verb form of/error}}&lt;!--\n        --&gt;}}&lt;!--\n      --&gt;|#default=&lt;!--\n        --&gt;{{pt-verb form of/error}}&lt;!--\n      --&gt;}}&lt;!--\n    --&gt;|#default=&lt;!--\n      --&gt;{{pt-verb\
      \ form of/error}}&lt;!--\n    --&gt;}}&lt;!--\n   \n  --&gt;|imperative=&lt;!--\n    --&gt;{{#switch:{{{5|{{{number}}}}}}&lt;!--\n    --&gt;|singular|plural=&lt;!--\n      --&gt;{{#switch:{{{6|{{{person}}}}}}&lt;!--\n      --&gt;|first|second|third|first-person|second-person|third-person=&lt;!--\n\
      \        --&gt;{{#switch:{{{4|{{{polarity}}}}}}&lt;!--\n        --&gt;|affirmative|negative=&lt;!--\n          --&gt;{{pt-verb form of/doWork|mood=imperative|person={{#switch:{{{6|{{{person|}}}}}}|first|first-person=first-person|second|second-person=second-person|third|third-person=third-person}}|number={{{5|{{{number}}}}}}|polarity={{{4|{{{polarity}}}}}}|dialect={{{dialect}}}|suffix={{{2}}}}}&lt;!--\n\
      \        --&gt;|#default=&lt;!--\n          --&gt;{{pt-verb form of/error}}&lt;!--\n        --&gt;}}&lt;!--\n      --&gt;|#default=&lt;!--\n        --&gt;{{pt-verb form of/error}}&lt;!--\n      --&gt;}}&lt;!--\n    --&gt;|#default=&lt;!--\n      --&gt;{{pt-verb\
      \ form of/error}}&lt;!--\n    --&gt;}}&lt;!--\n  \n  --&gt;|gerund=&lt;!--\n    --&gt;{{pt-verb form of/doWork|mood=gerund|dialect={{{dialect}}}|suffix={{{2}}}}}&lt;!--\n  \n  --&gt;|present participle=&lt;!--\n    --&gt;{{pt-verb form of/doWork|mood=gerund|dialect={{{dialect}}}|suffix={{{2}}}}}&lt;!--\n\
      \  \n  --&gt;|past participle=&lt;!--\n    --&gt;{{#switch:{{{5|{{{number}}}}}}&lt;!--\n    --&gt;|singular|plural=&lt;!--\n      --&gt;{{#switch:{{{4|{{{gender}}}}}}&lt;!--\n      --&gt;|masculine|feminine=&lt;!--\n        --&gt;{{pt-verb form of/doWork|mood=past\
      \ participle|number={{{5|{{{number}}}}}}|gender={{{4|{{{gender}}}}}}|dialect={{{dialect}}}|suffix={{{2}}}}}&lt;!--\n      --&gt;|#default=&lt;!--\n        --&gt;{{pt-verb form of/error}}&lt;!--\n      --&gt;}}&lt;!--\n    --&gt;}}&lt;!--\n  \n  --&gt;|personal\
      \ infinitive=&lt;!--\n    --&gt;{{#switch:{{{5|{{{number}}}}}}&lt;!--\n    --&gt;|singular|plural=&lt;!--\n      --&gt;{{#switch:{{{6|{{{person}}}}}}&lt;!--\n      --&gt;|first|second|third|first-person|second-person|third-person=&lt;!--\n        --&gt;{{pt-verb\
      \ form of/doWork|mood=personal infinitive|number={{{5|{{{number}}}}}}|person={{#switch:{{{6|{{{person|}}}}}}|first|first-person=first-person|second|second-person=second-person|third|third-person=third-person}}|dialect={{{dialect}}}|suffix={{{2}}}}}&lt;!--\n\
      \      --&gt;|#default=&lt;!--\n        --&gt;{{pt-verb form of/error}}&lt;!--\n      --&gt;}}&lt;!--\n    --&gt;}}&lt;!--\n  \n  --&gt;|#default=&lt;!--\n    --&gt;{{pt-verb form of/error}}&lt;!--\n  --&gt;}}&lt;!--\n  \n  --&gt; of &lt;!--\n  --&gt;&lt;span\
      \ class='mention' lang=&quot;pt&quot;&gt;[[{{{1}}}#Portuguese|{{{1}}}]]&lt;/span&gt;&lt;!--\n--&gt;}}&lt;/span&gt;&lt;!--\n\n--&gt;&lt;/includeonly&gt;&lt;!--\n\n--&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>"
- recorded: 2015-08-28T19:11:31.160Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Apt-verb+form+of%2FdoWork&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=28-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 28 Aug 2015 19:11:30 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Aug-2015
      X-Cache: cp1068 miss (0), cp3007 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2812280877, 4089007086, 3656420182
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="1306623" pageid="1306623" ns="10" title="Template:pt-verb form of/doWork"><revisions><rev user="CodeCat" timestamp="2014-07-08T14:43:53Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">&lt;includeonly&gt;&lt;!--

      --&gt;{{#switch:{{{mood}}}&lt;!--
      --&gt;|indicative|subjunctive={{{person}}} {{{number}}} {{pt-verb form of/pronoun|number={{{number}}}|person={{{person}}}}} {{{tense}}} {{{mood}}}&lt;!--
      --&gt;|imperative={{{person}}} {{{number}}} {{pt-verb form of/pronoun|number={{{number}}}|person={{{person}}}|set=imperative}} {{{polarity}}} {{{mood}}}&lt;!--
      --&gt;|gerund={{{mood}}}&lt;!--
      --&gt;|past participle={{{gender}}} {{{number}}} {{{mood}}}&lt;!--
      --&gt;|personal infinitive={{{person}}} {{{number}}} {{pt-verb form of/pronoun|number={{{number}}}|person={{{person}}}}} {{{mood}}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;{{catlangname|pt|verb forms}}&lt;!--

      --&gt;{{#switch:{{{dialect}}}&lt;!--
      --&gt;|brazil={{categorize|pt|Brazilian Portuguese verb forms}}&lt;!--
      --&gt;|portugal={{categorize|pt|European Portuguese verb forms}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;{{#switch:{{{mood}}}&lt;!--
      --&gt;|past participle=&lt;!--
        --&gt;{{#ifeq:{{{gender}}}/{{{number}}}|masculine/singular&lt;!--
        --&gt;|&lt;!--
          --&gt;{{catlangname|pt|{{{mood}}}s}}&lt;!--
        --&gt;|&lt;!--
          --&gt;{{catlangname|pt|{{{mood}}} forms}}&lt;!--
        --&gt;}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;[[Category:Portuguese supplementary templates]]</rev></revisions></page></pages></query></api>
- recorded: 2015-08-28T19:11:31.395Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Apt-verb+form+of%2Fpronoun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=28-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 28 Aug 2015 19:11:30 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Aug-2015
      X-Cache: cp1065 miss (0), cp3010 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 981166813, 4141378168, 3656420309
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="1306603" pageid="1306603" ns="10" title="Template:pt-verb form of/pronoun"><revisions><rev user="Internoob" timestamp="2011-08-24T17:05:11Z" comment="Protected &quot;[[Template:pt-verb form of/pronoun]]&quot;: Highly visible template ([edit=autoconfirmed] (indefinite) [move=autoconfirmed] (indefinite))" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">&lt;includeonly&gt;({{#switch:{{{number}}}
      |singular=
         {{#switch:{{{person}}}
         |first-person={{term|eu|lang=pt}}
         |second-person={{term|tu|lang=pt}}
         |third-person={{#ifeq:{{{set|}}}|imperative|{{term|você|lang=pt}}|{{term|ele|lang=pt}}, {{term|ela|lang=pt}}, also used with {{term|tu|lang=pt}} and {{term|você|lang=pt}}&lt;sup&gt;[[w:Portuguese_personal_pronouns#Tu_vs._voc.C3.AA|?]]&lt;/sup&gt;}}}}
      |plural=
         {{#switch:{{{person}}}
         |first-person={{term|nós|lang=pt}}
         |second-person={{term|vós|lang=pt}}
         |third-person={{#ifeq:{{{set|}}}|imperative|{{term|vocês|lang=pt}}|{{term|eles|lang=pt}}, {{term|elas|lang=pt}}, also used with {{term|vocês|lang=pt}}&lt;sup&gt;[[w:Portuguese_personal_pronouns#Tu_vs._voc.C3.AA|?]]&lt;/sup&gt;}}}}}})&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Portuguese supplementary templates]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:33.737Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Acatlangname&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=92486 t=1555362393597536
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:33 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 674111475, 248885479, 682523305
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="2130756" pageid="2130756" ns="10" title="Template:catlangname"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T17:33:58Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:catlangname]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefi..." xml:space="preserve">{{#invoke:utilities|template_categorize|format=pos}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:32.185Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Apt-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46504 t=1555362392091887
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1222'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1223.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 734428582, 260605778, 690053005
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="1555179" pageid="1555179" ns="10" title="Template:pt-noun"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T19:50:01Z" contentformat="text/x-wiki"
      contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:pt-noun]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow
      only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:pt-noun|show}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:06:32.384Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Apt-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47892 t=1555362392279317
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 493971703, 238278266, 691913420
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4003449\" pageid=\"4003449\" ns=\"828\" title=\"Module:pt-noun\"><revisions><rev user=\"Rua\" timestamp=\"2018-09-09T13:02:36Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">-- FIXME: Needs to be converted to use the standard [[Module:headword]] module\n\nlocal m_headword = require(\"Module:headword\")\nlocal m_gen = {\n\tcodes = {\n\t\t[\"?\"] = {type\
      \ = \"other\", display = '&lt;abbr title=\"gender incomplete\"&gt;?&lt;/abbr&gt;'},\n\t\t[\"m\"] = {type = \"gender\", display = '&lt;abbr title=\"masculine gender\"&gt;m&lt;/abbr&gt;'},\n\t\t[\"f\"] = {type = \"gender\", display = '&lt;abbr title=\"feminine\
      \ gender\"&gt;f&lt;/abbr&gt;'},\n\t\t[\"p\"] = {type = \"number\", display = '&lt;abbr title=\"plural number\"&gt;pl&lt;/abbr&gt;'},\n\t}\n}\n\nfunction m_gen.format_list(list)\n\tlocal s = \"\"\n\tif not list then\n\t\treturn s\n\tend\n\tlist = mw.text.split(list[1],\
      \ \"-\")\n\t\n\tfor n, g in ipairs(list) do\n\t\tif (n &gt; 1) then\n\t\t\ts = s .. \" \"\n\t\tend\n\t\ts = s .. m_gen.codes[g].display\n\t\t\n\tend\n\ts = \"&lt;span class=\\\"gender\\\"&gt;\" .. s .. \"&lt;/span&gt;\"\n\treturn s\nend\nlocal m_plural\
      \ = require(\"Module:pt-plural\")\nlocal lang = require(\"Module:languages\").getByCode(\"pt\")\n\n\nlocal export = {}\nlocal cats = {}\nlocal PAGENAME, NAMESPACE\n\n\n\nfunction export.show(frame)\n    \tlocal params = {\n\t\t[1] = {},\n\t\t[2] = {},\n\
      \t\t\n\t\t[\"f\"] = {},\n\t\t[\"f2\"] = {},\n\t\t[\"fpl\"] = {},\n\t\t[\"fpl2\"] = {},\n\t\t[\"g2\"] = {},\n\t\t[\"head\"] = {},\n\t\t[\"meta\"] = {type = \"boolean\"},\n\t\t[\"pl\"] = {alias_of = 2},\n\t\t[\"pl2\"] = {},\n\t\t[\"pl3\"] = {},\n\t\t[\"\
      qual_f\"] = {},\n\t\t[\"qual_f2\"] = {},\n\t\t[\"qual_g1\"] = {},\n\t\t[\"qual_g2\"] = {},\n\t\t[\"qual_pl\"] = {},\n\t\t[\"qual_pl2\"] = {},\n\t\t[\"qual_pl3\"] = {},\n\t\t[\"unc\"] = {type = \"boolean\"},\n\t}\n\t\n    local args, unrecognized_args =\n\
      \    \trequire(\"Module:parameters\").process(frame:getParent().args, params, true)\n    \n    if next(unrecognized_args) then\n    \trequire(\"Module:debug\").track_unrecognized_args(unrecognized_args, \"pt-noun\")\n    end\n    \n    PAGENAME = mw.title.getCurrentTitle().text\n\
      \    NAMESPACE = mw.title.getCurrentTitle().nsText\n\n    -- for compatibility with old pt-noun\n    if (args[2] == \"s\") then args[2] = PAGENAME .. \"s\"\n    elseif (args[2] == \"es\") then args[2] = PAGENAME .. \"es\" end\n\n    local is_plural = get_is_plural(args[1],\
      \ args[\"g2\"])\n\t\n    local items = {}\n    table.insert(items, get_countability(args, is_plural))\n    table.insert(items, get_lemma_plurals(args, is_plural))\n    table.insert(items, get_feminine(args[\"f\"], args[\"qual_f\"], is_plural))\n    table.insert(items,\
      \ get_feminine_plural(args[\"f\"], args[\"fpl\"], args[\"qual_fpl\"], args[2] == \"-\", is_plural))\n    table.insert(items, get_feminine(args[\"f2\"], args[\"qual_f2\"], is_plural))\n    table.insert(items, get_feminine_plural(args[\"f2\"], args[\"fpl2\"\
      ], args[\"qual_fpl2\"], args[2] == \"-\", is_plural))\n    \n    if args[\"meta\"] then\n    \ttable.insert(cats, \"nouns with metaphonic plurals\")\n    end\n\t\n    return\n        get_headword(args[\"head\"]) ..\n        get_genders(args[1], args[\"\
      g2\"], args[\"qual_g1\"], args[\"qual_g2\"]) ..\n        get_inflection(items) ..\n        get_categories()\nend\n\n\n\n\n\n\n-- Returns the headword. If the pagename contains spaces or hyphens, its\n-- constituents are wikified.\nfunction get_headword(head)\n\
      \    if (head == nil) then\n        head = PAGENAME\n        local has_head_links = false\n\n        if head:find(\" \", nil, false) then\n            head = mw.text.split(head, \" \", true)\n            head = table.concat(head, \"]] [[\")\n         \
      \   has_head_links = true\n        end\n\n        if (head:find(\"-\", nil, false)) then\n            head = mw.text.split(head, \"-\", true)\n            head = table.concat(head, \"]]-[[\")\n            has_head_links = true\n        end\n\n        if\
      \ (has_head_links == true) then\n            head = \"[[\" .. head .. \"]]\"\n        end\n    end\n\treturn m_headword.full_headword({lang = lang, pos_category = \"nouns\", heads = {head}, categories = {}})\nend\n\n\n\n\n-- Returns the text containing\
      \ the gender information.\n-- If no gender is provided, or if the gender is '?', the entry is added to \n--     [[Category:Portuguese nouns lacking gender]] and a request is returned.\n-- If two genders are provided, the entry is added to [[Category:Portuguese\n\
      --     nouns with varying gender]].\n-- If two genders are provided, but there are no qualifier for either, the\n--     string (in variation) is added after the second, per [[WT:T:APT]].\nfunction get_genders(g1, g2, g1q, g2q)\n\n    if (g1 == \"\" or\
      \ g1 == \"?\" or g1 == nil) then\n        table.insert(cats, \"terms with incomplete gender\")\n        return \" \" .. please_add(\"gender\")\n    end\n    \n    if (g1 == \"morf\") then\n        g1 = \"m\"\n        g2 = \"f\"\n    elseif (g1 == \"mf\"\
      ) then\n        g1 = \"m-f\"\n    end\n\n    if (g2 == \"mf\") then\n        g2 = \"m-f\"\n    end\n\t\n\t\n\tlocal text = \" \"\n    if (g1 == \"m-f\") then\n    \ttext = text .. m_gen.format_list({\"m\"}) .. \", \" .. m_gen.format_list({\"f\"})\n   \
      \ else\n    \ttext = text .. m_gen.format_list({g1})\n    end\n    \n    text = text .. qualifier(g1q)\n    if (g2 ~= \"\" and g2 ~= nil) then\n        text = text .. \" or \" .. m_gen.format_list({g2}) .. qualifier(g2q)\n        table.insert(cats, \"\
      nouns with varying gender\")\n        if (g2q == nil and g1q == nil) then\n            text = text .. qualifier(\"in variation\")\n        end\n    end\n\n    return text\nend\n\n\n-- Returns a boolean indicating whether the noun is plural only.\n-- If\
      \ true, it also adds the entry to [[Category:Portuguese pluralia tantum]].\nfunction get_is_plural(g1, g2)\n    g1 = g1 or \"\"\n    g2 = g2 or \"\"\n    if (mw.ustring.find(g1, \"p\") ~= nil or mw.ustring.find(g2, \"p\") ~= nil) then\n        table.insert(cats,\
      \ \"pluralia tantum\")\n        return true\n    end\n    return false\nend\n\n\n-- Returns text indicating a special status with regards to countability. These\n-- are plural only, uncountable and usually uncountable.\nfunction get_countability(args,\
      \ is_plural)\n    if (is_plural == true) then return \"''plural only''\" end\n    if (args[2] == \"-\")  then return \"''uncountable''\" end\n    if (args[\"unc\"] ~= nil)  then return \"''usually uncountable''\" end\n    return nil\nend\n\n\n-- Returns\
      \ the text with the description, link and qualifier of a plural \n-- (i.e. \"feminine plural of [[example]] (qualifier)\"). If the plural is not\n-- present as a parameter, [[Module:pt-plural]] is used to automatically figure\n-- it out from the lemma.\
      \ If that is impossible, a request is returned and the\n-- entry is added to [[Category:Portuguese nouns needing inflection]].\nfunction get_primary_plural(lemma, pl, description, class, qualifier)\n\tlocal category = \"\"\n\tlocal generated_plural = m_plural.get_plural(lemma)\n\
      \t\n\tif (pl == \"\" or pl == nil) then\n\t\tpl = generated_plural\n\telseif pl ~= generated_plural then\n\t\tcategory = require(\"Module:utilities\").format_categories({lang:getCanonicalName() .. \" irregular nouns\"})\n\tend\n\t\n\tif (pl == \"\" or\
      \ pl == nil) then\n\t\ttable.insert(cats, \"nouns needing inflection\")\n\t\treturn please_add(description)\n\tend\n\t\n\treturn merge(description, class, pl, qualifier) .. category\nend\n\n\n-- Returns the text with the desciption (always \"or\"), link\
      \ and qualifier of an\n-- alternative plural. If none is provided, nil is returned.\nfunction get_secondary_plural(pl, class, qualifier)\n    if (pl ~= nil and pl ~= \"\") then\n        return merge(\" or\", class, pl, qualifier)\n    end\n    return \"\
      \"\nend\n\n-- Puts together the text of the lemma's primary and two secondary plurals.\nfunction get_lemma_plurals(args, is_plural)\n    if (is_plural == true) then\n        return nil\n    end\n    \n    local class = {form = \"p\"}\n    local pl = args[2];\n\
      \   \n    if (pl == nil or pl == \"\") then\n        pl = args[\"pl\"]\n    end\n\n    if (pl == \"?\") then\n        table.insert(cats, \"nouns needing inflection\")\n        return please_add(\"plural\")\n    elseif (pl ~= \"-\") then\n        local\
      \ text = get_primary_plural(PAGENAME, pl, \"plural\", class, args[\"qual_pl\"])\n        text = text .. get_secondary_plural(args[\"pl2\"], class, args[\"qual_pl2\"])\n        text = text .. get_secondary_plural(args[\"pl3\"], class, args[\"qual_pl3\"\
      ])\n        return text\n    end\n    return nil\nend\n\n\nfunction get_feminine(f, qualifier, is_plural)\n    if (f == \"\" or f == nil) then\n        return nil\n    end\n    \n    return merge(\"feminine\", {form = \"f\"}, f, qualifier)\nend\n\n\nfunction\
      \ get_feminine_plural(f, fpl, qualifier, is_unc, is_plural)\n    if (is_plural == true or is_unc == true or f == nil or f == \"\") then\n        return nil\n    end\n    return get_primary_plural(f, fpl, \"feminine plural\", {form = \"f|p\"}, qualifier)\n\
      end\n\n\n-- Returns the parenthetical part of the headword line (plurals and feminines).\nfunction get_inflection(items)\n    if (table.getn(items) == 0) then return \"\" end\n    local text = \" (\"\n    for c = 1, table.getn(items) do\n        if (c\
      \ &gt; 1) then text = text .. \", \" end\n        text = text .. items[c]\n    end\n    return text .. \")\"\nend\n\n\n-- Returns the text containing the categories that the entry will be added to.\nfunction get_categories()\n    if (NAMESPACE ~= \"\"\
      ) then\n        return \"\"\n    end\n    local text = \"\"\n    for c = 1, table.getn(cats) do\n        text = text .. \"[[Category:Portuguese \" .. cats[c] .. \"]]\"\n    end\n    return text;\nend\n\n\n\n\n\n\n\n-- Nerges the form description (e.g.\
      \ “plural”, “feminine”), word, its class\n-- (e.g. “plural-form-of gender-mpl”) and qualifier if any.\n-- FIXME: Needs better parameter names.\nfunction merge(f, c, w, q)\n    if (w == nil or w == \"\") then return \"\" end\n    text = \"\"\n    text =\
      \ text .. \"''\" .. f .. \"'' \"\n    text = text .. make_link(w, c)\n    if (q ~= nil and q ~= \"\") then text = text .. qualifier(q) end\n    return text\nend\n\n\n\n\n-- Returns a piece of text boldened and wikified (unless it is the same as the\n--\
      \ pagename).\nfunction make_link(text, accel)\n\treturn require(\"Module:links\").full_link({lang = lang, accel = accel, term = text}, \"bold\")\nend\n\n\n-- Returns a text with a request for lacking information.\nfunction please_add(text)\n    --table.insert(cats,\
      \ \"terms needing attention\")\n    return \"&lt;sup&gt;&lt;small&gt;&lt;span style='color:#AAAAAA;'&gt;please add \" .. text .. \"&lt;/span&gt;&lt;/small&gt;&lt;/sup&gt;\"\nend\n\nfunction qualifier(text)\n    if (text == nil or text == \"\") then return\
      \ \"\" end\n    return '&amp;nbsp;&lt;span class=\"ib-brac\"&gt;&lt;span class=\"qualifier-brac\"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class=\"ib-content\"&gt;&lt;span class=\"qualifier-content\"&gt;' .. text ..\n'&lt;/span&gt;&lt;/span&gt;&lt;span class=\"\
      ib-brac\"&gt;&lt;span class=\"qualifier-brac\"&gt;)&lt;/span&gt;&lt;/span&gt;'\nend\n\n\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:24.581Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Agender+and+number&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52469 t=1555362384477024
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:24 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1230.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 595902194, 555339805, 688446011
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3906346\" pageid=\"3906346\" ns=\"828\" title=\"Module:gender and number\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-06T20:41:16Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Separate the genders with &quot;or&quot;, which is clearer than a comma\" xml:space=\"preserve\">--[=[\n\tThis module creates standardised displays for gender and number.\n\tIt converts\
      \ a gender specification into Wiki/HTML format.\n\t\n\tA gender specification is a list of one of the elements listed below,\n\tseparated by hyphens. Examples are: \"c\", \"n\", \"f-p\", \"m-an-p\"\n]=]--\n\nlocal export = {}\n\nlocal codes = {}\n\n--\
      \ A list of all possible \"parts\" that a specification can be made out of.\n\ncodes[\"?\"] = {type = \"other\", display = '&lt;abbr title=\"gender incomplete\"&gt;?&lt;/abbr&gt;'}\n\n-- Genders\ncodes[\"m\"] = {type = \"gender\", display = '&lt;abbr title=\"\
      masculine gender\"&gt;m&lt;/abbr&gt;'}\ncodes[\"f\"] = {type = \"gender\", display = '&lt;abbr title=\"feminine gender\"&gt;f&lt;/abbr&gt;'}\ncodes[\"n\"] = {type = \"gender\", display = '&lt;abbr title=\"neuter gender\"&gt;n&lt;/abbr&gt;'}\ncodes[\"c\"\
      ] = {type = \"gender\", display = '&lt;abbr title=\"common gender\"&gt;c&lt;/abbr&gt;'}\n\n-- Animacy\ncodes[\"an\"] = {type = \"animacy\", display = '&lt;abbr title=\"animate\"&gt;anim&lt;/abbr&gt;'}\ncodes[\"in\"] = {type = \"animacy\", display = '&lt;abbr\
      \ title=\"inanimate\"&gt;inan&lt;/abbr&gt;'}\n\n-- Personal\ncodes[\"pr\"] = {type = \"personal\", display = '&lt;abbr title=\"personal\"&gt;pers&lt;/abbr&gt;'}\ncodes[\"np\"] = {type = \"personal\", display = '&lt;abbr title=\"non-personal\"&gt;npers&lt;/abbr&gt;'}\n\
      \n-- Numbers\ncodes[\"s\"] = {type = \"number\", display = '&lt;abbr title=\"singular number\"&gt;sg&lt;/abbr&gt;'}\ncodes[\"d\"] = {type = \"number\", display = '&lt;abbr title=\"dual number\"&gt;du&lt;/abbr&gt;'}\ncodes[\"p\"] = {type = \"number\", display\
      \ = '&lt;abbr title=\"plural number\"&gt;pl&lt;/abbr&gt;'}\n\n-- Verb qualifiers\ncodes[\"impf\"] = {type = \"perfectivity\", display = '&lt;abbr title=\"imperfective aspect\"&gt;impf&lt;/abbr&gt;'}\ncodes[\"pf\"] = {type = \"perfectivity\", display =\
      \ '&lt;abbr title=\"perfective aspect\"&gt;pf&lt;/abbr&gt;'}\n\n-- Version of format_list that can be invoked from a template.\nfunction export.show_list(frame)\n\tlocal args = frame.args\n\tlocal lang = args[\"lang\"]; if lang == \"\" then lang = nil\
      \ end\n\tlocal list = {}\n\tlocal i = 1\n\t\n\twhile args[i] and args[i] ~= \"\" do\n\t\ttable.insert(list, args[i])\n\t\ti = i + 1\n\tend\n\t\n\treturn export.format_list(list, lang)\nend\n\n-- Format one or more gender specifications, in the form of\
      \ a table of specifications.\nfunction export.format_list(list, lang)\n\tlocal is_nounclass = nil\n\t\n\t-- Iterate over each specification and format it\n\tfor key, spec in ipairs(list) do\n\t\tlocal nc\n\t\tlist[key], nc = export.format_specification(spec,\
      \ lang)\n\t\t\n\t\t-- Ensure that the specifications are either all noun classes, or none are.\n\t\tif is_nounclass == nil then\n\t\t\tis_nounclass = nc\n\t\telseif is_nounclass ~= nc then\n\t\t\terror(\"Noun classes and genders cannot be mixed. Please\
      \ use either one or the other.\")\n\t\tend\n\tend\n\t\n\tif is_nounclass then\n\t\t-- Add the processed codes together with slashes\n\t\treturn \"&lt;span class=\\\"gender\\\"&gt;class \" .. table.concat(list, \"/\") .. \"&lt;/span&gt;\"\n\telse\n\t\t\
      -- Add the processed codes together with commas\n\t\treturn \"&lt;span class=\\\"gender\\\"&gt;\" .. table.concat(list, \" or \") .. \"&lt;/span&gt;\"\n\tend\nend\n\n-- Format the sub-parts of a single gender specification.\nfunction export.format_specification(spec,\
      \ lang)\n\tlocal categories = \"\"\n\tlocal ret = \"\"\n\tlocal is_nounclass = false\n\t\n\t-- If the specification starts with cX, then it is a noun class specification.\n\tif spec:find(\"^[1-9]\") or spec:find(\"^c[^-]\") then\n\t\tis_nounclass = true\n\
      \t\tcode = spec:gsub(\"^c\", \"\")\n\t\t\n\t\tif code == \"?\" then\n\t\t\tret = \"&lt;abbr class=\\\"noun-class\\\" title=\\\"noun class missing\\\"&gt;?&lt;/abbr&gt;\"\n\t\telse\n\t\t\tret = \"&lt;abbr class=\\\"noun-class\\\" title=\\\"noun class \"\
      \ .. code .. \"\\\"&gt;\" .. code .. \"&lt;/abbr&gt;\"\n\t\tend\n\telse\n\t\tlocal types = {}\n\t\t\n\t\t-- Split the parts and iterate over each part, converting it into its display form\n\t\tlocal parts = mw.text.split(spec, \"-\")\n\t\t\n\t\tfor key,\
      \ code in ipairs(parts) do\n\t\t\t-- Is this code valid?\n\t\t\tif not codes[code] then\n\t\t\t\terror(\"The gender specification \\\"\" .. spec .. \"\\\" is not valid.\")\n\t\t\tend\n\t\t\t\n\t\t\tif codes[code].type ~= \"other\" and types[codes[code].type]\
      \ then\n\t\t\t\t--require(\"Module:debug\").track(\"gender and number/multiple\")\n\t\t\t\t--require(\"Module:debug\").track(\"gender and number/multiple/\" .. spec)\n\t\t\t\terror(\"The gender specification \\\"\" .. spec .. \"\\\" contains multiple tags\
      \ of type \\\"\" .. codes[code].type .. \"\\\".\")\n\t\t\tend\n\t\t\t\t\n\t\t\tparts[key] = codes[code].display\n\t\t\ttypes[codes[code].type] = true\n\t\tend\n\t\t\n\t\t-- Add the processed codes together with non-breaking spaces\n\t\tret = table.concat(parts,\
      \ \"&amp;nbsp;\")\n\tend\n\t\n\t-- Do some additional checks if a language was given\n\tif lang then\n\t\t-- Is this an incomplete gender?\n\t\tif spec:find(\"?\") then\n\t\t\tlocal m_utilities = require(\"Module:utilities\")\n\t\t\tcategories = m_utilities.format_categories({lang:getCanonicalName()\
      \ .. \" terms with incomplete gender\"}, nil)\n\t\tend\n\t\t\n\t\t-- Check if the specification is valid\n\t\t--elseif langinfo.genders then\n\t\t--\tlocal valid_genders = {}\n\t\t--\tfor _, g in ipairs(langinfo.genders) do valid_genders[g] = true end\n\
      \t\t--\t\n\t\t--\tif not valid_genders[spec] then\n\t\t--\t\tlocal valid_string = {}\n\t\t--\t\tfor i, g in ipairs(langinfo.genders) do valid_string[i] = g end\n\t\t--\t\terror(\"The gender specification \\\"\" .. spec .. \"\\\" is not valid for \" ..\
      \ langinfo.names[1] .. \". Valid are: \" .. table.concat(valid_string, \", \"))\n\t\t--\tend\n\t\t--end\n\tend\n\t\n\treturn ret .. categories, is_nounclass\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:32.566Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Apt-plural&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51921 t=1555362392464983
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1282.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 573693737, 625180586, 679540458
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4002729\" pageid=\"4002729\" ns=\"828\" title=\"Module:pt-plural\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-01-29T23:45:40Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"declare functions as local so they don&#039;t bleed into other modules\" xml:space=\"preserve\">-- Gets the plural of Portuguese nouns and adjectives.\n \nlocal accented_letters = {'á\
      ', 'é', 'í', 'ó', 'ú', 'â', 'ê', 'ô'}\nlocal remove_accent = {['á']='a', ['é']='e', ['í']='i', ['ó']='o', ['ú']='u', ['â']='a', ['ê']='e', ['ô']='o'}\nlocal vowels = {'a', 'e', 'i', 'o', 'u', 'ã', 'á', 'é', 'í', 'ó', 'ê', 'ô', 'ú'}\nlocal export = {}\n\
      \n-- forward declaration\nlocal prefix, suffix, is_accented, is_vowel, has_space_or_hyphen, word_has_letter\n \nfunction export.show(frame)\n    local args = frame:getParent().args\n    return export.get_plural(args[1])\nend\n\n-- Returns a singular’s\
      \ plural if it can be safely guessed, and an empty string\n-- otherwise.\nfunction export.get_plural(lemma)\n\t\n\tif (has_space_or_hyphen(lemma)) then return nil end\n\t\t\n\tlocal suf3 = suffix(lemma, 3);\n\tlocal pre3 = prefix(lemma, 3);\n\tlocal suf2\
      \ = suffix(lemma, 2);\n\tlocal pre2 = prefix(lemma, 2);\n\t\n\tif (suf3 == \"ção\" or suf3 == \"são\") then\n\t\treturn pre2 .. \"ões\"\n\tend\n\t\n\tif (suf3 == \"çaõ\") then\n\t\treturn pre3 .. \"çoens\"\n\tend\n\n\t\n\tif (suf2 == \"ão\") then return\
      \ nil end\n\t\n\tif (suf2 == \"il\") then\n\t\tif (is_accented(pre2)) then\n\t\t\treturn pre2 .. \"eis\"\n\t\telse \n\t\t\treturn pre2 .. \"is\"\n\t\tend\n\tend\n\t\n\tif (suf2 == \"el\") then \n\t\tif (is_accented(pre2)) then \n\t\t\treturn pre2 .. \"\
      eis\"\n\t\telse\n\t\t\treturn pre2 .. \"éis\"\n\t\tend\n\tend\n\t\n\tif (suf2 == \"ol\") then \n\t\tif (is_accented(pre2)) then \n\t\t\treturn pre2 .. \"ois\"\n\t\telse\n\t\t\treturn pre2 .. \"óis\"\n\t\tend\n\tend\n\n\tlocal suf1 = suffix(lemma, 1);\n\
      \tlocal pre1 = prefix(lemma, 1);\n\t\n\tif (suf1 == \"l\") then return pre1 .. \"is\" end\n\t\n\tif (suf1 == \"m\") then return pre1 .. \"ns\" end\n\t\n\tif (suf1 == \"r\" or suf1 == \"z\") then return lemma .. \"es\" end\n\t\n\tif (is_vowel(suf1)) then\
      \ return lemma .. \"s\" end\n\t\n\tif (suf1 == \"s\") then \n\t\tlocal penult = mw.ustring.sub(suf2, 1, 1)\n\t\tif (is_accented(penult)) then\n\t\t\treturn pre2 .. remove_accent[penult] .. \"ses\"\n\t\telse\n\t\t\tlocal antepenult = mw.ustring.sub(suf3,\
      \ 1, 1)\n\t\t\tif ((penult == \"u\" or penult == \"i\") and not is_accented(pre1) and not is_vowel(antepenult)) then\n\t\t\t\treturn lemma .. \"es\"\n\t\t\telse\n\t\t\t\treturn lemma\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn nil\n\t\nend\n\n\nfunction suffix(word,\
      \ length)\n\treturn mw.ustring.sub(word, mw.ustring.len(word) - length + 1)\nend\n\n\nfunction prefix(word, suf_length)\n\treturn mw.ustring.sub(word, 1, mw.ustring.len(word) - suf_length)\nend\n\n-- returns whether it has ´ or ^\nfunction is_accented(word)\n\
      \treturn word_has_letter(word, accented_letters)\nend\n\nfunction is_vowel(letter)\n\treturn word_has_letter(letter, vowels)\nend\n\nfunction has_space_or_hyphen(word)\n\treturn mw.ustring.find(word, \" \") or mw.ustring.find(word, \"-\")\nend\n\nfunction\
      \ word_has_letter(word, array)\n\tfor c = 1, table.getn(array) do\n\t\tif (mw.ustring.find(word, array[c])) then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\n \nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:32.775Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ataxlink&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47529 t=1555362392680639
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '2832'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1282.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 204909264, 245841573, 701729902
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="2101864" pageid="2101864" ns="10" title="Template:taxlink"><revisions><rev user="DCDuring" timestamp="2018-08-13T20:48:08Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">&lt;span class="biota"&gt;&lt;!--
      --&gt;&lt;includeonly&gt;&lt;!--
      --&gt;{{#if:{{{entry|}}}|[[{{{1}}}#Translingual|{{#switch:{{{2|}}}|nothogenus|subgenus|genus|subsection|section|subsect.|sect.|nothospecies|infraspecies|subspecies|species|variety|forma|form={{#invoke:italics|i|{{{3|{{{1}}}}}}}}|{{{3|{{{1}}}}}}}}]]&lt;!--
      --&gt;|&lt;!--
      --&gt;{{#ifexpr:{{#ifexist:{{{1}}}|1|0}} and {{#if:{{{nomul|}}}|0|1}}&lt;!--
      --&gt;|&lt;!--
        --&gt;[[Category:Entries with redundant template: taxlink]]&lt;!--
        --&gt;[[{{{1}}}#Translingual|{{#switch:{{{2|}}}|nothogenus|subgenus|genus|subsection|section|subsect.|sect.|nothospecies|infraspecies|subspecies|species|variety|forma|form|species group={{#invoke:italics|i|{{{3|{{{1}}}}}}}}|{{{3|{{{1}}}}}}}}]]&lt;sup class="error previewonly"&gt;&lt;small&gt;(Please check if this is already defined at target. Replace {{temp|taxlink}} with a regular link if already defined. Add nomul=1 if not defined.)&lt;/small&gt;&lt;/sup&gt;&lt;!--
      --&gt;|&lt;!--
        --&gt;{{#ifeq:{{{2}}}|epithet&lt;!--
        --&gt;|&lt;!--
          --&gt;[[{{{1}}}#Translingual|{{#switch:{{{2|}}}|nothogenus|subgenus|genus|subsection|section|subsect.|sect.|nothospecies|infraspecies|subspecies|species|variety|forma|form|species group={{#invoke:italics|i|{{{3|{{{1}}}}}}}}|{{{3|{{{1}}}}}}}}]]&lt;!--
        --&gt;|&lt;!--|section
          --&gt;[[Wikispecies:{{{1}}}|{{#switch:{{{2|}}}|nothogenus|subgenus|genus|subsection|section|subsect.|sect.|nothospecies|infraspecies|subspecies|species|variety|forma|form|species group={{#invoke:italics|i|{{{3|{{{1}}}}}}}}|{{{3|{{{1}}}}}}}}]]&lt;!--
        --&gt;}}&lt;!--
        --&gt;{{#if:{{{nocat|}}}||[[Category:Entries using missing taxonomic name ({{{2|unknown}}})|{{{1}}}]]}}&lt;!--
      --&gt;}}&lt;!--
      --&gt;}}&lt;!-- These closing double braces correspond to the opening double braces just before the “entry” parameter above.
      --&gt;&lt;/includeonly&gt;&lt;!--
      --&gt;&lt;/span&gt;&lt;!--
      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:33.143Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Agloss&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=72983 t=1555362393024009
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:33 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1280.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 671560122, 548761786, 676789228
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="543941" pageid="543941" ns="10" title="Template:gloss"><revisions><rev user="JohnC5" timestamp="2017-04-27T02:29:46Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">&lt;includeonly&gt;{{#invoke:qualifier|gloss_t}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:33.916Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aetyl&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46881 t=1555362393821349
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:33 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1223.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 597932232, 628709551, 697934930
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="907689" pageid="907689" ns="10" title="Template:etyl"><revisions><rev user="Mahagaja" timestamp="2019-04-14T15:52:53Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="lmo is done" xml:space="preserve">&lt;span class="etylcleanup"&gt;{{#invoke:etymology/templates|etyl}}&lt;/span&gt;&lt;!--

      --&gt;&lt;includeonly&gt;&lt;!--
      --&gt;{{#switch:{{{2|}}}&lt;!--
      --&gt;|=[[Category:Language code missing/etyl]]&lt;!--

      --&gt;|-=[[Category:etyl cleanup no target{{#if:{{#invoke:languages/templates|exists|{{{1}}}}}|/language|{{#if:{{#invoke:etymology languages/templates|exists|{{{1}}}}}|/etymlang|{{#if:{{#invoke:families/templates|exists|{{{1}}}}}|/family}}}}}}]]&lt;!--

      For languages that have already been cleaned up, with no entries left in their "etyl cleanup/langcode" subcategory:
      --&gt;|ae|af|akk|alg-pro|ar|bdq|be|bg|bi|bn|bpl|br|ccg|cel-bry-pro|cel-gau|cel-pro|cmn|cnx|cy|da|dsb|dum|ff|fiu-fin-pro|fi|fo|fy|ga|gag|gd|gmh|gml|gmw-cfr|gmy|goh|got|grc|gv|hit|hrx|ia|idb|ii|ine-pro|jdt|km|kw|la|lld|lmo|mga|mul|my|nan|nap|nb|nds|nds-de|nds-nl|nl|nn|no|non|nv|obt|oc|oco|odt|ofs|osc|osp|osx|owl|pal|pdc|peo|pih|pis|poz-mcm-pro|poz-mly-pro|poz-msa-pro|poz-pro|poz-ssw-pro|poz-sus-pro|pro|rgn|roa-tar|ru|ruq|sa|sat|sc|sco|se|sem-pro|sga|sia|sjd|sje|sjk|sjt|sju|sma|smi-pro|smn|sms|sv|syl|txb|uga|urj-pro|vi|wlm|wym|xbm|xce|xpr|xsy|xto|xum|xvn|yer|yol|zh={{#invoke:debug|error|This template is deprecated. Please use {{[[Template:der|der]]}}, {{[[Template:inh|inh]]}}, {{[[Template:bor|bor]]}}, {{[[Template:cog|cog]]}} or {{[[Template:noncog|noncog]]}}.}}&lt;!--

      To track instances with a particular language code in the second parameter:
      --&gt;|ang|ast|ca|ceb|cs|cu|de|dlm|el|en|enm|eo|es|et|fa|fr|frm|fro|frr|fur|gem-pro|gl|he|hi|hil|ht|hu|hy|id|io|is|it|ja|ka|ko|la|lad|lb|lt|lv|ms|mt|nrf|oge|pi|pl|pt|rm|ro|rup|sh|sk|sl|sla-pro|sq|stq|te|tl|tpi|tr|ur|xcl|yi=[[Category:etyl cleanup/{{{2}}}]]&lt;!--

      --&gt;|#default=[[Category:etyl cleanup]]&lt;!--
      --&gt;}}&lt;!--
      --&gt;&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2015-08-28T19:11:33.953Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology+language%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=28-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 28 Aug 2015 19:11:33 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Aug-2015
      X-Cache: cp1067 miss (0), cp3008 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2751547853, 3216138885, 3656422352
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4432036\" pageid=\"4432036\" ns=\"828\" title=\"Module:etymology language/templates\"><revisions><rev user=\"CodeCat\" timestamp=\"2015-05-19T12:29:49Z\" comment=\"\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nfunction export.exists(frame)\n\tlocal args = frame.args\n\tlocal etymlang = args[1] or error(&quot;Etymology language code has not been specified. Please pass parameter\
      \ 1 to the module invocation.&quot;)\n\t\n\tetymlang = require(&quot;Module:etymology language&quot;).getByCode(etymlang)\n\t\n\tif etymlang then\n\t\treturn &quot;1&quot;\n\telse\n\t\treturn &quot;&quot;\n\tend\nend\n\nfunction export.getByCode(frame)\n\
      \tlocal args = frame.args\n\tlocal etymlang = args[1] or error(&quot;Etymology language code (parameter 1) has not been specified.&quot;)\n\tlocal itemname = args[2] or error(&quot;Function to call (parameter 2) has not been specified.&quot;)\n\t\n\tetymlang\
      \ = require(&quot;Module:etymology language&quot;).getByCode(etymlang) or error(&quot;The etymology language code '&quot; .. etymlang .. &quot;' is not valid.&quot;)\n\t\n\t-- The item that the caller wanted to look up\n\tif itemname == &quot;getCanonicalName&quot;\
      \ then\n\t\treturn etymlang:getCanonicalName()\n\telseif itemname == &quot;getAllNames&quot; then\n\t\tlocal index = args[3]; if index == &quot;&quot; then index = nil end\n\t\tindex = tonumber(index or error(&quot;Numeric index of the desired item in\
      \ the list (parameter 3) has not been specified.&quot;))\n\t\treturn etymlang:getAllNames()[index] or &quot;&quot;\n\telseif itemname == &quot;getParentCode&quot; then\n\t\treturn etymlang:getParentCode()\n\telseif itemname == &quot;getWikipediaArticle&quot;\
      \ then\n\t\treturn etymlang:getWikipediaArticle()\n\telse\n\t\terror(&quot;Requested invalid item name \\&quot;&quot; .. itemname .. &quot;\\&quot;.&quot;)\n\tend\nend\n\nfunction export.etyl(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default\
      \ = &quot;und&quot;},\n\t\t[2] = {},\n\t\t[&quot;sort&quot;] = {},\n\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal source = args[1]\n\tlocal lang = args[2]\n\tlocal sort_key = args[&quot;sort&quot;]\n\
      \t\n\t-- Empty language means English, but &quot;-&quot; means no language. Yes, confusing...\n\tif not lang then\n\t\tlang = &quot;en&quot;\n\telseif lang == &quot;-&quot; then\n\t\tlang = nil\n\tend\n\t\n\tif lang then\n\t\tlang = require(&quot;Module:languages&quot;).getByCode(lang)\
      \ or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tend\n\t\n\treturn require(&quot;Module:etymology language&quot;).format(source, lang, sort_key)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-08-28T19:11:34.571Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology+language&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=28-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 28 Aug 2015 19:11:33 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Aug-2015
      X-Cache: cp1054 miss (0), cp3005 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2161150536, 3659423961, 3656422587
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4111466\" pageid=\"4111466\" ns=\"828\" title=\"Module:etymology language\"><revisions><rev user=\"Wikitiki89\" timestamp=\"2015-08-20T17:42:56Z\" comment=\"\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nlocal EtymologyLanguage = {}\n\n\nfunction EtymologyLanguage:getCode()\n\treturn self._code\nend\n\n\nfunction EtymologyLanguage:getCanonicalName()\n\treturn self._rawData.canonicalName\n\
      end\n\n\nfunction EtymologyLanguage:getOtherNames()\n\treturn self._rawData.otherNames or {}\nend\n\n\n--function EtymologyLanguage:getAllNames()\n--\treturn self._rawData.names\n--end\n\n\nfunction EtymologyLanguage:getCategoryName()\n\treturn self:getCanonicalName()\n\
      end\n\n\nfunction EtymologyLanguage:getType()\n\treturn &quot;etymology language&quot;\nend\n\n\nfunction EtymologyLanguage:getParentCode()\n\treturn self._rawData.parent\nend\n\n\nfunction EtymologyLanguage:getWikipediaArticle()\n\treturn self._rawData.wikipedia_article\
      \ or self._rawData.canonicalName\nend\n\n\nfunction EtymologyLanguage:toJSON()\n\tlocal ret = {\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\totherNames = self:getOtherNames(),\n\t\
      \tparent = self._rawData.parent,\n\t\ttype = self:getType(),\n\t\t}\n\t\n\treturn require(&quot;Module:JSON&quot;).toJSON(ret)\nend\n\n\nfunction EtymologyLanguage:getRawData()\n\treturn self._rawData\nend\n\n\nEtymologyLanguage.__index = EtymologyLanguage\n\
      \n\nfunction export.makeObject(code, data)\n\treturn data and setmetatable({ _rawData = data, _code = code }, EtymologyLanguage) or nil\nend\n\n\nfunction export.getByCode(code)\n\treturn export.makeObject(code, mw.loadData(&quot;Module:etymology language/data&quot;)[code])\n\
      end\n\n\nfunction export.format(source, lang, sort_key)\n\tlocal info = get_info(source)\n\t\n\t-- Add the categories, but only if there is a current language\n\tlocal categories = &quot;&quot;\n\t\n\tif lang then\n\t\tlocal m_utilities = require(&quot;Module:utilities&quot;)\n\
      \t\t\n\t\tcategories = {}\n\t\t\n\t\tif lang:getCode() == source then\n\t\t\tcategories = m_utilities.format_categories({lang:getCanonicalName() .. &quot; twice-borrowed terms&quot;}, lang, sort_key)\n\t\telse\n\t\t\tcategories = m_utilities.format_categories({lang:getCanonicalName()\
      \ .. &quot; terms derived from &quot; .. info.cat_name}, lang, sort_key)\n\t\tend\n\tend\n\t\n\treturn &quot;&lt;span class=\\&quot;etyl\\&quot;&gt;&quot; .. info.display .. categories .. &quot;&lt;/span&gt;&quot;\nend\n\n\nfunction get_info(source)\n\t\
      -- What type of code is the source?\n\tif source == &quot;und&quot; then\n\t\treturn {\n\t\t\tdisplay = &quot;undetermined&quot;,\n\t\t\tcat_name = &quot;other languages&quot;}\n\tend\n\t\n\t-- Is it a normal language code?\n\tlocal source_info = require(&quot;Module:languages&quot;).getByCode(source)\n\
      \t\n\tif source_info then\n\t\treturn {\n\t\t\tdisplay = &quot;[[w:&quot; .. source_info:getWikipediaArticle() .. &quot;|&quot; .. source_info:getCanonicalName() .. &quot;]]&quot;,\n\t\t\tcat_name = source_info:getCanonicalName()}\n\tend\n\t\n\t-- Is it\
      \ a family code?\n\tsource_info = require(&quot;Module:families&quot;).getByCode(source)\n\t\n\tif source_info then\n\t\treturn {\n\t\t\tdisplay = &quot;[[w:&quot; .. source_info:getCategoryName() .. &quot;|&quot; .. source_info:getCanonicalName() .. &quot;]]&quot;,\n\
      \t\t\tcat_name = source_info:getCategoryName()}\n\tend\n\t\n\t-- Is it an etymology-only code?\n\tsource_info = export.getByCode(source)\n\t\n\tif source_info then\n\t\treturn {\n\t\t\tdisplay = &quot;[[w:&quot; .. source_info:getWikipediaArticle() ..\
      \ &quot;|&quot; .. source_info:getCanonicalName() .. &quot;]]&quot;,\n\t\t\tcat_name = source_info:getCanonicalName()}\n\tend\n\t\n\t-- Code doesn't exist; show an error\n\terror(&quot;The source language/family code \\&quot;&quot; .. source .. &quot;\\\
      &quot; is not valid.&quot;)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:34.372Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdatax&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51589 t=1555362394192366
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:34 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1312.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 189853969, 821155756, 692274139
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5663709\" pageid=\"5663709\" ns=\"828\" title=\"Module:languages/datax\"><revisions><rev user=\"-sche\" timestamp=\"2019-04-14T18:37:40Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add Proto-Zapotecan omq-zap-pro and Proto-Zapotec omq-zpc-pro per GP request\" xml:space=\"preserve\">local u = mw.ustring.char\n\n-- UTF-8 encoded strings for some commonly-used diacritics\n\
      local GRAVE\t\t= u(0x0300)\nlocal ACUTE\t\t= u(0x0301)\nlocal CIRC\t\t= u(0x0302)\nlocal TILDE\t\t= u(0x0303)\nlocal MACRON\t= u(0x0304)\nlocal BREVE\t\t= u(0x0306)\nlocal DOTABOVE\t= u(0x0307)\nlocal DIAER\t\t= u(0x0308)\nlocal CARON\t\t= u(0x030C)\n\
      local DGRAVE\t= u(0x030F)\nlocal INVBREVE\t= u(0x0311)\nlocal DOTBELOW\t= u(0x0323)\nlocal RINGBELOW\t= u(0x0325)\nlocal CEDILLA\t= u(0x0327)\n\nlocal Latn = {\"Latn\"}\n\nlocal m = {}\n\nm[\"aav-pro\"] = { --The mkh-pro will merge into this.\n\t\"Proto-Austroasiatic\"\
      ,\n\tnil,\n\t\"aav\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"afa-pro\"] = {\n\t\"Proto-Afro-Asiatic\",\n\t\"Q269125\",\n\t\"afa\",\n\totherNames = {\"Hamito-Semitic\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\
      }\n\nm[\"alg-aga\"] = {\n\t\"Agawam\",\n\tnil,\n\t\"alg\",\n\totherNames = {\"Agwam\", \"Agaam\"},\n\tscripts = Latn,\n}\n\nm[\"alg-pro\"] = {\n\t\"Proto-Algonquian\",\n\t\"Q7251834\",\n\t\"alg\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\
      \tsort_key = {\n\t\tfrom = {\"·\"},\n\t\tto   = {\"\"}},\n}\n\nm[\"alv-ama\"] = {\n\t\"Amasi\",\n\t\"Q4740400\",\n\t\"nic-bco\",\n\tscripts = Latn,\n\tentry_name = {\n\t\tfrom = {\"[àáâãā]\", \"[èéêē]\", \"[ìíîī]\", \"[òóôõō]\", \"[ùúûũū]\", GRAVE, ACUTE,\
      \ CIRC, TILDE, MACRON},\n\t\tto   = {\"a\",       \"e\",      \"i\",      \"o\",       \"u\"}},\n}\n\nm[\"alv-bgu\"] = {\n\t\"Baïnounk Gubëeher\",\n\t\"Q17002646\",\n\t\"alv-sng\",\n\totherNames = {\"Gubëeher\", \"Nyun Gubëeher\", \"Nun Gubëeher\"},\n\t\
      scripts = Latn,\n}\n\nm[\"alv-edo-pro\"] = {\n\t\"Proto-Edoid\",\n\tnil,\n\t\"alv-edo\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"alv-gwa\"] = {\n\t\"Gwara\",\n\t\"Q16945580\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"alv-pro\"] =\
      \ {\n\t\"Proto-Atlantic-Congo\",\n\tnil,\n\t\"alv\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"apa-pro\"] = {\n\t\"Proto-Apachean\",\n\tnil,\n\t\"apa\",\n\totherNames = {\"Proto-Apache\", \"Proto-Southern Athabaskan\"},\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aql-pro\"] = {\n\t\"Proto-Algic\",\n\t\"Q18389588\",\n\t\"aql\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tsort_key = {\n\t\tfrom = {\"·\"},\n\t\tto   = {\"\"}},\n}\n\nm[\"art-blk\"] = {\n\t\"Bolak\"\
      ,\n\t\"Q2909283\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"art-bsp\"] = {\n\t\"Black Speech\",\n\t\"Q686210\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = {\"Latn\", \"Teng\"},\n}\n\nm[\"art-com\"]\
      \ = {\n\t\"Communicationssprache\",\n\t\"Q35227\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"art-dtk\"] = {\n\t\"Dothraki\",\n\t\"Q2914733\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"\
      art-elo\"] = {\n\t\"Eloi\",\n\tnil,\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"art-gld\"] = {\n\t\"Goa'uld\",\n\t\"Q19823\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = {\"Latn\", \"Egyp\", \"Mero\"},\n\
      }\n\nm[\"art-lap\"] = {\n\t\"Lapine\",\n\t\"Q6488195\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"art-man\"] = {\n\t\"Mandalorian\",\n\t\"Q54289\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n\
      }\n\nm[\"art-mun\"] = {\n\t\"Mundolinco\",\n\t\"Q851355\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"art-nav\"] = {\n\t\"Na'vi\",\n\t\"Q316939\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\
      \nm[\"art-nox\"] = {\n\t\"Noxilo\",\n\tnil,\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"art-top\"] = {\n\t\"Toki Pona\",\n\t\"Q36846\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"art-una\"\
      ] = {\n\t\"Unas\",\n\tnil,\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"ath-nic\"] = {\n\t\"Nicola\",\n\t\"Q20609\",\n\t\"ath-nor\",\n\tscripts = Latn,\n}\n\nm[\"ath-pro\"] = {\n\t\"Proto-Athabaskan\",\n\tnil,\n\t\"ath\"\
      ,\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"auf-pro\"] = {\n\t\"Proto-Arawa\",\n\tnil,\n\t\"auf\",\n\totherNames = {\"Proto-Arawan\", \"Proto-Arauan\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aus-alu\"\
      ] = {\n\t\"Alungul\",\n\t\"Q16827670\",\n\t\"aus-pmn\",\n\totherNames = {\"Ogh-Alungul\", \"Alngula\"},\n\tscripts = Latn,\n}\n\nm[\"aus-and\"] = {\n\t\"Andjingith\",\n\t\"Q4754509\",\n\t\"aus-pmn\",\n\totherNames = {\"Adithinngithigh\"},\n\tscripts =\
      \ Latn,\n}\n\nm[\"aus-ang\"] = {\n\t\"Angkula\",\n\t\"Q16828520\",\n\t\"aus-pmn\",\n\totherNames = {\"Ogh-Anggula\", \"Anggula\", \"Ogh-Anggul\", \"Anggul\"},\n\tscripts = Latn,\n}\n\nm[\"aus-arn-pro\"] = {\n\t\"Proto-Arnhem\",\n\tnil,\n\t\"aus-arn\",\n\
      \ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aus-bra\"] = {\n\t\"Barranbinya\",\n\t\"Q4863220\",\n\t\"aus-pmn\",\n\totherNames = {\"Barranbinja\", \"Baranbinya\", \"Burranbinya\", \"Burrumbiniya\", \"Burrunbinya\", \"Barrumbinya\",\
      \ \"Barren-binya\", \"Parran-binye\"},\n\tscripts = Latn,\n}\n\nm[\"aus-brm\"] = {\n\t\"Barunggam\",\n\t\"Q4865914\",\n\t\"aus-pmn\",\n\tscripts = Latn,\n}\n\nm[\"aus-bru\"] = {\n\t\"Bruny Island\",\n\t\"Q4979601\",\n\totherNames = {\"Bruny Island Tasmanian\"\
      , \"Nuenonne\", \"Nyunoni\"},\n\tscripts = Latn,\n}\n\nm[\"aus-cww-pro\"] = {\n\t\"Proto-Central New South Wales\",\n\tnil,\n\t\"aus-cww\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aus-dal-pro\"] = {\n\t\"Proto-Daly\",\n\tnil,\n\
      \t\"aus-dal\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aus-guw\"] = {\n\t\"Guwar\",\n\t\"Q6652138\",\n\t\"aus-pam\",\n\totherNames = {\"Gowar\", \"Goowar\", \"Gooar\", \"Guar\", \"Gowr-burra\", \"Ngugi\", \"Mugee\", \"Wogee\"\
      , \"Gnoogee\", \"Chunchiburri\", \"Booroo-geen-merrie\"},\n\tscripts = Latn,\n}\n\nm[\"aus-lsw\"] = {\n\t\"Little Swanport\",\n\t\"Q6652138\",\n\totherNames = {\"Little Swanport Tasmanian\"},\n\tscripts = Latn,\n}\n\nm[\"aus-nyu-pro\"] = {\n\t\"Proto-Nyulnyulan\"\
      ,\n\tnil,\n\t\"aus-nyu\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aus-pam-pro\"] = {\n\t\"Proto-Pama-Nyungan\",\n\t\"Q33942\",\n\t\"aus-pam\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aus-par\"] = {\n\t\
      \"Paredarerme\",\n\t\"Q7136678\",\n\totherNames = {\"Oyster Bay\", \"Oyster Bay Tasmanian\", \"Paritarami\", \"Big River\", \"Big River Tasmanian\", \"Lairmairrener\", \"Lemerina\"},\n\tscripts = Latn,\n}\n\nm[\"aus-pee\"] = {\n\t\"Peerapper\",\n\t\"Q7160431\"\
      ,\n\totherNames = {\"Pirapa\", \"Northwestern Tasmanian\"},\n\tscripts = Latn,\n}\n\nm[\"aus-psl\"] = {\n\t\"Port Sorell\",\n\t\"Q7230944\",\n\totherNames = {\"Port Sorell Tasmanian\"},\n\tscripts = Latn,\n}\n\nm[\"aus-pye\"] = {\n\t\"Pyemmairre\",\n\t\
      \"Q7262964\",\n\totherNames = {\"Northeastern Tasmanian\", \"North East Tasmanian\", \"Plangermaireener\", \"Plangamerina\", \"Cape Portland\", \"Ben Lomond\", \"Pipers River\"},\n\tscripts = Latn,\n}\n\nm[\"aus-set\"] = {\n\t\"Southeast Tasmanian\",\n\
      \t\"Q7068421\",\n\totherNames = {\"Mainland Southeast Tasmanian\", \"Nuenonne\", \"Nyunoni\"},\n\tscripts = Latn,\n}\n\nm[\"aus-tom\"] = {\n\t\"Tommeginne\",\n\t\"Q7819095\",\n\totherNames = {\"Tommeeginnee\", \"Northern Tasmanian\"},\n\tscripts = Latn,\n\
      }\n\nm[\"aus-too\"] = {\n\t\"Toogee\",\n\t\"Q7824008\",\n\totherNames = {\"Southwestern Tasmanian\"},\n\tscripts = Latn,\n}\n\nm[\"aus-uwi\"] = {\n\t\"Uwinymil\",\n\t\"Q7903995\",\n\t\"aus-arn\",\n\totherNames = {\"Uwinjmil\"},\n\tscripts = Latn,\n}\n\n\
      m[\"aus-wdj-pro\"] = {\n\t\"Proto-Iwaidjan\",\n\tnil,\n\t\"aus-wdj\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aus-won\"] = {\n\t\"Wong-gie\",\n\tnil,\n\t\"aus-pam\",\n\tscripts = Latn,\n}\n\nm[\"aus-wul\"] = {\n\t\"Wulguru\",\n\
      \t\"Q8039196\",\n\t\"aus-dyb\",\n\totherNames = {\"Manbara\", \"Wulgurugaba\", \"Wulgurukaba\", \"Nhawalgaba\"},\n\tscripts = Latn,\n}\n\nm[\"aus-ynk\"] = { -- contrast nny\n\t\"Yangkaal\",\n\t\"Q3913770\",\n\t\"aus-tnk\",\n\tscripts = Latn,\n}\n\nm[\"\
      awd-amc-pro\"] = {\n\t\"Proto-Amuesha-Chamicuro\",\n\tnil,\n\t\"awd\",\n\totherNames = {\"Western Maipuran\"},\n\tscripts = Latn,\n\ttype = \"reconstructed\",\n\tancestors = {\"awd-pro\"},\n}\n\nm[\"awd-kmp-pro\"] = {\n\t\"Proto-Kampa\",\n\tnil,\n\t\"\
      awd\",\n\totherNames = {\"Campa\", \"Kampan\", \"Campan\", \"Pre-Andine Maipurean\"},\n\tscripts = Latn,\n\ttype = \"reconstructed\",\n\tancestors = {\"awd-pro\"},\n}\n\nm[\"awd-prw-pro\"] = {\n\t\"Proto-Paresi-Waura\",\n\tnil,\n\t\"awd\",\n\totherNames\
      \ = {\"Paresí-Waurá\", \"Parecí–Xingú\", \"Paresí–Xingu\", \"Central Arawak\", \"Central Maipurean\"},\n\tscripts = Latn,\n\ttype = \"reconstructed\",\n\tancestors = {\"awd-pro\"},\n}\n\nm[\"awd-ama\"] = {\n\t\"Amarizana\",\n\t\"Q16827787\",\n\t\"awd\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"awd-ana\"] = {\n\t\"Anauyá\",\n\t\"Q16828252\",\n\t\"awd\",\n\totherNames = {\"Anauya\"},\n\tscripts = Latn,\n}\n\nm[\"awd-apo\"] = {\n\t\"Apolista\",\n\t\"Q16916645\",\n\t\"awd\",\n\totherNames = {\"Lapachu\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"awd-cav\"] = {\n\t\"Cavere\",\n\tnil,\n\t\"awd\",\n\totherNames = {\"Cabre\", \"Cabere\", \"Cávere\"},\n\tscripts = Latn,\n}\n\nm[\"awd-gnu\"] = {\n\t\"Guinau\",\n\t\"Q3504087\",\n\t\"awd\",\n\totherNames = {\"Guinao\", \"Inao\", \"\
      Guniare\", \"Quinhau\", \"Guiano\"},\n\tscripts = Latn,\n}\n\nm[\"awd-kar\"] = {\n\t\"Cariay\",\n\t\"Q16920253\",\n\t\"awd\",\n\totherNames = {\"Kariaí\", \"Kariai\", \"Cariyai\", \"Carihiahy\"},\n\tscripts = Latn,\n}\n\nm[\"awd-kaw\"] = {\n\t\"Kawishana\"\
      ,\n\t\"Q6379993\",\n\t\"awd-nwk\",\n\totherNames = {\"Cawishana\", \"Cayuishana\", \"Kaishana\", \"Cauixana\"},\n\tscripts = Latn,\n}\n\nm[\"awd-kus\"] = {\n\t\"Kustenau\",\n\t\"Q5196293\",\n\t\"awd\",\n\totherNames = {\" Kustenaú\", \"Custenau\", \"Kutenabu\"\
      },\n\tscripts = Latn,\n}\n\nm[\"awd-man\"] = {\n\t\"Manao\",\n\t\"Q6746920\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"awd-mar\"] = {\n\t\"Marawan\",\n\t\"Q6755108\",\n\t\"awd\",\n\totherNames = {\"Marawán\"},\n\tscripts = Latn,\n}\n\nm[\"awd-mpr\"] =\
      \ {\n\t\"Maypure\",\n\tnil,\n\t\"awd\",\n\totherNames = {\"Maipure\"},\n\tscripts = Latn,\n}\n\nm[\"awd-mrt\"] = {\n\t\"Mariaté\",\n\t\"Q16910017\",\n\t\"awd-nwk\",\n\totherNames = {\"Mariate\"},\n\tscripts = Latn,\n}\n\nm[\"awd-nwk-pro\"] = {\n\t\"Proto-Nawiki\"\
      ,\n\tnil,\n\t\"awd-nwk\",\n\totherNames = {\"Proto-Newiki\"},\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"awd-pai\"] = {\n\t\"Paikoneka\",\n\tnil,\n\t\"awd\",\n\totherNames = {\"Paiconeca\", \"Paicone\"},\n\tscripts = Latn,\n}\n\nm[\"awd-pas\"\
      ] = {\n\t\"Passé\",\n\tnil,\n\t\"awd-nwk\",\n\totherNames = {\"Pasé\", \"Pazé\"},\n\tscripts = Latn,\n}\n\nm[\"awd-pro\"] = {\n\t\"Proto-Arawak\",\n\tnil,\n\t\"awd\",\n\totherNames = {\"Proto-Arawakan\", \"Proto-Maipurean\", \"Proto-Maipuran\"},\n\ttype\
      \ = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"awd-she\"] = {\n\t\"Shebayo\",\n\t\"Q7492248\",\n\t\"awd\",\n\totherNames = {\"Shebaya\", \"Shebaye\"},\n\tscripts = Latn,\n}\n\nm[\"awd-taa-pro\"] = {\n\t\"Proto-Ta-Arawak\",\n\tnil,\n\t\"awd-taa\",\n\
      \totherNames = {\"Proto-Ta-Arawakan\", \"Proto-Caribbean Northern Arawak\"},\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"awd-wai\"] = {\n\t\"Wainumá\",\n\t\"Q16910017\",\n\t\"awd-nwk\",\n\totherNames = {\"Wainuma\", \"Wai\", \"Waima\", \"\
      Wainumi\", \"Wainambí\", \"Waiwana\", \"Waipi\", \"Yanuma\"},\n\tscripts = Latn,\n}\n\nm[\"awd-yum\"] = {\n\t\"Yumana\",\n\t\"Q8061062\",\n\t\"awd-nwk\",\n\totherNames = {\"Jumana\"},\n\tscripts = Latn,\n}\n\nm[\"azc-caz\"] = {\n\t\"Cazcan\",\n\t\"Q5055514\"\
      ,\n\t\"azc\",\n\totherNames = {\"Caxcan\", \"Kaskán\"},\n\tscripts = Latn,\n}\n\nm[\"azc-cup-pro\"] = {\n\t\"Proto-Cupan\",\n\tnil,\n\t\"azc-cup\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"azc-ktn\"] = {\n\t\"Kitanemuk\",\n\t\"\
      Q3197558\",\n\t\"azc-tak\",\n\totherNames = {\"Gitanemuk\"},\n\tscripts = Latn,\n}\n\nm[\"azc-nah-pro\"] = {\n\t\"Proto-Nahuan\",\n\t\"Q7251860\",\n\t\"azc-nah\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"azc-num-pro\"] = {\n\t\"\
      Proto-Numic\",\n\tnil,\n\t\"azc-num\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"azc-pro\"] = {\n\t\"Proto-Uto-Aztecan\",\n\t\"Q34073\",\n\t\"azc\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"azc-tak-pro\"\
      ] = {\n\t\"Proto-Takic\",\n\tnil,\n\t\"azc-tak\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"azc-tat\"] = {\n\t\"Tataviam\",\n\t\"Q743736\",\n\t\"azc\",\n\tscripts = Latn,\n}\n\nm[\"ber-pro\"] = {\n\t\"Proto-Berber\",\n\t\"Q2855698\"\
      ,\n\t\"ber\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"bnt-cmw\"] = {\n\t\"Chimwiini\",\n\t\"Q4958328\",\n\t\"bnt\",\n\totherNames = {\"Bravanese\", \"Mwiini\", \"Mwini\", \"Chimwini\", \"Chimini\", \"Brava\"},\n\tscripts = Latn,\n\
      }\n\nm[\"bnt-ind\"] = {\n\t\"Indanga\",\n\t\"Q51412803\",\n\t\"bnt\",\n\totherNames = {\"Kɔlɔmɔnyi\", \"Kɔlɛ\", \"Kasaï Oriental\"},\n\tscripts = Latn,\n}\n\nm[\"bnt-ngu-pro\"] = {\n\t\"Proto-Nguni\",\n\t\"Q961559\",\n\t\"bnt-ngu\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n\tsort_key = {\n                from = {\"[àáâǎ]\", \"[èéêě]\", \"[ìíîǐ]\", \"[òóôǒ]\", \"[ùúûǔ]\", \"ḿ\", \"[ǹńň]\", ACUTE, GRAVE, CIRC, CARON},\n                to   = {\"a\"     , \"e\"     , \"i\"     , \"o\"     , \"\
      u\"     , \"m\", \"n\"    }},\n}\n\nm[\"bnt-phu\"] = {\n\t\"Phuthi\",\n\t\"Q33796\",\n\t\"bnt-ngu\",\n\totherNames = {\"Siphuthi\"},\n\tscripts = Latn,\n\tentry_name = {\n\t\tfrom = {\"[àá]\", \"[èé]\", \"[ìí]\", \"[òó]\", \"[ùú]\", \"ḿ\", \"[ǹń]\", ACUTE,\
      \ GRAVE},\n\t\tto   = {\"a\"   , \"e\"   , \"i\"   , \"o\"   , \"u\"   , \"m\", \"n\"   }},\n}\n\nm[\"bnt-pro\"] = {\n\t\"Proto-Bantu\",\n\t\"Q3408025\",\n\t\"bnt\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tsort_key = {\n            \
      \    from = {\"[àá]\", \"[èé]\", \"[ìí]\", \"[òó]\", \"[ùú]\", \"[ǹń]\", \"ɪ\" , \"ʊ\" , ACUTE, GRAVE},\n                to   = {\"a\"   , \"e\"   , \"i2\"  , \"o\"   , \"u2\"  , \"n\"   , \"i1\", \"u1\"}},\n}\n\nm[\"bnt-sts-pro\"] = {\n\t\"Proto-Sotho-Tswana\"\
      ,\n\tnil,\n\t\"bnt-sts\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"btk-pro\"] = {\n\t\"Proto-Batak\",\n\tnil,\n\t\"btk\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-abz-pro\"] = {\n\t\"Proto-Abkhaz-Abaza\",\n\
      \t\"Q7251831\",\n\t\"cau-abz\",\n\totherNames = {\"Proto-Abazgi\", \"Proto-Abkhaz-Tapanta\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-ava-pro\"] = {\n\t\"Proto-Avaro-Andian\",\n\tnil,\n\t\"cau-ava\",\n\totherNames = {\"Proto-Avar-Andian\"\
      , \"Proto-Avar-Andi\", \"Proto-Avar-Andic\", \"Proto-Andian\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-cir-pro\"] = {\n\t\"Proto-Circassian\",\n\t\"Q7251838\",\n\t\"cau-cir\",\n\totherNames = {\"Proto-Adyghe-Kabardian\",\
      \ \"Proto-Adyghe-Circassian\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-drg-pro\"] = {\n\t\"Proto-Dargwa\",\n\tnil,\n\t\"cau-drg\",\n\totherNames = {\"Proto-Dargin\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"\
      },\n}\n\nm[\"cau-lzg-pro\"] = {\n\t\"Proto-Lezghian\",\n\tnil,\n\t\"cau-lzg\",\n\totherNames = {\"Proto-Lezgi\", \"Proto-Lezgian\", \"Proto-Lezgic\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-nec-pro\"] = {\n\t\"Proto-Northeast\
      \ Caucasian\",\n\tnil,\n\t\"cau-nec\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-nkh-pro\"] = {\n\t\"Proto-Nakh\",\n\tnil,\n\t\"cau-nkh\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-nwc-pro\"] = {\n\
      \t\"Proto-Northwest Caucasian\",\n\t\"Q7251861\",\n\t\"cau-nwc\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-tsz-pro\"] = {\n\t\"Proto-Tsezian\",\n\tnil,\n\t\"cau-tsz\",\n\totherNames = {\"Proto-Tsezic\", \"Proto-Didoic\"},\n\
      \ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cba-ata\"] = {\n\t\"Atanques\",\n\t\"Q4812783\",\n\t\"cba\",\n\totherNames = {\"Atanque\", \"Cancuamo\", \"Kankuamo\", \"Kankwe\", \"Kankuí\", \"Atanke\"},\n\tscripts = Latn,\n}\n\nm[\"cba-cat\"\
      ] = {\n\t\"Catío Chibcha\",\n\t\"Q7083619\",\n\t\"cba\",\n\totherNames = {\"Catio Chibcha\", \"Old Catio\"},\n\tscripts = Latn,\n}\n\nm[\"cba-dor\"] = {\n\t\"Dorasque\",\n\t\"Q5297532\",\n\t\"cba\",\n\totherNames = {\"Chumulu\", \"Changuena\", \"Changuina\"\
      , \"Chánguena\", \"Gualaca\"},\n\tscripts = Latn,\n}\n\nm[\"cba-dui\"] = {\n\t\"Duit\",\n\t\"Q3041061\",\n\t\"cba\",\n\tscripts = Latn,\n}\n\nm[\"cba-hue\"] = {\n\t\"Huetar\",\n\t\"Q35514\",\n\t\"cba\",\n\totherNames = {\"Güetar\", \"Guetar\", \"Brusela\"\
      },\n\tscripts = Latn,\n}\n\nm[\"cba-nut\"] = {\n\t\"Nutabe\",\n\t\"Q7070405\",\n\t\"cba\",\n\totherNames = {\"Nutabane\"},\n\tscripts = Latn,\n}\n\nm[\"cba-pro\"] = {\n\t\"Proto-Chibchan\",\n\tnil,\n\t\"cba\",\n\ttype = \"reconstructed\",\n\tscripts =\
      \ {\"Latinx\"},\n}\n\nm[\"ccn-pro\"] = {\n\t\"Proto-North Caucasian\",\n\tnil,\n\t\"ccn\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ccs-pro\"] = {\n\t\"Proto-Kartvelian\",\n\t\"Q2608203\",\n\t\"ccs\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n\tentry_name = {\n\t\tfrom = {\"q̣\", \"p̣\", \"ʓ\", \"ċ\"},\n\t\tto   = {\"q̇\", \"ṗ\", \"ʒ\", \"c̣\"}},\n}\n\nm[\"ccs-gzn-pro\"] = {\n\t\"Proto-Georgian-Zan\",\n\t\"Q23808119\",\n\t\"ccs-gzn\",\n\totherNames = {\"Proto-Karto-Zan\"\
      },\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tentry_name = {\n\t\tfrom = {\"q̣\", \"p̣\", \"ʓ\", \"ċ\"},\n\t\tto   = {\"q̇\", \"ṗ\", \"ʒ\", \"c̣\"}},\n}\n\nm[\"cdc-cbm-pro\"] = {\n\t\"Proto-Central Chadic\",\n\tnil,\n\t\"cdc-cbm\",\n\t\
      otherNames = {\"Proto-Central-Chadic\", \"Proto-Biu-Mandara\"},\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"cdc-pro\"] = {\n\t\"Proto-Chadic\",\n\tnil,\n\t\"cdc\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"cdd-pro\"] = {\n\
      \t\"Proto-Caddoan\",\n\tnil,\n\t\"cdd\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cel-bry-pro\"] = {\n\t\"Proto-Brythonic\",\n\t\"Q156877\",\n\t\"cel-bry\",\n\totherNames = {\"Proto-Brittonic\"},\n\tscripts = {\"Latinx\"},\n}\n\
      \nm[\"cel-gal\"] = {\n\t\"Gallaecian\",\n\t\"Q3094789\",\n\t\"cel\",\n}\n\nm[\"cel-gau\"] = {\n\t\"Gaulish\",\n\t\"Q29977\",\n\t\"cel\",\n\tscripts = {\"Latn\", \"Grek\"},\n}\n\nm[\"cel-pro\"] = {\n\t\"Proto-Celtic\",\n\t\"Q653649\",\n\t\"cel\",\n\ttype\
      \ = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tsort_key = {\n\t\tfrom = {\"ā\", \"ē\", \"[ɸφ]\", \"ī\", \"ū\", \"ʷ\"},\n\t\tto   = {\"a\", \"e\", \"f\",    \"i\", \"u\", \"¯w\"}},\n}\n\nm[\"chi-pro\"] = {\n\t\"Proto-Chimakuan\",\n\tnil,\n\t\"chi\"\
      ,\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cmc-pro\"] = {\n\t\"Proto-Chamic\",\n\tnil,\n\t\"cmc\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cpe-mar\"] = {\n\t\"Maroon Spirit Language\",\n\t\"Q1093206\"\
      ,\n\t\"crp\",\n\totherNames = {\"Jamaican Maroon Spirit Possession Language\"},\n\tscripts = Latn,\n\tancestors = {\"en\"},\n}\n\nm[\"cpe-spp\"] = {\n\t\"Samoan Plantation Pidgin\",\n\t\"Q7409948\",\n\t\"crp\",\n\tscripts = Latn,\n\tancestors = {\"en\"\
      },\n}\n\nm[\"crp-gep\"] = {\n\t\"Greenlandic Pidgin\",\n\t\"Q17036301\",\n\t\"crp\",\n\totherNames = {\"West Greenlandic Pidgin\", \"Greenlandic Eskimo Pidgin\"},\n\tscripts = Latn,\n}\n\nm[\"crp-rsn\"] = {\n\t\"Russenorsk\",\n\t\"Q505125\",\n\t\"crp\"\
      ,\n\tscripts = {\"Cyrl\", \"Latn\"},\n\tancestors = {\"no\", \"ru\"},\n}\n\nm[\"crp-tpr\"] = {\n\t\"Taimyr Pidgin Russian\",\n\t\"Q16930506\",\n\t\"crp\",\n\tscripts = {\"Cyrl\"},\n}\n\nm[\"csu-sar-pro\"] = {\n\t\"Proto-Sara\",\n\tnil,\n\t\"csu-sar\",\n\
      \ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cus-pro\"] = {\n\t\"Proto-Cushitic\",\n\tnil,\n\t\"cus\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"dra-mkn\"] = {\n\t\"Nadugannada\",\n\tnil,\n\t\"dra\",\n\totherNames\
      \ = {\"Middle Kannada\"},\n\tscripts = {\"Knda\"},\n\tancestors = {\"dra-okn\"},\n}\n\nm[\"dra-okn\"] = {\n\t\"Halegannada\",\n\t\"Q15723156\",\n\t\"dra\",\n\totherNames = {\"Old Kannada\"},\n\tscripts = {\"Knda\"},\n\tancestors = {\"dra-pro\"},\n}\n\n\
      m[\"dra-pro\"] = {\n\t\"Proto-Dravidian\",\n\t\"Q1702853\",\n\t\"dra\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"egx-dem\"] = {\n\t\"Demotic\",\n\t\"Q188519\",\n\t\"egx\",\n\totherNames = {\"Demotic Egyptian\", \"Enchorial\"},\n\
      \tscripts = {\"Latinx\", \"Egyd\"},\n\tancestors = {\"egy\"},\n}\n\nm[\"elu-prk\"] = {\n\t\"Helu\",\n\t\"Q15080869\",\n\t\"inc\",\n\totherNames = {\"Hela\", \"Elu Prakrit\", \"Helu Prakrit\", \"Hela Prakrit\", \"Eḷu\"},\n\tscripts = {\"Brah\"},\n\tancestors\
      \ = {\"sa\"},\n}\n\nm[\"dru-pro\"] = {\n\t\"Proto-Rukai\",\n\tnil,\n\t\"map\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"esx-esk-pro\"] = {\n\t\"Proto-Eskimo\",\n\t\"Q7251842\",\n\t\"esx-esk\",\n\ttype = \"reconstructed\",\n\tscripts\
      \ = {\"Latinx\"},\n}\n\nm[\"esx-inu-pro\"] = {\n\t\"Proto-Inuit\",\n\tnil,\n\t\"esx-inu\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"esx-pro\"] = {\n\t\"Proto-Eskimo-Aleut\",\n\t\"Q7251843\",\n\t\"esx\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n}\n\nm[\"euq-pro\"] = {\n\t\"Proto-Basque\",\n\t\"Q938011\",\n\t\"euq\",\n\totherNames = {\"Proto-Vasconic\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"fiu-fin-pro\"] = {\n\t\"Proto-Finnic\",\n\t\"\
      Q11883720\",\n\t\"fiu-fin\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"gem-bur\"] = {\n\t\"Burgundian\",\n\tnil,\n\t\"gme\",\n\totherNames = {\"Burgundish\", \"Burgundic\"},\n\tscripts = Latn,\n}\n\nm[\"gem-pro\"] = {\n\t\"Proto-Germanic\"\
      ,\n\t\"Q669623\",\n\t\"gem\",\n\totherNames = {\"Common Germanic\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tsort_key = {\n\t\tfrom = {\"ā\", \"[ēê]\", \"ī\", \"[ōô]\", \"ū\", \"ą\" , \"į\" , \"ǫ\" , \"ų\" , CIRC, MACRON},\n\t\tto  \
      \ = {\"a\" , \"e\"  , \"i\", \"o\"   , \"u\", \"an\", \"in\", \"on\", \"un\"}},\n}\n\nm[\"gme-cgo\"] = {\n\t\"Crimean Gothic\",\n\t\"Q36211\",\n\t\"gme\",\n\tscripts = Latn,\n}\n\nm[\"gmq-bot\"] = {\n\t\"Westrobothnian\",\n\t\"Q7989641\",\n\t\"gmq\",\n\
      \tscripts = Latn,\n\tancestors = {\"non\"},\n}\n\nm[\"gmq-gut\"] = {\n\t\"Gutnish\",\n\t\"Q1256646\",\n\t\"gmq\",\n\tscripts = Latn,\n\tancestors = {\"non\"},\n}\n\nm[\"gmq-jmk\"] = {\n\t\"Jamtish\",\n\tnil,\n\t\"gmq\",\n\totherNames = {\"Jamtlandic\"\
      },\n\tscripts = Latn,\n\tancestors = {\"non\"},\n}\n\nm[\"gmq-mno\"] = {\n\t\"Middle Norwegian\",\n\t\"Q3417070\",\n\t\"gmq\",\n\tscripts = Latn,\n\tancestors = {\"non\"},\n}\n\n-- Used for both gmq-oda (Old Danish) and gmq-osw (Old Swedish).\n-- Ensure\
      \ any changes are appropriate for both languages, or copy to each\n-- language's table before making any changes.\nlocal gmq_oda_entry_name = {\n\tfrom = {\"Ā\", \"ā\", \"Ē\", \"ē\", \"Ī\", \"ī\", \"Ō\", \"ō\", \"Ū\", \"ū\", \"Ȳ\", \"ȳ\", \"Ǣ\", \"ǣ\"\
      , MACRON},\n\tto   = {\"A\", \"a\", \"E\", \"e\", \"I\", \"i\", \"O\", \"o\", \"U\", \"u\", \"Y\", \"y\", \"Æ\", \"æ\"}}\n\nm[\"gmq-oda\"] = {\n\t\"Old Danish\",\n\tnil,\n\t\"gmq\",\n\tscripts = Latn,\n\tancestors = {\"non\"},\n\tentry_name = gmq_oda_entry_name,\n\
      }\n\nm[\"gmq-osw\"] = {\n\t\"Old Swedish\",\n\t\"Q2417210\",\n\t\"gmq\",\n\tscripts = Latn,\n\tancestors = {\"non\"},\n\tentry_name = gmq_oda_entry_name,\n}\n\nm[\"gmq-pro\"] = {\n\t\"Proto-Norse\",\n\t\"Q1671294\",\n\t\"gmq\",\n\totherNames = {\"Proto-Scandinavian\"\
      , \"Primitive Norse\", \"Proto-Nordic\",\n\t\t\"Ancient Nordic\", \"Ancient Scandinavian\", \"Old Nordic\", \"Old Scandinavian\",\n\t\t\"Proto-North Germanic\", \"North Proto-Germanic\", \"Common Scandinavian\"},\n\tscripts = {\"Runr\"},\n\ttranslit_module\
      \ = \"Runr-translit\",\n}\n\nm[\"gmq-scy\"] = {\n\t\"Scanian\",\n\t\"Q768017\",\n\t\"gmq\",\n\tscripts = Latn,\n\tancestors = {\"non\"},\n}\n\nm[\"gmw-cfr\"] = {\n\t\"Central Franconian\",\n\tnil,\n\t\"gmw\",\n\totherNames = {\"Mittelfränkisch\", \"Ripuarian\"\
      , \"Moselle Franconian\", \"Colognian\", \"Kölsch\"},\n\tscripts = Latn,\n\tancestors = {\"gmh\"},\n\twikimedia_codes = {\"ksh\"},\n}\n\nm[\"gmw-ecg\"] = {\n\t\"East Central German\",\n\t\"Q499344\", -- subsumes Q699284, Q152965\n\t\"gmw\",\n\totherNames\
      \ = {\"Thuringian\", \"Thüringisch\", \"Upper Saxon\", \"Upper Saxon German\", \"Obersächsisch\", \"Lusatian\", \"Erzgebirgisch\", \"Silesian\", \"Silesian German\", \"High Prussian\"},\n\tscripts = Latn,\n\tancestors = {\"gmh\"},\n}\n\nm[\"gmw-gts\"]\
      \ = {\n\t\"Gottscheerish\",\n\t\"Q533109\",\n\t\"gmw\",\n\totherNames = {\"Gottscheerisch\"},\n\tscripts = Latn,\n\tancestors = {\"bar\"},\n}\n\nm[\"gmw-jdt\"] = {\n\t\"Jersey Dutch\",\n\t\"Q1687911\",\n\t\"gmw\",\n\tscripts = Latn,\n\tancestors = {\"\
      nl\"},\n}\n\nm[\"gmw-rfr\"] = {\n\t\"Rhine Franconian\",\n\t\"Q707007\",\n\t\"gmw\",\n\totherNames = {\"Rheinfränkisch\", \"Rhenish Franconian\", \"Hessian\", \"Lorraine Franconian\", \"Lorrainian\", \"Lothringisch\", \"Palatine German\", \"Pfälzisch\"\
      , \"Pälzisch\", \"Palatinate German\"},\n\tscripts = Latn,\n\tancestors = {\"gmh\"},\n}\n\nm[\"gmw-stm\"] = {\n\t\"Sathmar Swabian\",\n\t\"Q2223059\",\n\t\"gmw\",\n\totherNames = {\"Satu Mare Swabian\", \"Sathmarschwäbisch\", \"Sathmarisch\"},\n\tscripts\
      \ = Latn,\n\tancestors = {\"swg\"},\n}\n\nm[\"gmw-tsx\"] = {\n\t\"Transylvanian Saxon\",\n\t\"Q260942\",\n\t\"gmw\",\n\totherNames = {\"Siebenbürger Saxon\"},\n\tscripts = Latn,\n\tancestors = {\"gmw-cfr\"},\n}\n\nm[\"gmw-vog\"] = {\n\t\"Volga German\"\
      ,\n\t\"Q312574\",\n\t\"gmw\",\n\tscripts = Latn,\n\tancestors = {\"gmw-rfr\"},\n}\n\nm[\"gmw-zps\"] = {\n\t\"Zipser German\",\n\t\"Q205548\",\n\t\"gmw\",\n\totherNames = {\"Zipser\", \"Zipserisch\", \"Outzäpsersch\"},\n\tscripts = Latn,\n\tancestors =\
      \ {\"gmh\"},\n}\n\nm[\"grk-cal\"] = {\n\t\"Calabrian Greek\",\n\t\"Q1146398\",\n\t\"grk\",\n\totherNames = {\"Italian Greek\", \"Bova\"},\n\tscripts = Latn,\n\tancestors = {\"grc\"},\n}\n\nm[\"grk-ita\"] = {\n\t\"Italiot Greek\",\n\tnil,\n\t\"grk\",\n\t\
      otherNames = {\"Griko\", \"Grico\", \"Grecanic\"},\n\tscripts = {\"Latn\", \"Grek\"},\n\tancestors = {\"grc\"},\n}\n\nm[\"grk-mar\"] = {\n\t\"Mariupol Greek\",\n\t\"Q4400023\",\n\t\"grk\",\n\totherNames = {\"Mariupolitan Greek\", \"Rumeíka\", \"Rumeika\"\
      },\n\tscripts = {\"Cyrl\", \"Latn\", \"Grek\"},\n\tancestors = {\"grc\"},\n\tentry_name = {\n\t\tfrom = {ACUTE},\n\t\tto   = {}} ,\n}\n\nm[\"grk-pro\"] = {\n\t\"Proto-Hellenic\",\n\t\"Q1231805\",\n\t\"grk\",\n\ttype = \"reconstructed\",\n\tscripts = {\"\
      Latinx\"},\n}\n\nm[\"hmn-pro\"] = {\n\t\"Proto-Hmong\",\n\tnil,\n\t\"hmn\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"hmx-mie-pro\"] = {\n\t\"Proto-Mien\",\n\tnil,\n\t\"hmx-mie\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"\
      },\n}\n\nm[\"hmx-pro\"] = {\n\t\"Proto-Hmong-Mien\",\n\t\"Q7251846\",\n\t\"hmx\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"hyx-pro\"] = {\n\t\"Proto-Armenian\",\n\t\"Q3848498\",\n\t\"hyx\",\n\ttype = \"reconstructed\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"iir-nur-pro\"] = {\n\t\"Proto-Nuristani\",\n\tnil,\n\t\"iir-nur\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"iir-pro\"] = {\n\t\"Proto-Indo-Iranian\",\n\t\"Q966439\",\n\t\"iir\",\n\ttype = \"reconstructed\",\n\
      \tscripts = {\"Latinx\"},\n}\n\nm[\"inc-ash\"] = {\n\t\"Ashokan Prakrit\",\n\tnil,\n\t\"inc\",\n\tscripts = {\"Brah\", \"Khar\"},\n\tancestors = {\"sa\"},\n\ttranslit_module = \"translit-redirect\",\n}\n\nm[\"inc-gup\"] = {\n\t\"Gurjar Apabhramsa\",\n\t\
      nil,\n\t\"inc\",\n\tscripts = {\"Deva\"},\n\tancestors = {\"psu\"},\n}\n\nm[\"inc-mas\"] = {\n\t\"Middle Assamese\",\n\tnil,\n\t\"inc\",\n\tscripts = {\"Beng\"},\n\tancestors = {\"inc-oas\"},\n\ttranslit_module = \"inc-mas-translit\",\n}\n\nm[\"inc-mbn\"\
      ] = {\n\t\"Middle Bengali\",\n\tnil,\n\t\"inc\",\n\tscripts = {\"Beng\"},\n\tancestors = {\"inc-obn\"},\n}\n\nm[\"inc-mgd\"] = {\n\t\"Magadhi Prakrit\",\n\t\"Q2652214\",\n\t\"inc\",\n\tscripts = {\"Brah\"},\n\tancestors = {\"inc-ash\"},\n\ttranslit_module\
      \ = \"Brah-translit\",\n}\n\nm[\"inc-mgu\"] = {\n\t\"Middle Gujarati\",\n\t\"Q24907429\",\n\t\"inc\",\n\tscripts = {\"Deva\"},\n\tancestors = {\"inc-ogu\"},\n}\n\nm[\"inc-mor\"] = {\n\t\"Middle Oriya\",\n\tnil,\n\t\"inc\",\n\tscripts = {\"Orya\"},\n\t\
      ancestors = {\"inc-oor\"},\n}\n\nm[\"inc-oas\"] = {\n\t\"Old Assamese\",\n\tnil,\n\t\"inc\",\n\tscripts = {\"Beng\"},\n\tancestors = {\"inc-mgd\"},\n\ttranslit_module = \"inc-mas-translit\",\n}\n\nm[\"inc-obn\"] = {\n\t\"Old Bengali\",\n\tnil,\n\t\"inc\"\
      ,\n\tscripts = {\"Beng\"},\n\tancestors = {\"inc-mgd\"},\n}\n\nm[\"inc-ogu\"] = {\n\t\"Old Gujarati\",\n\t\"Q24907427\",\n\t\"inc\",\n\totherNames = {\"Old Western Rajasthani\"},\n\tscripts = {\"Deva\"},\n\tancestors = {\"inc-gup\"},\n}\n\nm[\"inc-ohi\"\
      ] = {\n\t\"Old Hindi\",\n\t\"Q48767781\",\n\t\"inc\",\n\tscripts = {\"Deva\"},\n\tancestors = {\"inc-sap\"},\n\ttranslit_module = \"sa-translit\",\n}\n\nm[\"inc-oor\"] = {\n\t\"Old Oriya\",\n\tnil,\n\t\"inc\",\n\tscripts = {\"Orya\"},\n\tancestors = {\"\
      inc-mgd\"},\n}\n\nm[\"inc-pro\"] = {\n\t\"Proto-Indo-Aryan\",\n\t\"Q23808344\",\n\t\"inc\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"inc-sap\"] = {\n\t\"Sauraseni Apabhramsa\",\n\tnil,\n\t\"inc\",\n\tscripts = {\"Deva\"},\n\tancestors\
      \ = {\"psu\"},\n}\n\nm[\"inc-dar-pro\"] = {\n\t\"Proto-Dardic\",\n\tnil,\n\t\"inc-dar\",\n\totherNames = {\"Proto-Rigvedic\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tancestors = {\"sa\"}, -- to be specific \"an unattested Old Indo-Aryan\
      \ dialect\"\n}\n\nm[\"ine-ana-pro\"] = {\n\t\"Proto-Anatolian\",\n\t\"Q7251833\",\n\t\"ine-ana\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ine-bsl-pro\"] = {\n\t\"Proto-Balto-Slavic\",\n\t\"Q1703347\",\n\t\"ine-bsl\",\n\ttype =\
      \ \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tsort_key = {\n\t\tfrom = {\"[áā]\", \"[éēḗ]\", \"[íī]\", \"[óōṓ]\", \"[úū]\", ACUTE, MACRON, \"ˀ\"},\n\t\tto   = {\"a\", \"e\", \"i\", \"o\", \"u\"}},\n}\n\nm[\"ine-pae\"] = {\n\t\"Paeonian\",\n\t\"Q2705672\"\
      ,\n\t\"ine\",\n\tscripts = {\"polytonic\"},\n\ttranslit_module = \"grc-translit\",\n\tsort_key = {  -- Keep this synchronized with grc and others synced to it\n\t\tfrom = {\"[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇᾱᾍ]\", \"[έὲἐἔἒἑἕἓ]\", \"[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗ]\",\
      \ \"[ίὶῖἰἴἲἶἱἵἳἷϊΐῒῗῑ]\", \"[όὸὀὄὂὁὅὃ]\", \"[ύὺῦὐὔὒὖὑὕὓὗϋΰῢῧῡ]\", \"[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧᾨ]\", \"ῥ\", \"ς\"},\n\t\tto   = {\"α\"\t\t\t\t\t\t, \"ε\"\t\t , \"η\"\t\t\t\t\t\t, \"ι\"\t\t\t\t, \"ο\"\t\t , \"υ\"\t\t\t\t, \"ω\"\t\t\t\t\t\t, \"ρ\", \"σ\"}},\n\
      \tentry_name = {\n\t\tfrom = {\"[ᾸᾹ]\", \"[ᾰᾱ]\", \"[ῘῙ]\", \"[ῐῑ]\", \"[ῨῩ]\", \"[ῠῡ]\"},\n\t\tto   = {\"Α\", \"α\", \"Ι\", \"ι\", \"Υ\", \"υ\"}},\n}\n\nm[\"ine-pro\"] = {\n\t\"Proto-Indo-European\",\n\t\"Q37178\",\n\t\"ine\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n\tsort_key = {\n\t\tfrom = {\"[áā]\", \"[éēḗ]\", \"[íī]\", \"[óōṓ]\", \"[úū]\", \"ĺ\", \"ḿ\", \"ń\", \"ŕ\", \"ǵ\" , \"ḱ\" , \"ʰ\", \"ʷ\", \"₁\", \"₂\", \"₃\", RINGBELOW, ACUTE, MACRON},\n\t\tto   = {\"a\"   , \"e\"\t, \"i\"\
      \   , \"o\"\t, \"u\"   , \"l\", \"m\", \"n\", \"r\", \"g'\", \"k'\", \"¯h\", \"¯w\", \"1\", \"2\", \"3\"}},\n}\n\nm[\"ine-toc-pro\"] = {\n\t\"Proto-Tocharian\",\n\t\"Q37029\",\n\t\"ine-toc\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\
      \nm[\"xme-old\"] = {\n\t\"Old Median\",\n\t\"Q36461\",\n\t\"xme\",\n\tscripts = {\"Grek\", \"Latn\"},\n}\n\nm[\"xme-mid\"] = {\n\t\"Middle Median\",\n\tnil,\n\t\"xme\",\n\tscripts = {\"Latn\"},\n\tancestors = {\"xme-old\"},\n}\n\nm[\"xme-ker\"] = {\n\t\
      \"Kermanic\",\n\t\"Q129850\",\n\t\"xme\",\n\totherNames = {\"Kermanian\", \"Central Dialects\", \"Central Iranian Dialects\", \"Central Plateau Dialects\", \"Central Iranian\", \"South Median\", \"Gazi\", \"Soi\", \"Sohi\", \"Abuzeydabadi\", \"Abyanehi\"\
      , \"Farizandi\", \"Jowshaqani\", \"Nashalji\", \"Qohrudi\", \"Yarandi\", \"Tari\", \"Sedehi\", \"Ardestani\", \"Zefrehi\", \"Isfahani\", \"Kafroni\", \"Varzenehi\", \"Khuri\", \"Nayini\", \"Anaraki\", \"Zoroastrian Dari\", \"Behdināni\", \"Behdinani\"\
      , \"Gabri\", \"Gavrŭni\", \"Gavruni\", \"Gabrōni\", \"Gabroni\", \"Kermani\", \"Yazdi\", \"Bidhandi\", \"Bijagani\", \"Chimehi\", \"Hanjani\", \"Komjani\", \"Naraqi\", \"Qalhari\", \"Varani\", \"Zori\"},\n\tscripts = {\"fa-Arab\"},\n\tancestors = {\"xme-mid\"\
      },\n}\n\nm[\"xme-ttc-pro\"] = {\n\t\"Proto-Tatic\",\n\tnil,\n\t\"xme-ttc\",\n\tscripts = {\"Latn\"},\n\tancestors = {\"xme-mid\"},\n}\n\nm[\"xme-kls\"] = {\n\t\"Kalasuri\",\n\tnil,\n\t\"xme-ttc\",\n\totherNames = {\"Kalāsuri\", \"Kalasur\", \"Kalāsur\"\
      },\n\tancestors = {\"xme-azr\"},\n}\n\nm[\"xme-klt\"] = {\n\t\"Kilit\",\n\t\"Q3612452\",\n\t\"xme-ttc\",\n\tscripts = {\"Cyrl\"}, -- and fa-Arab?\n\tancestors = {\"xme-azr\"},\n}\n\nm[\"xme-azr\"] = {\n\t\"Old Azari\",\n\t\"Q434697\",\n\t\"xme-ttc\",\n\
      \totherNames = {\"Old Azeri\", \"Azari\", \"Azeri\", \"Āḏarī\", \"Adari\", \"Adhari\"},\n\tscripts = {\"fa-Arab\"},\n\tancestors = {\"xme-ttc-pro\"},\n}\n\nm[\"ira-pro\"] = {\n\t\"Proto-Iranian\",\n\t\"Q4167865\",\n\t\"ira\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-mpr-pro\"] = {\n\t\"Proto-Medo-Parthian\",\n\tnil,\n\t\"ira-mpr\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-kms-pro\"] = {\n\t\"Proto-Komisenian\",\n\tnil,\n\t\"ira-kms\",\n\ttype\
      \ = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-zgr-pro\"] = {\n\t\"Proto-Zaza-Gorani\",\n\tnil,\n\t\"ira-zgr\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-pat-pro\"] = {\n\t\"Proto-Pathan\",\n\tnil,\n\t\"ira-pat\"\
      ,\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-sak-pro\"] = {\n\t\"Proto-Saka\",\n\tnil,\n\t\"ira-sak\",\n\totherNames = {\"Proto-Sakan\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tancestors = {\"xsc\"},\n}\n\n\
      m[\"ira-sym-pro\"] = {\n\t\"Proto-Shughni-Yazghulami-Munji\",\n\tnil,\n\t\"ira-sym\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-sgi-pro\"] = {\n\t\"Proto-Sanglechi-Ishkashimi\",\n\tnil,\n\t\"ira-sgi\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-mny-pro\"] = {\n\t\"Proto-Munji-Yidgha\",\n\tnil,\n\t\"ira-mny\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tancestors = {\"ira-sym-pro\"},\n}\n\nm[\"ira-shy-pro\"] = {\n\t\"Proto-Shughni-Yazgulami\"\
      ,\n\tnil,\n\t\"ira-shy\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tancestors = {\"ira-sym-pro\"},\n}\n\nm[\"ira-shr-pro\"] = {\n\t\"Proto-Shughni-Roshani\",\n\tnil,\n\t\"ira-shy\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"\
      },\n\tancestors = {\"ira-shy-pro\"},\n}\n\nm[\"ira-sgc-pro\"] = {\n\t\"Proto-Sogdic\",\n\tnil,\n\t\"ira-sgc\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-wnj\"] = {\n\t\"Vanji\",\n\tnil,\n\t\"ira-shy\",\n\totherNames = {\"Old\
      \ Vanji\", \"Vanchi\", \"Vanži\", \"Wanji\"},\n\tscripts = {\"Latinx\"},\n\tancestors = {\"ira-shy-pro\"},\n}\n\nm[\"iro-min\"] = {\n\t\"Mingo\",\n\t\"Q128531\",\n\t\"iro\",\n\tscripts = Latn,\n}\n\nm[\"iro-pro\"] = {\n\t\"Proto-Iroquoian\",\n\t\"Q7251852\"\
      ,\n\t\"iro\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"itc-ola\"] = {\n\t\"Old Latin\",\n\t\"Q12289\",\n\t\"itc\",\n\totherNames = {\"Archaic Latin\", \"Early Latin\", \"Pre-Classical Latin\", \"Ante-Classical Latin\"},\n\tscripts\
      \ = {\"Latn\", \"Ital\"},\n\tentry_name = {\n\t\tfrom = {\"Ā\", \"ā\", \"Ē\", \"ē\", \"Ī\", \"ī\", \"Ō\", \"ō\", \"Ū\", \"ū\", \"Ȳ\", \"ȳ\"},\n\t\tto   = {\"A\", \"a\", \"E\", \"e\", \"I\", \"i\", \"O\", \"o\", \"U\", \"u\", \"Y\", \"y\"}},\n\ttranslit_module\
      \ = \"Ital-translit\",\n}\n\nm[\"itc-pro\"] = {\n\t\"Proto-Italic\",\n\t\"Q17102720\",\n\t\"itc\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"jpx-pro\"] = {\n\t\"Proto-Japonic\",\n\tnil,\n\t\"jpx\",\n\ttype = \"reconstructed\",\n\
      \tscripts = {\"Latinx\"},\n}\n\nm[\"jpx-ryu-pro\"] = {\n\t\"Proto-Ryukyuan\",\n\tnil,\n\t\"jpx-ryu\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"kar-pro\"] = {\n\t\"Proto-Karen\",\n\tnil,\n\t\"kar\",\n\ttype = \"reconstructed\",\n\
      \tscripts = {\"Latinx\"},\n}\n\nm[\"khi-kho-pro\"] = {\n\t\"Proto-Khoe\",\n\tnil,\n\t\"khi-kho\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"khi-kun\"] = {\n\t\"ǃKung\",\n\t\"Q32904\",\n\t\"khi-kxa\",\n\totherNames = {\"ǃOǃKung\", \"ǃ'Oǃ\
      Kung\", \"Kung\", \"Ekoka ǃKung\", \"Ekoka Kung\", \"Sekele\"},\n\tscripts = Latn,\n}\n\nm[\"lic-pro\"] = {\n\t\"Proto-Hlai\",\n\t\"Q7251845\",\n\t\"qfa-lic\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"map-ata-pro\"] = {\n\t\"Proto-Atayalic\"\
      ,\n\tnil,\n\t\"map-ata\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"map-bms\"] = {\n\t\"Banyumasan\",\n\t\"Q33219\",\n\t\"map\",\n\tscripts = Latn,\n}\n\nm[\"map-pro\"] = {\n\t\"Proto-Austronesian\",\n\t\"Q49230\",\n\t\"map\",\n\
      \ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"mkh-ban-pro\"] = {\n\t\"Proto-Bahnaric\",\n\tnil,\n\t\"mkh-ban\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"mkh-khm-pro\"] = {\n\t\"Proto-Khmuic\",\n\tnil,\n\t\"mkh-khm\"\
      ,\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"mkh-mkm\"] = {\n\t\"Middle Khmer\",\n\t\"Q25226861\",\n\t\"mkh\",\n\tscripts = {\"Latinx\", \"Khmr\"},\n\tancestors = {\"mkh-okm\"},\n}\n\nm[\"mkh-mmn\"] = {\n\t\"Middle Mon\",\n\tnil,\n\t\"mkh\"\
      ,\n\tscripts = {\"Latinx\", \"Mymr\"},\n\tancestors = {\"omx\"},\n}\n\nm[\"mkh-mvi\"] = {\n\t\"Middle Vietnamese\",\n\t\"Q9199\",\n\t\"mkh-vie\",\n\tscripts = {\"Latinx\", \"Hani\"},\n}\n\nm[\"mkh-okm\"] = {\n\t\"Old Khmer\",\n\t\"Q9205\",\n\t\"mkh\",\n\
      \tscripts = {\"Latinx\", \"Khmr\"},\n}\n\nm[\"mkh-pro\"] = { --This will be merged into 2015 aav-pro.\n\t\"Proto-Mon-Khmer\",\n\t\"Q7251859\",\n\t\"mkh\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"mkh-kat-pro\"] = {\n\t\"Proto-Katuic\"\
      ,\n\tnil,\n\t\"mkh-kat\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"mkh-pal-pro\"] = {\n\t\"Proto-Palaungic\",\n\tnil,\n\t\"mkh-pal\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"mkh-pea-pro\"] = {\n\t\"Proto-Pearic\"\
      ,\n\tnil,\n\t\"mkh-pea\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"mkh-vie-pro\"] = {\n\t\"Proto-Vietic\",\n\tnil,\n\t\"mkh-vie\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"mun-pro\"] = {\n\t\"Proto-Munda\"\
      ,\n\tnil,\n\t\"mun\",\n\totherNames = {\"Proto-Mundan\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"myn-chl\"] = { -- the stage after ''emy''\n\t\"Ch'olti'\",\n\t\"Q873995\",\n\t\"myn\",\n\totherNames = {\"Cholti\", \"Colonial Ch'olti'\"\
      , \"Colonial Cholti\"},\n\tscripts = {\"Latinx\"},\n}\n\nm[\"myn-pro\"] = {\n\t\"Proto-Mayan\",\n\t\"Q3321532\",\n\t\"myn\",\n\totherNames = {\"Proto-Maya\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-ala\"] = {\n\t\"Alazapa\"\
      ,\n\tnil,\n\totherNames = {\"Alasapa\", \"Pinto\"},\n\tscripts = Latn,\n}\n\nm[\"nai-bay\"] = {\n\t\"Bayogoula\",\n\t\"Q1563704\",\n\totherNames = {\"Bayougoula\", \"Bayou Goula\", \"Ischenoca\"}, -- tribe merged with \"Mougulasha\", \"Mongoulacha\", \"\
      Mugulasha\", \"Mougulasha\", \"Muglahsa\", \"Muglasha\", \"Muguasha\", \"Imongolosha\", \"Houma\", \"Acolapissa\"\n\tscripts = Latn,\n}\n\nm[\"nai-bvy\"] = {\n\t\"Buena Vista Yokuts\",\n\t\"Q4985474\",\n\t\"nai-yok\",\n\totherNames = {\"Tulamni-Hometwoli\"\
      , \"Tulamni\", \"Tulamne\", \"Tuolumne\", \"Tawitchi\", \"Hometwoli\", \"Taneshach\"},\n\tscripts = Latn,\n}\n\nm[\"nai-cal\"] = {\n\t\"Calusa\",\n\t\"Q51782\",\n\tscripts = Latn,\n}\n\nm[\"nai-chi\"] = {\n\t\"Chiquimulilla\",\n\t\"Q25339627\",\n\t\"nai-xin\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"nai-chu-pro\"] = {\n\t\"Proto-Chumash\",\n\tnil,\n\t\"nai-chu\",\n\totherNames = {\"Proto-Chumashan\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-cig\"] = {\n\t\"Ciguayo\",\n\t\"Q20741700\",\n\t\
      scripts = Latn,\n}\n\nm[\"nai-ckn-pro\"] = {\n\t\"Proto-Chinookan\",\n\tnil,\n\t\"nai-ckn\",\n\totherNames = {\"Proto-Chinook\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-dly\"] = {\n\t\"Delta Yokuts\",\n\tnil,\n\t\"nai-yok\"\
      ,\n\totherNames = {\"Far Northern Valley Yokuts\", \"Yachikumne\", \"Yachikumni\", \"Chulamni\", \"Lower San Joaquin\", \"Lakisamni\", \"Tawalimni\"},\n\tscripts = Latn,\n}\n\nm[\"nai-gsy\"] = {\n\t\"Gashowu\",\n\tnil,\n\t\"nai-yok\",\n\tscripts = Latn,\n\
      }\n\nm[\"nai-guz\"] = {\n\t\"Guazacapán\",\n\t\"Q19572028\",\n\t\"nai-xin\",\n\totherNames = {\"Guazacapan\"},\n\tscripts = Latn,\n}\n\nm[\"nai-hit\"] = {\n\t\"Hitchiti\",\n\t\"Q1542882\",\n\t\"nai-mus\",\n\totherNames = {\"Atcik-hata\", \"At-pasha-shliha\"\
      },\n\tscripts = Latn,\n}\n\nm[\"nai-ipa\"] = {\n\t\"Ipai\",\n\t\"Q3027474\",\n\t\"nai-yuc\",\n\totherNames = {\"'Iipay 'aa\", \"Northern Diegueño\", \"Diegueño\"},\n\tscripts = Latn,\n}\n\nm[\"nai-jtp\"] = {\n\t\"Jutiapa\",\n\tnil,\n\t\"nai-xin\",\n\t\
      otherNames = {\"Xutiapa\", \"Jalapa\", \"Xalapa\"},\n\tscripts = Latn,\n}\n\nm[\"nai-jum\"] = {\n\t\"Jumaytepeque\",\n\t\"Q25339626\",\n\t\"nai-xin\",\n\totherNames = {\"Jumaitepeque\", \"Jumaytepec\"},\n\tscripts = Latn,\n}\n\nm[\"nai-kat\"] = {\n\t\"\
      Kathlamet\",\n\t\"Q6376639\",\n\t\"nai-ckn\",\n\totherNames = {\"Kathlamet Chinook\"},\n\tscripts = Latn,\n}\n\nm[\"nai-knm\"] = {\n\t\"Konomihu\",\n\t\"Q3198734\",\n\t\"nai-shs\",\n\tscripts = Latn,\n}\n\nm[\"nai-kry\"] = {\n\t\"Kings River Yokuts\",\n\
      \t\"Q6413014\",\n\t\"nai-yok\",\n\totherNames = {\"Choinimni\", \"Choynimni\", \"Ayticha\", \"Kocheyali\", \"Ayitcha\", \"Michahay\", \"Chukaymina\", \"Chukaimina\"},\n\tscripts = Latn,\n}\n\nm[\"nai-kum\"] = {\n\t\"Kumeyaay\",\n\t\"Q4910139\",\n\t\"nai-yuc\"\
      ,\n\totherNames = {\"Kumiai\", \"Central Diegueño\", \"Diegueño\"},\n\tscripts = Latn,\n}\n\nm[\"nai-mac\"] = {\n\t\"Macoris\",\n\t\"Q21070851\",\n\totherNames = {\"Macorís\", \"Macorix\", \"Mazorij\", \"Mazorig\", \"Mazoriges\"},\n\tscripts = Latn,\n\
      }\n\nm[\"nai-mdu-pro\"] = {\n\t\"Proto-Maidun\",\n\tnil,\n\t\"nai-mdu\",\n\totherNames = {\"Proto-Maiduan\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-miz-pro\"] = {\n\t\"Proto-Mixe-Zoque\",\n\tnil,\n\t\"nai-miz\",\n\totherNames\
      \ = {\"Proto-Mixe-Zoquean\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-nao\"] = {\n\t\"Naolan\",\n\t\"Q6964594\",\n\tscripts = Latn,\n}\n\nm[\"nai-nrs\"] = {\n\t\"New River Shasta\",\n\t\"Q7011254\",\n\t\"nai-shs\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"nai-nvy\"] = {\n\t\"Northern Valley Yokuts\",\n\tnil,\n\t\"nai-yok\",\n\totherNames = {\"Chukchansi\", \"Kechayi\", \"Dumna\", \"Chawchila\", \"Noptinte\", \"Nopṭinṭe\", \"Nopthrinthre\", \"Nopchinchi\", \"Takin\"},\n\tscripts = Latn,\n\
      }\n\nm[\"nai-okw\"] = {\n\t\"Okwanuchu\",\n\t\"Q3350126\",\n\t\"nai-shs\",\n\tscripts = Latn,\n}\n\nm[\"nai-per\"] = {\n\t\"Pericú\",\n\t\"Q3375369\",\n\tscripts = Latn,\n}\n\nm[\"nai-pic\"] = {\n\t\"Picuris\",\n\t\"Q7191257\",\n\t\"nai-kta\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"nai-ply\"] = {\n\t\"Palewyami\",\n\t\"Q2387391\",\n\t\"nai-yok\",\n\totherNames = {\"Paleuyami\", \"Altinin\", \"Poso Creek\", \"Poso Creek Yokuts\"},\n\tscripts = Latn,\n}\n\nm[\"nai-pom-pro\"] = {\n\t\"Proto-Pomo\",\n\tnil,\n\t\"\
      nai-pom\",\n\totherNames = {\"Proto-Pomoan\"},\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"nai-qng\"] = {\n\t\"Quinigua\",\n\t\"Q36360\",\n\tscripts = Latn,\n}\n\nm[\"nai-sca-pro\"] = { -- NB 'sio-pro' \"Proto-Siouan\" which is Proto-Western\
      \ Siouan\n\t\"Proto-Siouan-Catawban\",\n\tnil,\n\t\"nai-sca\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-sin\"] = {\n\t\"Sinacantán\",\n\t\"Q24190249\",\n\t\"nai-xin\",\n\totherNames = {\"Sinacantan\", \"Zinacantán\", \"Zinacantan\"\
      },\n\tscripts = Latn,\n}\n\nm[\"nai-sln\"] = {\n\t\"Salvadoran Lenca\",\n\t\"Q3229434\",\n\t\"nai-len\",\n\tscripts = Latn,\n}\n\nm[\"nai-spt\"] = {\n\t\"Sahaptin\",\n\t\"Q3833015\",\n\t\"nai-shp\",\n\totherNames = {\"Shahaptin\"},\n\tscripts = Latn,\n\
      }\n\nm[\"nai-svy\"] = {\n\t\"Southern Valley Yokuts\",\n\tnil,\n\t\"nai-yok\",\n\totherNames = {\"Yawelmani\", \"Tachi\", \"Koyeti\", \"Nutunutu\", \"Chunut\", \"Wo'lasi\", \"Choynok\", \"Choinok\", \"Wechihit\"},\n\tscripts = Latn,\n}\n\nm[\"nai-tap\"\
      ] = {\n\t\"Tapachultec\",\n\t\"Q7684401\",\n\t\"nai-miz\",\n\totherNames = {\"Tapachulteca\", \"Tapachulteco\", \"Tapachula\"},\n\tscripts = Latn,\n}\n\nm[\"nai-taw\"] = {\n\t\"Tawasa\",\n\t\"Q7689233\",\n\tscripts = Latn,\n}\n\nm[\"nai-teq\"] = {\n\t\"\
      Tequistlatec\",\n\t\"Q2964454\",\n\t\"nai-tqn\",\n\totherNames = {\"Tequistlateco\", \"Tequistlateca\", \"Chontal\", \"Chontol of Oaxaca\", \"Oaxaca Chontal\", \"Oaxacan Chontal\"},\n\tscripts = Latn,\n}\n\nm[\"nai-tip\"] = {\n\t\"Tipai\",\n\t\"Q3027471\"\
      ,\n\t\"nai-yuc\",\n\totherNames = {\"Tipay\", \"Tiipai\", \"Tiipay\", \"Jamul Tiipay\", \"Southern Digueño\", \"Diegueño\"},\n\tscripts = Latn,\n}\n\nm[\"nai-tky\"] = {\n\t\"Tule-Kaweah Yokuts\",\n\t\"Q7851988\",\n\t\"nai-yok\",\n\totherNames = {\"Wikchamni\"\
      , \"Wukchamni\", \"Wukchumni\", \"Yawdanchi\"},\n\tscripts = Latn,\n}\n\nm[\"nai-tot-pro\"] = {\n\t\"Proto-Totozoquean\",\n\tnil,\n\t\"nai-tot\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-utn-pro\"] = {\n\t\"Proto-Utian\",\n\
      \tnil,\n\t\"nai-utn\",\n\totherNames = {\"Proto-Miwok-Costanoan\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-wai\"] = {\n\t\"Waikuri\",\n\t\"Q3118702\",\n\totherNames = {\"Guaycura\", \"Waicura\"},\n\tscripts = Latn,\n}\n\n\
      m[\"nai-yav\"] = {\n\t\"Yavapai\",\n\t\"Q34202\",\n\t\"nai-yuc\",\n\totherNames = {\"Kwevkepaya\", \"Wipukpaya\", \"Tolkepaya\", \"Yavepe\"},\n\tscripts = Latn,\n}\n\nm[\"nai-yup\"] = {\n\t\"Yupiltepeque\",\n\t\"Q25339628\",\n\t\"nai-xin\",\n\totherNames\
      \ = {\"Jupiltepeque\", \"Yupiltepec\", \"Jupiltepec\", \"Xupiltepec\"},\n\tscripts = Latn,\n}\n\nm[\"nds-de\"] = {\n\t\"German Low German\",\n\t\"Q25433\",\n\t\"gmw\",\n\tscripts = Latn,\n\tancestors = {\"nds\"},\n\twikimedia_codes = {\"nds\"},\n}\n\n\
      m[\"nds-nl\"] = {\n\t\"Dutch Low Saxon\",\n\t\"Q516137\",\n\t\"gmw\",\n\tscripts = Latn,\n\tancestors = {\"nds\"},\n}\n\nm[\"ngf-pro\"] = {\n\t\"Proto-Trans-New Guinea\",\n\tnil,\n\t\"ngf\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"nic-bco-pro\"\
      ] = {\n\t\"Proto-Benue-Congo\",\n\tnil,\n\t\"nic-bco\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"nic-bod-pro\"] = {\n\t\"Proto-Bantoid\",\n\tnil,\n\t\"nic-bod\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"nic-gur-pro\"]\
      \ = {\n\t\"Proto-Gur\",\n\tnil,\n\t\"nic-gur\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"nic-pro\"] = {\n\t\"Proto-Niger-Congo\",\n\tnil,\n\t\"nic\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"nic-ubg-pro\"] = {\n\t\"Proto-Ubangian\"\
      ,\n\tnil,\n\t\"nic-ubg\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"nub-har\"] = {\n\t\"Haraza\",\n\t\"Q19572059\",\n\t\"nub\",\n\totherNames = {\"Ḥarāza\"},\n\tscripts = {\"Arab\", \"Latn\"},\n}\n\nm[\"nub-pro\"] = {\n\t\"Proto-Nubian\"\
      ,\n\tnil,\n\t\"nub\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"omq-cha-pro\"] = {\n\t\"Proto-Chatino\",\n\tnil,\n\t\"omq-cha\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"omq-pro\"] = {\n\t\"Proto-Oto-Manguean\",\n\t\"Q33669\"\
      ,\n\t\"omq\",\n\totherNames = {\"Proto-Otomanguean\", \"Proto-Oto-Mangue\"},\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"omq-maz-pro\"] = {\n\t\"Proto-Mazatec\",\n\tnil,\n\t\"omq-maz\",\n\totherNames = {\"Proto-Mazatecan\"},\n\ttype = \"\
      reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"omq-mix-pro\"] = {\n\t\"Proto-Mixtecan\",\n\tnil,\n\t\"omq-mix\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"omq-otp-pro\"] = {\n\t\"Proto-Oto-Pamean\",\n\tnil,\n\t\"omq-otp\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = Latn,\n\tancestors = {\"omq-pro\"},\n}\n\nm[\"omq-teo\"] = {\n\t\"Teojomulco Chatino\",\n\t\"Q25340451\",\n\t\"omq-cha\",\n\tscripts = Latn,\n}\n\nm[\"omq-zap-pro\"] = {\n\t\"Proto-Zapotecan\",\n\tnil,\n\t\"omq-zap\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"omq-zpc-pro\"] = {\n\t\"Proto-Zapotec\",\n\tnil,\n\t\"omq-zpc\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"oto-otm-pro\"] = {\n\t\"Proto-Otomi\",\n\tnil,\n\t\"oto-otm\",\n\ttype = \"reconstructed\",\n\tscripts\
      \ = Latn,\n\tancestors = {\"oto-pro\"},\n}\n\nm[\"oto-pro\"] = {\n\t\"Proto-Otomian\",\n\tnil,\n\t\"oto\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n    ancestors = {\"omq-otp-pro\"},\n}\n\nm[\"paa-kom\"] = {\n\t\"Kómnzo\",\n\t\"Q18344310\",\n\t\
      \"paa-yam\",\n\totherNames = {\"Komnzo\", \"Kómnjo\", \"Komnjo\", \"Kamundjo\"},\n\tscripts = Latn,\n}\n\nm[\"paa-kwn\"] = {\n\t\"Kuwani\",\n\t\"Q6449056\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"paa-nun\"] = {\n\t\"Nungon\",\n\tnil,\n\t\"paa\",\n\t\
      scripts = Latn,\n}\n\nm[\"phi-din\"] = {\n\t\"Dinapigue Agta\",\n\t\"Q16945774\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"phi-kal-pro\"] = {\n\t\"Proto-Kalamian\",\n\tnil,\n\t\"phi-kal\",\n\totherNames = {\"Proto-Calamian\"},\n\ttype = \"reconstructed\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"phi-nag\"] = {\n\t\"Nagtipunan Agta\",\n\t\"Q16966111\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"phi-pro\"] = {\n\t\"Proto-Philippine\",\n\t\"Q18204898\",\n\t\"phi\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"\
      },\n}\n\nm[\"poz-abi\"] = {\n\t\"Abai\",\n\t\"Q19570729\",\n\t\"poz-san\",\n\totherNames = {\"Sembuak\", \"Tubu\"},\n\tscripts = Latn,\n}\n\nm[\"poz-bal\"] = {\n\t\"Baliledo\",\n\t\"Q4850912\",\n\t\"poz\",\n\tscripts = Latn,\n}\n\nm[\"poz-btk-pro\"] =\
      \ {\n\t\"Proto-Bungku-Tolaki\",\n\tnil,\n\t\"poz-btk\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-cet-pro\"] = {\n\t\"Proto-Central-Eastern Malayo-Polynesian\",\n\t\"Q2269883\",\n\t\"poz-cet\",\n\ttype = \"reconstructed\",\n\
      \tscripts = {\"Latinx\"},\n}\n\nm[\"poz-hce-pro\"] = {\n\t\"Proto-Halmahera-Cenderawasih\",\n\tnil,\n\t\"poz-hce\",\n\totherNames = {\"Proto-South Halmahera - West New Guinea\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-lgx-pro\"\
      ] = {\n\t\"Proto-Lampungic\",\n\tnil,\n\t\"poz-lgx\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-mcm-pro\"] = {\n\t\"Proto-Malayo-Chamic\",\n\tnil,\n\t\"poz-mcm\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\n\
      m[\"poz-mly-pro\"] = {\n\t\"Proto-Malayic\",\n\tnil,\n\t\"poz-mly\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-msa-pro\"] = {\n\t\"Proto-Malayo-Sumbawan\",\n\tnil,\n\t\"poz-msa\",\n\ttype = \"reconstructed\",\n\tscripts = {\"\
      Latinx\"},\n}\n\nm[\"poz-oce-pro\"] = {\n\t\"Proto-Oceanic\",\n\t\"Q141741\",\n\t\"poz-oce\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-pep-pro\"] = {\n\t\"Proto-Eastern Polynesian\",\n\tnil,\n\t\"poz-pep\",\n\totherNames =\
      \ {\"Proto-Eastern-Polynesian\", \"Proto-East Polynesian\", \"Proto-East-Polynesian\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-pnp-pro\"] = {\n\t\"Proto-Nuclear Polynesian\",\n\tnil,\n\t\"poz-pnp\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-pol-pro\"] = {\n\t\"Proto-Polynesian\",\n\t\"Q1658709\",\n\t\"poz-pol\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-pro\"] = {\n\t\"Proto-Malayo-Polynesian\",\n\t\"Q3832960\",\n\t\"\
      poz\",\n\totherNames = {\"Proto-Western Malayo-Polynesian\"}, -- Western is subsumed into general Proto-MP\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-ssw-pro\"] = {\n\t\"Proto-South Sulawesi\",\n\tnil,\n\t\"poz-ssw\",\n\ttype\
      \ = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-sus-pro\"] = {\n\t\"Proto-Sunda-Sulawesi\",\n\tnil,\n\t\"poz-sus\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-swa-pro\"] = {\n\t\"Proto-North Sarawak\",\n\tnil,\n\
      \t\"poz-swa\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"pqe-pro\"] = {\n\t\"Proto-Eastern Malayo-Polynesian\",\n\t\"Q2269883\",\n\t\"pqe\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"qfa-cka-pro\"] = {\n\t\
      \"Proto-Chukotko-Kamchatkan\",\n\t\"Q7251837\",\n\t\"qfa-cka\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"qfa-hur-pro\"] = {\n\t\"Proto-Hurro-Urartian\",\n\tnil,\n\t\"qfa-hur\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"\
      },\n}\n\nm[\"qfa-kms-pro\"] = {\n\t\"Proto-Kam-Sui\",\n\tnil,\n\t\"qfa-kms\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"qfa-kor-pro\"] = {\n\t\"Proto-Korean\",\n\t\"Q467883\",\n\t\"qfa-kor\",\n\ttype = \"reconstructed\",\n\tscripts = {\"\
      Latinx\"},\n}\n\nm[\"qfa-tak-pro\"] = {\n\t\"Proto-Tai-Kadai\",\n\tnil,\n\t\"qfa-tak\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"qfa-yen-pro\"] = {\n\t\"Proto-Yeniseian\",\n\t\"Q27639\",\n\t\"qfa-yen\",\n\ttype = \"reconstructed\",\n\t\
      scripts = {\"Latinx\"},\n}\n\nm[\"qfa-yuk-pro\"] = {\n\t\"Proto-Yukaghir\",\n\tnil,\n\t\"qfa-yuk\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"qwe-kch\"] = {\n\t\"Kichwa\",\n\t\"Q1740805\",\n\t\"qwe\",\n\totherNames = {\"Kichwa shimi\"\
      , \"Runashimi\", \"Runa\", \"Quichua\", \"Quecha\", \"Inga\", \"Chimborazo\", \"Imbabura Highland Kichwa\", \"Cañar Highland Quecha\", \"Quechua\"},\n\tscripts = Latn,\n}\n\nm[\"roa-ang\"] = {\n\t\"Angevin\",\n\t\"Q56782\",\n\t\"roa-oil\",\n\totherNames\
      \ = {\"Craonnais\", \"Baugeois\", \"Saumurois\"},\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"œ\" , \"'\"},\n\t\tto   = {\"a\"\t    , \"e\"\t  , \"i\"\t    , \"\
      o\"\t  , \"u\"\t    , \"y\"\t  , \"c\", \"ae\", \"oe\"}},\n}\n\nm[\"roa-bbn\"] = {\n\t\"Bourbonnais-Berrichon\",\n\tnil,\n\t\"roa-oil\",\n\totherNames = {\"Bourbonnais\", \"Berrichon\", \"Moulins\", \"Allier\", \"Nivernais\", \"Haut-Berrichon\", \"Bas-Berrichon\"\
      },\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"œ\" , \"'\"},\n\t\tto   = {\"a\"\t    , \"e\"\t  , \"i\"\t    , \"o\"\t  , \"u\"\t    , \"y\"\t  , \"c\", \"ae\"\
      , \"oe\"}},\n}\n\nm[\"roa-brg\"] = {\n\t\"Bourguignon\",\n\t\"Q508332\",\n\t\"roa-oil\",\n\totherNames = {\"Burgundian\", \"Bregognon\", \"Dijonnais\", \"Morvandiau\", \"Morvandeau\", \"Morvan\", \"Bourguignon-Morvandiau\", \"Mâconnais\", \"Brionnais\"\
      , \"Brionnais-Charolais\", \"Auxerrois\", \"Beaunois\", \"Langrois\", \"Valsaônois\", \"Verduno-Chalonnais\", \"Sédelocien\"},\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\"\
      , \"'\"},\n\t\tto   = {\"a\"     , \"e\"     , \"i\"     , \"o\"     , \"u\"     , \"y\"     , \"c\"}},\n}\n\nm[\"roa-cha\"] = {\n\t\"Champenois\",\n\t\"Q430018\",\n\t\"roa-oil\",\n\totherNames = {\"Bassignot\", \"Langrois\", \"Sennonais\", \"Vallage\"\
      , \"Troyen\", \"Briard\", \"Der\", \"Perthois\", \"Rémois\", \"Argonnais\", \"Porcien\", \"Ardennais\", \"Sugny\"},\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"\
      œ\" , \"'\"},\n\t\tto   = {\"a\"\t    , \"e\"\t  , \"i\"\t    , \"o\"\t  , \"u\"\t    , \"y\"\t  , \"c\", \"ae\", \"oe\"}},\n}\n\nm[\"roa-fcm\"] = {\n\t\"Franc-Comtois\",\n\t\"Q510561\",\n\t\"roa-oil\",\n\totherNames = {\"Frainc-Comtou\", \"Comtois\",\
      \ \"Jurassien\", \"Ajoulot\", \"Vâdais\", \"Taignon\", \"Bisontin\", \"Bousbot\"},\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"œ\" , \"'\"},\n\t\tto   = {\"a\"\
      \t    , \"e\"\t  , \"i\"\t    , \"o\"\t  , \"u\"\t    , \"y\"\t  , \"c\", \"ae\", \"oe\"}},\n}\n\nm[\"roa-gal\"] = {\n\t\"Gallo\",\n\t\"Q37300\",\n\t\"roa-oil\",\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòô\
      ö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"'\"},\n\t\tto   = {\"a\"     , \"e\"     , \"i\"     , \"o\"     , \"u\"     , \"y\"     , \"c\"}},\n}\n\nm[\"roa-leo\"] = {\n\t\"Leonese\",\n\t\"Q34108\",\n\t\"roa-ibe\",\n\tscripts = Latn,\n\tancestors = {\"roa-ole\"\
      },\n}\n\nm[\"roa-lor\"] = {\n\t\"Lorrain\",\n\t\"Q671198\",\n\t\"roa-oil\",\n\totherNames = {\"Gaumais\", \"Vosgien\", \"Welche\", \"Argonnais\", \"Longovicien\", \"Messin\", \"Nancéien\", \"Spinalien\", \"Déodatien\"},\n\tscripts = Latn,\n\tsort_key =\
      \ {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"œ\" , \"'\"},\n\t\tto   = {\"a\"\t    , \"e\"\t  , \"i\"\t    , \"o\"\t  , \"u\"\t    , \"y\"\t  , \"c\", \"ae\", \"oe\"}},\n}\n\nm[\"roa-oan\"] =\
      \ {\n\t\"Navarro-Aragonese\",\n\t\"Q2736184\",\n\t\"roa-ibe\",\n\totherNames = {\"Old Aragonese\"},\n\tscripts = Latn,\n}\n\nm[\"roa-oca\"] = {\n\t\"Old Catalan\",\n\t\"Q15478520\",\n\t\"roa\",\n\tscripts = Latn,\n\tancestors = {\"pro\"},\n\tsort_key =\
      \ {\n\t\tfrom = {\"à\", \"[èé]\", \"[íï]\", \"[òó]\", \"[úü]\", \"ç\", \"·\"},\n\t\tto   = {\"a\", \"e\"   , \"i\"   , \"o\"   , \"u\"   , \"c\"}},\n}\n\nm[\"roa-ole\"] = {\n\t\"Old Leonese\",\n\tnil,\n\t\"roa-ibe\",\n\tscripts = Latn,\n}\n\nm[\"roa-opt\"\
      ] = {\n\t\"Old Portuguese\",\n\t\"Q1072111\",\n\t\"roa-ibe\",\n\totherNames = {\"Galician-Portuguese\", \"Galician Portuguese\", \"Medieval Galician\"},\n\tscripts = Latn,\n}\n\nm[\"roa-orl\"] = {\n\t\"Orléanais\",\n\tnil,\n\t\"roa-oil\",\n\totherNames\
      \ = {\"Beauceron\", \"Solognot\", \"Gâtinais\", \"Blaisois\", \"Vendômois\"},\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"œ\" , \"'\"},\n\t\tto   = {\"a\"\t  \
      \  , \"e\"\t  , \"i\"\t    , \"o\"\t  , \"u\"\t    , \"y\"\t  , \"c\", \"ae\", \"oe\"}},\n}\n\nm[\"roa-poi\"] = {\n\t\"Poitevin-Saintongeais\",\n\t\"Q514123\",\n\t\"roa-oil\",\n\totherNames = {\"Poitevin\", \"Saintongeais\", \"Maraîchin\"},\n\tscripts\
      \ = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"œ\" , \"'\"},\n\t\tto   = {\"a\"\t    , \"e\"\t  , \"i\"\t    , \"o\"\t  , \"u\"\t    , \"y\"\t  , \"c\", \"ae\", \"oe\"}},\n\
      }\n\nm[\"roa-tar\"] = {\n\t\"Tarantino\",\n\t\"Q695526\",\n\t\"roa-itd\",\n\tscripts = Latn,\n\tancestors = {\"nap\"},\n\twikimedia_codes = {\"roa-tara\"},\n}\n\nm[\"roa-tou\"] = {\n\t\"Tourangeau\",\n\tnil,\n\t\"roa-oil\",\n\totherNames = {\"Tourangian\"\
      , \"Tourangean\"},\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"œ\" , \"'\"},\n\t\tto   = {\"a\"\t    , \"e\"\t  , \"i\"\t    , \"o\"\t  , \"u\"\t    , \"y\"\t\
      \  , \"c\", \"ae\", \"oe\"}},\n}\n\nm[\"sai-ajg\"] = {\n\t\"Ajagua\",\n\tnil,\n\totherNames = {\"Axagua\", \"Jagua\"},\n\tscripts = Latn,\n}\n\nm[\"sai-all\"] = {\n\t\"Allentiac\",\n\t\"Q19570789\",\n\t\"sai-hrp\",\n\totherNames = {\"Alyentiyak\", \"Huarpe\"\
      , \"Warpe\"},\n\tscripts = Latn,\n}\n\nm[\"sai-and\"] = { -- not to be confused with 'cbc' or 'ano'\n\t\"Andoquero\",\n\t\"Q16828359\",\n\t\"sai-wit\",\n\totherNames = {\"Miranya\", \"Miranha\", \"Miranha Carapana-Tapuya\", \"Miraña-Carapana-Tapuyo\",\
      \ \"Andokero\", \"Miranya-Karapana-Tapuyo\", \"Miraña\", \"Carapana\"},\n\tscripts = Latn,\n}\n\nm[\"sai-ayo\"] = {\n\t\"Ayomán\",\n\t\"Q16937754\",\n\t\"sai-jir\",\n\totherNames = {\"Ayoman\", \"Ayamán\", \"Ayaman\"},\n\tscripts = Latn,\n}\n\nm[\"sai-bae\"\
      ] = {\n\t\"Baenan\",\n\t\"Q3401998\",\n\totherNames = {\"Baenã\", \"Baenán\", \"Baena\"},\n\tscripts = Latn,\n}\n\nm[\"sai-bag\"] = {\n\t\"Bagua\",\n\t\"Q5390321\",\n\totherNames = {\"Patagón de Bagua\"},\n\tscripts = Latn,\n}\n\nm[\"sai-bet\"] = {\n\t\
      \"Betoi\",\n\t\"Q926551\",\n\t\"qfa-iso\",\n\totherNames = {\"Betoy\", \"Betoya\", \"Betoye\", \"Betoi-Jirara\", \"Jirara\"},\n\tscripts = Latn,\n}\n\nm[\"sai-cac\"] = {\n\t\"Cacán\",\n\t\"Q945482\",\n\totherNames = {\"Kakán\", \"Diaguita\", \"Cacan\"\
      , \"Kakan\", \"Calchaquí\", \"Chaka\", \"Kaka\", \"Kaká\", \"Caca\", \"Caca-Diaguita\", \"Catamarcano\", \"Capayán\", \"Capayana\", \"Yacampis\"},\n\tscripts = Latn,\n}\n\nm[\"sai-caq\"] = {\n\t\"Caranqui\",\n\t\"Q2937753\",\n\t\"sai-bar\",\n\totherNames\
      \ = {\"Cara\", \"Kara\"},\n\tscripts = Latn,\n}\n\nm[\"sai-cat\"] = {\n\t\"Catacao\",\n\t\"Q5051136\",\n\t\"sai-ctc\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"sai-chi\"] = {\n\t\"Chirino\",\n\t\"Q5390321\",\n\tscripts = Latn,\n}\n\nm[\"sai-chn\"] = {\n\t\"\
      Chaná\",\n\t\"Q5072718\",\n\t\"sai-crn\",\n\totherNames = {\"Chana\"},\n\tscripts = Latn,\n}\n\nm[\"sai-chp\"] = {\n\t\"Chapacura\",\n\t\"Q5072884\",\n\t\"sai-cpc\",\n\totherNames = {\"Txapacura\", \"Xapacura\", \"Guapore\", \"Šapakura\", \"Txapakura\"\
      , \"Txapakúra\", \"Xapakúra\"},\n\tscripts = Latn,\n}\n\nm[\"sai-chr\"] = {\n\t\"Charrua\",\n\t\"Q5086680\",\n\t\"sai-crn\",\n\totherNames = {\"Charrúa\", \"Charruá\"},\n\tscripts = Latn,\n}\n\nm[\"sai-chu\"] = {\n\t\"Churuya\",\n\t\"Q5118339\",\n\t\"\
      sai-guh\",\n\totherNames = {\"Churoya\"},\n\tscripts = Latn,\n}\n\nm[\"sai-cmg\"] = {\n\t\"Comechingon\",\n\t\"Q6644203\",\n\totherNames = {\"Comechingón\", \"Comechingona\", \"Comechingone\"},\n\tscripts = Latn,\n}\n\nm[\"sai-cno\"] = {\n\t\"Chono\",\n\
      \t\"Q5104704\",\n\totherNames = {\"Chonos\", \"Caucau\"},\n\tscripts = Latn,\n}\n\nm[\"sai-cnr\"] = {\n\t\"Cañari\",\n\t\"Q5055572\",\n\totherNames = {\"Cañar\"},\n\tscripts = Latn,\n}\n\nm[\"sai-coe\"] = {\n\t\"Coeruna\",\n\t\"Q6425639\",\n\t\"sai-wit\"\
      ,\n\totherNames = {\"Koeruna\"},\n\tscripts = Latn,\n}\n\nm[\"sai-col\"] = {\n\t\"Colán\",\n\t\"Q5141893\",\n\t\"sai-ctc\",\n\totherNames = {\"Colan\"},\n\tscripts = {\"Latinx\"},\n}\n\nm[\"sai-cop\"] = {\n\t\"Copallén\",\n\t\"Q5390321\",\n\tscripts =\
      \ Latn,\n}\n\nm[\"sai-crd\"] = {\n\t\"Coroado Puri\",\n\t\"Q24191321\",\n\t\"sai-mje\",\n\totherNames = {\"Coroado\"},\n\tscripts = Latn,\n}\n\nm[\"sai-ctq\"] = {\n\t\"Catuquinaru\",\n\t\"Q16858455\",\n\totherNames = {\"Catuquinarú\", \"Katukinaru\"},\n\
      \tscripts = Latn,\n}\n\nm[\"sai-cul\"] = {\n\t\"Culli\",\n\t\"Q2879660\",\n\totherNames = {\"Culle\", \"Kulyi\", \"Ilinga\", \"Linga\"},\n\tscripts = Latn,\n}\n\nm[\"sai-cva\"] = {\n\t\"Cueva\",\n\tnil,\n\tscripts = Latn,\n}\n\nm[\"sai-esm\"] = {\n\t\"\
      Esmeralda\",\n\t\"Q3058083\",\n\totherNames = {\"Esmeraldeño\", \"Atacame\", \"Takame\"},\n\tscripts = Latn,\n}\n\nm[\"sai-ewa\"] = {\n\t\"Ewarhuyana\",\n\t\"Q16898104\",\n\tscripts = Latn,\n}\n\nm[\"sai-gay\"] = {\n\t\"Gayón\",\n\t\"Q5528902\",\n\t\"\
      sai-jir\",\n\totherNames = {\"Gayon\"},\n\tscripts = Latn,\n}\n\nm[\"sai-gmo\"] = {\n\t\"Guamo\",\n\t\"Q5613495\",\n\totherNames = {\"Wamo\", \"Santa Rosa\", \"San Jose\", \"Barinas\", \"Guamotey\", \"Guama\"},\n\tscripts = Latn,\n}\n\nm[\"sai-gue\"] =\
      \ {\n\t\"Güenoa\",\n\t\"Q5626799\",\n\t\"sai-crn\",\n\totherNames = {\"Guenoa\"},\n\tscripts = Latn,\n}\n\nm[\"sai-hau\"] = {\n\t\"Haush\",\n\t\"Q3128376\",\n\t\"sai-cho\",\n\totherNames = {\"Manek'enk\"},\n\tscripts = Latn,\n}\n\nm[\"sai-jko\"] = {\n\t\
      \"Jeikó\",\n\t\"Q6176527\",\n\t\"sai-mje\",\n\totherNames = {\"Geicó\", \"Jeicó\", \"Jaikó\", \"Geikó\", \"Yeikó\", \"Jeiko\", \"Geico\", \"Jeico\", \"Jaiko\", \"Geiko\", \"Yeiko\", \"Eyco\"},\n\tscripts = Latn,\n}\n\nm[\"sai-jrj\"] = {\n\t\"Jirajira\"\
      ,\n\tnil,\n\t\"sai-jir\",\n\tscripts = Latn,\n}\n\nm[\"sai-kat\"] = { -- contrast xoo, kzw, sai-xoc\n\t\"Katembri\",\n\t\"Q6375925\",\n\totherNames = {\"Catrimbi\", \"Catembri\", \"Kariri de Mirandela\", \"Mirandela\", \"Kariri\", \"Kiriri\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"sai-mal\"] = {\n\t\"Malalí\",\n\t\"Q6741212\",\n\totherNames = {\"Malali\"},\n\tscripts = Latn,\n}\n\nm[\"sai-mar\"] = {\n\t\"Maratino\",\n\t\"Q6755055\",\n\tscripts = Latn,\n}\n\nm[\"sai-mat\"] = {\n\t\"Matanawi\",\n\t\"Q6786047\"\
      ,\n\totherNames = {\"Matanauí\", \"Matanaui\", \"Matanawü\", \"Mitandua\", \"Moutoniway\"},\n\tscripts = Latn,\n}\n\nm[\"sai-mcn\"] = {\n\t\"Mocana\",\n\t\"Q3402048\",\n\totherNames = {\"Mokana\"},\n\tscripts = Latn,\n}\n\nm[\"sai-men\"] = {\n\t\"Menien\"\
      ,\n\t\"Q16890110\",\n\t\"sai-mje\",\n\totherNames = {\"Menién\"},\n\tscripts = Latn,\n}\n\nm[\"sai-mil\"] = {\n\t\"Millcayac\",\n\t\"Q19573012\",\n\t\"sai-hrp\",\n\totherNames = {\"Milykayak\", \"Huarpe\", \"Warpe\"},\n\tscripts = Latn,\n}\n\nm[\"sai-mlb\"\
      ] = {\n\t\"Malibu\",\n\t\"Q3402048\",\n\totherNames = {\"Malibú\", \"Malebú\"},\n\tscripts = Latn,\n}\n\nm[\"sai-msk\"] = {\n\t\"Masakará\",\n\t\"Q6782426\",\n\t\"sai-mje\",\n\totherNames = {\"Masakara\", \"Masacará\", \"Masacara\"},\n\tscripts = Latn,\n\
      }\n\nm[\"sai-muc\"] = {\n\t\"Mucuchí\",\n\tnil,\n\totherNames = {\"Mucuchi\", \"Mokochi\", \"Mocochí\", \"Mirripú\", \"Maripú\", \"Mucuchí-Maripú\"},\n\tscripts = Latn,\n}\n\nm[\"sai-mue\"] = {\n\t\"Muellama\",\n\t\"Q16886936\",\n\t\"sai-bar\",\n\totherNames\
      \ = {\"Muellamués\"},\n\tscripts = Latn,\n}\n\nm[\"sai-muz\"] = {\n\t\"Muzo\",\n\t\"Q6644203\",\n\tscripts = Latn,\n}\n\nm[\"sai-mys\"] = {\n\t\"Maynas\",\n\t\"Q16919393\",\n\totherNames = {\"Mayna\", \"Maina\", \"Rimachu\"},\n\tscripts = Latn,\n}\n\n\
      m[\"sai-nat\"] = {\n\t\"Natú\",\n\t\"Q9006749\",\n\totherNames = {\"Natu\", \"Peagaxinan\"},\n\tscripts = Latn,\n}\n\nm[\"sai-opo\"] = {\n\t\"Opón\",\n\t\"Q7099152\",\n\t\"sai-car\",\n\totherNames = {\"Opon\", \"Opón-Karare\", \"Opón-Carare\", \"Carare\"\
      , \"Carare-Opón\"},\n\tscripts = Latn,\n}\n\nm[\"sai-oto\"] = {\n\t\"Otomaco\",\n\t\"Q16879234\",\n\t\"sai-otm\",\n\totherNames = {\"Otomako\", \"Otomacan\", \"Otomac\", \"Otomak\"},\n\tscripts = Latn,\n}\n\nm[\"sai-pal\"] = {\n\t\"Palta\",\n\t\"Q3042978\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"sai-pam\"] = {\n\t\"Pamigua\",\n\t\"Q5908689\",\n\t\"sai-otm\",\n\totherNames = {\"Pamiwa\"},\n\tscripts = Latn,\n}\n\nm[\"sai-par\"] = {\n\t\"Paratió\",\n\t\"Q16890038\",\n\totherNames = {\"Paratio\", \"Prarto\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"sai-pnz\"] = {\n\t\"Panzaleo\",\n\t\"Q3123275\",\n\totherNames = {\"Pansaleo\"},\n\tscripts = Latn,\n}\n\nm[\"sai-prh\"] = {\n\t\"Puruhá\",\n\t\"Q3410994\",\n\tscripts = Latn,\n}\n\nm[\"sai-ptg\"] = {\n\t\"Patagón\",\n\tnil,\n\totherNames\
      \ = {\"Patagón de Perico\"},\n\tscripts = Latn,\n}\n\nm[\"sai-pur\"] = {\n\t\"Purukotó\",\n\t\"Q7261622\",\n\t\"sai-car\",\n\totherNames = {\"Purukoto\", \"Purucotó\", \"Purucoto\"},\n\tscripts = Latn,\n}\n\nm[\"sai-pyg\"] = {\n\t\"Payaguá\",\n\t\"Q7156643\"\
      ,\n\t\"sai-guc\",\n\totherNames = {\"Payawá\", \"Payagua\"},\n\tscripts = Latn,\n}\n\nm[\"sai-qmb\"] = {\n\t\"Quimbaya\",\n\t\"Q7272043\",\n\totherNames = {\"Kimbaya\", \"Quindío\", \"Quindio\", \"Quindo\"},\n\tscripts = Latn,\n}\n\nm[\"sai-qtm\"] = {\n\
      \t\"Quitemo\",\n\t\"Q7272651\",\n\t\"sai-cpc\",\n\totherNames = {\"Quitemoca\"},\n\tscripts = Latn,\n}\n\nm[\"sai-rab\"] = {\n\t\"Rabona\",\n\t\"Q6644203\",\n\tscripts = Latn,\n}\n\nm[\"sai-ram\"] = {\n\t\"Ramanos\",\n\t\"Q16902824\",\n\tscripts = Latn,\n\
      }\n\nm[\"sai-sac\"] = {\n\t\"Sácata\",\n\t\"Q5390321\",\n\totherNames = {\"Sacata\", \"Zácata\", \"Chillao\"},\n\tscripts = Latn,\n}\n\nm[\"sai-san\"] = {\n\t\"Sanaviron\",\n\t\"Q16895999\",\n\totherNames = {\"Sanavirón\", \"Sanabirón\", \"Sanabiron\"\
      , \"Sanavirona\", \"Zanavirona\"},\n\tscripts = Latn,\n}\n\nm[\"sai-sap\"] = {\n\t\"Sapará\",\n\t\"Q7420922\",\n\t\"sai-car\",\n\totherNames = {\"Zapará\", \"Zapara\"},\n\tscripts = Latn,\n}\n\nm[\"sai-sec\"] = {\n\t\"Sechura\",\n\t\"Q7442912\",\n\totherNames\
      \ = {\"Sek\", \"Sec\"},\n\tscripts = Latn,\n}\n\nm[\"sai-sin\"] = {\n\t\"Sinúfana\",\n\t\"Q7525275\",\n\totherNames = {\"Cenúfana\", \"Zenúfana\", \"Cinifaná\", \"Sinufana\", \"Sinú\", \"Cenú\", \"Zenú\", \"Finzenú\", \"Fincenú\", \"Pancenú\", \"Sutagao\"\
      },\n\tscripts = Latn,\n}\n\nm[\"sai-tab\"] = {\n\t\"Tabancale\",\n\t\"Q5390321\",\n\totherNames = {\"Aconipa\"},\n\tscripts = Latn,\n}\n\nm[\"sai-tal\"] = {\n\t\"Tallán\",\n\t\"Q16910468\",\n\totherNames = {\"Atalán\", \"Tallan\", \"Tallanca\", \"Atalan\"\
      , \"Sek\"},\n\tscripts = Latn,\n}\n\nm[\"sai-teu\"] = {\n\t\"Teushen\",\n\t\"Q3519243\",\n\totherNames = {\"Tehues\", \"Teuéx\"},\n\tscripts = Latn,\n}\n\nm[\"sai-tim\"] = {\n\t\"Timote\",\n\tnil,\n\totherNames = {\"Cuica\", \"Timote-Cuica\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"sai-tpr\"] = {\n\t\"Taparita\",\n\t\"Q7684460\",\n\t\"sai-otm\",\n\totherNames = {\"Taparito\"},\n\tscripts = Latn,\n}\n\nm[\"sai-trr\"] = {\n\t\"Tarairiú\",\n\t\"Q7685313\",\n\totherNames = {\"Caratiú\"},\n\tscripts = Latn,\n}\n\n\
      m[\"sai-wai\"] = {\n\t\"Waitaká\",\n\t\"Q16918610\",\n\totherNames = {\"Waitaka\", \"Waitacá\", \"Waitaca\", \"Goytacá\", \"Goitacá\", \"Guaitacá\", \"Guiatacá\", \"Guiatacás\", \"Goiatacá\", \"Goiatacás\", \"Guaiatacá\", \"Goytacaz\", \"Goitacaz\", \"\
      Goyataca\", \"Aitacaz\", \"Uetacaz\", \"Uetacá\", \"Outacá\", \"Ouetacá\", \"Eutacá\", \"Itacaz\", \"Vaitacá\"},\n\tscripts = Latn,\n}\n\nm[\"sai-way\"] = {\n\t\"Wayumará\",\n\tnil,\n\t\"sai-car\",\n\totherNames = {\"Wayumara\", \"Wajumará\", \"Wajumara\"\
      , \"Azumara\", \"Guimara\"},\n\tscripts = Latn,\n}\n\nm[\"sai-wnm\"] = {\n\t\"Wanham\",\n\t\"Q16879440\",\n\t\"sai-cpc\",\n\totherNames = {\"Wañam\", \"Wanyam\", \"Huanyam\", \"Uanham\", \"Abitana\"},\n\tscripts = Latn,\n}\n\nm[\"sai-xoc\"] = { -- contrast\
      \ xoo, kzw, sai-kat\n\t\"Xocó\",\n\t\"Q12953620\",\n\totherNames = {\"Xoco\", \"Chocó\", \"Shokó\", \"Shoko\", \"Shocó\", \"Shoco\", \"Choco\", \"Chocaz\", \"Kariri-Xocó\", \"Kariri-Xoco\", \"Kariri-Shoko\", \"Cariri-Chocó\", \"Xukuru-Kariri\", \"Xucuru-Kariri\"\
      , \"Xucuru-Cariri\", \"Xukurú-Kirirí\"},\n\tscripts = Latn,\n}\n\nm[\"sai-yao\"] = {\n\t\"Yao (South America)\",\n\tnil,\n\t\"sai-car\",\n\totherNames = {\"Yao\", \"Jaoi\", \"Yaoi\", \"Yaio\"},\n\tscripts = Latn,\n}\n\nm[\"sai-yar\"] = { -- not the same\
      \ family as 'suy'\n\t\"Yarumá\",\n\t\"Q3505859\",\n\t\"sai-car\",\n\totherNames = {\"Yaruma\"},\n\tscripts = Latn,\n}\n\nm[\"sai-yri\"] = {\n\t\"Yuri\",\n\tnil,\n\t\"sai-tyu\",\n\totherNames = {\"Jurí\"},\n\tscripts = Latn,\n}\n\nm[\"sai-yup\"] = {\n\t\
      \"Yupua\",\n\t\"Q8061430\",\n\t\"sai-tuc\",\n\totherNames = {\"Yupuá\", \"Yupúa\", \"Jupua\", \"Jupuá\", \"Jupúa\", \"Hiupiá\", \"Yupuá-Duriña\", \"Duriña\"},\n\tscripts = Latn,\n}\n\nm[\"sai-yur\"] = {\n\t\"Yurumanguí\",\n\t\"Q1281291\",\n\totherNames\
      \ = {\"Yurumangui\", \"Yurimangí\", \"Yurimangi\", \"Yurimanguí\", \"Yurimangui\"},\n\tscripts = Latn,\n}\n\nm[\"sal-pro\"] = {\n\t\"Proto-Salish\",\n\tnil,\n\t\"sal\",\n\totherNames = {\"Proto-Salishan\"},\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n\
      }\n\nm[\"sem-amm\"] = {\n\t\"Ammonite\",\n\t\"Q279181\",\n\t\"sem-can\",\n\tscripts = {\"Phnx\"},\n\ttranslit_module = \"Phnx-translit\",\n}\n\nm[\"sem-amo\"] = {\n\t\"Amorite\",\n\t\"Q35941\",\n\t\"sem-nwe\",\n\totherNames = {\"Amoritic\"},\n}\n\nm[\"\
      sem-cha\"] = {\n\t\"Chaha\",\n\tnil,\n\totherNames = {\"Cheha\"},\n\tscripts = {\"Ethi\"},\n\ttranslit_module = \"Ethi-translit\",\n}\n\nm[\"sem-dad\"] = {\n\t\"Dadanitic\",\n\t\"Q21838040\",\n\t\"sem-cen\",\n\totherNames = {\"Dadanite\", \"Lihyanite\"\
      , \"Lihyanitic\"},\n\tscripts = {\"Narb\", \"Latn\"}, -- last one if we want entries for transliterations\n}\n\nm[\"sem-dum\"] = {\n\t\"Dumaitic\",\n\tnil,\n\t\"sem-cen\",\n\tscripts = {\"Narb\", \"Latn\"}, -- last one if we want entries for transliterations\n\
      }\n\nm[\"sem-has\"] = {\n\t\"Hasaitic\",\n\t\"Q3541433\",\n\t\"sem-cen\",\n}\n\nm[\"sem-him\"] = {\n\t\"Himyaritic\",\n\t\"Q35604\",\n\t\"sem\",\n\totherNames = {\"Himyarite\", \"Himyari\", \"Himyaric\", \"Himyar\"},\n\tscripts = {\"Arab\", \"Sarb\", \"\
      Latn\"}, -- last one if we want entries for transliterations\n}\n\nm[\"sem-his\"] = {\n\t\"Hismaic\",\n\t\"Q22948260\",\n\t\"sem-cen\",\n\totherNames = {\"Thamudic E\"},\n\tscripts = {\"Narb\", \"Latn\"}, -- last one if we want entries for transliterations\n\
      }\n\nm[\"sem-mhr\"] = {\n\t\"Muher\",\n\t\"Q33743\",\n\t\"sem-eth\",\n\totherNames = {\"Muher Gurage\", \"Muxar\"},\n\tscripts = Latn,\n}\n\nm[\"sem-pro\"] = {\n\t\"Proto-Semitic\",\n\t\"Q1658554\",\n\t\"sem\",\n\ttype = \"reconstructed\",\n\tscripts =\
      \ {\"Latinx\"},\n}\n\nm[\"sem-saf\"] = {\n\t\"Safaitic\",\n\t\"Q472586\",\n\t\"sem-cen\",\n\tscripts = {\"Narb\", \"Latn\"}, -- last one if we want entries for transliterations\n}\n\nm[\"sem-srb\"] = {\n\t\"Old South Arabian\",\n\t\"Q35025\",\n\t\"sem-osa\"\
      ,\n\tscripts = {\"Sarb\"},\n}\n\nm[\"sem-tay\"] = {\n\t\"Taymanitic\",\n\t\"Q24912301\",\n\t\"sem-cen\",\n\totherNames = {\"Taymanite\", \"Thamudic A\"},\n\tscripts = {\"Narb\", \"Latn\"}, -- last one if we want entries for transliterations\n}\n\nm[\"\
      sem-tha\"] = {\n\t\"Thamudic\",\n\t\"Q843030\",\n\t\"sem-cen\",\n}\n\nm[\"sio-pro\"] = { -- NB this is not Proto-Siouan-Catawban 'nai-sca-pro'\n\t\"Proto-Siouan\",\n\t\"Q34181\",\n\t\"sio\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\n\
      m[\"sit-bok\"] = {\n\t\"Bokar\",\n\t\"Q4938727\",\n\t\"sit\",\n\totherNames = {\"Ramo\", \"Pailibo\"},\n\tscripts = Latn,\n}\n\nm[\"sit-cha\"] = {\n\t\"Chairel\",\n\t\"Q5068066\",\n\t\"sit\",\n\tscripts = Latn,\n}\n\nm[\"sit-gkh\"] = {\n\t\"Gokhy\",\n\t\
      \"Q5578069\",\n\t\"sit\",\n\totherNames = {\"Gɔkhý\", \"Gɔkhy\"},\n\tscripts = Latn,\n}\n\nm[\"sit-jap\"] = {\n\t\"Japhug\",\n\t\"Q3162245\",\n\t\"sit\",\n\totherNames = {\"Chabao\", \"rGyalrong\", \"Rgyalrong\", \"Jiarong\", \"Gyarung\", \"Kuru\"},\n\t\
      scripts = Latn,\n}\n\nm[\"sit-liz\"] = {\n\t\"Lizu\",\n\t\"Q6660653\",\n\t\"sit-qia\",\n\tscripts = Latn, -- and Ersu Shaba\n}\n\nm[\"sit-mor\"] = {\n\t\"Moran\",\n\t\"Q6909216\",\n\t\"sit\",\n\totherNames = {\"Morān\"},\n\tscripts = Latn,\n}\n\nm[\"sit-prn\"\
      ] = {\n\t\"Puiron\",\n\t\"Q7259048\",\n\t\"sit\",\n}\n\nm[\"sit-pro\"] = {\n\t\"Proto-Sino-Tibetan\",\n\t\"Q45961\",\n\t\"sit\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"sit-sit\"] = {\n\t\"Situ\",\n\t\"Q19840830\",\n\t\"sit\",\n\totherNames\
      \ = {\"Eastern rGyalrong\", \"rGyalrong\", \"Rgyalrong\", \"rGyalrongic\", \"Gyalrong\", \"Gyarong\", \"rGyarong\", \"Gyarung\", \"Jiarong\", \"Jiarongyu\", \"Jyarong\", \"Jyarung\", \"Yelong\", \"Kuru\"},\n\tscripts = Latn,\n}\n\nm[\"sit-tan-pro\"] =\
      \ {\n\t\"Proto-Tani\",\n\tnil,\n\t\"sit-tan\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\t-- needs verification\n}\n\nm[\"sit-tgm\"] = {\n\t\"Tangam\",\n\t\"Q17041370\",\n\t\"sit-tan\",\n\tscripts = Latn,\n}\n\nm[\"sit-tos\"] = {\n\t\"Tosu\",\n\t\
      \"Q7827899\",\n\t\"sit-qia\",\n\tscripts = Latn, -- also Ersu Shaba\n}\n\nm[\"sit-tsh\"] = {\n\t\"Tshobdun\",\n\t\"Q19840950\",\n\t\"sit\",\n\totherNames = {\"Caodeng\", \"Sidaba\", \"rGyalrong\", \"Rgyalrong\", \"Jiarong\", \"Gyarung\", \"Kuru\"},\n\t\
      scripts = Latn,\n}\n\nm[\"sit-zbu\"] = {\n\t\"Zbu\",\n\t\"Q19841106\",\n\t\"sit\",\n\totherNames = {\"Ribu\", \"Rdzong'bur\", \"Rdzongmbur\", \"Showu\", \"rGyalrong\", \"Rgyalrong\", \"Jiarong\", \"Gyarung\", \"Kuru\"},\n\tscripts = Latn,\n}\n\nm[\"sla-pro\"\
      ] = {\n\t\"Proto-Slavic\",\n\t\"Q747537\",\n\t\"sla\",\n\totherNames = {\"Common Slavic\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tentry_name = {\n\t\tfrom = {\"[ÀÁÃĀȀȂ]\", \"[àáãāȁȃ]\", \"[ÈÉẼĒȄȆ]\", \"[èéẽēȅȇ]\", \"[ÌÍĨĪȈȊ]\", \"\
      [ìíĩīȉȋ]\", \"[ÒÓÕŌȌȎ]\", \"[òóõōȍȏ]\", \"[ÙÚŨŪȔȖ]\", \"[ùúũūȕȗ]\", \"[ỲÝỸȲ]\", \"[ỳýỹȳ]\", \"[Ǭ]\", \"[ǭ]\", GRAVE, ACUTE, TILDE, MACRON, DGRAVE, INVBREVE},\n\t\tto   = {\"A\", \"a\", \"E\", \"e\", \"I\", \"i\", \"O\", \"o\", \"U\", \"u\", \"Y\", \"y\"\
      , \"Ǫ\", \"ǫ\"}},\n}\n\nm[\"smi-pro\"] = {\n\t\"Proto-Samic\",\n\t\"Q7251862\",\n\t\"smi\",\n\totherNames = {\"Proto-Sami\"},\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"ā\", \"č\" , \"δ\", \"[ëē]\", \"ŋ\" , \"ń\" , \"\
      ō\", \"š\" , \"θ\" , \"%([^()]+%)\"},\n\t\tto   = {\"a\", \"c²\", \"d\", \"e\"   , \"n²\", \"n³\", \"o\", \"s²\", \"t²\"} },\n}\n\nm[\"son-pro\"] = {\n\t\"Proto-Songhay\",\n\tnil,\n\t\"son\",\n\totherNames = {\"Proto-Songhai\"},\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n}\n\nm[\"sqj-pro\"] = {\n\t\"Proto-Albanian\",\n\t\"Q18210846\",\n\t\"sqj\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"syd-fne\"] = {\n\t\"Forest Nenets\",\n\t\"Q1295107\",\n\t\"syd\",\n\tscripts =\
      \ {\"Cyrl\"},\n\tentry_name = {\n\t\tfrom = {\"Ӑ\", \"ӑ\", \"[ӖЀ]\", \"[ӗѐ]\", \"[ӢЍ]\", \"[ӣѝ]\", \"Ӯ\", \"ӯ\", BREVE, MACRON, GRAVE, ACUTE, DOTABOVE},\n\t\tto   = {\"А\", \"а\", \"Е\",    \"е\",    \"И\",    \"и\",    \"У\", \"у\"}},\n}\n\nm[\"syd-pro\"\
      ] = {\n\t\"Proto-Samoyedic\",\n\t\"Q7251863\",\n\t\"syd\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"tai-pro\"] = {\n\t\"Proto-Tai\",\n\t\"Q6583709\",\n\t\"tai\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"tai-swe-pro\"\
      ] = {\n\t\"Proto-Southwestern Tai\",\n\tnil,\n\t\"tai-swe\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"tbq-bdg-pro\"] = {\n\t\"Proto-Bodo-Garo\",\n\tnil,\n\t\"tbq-bdg\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\
      }\n\nm[\"tbq-kuk-pro\"] = {\n\t\"Proto-Kuki-Chin\",\n\tnil,\n\t\"tbq-kuk\",\n\totherNames = {\"Proto-Kukish\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"tbq-laz\"] = {\n\t\"Laze\",\n\t\"Q17007626\",\n\t\"tbq\",\n\totherNames =\
      \ {\"Lare\", \"Shuitianhua\"},\n}\n\nm[\"tbq-lol-pro\"] = {\n\t\"Proto-Loloish\",\n\t\"Q7251855\",\n\t\"tbq-lol\",\n\totherNames = {\"Proto-Nisoic\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"tbq-plg\"] = {\n\t\"Pai-lang\",\n\t\
      \"Q2879843\",\n\t\"tbq\",\n\totherNames = {\"Bai-lang\", \"Pailang\", \"Bailang\"},\n\tscripts = {\"Hani\", \"Latinx\"},\n}\n\nm[\"tbq-pro\"] = {\n\t\"Proto-Tibeto-Burman\",\n\t\"Q7251864\",\n\t\"tbq\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"\
      },\n}\n\nm[\"trk-dkh\"] = {\n\t\"Dukhan\",\n\tnil,\n\totherNames = {\"Dukha\"},\n\tscripts = {\"Latn\", \"Cyrl\", \"Mong\"},\n}\n\nm[\"trk-mmk\"] = {\n\t\"Mamluk-Kipchak\",\n\tnil,\n\t\"trk-kip\",\n\tscripts = {\"Latn\", \"Arab\"},\n}\n\nm[\"trk-oat\"\
      ] = {\n\t\"Old Anatolian Turkish\",\n\t\"Q7083390\",\n\t\"trk-ogz\",\n\tscripts = {\"ota-Arab\"},\n\tancestors = {\"trk-ogz-pro\"},\n}\n\nm[\"trk-pro\"] = {\n\t\"Proto-Turkic\",\n\t\"Q3657773\",\n\t\"trk\",\n\ttype = \"reconstructed\",\n\tscripts = {\"\
      Latinx\"},\n}\n\nm[\"tup-gua-pro\"] = {\n\t\"Proto-Tupi-Guarani\",\n\tnil,\n\t\"tup-gua\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"tup-kab\"] = {\n\t\"Kabishiana\",\n\t\"Q15302988\",\n\t\"tup\",\n\totherNames = {\"Kabixiana\"\
      , \"Cabixiana\", \"Cabishiana\", \"Kapishana\", \"Capishana\", \"Kapišana\", \"Cabichiana\", \"Capichana\", \"Capixana\"},\n\tscripts = Latn,\n}\n\nm[\"tup-pro\"] = {\n\t\"Proto-Tupian\",\n\t\"Q10354700\",\n\t\"tup\",\n\ttype = \"reconstructed\",\n\tscripts\
      \ = {\"Latinx\"},\n}\n\nm[\"tuw-pro\"] = {\n\t\"Proto-Tungusic\",\n\tnil,\n\t\"tuw\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"tuw-sol\"] = {\n\t\"Solon\",\n\t\"Q30004\",\n\t\"tuw\",\n}\n\nm[\"und-isa\"] = {\n\t\"Isaurian\",\n\t\
      \"Q16956868\",\n\t\"ine\",\n--\tscripts = {\"Xsux\", \"Hluw\", \"Latn\"},\n}\n\nm[\"und-kas\"] = {\n\t\"Kassite\",\n\t\"Q35612\",\n\totherNames = {\"Cassite\", \"Kassitic\", \"Kaššite\"},\n\tscripts = {\"Xsux\"},\n}\n\nm[\"und-mil\"] = {\n\t\"Milang\"\
      ,\n\t\"Q6850761\",\n\tscripts = {\"Deva\", \"Latn\"},\n}\n\nm[\"und-mmd\"] = {\n\t\"Mimi of Decorse\",\n\t\"Q6862206\",\n\totherNames = {\"Mimi of Gaudefroy-Demombynes\", \"Mimi-D\"},\n\tscripts = Latn,\n}\n\nm[\"und-mmn\"] = {\n\t\"Mimi of Nachtigal\"\
      ,\n\t\"Q6862207\",\n\totherNames = {\"Mimi-N\"},\n\tscripts = Latn,\n}\n\nm[\"und-phi\"] = {\n\t\"Philistine\",\n\t\"Q2230924\",\n\totherNames = {\"Philistian\", \"Philistinian\"},\n}\n\nm[\"und-wji\"] = {\n\t\"Western Jicaque\",\n\t\"Q3178610\",\n\t\"\
      hok\",\n\totherNames = {\"Jicaque of El Palmar\", \"Sula\"},\n\tscripts = Latn,\n}\n\nm[\"urj-mdv-pro\"] = {\n\t\"Proto-Mordvinic\",\n\tnil,\n\t\"urj-mdv\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"urj-prm-pro\"] = {\n\t\"Proto-Permic\"\
      ,\n\tnil,\n\t\"urj-prm\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"urj-pro\"] = {\n\t\"Proto-Uralic\",\n\t\"Q288765\",\n\t\"urj\",\n\totherNames = {\"Proto-Finno-Ugric\", \"Proto-Finno-Permic\"}, -- PFU and PFP are subsumed into PU per\
      \ [[Wiktionary:Beer parlour/2015/January#Merging Finno-Volgaic, Finno-Samic, Finno-Permic and Finno-Ugric into Uralic]]\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"urj-ugr-pro\"] = {\n\t\"Proto-Ugric\",\n\t\"Q156631\",\n\t\"urj-ugr\"\
      ,\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"xnd-pro\"] = {\n\t\"Proto-Na-Dene\",\n\tnil,\n\t\"xnd\",\n\totherNames = {\"Proto-Na-Dené\", \"Proto-Athabaskan-Eyak-Tlingit\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\
      }\n\nm[\"xgn-kha\"] = {\n\t\"Khamnigan Mongol\",\n\t\"Q3196052\",\n\t\"xgn\",\n\totherNames = {\"Khamnigan\", \"Khamnigan Buryat\"},\n\tscripts = {\"Mong\", \"Latn\", \"Cyrl\"},\n}\n\nm[\"xgn-mgr\"] = {\n\t\"Mangghuer\",\n\t\"Q34214\",\n\t\"xgn\",\n\t\
      otherNames = {\"Monguor\", \"Mongour\", \"Mongor\"},\n\tscripts = Latn, -- also \"Mong\", \"Cyrl\" ?\n}\n\nm[\"xgn-mgl\"] = {\n\t\"Mongghul\",\n\t\"Q34214\",\n\t\"xgn\",\n\totherNames = {\"Monguor\", \"Mongour\", \"Mongor\"},\n\tscripts = Latn, -- also\
      \ \"Mong\", \"Cyrl\" ?\n}\n\nm[\"xgn-pro\"] = {\n\t\"Proto-Mongolic\",\n\t\"Q2493677\",\n\t\"xgn\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ypk-pro\"] = {\n\t\"Proto-Yupik\",\n\tnil,\n\t\"ypk\",\n\ttype = \"reconstructed\",\n\t\
      scripts = {\"Latinx\"},\n}\n\nm[\"zhx-min-pro\"] = {\n\t\"Proto-Min\",\n\t\"Q19646347\",\n\t\"zhx-min\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"zhx-sht\"] = {\n\t\"Shaozhou Tuhua\",\n\t\"Q1920769\",\n\t\"zhx\",\n\totherNames\
      \ = {\"Xiangnan Tuhua\", \"Yuebei Tuhua\", \"Shipo\", \"Shina\"},\n\tscripts = {\"Nshu\"},\n}\n\nm[\"zhx-tai\"] = {\n\t\"Taishanese\",\n\t\"Q2208940\",\n\t\"zhx\",\n\totherNames = {\"Toishanese\"},\n\tscripts = {\"Hani\"},\n\tancestors = {\"yue\"},\n}\n\
      \nm[\"zhx-teo\"] = {\n\t\"Teochew\",\n\t\"Q36759\",\n\t\"zhx-min-hai\",\n\totherNames = {\"Chiuchow\"},\n\tscripts = {\"Hani\"},\n\tancestors = {\"nan\"},\n}\n\nm[\"zle-ono\"] = {\n\t\"Old Novgorodian\",\n\t\"Q162013\",\n\t\"zle\",\n\tscripts = {\"Cyrs\"\
      , \"Glag\"},\n\ttranslit_module = \"Cyrs-Glag-translit\",\n\tentry_name = {\n\t\tfrom = {u(0x0484)}, -- kamora\n\t\tto   = {}},\n\tsort_key = {\n\t\tfrom = {\"оу\"},\n\t\tto   = {\"у\" }},\n}\n\nm[\"zlw-ocs\"] = {\n\t\"Old Czech\",\n\t\"Q593096\",\n\t\"\
      zlw\",\n\tscripts = Latn,\n}\n\nm[\"zlw-opl\"] = {\n\t\"Old Polish\",\n\t\"Q149838\",\n\t\"zlw\",\n\tscripts = Latn,\n}\n\nm[\"zlw-pom\"] = {\n\t\"Pomeranian\",\n\t\"Q149588\",\n\t\"zlw\",\n\tscripts = Latn,\n}\n\nm[\"zlw-slv\"] = {\n\t\"Slovincian\",\n\
      \t\"Q36822\",\n\t\"zlw\",\n\tscripts = Latn,\n\tancestors = {\"zlw-pom\"},\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:34.765Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Abg-translit&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49947 t=1555362394666168
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:34 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 580336508, 820334103, 697836733
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3931172\" pageid=\"3931172\" ns=\"828\" title=\"Module:bg-translit\"><revisions><rev user=\"Wikitiki89\" timestamp=\"2014-08-18T20:15:52Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n \nlocal tt = {\n\t[\"А\"]='A', [\"а\"]='a', [\"Б\"]='B', [\"б\"]='b', [\"В\"]='V', [\"в\"]='v', [\"Г\"]='G', [\"г\"]='g', [\"Д\"]='D', [\"\
      д\"]='d', \n\t[\"Е\"]='E', [\"е\"]='e', [\"Ж\"]='Ž', [\"ж\"]='ž', [\"З\"]='Z', [\"з\"]='z', [\"И\"]='I', [\"и\"]='i', [\"Й\"]='J', [\"й\"]='j', \n\t[\"К\"]='K', [\"к\"]='k', [\"Л\"]='L', [\"л\"]='l', [\"М\"]='M', [\"м\"]='m', [\"Н\"]='N', [\"н\"]='n',\
      \ [\"О\"]='O', [\"о\"]='o', \n\t[\"П\"]='P', [\"п\"]='p', [\"Р\"]='R', [\"р\"]='r', [\"С\"]='S', [\"с\"]='s', [\"Т\"]='T', [\"т\"]='t', [\"У\"]='U', [\"у\"]='u', \n\t[\"Ф\"]='F', [\"ф\"]='f', [\"Х\"]='H', [\"х\"]='h', [\"Ц\"]='C', [\"ц\"]='c', [\"Ч\"]='Č\
      ', [\"ч\"]='č', [\"Ш\"]='Š', [\"ш\"]='š', \n\t[\"Щ\"]='Št', [\"щ\"]='št', [\"Ъ\"]='Ǎ', [\"ъ\"]='ǎ', [\"Ю\"]='Ju', [\"ю\"]='ju', [\"Я\"]='Ja', [\"я\"]='ja',\n\t[\"ѝ\"]='ì',\n\n\t-- Pre-reform\n\t[\"Ѫ\"]='Ǫ', [\"ѫ\"]='ǫ', [\"Ѣ\"]='Ě', [\"ѣ\"]='ě', [\"Ь\"\
      ]='ʹ', [\"ь\"]='ʹ',\n};\n\nfunction export.tr(text, lang, sc)\n\ttext = mw.ustring.gsub(text, '(%w)[Ъъ]$', '%1')\n\ttext = mw.ustring.gsub(text, '(%w)[Ъъ]%f[%c%p%s]', '%1')\n\ttext = mw.ustring.gsub(text, '[Ьь]%f[Оо]', { [\"Ь\"]='J', [\"ь\"]='j' })\n\t\
      text = mw.ustring.gsub(text, '.', tt)\n\treturn text\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:35.199Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aru-translit&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=92114 t=1555362394944820
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:35 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1278.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 746172770, 552883635, 689950503
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3907076\" pageid=\"3907076\" ns=\"828\" title=\"Module:ru-translit\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-02-22T03:03:16Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"fixes for ё in prefixes and suffixes\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\nFIXME:\n\n1. (DONE) If you write '''Б'''ез, it transliterates to '''B'''jez instead of\n   '''B'''ez,\
      \ as it should.\n2. (DONE) Convert ъ to nothing before comma or other non-letter particle, e.g.\n   in Однимъ словомъ, идешь на чтеніе.\n3. (DONE) Make special-casing for adjectives in -го and for что (and friends)\n    be the default, and implement transformations\
      \ in Cyrillic rather than after\n    translit so that we can display the transformed Cyrillic in the\n    \"phonetic respelling\" notation of {{ru-IPA}}.\n4. (DONE) Convert apostrophe to ъ before transliteration when after a consonant\n   and before a\
      \ vowel (requested by Atitarev).\n]=]\n\nlocal u = mw.ustring.char\nlocal rfind = mw.ustring.find\nlocal rsub = mw.ustring.gsub -- WARNING: Don't return this directly in a function, or surround in parens\nlocal rmatch = mw.ustring.match\nlocal rsplit =\
      \ mw.text.split\nlocal ulower = mw.ustring.lower\nlocal usub = mw.ustring.sub\n\nlocal GR = u(0x0300) -- grave =  ̀\nlocal TEMP_G = u(0xFFF1) -- substitute to preserve g from changing to v\n\nlocal function ine(x) -- if not empty\n\tif x == \"\" then return\
      \ nil else return x end\nend\n\n-- In this table, we now map Cyrillic е and э to je and e, and handle the\n-- post-consonant version (plain e and ɛ) specially.\nlocal tab = {\n\t[\"А\"]=\"A\", [\"Б\"]=\"B\", [\"В\"]=\"V\", [\"Г\"]=\"G\", [\"Д\"]=\"D\"\
      , [\"Е\"]=\"Je\", [\"Ё\"]=\"Jó\", [\"Ж\"]=\"Ž\", [\"З\"]=\"Z\", [\"И\"]=\"I\", [\"Й\"]=\"J\",\n\t[\"К\"]=\"K\", [\"Л\"]=\"L\", [\"М\"]=\"M\", [\"Н\"]=\"N\", [\"О\"]=\"O\", [\"П\"]=\"P\", [\"Р\"]=\"R\", [\"С\"]=\"S\", [\"Т\"]=\"T\", [\"У\"]=\"U\", [\"Ф\"\
      ]=\"F\",\n\t[\"Х\"]=\"X\", [\"Ц\"]=\"C\", [\"Ч\"]=\"Č\", [\"Ш\"]=\"Š\", [\"Щ\"]=\"Šč\", [\"Ъ\"]=\"ʺ\", [\"Ы\"]=\"Y\", [\"Ь\"]=\"ʹ\", [\"Э\"]=\"E\", [\"Ю\"]=\"Ju\", [\"Я\"]=\"Ja\",\n\t['а']='a', ['б']='b', ['в']='v', ['г']='g', ['д']='d', ['е']='je', ['ё\
      ']='jó', ['ж']='ž', ['з']='z', ['и']='i', ['й']='j',\n\t['к']='k', ['л']='l', ['м']='m', ['н']='n', ['о']='o', ['п']='p', ['р']='r', ['с']='s', ['т']='t', ['у']='u', ['ф']='f',\n\t['х']='x', ['ц']='c', ['ч']='č', ['ш']='š', ['щ']='šč', ['ъ']='ʺ', ['ы']='y',\
      \ ['ь']='ʹ', ['э']='e', ['ю']='ju', ['я']='ja',\n\t-- Russian style quotes\n\t['«']='“', ['»']='”',\n\t-- archaic, pre-1918 letters\n\t['І']='I', ['і']='i', ['Ѳ']='F', ['ѳ']='f',\n\t['Ѣ']='Jě', ['ѣ']='jě', ['Ѵ']='I', ['ѵ']='i',\n}\n\n-- following based\
      \ on ru-common for use with is_monosyllabic()\n-- any Cyrillic or Latin vowel, including ёЁ and composed Cyrillic vowels with grave accent;\n-- not including accented Latin vowels except ě (FIXME, might want to change this)\nlocal lowercase_vowels = \"\
      аеиоуяэыюіѣѵүѐѝёaeiouyěɛ\"\nlocal uppercase_vowels = \"АЕИОУЯЭЫЮІѢѴҮЀЍЁAEIOUYĚƐ\"\nlocal vowels = lowercase_vowels .. uppercase_vowels\n\n-- FIXME! Doesn't work with ɣ, which gets included in this character set\nlocal non_consonants = \"[\" .. vowels ..\
      \ \"ЪЬъьʹʺ%A]\"\nlocal consonants = \"[^\" .. vowels .. \"ЪЬъьʹʺ%A]\"\n\nlocal map_to_plain_e_map = {[\"Е\"] = \"E\", [\"е\"] = \"e\", [\"Ѣ\"] = \"Ě\", [\"ѣ\"] = \"ě\", [\"Э\"] = \"Ɛ\", [\"э\"] = \"ɛ\"}\nlocal function map_to_plain_e(pre, e)\n\treturn\
      \ pre .. map_to_plain_e_map[e]\nend\n\nlocal map_to_je_map = {[\"Е\"] = \"Je\", [\"е\"] = \"je\", [\"Ѣ\"] = \"Jě\", [\"ѣ\"] = \"jě\", [\"Э\"] = \"E\", [\"э\"] = \"e\"}\nlocal function map_to_je(pre, e)\n\tif e == nil then\n\t\te = pre\n\t\tpre = \"\"\n\
      \tend\n\treturn pre .. map_to_je_map[e]\nend\n\n-- decompose composed grave chars; they will map to uncomposed Latin letters for\n-- consistency with other char+grave combinations, and we do this early to\n-- avoid problems converting to e or je\nlocal\
      \ decompose_grave_map = {['ѐ'] = 'е' .. GR, ['Ѐ'] = 'Е' .. GR, ['ѝ'] = 'и' .. GR, ['Ѝ'] = 'И' .. GR}\n\n-- True if Cyrillic or decomposed Latin word has no more than one vowel;\n-- includes non-syllabic stems such as льд-; copied from ru-common and modified\n\
      -- to avoid having to import that module (which would slow things down\n-- significantly)\nlocal function is_monosyllabic(word)\n\treturn not rfind(word, \"[\" .. vowels .. \"].*[\" .. vowels .. \"]\")\nend\n\n-- Apply transformations to the Cyrillic to\
      \ more closely match pronunciation.\n-- Return two arguments: the \"original\" text (after decomposing composed\n-- grave characters), and the transformed text. If the two are different,\n-- {{ru-IPA}} should display a \"phonetic respelling\" notation.\
      \ \n-- NOADJ disables special-casing for adjectives in -го, while FORCEADJ forces\n-- special-casing for adjectives, including those in -аго (pre-reform spelling)\n-- and disables checking for exceptions (e.g. много, ого). NOSHTO disables\n-- special-casing\
      \ for что and related words.\nfunction export.apply_tr_fixes(text, noadj, noshto, forceadj)\n\t-- decompose composed grave characters before we convert Cyrillic е to\n\t-- Latin e or je\n\ttext = rsub(text, \"[ѐЀѝЍ]\", decompose_grave_map)\n\n\tlocal origtext\
      \ = text\n\t-- the second half of the if-statement below is an optimization; see above.\n\tif not noadj and text:find(\"го\") then\n\t\tlocal v = {[\"г\"] = \"в\", [\"Г\"] = \"В\"}\n\t\tlocal repl = function(e, g, o, sja) return e .. v[g] .. o .. (sja\
      \ or \"\") end\n\t\t-- Handle какого-нибудь/-либо/-то; must be done first because of an exception\n\t\t-- made for бого-, снего-, etc.\n\t\ttext = rsub(text, \"([кКтТ][аА][кК][оеОЕ\" .. (forceadj and \"аА\" or \"\") .. \"][\\204\\129\\204\\128]?)([гГ])([о\
      О]%-)\", repl)\n\t\tif not forceadj then\n\t\t\t-- handle много\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Мм]но[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle немного, намного\n\t\t\ttext\
      \ = rsub(text, \"%f[%a\\204\\129\\204\\128]([Нн][еа]мно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle до́рого [short form of дорогой, adverb]\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Д\
      д]о[\\204\\129\\204\\128]?ро)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle недо́рого [short form of недорогой, adverb]\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Нн]едо[\\204\\129\\204\\128]?ро)го%f[^%a\\204\\\
      129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle стро́го\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Сс]тро[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle нестро́го\n\t\t\ttext\
      \ = rsub(text, \"%f[%a\\204\\129\\204\\128]([Нн]естро[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle на́строго\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Нн]а[\\204\\129\\204\\128]?стро)г\
      о%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle убо́го\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Уу]бо[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle поло́го\n\
      \t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Пп]оло[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- check for neuter short forms of compound adjectives in -но́гий\n\t\t\tif rfind(text, \"оно[\\204\\\
      129\\204\\128]?го%f[^%a\\204\\129\\204\\128]\") then\n\t\t\t\t-- handle безно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Бб]езно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle босо\
      но́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Бб]осоно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle веслоно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Вв]еслоно\
      [\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle длинноно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Дд]линноно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G\
      \ .. \"о\")\n\t\t\t\t-- handle двуно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Дд]вуно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle коротконо́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\\
      204\\129\\204\\128]([Кк]оротконо[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle кривоно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Кк]ривоно[\\204\\129\\204\\128]?)го%f[^%a\\204\\\
      129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle одноно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Оо]дноно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle пятино́го\n\
      \t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Пп]ятино[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle трёхно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Тт]р[ёе][\\204\\129\\\
      204\\128]?хно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle хромоно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Хх]ромоно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"\
      %1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle четвероно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Чч]етвероно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle шестино́го\n\t\t\t\ttext\
      \ = rsub(text, \"%f[%a\\204\\129\\204\\128]([Шш]естино[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\tend\n\t\t\t-- handle пе́го [short form of пе́гий \"piebald\"]\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\\
      204\\128]([Пп]е[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle лого, сого, ого\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([лсЛС]?[Оо][\\204\\129\\204\\128]?)г(о[\\204\\129\\204\\128]?)%f[^%a\\\
      204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"%2\")\n\t\t\t-- handle Того, То́го (but not того or Того́, which have /v/)\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128](То́?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle\
      \ лего\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Лл]е[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle игого, огого; note, we substitute TEMP_G for both г's\n\t\t\t-- because otherwise the\
      \ ого- at the beginning gets converted to ово\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([ИиОо])гог(о[\\204\\129\\204\\128]?)%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\" .. TEMP_G .. \"%2\")\n\t\t\t-- handle Диего\n\t\t\ttext = rsub(text,\
      \ \"%f[%a\\204\\129\\204\\128](Дие́?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle бо́лого\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Бб]о[\\204\\129\\204\\128]?ло)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G\
      \ .. \"о\")\n\t\t\t-- handle *ого-, *его- (e.g. бого-, снего-)\n\t\t\ttext = rsub(text, \"([ео][\\204\\129\\204\\128]?)го%-\", \"%1\" .. TEMP_G .. \"о-\")\n\t\tend\n\t\t--handle genitive/accusative endings, which are spelled -ого/-его/-аго\n\t\t-- (-ogo/-ego/-ago)\
      \ but transliterated -ovo/-evo/-avo; only for adjectives\n\t\t-- and pronouns, excluding words like много, ого (-аго occurs in\n\t\t-- pre-reform spelling); \\204\\129 is an acute accent, \\204\\128 is a grave accent\n\t\tlocal pattern = \"([оеОЕ\" ..\
      \ (forceadj and \"аА\" or \"\") .. \"][\\204\\129\\204\\128]?)([гГ])([оО][\\204\\129\\204\\128]?)\"\n\t\tlocal reflexive = \"([сС][яЯ][\\204\\129\\204\\128]?)\"\n\t\ttext = rsub(text, pattern .. \"%f[^%a\\204\\129\\204\\128]\", repl)\n\t\ttext = rsub(text,\
      \ pattern .. reflexive .. \"%f[^%a\\204\\129\\204\\128]\", repl)\n\t\t-- handle сегодня\n\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Сс]е)г(о[\\204\\129\\204\\128]?дня)%f[^%a\\204\\129\\204\\128]\", \"%1в%2\")\n\t\t-- handle сегодняшн-\n\t\ttext\
      \ = rsub(text, \"%f[%a\\204\\129\\204\\128]([Сс]е)г(о[\\204\\129\\204\\128]?дняшн)\", \"%1в%2\")\n\t\t-- replace TEMP_G with g; must be done after the -go -&gt; -vo changes\n\t\ttext = rsub(text, TEMP_G, \"г\")\n\tend\n\n\t-- the second half of the if-statement\
      \ below is an optimization; see above.\n\tif not noshto and text:find(\"то\") then\n\t\tlocal ch2sh = {[\"ч\"] = \"ш\", [\"Ч\"] = \"Ш\"}\n\t\t-- Handle что\n\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Чч])(то[\\204\\129\\204\\128]?)%f[^%a\\204\\\
      129\\204\\128]\",\n\t\t\tfunction(ch, to) return ch2sh[ch] .. to end)\n\t\t-- Handle чтобы, чтоб\n\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Чч])(то[\\204\\129\\204\\128]?бы?)%f[^%a\\204\\129\\204\\128]\",\n\t\t\tfunction(ch, to) return ch2sh[ch]\
      \ .. to end)\n\t\t-- Handle ничто\n\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Нн]и)ч(то[\\204\\129\\204\\128]?)%f[^%a\\204\\129\\204\\128]\", \"%1ш%2\")\n\tend\n\n\t-- Handle мягкий, лёгкий, легчать, etc.\n\ttext = rsub(text, \"([МмЛл][яеё][\\\
      204\\129\\204\\128]?)г([кч])\", \"%1х%2\")\n\n\treturn origtext, text\nend\n\n-- Transliterate after the pronunciation-related transformations of\n-- export.apply_tr_fixes() have been applied. Called from {{ru-IPA}}.\n-- INCLUDE_MONOSYLLABIC_JO_ACCENT\
      \ is as in export.tr().\nfunction export.tr_after_fixes(text, include_monosyllabic_jo_accent)\n\t-- Remove word-final hard sign, either utterance-finally or followed by\n\t-- a non-letter character such as space, comma, period, hyphen, etc.\n\ttext = rsub(text,\
      \ \"[Ъъ]$\", \"\")\n\ttext = rsub(text, \"[Ъъ]([%A])\", \"%1\")\n\n\t-- Convert apostrophe the hard sign between consonant and vowel (i.e.\n\t-- in the places where the hard sign normally occurs in modern text).\n\t-- Apostrophe is sometimes used to indicate\
      \ the hard sign; this may have\n\t-- originated from the forcible removal of the hard sign from printing\n\t-- offices in the 1920's, after the implementation of the Russian\n\t-- orthography reform. The if-statement is an optimization; see below.\n\t\
      if rfind(text, \"'\") then\n\t\ttext = rsub(text, \"(\" .. consonants .. \")'([\" .. lowercase_vowels .. \"])\", \"%1ъ%2\")\n\t\ttext = rsub(text, \"(\" .. consonants .. \")'([\" .. uppercase_vowels .. \"])\", \"%1Ъ%2\")\n\tend\n\n\t-- the if-statement\
      \ below isn't necessary but may speed things up,\n\t-- particularly when include_monosyllabic_jo_accent isn't set, in that\n\t-- in the majority of cases where ё doesn't occur, we avoid a pattern find\n\t-- (in is_monosyllabic()) and three pattern subs.\
      \ The translit module needs\n\t-- to be as fast as possible since it may be called hundreds or\n\t-- thousands of times on some pages.\n\tif rfind(text, \"[Ёё]\") then\n\t\t-- We need to special-case ё after a \"hushing\" consonant, which becomes\n\t\t\
      -- ó (or o), without j. We also need special cases for monosyllabic ё\n\t\t-- when INCLUDE_MONOSYLLABIC_JO_ACCENT isn't set, so we don't add the\n\t\t-- accent mark that we would otherwise include.\n\t\tif not include_monosyllabic_jo_accent and is_monosyllabic(text)\
      \ and not rfind(text, \"^%-\") then\n\t\t\ttext = rsub(text, \"([жшчщЖШЧЩ])ё\",\"%1o\")\n\t\t\ttext = text:gsub(\"ё\", \"jo\")\n\t\t\ttext = text:gsub(\"Ё\", \"Jo\")\n\t\telse\n\t\t\t-- in a nonmonosyllabic word where there is a later stressed vowel\n\t\
      \t\t-- in the same word (e.g. трёхэта́жный), don't put an accent mark on ё.\n\t\t\ttext = rsub(text, \"ё([^ %-]-[\" .. vowels .. \"]́)\", \"jo%1\")\n\t\t\t-- same goes if there are two ё's in a word (трёхколёсный, четырёхзвёздный)\n\t\t\ttext = rsub(text,\
      \ \"ё([^ %-]-ё)\", \"jo%1\")\n\t\t\t-- same goes if this is a prefix (четырёх-)\n\t\t\ttext = rsub(text, \"ё([^ %-]-%-)$\", \"jo%1\")\n\t\t\t-- same goes if there is a stressed vowel *followed* by ё (this is\n\t\t\t-- quite rare but occurs e.g. in А́нд\
      зё \"Anjō (city in Japan)\"\n\t\t\ttext = rsub(text, \"([\" .. vowels .. \"]́[^ %-]-)ё\", \"%1jo\")\n\t\t\t-- handle hushing consonant + ё + another accented vowel (e.g. шёлкопряди́льня)\n\t\t\t-- (already partly converted by previous regexes)\n\t\t\t\
      text = rsub(text, \"([жшчщЖШЧЩ])j\",\"%1\")\n\t\t\t-- handle remaining cases of hushing consonant + ё\n\t\t\ttext = rsub(text, \"([жшчщЖШЧЩ])ё\",\"%1ó\")\n\t\t\t-- conversion of remaining ё will occur as a result of 'tab'.\n\t\tend\n\tend\n\n\t-- ю after\
      \ ж and ш becomes u (e.g. брошюра, жюри)\n\ttext = rsub(text, \"([жшЖШ])ю\",\"%1u\")\n\n\t-- the if-statement below isn't necessary but may speed things up in that\n\t-- in the majority of cases where the letters below don't occur, we avoid\n\t-- six pattern\
      \ subs.\n\tif rfind(text, \"[ЕеѢѣЭэ]\") then\n\t\t-- е after a dash at the beginning of a word becomes e, and э becomes ɛ\n\t\t-- (like after a consonant)\n\t\ttext = rsub(text, \"^(%-)([ЕеѢѣЭэ])\", map_to_plain_e)\n\t\ttext = rsub(text, \"(%s%-)([ЕеѢѣ\
      Ээ])\", map_to_plain_e)\n\t\t-- don't get confused by single quote or parens between consonant and е;\n\t\t-- e.g. Б'''ез''', американ(ец)\n\t\ttext = rsub(text, \"(\" .. consonants .. \"['%(%)]*)([ЕеѢѣЭэ])\", map_to_plain_e)\n\n\t\t-- This is now the\
      \ default\n\t\t-- е after a vowel or at the beginning of a word becomes je, and э becomes e\n\t\t-- text = rsub(text, \"^([ЕеѢѣЭэ])\", map_to_je)\n\t\t-- text = rsub(text, \"(\" .. non_consonants .. \")([ЕеѢѣЭэ])\", map_to_je)\n\t\t-- -- need to do it\
      \ twice in case of sequences of such vowels\n\t\t-- text = rsub(text, \"^([ЕеѢѣЭэ])\", map_to_je)\n\t\t-- text = rsub(text, \"(\" .. non_consonants .. \")([ЕеѢѣЭэ])\", map_to_je)\n\tend\n\n\ttext = (rsub(text,'.',tab))\n\treturn text\nend\n\n-- Transliterates\
      \ text, which should be a single word or phrase. It should\n-- include stress marks, which are then preserved in the transliteration.\n-- ё is a special case: it is rendered (j)ó in multisyllabic words and\n-- monosyllabic words in multi-word phrases,\
      \ but rendered (j)o without an\n-- accent in isolated monosyllabic words, unless INCLUDE_MONOSYLLABIC_JO_ACCENT\n-- is specified. (This is used in conjugation and declension tables.)\n-- NOADJ disables special-casing for adjectives in -го, while FORCEADJ\
      \ forces\n-- special-casing for adjectives and disables checking for exceptions\n-- (e.g. много). NOSHTO disables special-casing for что and related words.\nfunction export.tr(text, lang, sc, include_monosyllabic_jo_accent, noadj, noshto, forceadj)\n\t\
      local origtext, subbed_text = export.apply_tr_fixes(text, noadj, noshto, forceadj)\n\treturn export.tr_after_fixes(subbed_text, include_monosyllabic_jo_accent)\nend\n\n-- translit with various special-case substitutions; NOADJ disables\n-- special-casing\
      \ for adjectives in -го, while FORCEADJ forces special-casing\n-- for adjectives and disables checking for expections (e.g. много).\n-- NOSHTO disables special-casing for что and related words. SUB is used\n-- to implement arbitrary substitutions in the\
      \ Cyrillic text before other\n-- transformations are applied and before translit. It is of the form\n-- FROM/TO,FROM/TO,...\nfunction export.tr_sub(text, include_monosyllabic_jo_accent, noadj, noshto, sub,\n\tforceadj)\n\tif type(text) == 'table' then\
      \ -- called directly from a template\n\t\tinclude_monosyllabic_jo_accent = ine(text.args.include_monosyllabic_jo_accent)\n\t\tnoadj = ine(text.args.noadj)\n\t\tnoshto = ine(text.args.noshto)\n\t\tsub = ine(text.args.sub)\n\t\ttext = text.args[1]\n\tend\n\
      \n\tif sub then\n\t\tlocal subs = rsplit(sub, \",\")\n\t\tfor _, subpair in ipairs(subs) do\n\t\t\tlocal subsplit = rsplit(subpair, \"/\")\n\t\t\ttext = rsub(text, subsplit[1], subsplit[2])\n\t\tend\n\tend\n\n\treturn export.tr(text, nil, nil, include_monosyllabic_jo_accent,\
      \ noadj, noshto, forceadj)\nend\n\n--for adjectives, pronouns\nfunction export.tr_adj(text, include_monosyllabic_jo_accent)\n\tif type(text) == 'table' then -- called directly from a template\n\t\tinclude_monosyllabic_jo_accent = ine(text.args.include_monosyllabic_jo_accent)\n\
      \t\ttext = text.args[1]\n\tend\n\n\t-- we have to include \"forceadj\" because typically when tr_adj() is called\n\t-- from the noun or adjective modules, it's called with suffix ого, which\n\t-- would otherwise trigger the exceptional case and be transliterated\
      \ as ogo\n\treturn export.tr(text, nil, nil, include_monosyllabic_jo_accent, false,\n\t\t\"noshto\", \"forceadj\")\nend\n\nreturn export\n\n-- For Vim, so we get 4-space tabs\n-- vim: set ts=4 sw=4 noet:</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:36.378Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Asl-tonal&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56459 t=1555362396274312
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1652'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:36 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1347.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 585408048, 473360313, 702448728
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="3842274" pageid="3842274" ns="10" title="Template:sl-tonal"><revisions><rev user="Rua" timestamp="2014-04-29T01:22:06Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">[[Appendix:Slovene pronunciation|Tonal orthography]]: &lt;!--

                       --&gt;&lt;span class="Unicode" lang="sl"&gt;{{{1}}}&lt;/span&gt;&lt;!--
      --&gt;{{#if:{{{2|}}}|, &lt;span class="Unicode" lang="sl"&gt;{{{2}}}&lt;/span&gt;}}&lt;!--
      --&gt;{{#if:{{{3|}}}|, &lt;span class="Unicode" lang="sl"&gt;{{{3}}}&lt;/span&gt;}}&lt;!--
      --&gt;{{#if:{{{4|}}}|, &lt;span class="Unicode" lang="sl"&gt;{{{4}}}&lt;/span&gt;}}&lt;!--
      --&gt;{{#if:{{{5|}}}|, &lt;span class="Unicode" lang="sl"&gt;{{{5}}}&lt;/span&gt;}}&lt;!--
      --&gt;{{#if:{{{6|}}}|, &lt;span class="Unicode" lang="sl"&gt;{{{6}}}&lt;/span&gt;}}&lt;!--
      --&gt;&lt;includeonly&gt;{{#if:{{{1|}}}||[[Category:Pronunciation templates without a pronunciation]]}}&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:36.560Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Asl-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58952 t=1555362396455340
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '953'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:36 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 505585641, 635064358, 693091690
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="920042" pageid="920042" ns="10" title="Template:sl-noun"><revisions><rev user="Rua" timestamp="2013-09-22T15:45:46Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:sl-headword|show|nouns}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:36.752Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Asl-headword&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46362 t=1555362396646461
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:36 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1224.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 580272957, 726191169, 700517368
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4151128\" pageid=\"4151128\" ns=\"828\" title=\"Module:sl-headword\"><revisions><rev user=\"Rua\" timestamp=\"2018-09-09T10:54:43Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local m_common = require(\"Module:sl-common\")\n\nlocal export = {}\n\nlocal lang = require(\"Module:languages\").getByCode(\"sl\")\n\nlocal pos_functions = {}\n\n-- The main entry\
      \ point.\n-- This is the only function that can be invoked from a template.\nfunction export.show(frame)\n\tlocal args = frame:getParent().args\n\tPAGENAME = mw.title.getCurrentTitle().text\n\t\n\tlocal poscat = frame.args[1] or error(\"Part of speech\
      \ has not been specified. Please pass parameter 1 to the module invocation.\")\n\t\n\tlocal data = {lang = lang, pos_category = poscat, categories = {}, heads = {args[1] or \"\"}, genders = {}, inflections = {}}\n\t\n\t-- Gather headwords\n\tlocal i =\
      \ 2\n\tlocal head = args[\"head\" .. i]\n\t\n\twhile head do\n\t\tif head ~= \"\" then\n\t\t\ttable.insert(data.heads, head)\n\t\tend\n\t\t\n\t\ti = i + 1\n\t\thead = args[\"head\" .. i]\n\tend\n\t\n\t-- Process headwords for accents\n\tlocal check_accents\
      \ = true\n\t\n\t-- If the first headword given is \"-\", then skip the check.\n\tif data.heads[1] == \"-\" then\n\t\tdata.heads[1] = \"\"\n\t\tcheck_accents = false\n\telse\n\t\tfor i, head in ipairs(data.heads) do\n\t\t\tif head == \"\" or not m_common.has_accents(head)\
      \ then\n\t\t\t\ttable.insert(data.categories, \"Slovene terms needing accents\")\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Call POS-specific function\n\tif pos_functions[poscat] then\n\t\tpos_functions[poscat](args, data, check_accents)\n\tend\n\t\n\treturn\
      \ require(\"Module:headword\").full_headword(data)\nend\n\n-- Display additional inflection information for an adjective\npos_functions[\"adjectives\"] = function(args, data, check_accents)\n\t-- Get all the parameters\n\tlocal comparatives = {}\n\t\n\t\
      local i = 2\n\t\n\twhile true do\n\t\tlocal comp = args[i]; if comp == \"\" then comp = nil end\n\t\t\n\t\tif not comp then\n\t\t\tbreak\n\t\tend\n\t\t\n\t\ttable.insert(comparatives, comp)\n\t\ti = i + 1\n\tend\n\t\n\t-- Decide what to do next...\n\t\
      local mode = comparatives[1]\n\t\n\tif mode == \"-\" then\n\t\ttable.insert(data.inflections, {label = \"not [[Appendix:Glossary#comparable|comparable]]\"})\n\telse\n\t\tdo_comparatives(data, comparatives, check_accents)\n\tend\nend\n\n-- Display additional\
      \ inflection information for an adverb\npos_functions[\"adverbs\"] = function(args, data, check_accents)\n\t-- Get all the parameters\n\tlocal comparatives = {}\n\t\n\tlocal i = 2\n\t\n\twhile true do\n\t\tlocal comp = args[i]; if comp == \"\" then comp\
      \ = nil end\n\t\t\n\t\tif not comp then\n\t\t\tbreak\n\t\tend\n\t\t\n\t\ttable.insert(comparatives, comp)\n\t\ti = i + 1\n\tend\n\t\n\t-- Decide what to do next...\n\tlocal mode = comparatives[1]\n\t\n\tif mode and mode ~= \"-\" then\n\t\tdo_comparatives(data,\
      \ comparatives, check_accents)\n\tend\nend\n\nfunction do_comparatives(data, comparatives, check_accents)\n\tlocal encoded_head = data.heads[1]\n\t\n\tif encoded_head == \"\" then\n\t\tencoded_head = nil\n\tend\n\t\n\tlocal comp_parts = {label = \"[[Appendix:Glossary#comparative|comparative]]\"\
      , accel = {form = \"comparative\", lemma = encoded_head}, request = true}\n\tlocal sup_parts = {label = \"[[Appendix:Glossary#superlative|superlative]]\", accel = {form = \"superlative\", lemma = encoded_head}}\n\t\n\tfor i, comp in ipairs(comparatives)\
      \ do\n\t\tif comp == \"bolj\" then\n\t\t\ttable.insert(comp_parts, \"[[bòlj]] \" .. (data.heads[1] ~= \"\" and data.heads[1] or PAGENAME))\n\t\t\ttable.insert(sup_parts, \"[[nàjbolj]] \" .. (data.heads[1] ~= \"\" and data.heads[1] or PAGENAME))\n\t\telse\n\
      \t\t\ttable.insert(comp_parts, comp)\n\t\t\ttable.insert(sup_parts, \"nàj\" .. comp)\n\t\t\t\n\t\t\tif check_accents and not m_common.has_accents(comp) then\n\t\t\t\ttable.insert(data.categories, \"Slovene terms needing accents\")\n\t\t\tend\n\t\tend\n\
      \tend\n\t\n\ttable.insert(data.inflections, comp_parts)\n\ttable.insert(data.inflections, sup_parts)\nend\n\n-- Display additional inflection information for a noun\npos_functions[\"nouns\"] = function(args, data, check_accents)\n\tpos_functions[\"proper\
      \ nouns\"](args, data, check_accents)\n\t\n\t-- If the noun is dual/plural only, then ignore the 4th parameter altogether\n\tlocal num = data.genders[1]:sub(3,3)\n\t\n\tif num == \"d\" then\n\t\ttable.insert(data.inflections, {label = \"[[Appendix:Glossary#duale\
      \ tantum|duale tantum]]\"})\n\telseif num == \"p\" then\n\t\ttable.insert(data.inflections, {label = \"[[Appendix:Glossary#plural only|plural only]]\"})\n\telse\n\t\t-- Get the plural parameters\n\t\t-- First get the 4th parameter. The remainder is named\
      \ pl2=, pl3= etc.\n\t\tlocal form = args[4]; if form == \"\" then form = nil end\n\t\tlocal plurals = {form}\n\t\tlocal i = 2\n\t\t\n\t\twhile true do\n\t\t\tform = args[\"pl\" .. i]; if form == \"\" then form = nil end\n\t\t\t\n\t\t\tif not form then\n\
      \t\t\t\tbreak\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(plurals, form)\n\t\t\ti = i + 1\n\t\tend\n\t\t\n\t\t-- Decide what to do next...\n\t\tlocal mode = plurals[1]\n\t\t\n\t\tif mode == \"-\" then\n\t\t\ttable.insert(data.inflections, {label = \"[[Appendix:Glossary#uncountable|uncountable]]\"\
      })\n\t\t\ttable.insert(data.categories, \"Slovene uncountable nouns\")\n\t\telse\n\t\t\tplurals.label = \"nominative plural\"\n\t\t\tplurals.request = true\n\t\t\t\n\t\t\tfor i, form in ipairs(plurals) do\n\t\t\t\tif check_accents and not m_common.has_accents(form)\
      \ then\n\t\t\t\t\ttable.insert(data.categories, \"Slovene nouns needing accents\")\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(data.inflections, plurals)\n\t\tend\n\tend\n\t\n\t-- Get the feminine parameters\n\t-- First get the f= parameter. The\
      \ remainder is named f2=, f3= etc.\n\tlocal form = args[\"f\"]; if form == \"\" then form = nil end\n\tlocal feminines = {form}\n\tlocal i = 2\n\t\n\twhile true do\n\t\tform = args[\"f\" .. i]; if form == \"\" then form = nil end\n\t\t\n\t\tif not form\
      \ then\n\t\t\tbreak\n\t\tend\n\t\t\n\t\ttable.insert(feminines, form)\n\t\ti = i + 1\n\tend\n\t\n\tif #feminines &gt; 0 then\n\t\tlocal f_parts = {label = \"feminine\"}\n\t\t\n\t\tfor i, form in ipairs(feminines) do\n\t\t\ttable.insert(f_parts, form)\n\
      \t\t\t\n\t\t\tif check_accents and not m_common.has_accents(form) then\n\t\t\t\ttable.insert(data.categories, \"Slovene nouns needing accents\")\n\t\t\tend\n\t\tend\n\t\t\n\t\ttable.insert(data.inflections, f_parts)\n\tend\n\n\t-- Get the masculine parameters\n\
      \t-- First get the m= parameter. The remainder is named m2=, m3= etc.\n\tlocal form = args[\"m\"]; if form == \"\" then form = nil end\n\tlocal masculines = {form}\n\tlocal i = 2\n\t\n\twhile true do\n\t\tform = args[\"m\" .. i]; if form == \"\" then form\
      \ = nil end\n\t\t\n\t\tif not form then\n\t\t\tbreak\n\t\tend\n\t\t\n\t\ttable.insert(masculines, form)\n\t\ti = i + 1\n\tend\n\t\n\tif #masculines &gt; 0 then\n\t\tlocal m_parts = {label = \"masculine\"}\n\t\t\n\t\tfor i, form in ipairs(masculines) do\n\
      \t\t\ttable.insert(m_parts, form)\n\t\t\t\n\t\t\tif check_accents and not m_common.has_accents(form) then\n\t\t\t\ttable.insert(data.categories, \"Slovene nouns needing accents\")\n\t\t\tend\n\t\tend\n\t\t\n\t\ttable.insert(data.inflections, m_parts)\n\
      \tend\nend\n\n-- Display additional inflection information for a proper noun\n-- This is also used for nouns\npos_functions[\"proper nouns\"] = function(args, data, check_accents)\n\tlocal valid_genders = {\n\t\t[\"m-?\"] = true,\n\t\t[\"m-an\"] = true,\n\
      \t\t[\"m-in\"] = true,\n\t\t[\"f\"] = true,\n\t\t[\"n\"] = true,\n\t\t[\"m-d\"] = true,\n\t\t[\"f-d\"] = true,\n\t\t[\"n-d\"] = true,\n\t\t[\"m-p\"] = true,\n\t\t[\"f-p\"] = true,\n\t\t[\"n-p\"] = true }\n\t\n\t-- Iterate over all gn parameters (g2, g3\
      \ and so on) until one is empty\n\tlocal g = args[2]; if g == \"\" then g = nil end\n\tlocal i = 2\n\t\n\twhile g do\n\t\tif g == \"m\" then g = \"m-?\" end\n\t\t\n\t\tif not valid_genders[g] then\n\t\t\tg = \"?\"\n\t\tend\n\t\t\n\t\ttable.insert(data.genders,\
      \ g)\n\t\t\n\t\t-- Categorize by gender\n\t\tif g == \"m-an\" then\n\t\t\ttable.insert(data.categories, \"Slovene masculine nouns\")\n\t\t\ttable.insert(data.categories, \"Slovene masculine animate nouns\")\n\t\telseif g == \"m-in\" then\n\t\t\ttable.insert(data.categories,\
      \ \"Slovene masculine nouns\")\n\t\t\ttable.insert(data.categories, \"Slovene masculine inanimate nouns\")\n\t\telseif g:sub(1,1) == \"m\" then\n\t\t\ttable.insert(data.categories, \"Slovene masculine nouns\")\n\t\telseif g:sub(1,1) == \"f\" then\n\t\t\
      \ttable.insert(data.categories, \"Slovene feminine nouns\")\n\t\telseif g:sub(1,1) == \"n\" then\n\t\t\ttable.insert(data.categories, \"Slovene neuter nouns\")\n\t\tend\n\t\t\n\t\t-- Categorize by number\n\t\tif g:sub(3,3) == \"d\" then\n\t\t\ttable.insert(data.categories,\
      \ \"Slovene dualia tantum\")\n\t\telseif g:sub(3,3) == \"p\" then\n\t\t\ttable.insert(data.categories, \"Slovene pluralia tantum\")\n\t\tend\n\t\t\n\t\tg = args[\"g\" .. i]; if g == \"\" then g = nil end\n\t\ti = i + 1\n\tend\n\t\n\tif #data.genders ==\
      \ 0 then\n\t\ttable.insert(data.genders, \"?\")\n\telseif #data.genders &gt; 1 then\n\t\ttable.insert(data.categories, \"Slovene nouns with multiple genders\")\n\tend\n\t\n\t-- Get the genitive parameters\n\t-- First get the 3rd parameter. The remainder\
      \ is named gen2=, gen3= etc.\n\tlocal form = args[3]; if form == \"\" then form = nil end\n\tlocal genitives = {form}\n\tlocal i = 2\n\t\n\twhile true do\n\t\tform = args[\"gen\" .. i]; if form == \"\" then form = nil end\n\t\t\n\t\tif not form then\n\t\
      \t\tbreak\n\t\tend\n\t\t\n\t\ttable.insert(genitives, form)\n\t\ti = i + 1\n\tend\n\t\n\t-- Show the forms\n\tgenitives.label = \"genitive\"\n\tgenitives.request = true\n\t\n\tfor i, form in ipairs(genitives) do\n\t\tif check_accents and not m_common.has_accents(form)\
      \ then\n\t\t\ttable.insert(data.categories, \"Slovene nouns needing accents\")\n\t\tend\n\tend\n\n\ttable.insert(data.inflections, genitives)\nend\n\n-- Display additional inflection information for a verb\npos_functions[\"verbs\"] = function(args, data,\
      \ check_accents)\n\t-- Aspect\n\tlocal aspect = args[2]; if aspect == \"\" then aspect = nil end\n\t\n\tif aspect == \"impf\" then\n\t\ttable.insert(data.genders, \"impf\")\n\t\ttable.insert(data.categories, \"Slovene imperfective verbs\")\n\telseif aspect\
      \ == \"pf\" then\n\t\ttable.insert(data.genders, \"pf\")\n\t\ttable.insert(data.categories, \"Slovene perfective verbs\")\n\telseif aspect == \"both\" then\n\t\ttable.insert(data.genders, \"impf\")\n\t\ttable.insert(data.genders, \"pf\")\n\t\ttable.insert(data.categories,\
      \ \"Slovene imperfective verbs\")\n\t\ttable.insert(data.categories, \"Slovene perfective verbs\")\n\telse\n\t\ttable.insert(data.genders, \"?\")\n\t\ttable.insert(data.categories, \"Slovene verbs needing aspect\")\n\tend\n\t\n\t-- Get all the parameters\n\
      \t-- First get the 3rd and 4th parameters. The remainder is named pres2=, past2= etc.\n\tlocal pres = args[3]; if pres == \"\" then pres = nil end\n\tlocal past = args[4]; if past == \"\" then past = nil end\n\tlocal presents = {pres}\n\tlocal pasts =\
      \ {past}\n\tlocal i = 2\n\t\n\twhile true do\n\t\tpres = args[\"pres\" .. i]; if pres == \"\" then pres = nil end\n\t\tpast = args[\"past\" .. i]; if past == \"\" then past = nil end\n\t\t\n\t\tif not pres and not past then\n\t\t\tbreak\n\t\tend\n\t\t\n\
      \t\tif pres then table.insert(presents, pres) end\n\t\tif past then table.insert(pasts, past) end\n\t\ti = i + 1\n\tend\n\t\n\t-- Present tense (1st person singular)\n\tpresents.label = \"first-person singular present\"\n\tpresents.request = true\n\t\n\
      \tfor i, form in ipairs(presents) do\n\t\tif check_accents and not m_common.has_accents(form) then\n\t\t\ttable.insert(data.categories, \"Slovene verbs needing accents\")\n\t\tend\n\tend\n\t\n\ttable.insert(data.inflections, presents)\n\t\n\t-- Past tense\
      \ (past active participle / l-participle)\n\tpasts.label = \"past active participle\"\n\t\n\tfor i, form in ipairs(pasts) do\n\t\tif check_accents and not m_common.has_accents(form) then\n\t\t\ttable.insert(data.categories, \"Slovene verbs needing accents\"\
      )\n\t\tend\n\tend\n\t\t\n\ttable.insert(data.inflections, pasts)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:36.917Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Asl-common&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=39410 t=1555362396830759
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '2552'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:36 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 421012683, 731786725, 702188305
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3893431\" pageid=\"3893431\" ns=\"828\" title=\"Module:sl-common\"><revisions><rev user=\"Rua\" timestamp=\"2014-05-14T23:55:41Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nfunction export.has_accents(word)\n\tif mw.ustring.find(mw.ustring.lower(word), \"[áéíóúŕàèìòùêô]\") then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\n\
      end\n\nfunction export.remove_accents(text)\n\treturn require(\"Module:languages\").getByCode(\"sl\"):makeEntryName(text)\nend\n\nfunction export.is_soft(stem)\n\tif mw.ustring.find(stem, \"[cjčšž]$\") then\n\t\treturn true\n\telse\n\t\treturn false\n\t\
      end\nend\n\nfunction export.first_palat(stem)\n    if stem:sub(-2) == \"k\" then return stem:sub(1, -2) .. \"č\"\n    elseif stem:sub(-2) == \"g\" then return stem:sub(1, -2) .. \"ž\"\n    elseif stem:sub(-3) == \"sk\" then return stem:sub(1, -3) .. \"\
      šč\"\n    else return stem\n    end\nend\n\nfunction export.second_palat(stem)\n    if stem:sub(-2) == \"k\" then return stem:sub(1, -2) .. \"c\"\n    elseif stem:sub(-2) == \"g\" then return stem:sub(1, -2) .. \"z\"\n    else return stem\n    end\nend\n\
      \nfunction export.iotation(stem)\n    if stem:sub(-2) == \"t\" or stem:sub(-2) == \"k\" or stem:sub(-2) ==\"c\" then return stem:sub(1, -2) .. \"č\"\n    elseif stem:sub(-2) == \"g\" or stem:sub(-2) == \"z\" then return stem:sub(1, -2) .. \"ž\"\n    elseif\
      \ stem:sub(-3) == \"sk\" then return stem:sub(1, -3) .. \"sk\"\n    elseif stem:sub(-2) == \"s\" then return stem:sub(1, -2) .. \"s\"\n    elseif stem:sub(-2) == \"d\" then return stem:sub(1, -2) .. \"j\"\n    elseif stem:sub(-2) == \"m\" then return stem:sub(1,\
      \ -2) .. \"mlj\"\n    elseif stem:sub(-2) == \"p\" then return stem:sub(1, -2) .. \"plj\"\n    elseif stem:sub(-2) == \"b\" then return stem:sub(1, -2) .. \"blj\"\n    elseif stem:sub(-2) == \"v\" then return stem:sub(1, -2) .. \"vlj\"\n    elseif stem:sub(-3)\
      \ == \"sl\" then return stem:sub(1, -3) .. \"šlj\"\n    else return stem\n    end\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:37.619Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Asl-decl-noun-f&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=65729 t=1555362397508296
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '952'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1222.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 489551915, 240145681, 687821516
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="779822" pageid="779822" ns="10" title="Template:sl-decl-noun-f"><revisions><rev user="Rua" timestamp="2013-09-24T16:17:47Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:sl-noun|show|f}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:37.837Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Asl-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=60485 t=1555362397706125
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1281.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 201506370, 500375105, 702416597
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4152424\" pageid=\"4152424\" ns=\"828\" title=\"Module:sl-noun\"><revisions><rev user=\"Tacsipacsi\" timestamp=\"2019-01-28T16:01:22Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"prevent overflow on small screens using “max-width:100%” CSS rule on the outermost element of the output\" xml:space=\"preserve\">local m_links = require(\"Module:links\")\nlocal m_utilities\
      \ = require(\"Module:utilities\")\nlocal m_common = require(\"Module:sl-common\")\n\nlocal export = {}\n\nlocal lang = require(\"Module:languages\").getByCode(\"sl\")\n\n-- Functions that do the actual inflecting by creating the forms of a basic term.\n\
      local inflections = {}\n\n-- The main entry point.\n-- This is the only function that can be invoked from a template.\nfunction export.show(frame)\n\tlocal infl_type = frame.args[1] or error(\"Inflection type has not been specified.\")\n\tlocal args =\
      \ frame:getParent().args\n\tlocal num = args[\"n\"]; if num == \"\" then num = nil end\n\t\n\tlocal data = {forms = {}, title = nil, categories = {}, num = num}\n\t\n\tif inflections[infl_type] then\n\t\tinflections[infl_type](args, data)\n\telse\n\t\t\
      error(\"Unknown inflection type '\" .. infl_type .. \"'\")\n\tend\n\t\n\tcheck_accents(args, data)\n\t\n\treturn make_table(data) .. m_utilities.format_categories(data.categories, lang)\nend\n\n-- Checks each form for the presence of accent marks.\n--\
      \ If any form doesn't contain any accent marks, flag the entry for attention.\nfunction check_accents(args, data)\n\t-- Do we need to check?\n\tlocal noacc = args[\"noacc\"]; if noacc == \"\" then noacc = nil end\n\t\n\tif noacc then\n\t\treturn\n\tend\n\
      \t\n\t-- Yes, we do need to check.\n\tfor key, subforms in pairs(data.forms) do\n\t\tfor key2, subform in ipairs(subforms) do\n\t\t\tif not m_common.has_accents(subform) then\n\t\t\t\ttable.insert(data.categories, \"Slovene nouns needing accents\")\n\t\
      \t\t\treturn  -- So that we don't add the category more than once\n\t\t\tend\n\t\tend\n\tend\nend\n\n-- Masculine o-stem\ninflections[\"m\"] = function(args, data)\n\tlocal stem_noending = args[1]; if stem_noending == \"\" then stem_noending = nil end\n\
      \tlocal stem = args[2]; if stem == \"\" then stem = nil end\n\tlocal anim = args[\"a\"]; if not anim or anim == \"\" then anim = false else anim = true end\n\t\n\tlocal nom_pl = args[\"nom_pl\"]; if nom_pl == \"\" then nom_pl = nil end\n\tlocal nom_pl2\
      \ = args[\"nom_pl2\"]; if nom_pl2 == \"\" then nom_pl2 = nil end\n\t\n\tif not stem_noending then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tstem_noending = \"-\"\n\t\telse\n\t\t\terror(\"1st parameter (stem) has not been specified.\"\
      )\n\t\tend\n\tend\n\t\n\tif not stem then\n\t\tstem = stem_noending\n\t\tstem_noending = make_endingless_stem(stem)\n\tend\n\t\n\t-- Is this a hard stem or a soft stem?\n\tlocal oe = \"o\"\n\tlocal hs = \"hard\"\n\tdata.title = \"masculine \" .. (anim\
      \ and \"anim.\" or \"inan.\")\n\t\n\tif m_common.is_soft(stem) then\n\t\toe = \"e\"\n\t\ths = \"soft\"\n\tend\n\t\n\tdata.title = data.title .. \", \" .. hs .. \" o-stem\"\n\ttable.insert(data.categories, \"Slovene masculine \" .. hs .. \" o-stem nouns\"\
      )\n\t\n\t-- Categorize further\n\tlocal stem_noaccents = m_common.remove_accents(stem)\n\tlocal stem_noending_noaccents = m_common.remove_accents(stem_noending)\n\tlocal corrected_stem = nil\n\t\n\tif stem_noaccents == stem_noending_noaccents then\n\t\t\
      corrected_stem = stem_noending\n\telseif stem_noaccents == mw.ustring.gsub(stem_noending_noaccents, \"e([ln]j)$\", \"%1\") then\n\t\tcorrected_stem = mw.ustring.gsub(stem_noending, \"e([ln]j)$\", \"%1\")\n\telseif stem_noaccents == mw.ustring.gsub(stem_noending_noaccents,\
      \ \"e(.)$\", \"%1\") then\n\t\tcorrected_stem = mw.ustring.gsub(stem_noending, \"e(.)$\", \"%1\")\n\telseif stem_noaccents == mw.ustring.gsub(stem_noending_noaccents, \"[aeiou]$\", \"\") then\n\t\ttable.insert(data.categories, \"Slovene masculine o-stem\
      \ nouns with final vowel\")\n\t\tcorrected_stem = mw.ustring.gsub(stem_noending, \"[aeiou]$\", \"\")\n\telseif stem_noaccents == stem_noending_noaccents .. \"j\" then\n\t\ttable.insert(data.categories, \"Slovene masculine soft o-stem nouns with j-infix\"\
      )\n\t\tcorrected_stem = stem_noending .. \"j\"\n\telseif stem_noaccents == stem_noending_noaccents .. \"-j\" then\n\t\ttable.insert(data.categories, \"Slovene masculine soft o-stem nouns with j-infix\")\n\t\tcorrected_stem = stem_noending .. \"-j\"\n\t\
      elseif stem_noaccents == stem_noending_noaccents .. \"n\" then\n\t\ttable.insert(data.categories, \"Slovene masculine hard o-stem nouns with n-infix\")\n\t\tcorrected_stem = stem_noending .. \"n\"\n\telseif stem_noaccents == stem_noending_noaccents ..\
      \ \"t\" then\n\t\ttable.insert(data.categories, \"Slovene masculine hard o-stem nouns with t-infix\")\n\t\tcorrected_stem = stem_noending .. \"t\"\n\telse\n\t\ttable.insert(data.categories, \"Slovene irregular nouns\")\n\tend\n\t\n\tif corrected_stem and\
      \ stem ~= corrected_stem then\n\t\ttable.insert(data.categories, \"Slovene nouns with accent alternations\")\n\tend\n\t\n\t-- Singular\n\tdata.forms[\"nom_sg\"] = {stem_noending}\n\tdata.forms[\"acc_sg\"] = {anim and stem .. \"a\" or stem_noending}\n\t\
      data.forms[\"gen_sg\"] = {stem .. \"a\"}\n\tdata.forms[\"dat_sg\"] = {stem .. \"u\"}\n\tdata.forms[\"loc_sg\"] = {stem .. \"u\"}\n\tdata.forms[\"ins_sg\"] = {stem .. oe .. \"m\"}\n\t\n\t-- Dual\n\tdata.forms[\"nom_du\"] = {stem .. \"a\"}\n\tdata.forms[\"\
      acc_du\"] = {stem .. \"a\"}\n\tdata.forms[\"gen_du\"] = {stem .. oe .. \"v\"}\n\tdata.forms[\"dat_du\"] = {stem .. oe .. \"ma\"}\n\tdata.forms[\"loc_du\"] = {stem .. \"ih\"}\n\tdata.forms[\"ins_du\"] = {stem .. oe .. \"ma\"}\n\t\n\t-- Plural\n\tdata.forms[\"\
      nom_pl\"] = {nom_pl or stem .. \"i\", nom_pl2}\n\tdata.forms[\"acc_pl\"] = {stem .. \"e\"}\n\tdata.forms[\"gen_pl\"] = {stem .. oe .. \"v\"}\n\tdata.forms[\"dat_pl\"] = {stem .. oe .. \"m\"}\n\tdata.forms[\"loc_pl\"] = {stem .. \"ih\"}\n\tdata.forms[\"\
      ins_pl\"] = {stem .. \"i\"}\nend\n\n-- Masculine o-stem, plural in -ôv-\ninflections[\"m-ov\"] = function(args, data)\n\tlocal stem_noending = args[1]; if stem_noending == \"\" then stem_noending = nil end\n\tlocal stem = args[2]; if stem == \"\" then\
      \ stem = nil end\n\tlocal gen_sg_ending = args[3]; if gen_sg_ending == \"\" then gen_sg_ending = nil end\n\tlocal anim = args[\"a\"]; if not anim or anim == \"\" then anim = false else anim = true end\n\t\n\tif not stem_noending then\n\t\tif mw.title.getCurrentTitle().nsText\
      \ == \"Template\" then\n\t\t\tstem_noending = \"-\"\n\t\telse\n\t\t\terror(\"1st parameter (stem) has not been specified.\")\n\t\tend\n\tend\n\t\n\tif not stem then\n\t\tstem = stem_noending\n\t\tstem_noending = make_endingless_stem(stem)\n\tend\n\t\n\t\
      local stem_noaccents = m_common.remove_accents(stem)\n\t\n\tlocal gen_sg = stem .. \"a\"\n\t\n\tif gen_sg_ending == \"á\" or gen_sg_ending == \"ú\" then\n\t\tgen_sg = stem_noaccents .. gen_sg_ending\n\telseif gen_sg_ending then\n\t\terror(\"3rd parameter\
      \ (genitive singular ending) must be \\\"á\\\" or \\\"ú\\\".\")\n\tend\n\t\n\t-- Is this a hard stem or a soft stem?\n\tlocal oe = \"o\"\n\tlocal hs = \"hard\"\n\tdata.title = \"masculine \" .. (anim and \"anim.\" or \"inan.\")\n\t\n\tif m_common.is_soft(stem)\
      \ then\n\t\toe = \"e\"\n\t\ths = \"soft\"\n\tend\n\t\n\tdata.title = data.title .. \", \" .. hs .. \" o-stem\"\n\ttable.insert(data.categories, \"Slovene masculine \" .. hs .. \" o-stem nouns\")\n\t\n\tif gen_sg_ending then\n\t\tdata.title = data.title\
      \ .. \", mobile accent\"\n\t\ttable.insert(data.categories, \"Slovene masculine o-stem nouns with mobile accent\")\n\tend\n\t\n\tif data.num ~= \"sg\" then\n\t\tdata.title = data.title .. \", plural in \" .. m_links.full_link({lang = lang, alt = \"-ôv-\"\
      }, \"term\")\n\t\ttable.insert(data.categories, \"Slovene masculine o-stem nouns with plural in -ov-\")\n\tend\n\t\n\t-- Categorize further\n\tlocal stem_noending_noaccents = m_common.remove_accents(stem_noending)\n\tlocal corrected_stem = nil\n\t\n\t\
      if stem_noaccents == stem_noending_noaccents then\n\t\tcorrected_stem = stem_noending\n\telseif stem_noaccents == mw.ustring.gsub(stem_noending_noaccents, \"e([ln]j)$\", \"%1\") then\n\t\tcorrected_stem = mw.ustring.gsub(stem_noending, \"e([ln]j)$\", \"\
      %1\")\n\telseif stem_noaccents == mw.ustring.gsub(stem_noending_noaccents, \"e(.)$\", \"%1\") then\n\t\tcorrected_stem = mw.ustring.gsub(stem_noending, \"e(.)$\", \"%1\")\n\telseif stem_noaccents == mw.ustring.gsub(stem_noending_noaccents, \"[aeiou]$\"\
      , \"\") then\n\t\ttable.insert(data.categories, \"Slovene masculine o-stem nouns with final vowel\")\n\t\tcorrected_stem = mw.ustring.gsub(stem_noending, \"[aeiou]$\", \"\")\n\telseif stem_noaccents == stem_noending_noaccents .. \"j\" then\n\t\ttable.insert(data.categories,\
      \ \"Slovene masculine soft o-stem nouns with j-infix\")\n\t\tcorrected_stem = stem_noending .. \"j\"\n\telseif stem_noaccents == stem_noending_noaccents .. \"-j\" then\n\t\ttable.insert(data.categories, \"Slovene masculine soft o-stem nouns with j-infix\"\
      )\n\t\tcorrected_stem = stem_noending .. \"-j\"\n\telseif stem_noaccents == stem_noending_noaccents .. \"n\" then\n\t\ttable.insert(data.categories, \"Slovene masculine hard o-stem nouns with n-infix\")\n\t\tcorrected_stem = stem_noending .. \"n\"\n\t\
      elseif stem_noaccents == stem_noending_noaccents .. \"t\" then\n\t\ttable.insert(data.categories, \"Slovene masculine hard o-stem nouns with t-infix\")\n\t\tcorrected_stem = stem_noending .. \"t\"\n\telse\n\t\ttable.insert(data.categories, \"Slovene irregular\
      \ nouns\")\n\tend\n\t\n\tif corrected_stem and stem ~= corrected_stem then\n\t\ttable.insert(data.categories, \"Slovene nouns with accent alternations\")\n\tend\n\t\n\t-- Singular\n\tdata.forms[\"nom_sg\"] = {stem_noending}\n\tdata.forms[\"acc_sg\"] =\
      \ {anim and gen_sg or stem_noending}\n\tdata.forms[\"gen_sg\"] = {gen_sg}\n\tdata.forms[\"dat_sg\"] = {stem .. \"u\"}\n\tdata.forms[\"loc_sg\"] = {stem .. \"u\"}\n\tdata.forms[\"ins_sg\"] = {stem .. oe .. \"m\"}\n\t\n\t-- Dual\n\tdata.forms[\"nom_du\"\
      ] = {stem_noaccents .. \"ôva\"}\n\tdata.forms[\"acc_du\"] = {stem_noaccents .. \"ôva\"}\n\tdata.forms[\"gen_du\"] = {stem_noaccents .. \"ôv\"}\n\tdata.forms[\"dat_du\"] = {stem_noaccents .. \"ôvoma\"}\n\tdata.forms[\"loc_du\"] = {stem_noaccents .. \"ô\
      vih\"}\n\tdata.forms[\"ins_du\"] = {stem_noaccents .. \"ôvoma\"}\n\t\n\t-- Plural\n\tdata.forms[\"nom_pl\"] = {stem_noaccents .. \"ôvi\"}\n\tdata.forms[\"acc_pl\"] = {stem_noaccents .. \"ôve\"}\n\tdata.forms[\"gen_pl\"] = {stem_noaccents .. \"ôv\"}\n\t\
      data.forms[\"dat_pl\"] = {stem_noaccents .. \"ôvom\"}\n\tdata.forms[\"loc_pl\"] = {stem_noaccents .. \"ôvih\"}\n\tdata.forms[\"ins_pl\"] = {stem_noaccents .. \"ôvi\"}\nend\n\n-- Masculine a-stem\ninflections[\"m-a\"] = function(args, data)\n\tlocal stem\
      \ = args[1]; if stem == \"\" then stem = nil end\n\tlocal anim = args[\"a\"]; if not anim or anim == \"\" then anim = false else anim = true end\n\t\n\tif not stem then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tstem = \"-\"\n\
      \t\telse\n\t\t\terror(\"1st parameter (stem) has not been specified.\")\n\t\tend\n\tend\n\t\n\tlocal stem_noending = make_endingless_stem(stem)\n\t\n\tdata.title = \"masculine \" .. (anim and \"anim.\" or \"inan.\") .. \", a-stem\"\n\ttable.insert(data.categories,\
      \ \"Slovene masculine a-stem nouns\")\n\t\n\t-- Singular\n\tdata.forms[\"nom_sg\"] = {stem .. \"a\"}\n\tdata.forms[\"acc_sg\"] = {stem .. \"o\"}\n\tdata.forms[\"gen_sg\"] = {stem .. \"e\"}\n\tdata.forms[\"dat_sg\"] = {stem .. \"i\"}\n\tdata.forms[\"loc_sg\"\
      ] = {stem .. \"i\"}\n\tdata.forms[\"ins_sg\"] = {stem .. \"o\"}\n\t\n\t-- Dual\n\tdata.forms[\"nom_du\"] = {stem .. \"i\"}\n\tdata.forms[\"acc_du\"] = {stem .. \"i\"}\n\tdata.forms[\"gen_du\"] = {stem_noending}\n\tdata.forms[\"dat_du\"] = {stem .. \"ama\"\
      }\n\tdata.forms[\"loc_du\"] = {stem .. \"ah\"}\n\tdata.forms[\"ins_du\"] = {stem .. \"ama\"}\n\t\n\t-- Plural\n\tdata.forms[\"nom_pl\"] = {stem .. \"e\"}\n\tdata.forms[\"acc_pl\"] = {stem .. \"e\"}\n\tdata.forms[\"gen_pl\"] = {stem_noending}\n\tdata.forms[\"\
      dat_pl\"] = {stem .. \"am\"}\n\tdata.forms[\"loc_pl\"] = {stem .. \"ah\"}\n\tdata.forms[\"ins_pl\"] = {stem .. \"ami\"}\nend\n\n-- Feminine a-stem\ninflections[\"f\"] = function(args, data)\n\tlocal stem = args[1]; if stem == \"\" then stem = nil end\n\
      \t\n\tif not stem then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tstem = \"-\"\n\t\telse\n\t\t\terror(\"1st parameter (stem) has not been specified.\")\n\t\tend\n\tend\n\t\n\tlocal stem_noending = make_endingless_stem(stem)\n\
      \t\n\tdata.title = \"feminine, a-stem\"\n\ttable.insert(data.categories, \"Slovene feminine a-stem nouns\")\n\t\n\t-- Singular\n\tdata.forms[\"nom_sg\"] = {stem .. \"a\"}\n\tdata.forms[\"acc_sg\"] = {stem .. \"o\"}\n\tdata.forms[\"gen_sg\"] = {stem ..\
      \ \"e\"}\n\tdata.forms[\"dat_sg\"] = {stem .. \"i\"}\n\tdata.forms[\"loc_sg\"] = {stem .. \"i\"}\n\tdata.forms[\"ins_sg\"] = {stem .. \"o\"}\n\t\n\t-- Dual\n\tdata.forms[\"nom_du\"] = {stem .. \"i\"}\n\tdata.forms[\"acc_du\"] = {stem .. \"i\"}\n\tdata.forms[\"\
      gen_du\"] = {stem_noending}\n\tdata.forms[\"dat_du\"] = {stem .. \"ama\"}\n\tdata.forms[\"loc_du\"] = {stem .. \"ah\"}\n\tdata.forms[\"ins_du\"] = {stem .. \"ama\"}\n\t\n\t-- Plural\n\tdata.forms[\"nom_pl\"] = {stem .. \"e\"}\n\tdata.forms[\"acc_pl\"]\
      \ = {stem .. \"e\"}\n\tdata.forms[\"gen_pl\"] = {stem_noending}\n\tdata.forms[\"dat_pl\"] = {stem .. \"am\"}\n\tdata.forms[\"loc_pl\"] = {stem .. \"ah\"}\n\tdata.forms[\"ins_pl\"] = {stem .. \"ami\"}\nend\n\n-- Feminine a-stem, mobile accent paradigm\n\
      inflections[\"f-mobile\"] = function(args, data)\n\tlocal stem = args[1]; if stem == \"\" then stem = nil end\n\tlocal gen_pl = args[\"gen_pl\"]; if gen_pl == \"\" then gen_pl = nil end\n\t\n\tif not stem then\n\t\tif mw.title.getCurrentTitle().nsText\
      \ == \"Template\" then\n\t\t\tstem = \"-\"\n\t\telse\n\t\t\terror(\"1st parameter (stem) has not been specified.\")\n\t\tend\n\tend\n\t\n\tlocal stem_noaccents = m_common.remove_accents(stem)\n\tgen_pl = gen_pl or stem_noaccents .. \"á\"\n\t\n\tdata.title\
      \ = \"feminine, a-stem, mobile accent\"\n\ttable.insert(data.categories, \"Slovene feminine a-stem nouns\")\n\ttable.insert(data.categories, \"Slovene feminine a-stem nouns with mobile accent\")\n\t\n\t-- Singular\n\tdata.forms[\"nom_sg\"] = {stem .. \"\
      a\"}\n\tdata.forms[\"acc_sg\"] = {stem_noaccents .. \"ó\"}\n\tdata.forms[\"gen_sg\"] = {stem_noaccents .. \"é\"}\n\tdata.forms[\"dat_sg\"] = {stem .. \"i\"}\n\tdata.forms[\"loc_sg\"] = {stem .. \"i\"}\n\tdata.forms[\"ins_sg\"] = {stem_noaccents .. \"ó\"\
      }\n\t\n\t-- Dual\n\tdata.forms[\"nom_du\"] = {stem_noaccents .. \"é\"}\n\tdata.forms[\"acc_du\"] = {stem_noaccents .. \"é\"}\n\tdata.forms[\"gen_du\"] = {gen_pl}\n\tdata.forms[\"dat_du\"] = {stem_noaccents .. \"áma\"}\n\tdata.forms[\"loc_du\"] = {stem_noaccents\
      \ .. \"àh\"}\n\tdata.forms[\"ins_du\"] = {stem_noaccents .. \"áma\"}\n\t\n\t-- Plural\n\tdata.forms[\"nom_pl\"] = {stem_noaccents .. \"é\"}\n\tdata.forms[\"acc_pl\"] = {stem_noaccents .. \"é\"}\n\tdata.forms[\"gen_pl\"] = {gen_pl}\n\tdata.forms[\"dat_pl\"\
      ] = {stem_noaccents .. \"àm\"}\n\tdata.forms[\"loc_pl\"] = {stem_noaccents .. \"àh\"}\n\tdata.forms[\"ins_pl\"] = {stem_noaccents .. \"ámi\"}\nend\n\n-- Feminine v-stem\ninflections[\"f-v\"] = function(args, data)\n\tlocal stem = args[1]; if stem == \"\
      \" then stem = nil end\n\t\n\tif not stem then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tstem = \"-\"\n\t\telse\n\t\t\terror(\"1st parameter (stem) has not been specified.\")\n\t\tend\n\tend\n\t\n\tlocal stem_noending = stem\
      \ .. \"ev\"\n\tstem = stem .. \"v\"\n\t\n\tdata.title = \"feminine, v-stem\"\n\ttable.insert(data.categories, \"Slovene feminine v-stem nouns\")\n\t\n\t-- Singular\n\tdata.forms[\"nom_sg\"] = {stem_noending}\n\tdata.forms[\"acc_sg\"] = {stem_noending}\n\
      \tdata.forms[\"gen_sg\"] = {stem .. \"e\"}\n\tdata.forms[\"dat_sg\"] = {stem .. \"i\"}\n\tdata.forms[\"loc_sg\"] = {stem .. \"i\"}\n\tdata.forms[\"ins_sg\"] = {stem .. \"ijo\"}\n\t\n\t-- Dual\n\tdata.forms[\"nom_du\"] = {stem .. \"i\"}\n\tdata.forms[\"\
      acc_du\"] = {stem .. \"i\"}\n\tdata.forms[\"gen_du\"] = {stem_noending}\n\tdata.forms[\"dat_du\"] = {stem .. \"ama\"}\n\tdata.forms[\"loc_du\"] = {stem .. \"ah\"}\n\tdata.forms[\"ins_du\"] = {stem .. \"ama\"}\n\t\n\t-- Plural\n\tdata.forms[\"nom_pl\"]\
      \ = {stem .. \"e\"}\n\tdata.forms[\"acc_pl\"] = {stem .. \"e\"}\n\tdata.forms[\"gen_pl\"] = {stem_noending}\n\tdata.forms[\"dat_pl\"] = {stem .. \"am\"}\n\tdata.forms[\"loc_pl\"] = {stem .. \"ah\"}\n\tdata.forms[\"ins_pl\"] = {stem .. \"ami\"}\nend\n\n\
      -- Feminine i-stem\ninflections[\"f-i\"] = function(args, data)\n\tlocal stem = args[1]; if stem == \"\" then stem = nil end\n\t\n\tif not stem then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tstem = \"-\"\n\t\telse\n\t\t\terror(\"\
      1st parameter (stem) has not been specified.\")\n\t\tend\n\tend\n\t\n\tlocal stem_noending = make_endingless_stem(stem)\n\t\n\tdata.title = \"feminine, i-stem\"\n\ttable.insert(data.categories, \"Slovene feminine i-stem nouns\")\n\t\n\t-- Singular\n\t\
      data.forms[\"nom_sg\"] = {stem_noending}\n\tdata.forms[\"acc_sg\"] = {stem_noending}\n\tdata.forms[\"gen_sg\"] = {stem .. \"i\"}\n\tdata.forms[\"dat_sg\"] = {stem .. \"i\"}\n\tdata.forms[\"loc_sg\"] = {stem .. \"i\"}\n\tdata.forms[\"ins_sg\"] = {stem ..\
      \ (stem ~= stem_noending and \"i\" or \"\") .. \"jo\"}\n\t\n\t-- Dual\n\tdata.forms[\"nom_du\"] = {stem .. \"i\"}\n\tdata.forms[\"acc_du\"] = {stem .. \"i\"}\n\tdata.forms[\"gen_du\"] = {stem .. \"i\"}\n\tdata.forms[\"dat_du\"] = {stem .. (stem ~= stem_noending\
      \ and \"i\" or \"\") .. \"ma\"}\n\tdata.forms[\"loc_du\"] = {stem .. \"ih\"}\n\tdata.forms[\"ins_du\"] = {stem .. (stem ~= stem_noending and \"i\" or \"\") .. \"ma\"}\n\t\n\t-- Plural\n\tdata.forms[\"nom_pl\"] = {stem .. \"i\"}\n\tdata.forms[\"acc_pl\"\
      ] = {stem .. \"i\"}\n\tdata.forms[\"gen_pl\"] = {stem .. \"i\"}\n\tdata.forms[\"dat_pl\"] = {stem .. \"im\"}\n\tdata.forms[\"loc_pl\"] = {stem .. \"ih\"}\n\tdata.forms[\"ins_pl\"] = {stem .. (stem ~= stem_noending and \"i\" or \"\") .. \"mi\"}\nend\n\n\
      -- Feminine i-stem, mobile accent paradigm\ninflections[\"f-i-mobile\"] = function(args, data)\n\tlocal stem = args[1]; if stem == \"\" then stem = nil end\n\tlocal stem_dat_loc_sg = args[2]; if stem_dat_loc_sg == \"\" then stem_dat_loc_sg = nil end\n\t\
      \n\tif not stem then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tstem = \"-\"\n\t\telse\n\t\t\terror(\"1st parameter (stem) has not been specified.\")\n\t\tend\n\tend\n\t\n\tlocal stem_noending = make_endingless_stem(stem)\n\t\
      local stem_noaccents = m_common.remove_accents(stem)\n\tstem_dat_loc_sg = stem_dat_loc_sg or stem\n\t\n\tdata.title = \"feminine, i-stem, mobile accent\"\n\ttable.insert(data.categories, \"Slovene feminine i-stem nouns\")\n\ttable.insert(data.categories,\
      \ \"Slovene feminine i-stem nouns with mobile accent\")\n\t\n\t-- Singular\n\tdata.forms[\"nom_sg\"] = {stem_noending}\n\tdata.forms[\"acc_sg\"] = {stem_noending}\n\tdata.forms[\"gen_sg\"] = {stem_noaccents .. \"í\"}\n\tdata.forms[\"dat_sg\"] = {stem_dat_loc_sg\
      \ .. \"i\"}\n\tdata.forms[\"loc_sg\"] = {stem_dat_loc_sg .. \"i\"}\n\tdata.forms[\"ins_sg\"] = {stem_noaccents .. (stem ~= stem_noending and \"i\" or \"\") .. \"jó\"}\n\t\n\t-- Dual\n\tdata.forms[\"nom_du\"] = {stem_noaccents .. \"í\"}\n\tdata.forms[\"\
      acc_du\"] = {stem_noaccents .. \"í\"}\n\tdata.forms[\"gen_du\"] = {stem_noaccents .. \"í\"}\n\tdata.forms[\"dat_du\"] = {stem_noaccents .. \"éma\"}\n\tdata.forms[\"loc_du\"] = {stem_noaccents .. \"éh\"}\n\tdata.forms[\"ins_du\"] = {stem_noaccents .. \"\
      éma\"}\n\t\n\t-- Plural\n\tdata.forms[\"nom_pl\"] = {stem_noaccents .. \"í\"}\n\tdata.forms[\"acc_pl\"] = {stem_noaccents .. \"í\"}\n\tdata.forms[\"gen_pl\"] = {stem_noaccents .. \"í\"}\n\tdata.forms[\"dat_pl\"] = {stem_noaccents .. \"ém\"}\n\tdata.forms[\"\
      loc_pl\"] = {stem_noaccents .. \"éh\"}\n\tdata.forms[\"ins_pl\"] = {stem_noaccents .. (stem ~= stem_noending and \"i\" or \"\") .. \"mí\"}\nend\n\n-- Neuter o-stem\ninflections[\"n\"] = function(args, data)\n\tlocal stem = args[1]; if stem == \"\" then\
      \ stem = nil end\n\t\n\tif not stem then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tstem = \"-\"\n\t\telse\n\t\t\terror(\"1st parameter (stem) has not been specified.\")\n\t\tend\n\tend\n\t\n\tlocal stem_noending = make_endingless_stem(stem)\n\
      \t\n\t-- Is this a hard stem or a soft stem?\n\tlocal oe = \"o\"\n\tdata.title = \"neuter\"\n\t\n\tif m_common.is_soft(stem) then\n\t\toe = \"e\"\n\t\tdata.title = data.title .. \", soft\"\n\t\ttable.insert(data.categories, \"Slovene neuter soft o-stem\
      \ nouns\")\n\telse\n\t\tdata.title = data.title .. \", hard\"\n\t\ttable.insert(data.categories, \"Slovene neuter hard o-stem nouns\")\n\tend\n\t\n\t-- Singular\n\tdata.forms[\"nom_sg\"] = {stem .. oe}\n\tdata.forms[\"acc_sg\"] = {stem .. oe}\n\tdata.forms[\"\
      gen_sg\"] = {stem .. \"a\"}\n\tdata.forms[\"dat_sg\"] = {stem .. \"u\"}\n\tdata.forms[\"loc_sg\"] = {stem .. \"u\"}\n\tdata.forms[\"ins_sg\"] = {stem .. oe .. \"m\"}\n\t\n\t-- Dual\n\tdata.forms[\"nom_du\"] = {stem .. \"i\"}\n\tdata.forms[\"acc_du\"] =\
      \ {stem .. \"i\"}\n\tdata.forms[\"gen_du\"] = {stem_noending}\n\tdata.forms[\"dat_du\"] = {stem .. oe .. \"ma\"}\n\tdata.forms[\"loc_du\"] = {stem .. \"ih\"}\n\tdata.forms[\"ins_du\"] = {stem .. oe .. \"ma\"}\n\t\n\t-- Plural\n\tdata.forms[\"nom_pl\"]\
      \ = {stem .. \"a\"}\n\tdata.forms[\"acc_pl\"] = {stem .. \"a\"}\n\tdata.forms[\"gen_pl\"] = {stem_noending}\n\tdata.forms[\"dat_pl\"] = {stem .. oe .. \"m\"}\n\tdata.forms[\"loc_pl\"] = {stem .. \"ih\"}\n\tdata.forms[\"ins_pl\"] = {stem .. \"i\"}\nend\n\
      \nfunction make_endingless_stem(stem)\n\tlocal stem_noaccents = mw.ustring.lower(m_common.remove_accents(stem))\n\t\n\tif mw.ustring.find(stem_noaccents, \"[^aeioujlrv][ln]j$\") then\n\t\treturn mw.ustring.gsub(stem, \"([ln]j)$\", \"e%1\")\n\telseif mw.ustring.find(stem_noaccents,\
      \ \"[^aeiouln]j$\") then\n\t\treturn mw.ustring.gsub(stem, \"j$\", \"ij\")\n\telseif mw.ustring.find(stem_noaccents, \"[^aeiou]r$\") or mw.ustring.find(stem_noaccents, \"[^aeioujlrv][lmnv]$\") then\n\t\treturn mw.ustring.gsub(stem, \"(.)$\", \"e%1\")\n\
      \telse\n\t\treturn stem\n\tend\nend\n\n-- Make the table\nfunction make_table(data)\n\tif data.num then\n\t\treturn make_table_single(data)\n\telse\n\t\treturn make_table_full(data)\n\tend\nend\n\nfunction make_table_full(data)\n\treturn [=[\n&lt;div class=\"\
      NavFrame\" style=\"width:70em; max-width:100%;\"&gt;\n&lt;div class=\"NavHead\" style=\"background:#d9ebff; text-align: left\"&gt;Declension of ]=] .. m_links.full_link({lang = lang, alt = data.forms[\"nom_sg\"][1]}, \"term\") .. (data.title and \" (\"\
      \ .. data.title .. \")\" or \"\") .. [=[&lt;/div&gt;\n&lt;div class=\"NavContent\"&gt;\n{| style=\"background:#F9F9F9;text-align:center;width:100%\" class=\"inflection-table\"\n|-\n! style=\"background:#d9ebff;width:16%\" | \n! style=\"background:#d9ebff;width:28%\"\
      \ | singular\n! style=\"background:#d9ebff;width:28%\" | dual\n! style=\"background:#d9ebff;width:28%\" | plural\n|-\n! style=\"background:#eff7ff\" | nominative\n| ]=] .. show_forms(data.forms[\"nom_sg\"]) .. [=[\n\n| ]=] .. show_forms(data.forms[\"nom_du\"\
      ]) .. [=[\n\n| ]=] .. show_forms(data.forms[\"nom_pl\"]) .. [=[\n\n|-\n! style=\"background:#eff7ff\" | accusative\n| ]=] .. show_forms(data.forms[\"acc_sg\"]) .. [=[\n\n| ]=] .. show_forms(data.forms[\"acc_du\"]) .. [=[\n\n| ]=] .. show_forms(data.forms[\"\
      acc_pl\"]) .. [=[\n\n|-\n! style=\"background:#eff7ff\" | genitive\n| ]=] .. show_forms(data.forms[\"gen_sg\"]) .. [=[\n\n| ]=] .. show_forms(data.forms[\"gen_du\"]) .. [=[\n\n| ]=] .. show_forms(data.forms[\"gen_pl\"]) .. [=[\n\n|-\n! style=\"background:#eff7ff\"\
      \ | dative\n| ]=] .. show_forms(data.forms[\"dat_sg\"]) .. [=[\n\n| ]=] .. show_forms(data.forms[\"dat_du\"]) .. [=[\n\n| ]=] .. show_forms(data.forms[\"dat_pl\"]) .. [=[\n\n|-\n! style=\"background:#eff7ff\" | locative\n| ]=] .. show_forms(data.forms[\"\
      loc_sg\"]) .. [=[\n\n| ]=] .. show_forms(data.forms[\"loc_du\"]) .. [=[\n\n| ]=] .. show_forms(data.forms[\"loc_pl\"]) .. [=[\n\n|-\n! style=\"background:#eff7ff\" | instrumental\n| ]=] .. show_forms(data.forms[\"ins_sg\"]) .. [=[\n\n| ]=] .. show_forms(data.forms[\"\
      ins_du\"]) .. [=[\n\n| ]=] .. show_forms(data.forms[\"ins_pl\"]) .. [=[\n\n|}&lt;/div&gt;&lt;/div&gt;]=]\nend\n\nfunction make_table_single(data)\n\treturn [=[\n&lt;div class=\"NavFrame\" style=\"width:31em; max-width:100%;\"&gt;\n&lt;div class=\"NavHead\"\
      \ style=\"background:#d9ebff; text-align: left\"&gt;Declension of ]=] .. m_links.full_link({lang = lang, alt = data.forms[\"nom_\" .. data.num][1]}, \"term\") .. (data.title and \" (\" .. data.title .. \")\" or \"\") .. [=[&lt;/div&gt;\n&lt;div class=\"\
      NavContent\"&gt;\n{| style=\"background:#F9F9F9;text-align:center;width:100%\" class=\"inflection-table\"\n|-\n! style=\"background:#d9ebff;width:36%\" | \n! style=\"background:#d9ebff;width:64%\" | ]=] .. (data.num == \"pl\" and \"plural\" or data.num\
      \ == \"du\" and \"dual\" or \"singular\") .. [=[\n\n|-\n! style=\"background:#eff7ff\" | nominative\n| ]=] .. show_forms(data.forms[\"nom_\" .. data.num]) .. [=[\n\n|-\n! style=\"background:#eff7ff\" | accusative\n| ]=] .. show_forms(data.forms[\"acc_\"\
      \ .. data.num]) .. [=[\n\n|-\n! style=\"background:#eff7ff\" | genitive\n| ]=] .. show_forms(data.forms[\"gen_\" .. data.num]) .. [=[\n\n|-\n! style=\"background:#eff7ff\" | dative\n| ]=] .. show_forms(data.forms[\"dat_\" .. data.num]) .. [=[\n\n|-\n!\
      \ style=\"background:#eff7ff\" | locative\n| ]=] .. show_forms(data.forms[\"loc_\" .. data.num]) .. [=[\n\n|-\n! style=\"background:#eff7ff\" | instrumental\n| ]=] .. show_forms(data.forms[\"ins_\" .. data.num]) .. [=[\n\n|}&lt;/div&gt;&lt;/div&gt;]=]\n\
      end\n\nfunction show_forms(subforms)\n\tif not subforms then\n\t\treturn \"&amp;mdash;\"\n\telseif type(subforms) ~= \"table\" then\n\t\tsubforms = {subforms}\n\tend\n\t\n\tlocal ret = {}\n\t\n\tfor key, subform in ipairs(subforms) do\n\t\ttable.insert(ret,\
      \ m_links.full_link({lang = lang, term = subform}))\n\tend\n\t\n\treturn table.concat(ret, \",&lt;br/&gt;\")\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-08-28T19:11:37.763Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aes-verb-form&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=28-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 28 Aug 2015 19:11:36 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Aug-2015
      X-Cache: cp1055 miss (0), cp3030 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 3768649087, 2403651529, 3656425684
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="972305" pageid="972305" ns="10" title="Template:es-verb-form"><revisions><rev user="CodeCat" timestamp="2014-12-24T01:23:22Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{head|es|verb form|head={{{head|}}}}}&lt;!--

      --&gt;{{#if:{{{1|}}}|[[Category:es-verb-form with infinitive]]}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:38.059Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aes-verb+form+of&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=39249 t=1555362397968574
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:38 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1343.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 501660940, 248195029, 677764080
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"738572\" pageid=\"738572\" ns=\"10\" title=\"Template:es-verb form of\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-07-22T21:12:15Z\"\
      \ contentformat=\"text/x-wiki\" contentmodel=\"wikitext\" comment=\"ensure there&#039;s a space after the &quot;region&quot; label\" xml:space=\"preserve\">&lt;includeonly&gt;&lt;!--\n/* General explanation: This template works by invoking the appropriate\n\
      \ * subtemplate, depending on the value of the {{{mood}}} parameter. This makes\n * it easy to support a very flexible interface, with, say, num=pl being\n * equivalent to number=plural: this template normalizes these equivalences to\n * a standard form\
      \ before passing the parameters into the subtemplate, so none\n * of the subtemplates needs to worry about it.\n *\n * More specifically: A subtemplate produces a snippet like\n *     first-person singular (“yo”) present indicative form of\n * and adds\
      \ the appropriate categories. This template wraps this in either\n * {{lcfirst:…}} or {{ucfirst:…}} (depending on the value of {{{nocap}}}),\n * appends &lt;span class=\"mention\"&gt;{{{1}}}&lt;/span&gt;, may add a period at the end\n * (depending on the\
      \ value of {{{nodot}}}), and wraps the whole thing in\n * &lt;span class=\"use-with-mention\"&gt;…&lt;/span&gt;.\n */\n\n--&gt;{{#if:{{{region|}}}&lt;!--\n--&gt;|&lt;!--\n  --&gt;{{label|es|{{{region}}}|nocat=1}}&amp;#32;&lt;!--\n  \n  --&gt;{{#switch:{{{region}}}&lt;!--\n\
      \  --&gt;|Spain={{categorize|es|European Spanish verb forms}}&lt;!--\n  --&gt;|Latin America={{categorize|es|Latin American Spanish verb forms}}&lt;!--\n  --&gt;}}&lt;!--\n--&gt;}}&lt;!--\n\n--&gt;&lt;!--\n\n--&gt;&lt;span class=\"use-with-mention\"&gt;&lt;!--\n\
      \n--&gt;{{{{#if:{{{nocap|}}}|l|u}}cfirst:&lt;!--\n  --&gt;{{es-verb form of/&lt;!--\n    --&gt;{{#switch:{{{mood|}}}&lt;!--\n    --&gt;|ind|indicative=indicative&lt;!--\n    --&gt;|subj|subjunctive=subjunctive&lt;!--\n    --&gt;|imp|imperative=imperative&lt;!--\n\
      \    --&gt;|cond|conditional=conditional&lt;!--\n    --&gt;|par|part|participle|past participle|past-participle=participle&lt;!--\n    --&gt;|adv|adverbial|ger|gerund|gerundive|gerundio|present participle|present-participle=adverbial&lt;!--\n    --&gt;|#default=error&lt;!--\n\
      \    --&gt;}}&lt;!--\n  --&gt;|tense=&lt;!--\n    --&gt;{{#switch:{{{tense|}}}&lt;!--\n    --&gt;|pres|present=present&lt;!--\n    --&gt;|imp|imperfect=imperfect&lt;!--\n    --&gt;|pret|preterit|preterite=preterite&lt;!--\n    --&gt;|fut|future=future&lt;!--\n\
      \    --&gt;|cond|conditional=conditional&lt;!--\n    --&gt;}}&lt;!--\n  --&gt;|number=&lt;!--\n    --&gt;{{#switch:{{{num|{{{number|}}}}}}&lt;!--\n    --&gt;|s|sg|sing|singular=singular&lt;!--\n    --&gt;|p|pl|plural=plural&lt;!--\n    --&gt;}}&lt;!--\n\
      \  --&gt;|person=&lt;!--\n    --&gt;{{#switch:{{{pers|{{{person|}}}}}}&lt;!--\n    --&gt;|1|first|first person|first-person=first&lt;!--\n    --&gt;|2|second|second person|second-person=second&lt;!--\n    --&gt;|3|third|third person|third-person=third&lt;!--\n\
      \    --&gt;|0|-|imp|impersonal=impersonal&lt;!--\n    --&gt;}}&lt;!--\n  --&gt;|formal=&lt;!--\n    --&gt;{{#switch:{{{formal|}}}&lt;!--\n    --&gt;|y|yes=yes&lt;!--\n    --&gt;|n|no=no&lt;!--\n    --&gt;}}&lt;!--\n  --&gt;|gender=&lt;!--\n    --&gt;{{#switch:{{{gen|{{{gender|}}}}}}&lt;!--\n\
      \    --&gt;|m|masc|masculine=masculine&lt;!--\n    --&gt;|f|fem|feminine=feminine&lt;!--\n    --&gt;}}&lt;!--\n  --&gt;|sense=&lt;!--\n    --&gt;{{#switch:{{{sense|}}}&lt;!--\n      --&gt;|+|aff|affirmative=affirmative&lt;!--\n      --&gt;|-|neg|negative=negative&lt;!--\n\
      \      --&gt;}}&lt;!--\n  --&gt;|sera=&lt;!--\n     --&gt;{{#switch:{{{sera|}}}&lt;!--\n     --&gt;|se=se&lt;!--\n     --&gt;|ra=ra&lt;!--\n     --&gt;}}&lt;!--\n  --&gt;|ending=&lt;!--\n    --&gt;{{#switch:{{{end|{{{ending|}}}}}}&lt;!--\n    --&gt;|ar|-ar=-ar&lt;!--\n\
      \    --&gt;|er|-er=-er&lt;!--\n    --&gt;|ir|-ir=-ir&lt;!--\n    --&gt;}}&lt;!--\n  --&gt;|participle=&lt;!--\n    --&gt;{{{ms|{{{par|{{{part|{{{participle|}}}}}}}}}}}}&lt;!--\n  --&gt;|voseo=&lt;!--\n    --&gt;{{#if:{{{voseo|}}}|yes|no}}&lt;!--\n  --&gt;}}&lt;!--\n\
      --&gt;}}&lt;!--\n\n--&gt; &lt;!--\n\n--&gt;{{m|es|{{{1|{{{verb|{{{inf|{{{infinitive|}}}}}}}}}}}}}}&lt;!--\n\n--&gt;{{#if:{{{nodot|}}}||.}}&lt;!--\n\n--&gt;&lt;/span&gt;&lt;!--\n\n--&gt;&lt;/includeonly&gt;&lt;!--\n\n--&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:38.370Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aes-verb+form+of%2Findicative&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=142141 t=1555362398138983
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '2988'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:38 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1287.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 590382008, 260377100, 697804838
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="738495" pageid="738495" ns="10" title="Template:es-verb form of/indicative"><revisions><rev user="Vivaelcelta" timestamp="2014-05-05T01:59:21Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">&lt;includeonly&gt; &lt;!--
      // If the form is incompletely specified, start with "a(n)" and mark for cleanup:
      --&gt; {{ #switch: {{{tense}}} &lt;!--
          --&gt; | present | imperfect | preterite | future | conditional = &lt;!--
              --&gt; {{ #switch: {{{person}}} &lt;!--
                  --&gt; | first | third = &lt;!--
                      --&gt; {{ #switch: {{{number}}} &lt;!--
                          --&gt; | singular | plural = &lt;!--
                          --&gt; | a(n) [[ Category : Requests for cleanup (Spanish verb form) ]] &lt;!--
                      --&gt; }} &lt;!--
                  --&gt; | second = &lt;!--
                      --&gt; {{ #switch: {{{number}}} &lt;!--
                          --&gt; | singular = &lt;!--
                             --&gt; {{ #switch: {{{formal}}} &lt;!--
                                  --&gt; | no | yes = &lt;!--
                                  --&gt; | a(n) [[ Category : Requests for cleanup (Spanish verb form) ]] &lt;!--
                              --&gt; }} | plural = &lt;!--
                                 --&gt; | a(n) [[ Category : Requests for cleanup (Spanish verb form) ]] &lt;!--
                      --&gt; }} &lt;!--
                  --&gt; | impersonal = &lt;!--
                  --&gt; | a(n) [[ Category : Requests for cleanup (Spanish verb form) ]] &lt;!--
              --&gt; }} &lt;!--
          --&gt; | a(n) [[ Category : Requests for cleanup (Spanish verb form) ]] &lt;!--
      --&gt; }} &lt;!--
      // Now, produce the text:
      --&gt; {{ es-verb form of/subtense-name | number = {{{number}}} | person = {{{person}}} | formal = {{{formal}}} }} &lt;!--
      --&gt; {{ es-verb form of/subtense-pronoun | number = {{{number}}} | person = {{{person}}} | formal = {{{formal}}} | voseo = {{{voseo}}} }} &lt;!--
      --&gt; {{ #switch: {{{tense}}} | present | imperfect | preterite | future = {{{tense}}} indicative | conditional = conditional }} &lt;!--
      --&gt; form of &lt;!--
      // A category for the verb endings:
      --&gt; {{ #if: {{{ending}}} | [[ Category : Spanish forms of verbs ending in {{{ending}}} ]] }}&lt;!--
      --&gt;&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}
      [[Category:es-verb form of subtemplates]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:38.537Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aes-verb+form+of%2Fsubtense-name&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46807 t=1555362398443455
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1924'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:38 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 673620455, 634082711, 682226818
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="738434" pageid="738434" ns="10" title="Template:es-verb form of/subtense-name"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T18:02:49Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:es-verb form of/subtense-name]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and admin..." xml:space="preserve">&lt;includeonly&gt; &lt;!--
      --&gt; {{ #switch: {{{person}}} &lt;!--
          --&gt; | first | third = {{{person}}}-person {{ #switch: {{{number}}} | singular | plural = {{{number}}} }} &lt;!--
          --&gt; | second = &lt;!--
              --&gt; {{ #switch: {{{formal}}} | no = informal | yes = {{ #ifeq: {{{number}}} | plural | | formal }} }} &lt;!--
              --&gt; second-person {{ #switch: {{{number}}} | singular | plural = {{{number}}} }} &lt;!--
          --&gt; | impersonal = &lt;!--
          --&gt; | {{ #switch: {{{number}}} | singular | plural = {{{number}}} }} &lt;!--
      --&gt; }} &lt;/includeonly&gt;&lt;noinclude&gt;Please see the documentation on the [[Template talk:es-verb form of/subtense-name|talk page]].[[Category:es-verb form of subtemplates]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:38.717Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aes-verb+form+of%2Fsubtense-pronoun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54405 t=1555362398615765
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '2132'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:38 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1340.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 510789034, 256743558, 702808461
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="738774" pageid="738774" ns="10" title="Template:es-verb form of/subtense-pronoun"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T18:02:52Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:es-verb form of/subtense-pronoun]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and ad..." xml:space="preserve">&lt;includeonly&gt;&lt;!--
      --&gt;{{ #switch: {{{voseo}}} | yes = ({{m|es|vos}}) | no = &lt;!--
      --&gt;{{ #switch: {{{number}}}-{{{person}}}-{{{formal|}}} | singular-first- = ({{m|es|yo}}) | singular-second- | singular-second-no = ({{m|es|tú}}) | singular-second-yes = ({{m|es|usted}}) | singular-third- = ({{m|es|él}}, {{m|es|ella}}, also used with {{m|es|usted}}&lt;sup&gt;[[Appendix:Spanish conjugation#Pronouns|?]]&lt;/sup&gt;) | plural-first- = ({{m|es|nosotros}}, {{m|es|nosotras}}) | plural-second-no = ({{m|es|vosotros}}, {{m|es|vosotras}}) | plural-second-yes = ({{m|es|ustedes}}) | plural-third- = ({{m|es|ellos}}, {{m|es|ellas}}, also used with {{m|es|ustedes}}&lt;sup&gt;[[Appendix:Spanish conjugation#Pronouns|?]]&lt;/sup&gt;) }}&lt;!--
      --&gt; }}&lt;!-- // end of voseo switch
      --&gt;&lt;/includeonly&gt;&lt;noinclude&gt;Please see the documentation on the [[Template talk:es-verb form of]].[[Category:es-verb form of subtemplates]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:26.967Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Am&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44857 t=1555362386875319
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:26 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1284.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 669304164, 627900388, 683209029
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4580450" pageid="4580450" ns="10" title="Template:m"><revisions><rev user="Surjection" timestamp="2018-11-27T19:42:02Z" contentformat="text/x-wiki" contentmodel="wikitext"
      comment="Protected &quot;[[Template:m]]&quot;: Highly visible template/module: even if it is just a redirect ([Edit=Allow only autoconfirmed users] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">#REDIRECT
      [[Template:mention]]</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:06:27.140Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Amention&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45149 t=1555362387045655
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1283.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 206671723, 479192667, 701630930
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4064248\" pageid=\"4064248\" ns=\"10\" title=\"Template:mention\"><revisions><rev user=\"Vahagn Petrosyan\" timestamp=\"2018-01-04T20:12:00Z\"\
      \ contentformat=\"text/x-wiki\" contentmodel=\"wikitext\" comment=\"Protected &quot;[[Template:mention]]&quot;: Highly visible template/module ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators]\
      \ (indefinite))\" xml:space=\"preserve\">{{#invoke:links/templates|l_term_t|face=term&lt;noinclude&gt;|demo=term&lt;/noinclude&gt;}}&lt;!--\n\n--&gt;{{#if:{{{lang|}}}|[[Category:m with lang]]}}&lt;!--\n\n--&gt;{{#ifeq:{{PAGENAME}}|RecentChanges||&lt;!--\n\
      \    --&gt;{{#ifeq:{{{1|}}}|und|[[Category:Undetermined language links]]}}&lt;!--\n--&gt;}}&lt;!--\n\n--&gt;{{redlink category|{{{1|}}}|{{{2|}}}|template=m}}&lt;!--\n\n--&gt;&lt;noinclude&gt;{{documentation}}&lt;templatedata&gt;\n{\n\t\"params\": {\n\t\
      \t\"1\": {\n\t\t\t\"label\": \"language code\",\n\t\t\t\"example\": \"en\",\n\t\t\t\"type\": \"string\",\n\t\t\t\"required\": true,\n\t\t\t\"aliases\": [\n\t\t\t\t\"The language code (see [[Wiktionary:Languages]]) for the language that the term is in.\"\
      \n\t\t\t]\n\t\t},\n\t\t\"2\": {\n\t\t\t\"label\": \"term\",\n\t\t\t\"example\": \"example\",\n\t\t\t\"type\": \"wiki-page-name\",\n\t\t\t\"description\": \"The page name to be linked to.\"\n\t\t},\n\t\t\"3\": {\n\t\t\t\"label\": \"alternate text\",\n\t\
      \t\t\"description\": \" Alternate text to display as the link title, if different from the page name. Please do not use this only for adding diacritics or punctuation to the word, as the template can automatically remove these. \",\n\t\t\t\"type\": \"\
      string\"\n\t\t},\n\t\t\"t\": {\n\t\t\t\"description\": \"A gloss or short translation of the word. \",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"lit\": {\n\t\t\t\"description\": \" A literal translation for the term.\"\n\t\t},\n\t\t\"id\": {\n\t\t\t\"\
      label\": \"sense id\",\n\t\t\t\"description\": \"A sense id for the term, which links to anchors on the page set by the {{senseid}} template.\",\n\t\t\t\"example\": \"house\",\n\t\t\t\"type\": \"string\"\n\t\t}\n\t},\n\t\"format\": \"inline\",\n\t\"description\"\
      : \"This template generates a link to an entry in a given language. It links to a specific language-section on the target page, and applies language-specific formatting. It can also show a number of annotations after the linked term.\"\n}\n&lt;/templatedata&gt;\n\
      &lt;/noinclude&gt;</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:40.394Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aes-verb+form+of%2Fimperative&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58535 t=1555362400288002
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '2820'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:40 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1340.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 579550594, 553666397, 697641320
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="740044" pageid="740044" ns="10" title="Template:es-verb form of/imperative"><revisions><rev user="Rua" timestamp="2016-01-25T16:57:23Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">&lt;includeonly&gt; {{ #switch: {{{person}}}-{{{number}}}-{{{formal}}} &lt;!--
          --&gt; | first-plural- &lt;!--
          --&gt; | first-plural-yes = &lt;!--
              --&gt; first-person plural ({{m|es|nosotros}}, {{m|es|nosotras}}) {{{sense}}} imperative form of &lt;!--
          --&gt; | second-singular-no = &lt;!--
              --&gt; {{ #switch: {{{sense}}} &lt;!--
                  --&gt; | affirmative | negative = informal second-person singular &lt;!--
                  --&gt;{{ #switch: {{{voseo}}} | yes = ({{m|es|voseo}}) | no = ({{m|es|tú}}) }}&lt;!--
                  --&gt; {{{sense}}} imperative form of &lt;!--
                  --&gt; | a form of [[ Category : Requests for cleanup (Spanish verb form) ]] &lt;!--
              --&gt; }} &lt;!--
          --&gt; | second-singular-yes = &lt;!--
              --&gt; formal second-person singular ({{m|es|usted}}) imperative form of &lt;!--
          --&gt; | second-plural-no = &lt;!--
              --&gt; {{ #switch: {{{sense}}} &lt;!--
                  --&gt; | affirmative | negative = informal second-person plural ({{m|es|vosotros}} or {{m|es|vosotras}}) {{{sense}}} imperative form of &lt;!--
                  --&gt; | a form of [[ Category : Requests for cleanup (Spanish verb form) ]] &lt;!--
              --&gt; }} &lt;!--
          --&gt; | second-plural- &lt;!--
          --&gt; | second-plural-yes = &lt;!--
              --&gt; second-person plural ({{m|es|ustedes}}) imperative form of &lt;!--
          --&gt; | a form of [[ Category : Requests for cleanup (Spanish verb form) ]] &lt;!--
      --&gt; }} &lt;!--
      // A category for the verb endings:
      --&gt; {{ #if: {{{ending}}} &lt;!--
          --&gt; | [[ Category : Spanish forms of verbs ending in {{{ending}}} ]] &lt;!--
          --&gt; | [[ Category : Requests for cleanup (Spanish verb form) ]] &lt;!--
      --&gt; }} &lt;!--
      --&gt; &lt;!--
      --&gt;&lt;/includeonly&gt;
      &lt;noinclude&gt;Please see the documentation on the [[Template talk:es-verb form of/imperative|talk page]].
      [[Category:es-verb form of subtemplates]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:21.132Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51408 t=1555362381029971
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:21 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1285.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 583039821, 737021842, 683047419
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6074448\" pageid=\"6074448\" ns=\"828\" title=\"Module:headword/data\"><revisions><rev user=\"Surjection\" timestamp=\"2019-01-11T21:27:17Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"they are not lemmas just because you say they are\" xml:space=\"preserve\">local data = {}\n\ndata.invariable = {\n\t\"cmavo\",\n\t\"cmene\",\n\t\"fu'ivla\",\n\t\"gismu\",\n\t\"Han tu\"\
      ,\n\t\"hanzi\",\n\t\"hanja\",\n\t\"jyutping\",\n\t\"kanji\",\n\t\"lujvo\",\n\t\"phrasebook\",\n\t\"pinyin\",\n\t\"rafsi\",\n\t\"romaji\",\n}\n\ndata.lemmas = {\n\t\"abbreviations\",\n\t\"acronyms\",\n\t\"adjectives\",\n\t\"adnominals\",\n\t\"adpositions\"\
      ,\n\t\"adverbs\",\n\t\"affixes\",\n\t\"ambipositions\",\n\t\"articles\",\n\t\"circumfixes\",\n\t\"circumpositions\",\n\t\"classifiers\",\n\t\"cmavo\",\n\t\"cmavo clusters\",\n\t\"cmene\",\n\t\"combining forms\",\n\t\"conjunctions\",\n\t\"counters\",\n\t\
      \"determiners\",\n\t\"diacritical marks\",\n\t\"equative adjectives\",\n\t\"fu'ivla\",\n\t\"gismu\",\n\t\"Han characters\",\n\t\"Han tu\",\n\t\"hanzi\",\n\t\"hanja\",\n\t\"idioms\",\n\t\"infixes\",\n\t\"interfixes\",\n\t\"initialisms\",\n\t\"interjections\"\
      ,\n\t\"kanji\",\n\t\"letters\",\n\t\"ligatures\",\n\t\"lujvo\",\n\t\"morphemes\",\n\t\"non-constituents\",\n\t\"nouns\",\n\t\"numbers\",\n\t\"numeral symbols\",\n\t\"numerals\",\n\t\"particles\",\n\t\"phrases\",\n\t\"postpositions\",\n\t\"predicatives\"\
      ,\n\t\"prefixes\",\n\t\"prepositions\",\n\t\"prepositional phrases\",\n\t\"preverbs\",\n\t\"pronominal adverbs\",\n\t\"pronouns\",\n\t\"proverbs\",\n\t\"proper nouns\",\n\t\"punctuation marks\",\n\t\"relatives\",\n\t\"roots\",\n\t\"stems\",\n\t\"suffixes\"\
      ,\n\t\"syllables\",\n\t\"symbols\",\n\t\"verbs\",\n}\n\ndata.nonlemmas = {\n\t\"active participles\",\n\t\"adjectival participles\",\n\t\"adjective forms\",\n\t\"adjective comparative forms\", -- TODO: replace with \"comparative adjectives\" or \"comparative\
      \ adjective forms\", depending on which one the word is\n\t\"adjective feminine forms\",\n\t\"adjective equative forms\",\n\t\"adjective plural forms\",\n\t\"adjective superlative forms\", -- TODO: replace with \"superlative adjectives\" or \"superlative\
      \ adjective forms\", depending on which one the word is\n\t\"adverb forms\",\n\t\"adverb comparative forms\", -- TODO: replace with \"comparative adverbs\" or \"comparative adverb forms\", depending on which one the word is\n\t\"adverb superlative forms\"\
      , -- TODO: replace with \"superlative adverbs\" or \"superlative adverb forms\", depending on which one the word is\n\t\"adverbial participles\",\n\t\"agent participles\",\n\t\"article forms\",\n\t\"circumfix forms\",\n\t\"combined forms\",\n\t\"comparative\
      \ adjective forms\",\n\t\"comparative adjectives\",\n\t\"comparative adverb forms\",\n\t\"comparative adverbs\",\n\t\"contractions\",\n\t\"converbs\",\n\t\"determiner comparative forms\",\n\t\"determiner forms\",\n\t\"determiner superlative forms\",\n\t\
      \"diminutive nouns\",\n\t\"future participles\",\n\t\"gerunds\",\n\t\"infinitive forms\",\n\t\"infinitives\",\n\t\"interjection forms\",\n\t\"jyutping\",\n\t\"kanji readings\",\n\t\"misspellings\",\n\t\"negative participles\",\n\t\"nominal participles\"\
      ,\n\t\"noun case forms\",\n\t\"noun dual forms\",\n\t\"noun forms\",\n\t\"noun plural forms\",\n\t\"noun possessive forms\",\n\t\"noun singulative forms\",\n\t\"numeral forms\",\n\t\"participles\",\n\t\"participle forms\",\n\t\"particle forms\",\n\t\"\
      passive participles\",\n\t\"past active participles\",\n\t\"past participles\",\n\t\"past participle forms\",\n\t\"past passive participles\",\n\t\"perfect active participles\",\n\t\"perfect participles\",\n\t\"perfect passive participles\",\n\t\"pinyin\"\
      ,\n\t\"plurals\",\n\t\"postposition forms\",\n\t\"prefix forms\",\n\t\"preposition contractions\",\n\t\"preposition forms\",\n\t\"prepositional pronouns\",\n\t\"present active participles\",\n\t\"present participles\",\n\t\"present passive participles\"\
      ,\n\t\"pronoun forms\",\n\t\"pronoun possessive forms\",\n\t\"proper noun forms\",\n\t\"proper noun plural forms\",\n\t\"rafsi\",\n\t\"romanizations\",\n        \"root forms\",\n\t\"singulatives\",\n\t\"suffix forms\",\n\t\"superlative adjective forms\"\
      ,\n\t\"superlative adjectives\",\n\t\"superlative adverb forms\",\n\t\"superlative adverbs\",\n\t\"verb forms\",\n\t\"verbal nouns\",\n}\n\ndata.notranslit = {\n\t\"ams\",\n\t\"az\",\n\t\"bbc\",\n\t\"bug\",\n\t\"cia\",\n\t\"cjm\",\n\t\"cmn\",\n\t\"hak\"\
      ,\n\t\"ja\",\n\t\"kzg\",\n\t\"lad\",\n\t\"lzh\",\n\t\"ms\",\n\t\"mul\",\n\t\"mvi\",\n\t\"nan\",\n\t\"oj\",\n\t\"okn\",\n\t\"pi\",\n\t\"ro\",\n\t\"ryn\",\n\t\"rys\",\n\t\"ryu\",\n\t\"sh\",\n\t\"tgt\",\n\t\"th\",\n\t\"tkn\",\n\t\"tly\",\n\t\"und\",\n\t\"\
      vi\",\n\t\"xug\",\n\t\"yue\",\n\t\"yoi\",\n\t\"yox\",\n\t\"za\",\n\t\"zh\",\n}\n\n-- Script codes for which a script-tagged display title will be added.\t\ndata.toBeTagged = {\n\t\"Ahom\",\n\t\"Arab\",\n\t\"Avst\",\n\t\"Bali\",\n\t\"Cham\",\n\t\"Copt\"\
      ,\n\t\"Kali\",\n\t\"Hani\",\n\t\"Hebr\",\n\t\"Lana\",\n\t\"Linb\",\n\t\"Mand\",\n\t\"Mong\",\n\t\"polytonic\",\n\t\"Rjng\",\n\t\"Samr\",\n\t\"Sund\",\n\t\"Sylo\",\n\t\"Tang\",\n\t\"Tavt\",\n\t\"Xsux\",\n}\n\nfor key, list in pairs(data) do\n\tdata[key]\
      \ = require(\"Module:utils\").list_to_set(list)\nend\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:21.306Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autils&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45195 t=1555362381209902
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:21 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1285.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 396328605, 497987994, 695284171
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4882600\" pageid=\"4882600\" ns=\"828\" title=\"Module:utils\"><revisions><rev user=\"Metaknowledge\" timestamp=\"2017-09-23T01:00:56Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Protected &quot;[[Module:utils]]&quot;: Highly visible template/module ([Edit=Allow only autoconfirmed users] (indefinite) [Move=Allow only autoconfirmed users] (indefinite))\" xml:space=\"\
      preserve\">--[=[\n  Module:utils v0.3.1\n  Date: 2015-08-14\n\n  This module contains some common useful functions.\n  Fill free to add another universal functions here.\n]=]--\n\nlocal export = {}\n\n-- Function to clone table (sometimes it works better\
      \ then mw.clone)\nfunction export.clone(original)\n    local copy = {}\n    for key, value in pairs(original) do\n        copy[key] = value\n    end\n    return copy\nend\n\n-- Function to get current PAGENAME and related\nfunction export.get_base()\n\t\
      local PAGENAME = mw.title.getCurrentTitle().text\n\tlocal SUBPAGENAME = mw.title.getCurrentTitle().subpageText\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\t\n\tif NAMESPACE == 'User' or NAMESPACE == 'Участник' then\n\t\treturn SUBPAGENAME\n\
      \tend\n\treturn PAGENAME\nend\n\n-- Function to iterate table with sorted keys (sorting function can be different)\nfunction export.spairs(t, order)\n    -- collect the keys\n    local keys = {}\n    for k in pairs(t) do keys[#keys+1] = k end\n    -- sort\n\
      \    if order then\n        table.sort(keys, function(a,b) return order(t, a, b) end)\n    else\n        table.sort(keys)\n    end\n    -- return the iterator function\n    local i = 0\n    return function()\n        i = i + 1\n        if keys[i] then\n\
      \            return keys[i], t[keys[i]]\n        end\n    end\nend\n\n-- Functions to measure working time of scripts (start)\nfunction export.start()\n\texport.started = os.clock()\nend\n\n-- Functions to measure working time of scripts (stop)\nfunction\
      \ export.stop(desc)\n\texport.stoped = os.clock()\n\texport.delta = export.stoped - export.started\n\tif desc == nil then\n\t\tdesc = 'time delta'\n\tend\n\tmw.log('™ ' .. desc .. ' = ' .. export.delta)\nend\n\n-- Function to find common part (length)\
      \ of two strings\n-- (common part from the beginning of strings)\nfunction export.find_common(str_1, str_2)\n\tif not str_1 or not str_2 then\n\t\treturn 1\n\tend\n\tfor pos = 1, #str_1 do\n\t    local char_1 = str_1:sub(pos, pos)\n\t    local char_2 =\
      \ str_2:sub(pos, pos)\n\t    if char_1 ~= char_2 then\n\t    \treturn pos\n\t    end\n\tend\n\treturn 1\nend\n\n-- Function that allows easily add values into dict of dicts of lists\n-- Example of this structure:\n--   dict = {\n--     key1 = {\n--   \
      \    sub_key1 = {value1, value2, value3},\n--       sub_key2 = {value4, value5},\n--     },\n--     key2 = {\n--       sub_key3 = {value6},\n--       sub_key4 = {value7, value8},\n--     },\n--   }\nfunction export.put_value(dict, key, sub_key, value)\n\
      \tif not dict[key] then\n\t\tdict[key] = {}\n\tend\n\tif not dict[key][sub_key] then\n\t\tdict[key][sub_key] = {}\n\tend\n\ttable.insert(dict[key][sub_key], value)\nend\n\n-- Compare two items, recursively comparing lists.\n-- FIXME, doesn't work for tables\
      \ that aren't lists.\nfunction export.equals(x, y)\n    if type(x) == \"table\" and type(y) == \"table\" then\n        if #x ~= #y then\n            return false\n        end \n        for key, value in ipairs(x) do\n            if not export.equals(value,\
      \ y[key]) then\n                return false\n            end\n        end\n        return true\n    end\n    return x == y\nend\n\n-- true if list contains item\nfunction export.contains(tab, item)\n    for _, value in pairs(tab) do\n        if export.equals(value,\
      \ item) then\n            return true\n        end\n    end\n    return false\nend\n\n-- append to list if element not already present\nfunction export.insert_if_not(tab, item)\n    if not export.contains(tab, item) then\n        table.insert(tab, item)\n\
      \    end\nend\n\n-- convert list to set\nfunction export.list_to_set(list)\n\tlocal set = {}\n\tfor _, item in ipairs(list) do\n\t\tset[item] = true\n\tend\n\treturn set\nend\n\n-- Inhibit Regular Expression magic characters ^$()%.[]*+-?)\nfunction export.escape(value)\n\
      \    -- Prefix every non-alphanumeric character (%W) with a % escape character, \n    -- where %% is the % escape, and %1 is original character\n    return mw.ustring.gsub(value, \"(%W)\",\"%%%1\")\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:21.706Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Astring&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56487 t=1555362381571084
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:21 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1224.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 751900805, 485610282, 696039536
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4099547\" pageid=\"4099547\" ns=\"828\" title=\"Module:string\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-10-18T08:33:33Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"okay for count to be nil\" xml:space=\"preserve\">local str = {}\n\n-- Cannot include null byte.\nlocal UTF8_char = \"[\\1-\\127\\194-\\244][\\128-\\191]*\"\n\n--[[\nulen\n\nCounts UTF-8 characters. Faster\
      \ than mw.ustring.len.\n\nAssumes that the encoding is correct. Unlike mw.ustring.len, does not return nil\nif encoding is invalid.\n\nDoes not count the bytes 192, 193, and 245-255. They are not used in UTF-8 and\nwill not occur if the string is valid.\
      \ They are replaced with the replacement\ncharacter (U+FFFD) on MediaWiki pages.\n--]]\nfunction str.ulen(text)\n\tlocal _, length = string.gsub(text, UTF8_char, \"\")\n\treturn length\nend\n\n--[[\nlen\n\nThis function returns the length of the target\
      \ string.\n\nUsage:\n{{#invoke:string|len|target_string|}}\nOR\n{{#invoke:string|len|s=target_string}}\n\nParameters\n    s: The string whose length to report\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing\
      \ whitespace from the target string.\n]]\nfunction str.len(frame)\n\tlocal new_args = str._getParameters(frame.args, { 's' });\n\tlocal s = new_args['s'] or '';\n\treturn mw.ustring.len(s)\nend\n\n--[[\nsub\n\nThis function returns a substring of the target\
      \ string at specified indices.\n\nUsage:\n{{#invoke:string|sub|target_string|start_index|end_index}}\nOR\n{{#invoke:string|sub|s=target_string|i=start_index|j=end_index}}\n\nParameters\n    s: The string to return a subset of\n    i: The fist index of\
      \ the substring to return, defaults to 1.\n    j: The last index of the string to return, defaults to the last character.\n    \nThe first character of the string is assigned an index of 1.  If either i or j\nis a negative value, it is interpreted the\
      \ same as selecting a character by\ncounting from the end of the string.  Hence, a value of -1 is the same as\nselecting the last character of the string.\n\nIf the requested indices are out of range for the given string, an error is\nreported.\n]]\nfunction\
      \ str.sub(frame)\n\tlocal new_args = str._getParameters(frame.args, { 's', 'i', 'j' });\n\tlocal s = new_args['s'] or '';\n\tlocal i = tonumber(new_args['i']) or 1;\n\tlocal j = tonumber(new_args['j']) or -1;\n\t\n\tlocal len = mw.ustring.len(s);\n\t\n\
      \t-- Convert negatives for range checking\n\tif i &lt; 0 then\n\t\ti = len + i + 1;\n\tend\n\tif j &lt; 0 then\n\t\tj = len + j + 1;\n\tend\n\t\n\tif i &gt; len or j &gt; len or i &lt; 1 or j &lt; 1 then\n\t\treturn str._error('String subset index out\
      \ of range');\n\tend\n\tif j &lt; i then\n\t\treturn str._error('String subset indices out of order');\n\tend\n\t\n\treturn mw.ustring.sub(s, i, j)\nend\n\n--[[\nThis function implements that features of {{str sub old}} and is kept in order\nto maintain\
      \ these older templates.\n]]\nfunction str.sublength(frame)\n\tlocal i = tonumber(frame.args.i) or 0\n\tlocal len = tonumber(frame.args.len)\n\treturn mw.ustring.sub(frame.args.s, i + 1, len and (i + len))\nend\n\n--[[\nmatch\n\nThis function returns a\
      \ substring from the source string that matches a\nspecified pattern.\n\nUsage:\n{{#invoke:string|match|source_string|pattern_string|start_index|match_number|plain_flag|nomatch_output}}\nOR\n{{#invoke:string|pos|s=source_string|pattern=pattern_string|start=start_index\n\
      \    |match=match_number|plain=plain_flag|nomatch=nomatch_output}}\n\nParameters\n    s: The string to search\n    pattern: The pattern or string to find within the string\n    start: The index within the source string to start the search.  The first\n\
      \        character of the string has index 1.  Defaults to 1.\n    match: In some cases it may be possible to make multiple matches on a single\n        string.  This specifies which match to return, where the first match is\n        match= 1.  If a negative\
      \ number is specified then a match is returned\n        counting from the last match.  Hence match = -1 is the same as requesting\n        the last match.  Defaults to 1.\n    plain: A flag indicating that the pattern should be understood as plain\n  \
      \      text.  Defaults to false.\n    nomatch: If no match is found, output the \"nomatch\" value rather than an error.\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from each string.  In\
      \ some circumstances this is desirable, in\nother cases one may want to preserve the whitespace.\n\nIf the match_number or start_index are out of range for the string being queried, then\nthis function generates an error.  An error is also generated if\
      \ no match is found.\nIf one adds the parameter ignore_errors=true, then the error will be suppressed and\nan empty string will be returned on any failure.\n\nFor information on constructing Lua patterns, a form of [regular expression], see:\n\n* http://www.lua.org/manual/5.1/manual.html#5.4.1\n\
      * http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Patterns\n* http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Ustring_patterns\n\n]]\nfunction str.match(frame)\n\tlocal new_args = str._getParameters(frame.args,\
      \ { 's', 'pattern', 'start', 'match', 'plain', 'nomatch' });\n\tlocal s = new_args['s'] or '';\n\tlocal start = tonumber(new_args['start']) or 1;\n\tlocal plain_flag = str._getBoolean(new_args['plain'] or false);\n\tlocal pattern = new_args['pattern']\
      \ or '';\n\tlocal match_index = math.floor(tonumber(new_args['match']) or 1);\n\tlocal nomatch = new_args['nomatch'];\n\t\n\tif s == '' then\n\t\treturn str._error('Target string is empty');\n\tend\n\tif pattern == '' then\n\t\treturn str._error('Pattern\
      \ string is empty');\n\tend\n\tif math.abs(start) &lt; 1 or math.abs(start) &gt; mw.ustring.len(s) then\n\t\treturn str._error('Requested start is out of range');\n\tend\n\tif match_index == 0 then\n\t\treturn str._error('Match index is out of range');\n\
      \tend\n\tif plain_flag then\n\t\tpattern = str.pattern_escape(pattern);\n\tend\n\t\n\tlocal result\n\tif match_index == 1 then\n\t\t-- Find first match is simple case\n\t\tresult = mw.ustring.match(s, pattern, start)\n\telse\n\t\tif start &gt; 1 then\n\
      \t\t\ts = mw.ustring.sub(s, start);\n\t\tend\n\t\t\n\t\tlocal iterator = mw.ustring.gmatch(s, pattern);\n\t\tif match_index &gt; 0 then\n\t\t\t-- Forward search\n\t\t\tfor w in iterator do\n\t\t\t\tmatch_index = match_index - 1;\n\t\t\t\tif match_index\
      \ == 0 then\n\t\t\t\t\tresult = w;\n\t\t\t\t\tbreak;\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\t-- Reverse search\n\t\t\tlocal result_table = {};\n\t\t\tlocal count = 1;\n\t\t\tfor w in iterator do\n\t\t\t\tresult_table[count] = w;\n\t\t\t\tcount = count\
      \ + 1;\n\t\t\tend\n\t\t\t\n\t\t\tresult = result_table[count + match_index];\n\t\tend\n\tend\n\t\n\tif result == nil then\n\t\tif nomatch == nil then\n\t\t\treturn str._error('Match not found');\n\t\telse\n\t\t\treturn nomatch;\n\t\tend\n\telse\n\t\treturn\
      \ result;\n\tend\nend\n\n--[[\npos\n\nThis function returns a single character from the target string at position pos.\n\nUsage:\n{{#invoke:string|pos|target_string|index_value}}\nOR\n{{#invoke:string|pos|target=target_string|pos=index_value}}\n\nParameters\n\
      \    target: The string to search\n    pos: The index for the character to return\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from the target string.  In some circumstances this is desirable,\
      \ in\nother cases one may want to preserve the whitespace.\n\nThe first character has an index value of 1.\n\nIf one requests a negative value, this function will select a character by counting backwards\nfrom the end of the string.  In other words pos\
      \ = -1 is the same as asking for the last character.\n\nA requested value of zero, or a value greater than the length of the string returns an error.\n]]\nfunction str.pos(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'target', 'pos' });\n\
      \tlocal target_str = new_args['target'] or '';\n\tlocal pos = tonumber(new_args['pos']) or 0;\n\t\n\tif pos == 0 or math.abs(pos) &gt; mw.ustring.len(target_str) then\n\t\treturn str._error('String index out of range');\n\tend\n\t\n\treturn mw.ustring.sub(target_str,\
      \ pos, pos);\nend\n\n--[[\nstr_find\n\nThis function duplicates the behavior of {{str_find}}, including all of its quirks.\nThis is provided in order to support existing templates, but is NOT RECOMMENDED for\nnew code and templates.  New code is recommended\
      \ to use the \"find\" function instead.\n\nReturns the first index in \"source\" that is a match to \"target\".  Indexing is 1-based,\nand the function returns -1 if the \"target\" string is not present in \"source\".\n\nImportant Note: If the \"target\"\
      \ string is empty / missing, this function returns a\nvalue of \"1\", which is generally unexpected behavior, and must be accounted for\nseparatetly.\n]]\nfunction str.str_find(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'source', 'target'\
      \ });\n\tlocal source_str = new_args['source'] or '';\n\tlocal target_str = new_args['target'] or '';\n\t\n\tif target_str == '' then\n\t\treturn 1;\n\tend\n\t\n\tlocal start = mw.ustring.find(source_str, target_str, 1, true)\n\tif start == nil then\n\t\
      \tstart = -1\n\tend\n\t\n\treturn start\nend\n\n--[[\nfind\n\nThis function allows one to search for a target string or pattern within another\nstring.\n\nUsage:\n{{#invoke:string|find|source_str|target_string|start_index|plain_flag}}\nOR\n{{#invoke:string|find|source=source_str|target=target_str|start=start_index|plain=plain_flag}}\n\
      \nParameters\n    source: The string to search\n    target: The string or pattern to find within source\n    start: The index within the source string to start the search, defaults to 1\n    plain: Boolean flag indicating that target should be understood\
      \ as plain\n        text and not as a Lua style regular expression, defaults to true\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from the parameter.  In some circumstances this is desirable,\
      \ in\nother cases one may want to preserve the whitespace.\n\nThis function returns the first index &gt;= \"start\" where \"target\" can be found\nwithin \"source\".  Indices are 1-based.  If \"target\" is not found, then this\nfunction returns an empty\
      \ string.  If either \"source\" or \"target\" are missing / empty, this\nfunction also returns an empty string.\n\nThis function should be safe for UTF-8 strings.\n]]\nfunction str.find(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2]\
      \ = { required = true },\n\t\t[3] = { type = \"number\" },\n\t\t[4] = { type = \"boolean\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\treturn mw.ustring.find(args[1], args[2], args[3], args[4])\nend\n\n\
      --[[\nreplace\n\nThis function allows one to replace a target string or pattern within another\nstring.\n\nUsage:\n{{#invoke:string|replace|source_str|pattern_string|replace_string|replacement_count|plain_flag}}\nOR\n{{#invoke:string|replace|source=source_string|pattern=pattern_string|replace=replace_string|\n\
      \   count=replacement_count|plain=plain_flag}}\n\nParameters\n    source: The string to search\n    pattern: The string or pattern to find within source\n    replace: The replacement text\n    count: The number of occurences to replace, defaults to all.\n\
      \    plain: Boolean flag indicating that pattern should be understood as plain\n        text and not as a Lua style regular expression, defaults to true\n]]\nfunction str.replace(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'source', 'pattern',\
      \ 'replace', 'count', 'plain' });\n\tlocal source_str = new_args['source'] or '';\n\tlocal pattern = new_args['pattern'] or '';\n\tlocal replace = new_args['replace'] or '';\n\tlocal count = tonumber(new_args['count']);\n\tlocal plain = new_args['plain']\
      \ or true;\n\t\n\tif source_str == '' or pattern == '' then\n\t\treturn source_str;\n\tend\n\tplain = str._getBoolean(plain);\n\t\n\tif plain then\n\t\tpattern = str.pattern_escape(pattern);\n\t\treplace = mw.ustring.gsub(replace, \"%%\", \"%%%%\"); --Only\
      \ need to escape replacement sequences.\n\tend\n\t\n\tlocal result;\n\t\n\tresult = mw.ustring.gsub(source_str, pattern, replace, count);\n\t\n\treturn result;\nend\n\n\nfunction str.gsub(frame)\n\tlocal params = {\n\t\t[1] = { required = true, allow_empty\
      \ = true },\n\t\t[2] = { required = true, allow_empty = true },\n\t\t[3] = { required = true, allow_empty = true },\n\t\t[4] = { type = \"number\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\treturn (mw.ustring.gsub(args[1],\
      \ args[2], args[3], args[4]))\nend\n\n\n--[[\n    simple function to pipe string.rep to templates.\n]]\n\nfunction str.rep(frame)\n\tlocal repetitions = tonumber(frame.args[2])\n\tif not repetitions then\n\t\treturn str._error('function rep expects a number\
      \ as second parameter, received \"' .. (frame.args[2] or '') .. '\"')\n\tend\n\treturn string.rep(frame.args[1] or '', repetitions)\nend\n\nfunction str.lower(frame)\n\tlocal text = frame.args[1] or ''\n\treturn mw.ustring.lower(text)\nend\n\nstr.lc =\
      \ str.lower\n\n--[[\nHelper function that populates the argument list given that user may need to use a mix of\nnamed and unnamed parameters.  This is relevant because named parameters are not\nidentical to unnamed parameters due to string trimming, and\
      \ when dealing with strings\nwe sometimes want to either preserve or remove that whitespace depending on the application.\n]]\nfunction str._getParameters(frame_args, arg_list)\n\tlocal new_args = {};\n\tlocal index = 1;\n\tlocal value;\n\t\n\tfor _, arg\
      \ in ipairs(arg_list) do\n\t\tvalue = frame_args[arg]\n\t\tif value == nil then\n\t\t\tvalue = frame_args[index];\n\t\t\tindex = index + 1;\n\t\tend\n\t\tnew_args[arg] = value;\n\tend\n\t\n\treturn new_args;\nend\n\n--[[\nHelper function to handle error\
      \ messages.\n]]\nfunction str._error(error_str)\n\tlocal frame = mw.getCurrentFrame();\n\tlocal error_category = frame.args.error_category or 'Errors reported by Module String';\n\tlocal ignore_errors = frame.args.ignore_errors or false;\n\tlocal no_category\
      \ = frame.args.no_category or false;\n\t\n\tif str._getBoolean(ignore_errors) then\n\t\treturn '';\n\tend\n\t\n\tlocal error_str = '&lt;strong class=\"error\"&gt;String Module Error: ' .. error_str .. '&lt;/strong&gt;';\n\tif error_category ~= '' and not\
      \ str._getBoolean(no_category) then\n\t\terror_str = '[[Category:' .. error_category .. ']]' .. error_str;\n\tend\n\t\n\treturn error_str;\nend\n\n--[[\nHelper Function to interpret boolean strings\n]]\nfunction str._getBoolean(boolean_str)\n\tlocal boolean_value;\n\
      \t\n\tif type(boolean_str) == 'string' then\n\t\tboolean_str = boolean_str:lower();\n\t\tif boolean_str == 'false' or boolean_str == 'no' or boolean_str == '0'\n\t\t\t\tor boolean_str == '' then\n\t\t\tboolean_value = false;\n\t\telse\n\t\t\tboolean_value\
      \ = true;\n\t\tend\n\telseif type(boolean_str) == 'boolean' then\n\t\tboolean_value = boolean_str;\n\telse\n\t\terror('No boolean value found');\n\tend\n\treturn boolean_value\nend\n\n--[[\nHelper function that escapes all pattern characters – ().%+-*?[^$]\
      \ – so that they will be treated\nas plain text.\n]]\nfunction str.pattern_escape(pattern_str)\n\tlocal invoked = false\n\t\n\tif type(pattern_str) == \"table\" then\n\t\tif pattern_str.args then\n\t\t\tlocal frame = pattern_str\n\t\t\tinvoked = true\n\
      \t\t\t\n\t\t\tif frame.args[1] then\n\t\t\t\tpattern_str = frame.args[1]\n\t\t\telse\n\t\t\t\tpattern_str = frame:getParent().args[1]\n\t\t\tend\n\t\telse\n\t\t\terror(\"First argument to pattern_escape should be a string, a number, or a frame object.\"\
      )\n\t\tend\n\telseif not (type(pattern_str) == \"string\" or type(pattern_str) == \"number\") then\n\t\terror(\"First argument to pattern_escape should be a string or a number.\")\n\tend\n\t\n\tif invoked then\n\t\tlocal escaped = mw.ustring.gsub(pattern_str,\
      \ \"([%(%)%.%%%+%-%*%?%[%^%$%]])\", \"%%%1\")\n\t\treturn escaped\n\telse\n\t\treturn mw.ustring.gsub(pattern_str, \"([%(%)%.%%%+%-%*%?%[%^%$%]])\", \"%%%1\");\n\tend\nend\n\nfunction str.count(text, pattern, plain)\n\tif not (type(text) == \"string\"\
      \ or type(text) == \"number\") then\n\t\terror('The first argument to the function \"count\" must be a string or a number, not a ' .. type(text) .. '.')\n\tend\n\t\n\tif not (type(pattern) == \"string\" or type(pattern) == \"number\") then\n\t\terror('The\
      \ first argument to the function \"count\" must be a string or a number, not a ' .. type(text) .. '.')\n\tend\n\t\n\tif plain then\n\t\tpattern = str.pattern_escape(pattern)\n\tend\n\t\n\tlocal _, count = mw.ustring.gsub(text, pattern, \"\")\n\t\n\treturn\
      \ count\nend\n\nfunction str.plain_gsub(text, pattern, replacement)\n\tlocal invoked = false\n\t\n\tif type(text) == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1]\
      \ = {},\n\t\t\t\t[2] = {},\n\t\t\t\t[3] = { allow_empty = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\t\t\treplacement = args[3]\n\t\t\
      else\n\t\t\terror(\"If the first argument to plain_gsub is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not (type(pattern) == \"string\" or type(pattern) == \"number\") then\n\t\t\terror(\"The second argument to plain_gsub should be\
      \ a string or a number.\")\n\t\tend\n\t\t\n\t\tif not (type(replacement) == \"string\" or type(replacement) == \"number\") then\n\t\t\terror(\"The third argument to plain_gsub should be a string or a number.\")\n\t\tend\n\tend\n\t\n\tpattern = str.pattern_escape(pattern)\n\
      \t\n\tif invoked then\n\t\ttext = mw.ustring.gsub(text, pattern, replacement)\n\t\treturn text\n\telse\n\t\treturn mw.ustring.gsub(text, pattern, replacement)\n\tend\nend\n\nfunction str.matchToArray(text, pattern)\n\tlocal invoked = false\n\t\n\tif type(text)\
      \ == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = { required = true },\n\t\t\t\t[2] = { required = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\"\
      ).process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\t\telse\n\t\t\terror(\"If the first argument to matchToArray is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not (type(pattern) == \"string\" or\
      \ type(pattern) == \"number\") then\n\t\t\terror(\"The second argument to matchToArray should be a string or a number.\")\n\t\tend\n\tend\n\t\n\tlocal matches = {}\n\tlocal i = 0\n\tfor match in mw.ustring.gmatch(text, pattern) do\n\t\ti = i + 1\n\t\t\
      matches[i] = match\n\tend\n\t\n\tif i &gt; 0 then\n\t\tif invoked then\n\t\t\treturn table.concat(matches, \", \")\n\t\telse\n\t\t\treturn matches\n\t\tend\n\telse\n\t\tif invoked then\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn nil\n\t\tend\n\tend\nend\n\
      \n--[=[\n\tSimilar to gmatch, but it returns the count of the match in addition to the\n\tlist of captures, something like ipairs().\n\t\n\tIf the pattern doesn't contain any captures, the whole match is returned.\n\t\n\tInvoke thus:\n\t\n\t\tfor i, whole_match\
      \ in require(\"Module:string\").imatch(text, pattern) do\n\t\t\t[ do something with i and whole_match ]\n\t\tend\n\t\n\tor\n\t\n\t\tfor i, capture1[, capture2[, capture3[, ...]]] in require(\"Module:string\").imatch(text, pattern) do\n\t\t\t[ do something\
      \ with i and capture1 ]\n\t\tend\n\t\n\tFor example, this code\n\t\tfor i, whole_match in require(\"Module:string\").imatch(\"a b c\", \"[a-z]\") do\n\t\t\tmw.log(i, whole_match)\n\t\tend\n\twill log\n\t\t1\ta\n\t\t2\tb\n\t\t3\tc\n]=]\nfunction str.imatch(text,\
      \ pattern, pos, plain, use_basic_Lua_function)\n\tlocal i = 0\n\tpos = pos or 0\n\tif not string.find(pattern, \"%b()\") then\n\t\tpattern = \"(\" .. pattern .. \")\"\n\tend\n\tlocal find = use_basic_Lua_function and string.find or mw.ustring.find\n\t\
      return function()\n\t\ti = i + 1\n\t\tlocal return_values = { find(text, pattern, pos, plain) }\n\t\tlocal j = return_values[2]\n\t\t\n\t\tif return_values[3] then\n\t\t\tpos = j + 1\n\t\t\t-- Skip the first two returned values, which are the indices of\
      \ the\n\t\t\t-- whole match.\n\t\t\treturn i, unpack(return_values, 3)\n\t\tend\n\tend\nend\n\nfunction str.escapebytes(s)\n\treturn (string.gsub(s,\n\t\t'.',\n\t\tfunction(char)\n\t\t\treturn ('\\\\%03d'):format(string.byte(char))\n\t\tend))\nend\n\n\
      function str.URIdecode(frame)\n\treturn mw.uri.decode(frame.args[1], frame.args[2] or \"PATH\")\nend\n\nreturn str</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:21.907Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Atable&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55856 t=1555362381783293
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:21 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1278.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 424282964, 229667705, 700158184
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5122966\" pageid=\"5122966\" ns=\"828\" title=\"Module:table\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-14T04:16:37Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"add deepEquals, deepEqualsList for deep comparisons\" xml:space=\"preserve\">--[[\n------------------------------------------------------------------------------------\n--                      table (formerly\
      \ TableTools)                               --\n--                                                                                --\n-- This module inclcudes a number of functions for dealing with Lua tables.        --\n-- It is a meta-module, meant to\
      \ be called from other Lua modules, and should     --\n-- not be called directly from #invoke.                                           --\n------------------------------------------------------------------------------------\n--]]\n\n--[[\n\tInserting\
      \ new values into a table using a local \"index\" variable, which is\n\tincremented each time, is faster than using \"table.insert(t, x)\" or\n\t\"t[#t + 1] = x\". See the talk page.\n]]\n\nlocal libraryUtil = require('libraryUtil')\n\nlocal export = {}\n\
      \n-- Define often-used variables and functions.\nlocal floor = math.floor\nlocal infinity = math.huge\nlocal checkType = libraryUtil.checkType\nlocal checkTypeMulti = libraryUtil.checkTypeMulti\n\nlocal function _check(funcName, expectType)\n\tif type(expectType)\
      \ == \"string\" then\n\t\treturn function(argIndex, arg, nilOk)\n\t\t\tcheckType(funcName, argIndex, arg, expectType, nilOk)\n\t\tend\n\telse\n\t\treturn function(argIndex, arg, expectType, nilOk)\n\t\t\tif type(expectType) == \"table\" then\n\t\t\t\t\
      checkTypeMulti(funcName, argIndex, arg, expectType, nilOk)\n\t\t\telse\n\t\t\t\tcheckType(funcName, argIndex, arg, expectType, nilOk)\n\t\t\tend\n\t\tend\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- isPositiveInteger\n--\n-- This function returns true if the given value is a positive integer, and false\n-- if not. Although it doesn't operate on tables, it is included here as it is\n-- useful for determining whether a given table key is in the array\
      \ part or the\n-- hash part of a table.\n------------------------------------------------------------------------------------\n--]]\nfunction export.isPositiveInteger(v)\n\treturn type(v) == 'number' and v &gt;= 1 and floor(v) == v and v &lt; infinity\n\
      end\n\n--[[\n------------------------------------------------------------------------------------\n-- isNan\n--\n-- This function returns true if the given number is a NaN value, and false\n-- if not. Although it doesn't operate on tables, it is included\
      \ here as it is\n-- useful for determining whether a value can be a valid table key. Lua will\n-- generate an error if a NaN is used as a table key.\n------------------------------------------------------------------------------------\n--]]\nfunction export.isNan(v)\n\
      \tif type(v) == 'number' and tostring(v) == '-nan' then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- shallowClone\n--\n-- This returns a clone of\
      \ a table. The value returned is a new table, but all\n-- subtables and functions are shared. Metamethods are respected, but the returned\n-- table will have no metatable of its own.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.shallowClone(t)\n\tlocal ret = {}\n\tfor k, v in pairs(t) do\n\t\tret[k] = v\n\tend\n\treturn ret\nend\n\n--[[\nShallow copy\n]]\nfunction export.shallowcopy(orig)\n\tlocal orig_type = type(orig)\n\tlocal copy\n\tif orig_type == 'table'\
      \ then\n\t\tcopy = {}\n\t\tfor orig_key, orig_value in pairs(orig) do\n\t\t\tcopy[orig_key] = orig_value\n\t\tend\n\telse -- number, string, boolean, etc\n\t\tcopy = orig\n\tend\n\treturn copy\nend\n\n--[[\n\tRecursive deep copy function\n\tEquivalent\
      \ to mw.clone?\n]]\nlocal function deepcopy(orig, includeMetatable, already_seen)\n\t-- Stores copies of tables indexed by the original table.\n\talready_seen = already_seen or {}\n\t\n\tlocal copy = already_seen[orig]\n\tif copy ~= nil then\n\t\treturn\
      \ copy\n\tend\n\t\n\tif type(orig) == 'table' then\n\t\tcopy = {}\n\t\tfor orig_key, orig_value in pairs(orig) do\n\t\t\tcopy[deepcopy(orig_key, includeMetatable, already_seen)] = deepcopy(orig_value, includeMetatable, already_seen)\n\t\tend\n\t\talready_seen[orig]\
      \ = copy\n\t\t\n\t\tif includeMetatable then\n\t\t\tlocal mt = getmetatable(orig)\n\t\t\tif mt ~= nil then\n\t\t\t\tlocal mt_copy = deepcopy(mt, includeMetatable, already_seen)\n\t\t\t\tsetmetatable(copy, mt_copy)\n\t\t\tend\n\t\tend\n\telse -- number,\
      \ string, boolean, etc\n\t\tcopy = orig\n\tend\n\treturn copy\nend\n\nfunction export.deepcopy(orig, noMetatable, already_seen)\n\tcheckType(\"deepcopy\", 3, already_seen, \"table\", true)\n\t\n\treturn deepcopy(orig, not noMetatable, already_seen)\nend\n\
      \n--[[\n------------------------------------------------------------------------------------\n-- removeDuplicates\n--\n-- This removes duplicate values from an array. Non-positive-integer keys are\n-- ignored. The earliest value is kept, and all subsequent\
      \ duplicate values are\n-- removed, but otherwise the array order is unchanged.\n------------------------------------------------------------------------------------\n--]]\nfunction export.removeDuplicates(t)\n\tcheckType('removeDuplicates', 1, t, 'table')\n\
      \tlocal isNan = export.isNan\n\tlocal ret, exists = {}, {}\n\tlocal index = 1\n\tfor _, v in ipairs(t) do\n\t\tif isNan(v) then\n\t\t\t-- NaNs can't be table keys, and they are also unique, so we don't need to check existence.\n\t\t\tret[index] = v\n\t\
      \t\tindex = index + 1\n\t\telse\n\t\t\tif not exists[v] then\n\t\t\t\tret[index] = v\n\t\t\t\tindex = index + 1\n\t\t\t\texists[v] = true\n\t\t\tend\n\t\tend\n\tend\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- numKeys\n--\n-- This takes a table and returns an array containing the numbers of any numerical\n-- keys that have non-nil values, sorted in numerical order.\n------------------------------------------------------------------------------------\n--]]\n\
      function export.numKeys(t, checked)\n\tif not checked then\n\t\tcheckType('numKeys', 1, t, 'table')\n\tend\n\tlocal isPositiveInteger = export.isPositiveInteger\n\tlocal nums = {}\n\tlocal index = 1\n\tfor k, _ in pairs(t) do\n\t\tif isPositiveInteger(k)\
      \ then\n\t\t\tnums[index] = k\n\t\t\tindex = index + 1\n\t\tend\n\tend\n\ttable.sort(nums)\n\treturn nums\nend\n\nfunction export.maxIndex(t)\n\tcheckType('maxIndex', 1, t, 'table')\n\tlocal positiveIntegerKeys = export.numKeys(t)\n\tif positiveIntegerKeys[1]\
      \ then\n\t\treturn math.max(unpack(positiveIntegerKeys))\n\telse\n\t\treturn 0 -- ???\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- affixNums\n--\n-- This takes a table and returns an array\
      \ containing the numbers of keys with the\n-- specified prefix and suffix.\n-- affixNums({a1 = 'foo', a3 = 'bar', a6 = 'baz'}, \"a\")\n--\t\t↓\n-- {1, 3, 6}.\n------------------------------------------------------------------------------------\n--]]\n\
      function export.affixNums(t, prefix, suffix)\n\tlocal check = _check('affixNums')\n\tcheck(1, t, 'table')\n\tcheck(2, prefix, 'string', true)\n\tcheck(3, suffix, 'string', true)\n\t\n\tlocal function cleanPattern(s)\n\t\t-- Cleans a pattern so that the\
      \ magic characters ()%.[]*+-?^$ are interpreted literally.\n\t\ts = s:gsub('([%(%)%%%.%[%]%*%+%-%?%^%$])', '%%%1')\n\t\treturn s\n\tend\n\t\n\tprefix = prefix or ''\n\tsuffix = suffix or ''\n\tprefix = cleanPattern(prefix)\n\tsuffix = cleanPattern(suffix)\n\
      \tlocal pattern = '^' .. prefix .. '([1-9]%d*)' .. suffix .. '$'\n\t\n\tlocal nums = {}\n\tlocal index = 1\n\tfor k, _ in pairs(t) do\n\t\tif type(k) == 'string' then\n\t\t\tlocal num = mw.ustring.match(k, pattern)\n\t\t\tif num then\n\t\t\t\tnums[index]\
      \ = tonumber(num)\n\t\t\t\tindex = index + 1\n\t\t\tend\n\t\tend\n\tend\n\ttable.sort(nums)\n\treturn nums\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- numData\n--\n-- Given a table with keys like\
      \ (\"foo1\", \"bar1\", \"foo2\", \"baz2\"), returns a table\n-- of subtables in the format\n-- { [1] = {foo = 'text', bar = 'text'}, [2] = {foo = 'text', baz = 'text'} }\n-- Keys that don't end with an integer are stored in a subtable named \"other\".\n\
      -- The compress option compresses the table so that it can be iterated over with\n-- ipairs.\n------------------------------------------------------------------------------------\n--]]\nfunction export.numData(t, compress)\n\tlocal check = _check('numData')\n\
      \tcheck(1, t, 'table')\n\tcheck(2, compress, 'boolean', true)\n\t\n\tlocal ret = {}\n\tfor k, v in pairs(t) do\n\t\tlocal prefix, num = tostring(k):match('^([^0-9]*)([1-9][0-9]*)$')\n\t\tif num then\n\t\t\tnum = tonumber(num)\n\t\t\tlocal subtable = ret[num]\
      \ or {}\n\t\t\tif prefix == '' then\n\t\t\t\t-- Positional parameters match the blank string; put them at the start of the subtable instead.\n\t\t\t\tprefix = 1\n\t\t\tend\n\t\t\tsubtable[prefix] = v\n\t\t\tret[num] = subtable\n\t\telse\n\t\t\tlocal subtable\
      \ = ret.other or {}\n\t\t\tsubtable[k] = v\n\t\t\tret.other = subtable\n\t\tend\n\tend\n\tif compress then\n\t\tlocal other = ret.other\n\t\tret = export.compressSparseArray(ret)\n\t\tret.other = other\n\tend\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- compressSparseArray\n--\n-- This takes an array with one or more nil values, and removes the nil values\n-- while preserving the order, so that the array can be safely traversed with\n-- ipairs.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.compressSparseArray(t)\n\tcheckType('compressSparseArray', 1, t, 'table')\n\tlocal ret = {}\n\tlocal index = 1\n\tlocal nums = export.numKeys(t)\n\tfor _, num in ipairs(nums) do\n\t\tret[index] = t[num]\n\t\tindex = index + 1\n\t\
      end\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- sparseIpairs\n--\n-- This is an iterator for sparse arrays. It can be used like ipairs, but can\n-- handle nil values.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.sparseIpairs(t)\n\tcheckType('sparseIpairs', 1, t, 'table')\n\tlocal nums = export.numKeys(t)\n\tlocal i = 0\n\treturn function()\n\t\ti = i + 1\n\t\tlocal key = nums[i]\n\t\tif key then\n\t\t\treturn key, t[key]\n\t\telse\n\t\t\t\
      return nil, nil\n\t\tend\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- size\n--\n-- This returns the size of a key/value pair table. It will also work on arrays,\n-- but for arrays it is more\
      \ efficient to use the # operator.\n------------------------------------------------------------------------------------\n--]]\nfunction export.size(t)\n\tcheckType('size', 1, t, 'table')\n\tlocal i = 0\n\tfor _ in pairs(t) do\n\t\ti = i + 1\n\tend\n\t\
      return i\nend\n\n--[[\n-- This returns the length of a table, or the first integer key n counting from\n-- 1 such that t[n + 1] is nil. It is similar to the operator #, but may return\n-- a different value when there are gaps in the array portion of the\
      \ table.\n-- Intended to be used on data loaded with mw.loadData. For other tables, use #.\n--]]\nfunction export.length(t)\n\tlocal i = 0\n\trepeat\n\t\ti = i + 1\n\tuntil t[i] == nil\n\treturn i - 1\nend\n\n--[[\nTakes table and a value to be found.\n\
      If the value is in the array portion of the table, return true.\nIf the value is in the hashmap or not in the table, return false.\n]]\nfunction export.contains(list, x)\n\tfor _, v in ipairs(list) do\n\t\tif v == x then return true end\n\tend\n\treturn\
      \ false\nend\n\n--[[\nRecursively compare two values that may be tables, including tables with\nnested tables as values. Return true if both values are structurally equal.\nNote that this handles arbitary levels of nesting. If all tables are known\nto\
      \ be lists (with only integral keys), use export.deepEqualsList, which will\nbe more efficient.\n\nNOTE: This is *NOT* smart enough to properly handle cycles; in such a case, it\nwill get into an infinite loop.\n]]\nfunction export.deepEquals(x, y)\n \
      \   if type(x) == \"table\" and type(y) == \"table\" then\n    \t-- Two tables are the same if they have the same number of elements\n    \t-- and all keys that are present in one of the tables compare equal\n    \t-- to the corresponding keys in the other\
      \ table, using structural\n    \t-- comparison.\n    \tlocal sizex = 0\n        for key, value in pairs(x) do\n            if not export.deepEquals(value, y[key]) then\n                return false\n            end\n            sizex = sizex + 1\n    \
      \    end\n        local sizey = export.size(y)\n        if sizex ~= sizey then\n            return false\n        end \n        return true\n    end\n    return x == y\nend\n\n--[[\nRecursively compare two values that may be lists (i.e. tables with integral\n\
      keys), including lists with nested lists as values. Return true if both values\nare structurally equal. Note that this handles arbitary levels of nesting.\nResults are undefined if tables with non-integral keys are present anywhere in\neither structure;\
      \ if that may be the case, use export.deepEquals, which will\nhandle such tables correctly but be less efficient on lists than\nexport.deepEqualsList.\n\nNOTE: This is *NOT* smart enough to properly handle cycles; in such a case, it\nwill get into an infinite\
      \ loop.\n]]\nfunction export.deepEqualsList(x, y)\n    if type(x) == \"table\" and type(y) == \"table\" then\n        if #x ~= #y then\n            return false\n        end \n        for key, value in ipairs(x) do\n            if not export.deepEqualsList(value,\
      \ y[key]) then\n                return false\n            end\n        end\n        return true\n    end\n    return x == y\nend\n\n--[[\n\tFinds key for specified value in a given table.\n\tRoughly equivalent to reversing the key-value pairs in the table\
      \ –\n\t\treversed_table = { [value1] = key1, [value2] = key2, ... }\n\t– and then returning reversed_table[valueToFind].\n\t\n\tThe value can only be a string or a number\n\t(not nil, a boolean, a table, or a function).\n\t\n\tOnly reliable if there is\
      \ just one key with the specified value.\n\tOtherwise, the function returns the first key found,\n\tand the output is unpredictable.\n]]\nfunction export.keyFor(t, valueToFind)\n\tlocal check = _check('keyFor')\n\tcheck(1, t, 'table')\n\tcheck(2, valueToFind,\
      \ { 'string', 'number' })\n\t\n\tfor key, value in pairs(t) do\n\t\tif value == valueToFind then\n\t\t\treturn key\n\t\tend\n\tend\n\t\n\treturn nil\nend\n\n--[[\n\tThe default sorting function used in export.keysToList if no keySort\n\tis defined.\n]]\n\
      local function defaultKeySort(key1, key2)\n\t-- \"number\" &lt; \"string\", so numbers will be sorted before strings.\n\tlocal type1, type2 = type(key1), type(key2)\n\tif type1 ~= type2 then\n\t\treturn type1 &lt; type2\n\telse\n\t\treturn key1 &lt; key2\n\
      \tend\nend\n\n--[[\n\tReturns a list of the keys in a table, sorted using either the default\n\ttable.sort function or a custom keySort function.\n\tIf there are only numerical keys, numKeys is probably more efficient.\n]]\nfunction export.keysToList(t,\
      \ keySort, checked)\n\tif not checked then\n\t\tlocal check = _check('keysToList')\n\t\tcheck(1, t, 'table')\n\t\tcheck(2, keySort, 'function', true)\n\tend\n\t\n\tlocal list = {}\n\tlocal index = 1\n\tfor key, _ in pairs(t) do\n\t\tlist[index] = key\n\
      \t\tindex = index + 1\n\tend\n\t\n\t-- Place numbers before strings, otherwise sort using &lt;.\n\tif not keySort then\n\t\tkeySort = defaultKeySort\n\tend\n\t\n\ttable.sort(list, keySort)\n\t\n\treturn list\nend\n\n--[[\n\tIterates through a table, with\
      \ the keys sorted using the keysToList function.\n\tIf there are only numerical keys, sparseIpairs is probably more efficient.\n]]\nfunction export.sortedPairs(t, keySort)\n\tlocal check = _check('keysToList')\n\tcheck(1, t, 'table')\n\tcheck(2, keySort,\
      \ 'function', true)\n\t\n\tlocal list = export.keysToList(t, keySort, true)\n\t\n\tlocal i = 0\n\treturn function()\n\t\ti = i + 1\n\t\tlocal key = list[i]\n\t\tif key ~= nil then\n\t\t\treturn key, t[key]\n\t\telse\n\t\t\treturn nil, nil\n\t\tend\n\t\
      end\nend\n\nfunction export.reverseIpairs(list)\n\tcheckType('reverse_ipairs', 1, list, 'table')\n\t\n\tlocal i = #list + 1\n\treturn function()\n\t\ti = i - 1\n\t\tif list[i] ~= nil then\n\t\t\treturn i, list[i]\n\t\telse\n\t\t\treturn nil, nil\n\t\t\
      end\n\tend\nend\n\n--[=[\n\tJoins an array with serial comma and serial conjunction, normally \"and\".\n\tAn improvement on mw.text.listToText, which doesn't properly handle serial\n\tcommas.\n\t\n\tOptions:\n\t\t- conj\n\t\t\tConjunction to use; defaults\
      \ to \"and\".\n\t\t- italicizeConj\n\t\t\tItalicize conjunction: for [[Module:Template:also]]\n\t\t- dontTag\n\t\t\tDon't tag the serial comma and serial \"and\". For error messages, in\n\t\t\twhich HTML cannot be used.\n]=]\nfunction export.serialCommaJoin(seq,\
      \ options)\n\tlocal check = _check(\"serialCommaJoin\", \"table\")\n\tcheck(1, seq)\n\tcheck(2, options, true)\n\t\n\tlocal length = #seq\n\t\n\tif not options then\n\t\toptions = {}\n\tend\n\t\n\tlocal conj\n\tif length &gt; 1 then\n\t\tconj = options.conj\
      \ or \"and\"\n\t\tif options.italicizeConj then\n\t\t\tconj = \"''\" .. conj .. \"''\"\n\t\tend\n\tend\n\t\n\tif length == 0 then\n\t\treturn \"\"\n\telseif length == 1 then\n\t\treturn seq[1] -- nothing to join\n\telseif length == 2 then\n\t\treturn seq[1]\
      \ .. \" \" .. conj .. \" \" .. seq[2]\n\telse\n\t\tlocal comma = options.dontTag and \",\" or '&lt;span class=\"serial-comma\"&gt;,&lt;/span&gt;'\n\t\tconj = options.dontTag and ' ' .. conj .. \" \" or '&lt;span class=\"serial-and\"&gt; ' .. conj .. '&lt;/span&gt;\
      \ '\n\t\treturn table.concat(seq, \", \", 1, length - 1) ..\n\t\t\t\tcomma .. conj .. seq[length]\n\tend\nend\n\n--[[\n\tConcatenates all values in the table that are indexed by a number, in order.\n\tsparseConcat{ a, nil, c, d }  =&gt;  \"acd\"\n\tsparseConcat{\
      \ nil, b, c, d }  =&gt;  \"bcd\"\n]]\nfunction export.sparseConcat(t, sep, i, j)\n\tlocal list = {}\n\t\n\tlocal list_i = 0\n\tfor _, v in export.sparseIpairs(t) do\n\t\tlist_i = list_i + 1\n\t\tlist[list_i] = v\n\tend\n\t\n\treturn table.concat(list,\
      \ sep, i, j)\nend\n\n--[[\n\tValues of numberic keys in array portion of table are reversed:\n\t{ \"a\", \"b\", \"c\" } -&gt; { \"c\", \"b\", \"a\" }\n--]]\nfunction export.reverse(t)\n\tcheckType(\"reverse\", 1, t, \"table\")\n\t\n\tlocal new_t = {}\n\
      \tlocal new_t_i = 1\n\tfor i = #t, 1, -1 do\n\t\tnew_t[new_t_i] = t[i]\n\t\tnew_t_i = new_t_i + 1\n\tend\n\treturn new_t\nend\n\nfunction export.reverseConcat(t, sep, i, j)\n\treturn table.concat(export.reverse(t), sep, i, j)\nend\n\n-- { \"a\", \"b\"\
      , \"c\" } -&gt; { a = 1, b = 2, c = 3 }\nfunction export.invert(array)\n\tcheckType(\"invert\", 1, array, \"table\")\n\t\n\tlocal map = {}\n\tfor i, v in ipairs(array) do\n\t\tmap[v] = i\n\tend\n\t\n\treturn map\nend\n\n--[[\n\t{ \"a\", \"b\", \"c\" }\
      \ -&gt; { [\"a\"] = true, [\"b\"] = true, [\"c\"] = true }\n--]]\nfunction export.listToSet(t)\n\tcheckType(\"listToSet\", 1, t, \"table\")\n\t\n\tlocal set = {}\n\tfor _, item in ipairs(t) do\n\t\tset[item] = true\n\tend\n\treturn set\nend\n\n--[[\n\t\
      Returns true if all keys in the table are consecutive integers starting at 1.\n--]]\nfunction export.isArray(t)\n\tcheckType(\"isArray\", 1, t, \"table\")\n\t\n\tlocal i = 0\n\tfor _ in pairs(t) do\n\t\ti = i + 1\n\t\tif t[i] == nil then\n\t\t\treturn\
      \ false\n\t\tend\n\tend\n\treturn true\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:22.092Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Adebug&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46034 t=1555362381992799
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:22 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 580632335, 246234620, 696722509
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4109235\" pageid=\"4109235\" ns=\"828\" title=\"Module:debug\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-12-25T05:19:47Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 51139735 by [[Special:Contributions/Erutuon|Erutuon]] ([[User talk:Erutuon|talk]]): restore if needed\" xml:space=\"preserve\">local export = {}\n\nlocal escape\ndo\n\tlocal escapes = {\n\t\
      \t[\"\\a\"] = \"a\", [\"\\b\"] = \"b\", [\"\\f\"] = \"f\", [\"\\n\"] = \"n\", [\"\\r\"] = \"r\",\n\t\t[\"\\t\"] = \"t\", [\"\\v\"] = \"v\", [\"\\\\\"] = \"\\\\\", [\"\\\"\"] = '\"', [\"'\"] = \"'\",\n\t}\n\t\n\tlocal function helper(char)\n\t\treturn escapes[char]\
      \ and \"\\\\\" .. escapes[char]\n\t\t\tor (\"\\\\%03d\"):format(char:byte())\n\tend\n\t\n\t-- Escape control characters, backslash, double quote, and bytes that aren't\n\t-- used in UTF-8.\n\t-- Escape stuff that can't be saved in a MediaWiki page, like\
      \ invalid UTF-8\n\t-- and NFD character sequences? Hard.\n\t-- Similar to string.format(\"%q\", str), which does not use C-like simple\n\t-- escapes and does not escape bytes that are not used in UTF-8.\n\tescape = function (str)\n\t\treturn (str:gsub(\"\
      [%z\\1-\\31\\\\\\\"\\127\\192\\193\\245-\\255]\", helper))\n\tend\nend\n\nexport.escape = escape\n\n-- Convert a value to a string\nfunction export.dump(value, prefix, tsort)\n\tlocal t = type(value)\n\t\n\tprefix = prefix or \"\"\n\t\n\tif t == \"string\"\
      \ then\n\t\treturn '\"' .. escape(value) .. '\"'\n\telseif t == \"table\" then\n\t\tlocal str_table = {}\n\t\t\n\t\ttable.insert(str_table, \" {\")\n\t\t\n\t\tfor key, val in require(\"Module:table\").sortedPairs(value, tsort) do\n\t\t\ttable.insert(str_table,\
      \ \" \" .. prefix .. \"\\t[\" .. export.dump(key, prefix .. \"\\t\") .. \"] = \" .. export.dump(val, prefix .. \"\\t\"):gsub(\"^ \", \"\") .. \",\")\n\t\tend\n\t\t\n\t\ttable.insert(str_table, \" \" .. prefix .. \"}\")\n\t\t\n\t\treturn table.concat(str_table,\
      \ \"\\n\")\n\telse\n\t\treturn tostring(value)\n\tend\nend\n\n\nfunction export.highlight_dump(value, prefix, tsort, options)\n\toptions = options or {}\n\t\n\tlocal func = options.modified and \"modified_dump\" or \"dump\"\n\t\n\tlocal dump = export[func](value,\
      \ prefix, tsort)\n\t\n\t-- Remove spaces at beginnings of lines (which are simply to force a &lt;pre&gt;&lt;/pre&gt; tag).\n\tdump = dump:gsub(\"^ \", \"\")\n\tdump = dump:gsub(\"\\n \", \"\\n\")\n\t\n\treturn export.highlight(dump)\nend\n\n\n-- Returns\
      \ true if table contains a table as one of its values\nlocal function containsTable(t)\n\tfor key, value in pairs(t) do\n\t\tif type(value) == \"table\" then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\n\n\nlocal function containsTablesWithSize(t,\
      \ size)\n\tfor key, value in pairs(t) do\n\t\tif type(value) == \"table\" and require(\"Module:table\").size(value) ~= size then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\t\n\n\n--[=[\n\tConvert a value to a string.\n\tLike dump below, but\
      \ if a table has consecutive numbered keys and does not\n\thave a table as one of its values, it will be placed on a single line.\n\tUsed by [[Module:User:Erutuon/script recognition]].\n]=]\nfunction export.modified_dump(value, prefix, tsort)\n\tlocal\
      \ t = type(value)\n\t\n\tprefix = prefix or \"\"\n\t\n\tif t == \"string\" then\n\t\treturn '\"' .. value .. '\"'\n\telseif t == \"table\" then\n\t\tlocal str_table = {}\n\t\t\n\t\tlocal containsTable = containsTable(value)\n\t\tlocal consecutive = require(\"\
      Module:table\").isArray(value)\n\t\tif consecutive and not containsTable or containsTable and containsTablesWithSize(value, 3) then\n\t\t\ttable.insert(str_table, \"{\")\n\t\t\t\n\t\t\tfor key, val in require(\"Module:table\").sortedPairs(value, tsort)\
      \ do\n\t\t\t\tif containsTable then\n\t\t\t\t\ttable.insert(str_table, \"\\n\\t\" .. prefix)\n\t\t\t\telse\n\t\t\t\t\ttable.insert(str_table, \" \")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif type(key) == \"string\" then\n\t\t\t\t\ttable.insert(str_table, \"[\"\
      \ .. export.modified_dump(key) .. \"] = \")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\ttable.insert(str_table, type(key) == \"number\" and type(val) == \"number\" and string.format(\"0x%05X\", val) or export.modified_dump(val))\n\t\t\t\t\n\t\t\t\tif not (consecutive\
      \ and #value == 3) or type(key) == \"number\" and value[key + 1] then\n\t\t\t\t\ttable.insert(str_table, \",\")\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif containsTable then\n\t\t\t\ttable.insert(str_table, \"\\n\" .. prefix)\n\t\t\telse\n\t\t\t\ttable.insert(str_table,\
      \ \" \")\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(str_table, \"}\")\n\t\t\treturn table.concat(str_table)\n\t\tend\n\t\t\n\t\ttable.insert(str_table, \" {\")\n\t\t\n\t\tfor key, val in require(\"Module:table\").sortedPairs(value, tsort) do\n\t\t\ttable.insert(str_table,\
      \ \" \" .. prefix .. \"\\t[\" .. export.modified_dump(key, prefix .. \"\\t\") .. \"] = \" .. export.modified_dump(val, prefix .. \"\\t\"):gsub(\"^ \", \"\") .. \",\")\n\t\tend\n\t\t\n\t\ttable.insert(str_table, \" \" .. prefix .. \"}\")\n\t\t\n\t\treturn\
      \ table.concat(str_table, \"\\n\")\n\telseif t == \"number\" and value &gt; 46 then\n\t\treturn string.format(\"0x%05X\", value)\n\telse\n\t\treturn tostring(value)\n\tend\nend\n\t\n\nfunction export.track(key)\n\tlocal frame = mw.getCurrentFrame()\n\t\
      if key then\n\t\tif type(key) ~= \"table\" then\n\t\t\tkey = { key }\n\t\tend\n\t\t\n\t\tfor i, value in pairs(key) do\n\t\t\tpcall(frame.expandTemplate, frame, { title = 'tracking/' .. value })\n\t\tend\n\telse\n\t\terror('No tracking key supplied to\
      \ the function \"' .. track .. '\".')\n\tend\nend\n\n\n-- Trigger a script error from a template\nfunction export.error(frame)\n\terror(frame.args[1] or \"(no message specified)\")\nend\n\n--[[\n\tConvenience function for generating syntaxhighlight tags.\n\
      \tDisplay defaults to block.\n\tOptions is a table. To display inline text with HTML highlighting:\n\t\t{ inline = true, lang = \"html\" }\n]]\nfunction export.highlight(content, options)\n\tif type(content) == \"table\" then\n\t\toptions = content\n\t\
      \toptions = {\n\t\t\tlang = options.lang or \"lua\",\n\t\t\tinline = options.inline and true\n\t\t}\n\t\treturn function(content)\n\t\t\treturn mw.getCurrentFrame():extensionTag{\n\t\t\t\tname = \"syntaxhighlight\",\n\t\t\t\tcontent = content,\n\t\t\t\t\
      args = options\n\t\t\t}\n\t\tend\n\telse\n\t\treturn mw.getCurrentFrame():extensionTag{\n\t\t\tname = \"syntaxhighlight\",\n\t\t\tcontent = content,\n\t\t\targs = {\n\t\t\t\tlang = options and options.lang or \"lua\",\n\t\t\t\tinline = options and options.inline\
      \ and true or nil\n\t\t\t}\n\t\t}\n\tend\nend\n\nfunction export.track_unrecognized_args(args, template_name)\n\tlocal function track(code)\n\t\texport.track(template_name .. \"/\" .. code)\n\tend\n\t\n    track(\"unrecognized arg\")\n\t\n\tlocal arg_list\
      \ = {}\n\tfor arg, value in pairs(args) do\n\t\ttrack(\"unrecognized arg/\" .. arg)\n\t\ttable.insert(arg_list, (\"|%s=%s\"):format(arg, value))\n\tend\n\t\n\tmw.log(\n\t\t(\"Unrecognized parameter%s in {{%s}}: %s.\"):format(\n\t\t\targ_list[2] and \"\
      s\" or \"\",\n\t\t\ttemplate_name,\n\t\t\ttable.concat(arg_list, \", \")))\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:22.262Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fparameters%2Fname+with+equals&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44866 t=1555362382170645
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:22 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 748855695, 735774754, 686122966
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="6569386" pageid="6569386" ns="10" title="Template:tracking/parameters/name with equals"><revisions><rev user="ShakespeareFan00" timestamp="2018-12-22T21:57:04Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Removal of stray tag" xml:space="preserve">&lt;noinclude&gt;
      Headword templates where parameter name is with equals.

      Index of tracking templates:
      {{Special:PrefixIndex/Template:tracking/parameters/name with equals|stripprefix=1}}
      [[Category:head tracking]]
      &lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:23.451Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Apalindromes&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51827 t=1555362383350447
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:23 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 204646879, 251437365, 696004932
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5783859\" pageid=\"5783859\" ns=\"828\" title=\"Module:palindromes\"><revisions><rev user=\"TheDaveRoss\" timestamp=\"2016-10-25T20:04:19Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Changed protection level for &quot;[[Module:palindromes]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors\
      \ and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefini...\" xml:space=\"preserve\">local export = {}\n\nlocal data = mw.loadData(\"Module:palindromes/data\")\n\nlocal function ignoreCharacters(term, lang, sc,\
      \ langdata)\n\tterm = mw.ustring.lower(term)\n\tterm = mw.ustring.gsub(term, \"[ ,%.%?!%%%-'\\\"]\", \"\")\n\t\n\t-- Language-specific substitutions\n\n\t-- Ignore entire scripts (e.g. romaji in Japanese)\n\tif langdata.ignore then\n\t\tsc_name = sc and\
      \ sc:getCode() or require(\"Module:scripts\").findBestScript(term, lang):getCode()\n\t\tfor _, script in ipairs(langdata.ignore) do\n\t\t\tif script == sc_name then\n\t\t\t\treturn \"\"\n\t\t\tend\n\t\tend\n\tend\n\t\n\tfor i, from in ipairs(langdata.from\
      \ or {}) do\n\t\tterm = mw.ustring.gsub(term, from, langdata.to[i] or \"\")\n\tend\n\t\n\treturn term\nend\n\nfunction export.is_palindrome(term, lang, sc)\n\tlocal langdata = data[lang:getCode()] or {}\n\n\t-- Affixes aren't palindromes\n\tif mw.ustring.find(term,\
      \ \"^%-\") or mw.ustring.find(term, \"%-$\") then\n\t\treturn false\n\tend\n\t\n\t-- Remove punctuation and casing\n\tterm = ignoreCharacters(term, lang, sc, langdata)\n\tlocal len = mw.ustring.len(term)\n\t\n\tif langdata.allow_repeated_char then\n\t\t\
      -- Ignore single-character terms\n\t\tif len &lt; 2 then\n\t\t\treturn false\n\t\tend\n\telse\n\t\t-- Ignore terms that consist of just one character repeated\n\t\t-- This also excludes terms consisting of fewer than 3 characters\n\t\tif term == mw.ustring.rep(mw.ustring.sub(term,\
      \ 1, 1), len) then\n\t\t\treturn false\n\t\tend\n\tend\n\t\n\tlocal charlist = {}\n\t\n\tfor c in mw.ustring.gmatch(term, \".\") do\n\t\ttable.insert(charlist, c)\n\tend\n\t\n\tfor i = 1, math.floor(len / 2) do\n        if charlist[i] ~= charlist[len -\
      \ i + 1] then\n        \treturn false\n        end\n    end\n    \n    return true\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:23.657Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Apalindromes%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=75832 t=1555362383528916
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:23 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1316.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 601628160, 721905642, 690796549
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5786862\" pageid=\"5786862\" ns=\"828\" title=\"Module:palindromes/data\"><revisions><rev user=\"PiefPafPier\" timestamp=\"2018-08-08T16:43:32Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"from [[:fy:Module:palindromes/data]]\" xml:space=\"preserve\">local u = mw.ustring.char\n\nlocal data = {\n\t[\"ar\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"[أإآ]\"\
      ,\n\t\t\t\"ؤ\",\n\t\t\t\"[ئى]\",\n\t\t\t\"ة\",\n\t\t\t\"ء\",\n\t\t},\n\t\tto = {\n\t\t\t\"ا\",\n\t\t\t\"و\",\n\t\t\t\"ي\",\n\t\t\t\"ه\",\n\t\t},\n\t},\n\t[\"arc\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"ם\",\n\t\t\t\"ן\",\n\t\t\t\"\
      ך\",\n\t\t\t\"ף\",\n\t\t\t\"ץ\",\n\t\t\t\"ﭏ\",\n\t\t\t\"װ\",\n\t\t\t\"ױ\",\n\t\t\t\"ײ\",\n\t\t\t\"[״׳־]\",\n\t\t},\n\t\tto = {\n\t\t\t\"מ\",\n\t\t\t\"נ\",\n\t\t\t\"כ\", \n\t\t\t\"פ\",\n\t\t\t\"צ\",\n\t\t\t\"אל\",\n\t\t\t\"וו\",\n\t\t\t\"וי\",\n\t\t\t\"\
      יי\",\n\t\t}\n\t},\n\t[\"axm\"] = {\n\t\tfrom = {\"ու\"},\n\t\tto   = {\"ŭ\"},\n\t},\n\t[\"ca\"] = {\n\t\tfrom = {\"à\", \"[èé]\", \"[íï]\", \"[òó]\", \"[úü]\", \"ç\", \"l·l\"},\n\t\tto   = {\"a\", \"e\",    \"i\",    \"o\",    \"u\",    \"c\", \"ll\"\
      },\n\t},\n\t[\"cmn\"] = {ignore = {\"Latn\"}},\n\t[\"cs\"] = {\n\t\tfrom = {\"á\", \"é\", \"í\", \"ó\", \"[úů]\", \"ý\", \"ch\"},\n\t\tto   = {\"a\", \"e\", \"i\", \"o\", \"u\",    \"y\", \"χ\"},\n\t},\n\t[\"de\"] = {\n\t\tfrom = {\"ä\", \"ö\", \"ü\",\
      \ \"[ßẞ]\"},\n\t\tto   = {\"a\", \"o\", \"u\", \"ss\"},\n\t},\n\t[\"el\"] = {\n\t\tfrom = {\n\t\t\t\"[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇᾱᾰἈᾈἌᾌἊᾊἎᾎἉᾉἍᾍἋᾋἏᾏᾹᾸ]\", --uppercase characters are included due to this bug: https://bugs.php.net/bug.php?id=69267\n\t\t\t\"[έ\
      ὲἐἔἒἑἕἓἘἜἚἙἝἛ]\",\n\t\t\t\"[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗἨᾘἬᾜἪᾚἮᾞἩᾙἭᾝἫᾛἯᾟ]\",\n\t\t\t\"[ίὶῖἰἴἲἶἱἵἳἷϊΐῒῗῑῐἸἼἺἾἹἽἻἿῙῘ]\", \n\t\t\t\"[όὸὀὄὂὁὅὃὈὌὊὉὍὋ]\",\n\t\t\t\"[ύὺῦὐὔὒὖὑὕὓὗϋΰῢῧῡῠὙὝὛὟῩῨ]\",\n\t\t\t\"[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧὨᾨὬᾬὪᾪὮᾮὩᾩὭᾭὫᾫὯᾯ]\",\n\t\t\t\"[ῥῤῬ]\"\
      ,\n\t\t\t\"[ς]\",\n\t\t\t\"[́͂]\"\n\t\t},\n\t\tto = {\n\t\t\t\"α\",\n\t\t\t\"ε\",\n\t\t\t\"η\",\n\t\t\t\"ι\",\n\t\t\t\"ο\",\n\t\t\t\"υ\",\n\t\t\t\"ω\",\n\t\t\t\"ρ\",\n\t\t\t\"σ\"\n\t\t},\n\t},\n\t[\"en\"] = {\n\t\tfrom = {\"[äàáâåā]\", \"[ëèéêē]\", \"\
      [ïìíîī]\", \"[öòóôō]\", \"[üùúûū]\", \"æ\" , \"œ\" , \"[çč]\", \"ñ\", \"'\"},\n\t\tto   = {\"a\",        \"e\",       \"i\",       \"o\",       \"u\",       \"ae\", \"oe\", \"c\",    \"n\"},\n\t},\n\t[\"fr\"] = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"\
      [íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\",  \"œ\", \"'\"},\n\t\tto   = {\"a\",       \"e\",     \"i\",      \"o\",      \"u\",      \"y\",      \"c\", \"ae\", \"oe\"},\n\t},\n\t[\"fy\"] = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï\
      ]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"æ\",  \"'\"},\n\t\tto   = {\"a\",       \"e\",     \"i\",      \"o\",      \"u\",      \"y\",      \"ae\"},\n\t},\n\t[\"grc\"] = {\n\t\tfrom = {\n\t\t\t\"[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇᾱᾰἈᾈἌᾌἊᾊἎᾎἉᾉἍᾍἋᾋἏᾏᾹᾸ]\", --uppercase\
      \ characters are included due to this bug: https://bugs.php.net/bug.php?id=69267\n\t\t\t\"[έὲἐἔἒἑἕἓἘἜἚἙἝἛ]\",\n\t\t\t\"[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗἨᾘἬᾜἪᾚἮᾞἩᾙἭᾝἫᾛἯᾟ]\",\n\t\t\t\"[ίὶῖἰἴἲἶἱἵἳἷϊΐῒῗῑῐἸἼἺἾἹἽἻἿῙῘ]\", \n\t\t\t\"[όὸὀὄὂὁὅὃὈὌὊὉὍὋ]\",\n\t\t\t\"[ύὺῦὐὔὒ\
      ὖὑὕὓὗϋΰῢῧῡῠὙὝὛὟῩῨ]\",\n\t\t\t\"[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧὨᾨὬᾬὪᾪὮᾮὩᾩὭᾭὫᾫὯᾯ]\",\n\t\t\t\"[ῥῤῬ]\",\n\t\t\t\"[ς]\",\n\t\t\t\"[́͂]\"\n\t\t},\n\t\tto = {\n\t\t\t\"α\",\n\t\t\t\"ε\",\n\t\t\t\"η\",\n\t\t\t\"ι\",\n\t\t\t\"ο\",\n\t\t\t\"υ\",\n\t\t\t\"ω\",\n\t\t\t\"\
      ρ\",\n\t\t\t\"σ\"\n\t\t}\n\t},\n\t[\"he\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"ם\",\n\t\t\t\"ן\",\n\t\t\t\"ך\",\n\t\t\t\"ף\",\n\t\t\t\"ץ\",\n\t\t\t\"ﭏ\",\n\t\t\t\"װ\",\n\t\t\t\"ױ\",\n\t\t\t\"ײ\",\n\t\t\t\"[״׳־]\",\n\t\t},\n\t\t\
      to = {\n\t\t\t\"מ\",\n\t\t\t\"נ\",\n\t\t\t\"כ\", \n\t\t\t\"פ\",\n\t\t\t\"צ\",\n\t\t\t\"אל\",\n\t\t\t\"וו\",\n\t\t\t\"וי\",\n\t\t\t\"יי\",\n\t\t}\n\t},\n\t[\"hu\"] = {\n\t\tfrom = {\"á\", \"é\", \"í\", \"ó\", \"ú\", \"ő\", \"ű\", \"cs\", \"dz\", \"gy\"\
      , \"ly\", \"ny\", \"sz\", \"ty\", \"zs\", \"dzs\"},\n\t\tto   = {\"a\", \"e\", \"i\", \"o\", \"u\", \"ö\", \"ü\", \"č\",  \"ď\",  \"ǰ\",  \"ľ\",  \"ň\",  \"š\",  \"ť\",  \"ž\",  \"ǯ\"},\n\t},\n\t[\"hy\"] = {\n\t\tfrom = {\"ու\", \"եւ\"},\n\t\tto   = {\"\
      ŭ\",  \"և\"},\n\t},\n\t[\"ja\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {'が', 'ぎ', 'ぐ', 'げ', 'ご', 'ざ', 'じ', 'ず', 'ぜ', 'ぞ', 'だ', 'ぢ', 'づ', 'で', 'ど', 'ば', 'び', 'ぶ', 'べ', 'ぼ', 'ぱ', 'ぴ', 'ぷ', 'ぺ', 'ぽ', 'ゔ'},\n\t\tto   = {'か', 'き', 'く', 'け', 'こ', 'さ\
      ', 'し', 'す', 'せ', 'そ', 'た', 'ち', 'つ', 'て', 'と', 'は', 'ひ', 'ふ', 'へ', 'ほ', 'は', 'ひ', 'ふ', 'へ', 'ほ', 'う'},\n\t\tignore = {\"Latn\"},\n\t},\n\t[\"la\"] = {\n\t\tfrom = {\"v\", \"j\"},\n\t\tto   = {\"u\", \"i\"}\n\t},\n\t[\"nl\"] = {\n\t\tfrom = {\"[áàä]\"\
      , \"[éèë]\", \"[íìï]\", \"[óòö]\", \"[úùü]\"},\n\t\tto   = {\"a\",     \"e\",     \"i\",     \"o\",     \"u\"},\n\t},\n\t[\"pl\"] = {\n\t\tfrom = {\"ć\", \"ę\", \"ł\", \"ń\", \"ó\", \"ś\", \"[źż]\"},\n\t\tto   = {\"c\", \"e\", \"l\", \"n\", \"o\", \"s\"\
      , \"z\"},\n\t},\n\t[\"ru\"] = {\n\t\tfrom = {\"ё\"},\n\t\tto   = {\"е\"},\n\t},\n\t[\"xcl\"] = {\n\t\tfrom = {\"ու\"},\n\t\tto   = {\"ŭ\"},\n\t},\n\t[\"yi\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"ם\",\n\t\t\t\"ן\",\n\t\t\t\"ך\",\n\
      \t\t\t\"ף\",\n\t\t\t\"ץ\",\n\t\t\t\"ﭏ\",\n\t\t\t\"װ\",\n\t\t\t\"ױ\",\n\t\t\t\"ײ\",\n\t\t\t\"[״׳־]\",\n\t\t\t\"[ִַָּֿׁׂ]\",\n\t\t},\n\t\tto = {\n\t\t\t\"מ\",\n\t\t\t\"נ\",\n\t\t\t\"כ\", \n\t\t\t\"פ\",\n\t\t\t\"צ\",\n\t\t\t\"אל\",\n\t\t\t\"וו\",\n\t\t\t\"\
      וי\",\n\t\t\t\"יי\",\n\t\t}\n\t},\n\t[\"zh\"] = {\n\t\tignore = {\"Latn\"},\n\t},\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:24.028Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56968 t=1555362383921083
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:24 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 494628668, 556484738, 691486825
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6246525\" pageid=\"6246525\" ns=\"828\" title=\"Module:links/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-03-13T02:26:26Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add [[Unsupported titles/MeToo]]\" xml:space=\"preserve\">local data = {}\n\ndata.high_memory_entries = {\n\t\"a\",\n\t\"animal\",\n\t\"book\",\n\t\"coffee\",\n\t\"do\",\n\t\"e\",\n\t\"\
      language\",\n\t\"night\",\n\t\"smoke\",\n\t\"son\",\n\t\"sun\",\n\t\"water\",\n\t\"wind\",\n}\n\n\nlocal U = mw.ustring.char\nlocal soft_hyphen = U(0xAD)\n\n--[[\tThe \"actual title\" is the page name with the prefix \"Unsupported titles/\" removed.\n\t\
      \t[\"displayed_title\"] = \"actual title\"\t]]\ndata.unsupported_titles = {\n\t[\" \"] = \"Space\",\n\t[\"{\"] = \"Left curly bracket\",\n\t[\"}\"] = \"Right curly bracket\",\n\t[\"[\"] = \"Left square bracket\",\n\t[\"]\"] = \"Right square bracket\",\n\
      \t[\"&lt;\"] = \"Less than\",\n\t[\"&gt;\"] = \"Greater than\",\n\t[\"=&lt;\"] = \"Equal less than\",\n\t[\"=&gt;\"] = \"Equal greater than\",\n\t[\"&gt;=\"] = \"Greater than equal\",\n\t[\"&lt;=\"] = \"Less than equal\",\n\t[\"-&gt;\"] = \"Hyphen greater\
      \ than\",\n\t[\"&lt;-\"] = \"Less than hyphen\",\n\t[\"&gt;_&lt;\"] = \"Greater than low line less than\",\n\t[\"::\"] = \"Double colon\",\n\t[\": :\"] = \"Enclosing colons\",\n\t[\":=\"] = \"Colon equals\",\n\t[\":Þ\"] = \"Colon capital thorn\",\n\t[\"\
      :(\"] = \"Colon left paren\",\n\t[\":)\"] = \"Colon right paren\",\n\t[\"&lt;&gt;\"] = \"Less than greater than\",\n\t[\"&lt;3\"] = \"Less than three\",\n\t[\"&lt;/3\"] = \"Less than slash three\",\n\t[\"&lt; &gt;\"] = \"Enclosing less than greater than\"\
      ,\n\t[\"&lt; /&gt;\"] = \"Less than trailing slash greater than\",\n\t[\"&lt; &gt; &lt;/ &gt;\"] = \"HTML start tag end tag\",\n\t[\"&lt;!-- --&gt;\"] = \"HTML comment\",\n\t[\"&lt;g&gt;\"] = \"g tag\",\n\t[\":-(\"] = \"Colon hyphen left paren\",\n\t[\"\
      :-)\"] = \"Colon hyphen right paren\",\n\t[\"|\"] = \"Vertical line\",\n\t[\"||\"] = \"Vertical line vertical line\",\n\t[\"| |\"] = \"Enclosing vertical lines\",\n\t[\"C#\"] = \"C sharp\",\n\t[\"#\"] = \"Number sign\",\n\t[\"# #\"] = \"Enclosing number\
      \ signs\",\n\t[\":\"] = \"Colon\",\n\t[\"..\"] = \"Double period\",\n\t[\".\"] = \"Full stop\",\n\t[\"_\"] = \"Low line\",\n\t[\"-_-\"] = \"Low line interfix\",\n\t[U(0xFFFD)] = \"Replacement character\",\n\t[U(0x1680)] = \"Ogham space\",\n\t[\"[ ]\"]\
      \ = \"Square brackets\",\n\t[\"{ }\"] = \"Curly brackets\",\n\t[\"[…]\"] = \"Square bracketed ellipsis\",\n\t[\"_ _\"] = \"Enclosing low lines\",\n\t[\"C|N&gt;K\"] = \"C through N to K\",\n\t[\"#MeToo\"] = \"MeToo\",\n\t[\"о/.\"] = \"о slash dot\",\n\t\
      [\"กรุงเทพมหานคร อมรรัตนโกสินทร์ มหินทรายุธยา มหาดิลกภพ นพรัตนราชธานีบูรีรมย์ อุดมราชนิเวศน์มหาสถาน อมรพิมานอวตารสถิต สักกะทัตติยวิษณุกรรมประสิทธิ์\"] = \"Thai name of Bangkok\",\n\t[\"λοπαδοτεμαχοσελαχογαλεοκρανιολειψανοδριμυποτριμματοσιλφιοκαραβομελι\
      τοκατακεχυμενοκιχλ\" .. soft_hyphen .. \"επικοσσυφοφαττοπεριστεραλεκτρυονοπτοκεφαλλιοκιγκλοπελειολαγῳοσιραιοβαφητραγανοπτερύγων\"] = \"Ancient Greek dish\",\n\t[\":≠\"] = \":≠\",\n\t[\"S:t\"] = \"S:t\",\n\t[\"S:ta\"] = \"S:ta\",\n\t[\"c:a\"] = \"c:a\"\
      ,\n\t[\"n:a\"] = \"n:a\",\n\t[\"n:o\"] = \"n:o\",\n\t[\"n:r\"] = \"n:r\",\n\t[\"s:a\"] = \"s:a\",\n\t[\"st:a\"] = \"st:a\",\n\t[\"v:a\"] = \"v:a\",\n}\n\nfor i, item in ipairs(data.high_memory_entries) do\n\tdata.high_memory_entries[i] = nil\n\tdata.high_memory_entries[item]\
      \ = true\nend\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:24.399Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49430 t=1555362384302402
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:24 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 425133789, 821184967, 697770669
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6149597\" pageid=\"6149597\" ns=\"828\" title=\"Module:script utilities/data\"><revisions><rev user=\"DTLHS\" timestamp=\"2018-03-12T01:54:08Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local data = {}\n\ndata.translit = {\n\t[\"term\"] = {\n--[=[\tcan't be done until Kana transliterations are correctly parsed by [[Module:links]]\n\t\t[\"tag\"\
      ] = \"i\",\n\t\t]=]\n\t\t[\"classes\"] = \"mention-tr\",\n\t},\n\t[\"usex\"] = {\n\t\t[\"tag\"] = \"i\",\n\t\t[\"classes\"] = \"e-transliteration\",\n\t},\n\t[\"head\"] = {\n\t\t[\"classes\"] = \"headword-tr\",\n\t\t[\"dir\"] = \"ltr\",\n\t},\n\t[\"default\"\
      ] = {},\n}\n\ndata.transcription = {\n\t[\"head\"] = {\n\t\t[\"tag\"] = \"span\",\n\t\t[\"classes\"] = \"headword-ts\",\n\t\t[\"dir\"] = \"ltr\",\n\t},\n\t[\"default\"] = {},\n}\n\nfor key, value in pairs(data.translit) do\n\tif not value.tag then\n\t\t\
      value.tag = \"span\"\n\tend\nend\n\ndata.faces = {\n\t[\"term\"] = {\n\t\ttag = \"i\",\n\t\tclass = \"mention\",\n\t},\n\t[\"head\"] = {\n\t\ttag = \"strong\",\n\t\tclass = \"headword\",\n\t},\n\t[\"hypothetical\"] = {\n\t\tprefix = '&lt;span class=\"\
      hypothetical-star\"&gt;*&lt;/span&gt;',\n\t\ttag = \"i\",\n\t\tclass = \"hypothetical\",\n\t},\n\t[\"bold\"] = {\n\t\ttag = \"b\",\n\t},\n\t[\"translation\"] = {\n\t\ttag = \"span\",\n\t},\n\t[\"nil\"] = {\n\t\ttag = \"span\",\n\t},\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:37.101Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45561 t=1555362397010260
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1283.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 499283351, 651887468, 697998009
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:06:37.271Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc%2Fredundant&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54393 t=1555362397170804
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1283.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 419704514, 248920044, 700550224
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc/redundant" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:06:37.431Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc%2Fredundant%2FLatn&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43038 t=1555362397340577
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1287.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 732941409, 479718930, 687364411
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc/redundant/Latn" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:06:25.420Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51520 t=1555362385320224
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:25 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1221.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 503329015, 505906474, 685665058
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6279245\" pageid=\"6279245\" ns=\"828\" title=\"Module:utilities/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-01-04T05:57:22Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 51192985 by [[Special:Contributions/2601:CD:C101:322D:F03C:8688:907:84|2601:CD:C101:322D:F03C:8688:907:84]] ([[User talk:2601:CD:C101:322D:F03C:8688:907:84|talk]]): ???\"\
      \ xml:space=\"preserve\">local data = {}\n\ndata.notneeded = {\n\t[\"und\"] = true,\n\t[\"cmn\"] = true,\n\t[\"ja\"] = true,\n\t[\"zu\"] = true,\n\t[\"nan\"] = true,\n\t[\"yue\"] = true,\n\t[\"ko\"] = true,\n}\n\ndata.neededhassubpage = {\n\t[\"ga\"] =\
      \ true,\n\t[\"gv\"] = true,\n\t[\"nv\"] = true,\n\t[\"roa-jer\"] = true,\n\t[\"fr\"] = true,\n\t[\"rm\"] = true,\n\t[\"prg\"] = true,\n\t[\"gd\"] = true,\n\t[\"twf\"] = true,\n\t[\"en\"] = true,\n\t[\"ro\"] = true,\n\t[\"egl\"] = true,\n\t[\"roa-tar\"\
      ] = true,\n\t[\"gl\"] = true,\n\t[\"ast\"] = true,\n\t[\"br\"] = true,\n}\n\n--[[\n\tScript that should be applied to links in categories.\n]]\ndata.catfix_scripts = {\n\t[\"ab\"] = \"Cyrl\",\n\t[\"ae\"] = \"Avst\",\n\t[\"ar\"] = \"Arab\",\n\t[\"ary\"\
      ] = \"Arab\",\n\t[\"be\"] = \"Cyrl\",\n\t[\"cu\"] = \"Cyrs\",\n\t[\"el\"] = \"Grek\",\n\t[\"grc\"] = \"polytonic\",\n\t[\"he\"] = \"Hebr\",\n\t[\"ka\"] = \"Geor\",\n\t[\"orv\"] = \"Cyrs\",\n\t[\"ru\"] = \"Cyrl\",\n\t[\"sa\"] = \"Deva\",\n\t[\"syl\"] =\
      \ \"Sylo\",\n\t[\"xfa\"] = \"Ital\",\n\t[\"zle-ono\"] = \"Cyrs\",\n\t[\"hi\"] = \"Deva\",\n\t[\"mr\"] = \"Deva\",\n--[[\n\t[\"\"] = \"\",\n]]\n}\n\n-- Namespaces in which format_categories will add categories.\ndata.allowedNamespaces = {\n\t[\"\"] = true,\n\
      \t[\"Appendix\"] = true,\n\t[\"Reconstruction\"] = true,\n\t[\"Citations\"] = true,\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:25.622Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alt-noun-f-a-4&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=73852 t=1555362385501121
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1462'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:25 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1287.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 574966222, 565679417, 702513942
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="1486043" pageid="1486043" ns="10" title="Template:lt-noun-f-a-4"><revisions><rev user="Neitrāls vārds" timestamp="2014-03-25T06:06:53Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="trailing line break using [[Project:AWB|AWB]]" xml:space="preserve">{{lt-decl-noun-stress
      |1={{{1}}}a
      |2={{{1}}}à
      |3={{{1}}}os
      |4={{{2}}}os
      |5={{{1}}}os
      |6={{{1}}}õs
      |7={{{1}}}ų
      |8={{{1}}}ų̃
      |9={{{1}}}ai
      |10={{{2}}}ai
      |11={{{1}}}oms
      |12={{{1}}}óms
      |13={{{1}}}ą
      |14={{{2}}}ą
      |15={{{1}}}as
      |16={{{1}}}às
      |17={{{1}}}a
      |18={{{1}}}à
      |19={{{1}}}omis
      |20={{{1}}}omìs
      |21={{{1}}}oje
      |22={{{1}}}ojè
      |23={{{1}}}ose
      |24={{{1}}}osè
      |25={{{1}}}a
      |26={{{2}}}a
      |27={{{1}}}os
      |28={{{2}}}os}}&lt;noinclude&gt;[[Category:Lithuanian noun inflection-table templates|2nd declension 4th stress pattern]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:25.800Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alt-decl-noun-stress&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52979 t=1555362385699736
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '2460'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:25 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1228.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 667860439, 563517949, 690007720
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"1485920\" pageid=\"1485920\" ns=\"10\" title=\"Template:lt-decl-noun-stress\"><revisions><rev user=\"Rua\" timestamp=\"2013-08-28T11:32:55Z\"\
      \ contentformat=\"text/x-wiki\" contentmodel=\"wikitext\" comment=\"Use alt form as entry name, diacritics are removed\" xml:space=\"preserve\">&lt;div class=\"NavFrame\" style=\"\"&gt;\n&lt;div class=\"NavHead\" style=\"\" &gt;declension of {{PAGENAME}}&lt;/div&gt;\n\
      &lt;div class=\"NavContent\"&gt;\n\n{| border=\"1\" color=\"#cdcdcd\" style=\"border-collapse:collapse; background:#F9F9F9; text-align:center; width:100%\" class=\"inflection-table\"\n|-\n! style=\"width:30%;background:#DEDEDE\" | \n! style=\"width:35%;background:#DEDEDE\"\
      \ | singular &lt;small&gt;([[vienaskaita]])&lt;/small&gt;\n! style=\"width:35%;background:#DEDEDE\" | plural &lt;small&gt;([[daugiskaita]])&lt;/small&gt;\n|-\n! style=\"background:#EFEFEF\" | nominative &lt;small&gt;([[vardininkas]])&lt;/small&gt;\n| {{l|lt|{{{2}}}}}\n\
      | {{l|lt|{{{4}}}}}\n|-\n! style=\"background:#EFEFEF\" | genitive &lt;small&gt;([[kilmininkas]])&lt;/small&gt;\n| {{l|lt|{{{6}}}}}\n| {{l|lt|{{{8}}}}}\n|-\n! style=\"background:#EFEFEF\" | dative &lt;small&gt;([[naudininkas]])&lt;/small&gt;\n| {{l|lt|{{{10}}}}}\n\
      | {{l|lt|{{{12}}}}}\n|-\n! style=\"background:#EFEFEF\" | accusative &lt;small&gt;([[galininkas]])&lt;/small&gt;\n| {{l|lt|{{{14}}}}}\n| {{l|lt|{{{16}}}}}\n|-\n! style=\"background:#EFEFEF\" | instrumental &lt;small&gt;([[įnagininkas]])&lt;/small&gt;\n\
      | {{l|lt|{{{18}}}}}\n| {{l|lt|{{{20}}}}}\n|-\n! style=\"background:#EFEFEF\" | locative &lt;small&gt;([[vietininkas]])&lt;/small&gt;\n| {{l|lt|{{{22}}}}}\n| {{l|lt|{{{24}}}}}\n|-\n! style=\"background:#EFEFEF\" | vocative &lt;small&gt;([[šauksmininkas]])&lt;/small&gt;\n\
      | {{l|lt|{{{26}}}}}\n| {{l|lt|{{{28}}}}}\n|}&lt;/div&gt;&lt;/div&gt;&lt;noinclude&gt;\n\n[[Category:Lithuanian noun inflection-table templates|*noun1]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:26.564Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aredlink+category&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=62686 t=1555362386452780
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:26 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 592989554, 829302659, 686025303
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5379564" pageid="5379564" ns="10" title="Template:redlink category"><revisions><rev user="Mnemosientje" timestamp="2019-03-07T14:12:31Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">&lt;!--
      This is a list of entries that won't be checked for redlinks. Usually, they are large entries, where redlink checking can cause module errors.
      --&gt;{{#switch:{{PAGENAME}}|-ere|a|and|animal|book|box|do|dog|fish|heart|e|gold|green|I|iron|language|light|man|me|mies|mouth|one|salt|smoke|sun|te|tea|water|wind|一|人|母|女|水|目|Spanish diminutives of given names|Common Russian verbs|Ancient Greek Swadesh list|Frequency dictionary of the modern Russian language (the Russian National Corpus)/1|Frequency dictionary of the modern Russian language (the Russian National Corpus)/8|=|&lt;!--

      The last five refer to Appendix:Spanish diminutives of given names, Appendix:Common Russian verbs, Appendix:Frequency dictionary of the modern Russian language (the Russian National Corpus)/1, Appendix:Frequency dictionary of the modern Russian language (the Russian National Corpus)/8; the namespace has been stripped.

          --&gt;{{#switch:{{NAMESPACE}}||Reconstruction|Appendix=&lt;!--

              This is the list of languages with redlink checking enabled.
              --&gt;{{#switch:{{{1}}}|afa-pro|ang|cel-pro|egy|es|fi|gem-pro|gml|got|grc|iir-pro|ine-pro|it|itc-pro|map-pro|non|poz-pro|poz-pol-pro|pt|ru|sem-pro|sit-pro|sla-pro|te|zh|cmn|yue|nan|hak=&lt;!-- testing
                  --&gt;{{#ifeq:{{isValidPageName|{{{2|}}}}}|valid|&lt;!--
                      --&gt;{{#invoke:redlink category|cat|{{{1}}}|{{{2}}}|template={{{template|-}}}}}&lt;!--
                  --&gt;}}&lt;!--
              --&gt;}}&lt;!--
          --&gt;}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:27.335Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AisValidPageName&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52190 t=1555362387235969
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 511148043, 486231872, 693942220
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="288906" pageid="288906" ns="10" title="Template:isValidPageName"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T18:15:16Z" contentformat="text/x-wiki"
      contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:isValidPageName]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite)
      [Move=Allow only template editors and administrators] (in..." xml:space="preserve">{{#ifeq:{{{1}}}|-||{{#invoke:ugly hacks|is_valid_page_name|{{{1}}}}}}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:06:27.541Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Augly+hacks&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=73553 t=1555362387418175
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1222.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 495738838, 245056181, 681209196
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4300282\" pageid=\"4300282\" ns=\"828\" title=\"Module:ugly hacks\"><revisions><rev user=\"Rua\" timestamp=\"2018-01-04T23:40:32Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"Removed some unused functions\" xml:space=\"preserve\">local export = {}\n\nfunction export.explode(frame)\n\tlocal wanted_index = tonumber(frame.args[3])\n \n\tlocal count = 1\n\tfor item in mw.text.gsplit(frame.args[1],\
      \ frame.args[2], true) do\n\t\tif count == wanted_index then\n\t\t\treturn item\n\t\tend\n\t\tcount = count + 1\t\n\tend\n\t\n\treturn \"\"\nend\n\nfunction export.substr(frame)\n\treturn mw.ustring.sub(frame.args[1] or \"\", tonumber(frame.args[2]) or\
      \ 1, tonumber(frame.args[3]) or -1)\nend\n\nfunction export.find(frame)\n\treturn mw.ustring.find(frame.args[1] or \"\", frame.args[2] or \"\", 1, true) or \"\"\nend\n\nfunction export.find_pattern(frame)\n\treturn mw.ustring.find(frame.args[1] or \"\"\
      , frame.args[2] or \"\", 1, false) or \"\"\nend\n\nfunction export.replace(frame)\n\treturn (mw.ustring.gsub(frame.args[1] or \"\", frame.args[2] or \"\", frame.args[3] or \"\"))\nend\n\nfunction export.match(frame)\n\treturn (mw.ustring.match(frame.args[1]\
      \ or \"\", frame.args[2] or \"\"))\nend\n\nfunction export.escape_wiki(frame)\n\treturn mw.text.nowiki(frame.args[1] or \"\")\nend\n\nfunction export.escape_html(frame)\n\treturn mw.text.encode(frame.args[1] or \"\")\nend\n\nfunction export.is_valid_page_name(frame)\n\
      \tlocal res = mw.title.new(frame.args[1])\n\tif res then\n\t\treturn \"valid\"\n\telse\n\t\treturn \"\"\n\tend\nend\n\nreturn setmetatable({ }, {\n\t__index = function(self, key)\n\t\tlocal m_debug = require('Module:debug')\n\t\tlocal frame = mw.getCurrentFrame()\n\
      \t\tlocal pframe = frame:getParent()\n\t\tlocal tname = pframe and pframe:getTitle()\n\n\t\tm_debug.track('ugly hacks/' .. key)\n\t\tif pframe then\n\t\t\tm_debug.track('ugly hacks/' .. key .. '/from ' .. tname)\n\t\telse\n\t\t\tmw.log(debug.traceback('ugly\
      \ hacks: parent frame not available'))\n\t\tend\n\t\treturn export[key]\t\n\tend\n})</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:40.599Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fis_valid_page_name&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52999 t=1555362400499684
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:40 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1285.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 503851046, 636667450, 692274429
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/is_valid_page_name" to="Template:tracking/ugly hacks/is valid page name" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/is valid page name" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:06:40.752Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fis_valid_page_name%2Ffrom+Template%3AisValidPageName&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=37841 t=1555362400669027
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:40 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1285.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 605523648, 247543825, 701826849
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/is_valid_page_name/from Template:isValidPageName" to="Template:tracking/ugly hacks/is valid page name/from Template:isValidPageName" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/is valid page name/from Template:isValidPageName" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:06:28.023Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aredlink+category&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48387 t=1555362387926641
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:28 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 207886106, 630907803, 678591616
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5376702\" pageid=\"5376702\" ns=\"828\" title=\"Module:redlink category\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-01-27T00:37:29Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"protected-calling mw.incrementExpensiveFunctionCount doesn&#039;t really work as a way to test if the expensive function count is at or above the limit; index link_object.exists in a protected\
      \ function instead\" xml:space=\"preserve\">local export = {}\n\nfunction export.cat (frame)\n\tlocal redlink_category = \"\"\n\n\tlocal m_languages = require(\"Module:languages\")\n\tlocal code = frame.args[1] -- language code\n\tlocal template = frame.args[\"\
      template\"]\n\n\tlocal lang = m_languages.getByCode(frame.args[1])\n\tlocal entry = require(\"Module:links\").getLinkPage(frame.args[2], lang) -- entry name (parameter 2 in Template:m, Template:l)\n\n\tlocal link_object = mw.title.new (entry)\n\t\n\t--\
      \ Prevent an expensive parser function error. Unfortunately, we can't check\n\t-- the expensive parser function count before running the preceding code\n\t-- in this function.\n\tlocal success, exists\n\tif link_object then\n\t\tsuccess, exists = pcall(function\
      \ () return link_object.exists end)\n\tend\n\n\tif success and not exists then\n\t\tlocal langname = lang:getCanonicalName()\n\t\t\n\t\tredlink_category = \"[[Category:\" .. langname .. \" redlinks]]\"\n\t\tif template and template ~= \"-\" then\n\t\t\t\
      redlink_category = redlink_category .. \"[[Category:\" .. langname .. \" redlinks/\" .. template .. \"]]\"\n\t\tend\n\tend\n\n\treturn redlink_category\n\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:28.950Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aqualifier&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=130836 t=1555362388671649
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:28 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1285.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 568847329, 488982944, 688706440
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6098679\" pageid=\"6098679\" ns=\"828\" title=\"Module:qualifier\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-05-08T23:55:07Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"allow string to be supplied to format_qualifier\" xml:space=\"preserve\">local export = {}\n\nfunction export.format_qualifier(list)\n\tif type(list) ~= \"table\" then\n\t\tlist = { list\
      \ }\n\tend\n\t\n\tif #list == 0 then\n\t\treturn ''\n\tend\n\n\treturn '&lt;span class=\"ib-brac qualifier-brac\"&gt;(&lt;/span&gt;' ..\n\t       '&lt;span class=\"ib-content qualifier-content\"&gt;' ..\n\t       table.concat(list, '&lt;span class=\"ib-comma\
      \ qualifier-comma\"&gt;,&lt;/span&gt; ') ..\n\t\t   '&lt;/span&gt;&lt;span class=\"ib-brac qualifier-brac\"&gt;)&lt;/span&gt;'\nend\n\nfunction export.qualifier_t(frame)\n\tlocal params = {\n\t   [1] = {list = true, required = true},\n\t}\n\t\n\tlocal\
      \ args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal subvarieties = mw.loadData(\"Module:qualifier/subvarieties\")\n\t\n\tfor i, label in ipairs(args[1]) do\n\t\tif subvarieties[label] then\n\t\t\trequire(\"Module:debug\"\
      ).track(\"qualifier/subvarieties\")\n\t\t\t--[[\n\t\t\t\tcurrently not working:\n\t\t\tlocal lang = subvarieties[label].languages[1]\n\t\t\trequire(\"Module:debug\").track(\"qualifier/subvarieties/\" .. lang)\n\t\t\t]]\n\t\tend\n\tend\n\n\treturn export.format_qualifier(args[1])\n\
      end\n\nfunction export.sense_t(frame)\n\tlocal params = {\n\t   [1] = {list = true, required = true},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn export.format_qualifier(args[1])\n\t\t.. '&lt;span\
      \ class=\"ib-colon sense-qualifier-colon\"&gt;:&lt;/span&gt;'\nend\n\nfunction export.gloss_t(frame)\n\tlocal params = {\n\t   [1] = {required = true},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\t\
      return '&lt;span class=\"gloss-brac\"&gt;(&lt;/span&gt;&lt;span class=\"gloss-content\"&gt;' ..\n\t\t\targs[1] .. '&lt;/span&gt;&lt;span class=\"gloss-brac\"&gt;)&lt;/span&gt;'\nend\n\nfunction export.non_gloss_definition_t(frame)\n\tlocal params = {\n\
      \t   [1] = {required = true},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn '&lt;span class=\"use-with-mention\"&gt;' .. require(\"Module:links\").english_links(args[1]) .. '&lt;/span&gt;'\nend\n\
      \t\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:29.133Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aqualifier%2Fsubvarieties&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55309 t=1555362389031253
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1233.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 736645576, 730772162, 687563159
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6101539\" pageid=\"6101539\" ns=\"828\" title=\"Module:qualifier/subvarieties\"><revisions><rev user=\"SemperBlotto\" timestamp=\"2017-09-22T06:01:06Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Reverted edits by [[Special:Contributions/94.24.95.67|94.24.95.67]]. If you think this rollback is in error, please leave a message on my [[User talk:SemperBlotto|talk page]].\" xml:space=\"\
      preserve\">local m_subvarieties = require(\"Module:labels/data/subvarieties\")\n\nlocal labels = {}\n\nfor key, val in pairs(m_subvarieties.labels) do\n\tif val.languages then\n\t\tlabels[key] = val\n\tend\nend\n\nreturn labels</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:29.352Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Fsubvarieties&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50613 t=1555362389209400
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 578078859, 648099940, 702220033
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4977892\" pageid=\"4977892\" ns=\"828\" title=\"Module:labels/data/subvarieties\"><revisions><rev user=\"Лорд Алекс\" timestamp=\"2019-03-27T02:05:05Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\nlocal deprecated = {}\n\nlocal m_functions = require(\"Module:labels/data/functions\")\n\nlabels[\"Aeolic\"] = {\n\tWikipedia\
      \ = \"Aeolic Greek\",\n\tplain_categories = {\"Aeolic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Aeolic Greek\"] = \"Aeolic\"\n\nlabels[\"African American Vernacular English\"] = {\n\tdisplay = \"African American Vernacular\",\n\tWikipedia\
      \ = true,\n\tplain_categories = {\"African American Vernacular English\"},\n\tlanguage = \"en\",\n}\naliases[\"AAVE\"] = \"African American Vernacular English\"\naliases[\"ebonics\"] = \"African American Vernacular English\"\n\nlabels[\"Akhmimic\"] = {\n\
      \tWikipedia = \"Coptic language#Akhmimic\",\n\tplain_categories = {\"Akhmimic Coptic\"},\n\tlanguage = \"cop\",\n}\n\nlabels[\"Alsatian German\"] = {\n\tdisplay = \"Alsatian\",\n\tWikipedia = \"Alsatian dialect\",\n\tplain_categories = {\"Alsatian German\"\
      },\n\tlanguage = \"gsw\",\n}\naliases[\"Elsässisch\"] = \"Alsatian German\"\n\nlabels[\"American spelling\"] = {\n\tdisplay = \"American spelling\",\n\tWikipedia = \"American and British English spelling differences\",\n\tplain_categories = {\"American\
      \ English forms\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Anglo-Norman\"] = {\n\tWikipedia = \"Anglo-Norman language\",\n\tplain_categories = {\"Anglo-Norman Old French\"},\n\tlanguage = \"fro\",\n}\n\nlabels[\"Anglian\"] = {\n\tWikipedia = \"Anglian dialect\"\
      ,\n\tplain_categories = { \"Anglian Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Ararat\"] = {\n\tWikipedia = \"Araratian dialect\",\n\tplain_categories = {\"Ararat Armenian\"},\n\tlanguage = \"hy\",\n}\n\nlabels[\"Arbëresh\"] = {\n\tWikipedia\
      \ = \"Arbëresh\",\n\tplain_categories = {\"Arbëresh Albanian\"},\n\tlanguage = \"sq\",\n}\naliases[\"Arbëreshë\"] = \"Arbëresh\"\naliases[\"Arbërisht\"] = \"Arbëresh\"\n\nlabels[\"Arcadocypriot\"] = {\n\tWikipedia = \"Arcadocypriot Greek\",\n\tplain_categories\
      \ = {\"Arcadocypriot Ancient Greek\"},\n\tlanguage = \"grc\"\n}\naliases[\"Arcadocypriot Greek\"] = \"Arcadocypriot\"\n\nlabels[\"Arvanitika\"] = {\n\tWikipedia = \"Arvanitika\",\n\tplain_categories = {\"Arvanitika Albanian\"},\n\tlanguage = \"sq\",\n\
      }\n\nlabels[\"Attic\"] = {\n\tWikipedia = \"Attic Greek\",\n\tplain_categories = {\"Attic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Attic Greek\"] = \"Attic\"\n\nlabels[\"Old Attic\"] = {\n\tWikipedia = \"Attic Greek\",\n\tplain_categories\
      \ = {\"Attic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\n\nlabels[\"Old Hittite\"] = {\n\tWikipedia = true,\n\tlanguage = \"hit\",\n\tplain_categories = { \"Old Hittite\" },\n}\n\nlabels[\"Australian Aboriginal English\"] = {\n\tdisplay = \"Australian\
      \ Aboriginal\",\n\tWikipedia = true,\n\tplain_categories = {\"Australian Aboriginal English\"},\n\tlanguage = \"en\",\n}\naliases[\"Australian Aboriginal\"] = \"Australian Aboriginal English\"\n\nlabels[\"Australian English\"] = {\n\tdisplay = \"Australia\"\
      ,\n\tWikipedia = true,\n\tplain_categories = {\"Australian English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Balhae\"] = {\n\tplain_categories = {\"Balhae Old Korean\"},\n\tlanguage = \"oko\",\n}\n\nlabels[\"Balkar\"] = {\n\tplain_categories = {\"Balkar\"\
      },\n\tlanguage = \"krc\",\n}\n\nlabels[\"Batangas\"] = {\n\tdisplay = \"[[w:Batangas Tagalog|Batangas]]\",\n\tplain_categories = { \"Batangas Tagalog\" },\n\tlanguage = \"tl\",\n}\naliases[\"Batangas Tagalog\"] = \"Batangas\"\naliases[\"Batangueño\"] =\
      \ \"Batangas\"\n\n-- For Standard German as used in Bavaria\nlabels[\"Bavaria\"] = {\n\tWikipedia = \"Bavarian language#Use\",\n\tplain_categories = {\"Bavarian German\"},\n\tlanguage = \"de\",\n}\n\nlabels[\"Bavarian\"] = {\n\tWikipedia = \"Old High German\"\
      ,\n\tplain_categories = { \"Bavarian Old High German\" },\n\tlanguage = \"goh\",\n}\n\nlabels[\"Biblical Hebrew\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Biblical Hebrew\"},\n\tlanguage = \"he\",\n}\naliases[\"hbo\"] = \"Biblical Hebrew\"\n\
      aliases[\"Classical Hebrew\"] = \"Biblical Hebrew\"\naliases[\"Ancient Hebrew\"] = \"Biblical Hebrew\"\naliases[\"Old Hebrew\"] = \"Biblical Hebrew\"\n\nlabels[\"Birmingham\"] = {\n\tdisplay = \"[[wikipedia:Brummie|Birmingham]]\",\n\tplain_categories =\
      \ {\"Birmingham English\"},\n\tlanguage = \"en\",\n}\naliases[\"Brummie\"] = \"Birmingham\"\naliases[\"Brummy\"] = \"Birmingham\"\n\nlabels[\"Boeotian\"] = {\n\tWikipedia = \"Boeotian Greek\",\n\tplain_categories = {\"Boeotian Ancient Greek\"},\n\tlanguage\
      \ = \"grc\",\n}\naliases[\"Boeotian Greek\"] = \"Boeotian\"\n\nlabels[\"Bohairic\"] = {\n\tWikipedia = \"Coptic language#Bohairic\",\n\tplain_categories = {\"Bohairic Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Memphitic\"] = \"Bohairic\"\n\nlabels[\"\
      Bombay\"] = {\n\tWikipedia = \"Bombay Hindi\",\n\tplain_categories = {\"Bombay Hindi\"},\n\tlanguage = \"hi\",\n}\naliases[\"Bambaiyya\"] = \"Bombay\"\naliases[\"Mumbai\"] = \"Bombay\"\n\nlabels[\"Bokmål\"] = {\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Norwegian Bokmål\"},\n\tlanguage = \"nb\",\n}\n\nlabels[\"Border Scots\"] = {\n\tplain_categories = {\"Border Scots\"},\n\tlanguage = \"sco\",\n}\n\nlabels[\"Braj\"] = {\n    display = \"[[w:Braj Bhasha|Braj]]\",\n\tplain_categories = {\"Braj Bhā\
      ṣā\"},\n\tlanguage = \"hi\",\n}\n\nlabels[\"British English\"] = {\n\tdisplay = \"British\",\n\tWikipedia = true,\n\tplain_categories = {\"British English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"British spelling\"] = {\n\tdisplay = \"British spelling\"\
      ,\n\tWikipedia = \"American and British English spelling differences\",\n\tplain_categories = {\"British English forms\"},\n\tlanguage = \"en\",\n}\naliases[\"Commonwealth spelling\"] = \"British spelling\"\n\nlabels[\"Buddhist Hybrid Sanskrit\"] = {\n\
      \    display = \"Buddhist Hybrid Sanskrit\",\n\tWikipedia = true,\n    plain_categories = {\"Buddhist Hybrid Sanskrit\"},\n    language = \"sa\",\n}\naliases[\"BHS\"] = \"Buddhist Hybrid Sanskrit\"\n\nlabels[\"Byzantine\"] = {\n\tWikipedia = \"Medieval\
      \ Greek\",\n\tplain_categories = {\"Byzantine Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Byzantine Greek\"] = \"Byzantine\"\naliases[\"Medieval Greek\"] = \"Byzantine\"\n\nlabels[\"Bzyb\"] = {\n\tdisplay = \"[[w:Bzyb dialect|Bzyb]]\",\n\tplain_categories\
      \ = {\"Bzyb Abkhaz\"},\n\tlanguage = \"ab\",\n}\naliases[\"Bzyp\"] = \"Bzyb\"\n\nlabels[\"Canadian English\"] = {\n\tdisplay = \"Canada\",\n\tWikipedia = true,\n\tplain_categories = {\"Canadian English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Canadian\
      \ spelling\"] = {\n\tdisplay = \"Canadian\",\n\tWikipedia = true,\n\tplain_categories = {\"Canadian English forms\"},\n\tlanguage = \"en\",\n}\n\n-- Two instances of the language code \"yue\" being used with this label\nlabels[\"Cantonese\"] = {\n\tdisplay\
      \ = \"[[Cantonese]]\",\n\tplain_categories = {\"Cantonese Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Catholic\"] = {\n\tdisplay = \"[[w:Goan Catholics|Catholic]]\",\n\tplain_categories = {\"Catholic Konkani\"},\n\tlanguage = \"kok\"\n}\n\nlabels[\"\
      Central Standard\"] = {\n\tdiplay = \"Central Standard\",\n\tplain_categories = {\"Central Standard Assamese\"},\n\tlanguage = \"as\",\n}\n\nlabels[\"Chakavian\"] = {\n\tdisplay = \"[[Chakavian]]\",\n\tplain_categories = {\"Chakavian Serbo-Croatian\"},\n\
      \tlanguage = \"sh\",\n}\naliases[\"Čakavian\"] = \"Chakavian\"\n\nlabels[\"Cham Albanian\"] = {\n\tdisplay = \"Cham\",\n\tWikipedia = \"Cham Albanian dialect\",\n\tplain_categories = {\"Cham Albanian\"},\n\tlanguage = \"sq\",\n}\n\n--[=[ Currently empty:\n\
      labels[\"Chinglish\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Chinglish\"},\n\tlanguage = \"\",\n}\n]=]\n\nlabels[\"Clay Frisian\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Clay Frisian\"},\n\tlanguage = \"fy\",\n}\n\nlabels[\"Cockney\"\
      ] = {\n\tWikipedia = \"Cockney#Speech\",\n\tplain_categories = {\"Cockney English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Cois Fharraige\"] = {\n\tWikipedia = \"Gaeltacht Cois Fharraige\",\n\tplain_categories = {\"Connacht Irish\"},\n\tlanguage = \"ga\"\
      ,\n}\naliases[\"Cois Fhairrge\"] = \"Cois Fharraige\"\n\nlabels[\"Cretan\"] = {\n\tWikipedia = \"Cretan Greek\",\n\tplain_categories = {\"Cretan Greek\"},\n\tlanguage = \"el\",\n}\naliases[\"cretan\"] = \"Cretan\"\n\nlabels[\"Dari\"] = {\n\tdisplay = \"\
      Dari (Afghanistan)\",\n\tWikipedia = \"Dari (Persian)\",\n\tplain_categories = {\"Dari Persian\"},\n\tlanguage = \"fa\",\n}\n\nlabels[\"Datian Min\"] = {\n\tdisplay = \"Datian Min\",\n\tWikipedia = true,\n\tplain_categories = {\"Datian Min Chinese\"},\n\
      \tlanguage = \"zh\",\n}\n\nlabels[\"Daytshmerish\"] = {\n\tdisplay = \"[[דײַטשמעריש|Daytshmerish]]\",\n\tplain_categories = {\"Daytshmerish Yiddish\"},\n\tlanguage = \"yi\",\n}\naliases[\"daytshmerish\"] = \"Daytshmerish\"\n\nlabels[\"De'kwana\"] = {\n\
      \tdisplay = \"De'kwana dialect\",\n\tplain_categories = {\"De'kwana Maquiritari\"},\n\tlanguage = \"mch\",\n}\naliases[\"De'kwana dialect\"] = \"De'kwana\"\n\nlabels[\"Delhi-Meerut\"] = {\n\tWikipedia = \"Ashokan Edicts in Delhi#Delhi-Meerut pillar\",\n\
      \tdisplay = \"Delhi-Meerut\",\n\tplain_categories = {\"Delhi-Meerut Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\naliases[\"Meerut\"] = \"Delhi-Meerut\"\n\nlabels[\"Delhi-Topra\"] = {\n\tWikipedia = \"Ashokan Edicts in Delhi#Delhi-Topra pillar\",\n\
      \tdisplay = \"Delhi-Topra\",\n\tplain_categories = {\"Delhi-Topra Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\naliases[\"Topra\"] = \"Delhi-Topra\"\n\nlabels[\"Dhauli\"] = {\n\tWikipedia = true,\n\tdisplay = \"Dhauli\",\n\tplain_categories = {\"\
      Dhauli Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Digor\"] = {\n\tdisplay = \"Digor dialect\",\n\tplain_categories = {\"Digor Ossetian\"},\n\tlanguage = \"os\",\n}\naliases[\"Digor dialect\"] = \"Digor\"\n\nlabels[\"Doric\"] = {\n\t\
      Wikipedia = \"Doric Greek\",\n\tplain_categories = {\"Doric Ancient Greek\"},\n\tlanguage = \"grc\",\n}\n\nlabels[\"Drasi\"] = {\n\tWikipedia = \"Dras\",\n\tplain_categories = {\"Dras Shina\"},\n\tlanguage = \"scl\",\n}\n\nlabels[\"Early West Saxon\"]\
      \ = {\n\tdisplay = \"Early West Saxon\",\n\tWikipedia = true,\n\tplain_categories = {\"Early West Saxon Old English\"},\n\tlanguage = \"ang\",\n}\n\nlabels[\"Early Middle English\"] = {\n\tdisplay = \"Early Middle English\",\n\tWikipedia = \"Middle English#Early\
      \ Middle English\",\n\tplain_categories = {\"Early Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Early ME\"] = \"Early Middle English\"\naliases[\"Earlier ME\"] = \"Early Middle English\"\naliases[\"early ME\"] = \"Early Middle English\"\n\n\
      labels[\"East Anglian English\"] = {\n\tdisplay = \"East Anglia\",\n\tWikipedia = true,\n\tplain_categories = {\"East Anglian English\"},\n\tlanguage = \"en\",\n}\n\n-- for East Frisian dialectal German Low German, not the Frisianic language\nlabels[\"\
      East Frisian\"] = {\n\tWikipedia = \"East Frisian Low Saxon\",\n\tplain_categories = {\"East Frisian Low German\"},\n\tlanguage = \"nds-de\",\n}\n\nlabels[\"East Germanic\"] = {\n\tWikipedia = \"East Germanic languages\",\n\tplain_categories = {\"East\
      \ Proto-Germanic\"},\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"East Midland Middle English\"] = {\n\tdisplay = \"East Midlands\",\n\tplain_categories = {\"East Midland Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"East Midlands ME\"] = \"East\
      \ Midland Middle English\"\naliases[\"East Midland ME\"] = \"East Midland Middle English\"\n\nlabels[\"East Midlands English\"] = {\n\tdisplay = \"East Midlands\",\n\tWikipedia = true,\n\tplain_categories = {\"East Midlands English\"},\n\tlanguage = \"\
      en\",\n}\n\nlabels[\"East Palatine\"] = {\n\tdisplay = \"Vorderpfälzisch\",\n\tWikipedia = \"Palatine German language\",\n\tplain_categories = {\"East Palatine German\"},\n\tlanguage = \"\",\n}\naliases[\"Vorderpfälzisch\"] = \"East Palatine\"\n\nlabels[\"\
      Eastern Armenian\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Eastern Armenian\"},\n\tlanguage = \"hy\",\n}\n\nlabels[\"Eastern Catalan\"] = {\n\tWikipedia = \"Catalan dialects\",\n\tplain_categories = {\"Eastern Catalan\"},\n\tlanguage = \"ca\"\
      ,\n}\n\nlabels[\"Eastern Standard\"] = {\n\tdiplay = \"Eastern Standard\",\n\tplain_categories = {\"Eastern Standard Assamese\"},\n\tlanguage = \"as\",\n}\n\nlabels[\"Ecclesiastical Latin\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Ecclesiastical\
      \ Latin\"},\n\tlanguage = \"la\",\n}\naliases[\"Church Latin\"] = \"Ecclesiastical Latin\"\n\nlabels[\"Ekavian\"] = {\n\tdisplay = \"[[Ekavian]]\",\n}\n\nlabels[\"Epic\"] = {\n\tWikipedia = \"Homeric Greek\",\n\tplain_categories = {\"Epic Ancient Greek\"\
      },\n\tlanguage = \"grc\",\n}\naliases[\"Homeric\"] = \"Epic\"\naliases[\"Epic Greek\"] = \"Epic\"\naliases[\"Homeric Greek\"] = \"Homeric\"\n\nlabels[\"European French\"] = {\n\tdisplay = \"Europe\",\n\tWikipedia = true,\n\tplain_categories = {\"European\
      \ French\"},\n\tlanguage = \"fr\",\n}\n\nlabels[\"Fante\"] = {\n\tdisplay = \"[[w:Fante dialect|Fante]]\",\n\tplain_categories = {\"Fante Akan\"},\n\tlanguage = \"ak\",\n}\naliases[\"Fantse\"] = \"Fante\"\naliases[\"Fanti\"] = \"Fante\"\naliases[\"Mfantse\"\
      ] = \"Fante\"\n\nlabels[\"Fayyumic\"] = {\n\tWikipedia = \"Coptic language#Fayyumic\",\n\tplain_categories = {\"Fayyumic Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Faiyumic\"] = \"Fayyumic\"\naliases[\"Bashmuric\"] = \"Fayyumic\"\n\nlabels[\"East\
      \ and West Flanders\"] = {\n\tdisplay = \"[[w:East Flanders|East]] and [[w:West Flanders|West Flanders]]\",\n\tplain_categories = {\"East and West Flemish Dutch\"},\n\tlanguage = \"nl\",\n}\naliases[\"Flanders\"] = \"East and West Flanders\"\naliases[\"\
      Flemish\"] = \"East and West Flanders\"\n\nlabels[\"Gan\"] = {\n\tdisplay = \"[[Gan]]\",\n\tplain_categories = {\"Gan Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Geordie\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Geordie English\"},\n\t\
      language = \"en\",\n}\n\nlabels[\"Gheg\"] = {\n\tWikipedia = \"Gheg Albanian\",\n\tplain_categories = {\"Gheg Albanian\"},\n\tlanguage = \"sq\",\n}\n\nlabels[\"Gilgiti\"] = {\n\tWikipedia = \"Gilgit\",\n\tplain_categories = {\"Gilgit Shina\"},\n\tlanguage\
      \ = \"scl\",\n}\n\nlabels[\"Girnar\"] = {\n\tdisplay = \"Girnar\",\n\tWikipedia = true,\n\tplain_categories = {\"Girnar Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Gottscheerisch\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Gottscheerisch\
      \ German\"},\n\tlanguage = \"\",\n}\naliases[\"Gottscheerish\"] = \"Gottscheerisch\"\n\nlabels[\"Guardiol\"] = {\n\tWikipedia = \"Guardia Piemontese\",\n\tplain_categories = {\"Guardiol Occitan\"},\n\tlanguage = \"oc\",\n}\n\nlabels[\"Hainan Min\"] = {\n\
      \tdisplay = \"Hainan Min\",\n\tWikipedia = \"Hainanese\",\n\tplain_categories = {\"Hainan Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Hakka\"] = {\n\tdisplay = \"[[Hakka]]\",\n\tplain_categories = {\"Hakka Chinese\"},\n\tlanguage = \"zh\",\n}\n\
      \nlabels[\"Hamburgisch\"] = {\n\tWikipedia = \"Hamburgisch dialect\",\n\tplain_categories = {\"Hamburgisch Low German\"},\n\tlanguage = \"nds-de\",\n}\n\nlabels[\"Hamshen\"] = {\n\tWikipedia = \"Homshetsi dialect\",\n\tplain_categories = {\"Hamshen Armenian\"\
      },\n\tlanguage = \"hy\",\n}\naliases[\"Homshetsi\"] = \"Hamshen\"\naliases[\"Homshetsma\"] = \"Hamshen\"\n\nlabels[\"Hariyanvi\"] = {\n\tdisplay = \"Hariyāṇvī\",\n\tWikipedia = \"Hariyanvi language\",\n\tplain_categories = {\"Hariyāṇvī\"},\n\tlanguage\
      \ = \"hi\",\n}\naliases[\"Hariyana\"] = \"Hariyanvi\"\n\nlabels[\"Helsinki slang\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Helsinki slang\"},\n\tlanguage = \"fi\",\n}\n\nlabels[\"Hessian\"] = {\n\tWikipedia = \"Hessian dialects\",\n\tplain_categories\
      \ = {\"Hessian German\"},\n\tlanguage = \"de\",\n}\naliases[\"Hessisch\"] = \"Hessian\"\n\nlabels[\"Hong Kong Hakka\"] = {\n\tdisplay = \"Hong Kong [[Hakka]]\",\n\tplain_categories = {\"Hong Kong Hakka\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Huizhou\"\
      ] = {\n\tdisplay = \"[[Huizhou]]\",\n\tplain_categories = {\"Huizhou Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Hulu Pahang\"] = {\n\tplain_categories = {\"Hulu Pahang Malay\"},\n\tlanguage = \"ms\",\n}\n\nlabels[\"Ikavian\"] = {\n\tdisplay = \"\
      [[Ikavian]]\",\n\tplain_categories = {\"Ikavian Serbo-Croatian\"},\n\tlanguage = \"sh\",\n}\n\nlabels[\"Indian English\"] = {\n\tdisplay = \"India\",\n\tWikipedia = true,\n\tplain_categories = {\"Indian English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"\
      Ingilo\"] = {\n\tWikipedia = \"Ingiloy people\",\n\tplain_categories = {\"Ingilo Georgian\"},\n\tlanguage = \"ka\",\n}\naliases[\"Ingiloy\"] = \"Ingilo\"\naliases[\"Saingilo\"] = \"Ingilo\"\n\nlabels[\"Inner Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About\
      \ Mbugu|Ma'a]]\",\n\tplain_categories = {\"Inner Mbugu\"},\n\tlanguage = \"mhd\",\n}\naliases[\"inner Mbugu\"] = \"Inner Mbugu\"\n\nlabels[\"Inuktun\"] = {\n\tplain_categories = {\"Inuktun Inuktitut\"},\n\tlanguage = \"iu\",\n}\naliases[\"Polar Eskimo\"\
      ] = \"Inuktun\"\n\nlabels[\"Inuttut\"] = {\n\tplain_categories = {\"Inuttut Inuktitut\"},\n\tlanguage = \"iu\",\n}\naliases[\"Nunatsiavummiutut\"] = \"Inuttut\"\naliases[\"Labradorimiutut\"] = \"Inuttut\"\n\nlabels[\"Ionic\"] = {\n\tWikipedia = \"Ionic\
      \ Greek\",\n\tplain_categories = {\"Ionic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Ionic Greek\"] = \"Ionic\"\n\nlabels[\"Irish English\"] = {\n\tdisplay = \"Ireland\",\n\tWikipedia = true,\n\tplain_categories = {\"Irish English\"},\n\tlanguage\
      \ = \"en\",\n}\n\nlabels[\"Iron\"] = {\n\tdisplay = \"Iron dialect\",\n\tplain_categories = {\"Iron Ossetian\"},\n\tlanguage = \"os\",\n}\naliases[\"Iron dialect\"] = \"Iron\"\n\nlabels[\"Itivimuit\"] = {\n\tplain_categories = {\"Itivimuit Inuktitut\"\
      },\n\tlanguage = \"iu\",\n}\n\nlabels[\"Ivory Coast French\"] = {\n\tdisplay = \"Ivory Coast\",\n\tWikipedia = \"African French#Abidjan French vocabulary\",\n\tplain_categories = {\"Ivorian French\"},\n\tlanguage = \"fr\",\n}\naliases[\"Ivory Coast\"]\
      \ = \"Ivory Coast French\"\naliases[\"Côte d’Ivoire\"] = \"Ivory Coast French\"\naliases[\"Côte d'Ivoire\"] = \"Ivory Coast French\"\naliases[\"Ivorian\"] = \"Ivory Coast French\"\n\nlabels[\"Ivory Coast French slang\"] = {\n\tdisplay = \"Ivory Coast slang\"\
      ,\n\tWikipedia = \"fr:Nouchi\",\n\tplain_categories = {\"Ivorian French\"},\n\tlanguage = \"fr\",\n}\naliases[\"nouchi\"] = \"Ivory Coast French slang\"\naliases[\"Nouchi\"] = \"Ivory Coast French slang\"\naliases[\"noussi\"] = \"Ivory Coast French slang\"\
      \naliases[\"Noussi\"] = \"Ivory Coast French slang\"\naliases[\"Ivory Coast slang\"] = \"Ivory Coast French slang\"\naliases[\"Côte d’Ivoire slang\"] = \"Ivory Coast French slang\"\naliases[\"Côte d'Ivoire slang\"] = \"Ivory Coast French slang\"\naliases[\"\
      Ivorian slang\"] = \"Ivory Coast French slang\"\n\nlabels[\"Jamaican English\"] = {\n\tdisplay = \"Jamaican\",\n\tWikipedia = true,\n\tplain_categories = {\"Jamaican English\"},\n\tlanguage = \"en\",\n}\naliases[\"Jamaican Standard English\"] = \"Jamaican\
      \ English\"\n\nlabels[\"Jaugada\"] = {\n\tdisplay = \"Jaugada\",\n\tWikipedia = true,\n\tplain_categories = {\"Jaugada Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Jewish Babylonian Aramaic\"] = {\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Jewish Babylonian Aramaic\"},\n\tlanguage = \"arc\",\n}\naliases[\"JBA\"] = \"Jewish Babylonian Aramaic\"\naliases[\"Talmudic Aramaic\"] = \"Jewish Babylonian Aramaic\"\naliases[\"Babylonian Talmudic Aramaic\"] = \"Jewish Babylonian Aramaic\"\n\n\
      labels[\"Kajkavian\"] = {\n\tdisplay = \"[[Kajkavian]]\",\n\tplain_categories = {\"Kajkavian Serbo-Croatian\"},\n\tlanguage = \"sh\",\n}\n\nlabels[\"Karabakh\"] = {\n\tWikipedia = \"Karabakh dialect (Armenian)\",\n\tplain_categories = {\"Karabakh Armenian\"\
      },\n\tlanguage = \"hy\",\n}\naliases[\"Gharabagh\"] = \"Karabakh\"\naliases[\"Artsakh\"] = \"Karabakh\"\n\nlabels[\"Kalsi\"] = {\n\tdisplay = \"Kalsi\",\n\tplain_categories = {\"Kalsi Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Kamrupi\"\
      ] = {\n\tdisplay = \"[[w:Kamprui dialect|Kamrupi]]\",\n\tplain_categories = { \"Kamrupi Assamese\" },\n\tlanguage = \"as\",\n}\naliases[\"Kamruipa\"] = \"Kamrupi\"\naliases[\"Kamrupiya\"] = \"Kamrupi\"\naliases[\"Kamrup\"] = \"Kamrupi\"\n\nlabels[\"Kansai\"\
      ] = {\n\tWikipedia = \"Kansai dialect\",\n\tplain_categories = {\"Kansai Japanese\"},\n\tlanguage = \"ja\",\n}\n\nlabels[\"Karachay\"] = {\n\tplain_categories = {\"Karachay\"},\n\tlanguage = \"krc\",\n}\n\nlabels[\"Katharevousa\"] = {\n\tdisplay = \"[[Katharevousa#English|Katharevousa]]\"\
      ,\n\tplain_categories = { \"Katharevousa\" },\n\tlanguage = \"el\",\n}\n\n--[=[\ncategory has been deleted\nlabels[\"Kichwa\"] = {\n\tdisplay = \"Standard Ecuadorian Kichwa\",\n\tWikipedia = \"Kichwa language\",\n\tplain_categories = {\"Standard Kichwa\"\
      },\n\tlanguage = \"\",\n}\n]=]\n\n--[[\tThis will conflict with a Kentish dialect label for Modern English,\n\t\tif someone wants to make one. ]]\nlabels[\"Kentish\"] = {\n\tWikipedia = \"Kentish dialect (Old English)\",\n\tplain_categories = { \"Kentish\
      \ Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Koine\"] = {\n\tdisplay = \"Koine\",\n\tWikipedia = \"Koine Greek\",\n\tplain_categories = {\"Koine Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Koine Greek\"] = \"Koine\"\naliases[\"Hellenistic\"\
      ] = \"Koine\"\naliases[\"Hellenistic Koine\"] = \"Koine\"\n\nlabels[\"Kölsch\"] = {\n\tWikipedia = \"Colognian language\",\n\tplain_categories = {\"Kölsch Central Franconian\"},\n\tlanguage = \"gmw-cfr\",\n}\naliases[\"Colognian\"] = \"Kölsch\"\naliases[\"\
      Cologne\"] = \"Kölsch\"\naliases[\"Köln\"] = \"Kölsch\"\n\nlabels[\"Kromanti\"] = {\n\tdisplay = \"Kromanti spirit possession language\",\n\tWikipedia = \"Jamaican Maroon spirit-possession language\",\n\tplain_categories = {\"Kromanti Akan\"},\n\tlanguage\
      \ = \"ak\",\n}\n\nlabels[\"Late Latin\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Late Latin\"},\n\tlanguage = \"la\",\n}\n\nlabels[\"Latin America\"] = {\n\tplain_categories = {\"Latin American Spanish\"},\n\tlanguage = \"es\",\n}\naliases[\"\
      Latin American Spanish\"] = \"Latin America\"\n\nlabels[\"Late West Saxon\"] = {\n\tWikipedia = \"Late West Saxon\",\n\tplain_categories = { \"Late West Saxon Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Late Middle English\"] = {\n\tdisplay\
      \ = \"Late Middle English\",\n\tWikipedia = \"Middle English#Late Middle English\",\n\tplain_categories = {\"Late Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Late ME\"] = \"Late Middle English\"\naliases[\"Later ME\"] = \"Late Middle English\"\
      \naliases[\"late ME\"] = \"Late Middle English\"\n\nlabels[\"Leizhou Min\"] = {\n\tdisplay = \"Leizhou Min\",\n\tWikipedia = true,\n\tplain_categories = {\"Leizhou Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Lorraine Franconian\"] = {\n\tdisplay\
      \ = \"[[w:Lorraine Franconian|Lorraine Franconian]]\",\n\tWikipedia = true,\n\tplain_categories = {\"Lorraine Franconian\"},\n\tlanguage = \"\",\n}\naliases[\"Lorrainian\"] = \"Lorraine Franconian\"\naliases[\"Lothringian\"] = \"Lorraine Franconian\"\n\
      aliases[\"Lothringisch\"] = \"Lorraine Franconian\"\n\n\nlabels[\"Louisiana French\"] = {\n\tdisplay = \"Louisiana\",\n\tWikipedia = \"Cajun French\",\n\tplain_categories = {\"Louisiana French\"},\n\tlanguage = \"fr\",\n}\n\nlabels[\"Low Prussian\"] =\
      \ {\n\tWikipedia = \"Low Prussian dialect\",\n\tplain_categories = {\"Low Prussian German Low German\"},\n\tlanguage = \"nds-de\",\n}\n\nlabels[\"Lowlands Scots\"] = {\n\tplain_categories = {\"Lowlands Scots\"},\n\tlanguage = \"sco\",\n}\n\nlabels[\"Lycopolitan\"\
      ] = {\n\tWikipedia = \"Coptic language#Lycopolitan\",\n\tplain_categories = {\"Lycopolitan Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Subakhmimic\"] = \"Lycopolitan\"\naliases[\"Assiutic\"] = \"Lycopolitan\"\n\nlabels[\"Maastrichtian\"] = {\n\tWikipedia\
      \ = \"Maastrichtian dialect\",\n\tplain_categories = {\"Maastrichtian Limburgish\"},\n\tlanguage = \"li\",\n}\n\nlabels[\"Mandarin\"] = {\n\tdisplay = \"[[Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"\
      Maniot\"] = {\n\tdisplay = \"Maniot dialect\",\n\tWikipedia = \"Maniot dialect\",\n\tplain_categories = {\"Maniot Greek\"},\n\tlanguage = \"el\",\n}\naliases['maniot'] = \"Maniot\"\n\nlabels[\"Mansehra\"] = {\n\tdisplay = \"Mansehra\",\n\tWikipedia = true,\n\
      \tplain_categories = {\"Mansehra Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Mecklenburgisch Low German\"] = {\n\tdisplay = \"Mecklenburgisch\",\n\tWikipedia = \"Mecklenburgisch dialect\",\n\tplain_categories = {\"Mecklenburgisch Low\
      \ German\"},\n\tlanguage = \"nds-de\",\n}\naliases[\"Mecklenburgisch\"] = \"Mecklenburgisch Low German\"\naliases[\"Mecklenburg\"] = \"Mecklenburgisch Low German\"\n\nlabels[\"Medieval Hebrew\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Medieval\
      \ Hebrew\"},\n\tlanguage = \"he\",\n}\n\nlabels[\"Medieval Latin\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Medieval Latin\"},\n\tlanguage = \"la\",\n}\n\nlabels[\"Megarian\"] = {\n\tWikipedia = \"Doric Greek\",\n\tplain_categories = {\"Doric\
      \ Ancient Greek\"},\n\tlanguage = \"grc\",\n}\n\nlabels[\"Mercian\"] = {\n\tWikipedia = \"Mercian dialect\",\n\tplain_categories = { \"Mercian Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Middle Hittite\"] = {\n\tWikipedia = true,\n\tlanguage\
      \ = \"hit\",\n\tplain_categories = { \"Middle Hittite\" },\n}\n\nlabels[\"Midlands English\"] = {\n\tdisplay = \"Midlands\",\n\tWikipedia = true,\n\tplain_categories = {\"Midlands English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Min\"] = {\n\tdisplay =\
      \ \"[[Min]]\",\n\tplain_categories = {\"Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Bei\"] = {\n\tdisplay = \"[[Min Bei]]\",\n\tplain_categories = {\"Min Bei Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Dong\"] = {\n\tdisplay = \"\
      [[Min Dong]]\",\n\tplain_categories = {\"Min Dong Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Nan\"] = {\n\tdisplay = \"[[Min Nan]]\",\n\tplain_categories = {\"Min Nan Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Zhong\"] = {\n\tdisplay\
      \ = \"[[Min Zhong]]\",\n\tplain_categories = {\"Min Zhong Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Mishnaic Hebrew\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Mishnaic Hebrew\"},\n\tlanguage = \"he\",\n}\naliases[\"Mishnaic\"] = \"Mishnaic\
      \ Hebrew\"\n\nlabels[\"Mistralian\"] = {\n\tWikipedia = \"Occitan language#Writing system\",\n\tplain_categories = {\"Mistralian Occitan\"},\n\tlanguage = \"oc\",\n}\n\nlabels[\"Mooring\"] = {\n\tWikipedia = \"Mooring (North Frisian dialect)\",\n\tplain_categories\
      \ = {\"Mooring North Frisian\"},\n\tlanguage = \"frr\",\n}\naliases[\"Mooring dialect\"] = \"Mooring\"\n\nlabels[\"Moselle Franconian\"] = {\n\tWikipedia = \"Moselle Franconian dialects\",\n\tplain_categories = {\"Moselle Central Franconian\"},\n\tlanguage\
      \ = \"gmw-cfr\",\n}\naliases[\"Moselfränkisch\"] = \"Moselle Franconian\"\n\nlabels[\"Multicultural London English\"] = {\n\tdisplay = \"MLE\",\n\tWikipedia = true,\n\tplain_categories = {\"Multicultural London English\"},\n\tlanguage = \"en\",\n}\naliases[\"\
      MLE\"] = \"Multicultural London English\"\n\nlabels[\"New Hittite\"] = {\n\tWikipedia = true,\n\tlanguage = \"hit\",\n\tplain_categories = { \"New Hittite\" },\n}\naliases[\"Neo-Hittite\"] = \"New Hittite\"\n\nlabels[\"New Latin\"] = {\n\tWikipedia = true,\n\
      \tplain_categories = {\"New Latin\"},\n\tlanguage = \"la\",\n}\n\nlabels[\"New Sanskrit\"] = {\n\tWikipedia = \"Sanskrit Revival\",\n\tplain_categories = {\"New Sanskrit\"},\n\tlanguage = \"sa\",\n}\naliases[\"Neo-Sanskrit\"] = \"New Sanskrit\"\n\nlabels[\"\
      New Zealand English\"] = {\n\tdisplay = \"New Zealand\",\n\tWikipedia = true,\n\tplain_categories = {\"New Zealand English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Non-Oxford British spelling\"] = {\n\tdisplay = \"Non-[[w:Oxford spelling|Oxford]] [[British\
      \ English]]\",\n\tplain_categories = {\"British English forms\"},\n\tlanguage = \"en\",\n}\naliases[\"non-Oxford British spelling\"] = \"Non-Oxford British spelling\"\naliases[\"Non-Oxford\"] = \"Non-Oxford British spelling\"\naliases[\"non-Oxford\"] =\
      \ \"Non-Oxford British spelling\"\n\nlabels[\"Normal Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About Mbugu|Mbugu]]\",\n\tplain_categories = {\"Normal Mbugu\"},\n\tlanguage = \"mhd\",\n}\naliases[\"normal Mbugu\"] = \"Normal Mbugu\"\n\nlabels[\"North Germanic\"\
      ] = {\n\tWikipedia = \"North Germanic languages\",\n\tplain_categories = {\"North Proto-Germanic\"},\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"Northern Dutch\"] = {\n\tdisplay = \"Northern\",\n\tWikipedia = \"Dutch dialects\",\n\tplain_categories = {\"\
      Northern Dutch\"},\n\tlanguage = \"nl\",\n}\n\nlabels[\"Northern England English\"] = {\n\tdisplay = \"Northern England\",\n\tWikipedia = true,\n\tplain_categories = {\"Northern England English\"},\n\tlanguage = \"en\",\n}\naliases[\"Northern English dialect\"\
      ] = \"Northern England English\"\naliases[\"northern English\"] = \"Northern England English\"\naliases[\"North English\"] = \"Northern England English\"\naliases[\"north English\"] = \"Northern England English\"\n\nlabels[\"Northern Middle English\"]\
      \ = {\n\tdisplay = \"Northern\",\n\tplain_categories = {\"Northern Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Northern ME\"] = \"Northern Middle English\"\naliases[\"North ME\"] = \"Northern Middle English\"\n\nlabels[\"Northern Finnic\"]\
      \ = {\n\tplain_categories = {\"Northern Proto-Finnic\"},\n\tlanguage = \"fiu-fin-pro\",\n}\n\nlabels[\"Northern German\"] = {\n\tplain_categories = {\"Northern German\"},\n\tlanguage = \"de\",\n}\naliases[\"northern German\"] = \"Northern German\"\naliases[\"\
      North German\"] = \"Northern German\"\naliases[\"north German\"] = \"Northern German\"\n\nlabels[\"Northumbrian\"] = {\n\tWikipedia = \"Northumbrian dialect\",\n\tplain_categories = { \"Northumbrian Old English\", \"Anglian Old English\" },\n\tlanguage\
      \ = \"ang\",\n}\n\nlabels[\"Northwest Germanic\"] = {\n\tWikipedia = \"Northwest Germanic languages\",\n\tplain_categories = {\"Northwest Proto-Germanic\"},\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"Nunavik\"] = {\n\tWikipedia = \"Inuktitut#Nunavik\",\n\
      \tplain_categories = {\"Nunavik Inuktitut\"},\n\tlanguage = \"iu\",\n}\naliases[\"Nunavimmiutitut\"] = \"Nunavik\"\naliases[\"Inuttitut\"] = \"Nunavik\"\n\nlabels[\"Nynorsk\"] = {\n\tdisplay = \"Nynorsk\",\n\tplain_categories = {\"Norwegian Nynorsk\"},\n\
      \tlanguage = \"nn\",\n}\n\nlabels[\"Old\"] = {\n    display = \"[[w:Old Avestan|Old Avestan]]\",\n    language = \"ae\",\n    track = true,\n}\naliases[\"Old Avestan\"] = \"Old\"\n\nlabels[\"Old East Norse\"] = {\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Old East Norse\"},\n\tlanguage = \"non\",\n}\naliases[\"East Norse\"] = \"Old East Norse\"\n\nlabels[\"Old Gutnish\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Old Gutnish Norse\"},\n\tlanguage = \"non\",\n}\naliases[\"Old Gotlandic\"] =\
      \ \"Old Gutnish\"\n\nlabels[\"Old West Norse\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Old West Norse\"},\n\tlanguage = \"non\",\n}\naliases[\"West Norse\"] = \"Old West Norse\"\n\nlabels[\"Ormulum\"] = {\n\tWikipedia = \"Ormulum\",\n\tplain_categories\
      \ = {\"Middle English terms unique to the Ormulum\"},\n\tlanguage = \"enm\",\n}\n\nlabels[\"Oxford British spelling\"] = {\n\tdisplay = \"[[w:Oxford spelling|Oxford]] [[British English]]\",\n\tplain_categories = {\"Oxford spellings\"},\n\tlanguage = \"\
      en\",\n}\naliases[\"Oxford\"] = \"Oxford British spelling\"\n\nlabels[\"Oxyrhynchite\"] = {\n\tWikipedia = \"Coptic language#Oxyrhynchite\",\n\tplain_categories = {\"Oxyrhynchite Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Mesokemic\"] = \"Oxyrhynchite\"\
      \n\nlabels[\"Palatine German\"] = {\n\tdisplay = \"Palatine\",\n\tWikipedia = \"Palatine German language\",\n\tplain_categories = {\"Palatine German\"},\n\tlanguage = \"gmw-rfr\",\n}\naliases[\"Palatinate German\"] = \"Palatine German\"\naliases[\"Pälzisch\"\
      ] = \"Palatine German\"\naliases[\"Pfälzisch\"] = \"Palatine German\"\n\nlabels[\"Pennsylvania Dutch English\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Pennsylvania Dutch English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Pinghua\"] = {\n\tdisplay\
      \ = \"Pinghua\",\n\tWikipedia = true,\n\tplain_categories = {\"Pinghua Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Pomeranian Low German\"] = {\n\tdisplay = \"Pomeranian\",\n\tWikipedia = true,\n\tplain_categories = {\"Pomeranian Low German\"},\n\t\
      language = \"nds-de\",\n}\naliases[\"Pomeranian LG\"] = \"Pomeranian Low German\"\n\nlabels[\"Potteries\"] = {\n\tWikipedia = \"Potteries dialect\",\n\tplain_categories = {\"Potteries English\"},\n\tlanguage = \"en\",\n}\naliases[\"Potteries dialect\"\
      ] = \"Potteries\"\n\nlabels[\"Puter\"] = {\n\tWikipedia = \"Putèr\",\n\tplain_categories = {\"Puter Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Ripuarian\"] = {\n\tWikipedia = \"Ripuarian language\",\n\tplain_categories = {\"Ripuarian Central Franconian\"\
      },\n\tlanguage = \"gmw-cfr\",\n}\naliases[\"Ripuarian Franconian\"] = \"Ripuarian\"\naliases[\"Ripuarisch\"] = \"Ripuarian\"\n\n--[[\nThis category has been deleted.\nlabels[\"Royal Thai\"] = {\n\tdisplay = \"royal\",\n\tplain_categories = {\"Thai royal\
      \ vocabulary\"},\n\tlanguage = \"\",\n}\n]]\n\nlabels[\"Rumantsch Grischun\"] = {\n\tWikipedia = true,\n\tlanguage = \"rm\",\n}\n\nlabels[\"Saarlandic\"] = {\n\tdisplay = \"Saarland\",\n\tWikipedia = \"Saarland\",\n\tplain_categories = {\"Saarland German\"\
      },\n\tlanguage = \"\",\n}\naliases[\"Saarländisch\"] = \"Saarlandic\"\naliases[\"Saarlandish\"] = \"Saarlandic\"\n\nlabels[\"Sahidic\"] = {\n\tWikipedia = \"Coptic language#Sahidic\",\n\tplain_categories = {\"Sahidic Coptic\"},\n\tlanguage = \"cop\",\n\
      }\naliases[\"Thebaic\"] = \"Sahidic\"\n\nlabels[\"Scottish English\"] = {\n\tdisplay = \"Scotland\",\n\tWikipedia = true,\n\tplain_categories = {\"Scottish English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Shahbazgarhi\"] = {\n\tdisplay = \"Shahbazgarhi\"\
      ,\n\tWikipedia = \"Shahbaz Garhi\",\n\tplain_categories = {\"Shahbazgarhi Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Shapsug\"] = {\n\tdisplay = \"Shapsug dialect\",\n\tWikipedia = \"Shapsug Adyghe dialect\",\n\tplain_categories = {\"\
      Shapsug Adyghe\"},\n\tlanguage = \"ady\",\n}\n\nlabels[\"Shopski\"] = {\n\tWikipedia = \"Shopi#Dialects\",\n\tplain_categories = {\"Shopski Bulgarian\"},\n\tlanguage = \"bg\",\n}\n\nlabels[\"Silla\"] = {\n\tplain_categories = {\"Silla Old Korean\"},\n\t\
      language = \"oko\",\n}\n\nlabels[\"Sistani\"] = {\n\tWikipedia = \"Sistani dialect\",\n\tplain_categories = {\"Sistani Persian\"},\n\tlanguage = \"fa\",\n}\n\nlabels[\"Siyi\"] = {\n\tWikipedia = \"Siyi Yue\",\n\tlanguage = \"zh\",\n}\n\nlabels[\"Skiri\
      \ Pawnee\"] = {\n\tplain_categories = {\"Skiri Pawnee\"},\n\tlanguage = \"paw\",\n}\n\nlabels[\"Sopara\"] = {\n\tdisplay = \"Sopara\",\n\tWikipedia = true,\n\tplain_categories = {\"Sopara Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"South\
      \ African English\"] = {\n\tdisplay = \"South Africa\",\n\tWikipedia = true,\n\tplain_categories = {\"South African English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"South Scots\"] = {\n\tWikipedia = \"Southern Scots\",\n\tplain_categories = {\"South Scots\"\
      },\n\tlanguage = \"sco\",\n}\n\nlabels[\"Southern Dutch\"] = {\n\tdisplay = \"Southern\",\n\tWikipedia = \"Dutch dialects\",\n\tplain_categories = {\"Southern Dutch\"},\n\tlanguage = \"nl\",\n}\n\nlabels[\"Southern England English\"] = {\n\tdisplay = \"\
      Southern England\",\n\tWikipedia = \"English in southern England\",\n\tplain_categories = {\"Southern England English\"},\n\tlanguage = \"en\",\n}\naliases[\"Southern English\"] = \"Southern England English\"\naliases[\"Southern English dialect\"] = \"\
      Southern England English\"\n\nlabels[\"Southern German\"] = {\n\tplain_categories = {\"Southern German\"},\n\tlanguage = \"\",\n}\naliases[\"southern German\"] = \"Southern German\"\naliases[\"South German\"] = \"Southern German\"\naliases[\"south German\"\
      ] = \"Southern German\"\n\nlabels[\"Southern Middle English\"] = {\n\tdisplay = \"Southern\",\n\tplain_categories = {\"Southern Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Southern ME\"] = \"Southern Middle English\"\naliases[\"South ME\"]\
      \ = \"Southern Middle English\"\naliases[\"Southwest ME\"] = \"Southern Middle English\"\n\nlabels[\"Southern US English\"] = {\n\tdisplay = \"Southern US\",\n\tWikipedia = \"Southern American English\",\n\tplain_categories = {\"Southern US English\"},\n\
      \tlanguage = \"en\",\n}\naliases[\"Southern American English\"] = \"Southern US English\"\n\nlabels[\"Surmiran\"] = {\n\tWikipedia = \"Surmiran dialect\",\n\tplain_categories = {\"Surmiran Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Sursilvan\"]\
      \ = {\n\tWikipedia = \"Sursilvan dialects (Romansh)\",\n\tplain_categories = {\"Sursilvan Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Sussex\"] = {\n\tWikipedia = \"Sussex dialect\",\n\tplain_categories = {\"Sussex English\"},\n\tlanguage = \"en\"\
      ,\n}\n\nlabels[\"Sutsilvan\"] = {\n\tWikipedia = \"Sutsilvan dialects (Romansh)\",\n\tplain_categories = {\"Sutsilvan Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Swiss German\"] = {\n\tdisplay = \"Switzerland\",\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Switzerland German\"},\n\tlanguage = \"de\",\n}\n\nlabels[\"Switzerland and Liechtenstein spelling\"] = {\n\tdisplay = \"[[Switzerland]] and [[Liechtenstein]]\",\n\tplain_categories = {\"Switzerland and Liechtenstein German forms\"},\n\tlanguage\
      \ = \"de\",\n}\naliases[\"SLDE\"] = \"Switzerland and Liechtenstein spelling\"\n\nlabels[\"Taishanese\"] = {\n\tdisplay = \"[[Taishanese]]\",\n\tplain_categories = {\"Taishanese Chinese\"},\n\tlanguage = \"zh\",\n}\naliases[\"Toishanese\"] = \"Taishanese\"\
      \naliases[\"Hoisanese\"] = \"Taishanese\"\n\nlabels[\"Taiwanese Hakka\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Taiwanese Hakka\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwan Hakka\"] = \"Taiwanese Hakka\"\n\nlabels[\"Taiwanese Mandarin\"] =\
      \ {\n\tWikipedia = true,\n\tplain_categories = {\"Taiwanese Mandarin\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwan Mandarin\"] = \"Taiwanese Mandarin\"\n\nlabels[\"Taiwanese Hokkien\"] = {\n\tWikipedia = \"Taiwanese Hokkien\",\n\tplain_categories = {\"\
      Taiwanese Min Nan\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwanese Min Nan\"] = \"Taiwanese Hokkien\"\naliases[\"Taiwan Hokkien\"] = \"Taiwanese Hokkien\"\naliases[\"Taiwan Min Nan\"] = \"Taiwanese Hokkien\"\n\nlabels[\"Taiwanese Hokkien and Hakka\"]\
      \ = {\n\tdisplay = \"[[w:Taiwanese Hokkien|Taiwanese Hokkien]] and [[w:Taiwanese Hakka|Hakka]]\",\n\tplain_categories = {\"Taiwanese Min Nan\", \"Taiwanese Hakka\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwanese Min Nan and Hakka\"] = \"Taiwanese Hokkien\
      \ and Hakka\"\naliases[\"Taiwanese Hakka and Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Hakka and Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Min Nan &amp; Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"\
      Taiwanese Hokkien &amp; Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Hakka &amp; Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Hakka &amp; Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hokkien and\
      \ Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka and Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka and Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Min Nan &amp; Hakka\"] = \"Taiwanese Hokkien\
      \ and Hakka\"\naliases[\"Taiwan Hokkien &amp; Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka &amp; Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka &amp; Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\n\nlabels[\"\
      Teochew\"] = {\n\tdisplay = \"[[Teochew]]\",\n\tplain_categories = {\"Teochew Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Tosk\"] = {\n\tWikipedia = \"Tosk Albanian\",\n\tplain_categories = {\"Tosk Albanian\"},\n\tlanguage = \"sq\",\n}\n\nlabels[\"\
      Twi\"] = {\n\tdisplay = \"[[w:Twi|Twi]]\",\n\tplain_categories = { \"Twi Akan\" },\n\tlanguage = \"ak\",\n}\naliases[\"Akan Kasa\"] = \"Twi\"\n\nlabels[\"Tyneside\"] = {\n\tplain_categories = {\"Geordie English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"\
      Ulster Scots\"] = {\n\tWikipedia = \"Ulster Scots dialects\",\n\tplain_categories = {\"Ulster Scots\"},\n\tlanguage = \"sco\",\n}\naliases[\"Ullans\"] = \"Ulster Scots\"\n\nlabels[\"US English\"] = {\n\tdisplay = \"US\",\n\tWikipedia = \"American English\"\
      ,\n\tplain_categories = {\"American English\"},\n\tlanguage = \"en\",\n}\naliases[\"U.S. English\"] = \"US English\"\naliases[\"American English\"] = \"US English\"\n\nlabels[\"Vallader\"] = {\n\tWikipedia = \"Vallader dialect (Romansh)\",\n\tplain_categories\
      \ = {\"Vallader Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Vedic\"] = {\n    display = \"[[w:Vedic Sanskrit|Vedic]]\",\n    plain_categories = {\"Vedic Sanskrit\"},\n    language = \"sa\",\n}\n\nlabels[\"Vegliot\"] = {\n\tdisplay = \"[[w:Dalmatian_language#Vegliot_dialect|Vegliot]]\"\
      ,\n\tplain_categories = {\"Vegliot Dalmatian\"},\n\tlanguage = \"dlm\",\n}\naliases[\"Krk\"] = \"Vegliot\"\n\nlabels[\"Vivaro-Alpine\"] = {\n\tWikipedia = \"Vivaro-Alpine dialect\",\n\tplain_categories = {\"Vivaro-Alpine Occitan\"},\n\tlanguage = \"oc\"\
      ,\n}\n\nlabels[\"Walser\"] = {\n\tWikipedia = \"Walser German\",\n\tplain_categories = {\"Walser German\"},\n\tlanguage = \"gsw\"\n}\naliases[\"wae\"] = \"Walser\"\naliases[\"Waser German\"] = \"Walser\"\naliases[\"Walserdeutsch\"] = \"Walser\"\n\nlabels[\"\
      West Arabian\"] = {\n\tdisplay = \"Hejazi\",\n\tplain_categories = {\"Hejazi Arabic\"},\n\tlanguage = \"ar\",\n}\naliases[\"Hejazi Arabic\"] = \"West Arabian\"\n\nlabels[\"West Country English\"] = {\n\tdisplay = \"West Country\",\n\tWikipedia = true,\n\
      \tplain_categories = {\"West Country English\"},\n\tlanguage = \"en\",\n}\naliases[\"West Country dialect\"] = \"West Country English\"\n\nlabels[\"West Germanic\"] = {\n\tWikipedia = \"West Germanic languages\",\n\tplain_categories = {\"West Proto-Germanic\"\
      },\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"West Midland Middle English\"] = {\n\tdisplay = \"West Midlands\",\n\tplain_categories = {\"West Midland Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"West Midlands ME\"] = \"West Midland Middle English\"\
      \naliases[\"West Midland ME\"] = \"West Midland Middle English\"\n\nlabels[\"West Midlands English\"] = {\n\tdisplay = \"West Midlands\",\n\tWikipedia = true,\n\tplain_categories = {\"West Midlands English\"},\n\tlanguage = \"en\",\n}\naliases[\"West Midlands\
      \ dialect\"] = \"West Midlands English\"\n\nlabels[\"West Saxon\"] = {\n\tWikipedia = \"West Saxon dialect\",\n\tplain_categories = { \"West Saxon Old English\" },\n\tlanguage = \"ang\",\n}\n\n--[=[\nNo category exists yet.\nlabels[\"West Palatine\"] =\
      \ {\n\tdisplay = \"Westpfälzisch\",\n\tWikipedia = \"Palatine German language\",\n\tplain_categories = {\"West Palatine German\"},\n\tlanguage = \"\",\n}\naliases[\"Westpfälzisch\"] = \"West Palatine\"\n]=]\n\nlabels[\"Western Armenian\"] = {\n\tWikipedia\
      \ = true,\n\tplain_categories = {\"Western Armenian\"},\n\tlanguage = \"hy\",\n}\n\nlabels[\"Western Catalan\"] = {\n\tWikipedia = \"Catalan dialects\",\n\tplain_categories = {\"Western Catalan\"},\n\tlanguage = \"ca\",\n}\n\nlabels[\"Western Malayo-Polynesian\"\
      ] = {\n\tWikipedia = \"Western Malayo-Polynesian languages\",\n\tplain_categories = {\"Western Proto-Malayo-Polynesian\"},\n\tlanguage = \"poz-pro\",\n}\n\nlabels[\"Western Pomeranian Low German\"] = {\n\tdisplay = \"Western Pomeranian\",\n\tplain_categories\
      \ = {\"Western Pomeranian Low German\"},\n\tlanguage = \"nds-de\",\n}\naliases[\"West Pomeranian Low German\"] = \"Western Pomeranian Low German\"\naliases[\"Western Pomeranian LG\"] = \"Western Pomeranian Low German\"\naliases[\"West Pomeranian LG\"]\
      \ = \"Western Pomeranian Low German\"\n\nlabels[\"Western Samic\"] = {\n\tplain_categories = {\"Western Proto-Samic\"},\n\tlanguage = \"smi-pro\",\n}\n\nlabels[\"Wood Frisian\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Wood Frisian\"},\n\tlanguage\
      \ = \"fy\",\n}\n\nlabels[\"Wu\"] = {\n\tdisplay = \"[[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Xiang\"] = {\n\tdisplay = \"[[Xiang]]\",\n\tplain_categories = {\"Xiang Chinese\"},\n\tlanguage = \"zh\",\n}\n\n\
      labels[\"Ye'kwana\"] = {\n\tdisplay = \"Ye'kwana dialect\",\n\tplain_categories = {\"Ye'kwana Maquiritari\"},\n\tlanguage = \"mch\",\n}\naliases[\"Ye'kwana dialect\"] = \"Ye'kwana\"\n\nlabels[\"Yerragudi\"] = {\n\tdisplay = \"Yerragudi\",\n\tplain_categories\
      \ = {\"Yerragudi Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Young\"] = {\n    display = \"[[w:Young Avestan|Young Avestan]]\",\n    language = \"ae\",\n}\naliases[\"Young Avestan\"] = \"Young\"\naliases[\"Younger\"] = \"Young\"\naliases[\"\
      Younger Avestan\"] = \"Young\"\n\nlabels[\"Zhongshan Min\"] = {\n\tdisplay = \"Zhongshan Min\",\n\tWikipedia = true,\n\tplain_categories = {\"Zhongshan Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\n--[[\tAdds a \"languages\" field containing [\"&lt;language\
      \ code&gt;\"] = true,\n\t\tif there is a \"language\" field with a non-empty value.\t\t]]\nm_functions.handle_languages(labels)\n\nreturn {\n\t[\"labels\"] = labels,\n\t[\"aliases\"] = aliases,\n\t[\"deprecated\"] = deprecated,\n}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:29.525Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Ffunctions&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44172 t=1555362389433882
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1343.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 208637575, 633687949, 687626349
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6052562\" pageid=\"6052562\" ns=\"828\" title=\"Module:labels/data/functions\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-02-26T03:03:38Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"need to declare field &quot;languages&quot; as table\" xml:space=\"preserve\">export = {}\n\nfunction export.handle_languages(labels)\n\tif type(labels) ~= \"table\" then\n\t\terror('The\
      \ function \"handle_languages\" requires a table as argument.')\n\tend\n\t\n\tfor label, data in pairs(labels) do\n\t\tif data[\"languages\"] then\n\t\t\tfor key, language in ipairs(data[\"languages\"] or {}) do\n\t\t\t\tlabels[label][\"languages\"][language]\
      \ = true\n\t\t\tend\n\t\telseif data[\"language\"] and data[\"language\"] ~= \"\" then\n\t\t\tlabels[label][\"languages\"] = {}\n\t\t\tlabels[label][\"languages\"][data[\"language\"]] = true\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:29.879Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aaccent&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55433 t=1555362389778287
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1224.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 567273934, 549549455, 683473388
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="55584" pageid="55584" ns="10" title="Template:accent"><revisions><rev user="Erutuon" timestamp="2017-04-25T20:23:34Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="renamed module" xml:space="preserve">{{#invoke:accent qualifier|show}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:30.065Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aaccent+qualifier&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50432 t=1555362389966719
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1230.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 916767770, 819575689, 697019337
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4830341\" pageid=\"4830341\" ns=\"828\" title=\"Module:accent qualifier\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-07-09T19:52:04Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"convert to using aliases table\" xml:space=\"preserve\">local export = {}\nlocal m_qualifier = require(\"Module:qualifier\")\n\nfunction export.format_qualifiers(qualifiers)\n\tlocal m_data\
      \ = mw.loadData(\"Module:accent qualifier/data\")\n\t\n\tif type(qualifiers) ~= \"table\" then\n\t\tqualifiers = { qualifiers }\n\tend\n\t\n\tlocal accents = {}\n\tlocal categories = {}\n\t\n\tfor _, accent in ipairs(qualifiers) do\n\t\tlocal data\n\t\t\
      \n\t\t-- Replace an alias with the label that has a data table.\n\t\tif m_data.aliases[accent] then\n\t\t\taccent = m_data.aliases[accent]\n\t\tend\n\t\t\n\t\t-- Retrieve the label's data table.\n\t\tif m_data.labels[accent] then\n\t\t\tdata = m_data.labels[accent]\n\
      \t\tend\n\t\t\n\t\t-- Use the link and displayed text in the data table, if they exist.\n\t\tif data then\n\t\t\tif data.link then\n\t\t\t\ttable.insert(accents, \"[[w:\" .. data.link .. \"|\" ..\n\t\t\t\t\t(data.display or data.link) .. \"]]\")\n\t\t\t\
      elseif data.display then\n\t\t\t\ttable.insert(accents, data.display)\n\t\t\tend\n\t\t\t\n\t\t\t--[[\n\t\t\tif data[accent] then\n\t\t\t\tif data[accent].type == \"sound change\" then\n\t\t\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms\
      \ with pronunciations exhibiting \" .. accent)\n\t\t\t\tend\n\t\t\tend\n\t\t\t]]\n\t\telse\n\t\t\ttable.insert(accents, accent)\n\t\tend\n\tend\n\t\n\treturn m_qualifier.format_qualifier(accents)\nend\n\n-- Called by {{accent}} or {{a}}.\nfunction export.show(frame)\n\
      \tlocal args = frame.getParent and frame:getParent().args or frame\n\t\n\tif (not args[1] or args[1] == \"\") and mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\treturn m_qualifier.format_qualifier{ '{{{1}}}' }\n\tend\n\t\n\tlocal params =\
      \ {\n\t\t[1] = {required = true, list = true}\n\t}\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\treturn export.format_qualifiers(args[1])\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:30.292Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aaccent+qualifier%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47022 t=1555362390146282
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 669179683, 820109668, 697019360
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4830339\" pageid=\"4830339\" ns=\"828\" title=\"Module:accent qualifier/data\"><revisions><rev user=\"Knyȝt\" timestamp=\"2019-04-06T17:47:51Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\n\nlocal CE = '&lt;small class=\"ce-date2\"&gt;CE&lt;/small&gt;'\nlocal BCE = '&lt;small class=\"ce-date2\"&gt;BCE&lt;/small&gt;'\n\
      \n-- A\n\nlabels[\"AAVE\"] = {\n\tlink = \"African American Vernacular English\",\n\tdisplay = \"AAVE\"\n}\n\nlabels[\"æ-tensing\"] = {\n\tlink = \"æ-tensing\",\n\ttype = \"sound change\"\n}\naliases[\"ae-tensing\"] = \"æ-tensing\"\n\nlabels[\"Anglicised\"\
      ] = {\n\tlink = \"Anglicisation#Anglicisation of non-English-language vocabulary and names\",\n\tdisplay = \"Anglicised\"\n}\naliases[\"Anglicized\"] = \"Anglicised\"\n\nlabels[\"Aran\"] = {\n\tlink = \"Aran Islands\",\n\tdisplay = \"Aran\"\n}\n\nlabels[\"\
      ar-Cairene\"] = {\n\tlink = \"Egyptian Arabic\",\n\tdisplay = \"Cairene\"\n}\naliases[\"Cairene\"] = \"ar-Cairene\"\n\nlabels[\"Arvanite\"] = {\n\tlink = \"Arvanitika\",\n\tdisplay = \"Arvanite\"\n}\n\nlabels[\"Ashkenazi Hebrew\"] = {\n\tlink = \"Ashkenazi\
      \ Hebrew\",\n\tdisplay = \"Ashkenazi Hebrew\"\n}\naliases[\"Ashkenazi\"] = \"Ashkenazi Hebrew\"\n\nlabels[\"Australia\"] = {\n\tlink = \"Australian English phonology\",\n\tdisplay = \"General Australian\"\n}\naliases[\"AU\"] = \"Australia\"\naliases[\"\
      AuE\"] = \"Australia\"\naliases[\"Aus\"] = \"Australia\"\naliases[\"AusE\"] = \"Australia\"\naliases[\"GenAus\"] = \"Australia\"\naliases[\"General Australian\"] = \"Australia\"\n\n-- B\n\nlabels[\"BE-nl\"] = {\n\tlink = \"Belgian Dutch\",\n\tdisplay =\
      \ \"Belgium\"\n}\naliases[\"BE\"] = \"BE-nl\"\n\nlabels[\"Beijing\"] = {\n\tlink = \"Beijing dialect\",\n\tdisplay = \"Beijing\"\n}\n\nlabels[\"Bosnia\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\",\n\
      \tdisplay = \"Bosnia\"\n}\naliases[\"Bosnian\"] = \"Bosnia\"\n\nlabels[\"Boston\"] = {\n\tlink = \"Boston English\",\n\tdisplay = \"Boston\"\n}\naliases[\"Bos\"] = \"Boston\"\n\nlabels[\"Brazil\"] = {\n\tlink = \"Brazilian Portuguese\",\n\tdisplay = \"\
      Brazil\"\n}\naliases[\"BP\"] = \"Brazil\"\naliases[\"BR\"] = \"Brazil\"\naliases[\"Brazilian Portuguese\"] = \"Brazil\"\n\nlabels[\"Burträsk\"] = {\n\tlink = \"Burträsk\",\n}\n\nlabels[\"Bygdeå\"] = {\n\tlink = \"Bygdeå\",\n}\n\n-- C\n\nlabels[\"Canada\"\
      ] = {\n\tlink = \"Canadian English\",\n\tdisplay = \"Canada\"\n}\naliases[\"CA\"] = \"Canada\"\naliases[\"Canadian\"] = \"Canada\"\n\nlabels[\"Canadian Shift\"] = {\n\tlink = \"Canadian Shift\",\n\tdisplay = \"Canadian Vowel Shift\",\n\ttype = \"sound\
      \ change\"\n}\naliases[\"Canadian shift\"] = \"Canadian Shift\"\naliases[\"Canadian Vowel Shift\"] = \"Canadian Shift\"\naliases[\"Canadian vowel shift\"] = \"Canadian Shift\"\n\nlabels[\"Carioca\"] = {\n\tlink = \"Carioca#Carioca Dialect\",\n\tdisplay\
      \ = \"Carioca\"\n}\naliases[\"RJ\"] = \"Carioca\"\n\nlabels[\"Castilian\"] = {\n\tlink = \"Castilian Spanish\",\n\tdisplay = \"Castilian\"\n}\naliases[\"Spain\"] = \"Castilian\"\n\nlabels[\"Central Catalan\"] = {\n\tlink = \"Central Catalan\",\n\tdisplay\
      \ = \"Central\",\n}\n\nlabels[\"central Germany\"] = {\n\tdisplay = \"central Germany\"\n}\naliases[\"central German\"] = \"central Germany\"\naliases[\"Central German\"] = \"central Germany\"\naliases[\"Central Germany\"] = \"central Germany\"\n\nlabels[\"\
      central Italy\"] = {\n\tlink = \"Central Italian\",\n\tdisplay = \"central Italy\"\n}\naliases[\"central Italian\"] = \"central Italy\"\naliases[\"Central Italian\"] = \"central Italy\"\naliases[\"Central Italy\"] = \"central Italy\"\n\nlabels[\"Central\
      \ Scotland\"] = {\n\tlink = \"Central Scots\",\n\tdisplay = \"Central Scotland\"\n}\n\nlabels[\"ceceo\"] = {\n\tlink = \"ceceo\",\n\tdisplay = \"''ceceo'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Classical\"] = {\n\tlink = \"Classical Latin\"\
      ,\n\tdisplay = \"Classical\"\n}\n\nlabels[\"Classical Sanskrit\"] = {\n\tlink = \"Sanskrit#Classical Sanskrit\",\n\tdisplay = \"Classical\"\n}\n\nlabels[\"Cois Fharraige\"] = {\n   link = \"Gaeltacht Cois Fharraige\",\n   display = \"Cois Fharraige\"\n\
      }\naliases[\"CF\"] = \"Cois Fharraige\"\n\nlabels[\"Connacht\"] = {\n\tlink = \"Connacht Irish\",\n\tdisplay = \"Connacht\"\n}\n\nlabels[\"Cork\"] = {\n\tlink = \"Gaeltacht#Cork Gaeltacht\",\n\tdisplay = \"Cork\"\n}\n\nlabels[\"cot-caught\"] = {\n\tlink\
      \ = \"Cot–caught merger\",\n\tdisplay = \"''cot''–''caught'' merger\",\n\ttype = \"sound change\"\n}\naliases[\"caught-cot\"] = \"cot-caught\"\n\nlabels[\"Croatia\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\"\
      ,\n\tdisplay = \"Croatia\"\n}\naliases[\"Croatian\"] = \"Croatia\"\n\nlabels[\"cure-force\"] = {\n\tlink = \"w:Cure–force merger\",\n\tdisplay = \"''cure''–''force'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"cy-N\"] = {\n\tlink = \"Welsh language#Dialects\"\
      ,\n\tdisplay = \"North Wales\"\n}\naliases[\"cy-g\"] = \"cy-N\"\n\nlabels[\"cy-S\"] = {\n\tlink = \"Welsh language#Dialects\",\n\tdisplay = \"South Wales\"\n}\naliases[\"cy-h\"] = \"cy-S\"\n\n-- D\n\nlabels[\"Dari\"] = {\n\tlink = \"Dari Persian\",\n\t\
      display = \"Dari\"\n}\n\nlabels[\"Delhi\"] = {\n    display = \"Delhi Hindi\"\n}\n\nlabels[\"distinción\"] = {\n\tlink = \"distinción\",\n\tdisplay = \"''z''-''s'' distinction\",\n\ttype = \"sound change\"\n}\naliases[\"distincion\"] = \"distinción\"\n\
      \n\n-- E\n\nlabels[\"Ecclesiastical\"] = {\n\tlink = \"Ecclesiastical Latin\",\n\tdisplay = \"Ecclesiastical\"\n}\n\nlabels[\"Egyptological\"] = {\n\tlink = \"Egyptian language#Egyptological pronunciation\",\n\tdisplay = \"modern Egyptological\"\n}\naliases[\"\
      modern Egyptological\"] = \"Egyptological\"\n\nlabels[\"Estuary English\"] = {\n\tlink = \"Estuary English\"\n}\n\n-- F\n\nlabels[\"father-bother\"] = {\n\tlink = \"Father–bother merger\",\n\tdisplay = \"''father''-''bother'' merger\",\n\ttype = \"sound\
      \ change\"\n}\n\nlabels[\"FS\"] = {\n\tlink = \"Standard French\",\n\tdisplay = \"FS\"\n}\n\nlabels[\"FV\"] = {\n\tlink = \"French Flemish\",\n\tdisplay = \"French Flanders\"\n}\n\n-- G\n\nlabels[\"GenAm\"] = {\n\tlink = \"General American\"\n}\naliases[\"\
      GA\"] = \"GenAm\"\naliases[\"General American\"] = \"GenAm\"\n\nlabels[\"Geordie\"] = {\n\tlink = \"Geordie\"\n}\n\nlabels[\"Gheg\"] = {\n\tlink = \"Gheg Albanian\",\n\tdisplay = \"Gheg\"\n}\n\nlabels[\"Givi\"] = {\n\tlink = \"Giv, South Khorasan\",\n\t\
      display = \"Givi\"\n}\n\nlabels[\"Glenties\"] = {\n\tlink = \"Glenties\",\n\tdisplay = \"The Glenties\"\n}\n\nlabels[\"grc-byz1\"] = {\n\tlink = \"Medieval Greek\",\n\tdisplay = '10&lt;sup&gt;th&lt;/sup&gt; ' .. CE .. ' Byzantine'\n}\n\nlabels[\"grc-byz2\"\
      ] = {\n\tlink = \"Medieval Greek\",\n\tdisplay = '15&lt;sup&gt;th&lt;/sup&gt; ' .. CE .. ' Constantinopolitan'\n}\n\nlabels[\"grc-cla\"] = {\n\tlink = \"Ancient Greek phonology\",\n\tdisplay = '5&lt;sup&gt;th&lt;/sup&gt; ' .. BCE .. ' Attic'\n}\n\nlabels[\"\
      grc-koi1\"] = {\n\tlink = \"Koine Greek phonology\",\n\tdisplay = '1&lt;sup&gt;st&lt;/sup&gt; ' .. CE .. ' Egyptian'\n}\n\nlabels[\"grc-koi2\"] = {\n\tlink = \"Koine Greek phonology\",\n\tdisplay = '4&lt;sup&gt;th&lt;/sup&gt; ' .. CE .. ' Koine'\n}\n\n\
      -- H\n\nlabels[\"hbo\"] = {\n\tlink = \"Biblical Hebrew#Phonology\",\n\tdisplay = \"Biblical Hebrew\"\n}\naliases[\"Biblical Hebrew\"] = \"hbo\"\n\nlabels[\"Hong Kong\"] = {\n\tlink = \"Hong Kong English\",\n\tdisplay = \"Hong Kong\"\n}\naliases[\"HK\"\
      ] = \"Hong Kong\"\n\nlabels[\"horse-hoarse\"] = {\n    link = \"horse–hoarse merger\",\n    display = \"without the ''horse''–''hoarse'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Hössjö\"] = {\n\tlink = \"sv:Hössjö\",\n}\n\nlabels[\"hy-E\"] =\
      \ {\n\tlink = \"Eastern Armenian language\",\n\tdisplay = \"Eastern Armenian\"\n}\n\nlabels[\"hy-IR\"] = {\n\tlink = \"Armenian Iranians#Culture and language\",\n\tdisplay = \"Eastern Armenian - Iran\"\n}\n\nlabels[\"hy-W\"] = {\n\tlink = \"Western Armenian\
      \ language\",\n\tdisplay = \"Western Armenian\"\n}\n\nlabels[\"hy-Y\"] = {\n\tlink = \"Yerevan\",\n\tdisplay = \"Eastern Armenian - Yerevan\"\n}\n\n-- I\n\nlabels[\"IL\"] = {\n\tlink = \"Modern Hebrew phonology\",\n\tdisplay = \"Modern Israeli Hebrew\"\
      \n}\naliases[\"Israeli Hebrew\"] = \"IL\"\naliases[\"Modern Hebrew\"] = \"IL\"\naliases[\"Modern Israeli\"] = \"IL\"\naliases[\"Modern Israeli Hebrew\"] = \"IL\"\naliases[\"Modern/Israeli Hebrew\"] = \"IL\"\n\nlabels[\"InE\"] = {\n\tlink = \"Indian English\"\
      ,\n\tdisplay = \"Indian English\"\n}\n\nlabels[\"IR\"] = {\n\tlink = \"Western Persian\",\n\tdisplay = \"Iranian Persian\"\n}\n\nlabels[\"Ireland\"] = {\n\tlink = \"Hiberno-English\",\n\tdisplay = \"Ireland\"\n}\naliases[\"HE\"] = \"Ireland\"\naliases[\"\
      IE\"] = \"Ireland\"\n\nlabels[\"Italian Hebrew\"] = {\n\tlink = \"Italian Hebrew\",\n\tdisplay = \"Italian Hebrew\"\n}\n\n-- J\n\nlabels[\"Johor-Selangor\"] = {\n\tlink = \"Malayan languages\",\n\tdisplay = \"Johor-Selangor\"\n}\n\n-- K\n\nlabels[\"Kabul,\
      \ Peshawar\"] = {\n\tlink = \"Pashto dialects\",\n\tdisplay = \"Kabul, Peshawar\"\n}\n\nlabels[\"Kalix\"] = {\n\tlink = \"Kalix\",\n}\n\nlabels[\"Kandahar\"] = {\n\tlink = \"Kandahari Pashto\",\n\tdisplay = \"Kandahar\"\n}\naliases[\"ps-Kandahar\"] = \"\
      Kandahar\"\n\nlabels[\"Kerry\"] = {\n\tlink = \"Gaeltacht#Kerry Gaeltacht\",\n\tdisplay = \"Kerry\"\n}\n\nlabels[\"xme-ham\"] = {\n\tdisplay = \"Hamadani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-mah\"] = {\n\tdisplay = \"Mahallati\",\n\t\
      link = \"Kermanic languages\",\n}\n\nlabels[\"xme-von\"] = {\n\tdisplay = \"Vonishuni\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-del\"] = {\n\tdisplay = \"Delijani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-kas\"] = {\n\tdisplay\
      \ = \"Kashani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-kes\"] = {\n\tdisplay = \"Kese'i\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-mey\"] = {\n\tdisplay = \"Meyme'i\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-abz\"\
      ] = {\n\tdisplay = \"Abuzeydabadi\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-aby\"] = {\n\tdisplay = \"Abyanehi\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-far\"] = {\n\tdisplay = \"Farizandi\",\n\tlink = \"Kermanic languages\"\
      ,\n}\n\nlabels[\"xme-jow\"] = {\n\tdisplay = \"Jowshaqani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-qoh\"] = {\n\tdisplay = \"Qohrudi\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-yar\"] = {\n\tdisplay = \"Yarandi\",\n\tlink = \"\
      Kermanic languages\",\n}\n\nlabels[\"xme-tar\"] = {\n\tdisplay = \"Tari\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-sed\"] = {\n\tdisplay = \"Sedehi\",\n\tlink = \"Kermanic languages\",\n}\n\n\nlabels[\"xme-ard\"] = {\n\tdisplay = \"Ardestani\"\
      ,\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-zef\"] = {\n\tdisplay = \"Zefre'i\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-isf\"] = {\n\tdisplay = \"Isfahani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-kaf\"] = {\n\tdisplay\
      \ = \"Kafroni\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-var\"] = {\n\tdisplay = \"Varzenei\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-nay\"] = {\n\tdisplay = \"Nayini\",\n\tlink = \"Nayini language\",\n}\n\nlabels[\"xme-vaf\"\
      ] = {\n\tdisplay = \"Vafsi\",\n\tlink = \"Vafsi dialect\",\n}\n\nlabels[\"xme-ast\"] = {\n\tdisplay = \"Ashtiani language\",\n\tlink = \"nyq\",\n}\n\nlabels[\"xme-xun\"] = {\n\tdisplay = \"Khunsari\",\n\tlink = \"Khunsari language\",\n}\n\nlabels[\"xme-nat\"\
      ] = {\n\tdisplay = \"Natanzi\",\n\tlink = \"Natanzi language\",\n}\n\nlabels[\"xme-soi\"] = {\n\tdisplay = \"Soi\",\n\tlink = \"Soi language\",\n}\n\nlabels[\"xme-gaz\"] = {\n\tdisplay = \"Gazi\",\n\tlink = \"Gazi language\",\n}\n\nlabels[\"xme-ana\"]\
      \ = {\n\tdisplay = \"Anaraki\",\n\tlink = \"Nayini language\",\n}\n\nlabels[\"xme-ker\"] = {\n\tdisplay = \"Kermani\",\n\tlink = \"Zoroastrian Dari language\",\n}\n\nlabels[\"xme-yaz\"] = {\n\tdisplay = \"Yazdi\",\n\tlink = \"Zoroastrian Dari language\"\
      ,\n}\n\n-- L\n\nlabels[\"LAm\"] = {\n\tlink = \"Spanish language in the Americas\",\n\tdisplay = \"Latin American\"\n}\n\nlabels[\"Late Egyptian\"] = {\n\tlink = \"Late Egyptian language\",\n\tdisplay = \"reconstructed Late Egyptian\"\n}\n\nlabels[\"Latinate\"\
      ] = {\n\tlink = \"Latin#Phonology\",\n\tdisplay = \"Latinate\"\n}\n\nlabels[\"lleísmo\"] = {\n\tlink = \"Yeísmo\",\n\tdisplay = \"''ll''-''y'' distinction\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Lövånger\"] = {\n\tlink = \"Lövånger\",\n}\n\nlabels[\"\
      Luleå\"] = {\n\tlink = \"Luleå\",\n}\n\n-- M\n\nlabels[\"Mary-marry-merry\"] = {\n\tlink = \"Mary–marry–merry merger\",\n\tdisplay = \"''Mary''–''marry''–''merry'' merger\",\n\ttype = \"sound change\"\n}\naliases[\"Mmmm\"] = \"Mary-marry-merry\"\n\nlabels[\"\
      Mayo\"] = {\n\tlink = \"Gaeltacht Iorrais agus Acaill\",\n\tdisplay = \"Mayo\"\n}\n\nlabels[\"Medio-Late Egyptian\"] = {\n\tlink = \"Late Egyptian language\",\n\tdisplay = \"reconstructed Medio-Late Egyptian\"\n}\n\nlabels[\"Middle Egyptian\"] = {\n\t\
      link = \"Egyptian language#Middle Egyptian\",\n\tdisplay = \"reconstructed Middle Egyptian\"\n}\n\nlabels[\"Midwestern US\"] = {\n\tlink = \"Midwestern United States#Linguistic characteristics\",\n\tdisplay = \"Midwestern US\"\n}\naliases[\"Midwest US\"\
      ] = \"Midwestern US\"\naliases[\"Midwest US English\"] = \"Midwestern US\"\naliases[\"Midwestern US English\"] = \"Midwestern US\"\n\nlabels[\"Mizrahi Hebrew\"] = {\n\tlink = \"Mizrahi Hebrew\",\n\tdisplay = \"Mizrahi Hebrew\"\n}\naliases[\"Mizrahi\"]\
      \ = \"Mizrahi Hebrew\"\naliases[\"Mizrakhi\"] = \"Mizrahi Hebrew\"\naliases[\"Mizrachi\"] = \"Mizrahi Hebrew\"\naliases[\"Mizrakhi Hebrew\"] = \"Mizrahi Hebrew\"\naliases[\"Mizrachi Hebrew\"] = \"Mizrahi Hebrew\"\n\nlabels[\"MLE\"] = {\n\tlink = \"Multicultural\
      \ London English\",\n\tdisplay = \"MLE\"\n}\n\nlabels[\"Montenegro\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\",\n\tdisplay = \"Montenegro\"\n}\naliases[\"Montenegrin\"] = \"Montenegro\"\n\nlabels[\"\
      Munster\"] = {\n\tlink = \"Munster Irish\",\n\tdisplay = \"Munster\"\n}\n\n-- N\n\nlabels[\"Netherlands\"] = {\n\tlink = \"Dutch phonology\",\n\tdisplay = \"Netherlands\"\n}\naliases[\"NL\"] = \"Netherlands\"\n\nlabels[\"New Latin\"] = {\n\tlink = \"New\
      \ Latin\"\n}\n\nlabels[\"New York\"] = {\n\tlink = \"New York dialect#Linguistic features\",\n\tdisplay = \"NYC\"\n}\naliases[\"NY\"] = \"New York\"\naliases[\"NYC\"] = \"New York\"\n\nlabels[\"New Zealand\"] = {\n\tlink = \"New Zealand English phonology\"\
      ,\n\tdisplay = \"General New Zealand\"\n}\naliases[\"NZ\"] = \"New Zealand\"\naliases[\"GNZ\"] = \"New Zealand\"\naliases[\"General New Zealand\"] = \"New Zealand\"\n\nlabels[\"non-Mary-marry-merry\"] = {\n\tlink = \"Mary–marry–merry merger\",\n\tdisplay\
      \ = \"''Mary''–''marry''–''merry'' distinction\",\n\ttype = \"sound change\"\n}\naliases[\"nMmmm\"] = \"non-Mary-marry-merry\"\n\nlabels[\"non-rhotic\"] = {\n\tlink = \"Rhoticity in English\",\n\tdisplay = \"non-rhotic\"\n}\naliases[\"nonrhotic\"] = \"\
      non-rhotic\"\n\nlabels[\"non-weak vowel\"] = {\n\tlink = \"Weak vowel merger\",\n\tdisplay = \"weak vowel distinction\",\n\ttype = \"sound change\"\n}\n\nlabels[\"northern and central Germany\"] = {\n\tdisplay = \"northern Germany, central Germany\"\n\
      }\naliases[\"north and central German\"] = \"northern and central Germany\"\naliases[\"North and Central German\"] = \"northern and central Germany\"\naliases[\"north and central Germany\"] = \"northern and central Germany\"\naliases[\"North and Central\
      \ Germany\"] = \"northern and central Germany\"\naliases[\"northern and central German\"] = \"northern and central Germany\"\naliases[\"Northern and Central German\"] = \"northern and central Germany\"\naliases[\"Northern and Central Germany\"] = \"northern\
      \ and central Germany\"\n\nlabels[\"Northern England\"] = {\n\tlink = \"English language in Northern England\",\n\tdisplay = \"Northern England\"\n}\naliases[\"North England\"] = \"Northern England\"\n\nlabels[\"northern Germany\"] = {\n\tdisplay = \"\
      northern Germany\"\n}\naliases[\"north German\"] = \"northern Germany\"\naliases[\"North German\"] = \"northern Germany\"\naliases[\"north Germany\"] = \"northern Germany\"\naliases[\"North Germany\"] = \"northern Germany\"\naliases[\"northern German\"\
      ] = \"northern Germany\"\naliases[\"Northern German\"] = \"northern Germany\"\naliases[\"Northern Germany\"] = \"northern Germany\"\n\nlabels[\"Northern Scotland\"] = {\n\tlink = \"Northern Scots\",\n\tdisplay = \"Northern Scotland\"\n}\n\n-- O\n\nlabels[\"\
      Old Egyptian\"] = {\n\tlink = \"Egyptian language#Old Egyptian\",\n\tdisplay = \"reconstructed Old Egyptian\"\n}\n\nlabels[\"Osaka\"] = {\n\tlink = \"Kansai dialect\",\n\tdisplay = \"Osaka\"\n}\n\n-- P\n\nlabels[\"Palestinian Hebrew\"] = {\n\tlink = \"\
      Palestinian vocalization\",\n\tdisplay = \"Palestinian Hebrew\"\n}\n\nlabels[\"pin-pen\"] = {\n\tlink = \"pin–pen merger\",\n\tdisplay = \"''pin''–''pen'' merger\",\n\ttype = \"sound change\"\n}\naliases[\"pen-pin\"] = \"pin-pen\"\n\nlabels[\"Philippine\"\
      ] = {\n\tlink = \"Philippine English\",\n\tdisplay = \"Philippine\"\n}\naliases[\"Philippines\"] = \"Philippine\"\n\nlabels[\"Portugal\"] = {\n\tlink = \"European Portuguese\",\n\tdisplay = \"Portugal\"\n}\naliases[\"EP\"] = \"Portugal\"\naliases[\"PT\"\
      ] = \"Portugal\"\n\nlabels[\"ps-Kabul\"] = {\n\tlink = \"Pashto dialects\",\n\tdisplay = \"Kabuli\"\n}\n\n-- Q\n\nlabels[\"Quanzhou\"] = {\n\tlink = \"Quanzhou\"\n}\n\nlabels[\"Quetta\"] = {\n\tlink = \"Pashto dialects\",\n\tdisplay = \"Quetta\"\n}\n\n\
      -- R\n\nlabels[\"r-dissimilation\"] = {\n\tlink = \"Dissimilation\",\n\tdisplay = \"''r''-dissimilation\",\n\ttype = \"sound change\"\n}\n\nlabels[\"rhotic\"] = {\n\tlink = \"Rhotic and non-rhotic accents\",\n\tdisplay = \"rhotic\",\n\ttype = \"sound change\"\
      \n}\n\nlabels[\"Riau-Lingga\"] = {\n\tlink = \"Riau-Lingga Sultanate\",\n\tdisplay = \"Riau-Lingga\"\n}\n\nlabels[\"Rioplatense\"] = {\n\tlink = \"Rioplatense Spanish\",\n\tdisplay = \"Rioplatense\"\n}\n\nlabels[\"RP\"] = {\n\tlink = \"Received Pronunciation\"\
      \n}\naliases[\"Received Pronunciation\"] = \"RP\"\n\n-- S\n\nlabels[\"São Paulo\"] = {\n\tlink = \"Brazilian Portuguese\",\n\tdisplay = \"São Paulo\"\n}\n\nlabels[\"Scotland\"] = {\n\tlink = \"Scottish English\",\n\tdisplay = \"Scotland\"\n}\n\nlabels[\"\
      Sephardi Hebrew\"] = {\n\tlink = \"Sephardi Hebrew\",\n\tdisplay = \"Sephardi Hebrew\"\n}\naliases[\"Sephardi\"] = \"Sephardi Hebrew\"\n\nlabels[\"Serbia\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\"\
      ,\n\tdisplay = \"Serbia\"\n}\naliases[\"Serbian\"] = \"Serbia\"\n\nlabels[\"seseo\"] = {\n\tlink = \"seseo\",\n\tdisplay = \"''seseo'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Sistani\"] = {\n\tlink = \"Sistani dialect\",\n\tdisplay = \"Sistani\"\
      \n}\n\nlabels[\"Skellefteå\"] = {\n\tlink = \"Skellefteå\"\n}\n\nlabels[\"South Africa\"] = {\n\tlink = \"South African English phonology\",\n\tdisplay = \"General South African\"\n}\naliases[\"SAE\"] = \"South Africa\"\naliases[\"GSAE\"] = \"South Africa\"\
      \naliases[\"GenSAE\"] = \"South Africa\"\naliases[\"General South African\"] = \"South Africa\"\n\nlabels[\"Southern American English\"] = {\n\tlink = \"Southern American English\"\n}\naliases[\"Southern US\"] = \"Southern American English\"\naliases[\"\
      Southern US English\"] = \"Southern American English\"\naliases[\"Southern U.S. English\"] = \"Southern American English\"\n\nlabels[\"South Brazil\"] = {\n\tlink = \"Brazilian Portuguese\",\n\tdisplay = \"South Brazil\"\n}\n\nlabels[\"southern Germany\"\
      ] = {\n\tdisplay = \"southern Germany\"\n}\naliases[\"south German\"] = \"southern Germany\"\naliases[\"South German\"] = \"southern Germany\"\naliases[\"south Germany\"] = \"southern Germany\"\naliases[\"South Germany\"] = \"southern Germany\"\naliases[\"\
      southern German\"] = \"southern Germany\"\naliases[\"Southern German\"] = \"southern Germany\"\naliases[\"Southern Germany\"] = \"southern Germany\"\n\nlabels[\"Southern Scotland\"] = {\n\tlink = \"Southern Scots\",\n\tdisplay = \"Southern Scotland\"\n\
      }\naliases[\"Southern Scots\"] = \"Southern Scotland\"\n\nlabels[\"St. Louis\"] = {\n\tlink = \"North American regional phonology#St. Louis and vicinity\",\n\tdisplay = \"St. Louis (Missouri)\"\n}\naliases[\"STL\"] = \"St. Louis\"\n\nlabels[\"standard\"\
      ] = {\n\tdisplay = \"standard\"\n}\naliases[\"Standard\"] = \"standard\"\n\nlabels[\"Standard Zhuang\"] = {\n\tlink = \"Standard Zhuang\",\n\tdisplay = \"Standard Zhuang\"\n}\n\nlabels[\"Swedish\"] = {\n\tlink = \"Swedish pronunciation\",\n\tdisplay =\
      \ \"Swedish\"\n}\n\nlabels[\"Syrian Hebrew\"] = {\n\tlink = \"Syrian Jews#Pronunciation of Hebrew\",\n\tdisplay = \"Syrian Hebrew\"\n}\n\n-- T\n\nlabels[\"t-glottalization\"] = {\n   link = \"T-glottalization\",\n   display = \"''t''-glottalization\",\n\
      \ttype = \"sound change\"\n}\naliases[\"t-glottaling\"] = \"t-glottalization\"\n\nlabels[\"Tajik\"] = {\n\tlink = \"Tajik language\",\n\tdisplay = \"Tajik\"\n}\naliases[\"Tajiki\"] = \"Tajik\"\n\nlabels[\"Tehrani\"] = {\n\tlink = \"Tehrani accent\",\n\t\
      display = \"Tehrani\"\n}\n\nlabels[\"Tiberian Hebrew\"] = {\n\tlink = \"Tiberian Hebrew\",\n\tdisplay = \"Tiberian Hebrew\"\n}\naliases[\"Tiberian\"] = \"Tiberian Hebrew\"\n\nlabels[\"Tosk\"] = {\n\tlink = \"Tosk Albanian\",\n\tdisplay = \"Tosk\"\n}\n\n\
      -- U\n\nlabels[\"UK\"] = {\n\tlink = \"British English\",\n\tdisplay = \"UK\"\n}\naliases[\"British\"] = \"UK\"\naliases[\"U.K.\"] = \"UK\"\n\nlabels[\"Ulaanbaatar\"] = {\n\tlink = \"Ulaanbaatar\"\n}\naliases[\"UlaanBaatar\"] = \"Ulaanbaatar\"\n\nlabels[\"\
      Ulster\"] = {\n\tlink = \"Ulster Irish\",\n\tdisplay = \"Ulster\"\n}\naliases[\"Donegal\"] = \"Ulster\"\n\nlabels[\"Umeå\"] = {\n\tlink = \"Umeå\",\n}\n\nlabels[\"US\"] = {\n\tlink = \"American English\",\n\tdisplay = \"US\"\n}\naliases[\"U.S.\"] = \"\
      US\"\n\n-- V\n\nlabels[\"Valencia\"] = {\n\tlink = \"Valencian\"\n}\naliases[\"Valencian\"] = \"Valencia\"\n\nlabels[\"Vedic Sanskrit\"] = {\n\tlink = \"Vedic Sanskrit\",\n\tdisplay = \"Vedic\"\n}\naliases[\"Vedic\"] = \"Vedic Sanskrit\"\naliases[\"Rigvedic\"\
      ] = \"Vedic Sanskrit\"\n\nlabels[\"Vulgar\"] = {\n\tlink = \"Vulgar Latin\",\n\tdisplay = \"Vulgar\"\n}\n\n-- W\n\nlabels[\"Wales\"] = {\n\tlink = \"Welsh English\",\n\tdisplay = \"Wales\"\n}\naliases[\"Welsh\"] = \"Wales\"\n\nlabels[\"Wardak\"] = {\n\t\
      link = \"Pashto dialects\",\n\tdisplay = \"Wardak\"\n}\n\nlabels[\"Waterford\"] = {\n\tlink = \"Gaeltacht na nDéise\",\n\tdisplay = \"Waterford\"\n}\n\nlabels[\"Wazirwola\"] = {\n\tlink = \"Wazirwola dialect\",\n\tdisplay = \"Wazirwola\"\n}\n\nlabels[\"\
      weak vowel\"] = {\n\tlink = \"Weak vowel merger\",\n\tdisplay = \"weak vowel merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"wine/whine\"] = {\n    link = \"wine–whine merger\",\n    display = \"without the ''wine''–''whine'' merger\",\n    type =\
      \ \"sound change\"\n}\n\n-- X\n\nlabels[\"Xiamen\"] = {\n\tlink = \"Xiamen\"\n}\n\n-- Y\n\nlabels[\"yeísmo\"] = {\n\tlink = \"Yeísmo\",\n\tdisplay = \"''ll''-''y'' neutralization\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Yemenite Hebrew\"] = {\n\tlink\
      \ = \"Yemenite Hebrew\",\n\tdisplay = \"Yemenite Hebrew\"\n}\n\nlabels[\"YIVO\"] = {\n\tlink = \"YIVO\"\n}\n\nlabels[\"yod-coalescence\"] = {\n\tlink = \"yod-coalescence\",\n\tdisplay = \"yod-coalescence\",\n\ttype = \"sound change\"\n}\n\n-- Z\n\nlabels[\"\
      Zhangzhou\"] = {\n\tlink = \"Zhangzhou\"\n}\n\nreturn { labels = labels, aliases = aliases }</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:31.213Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Fdata%2Fsymbols&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41149 t=1555362391095288
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 205626617, 817949806, 681209377
    body: !!binary |-
      
- recorded: 2019-04-15T21:06:31.408Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Ftracking&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54666 t=1555362391303354
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 607617366, 554325801, 697673563
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6315460\" pageid=\"6315460\" ns=\"828\" title=\"Module:IPA/tracking\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-11-21T19:51:11Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"fixing module error in [[pianoforte]]\" xml:space=\"preserve\">local export = {}\n\n--[[\n\tsymb is what is tracked. It can be a literal symbol or a Lua pattern.\n\tIf it is a table, tracking\
      \ is added for any of the symbols in the list.\n\t\n\tcat is the subtemplate that is added to the default path \"IPA/\" + language code + \"/\".\n]]\n\nlocal U = mw.ustring.char\n\nlocal syllabic = U(0x329)\n\nexport.tracking = {\n\ten = {\n\t\t{\n\t\t\
      \tsymb = \"iə\",\n\t\t\tcat = \"ambig\",\n\t\t},\n\t\t{\n\t\t\tsymb = { \"ɪi\", \"ʊu\", \"ɪj\", \"ʊw\" },\n\t\t\tcat = \"eeoo\",\n\t\t},\n\t\t{\n\t\t\tsymb = { \"r\" },\n\t\t\tcat = \"plain r\",\n\t\t},\n\t},\n\tcs = {\n\t\t{\n\t\t\tsymb = \"[mnrl]\" ..\
      \ syllabic,\n\t\t\tcat = \"syllabic-consonant\",\n\t\t},\n\t},\n\tps = {\n\t\t{\n\t\t\tsymb = \"ɤ\",\n\t\t\tcat = \"Pashto\",\n\t\t},\n\t},\n\tfa = {\n\t\t{\n\t\t\tsymb = \"ʔ\",\n\t\t\tcat = \"glottal-stop\",\n\t\t},\n\t},\n\t{\n\t\t{\n\t\t\tsymb = \"\"\
      ,\n\t\t\tcat = \"\",\n\t\t},\n\t},\n}\n\nfunction export.run_tracking(IPA, lang)\n\tif not IPA or IPA == \"\" then\n\t\treturn nil\n\tend\n\t\n\tlang = lang:getCode()\n\t\n\tif not export.tracking[lang] or type(export.tracking[lang]) ~= \"table\" then\n\
      \t\treturn nil\n\tend\n\t\n\tfor i, arguments in ipairs(export.tracking[lang]) do\n\t\tif type(arguments) == \"table\" then\n\t\t\tlocal required = { \"symb\", \"cat\" }\n\t\t\t\n\t\t\thasArgs = true\n\t\t\t\n\t\t\tfor i, arg in pairs(required) do\n\t\t\
      \t\tif not arguments[arg] or arguments[arg] == \"\" then\n\t\t\t\t\thasArgs = false\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif hasArgs == true then\n\t\t\t\tlocal symbols = arguments.symb\n\t\t\t\tlocal category = arguments.cat\n\t\t\t\t\n\t\t\t\tif type(symbols)\
      \ == \"string\" then\n\t\t\t\t\tsymbols = { symbols }\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tfor _, symbol in pairs(symbols) do\n\t\t\t\t\tif type(symbol) ~= \"string\" then\n\t\t\t\t\t\treturn nil\n\t\t\t\t\tend\n\t\t\t\t\tif mw.ustring.find(IPA, symbol) then\n\
      \t\t\t\t\t\trequire(\"Module:debug\").track(\"IPA/\" .. lang .. \"/\" .. category)\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:31.592Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Asyllables&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47007 t=1555362391491126
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1224.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 509806620, 494547146, 695776537
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5882110\" pageid=\"5882110\" ns=\"828\" title=\"Module:syllables\"><revisions><rev user=\"Hazarasp\" timestamp=\"2018-08-21T12:20:37Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal vowels = mw.loadData(\"Module:IPA/data/symbols\").vowels .. \"ᵻ\" .. \"ᵿ\"\n\nlocal U = mw.ustring.char\n\n--[[\nAdd diphthongs to\
      \ the list if they do not contain semivowel symbols: /j w ɰ ɥ/.\nDo not include non-syllabic diacritics: /au/, not /au̯/.\nThe module automatically does not count vowels with non-syllabic diacritics.\n]]--\nlocal diphthongs = {\n\t[\"de\"] = {\n\t\t\"\
      a[ɪʊ]\",\n\t\t\"ɔ[ʏɪ]\",\n\t\t},\n\t[\"ca\"] = {\t-- Catalan has diphthongs, but they are generally transcribed using\n\t\t\t\t-- /w/ and /j/, so do not need to be listed (see [[w:Catalan language#Diphthongs and triphthongs]].\n\t\t},\n\t[\"cs\"] = { --\
      \ [[w:Czech phonology#Diphthongs]]\n\t\t\"[aeo]u\",\n\t\t},\n\t[\"en\"] = { -- from [[Appendix:English pronunciation]] mostly, but /ʌɪ/ is from the OED\n\t\t\"[aɑeɛoɔʌ][ɪi]\",\n\t\t\"[ɑɒæo]e\",\n\t\t\"[əɐ]ʉ\",\n\t\t\"[aɒəoɔʌ]ʊ\",\n\t\t\"æo\",\n\t\t\"[ɛ\
      eɪiɔʊʉ]ə\",\t-- /iə/ is a diphthong in NZE, but a disyllabic sequence in GA.\n\t\t\t\t\t\t-- /ɪə/ is both a disyllabic sequence and a diphthong in old-fashioned RP.\n\t\t\"[aʌ][ʊɪ]ə\",\t-- May be a disyllabic sequence in some or all dialects?\n\t\t},\n\
      \t[\"fi\"] = {\t\t\t-- [[w:Finnish phonology#Diphthongs]]\n\t\t\"[ɑeouyæø]i\",\n\t\t\"[ɑoei]u\",\n\t\t\"[eiæø]y\",\n\t\t\"uo\",\n\t\t\"ie\",\n\t\t\"yø\",\n\t\t},\n\t[\"fr\"] = {\t\t\t-- French has diphthongs, but they are transcribed\n\t\t},\t\t\t\t--\
      \ with semivowel symbols: [[w:French phonology#Glides and diphthongs]].\n\t[\"grc\"] = {\n\t\t\"[aeyo]i\",\n\t\t\"[ae]u\",\n\t\t\"[ɛɔa]ː[iu]\",\n\t\t},\n\t[\"is\"] = {\t\t\t-- [[w:Icelandic phonology#Vowels]]\n\t\t\"[aeø][iɪy]\",\t-- Wikipedia is oddly\
      \ specific about the second element: ei and ai, but øɪ.\n\t\t\"[ao]u\",\n\t\t},\n\t[\"it\"] = {\n\t\t\"[aeɛoɔu]i\",\n\t\t\"[aeɛioɔ]u\",\n\t\t},\n\t[\"la\"] = {\n\t\t\"[eaou]i\",\n\t\t\"[eao]u\",\n\t\t\"[ao]e\",\n\t\t},\n\t[\"lb\"] = {\n\t\t\"[iu]ə\",\n\
      \t\t\"[ɜoæɑ]ɪ\",\n\t\t\"[əæɑ]ʊ\",\n\t},\n\t[\"sl\"] = {\t\t\t-- No diphthongs, properly speaking; sequences of a vowel, /j/ and /w/ though\n\t},\n\t[\"sk\"] = {\t\t\t-- Slovak has rising diphthongs, /i̯e, i̯a, i̯u, u̯o/, which are probably always spelled\
      \ with the nonsyllabic diacritic, so do not need to be listed.\n\t},\n\t[\"ru\"] = {\t\t\t-- No diphthongs, properly speaking; sequences of a vowel and /j/ though.\n\t},\n\t[\"sq\"] = {\t\t\t-- [[w:Albanian language#Vowels]] doesn't mention anything about\
      \ diphthongs.\n\t},\n\t[\"ug\"] = {\t\t\t-- No diphthongs.\n\t},\n}\n\n--[[ No use for this at the moment, though it is an interesting catalogue.\n\tIt might be usable for phonetic transcriptions.\n\tDiacritics added to vowels:\n\tinverted breve above,\
      \ inverted breve below,\n\tup tack, down tack,\n\tleft tack, right tack,\n\tdiaeresis (above), diaeresis below,\n\tright half ring, left half ring,\n\tplus sign below, minus sign below,\n\tcombining x above, rhotic hook,\n\ttilde (above), tilde below\n\
      \tligature tie (combining double breve), ligature tie below\n\t]]\nlocal diacritics = U(0x311)..U(0x32F)\n\t..U(0x31D)..U(0x31E)\n\t..U(0x318)..U(0x319)\n\t..U(0x308)..U(0x324)\n\t..U(0x339)..U(0x31C)\n\t..U(0x31F)..U(0x320)\n\t..U(0x33D)..U(0x2DE)\n\t\
      ..U(0x303)..U(0x330)\n\t..U(0x361)..U(0x35C)\n\n--[[\ncombining acute and grave tone marks, circumflex\n]]--\nlocal tone = \"[\" .. U(0x341) .. U(0x340) ..U (0x302) .. \"]\"\nlocal nonsyllabicDiacritics = U(0x311) .. U(0x32F)\nlocal syllabicDiacritics\
      \ = U(0x0329) .. U(0x030D)\nlocal ties = U(0x361) .. U(0x35C)\n\n-- long, half-long, extra short\nlocal lengthDiacritics = U(0x2D0) .. U(0x2D1) .. U(0x306)\nlocal vowel = \"[\" .. vowels .. \"]\" .. tone .. \"?\"\nlocal tie = \"[\" .. ties .. \"]\"\nlocal\
      \ nonsyllabicDiacritic = \"[\" .. nonsyllabicDiacritics .. \"]\"\nlocal syllabicDiacritic = \"[\" .. syllabicDiacritics .. \"]\"\n\nlocal UTF8Char = \"[\\1-\\127\\194-\\244][\\128-\\191]*\"\n\n\nfunction export.getVowels(remainder, lang)\n\tif string.find(remainder,\
      \ \"^[%\\[/]?%-\") or string.find(remainder, \"%-[%\\[/]?$\") then\n\t\treturn nil\n\tend\t-- If a hyphen is at the beginning or end of the transcription, do not count syllables.\n\t\n\tlocal count = 0\n\tlocal diphs = diphthongs[lang:getCode()] or {}\n\
      \t\n\tremainder = mw.ustring.toNFD(remainder)\n\tremainder = string.gsub(remainder, \"%((.*)%)\", \"%1\") -- Remove parentheses.\n\n\twhile remainder ~= \"\" do\n\t\t-- Ignore nonsyllabic vowels\n\t\tremainder = mw.ustring.gsub(remainder, \"^\" .. vowel\
      \ .. nonsyllabicDiacritic, \"\")\n\t\t\n\t\tlocal m =\n\t\t\tmw.ustring.match(remainder, \"^.\" .. syllabicDiacritic) or  -- Syllabic consonant\n\t\t\tmw.ustring.match(remainder, \"^\" .. vowel .. tie .. vowel)  -- Tie bar\n\t\t\n\t\t-- Starts with a recognised\
      \ diphthong?\n\t\tfor _, diph in ipairs(diphs) do\n\t\t\tif m then\n\t\t\t\tbreak\n\t\t\tend\n\t\t\t\n\t\t\tm = m or mw.ustring.match(remainder, \"^\" .. diph)\n\t\tend\n\t\t\n\t\t-- If we haven't found anything yet, just match on a single vowel\n\t\t\
      m = m or mw.ustring.match(remainder, \"^\" .. vowel)\n\t\t\n\t\tif m then\n\t\t\t-- Found a vowel, add it\n\t\t\tcount = count + 1\n\t\t\tremainder = string.sub(remainder, #m + 1)\n\t\telse\n\t\t\t-- Found a non-vowel, skip it\n\t\t\tremainder = string.gsub(remainder,\
      \ \"^\" .. UTF8Char, \"\")\n\t\tend\n\tend\n\t\n\tif count ~= 0 then return count end\n\t\n\treturn nil\n\t\nend\n\n\nfunction export.countVowels2Test(frame)\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {default = \"\"},\n\t}\n\t\n\tlocal\
      \ args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal count = export.getVowels(args[2], lang)\n\t\n\treturn\
      \ 'The text \"' .. args[2] .. '\" contains ' .. count .. ' vowels.'\nend\n\n\nlocal function countVowels(text)\n\ttext = mw.ustring.toNFD(text) or error(\"Invalid UTF-8\")\n\t\n\tlocal _, count = mw.ustring.gsub(text, vowel, \"\")\n\tlocal _, sequenceCount\
      \ = mw.ustring.gsub(text, vowel..\"+\", \"\")\n\tlocal _, nonsyllabicCount = mw.ustring.gsub(text, vowel .. nonsyllabicDiacritic, \"\")\n\tlocal _, tieCount = mw.ustring.gsub(text, vowel .. tie .. vowel, \"\")\n\t\n\tlocal diphthongCount = count - (nonsyllabicCount\
      \ + tieCount)\n\t\n\treturn count, sequenceCount, diphthongCount\nend\n\n\nlocal function countDiphthongs(text, lang)\n\ttext = mw.ustring.toNFD(text) or error(\"Invalid UTF-8\")\n\t\n\tlocal diphthongs = diphthongs[lang:getCode()] or {}\n\t\n\tlocal _,\
      \ count\n\tlocal total = 0\n\t\n\tif diphthongs then\n\t\tfor i, diphthong in pairs(diphthongs) do\n\t\t\t_, count = mw.ustring.gsub(text, diphthong, \"\")\n\t\t\ttotal = total + count\n\t\tend\n\tend\n\t\n\treturn total\nend\n\n-- Used by [[Module:IPA]]\n\
      function export.hasDiphthongs(lang)\n\tif  (diphthongs[lang:getCode()]) then\n\t\treturn true\n\tend\n\treturn false\nend\n\nfunction export.countVowels(frame)\n\tlocal params = {\n\t\t[1] = {default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame.args, params)\n\t\n\tlocal count, sequenceCount, diphthongCount = countVowels(args[1])\n\t\n\tlocal outputs = {}\n\ttable.insert(outputs, (count or 'an unknown number of') .. ' vowels')\n\ttable.insert(outputs, (sequenceCount or 'an unknown\
      \ number of') .. ' vowel sequences')\n\ttable.insert(outputs, (diphthongCount or 'an unknown number of') .. ' vowels or vowels and diphthongs')\n\t\n\treturn 'The text \"' .. args[1] .. '\" contains ' .. mw.text.listToText(outputs) .. \".\"\nend\n\n\n\
      function export.countVowelsDiphthongs(frame)\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\tlocal lang = require(\"Module:languages\"\
      ).getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal vowels = countVowels(args[2])\n\tlocal count = vowels - countDiphthongs(args[2], lang) or 0\n\t\n\tlocal out = 'The text \"' .. args[2] .. '\" contains ' .. (count or 'an\
      \ unknown number of')\n\t\n\tif count == 1 then\n\t\tout = out .. ' vowel or diphthong.'\n\telse\n\t\tout = out .. ' vowels or diphthongs.'\n\tend\n\t\n\treturn out\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:31.812Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Apt-verb-form-of&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41745 t=1555362391724531
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1022'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1312.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 585999109, 565190450, 691880809
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4106305" pageid="4106305" ns="10" title="Template:pt-verb-form-of"><revisions><rev user="TheDaveRoss" timestamp="2016-02-05T20:55:51Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Adding closing noinclude tag." xml:space="preserve">&lt;includeonly&gt;{{#invoke:pt-verb-form-of|show}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:32.012Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Apt-verb-form-of&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41227 t=1555362391899886
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 415740210, 237525204, 701402003
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4106303\" pageid=\"4106303\" ns=\"828\" title=\"Module:pt-verb-form-of\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-05-26T02:36:16Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"more informative module error\" xml:space=\"preserve\">local abbrevs = {\n    [\"i\"]=\"personal infinitive \",\n    [\"g\"]=\"gerund \",\n    [\"pp\"]=\"past participle \",\n    [\"spp\"\
      ]=\"short past participle \",\n    [\"lpp\"]=\"long past participle \",\n    [\"psi\"]=\"present indicative \",\n    [\"ipi\"]=\"imperfect indicative \",\n    [\"pti\"]=\"preterite indicative \",\n    [\"pli\"]=\"pluperfect indicative \",\n    [\"fti\"\
      ]=\"future indicative \",\n    [\"c\"]=\"conditional \",\n    [\"pss\"]=\"present subjunctive \",\n    [\"ips\"]=\"imperfect subjunctive \",\n    [\"fts\"]=\"future subjunctive \",\n    [\"ai\"]=\"affirmative imperative \",\n    [\"ni\"]=\"negative imperative\
      \ \",\n    \n    [\"1\"]=\"first-person \",\n    [\"2\"]=\"second-person \",\n    [\"3\"]=\"third-person \",\n    [\"s\"]=\"singular \",\n    [\"p\"]=\"plural \",\n    [\"m\"]=\"masculine \",\n    [\"f\"]=\"feminine \",\n    [\"mf\"]=\"masculine and feminine\
      \ \",\n    [\"\"] = \"\"\n}\n\n\n\n\n-- Format: [suffix+conj] = {vf, p, n, which gloss, gender, context}\nlocal suffixes = {}\nsuffixes = {\n    [\"a1\"]={{\"psi\", \"3\", \"s\", 1}, {\"ai\", \"2\", \"s\", 2}},\n    [\"a2\"]={{\"pss\", \"1\" ,\"s\", 1},\
      \ {\"pss\", \"3\", \"s\", 2}, {\"ai\", \"3\", \"s\", 1}, {\"ni\", \"3\", \"s\", 1}},\n    [\"a3\"]={{\"pss\", \"1\" ,\"s\", 1}, {\"pss\", \"3\", \"s\", 2}, {\"ai\", \"3\", \"s\", 1}, {\"ni\", \"3\", \"s\", 1}},\n    [\"e1\"]={{\"pss\", \"1\", \"s\", 1},\
      \ {\"pss\", \"3\", \"s\", 2}, {\"ai\", \"3\", \"s\", 1}, {\"ni\", \"3\", \"s\", 1}},\n    [\"e2\"]={{\"psi\", \"3\", \"s\", 1}, {\"ai\", \"2\", \"s\", 2}},\n    [\"e3\"]={{\"psi\", \"3\", \"s\", 1}, {\"ai\", \"2\", \"s\", 2}},\n    [\"i2\"]={{\"pti\",\
      \ \"1\", \"s\"}},\n    [\"i3\"]={{\"pti\", \"1\", \"s\"}, {\"ai\", \"2\", \"p\"}},\n    [\"o1\"]={{\"psi\", \"1\", \"s\"}},\n    [\"o2\"]={{\"psi\", \"1\", \"s\"}},\n    [\"o3\"]={{\"psi\", \"1\", \"s\"}},\n    [\"ai1\"]={{\"ai\", \"2\", \"p\"}},\n   \
      \ [\"am1\"]={{\"psi\", \"3\", \"p\"}},\n    [\"am2\"]={{\"pss\", \"3\", \"p\"}, {\"ai\", \"3\", \"p\"}, {\"ni\", \"3\", \"p\"}},\n    [\"am3\"]={{\"pss\", \"3\", \"p\"}, {\"ai\", \"3\", \"p\"}, {\"ni\", \"3\", \"p\"}},\n    [\"ar1\"]={{\"i\", \"1\", \"\
      s\", 1}, {\"i\", \"3\", \"s\", 1}, {\"fts\", \"1\", \"s\", 1}, {\"fts\", \"3\", \"s\", 2}},\n    [\"as1\"]={{\"psi\", \"2\", \"s\"}},\n    [\"as2\"]={{\"pss\", \"2\", \"s\"}, {\"ni\", \"2\", \"s\"}},\n    [\"as3\"]={{\"pss\", \"2\", \"s\"}, {\"ni\", \"\
      2\", \"s\"}},\n    [\"ei1\"]={{\"pti\", \"1\", \"s\"}},\n    [\"ei2\"]={{\"ai\", \"2\", \"p\"}},\n    [\"em1\"]={{\"pss\", \"3\", \"p\"}, {\"ai\", \"3\", \"p\"}, {\"ni\", \"3\", \"p\"}},\n    [\"em2\"]={{\"psi\", \"3\", \"p\"}},\n    [\"em3\"]={{\"psi\"\
      , \"3\", \"p\"}},\n    [\"er2\"]={{\"i\", \"1\", \"s\", 1}, {\"i\", \"3\", \"s\", 1}, {\"fts\", \"1\", \"s\", 1}, {\"fts\", \"3\", \"s\", 2}},\n    [\"es1\"]={{\"pss\", \"2\", \"s\"}, {\"ni\", \"2\", \"s\"}},\n    [\"es2\"]={{\"psi\", \"2\", \"s\"}},\n\
      \    [\"es3\"]={{\"psi\", \"2\", \"s\"}},\n    [\"eu2\"]={{\"pti\", \"3\", \"s\"}},\n    [\"ia2\"]={{\"ipi\", \"1\", \"s\"}, {\"ipi\", \"3\", \"s\"}},\n    [\"ia3\"]={{\"ipi\", \"1\", \"s\"}, {\"ipi\", \"3\", \"s\"}},\n    [\"ir3\"]={{\"i\", \"1\", \"\
      s\", 1}, {\"i\", \"3\", \"s\", 1}, {\"fts\", \"1\", \"s\", 1}, {\"fts\", \"3\", \"s\", 2}},\n    [\"is3\"]={{\"psi\", \"2\", \"p\"}},\n    [\"iu3\"]={{\"pti\", \"3\", \"s\"}},\n    [\"ou1\"]={{\"pti\", \"3\", \"s\"}},\n    [\"ada1\"]={{\"pp\", \"f\", \"\
      s\"}},\n    [\"ado1\"]={{\"pp\", \"m\", \"s\"}},\n    [\"ais1\"]={{\"psi\", \"2\", \"p\"}},\n    [\"ais2\"]={{\"pss\", \"2\", \"p\"}, {\"ni\", \"2\", \"p\"}},\n    [\"ais3\"]={{\"pss\", \"2\", \"p\"}, {\"ni\", \"2\", \"p\"}},\n    [\"ara1\"]={{\"pli\"\
      , \"1\", \"s\"}, {\"pli\", \"3\", \"s\"}},\n    [\"ará1\"]={{\"fti\", \"3\", \"s\"}},\n    [\"ava1\"]={{\"ipi\", \"1\", \"s\"}, {\"ipi\", \"3\", \"s\"}},\n    [\"eis1\"]={{\"pss\", \"2\", \"p\"}, {\"ni\", \"2\", \"p\"}},\n    [\"eis2\"]={{\"psi\", \"2\"\
      , \"p\"}},\n    [\"era2\"]={{\"pli\", \"1\", \"s\"}, {\"pli\", \"3\", \"s\"}},\n    [\"erá2\"]={{\"fti\", \"3\", \"s\"}},\n    [\"iam2\"]={{\"ipi\", \"3\", \"p\"}},\n    [\"iam3\"]={{\"ipi\", \"3\", \"p\"}},\n    [\"ias2\"]={{\"ipi\", \"2\", \"s\"}},\n\
      \    [\"ias3\"]={{\"ipi\", \"2\", \"s\"}},\n    [\"ida2\"]={{\"pp\", \"f\", \"s\"}},\n    [\"ida3\"]={{\"pp\", \"f\", \"s\"}},\n    [\"ido2\"]={{\"pp\", \"m\", \"s\"}},\n    [\"ido3\"]={{\"pp\", \"m\", \"s\"}},\n    [\"ira3\"]={{\"pli\", \"1\", \"s\"},\
      \ {\"pli\", \"3\", \"s\"}},\n    [\"irá3\"]={{\"fti\", \"3\", \"s\"}},\n    [\"adas1\"]={{\"pp\", \"f\", \"p\"}},\n    [\"ados1\"]={{\"pp\", \"m\", \"p\"}},\n    [\"amos1\"]={{\"psi\", \"1\", \"p\", 1}, {\"pti\", \"1\", \"p\", 2, \"Brazil[[Category:Brazilian\
      \ Portuguese verb forms]]\"}},\n    [\"amos2\"]={{\"pss\", \"1\", \"p\"}, {\"ai\", \"1\", \"p\"}, {\"ni\", \"1\", \"p\"}},\n    [\"amos3\"]={{\"pss\", \"1\", \"p\"}, {\"ai\", \"1\", \"p\"}, {\"ni\", \"1\", \"p\"}},\n    [\"ámos1\"]={{\"pti\", \"1\", \"\
      p\", 1, \"Portugal[[Category:European Portuguese verb forms]]\"}},\n    [\"ando1\"]={{\"g\", \"\", \"\"}},\n    [\"aram1\"]={{\"pti\", \"3\", \"p\"}, {\"pli\", \"3\", \"p\"}},\n    [\"arão1\"]={{\"fti\", \"3\", \"p\"}},\n    [\"aras1\"]={{\"pli\", \"2\"\
      , \"s\"}},\n    [\"arás1\"]={{\"fti\", \"2\", \"s\"}},\n    [\"arei1\"]={{\"fti\", \"1\", \"s\"}},\n    [\"arem1\"]={{\"i\", \"3\", \"p\", 1}, {\"fts\", \"3\", \"p\", 2}},\n    [\"ares1\"]={{\"i\", \"2\", \"s\", 1}, {\"fts\", \"2\", \"s\", 2}},\n    [\"\
      aria1\"]={{\"c\", \"1\", \"s\"}, {\"c\", \"3\", \"s\"}},\n    [\"asse1\"]={{\"ips\", \"1\", \"s\"}, {\"ips\", \"3\", \"s\"}},\n    [\"aste1\"]={{\"pti\", \"2\", \"s\"}},\n    [\"avam1\"]={{\"ipi\", \"3\", \"p\"}},\n    [\"avas1\"]={{\"ipi\", \"2\", \"\
      s\"}},\n    [\"emos1\"]={{\"pss\", \"1\", \"p\"}, {\"ai\", \"1\", \"p\"}, {\"ni\", \"1\", \"p\"}},\n    [\"emos2\"]={{\"psi\", \"1\", \"p\", 1}, {\"pti\", \"1\", \"p\", 2}},\n    [\"endo2\"]={{\"g\", \"\", \"\"}},\n    [\"eram2\"]={{\"pti\", \"3\", \"\
      p\"}, {\"pli\", \"3\", \"p\"}},\n    [\"erão2\"]={{\"fti\", \"3\", \"p\"}},\n    [\"eras2\"]={{\"pli\", \"2\", \"s\"}},\n    [\"erás2\"]={{\"fti\", \"2\", \"s\"}},\n    [\"erei2\"]={{\"fti\", \"1\", \"s\"}},\n    [\"erem2\"]={{\"i\", \"3\", \"p\", 1},\
      \ {\"fts\", \"3\", \"p\", 2}},\n    [\"eres2\"]={{\"i\", \"2\", \"s\", 1}, {\"fts\", \"2\", \"s\", 2}},\n    [\"eria2\"]={{\"c\", \"1\", \"s\"}, {\"c\", \"3\", \"s\"}},\n    [\"esse2\"]={{\"ips\", \"1\", \"s\"}, {\"ips\", \"3\", \"s\"}},\n    [\"este2\"\
      ]={{\"pti\", \"2\", \"s\"}},\n    [\"idas2\"]={{\"pp\", \"f\", \"p\"}},\n    [\"idas3\"]={{\"pp\", \"f\", \"p\"}},\n    [\"idos2\"]={{\"pp\", \"m\", \"p\"}},\n    [\"idos3\"]={{\"pp\", \"m\", \"p\"}},\n    [\"íeis2\"]={{\"ipi\", \"2\", \"p\"}},\n    [\"\
      íeis3\"]={{\"ipi\", \"2\", \"p\"}},\n    [\"imos3\"]={{\"psi\", \"1\", \"p\", 1}, {\"pti\", \"1\", \"p\", 2}},\n    [\"indo3\"]={{\"g\", \"\", \"\"}},\n    [\"iram3\"]={{\"pti\", \"3\", \"p\"}, {\"pli\", \"3\", \"p\"}},\n    [\"irão3\"]={{\"fti\", \"3\"\
      , \"p\"}},\n    [\"iras3\"]={{\"pli\", \"2\", \"s\"}},\n    [\"irás3\"]={{\"fti\", \"2\", \"s\"}},\n    [\"irei3\"]={{\"fti\", \"1\", \"s\"}},\n    [\"irem3\"]={{\"i\", \"3\", \"p\", 1}, {\"fts\", \"3\", \"p\", 2}},\n    [\"ires3\"]={{\"i\", \"2\", \"\
      s\", 1}, {\"fts\", \"2\", \"s\", 2}},\n    [\"iria3\"]={{\"c\", \"1\", \"s\"}, {\"c\", \"3\", \"s\"}},\n    [\"isse3\"]={{\"ips\", \"1\", \"s\"}, {\"ips\", \"3\", \"s\"}},\n    [\"iste3\"]={{\"pti\", \"2\", \"s\"}},\n    [\"ardes1\"]={{\"i\", \"2\", \"\
      p\", 1}, {\"fts\", \"2\", \"p\", 2}},\n    [\"areis1\"]={{\"fti\", \"2\", \"p\"}},\n    [\"áreis1\"]={{\"pli\", \"2\", \"p\"}},\n    [\"ariam1\"]={{\"c\", \"3\", \"p\"}},\n    [\"arias1\"]={{\"c\", \"2\", \"s\"}},\n    [\"armos1\"]={{\"i\", \"1\", \"p\"\
      , 1}, {\"fts\", \"1\", \"p\", 2}},\n    [\"assem1\"]={{\"ips\", \"3\", \"p\"}},\n    [\"asses1\"]={{\"ips\", \"2\", \"s\"}},\n    [\"astes1\"]={{\"pti\", \"2\", \"p\"}},\n    [\"áveis1\"]={{\"ipi\", \"2\", \"p\"}},\n    [\"erdes2\"]={{\"i\", \"2\", \"\
      p\", 1}, {\"fts\", \"2\", \"p\", 2}},\n    [\"ereis2\"]={{\"fti\", \"2\", \"p\"}},\n    [\"êreis2\"]={{\"pli\", \"2\", \"p\"}},\n    [\"eriam2\"]={{\"c\", \"3\", \"p\"}},\n    [\"erias2\"]={{\"c\", \"2\", \"s\"}},\n    [\"ermos2\"]={{\"i\", \"1\", \"p\"\
      , 1}, {\"fts\", \"1\", \"p\", 2}},\n    [\"essem2\"]={{\"ips\", \"3\", \"p\"}},\n    [\"esses2\"]={{\"ips\", \"2\", \"s\"}},\n    [\"estes2\"]={{\"pti\", \"2\", \"p\"}},\n    [\"íamos2\"]={{\"ipi\", \"1\", \"p\"}},\n    [\"íamos3\"]={{\"ipi\", \"1\", \"\
      p\"}},\n    [\"irdes3\"]={{\"i\", \"2\", \"p\", 1}, {\"fts\", \"2\", \"p\", 2}},\n    [\"ireis3\"]={{\"fti\", \"2\", \"p\"}},\n    [\"íreis3\"]={{\"pli\", \"2\", \"p\"}},\n    [\"iriam3\"]={{\"c\", \"3\", \"p\"}},\n    [\"irias3\"]={{\"c\", \"2\", \"s\"\
      }},\n    [\"irmos3\"]={{\"i\", \"1\", \"p\", 1}, {\"fts\", \"1\", \"p\", 2}},\n    [\"issem3\"]={{\"ips\", \"3\", \"p\"}},\n    [\"isses3\"]={{\"ips\", \"2\", \"s\"}},\n    [\"istes3\"]={{\"pti\", \"2\", \"p\"}},\n    [\"áramos1\"]={{\"pli\", \"1\", \"\
      p\"}},\n    [\"aremos1\"]={{\"fti\", \"1\", \"p\"}},\n    [\"aríeis1\"]={{\"c\", \"2\", \"p\"}},\n    [\"ásseis1\"]={{\"ips\", \"2\", \"p\"}},\n    [\"ávamos1\"]={{\"ipi\", \"1\", \"p\"}},\n    [\"êramos2\"]={{\"pli\", \"1\", \"p\"}},\n    [\"eremos2\"\
      ]={{\"fti\", \"1\", \"p\"}},\n    [\"eríeis2\"]={{\"c\", \"2\", \"p\"}},\n    [\"êsseis2\"]={{\"ips\", \"2\", \"p\"}},\n    [\"íramos3\"]={{\"pli\", \"1\", \"p\"}},\n    [\"iremos3\"]={{\"fti\", \"1\", \"p\"}},\n    [\"iríeis3\"]={{\"c\", \"2\", \"p\"\
      }},\n    [\"ísseis3\"]={{\"ips\", \"2\", \"p\"}},\n    [\"aríamos1\"]={{\"c\", \"1\", \"p\"}},\n    [\"ássemos1\"]={{\"ips\", \"1\", \"p\"}},\n    [\"eríamos2\"]={{\"c\", \"1\", \"p\"}},\n    [\"êssemos2\"]={{\"ips\", \"1\", \"p\"}},\n    [\"iríamos3\"\
      ]={{\"c\", \"1\", \"p\"}},\n    [\"íssemos3\"]={{\"ips\", \"1\", \"p\"}},\n}\n\n\nlocal export = {}\nlocal w\n\nfunction export.show(frame)    \n\n    -- This template supports two types of parameter entering:\n    --- by data: manually enter the tense/aspect\
      \ form, the person, the number,\n    ---          etc.\n    --- by suffix: enter the conjugation paradigm (1, 2 or 3) and the suffix\n    ---            expected from a regular verb (even if the verb itself isn’t\n    ---            regular) and the template\
      \ will automatically find out all the\n    ---            forms that suffix forms.\n    \n    local args = frame:getParent().args\n    w = mw.title.getCurrentTitle().text\n    local l = args[1] -- lemma\n\tlocal vf = args[2] or \"\"\n\tlocal tg = args[\"\
      tg\"] or \"\"\n\tlocal tg2 = args[\"tg2\"] or tg or \"\"\n\tlocal ig = args[\"ig\"] or \"\"\n\tlocal ig2 = args[\"ig2\"] or ig or \"\"\n\tlocal obj = args[\"obj\"] or \"\"\n\tlocal objtr = args[\"objtr\"] or \"\"\n\tlocal c = args[\"cx\"] or \"\"\n\tlocal\
      \ imp = false\n\tif (args[\"imp\"]) then imp = true end\n\tlocal data\n\tlocal suf\n\tlocal conj\n\tlocal s = \"\"\n\t\n\tif (mw.ustring.sub(l, -2) == \"ar\") then conj = \"1\"\n\telseif (mw.ustring.sub(l, -2) == \"ir\") then conj = \"3\"\n\telse conj\
      \ = 2 end\n\t\n\tif (args[2] == nil) then\n\t    suf = get_suffix(l)\n\t    --print(suf)\n\tend\n\t\n\tif (args[3] == nil and args[2] ~= \"g\") then\n\t    suf = suf or args[2]\n\t    \n\t    data = suffixes[suf .. conj]\n\t    \n\t    if not data then\n\
      \t    \terror('No data for the suffix \"' .. suf .. '\" and the conjugation \"' .. conj .. '\".')\n\t    end\n\t    \n\t    local correct_tg, correct_ig\n\t    \n\t    for c1 = 1, table.getn(data) do\n\t        if (data[c1][4] == 2) then\n\t          \
      \  correct_tg = tg2\n\t            correct_ig = ig2\n\t        else\n\t            correct_tg = tg\n\t            correct_ig = ig\n\t        end\n\t        \n\t        local context = c\n\t        if (c ~= \"\" and data[c1][5] ~= nil) then\n\t        \
      \    context = context .. \", \"\n\t        end\n\t        context = context .. (data[c1][5] or \"\")\n\t        \n\t        if (c1 &gt; 1) then s = s .. \"\\n# \" end\n\t        s = s .. def(l, context, data[c1][1], data[c1][2], data[c1][3], correct_tg,\
      \ correct_ig, imp, obj, objtr)\n\t    end\n\telse\n\t    local p = args[3] or \"\"\n\t    local n = args[4]\n\t    \n\t    s = s .. def(l, c, args[2], p, n, tg, ig, imp, obj, objtr)\n\t    \n\tend\n\t\n\treturn s;\n\t\nend\n\n-- Returns the text for the\
      \ definition and the usex. Parameters:\n--- l:     lemma\n--- c:     context (i.e. “Portugal” for “falámos”)\n--- vf:    verb form (abbreviation)\n--- p:     person (abbreviation) or gender (for past participle)\n--- n:     number (abbreviation)\n--- tg:\
      \    transitive sense gloss\n--- ig:    intransitive sense gloss\n--- imp:   impersonal\n--- obj:   object\n--- objtr: object translation\nfunction def(l, c, vf, p, n, tg, ig, imp, obj, objtr)\n    local s = \"\"\n    if (mw.ustring.len(c) &gt; 0) then\
      \ s = s .. \"(''\" .. c .. \"'') \" end\n    s = s .. \"''\" .. abbrevs[p] .. abbrevs[n]\n    if (vf ~= \"g\" and vf ~= \"pp\" and vf ~= \"spp\" and vf ~= \"lpp\") then\n        s = s .. \"(\" .. pronoun_notes(vf, p, n) .. \") \"\n    end\n    s = s ..\
      \ abbrevs[vf] .. \"of\"\n    s = s .. \"'' '''[[\" .. l .. \"#Portuguese|\" .. l .. \"]]'''\"\n    s = s .. make_usex(vf, p, n, tg, true, imp, obj, objtr)\n    s = s .. make_usex(vf, p, n, ig, false, imp, obj, objtr)\n    return s\nend\n\n\n\n-- Returns\
      \ information about the pronouns used with the form. Parameters:\n--- vf:    verb form (abbreviation)\n--- p:     person (abbreviation)\n--- n:     number (abbreviation)\nfunction pronoun_notes(vf, p, n)\n    local s = \"'''[[\"\n    if (p == \"3\") then\n\
      \        if (not(vf == \"ni\" or vf == \"ai\")) then\n            if (n == \"s\") then\n                s = s .. \"ele#Portuguese|ele]]''' and '''[[ela#Portuguese|ela]]''', also used with '''[[você#Portuguese|você\"\n            else\n                s\
      \ = s .. \"eles#Portuguese|eles]]''' and '''[[elas#Portuguese|elas]]''', also used with '''[[vocês#Portuguese|vocês\"\n            end\n            s = s .. \"]]''' and [[Appendix:Portuguese pronouns#Personal pronouns and verb forms|others]]\"\n      \
      \  else\n         if (n == \"s\") then\n                s = s .. \"você]]'''\"\n            else\n                s = s .. \"vocês]]'''\"\n            end\n        end\n    \n        \n    else\n        if (p == \"2\") then\n            if (n == \"s\"\
      ) then\n                s = s .. \"tu#Portuguese|tu\"\n            else\n                s = s .. \"vós#Portuguese|vós\"\n            end\n            \n            if (vf == \"ni\" or vf == \"ai\") then\n            \ts = s .. \"]]''', sometimes used\
      \ with '''[[\"\n            \t\n\t            if (n == \"s\") then\n\t                s = s .. \"você#Portuguese|você\"\n\t            else\n\t                s = s .. \"vocês#Portuguese|vocês\"\n\t            end\n            end\n        else\n     \
      \       if (n == \"s\") then\n                s = s .. \"eu#Portuguese|eu\"\n            else\n                s = s .. \"nós#Portuguese|nós\"\n            end\n        end\n        s = s .. \"]]'''\"\n    end\n    return s;\nend\n\n\n-- Returns the word’\
      s inflectional suffix.\nfunction get_suffix(l)\n    local suf4 = mw.ustring.sub(l, -4)\n    local suf3 = mw.ustring.sub(l, -3)\n    local wsuf\n    \n    \n    if (suf4 == \"guer\" or suf4 == \"guir\" or suf4 == \"quer\" or suf4 == \"quir\") then\n   \
      \     wsuf = mw.ustring.sub(w, mw.ustring.len(l) - mw.ustring.len(w) - 3)\n        if (mw.ustring.sub(wsuf, 1, 1) == \"u\") then\n            wsuf = mw.ustring.sub(wsuf, 2)\n        end\n    else\n        wsuf = mw.ustring.sub(w, mw.ustring.len(l) - mw.ustring.len(w)\
      \ - 2)\n        local fl = mw.ustring.sub(wsuf, 1, 1) -- first letter\n        local ftl = mw.ustring.sub(wsuf, 1, 2) -- first two letters\n        \n        if (suf3 == \"car\" or suf3 == \"gar\") then\n            if (mw.ustring.sub(wsuf, 1, 1) == \"\
      u\") then\n                wsuf = mw.ustring.sub(wsuf, 2)\n            end\n            \n        elseif (suf3 == \"air\" or suf3 == \"uir\") then\n            if (ftl == \"io\" or ftl == \"ia\") then\n                wsuf = mw.ustring.sub(wsuf, 2)\n \
      \           \n            elseif (fl == \"í\") then\n                if (suffixes[wsuf .. \"3\"] == nil) then\n                    wsuf = \"i\" .. mw.ustring.sub(wsuf, 2)\n                end\n            elseif (wsuf == \"i\" or wsuf == \"is\") then\n\
      \                wsuf = \"e\" .. mw.ustring.sub(wsuf, 2)\n            end\n        elseif (suf3 == \"ear\") then\n            if (fl == \"i\") then\n                wsuf = mw.ustring.sub(wsuf, 2)\n            end\n        elseif (suf3 == \"oer\") then\n\
      \            if (fl == \"i\") then\n                wsuf = \"e\" .. mw.ustring.sub(wsuf, 2)\n            elseif (fl == \"í\" and mw.ustring.len(wsuf &lt;=3)) then\n                wsuf = \"i\" .. mw.ustring.sub(wsuf, 2)\n            end\n        end\n\
      \    end\n    return wsuf\nend\n\n\n-- Generates an automatic usage example. Returns an empty string if one can’t be\n-- generated.\n\n-- parameters:\n--- vf:    verb form (abbreviation)\n--- p:     person (abbreviation)\n--- n:     number (abbreviation)\n\
      --- g:     gloss\n--- tr:    whether the verb sense is transitive\n--- imp:   (boolean) whether the verb is impersonal (i.e. chover, gear)\n--- obj:   the object; default “isso”\n--- objtr: the object’s translation; default “this”\n\n-- The gloss should\
      \ be the English form that translates the Portuguese one.\n-- For example, the form of ‘to be’ to be used is:\n--- be:    ai, ni, fti, c, pss, i\n--- am:    psi 1s, fts 1s\n--- is:    psi 3s, fts 3s\n--- are    psi 2s p, fts 2s p\n--- was:   pti 1s 3s,\
      \ ipi 1s 3s\n--- were:  pti 2s p, ipi 2s p, ips\n--- been:  pp, lpp, spp, pli\n--- being: g\nfunction make_usex(vf, p, n, g, tr, imp, obj, objtr)\n    if (g == \"\") then return \"\" end\n    \n    local pt = \"\"\n    local en = \"\"\n    local ww\n \
      \   \n    if (mw.ustring.len(obj) == 0) then\n        obj = \"isso\"\n        objtr = \"this\"\n    end\n    \n    if (vf == \"g\") then\n        if (imp == true) then\n            pt = pt .. \"Aqui está '''\" .. w .. \"'''\"\n            en = en .. \"\
      It is '''\" .. g .. \"''' here\"\n        else\n            pt = pt .. \"Conheço a pessoa '''\" .. w .. \"'''\"\n            en = en .. \"I know the person '''\" .. g .. \"'''\"\n            if (tr) then\n                pt = pt .. \" \" .. obj\n     \
      \           en = en .. \" \" .. objtr\n            end\n        end\n\n\n\n    elseif (vf == \"pp\" or vf == \"lpp\" or vf == \"spp\") then\n        if (p == \"m\" and n == \"s\") then\n            if (imp == true) then\n                pt = pt .. \"Havia\
      \ '''\" .. w .. \"'''\"\n                en = en .. \"It had '''\" .. g .. \"'''\"\n            else\n                pt = pt .. \"Alguém havia '''\" .. w .. \"'''\"\n                en = en .. \"Someone had '''\" .. g .. \"'''\"\n                if (tr\
      \ == true) then\n                    pt = pt .. \" \" .. obj\n                    en = en .. \" \" .. objtr\n                end\n            end\n        else return \"\"\n        end\n    \n\n    else\n        if (vf == \"ni\" or vf == \"ai\") then\n\
      \            ww = w\n            if (p == \"1\") then\n                en = en .. \"'''Let’s\"\n                if (vf == \"ni\") then \n                    pt = pt .. \"Não \"\n                    en = en .. \"''' not '''\"\n                else\n   \
      \                 ww = capitalise(w)\n                    en = en .. \" \"\n                end\n            else\n                if (p == \"2\" and n == \"s\") then pt = pt .. \"Tu\"\n                elseif (p == \"2\" and n == \"p\") then pt = pt ..\
      \ \"Vós\"\n                elseif (p == \"3\" and n == \"s\") then pt = pt .. \"Você\"\n                else pt = pt .. \"Vocês\" end\n                pt = pt .. \" aí, \" \n                en = en .. \"You there, \"\n                if (vf == \"ni\")\
      \ then\n                    pt = pt .. \"não \"\n                    en = en .. \"don’t \"\n                end\n                en = en .. \"'''\"\n            end\n            \n            \n            pt = pt .. \"'''\" .. ww .. \"'''\"\n        \
      \    en = en .. g .. \"'''\"\n            if (tr == true) then\n                pt = pt .. \" \" .. obj\n                en = en .. \" \" .. objtr\n            end\n        \n        \n        \n        \n        else\n            if (not(vf==\"pss\" or\
      \ vf==\"ips\" or vf==\"fts\" or vf==\"i\")) then \n                pt = pt .. capitalise(get_pron(\"pt\", p, n, \"s\", imp))\n                en = en .. capitalise(get_pron(\"en\", p, n, \"s\", imp))\n            elseif (vf == \"i\") then\n           \
      \     pt = pt .. \"Aquilo foi feito para \"\n                en = en .. \"That was done for \"\n                pt = pt .. get_pron(\"pt\", p, n, \"s\", imp)\n                en = en .. get_pron(\"en\", p, n, \"o\", imp)\n            else\n           \
      \     if (vf == \"pss\") then\n                    pt = pt .. \"É importante que \"\n                    en = en .. \"It’s important that \"\n                elseif (vf == \"ips\") then\n                    pt = pt .. \"Seria bom se \"\n              \
      \      en = en .. \"It would be nice if \"\n                else\n                    pt = pt .. \"Estará terminado quando \"\n                    en = en .. \"It will be over when \"\n                end\n                pt = pt .. get_pron(\"pt\", p,\
      \ n, \"s\", imp)\n                en = en .. get_pron(\"en\", p, n, \"s\", imp)\n            end\n            \n            \n            if (vf == \"ipi\") then\n                pt = pt .. \" frequentemente\"\n                en = en .. \" often '''\"\
      \n            elseif (vf == \"pli\") then\n                en = en .. \" '''had \"\n            elseif (vf == \"fti\") then\n                en = en .. \" '''will \"\n            elseif (vf == \"c\") then\n                en = en .. \" '''would \"\n  \
      \          elseif (vf == \"i\") then\n                en = en .. \" '''to \"\n            else\n                en = en .. \" '''\"\n            end\n            \n            pt = pt .. \" '''\" .. w .. \"'''\"\n            en = en .. g .. \"'''\"\n \
      \           \n            if (tr == true) then\n                pt = pt .. \" \" .. obj\n                en = en .. \" \" .. objtr\n            end\n            \n            if (vf == \"pti\") then\n                pt = pt .. \" uma vez\"\n          \
      \      en = en .. \" once\"\n            end\n        end\n       \n       \n        if (p == \"2\" or (vf == \"ni\" or vf == \"ai\") and p == \"3\") then\n            if (n == \"s\") then\n                pt = pt .. \" sozinho\"\n                en =\
      \ en .. \" by yourself\"\n            else\n                pt = pt .. \" sozinhos\"\n                en = en .. \" by yourselves\"\n            end\n        end\n    \n        if (vf == \"c\") then\n            pt = pt .. \", se fosse possível\"\n   \
      \         en = en .. \", if it were possible\"\n        end\n    \n    \n    end\n    \n    \n    return \"\\n#: ''\" .. pt .. \".''\\n#:: \" .. en .. \".\"\nend\n\n-- Returns a pronoun. Parameters:\n--- l: language (“pt” or “en”)\n--- p: person (“1”,\
      \ “2” or “3”)\n--- n: number (“s” or “p”)\n--- d: declension (“s” for subjective, “o” for objective.) Only relevant for\n---    English, Portuguese always returns subjective.\n--- imp: whether the verb is impersonal\n-- Does not return “você” or “você\
      s,” these must be added manually.\nfunction get_pron(l, p, n, d, imp)\n    if (l == \"en\") then\n        if (p == \"1\") then\n            if (n == \"s\") then\n                if (d == \"s\") then return \"I\"\n                else return \"me\" end\n\
      \            else\n                if (d == \"s\") then return \"we\"\n                else return \"us\" end\n            end\n        elseif (p == \"2\") then return \"you\"\n        else\n            if (n == \"s\") then\n                \n        \
      \        if (imp == true) then return \"it\"\n                else\n                    if (d == \"s\") then return \"he\"\n                    else return \"him\" end\n                end\n            else\n                if (d == \"s\") then return\
      \ \"they\"\n                else return \"them\" end\n            end\n        end\n    else\n        if (p == \"1\") then\n            if (n == \"s\") then return \"eu\"\n            else return \"nós\" end\n        elseif (p == \"2\") then\n        \
      \    if (n == \"s\") then return \"tu\"\n            else return \"vós\" end\n        else\n            if (imp == true) then return \"ele\" end\n            if (n == \"s\") then return \"ele\"\n            else return \"eles\" end\n        end\n    end\n\
      end\n\n-- Returns the parameter string with its first letter uppercase.\nfunction capitalise(s)\n    return mw.ustring.upper(mw.ustring.sub(s, 1, 1)) .. mw.ustring.sub(s, 2);\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:32.952Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aitalics&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43667 t=1555362392858139
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1278.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 910911989, 830640881, 700977450
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5880637\" pageid=\"5880637\" ns=\"828\" title=\"Module:italics\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-12-26T23:15:23Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"fix case starting with bolding\" xml:space=\"preserve\">local export = {}\nlocal find = mw.ustring.find\nlocal match = mw.ustring.match\nlocal gsub = mw.ustring.gsub\n\nfunction export.i(text)\n\tif text\
      \ == \"\" or text == nil then\n\t\treturn nil\n\tend\n\t\n\tif type(text) == \"table\" and text.args then\n\t\ttext = text.args[1]\n\tend\n\t\n\t-- Remove whitespace from beginning and end of text.\n\ttext = mw.text.trim(text)\n\t\n\t-- Find parenthesized\
      \ text.\n\tlocal parenthesis = \"\"\n\tif find(text, \"%b()$\") then\n\t\ttext, parenthesis = match(text, \"^(.*)(%b())$\")\n\t\tif text == \"\" or text == nil then\n\t\t\terror(\"Malformed page name: \" .. text)\n\t\tend\n\tend\n\t\n\ttext = \"''\" ..\
      \ text .. \"''\"\n\t\n\t--[[ Adds italics toggle ('') around the whitespace\n\t\tthat surrounds various things that aren't supposed to be italicized:\n\t\tfor instance, Fragaria × ananassa becomes ''Fragaria'' × ''ananassa''.\n\t\t(The hybridization symbol\
      \ × isn't supposed to be italicized.) ]]\n\tlocal notItalicized = {\n\t\t[\"subsp.\"] = true, [\"ssp.\"] = true, [\"var.\"] = true, [\"f.\"] = true,\n\t\t[\"sect.\"] = true, [\"subsect.\"] = true, [\"subg.\"] = true,\n\t}\n\tlocal hybrid = \"×\"\n\t\n\t\
      text = text:gsub(\"(%s*([a-z]+%.)%s*)\",\n\t\tfunction(wholeMatch, abbreviation)\n\t\t\tif notItalicized[abbreviation] then\n\t\t\t\treturn \"''\" .. wholeMatch .. \"''\"\n\t\t\tend\n\t\tend)\n\t\n\ttext = text:gsub(\"%s*\" .. hybrid .. \"%s*\", \"''%0''\"\
      ):gsub(\"%f[']''''%f[^']\", \"\")\n\t\n\treturn text .. parenthesis\nend\n\nfunction export.unitalicize_brackets(text)\n\tif type(text) == \"table\" and text.args then\n\t\ttext = text.args[1]\n\tend\n\t\n\tif not text or text == \"\" then\n\t\treturn\
      \ nil\n\tend\n\t\n\tlocal function unitalicize(text)\n\t\treturn '&lt;span style=\"font-style: normal;\"&gt;' .. text .. '&lt;/span&gt;'\n\tend\n\t\n\tlocal function process(text)\n\t\tif text:find(\"[[\", 1, true) then\n\t\t\tif text:find(\"|\") then\n\
      \t\t\t\treturn text:gsub(\n\t\t\t\t\t\"|.-%]%]\",\n\t\t\t\t\tfunction (piping)\n\t\t\t\t\t\treturn piping:gsub(\"%b[]\", process)\n\t\t\t\t\tend)\n\t\t\tend\n\t\t\t-- do nothing with un-piped wikilinks\n\t\t--[=[\n\t\telseif text:find(\"[http\", 1, true)\
      \ then\n\t\t\treturn text:gsub(\n\t\t\t\t\"%[([^ ]+ )([^%]]+)%]\",\n\t\t\t\tfunction (URL, link_text)\n\t\t\t\t\treturn \"[\" .. URL .. process(link_text) .. \"]\"\n\t\t\t\tend)\n\t\t--]=]\n\t\telseif text:find(\"^%[https?://\") then\n\t\t\t\treturn text:gsub(\n\
      \t\t\t\t\t\" .+\",\n\t\t\t\t\tfunction (link_text)\n\t\t\t\t\t\treturn link_text:gsub(\"%b[]\", process)\n\t\t\t\t\tend)\n\t\telse\n\t\t\tlocal inside_brackets = text:sub(2, -2)\n\t\t\tif inside_brackets == \"...\" or inside_brackets == \"…\" then\n\t\t\
      \t\treturn unitalicize(text)\n\t\t\telse\n\t\t\t\treturn unitalicize(\"[\") .. inside_brackets .. unitalicize(\"]\")\n\t\t\tend\n\t\tend\n\tend\n\t\n\ttext = text:gsub(\"%b[]\", process)\n\t\n\treturn text\nend\n\nfunction export.test(frame)\n\tlocal text\
      \ = frame.args[1]\n\tlocal quote = require(\"Module:yesno\")(frame.args.quote)\n\tif quote then\n\t\treturn export.unitalicize_brackets(text)\n\telse\n\t\treturn export.i(text)\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:34.118Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47345 t=1555362393995929
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:34 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1341.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 676923530, 234840461, 696953279
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4998801\" pageid=\"4998801\" ns=\"828\" title=\"Module:etymology/templates\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-04-07T01:31:40Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"remove term request category from [[Template:desc]] when hyphen (-) is term and there are annotations, for instance in [[σμίλη]]; see [[Wiktionary:Grease pit/2019/April#When a linking\
      \ template is permissibly used with the second parameter being a hyphen but a gloss parameter is present, which I think is not unbeseeming, it categorizes as a term request|Grease Pit discussion]]\" xml:space=\"preserve\">local export = {}\n\nlocal m_languages\
      \ = require(\"Module:languages\")\n\n\nlocal function fetch_lang(lang, parameter)\n\treturn m_languages.getByCode(lang) or m_languages.err(lang, parameter)\nend\n\n\nlocal function fetch_source(code, disallow_family)\n\tlocal source =\n\t\tm_languages.getByCode(code)\n\
      \t\tor require(\"Module:etymology languages\").getByCode(code)\n\t\tor not disallow_family and require(\"Module:families\").getByCode(code)\n\t\n\tif source then\n\t\treturn source\n\telse\n\t\terror(\"The language\" .. (not disallow_family and \", family\"\
      \ or \"\") .. \" or etymology language code \\\"\" .. code .. \"\\\" is not valid.\")\n\tend\nend\n\n\nlocal function fetch_script(sc)\n\tif sc then\n\t\treturn require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\"\
      \ is not valid.\")\n\telse\n\t\treturn nil\n\tend\nend\n\n\nfunction export.etyl(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args,\
      \ params)\n\t\n\tlocal source = fetch_source(args[1])\n\tlocal lang = args[2]\n\tlocal sort_key = args[\"sort\"]\n\t\n\t-- Empty language means English, but \"-\" means no language. Yes, confusing...\n\tif not lang then\n\t\tlang = \"en\"\n\telseif lang\
      \ == \"-\" then\n\t\tlang = nil\n\tend\n\tif lang then\n\t\tlang = fetch_lang(lang, 2)\n\tend\n\tif lang and (lang:getCode() == \"la\" or lang:getCode() == \"nl\") then\n\t\trequire(\"Module:debug\").track(\"etyl/\" .. lang:getCode())\n\t\trequire(\"Module:debug\"\
      ).track(\"etyl/\" .. lang:getCode() .. \"/\" .. source:getCode())\n\tend\n\t\n\treturn require(\"Module:etymology\").format_etyl(lang, source, sort_key)\nend\n\n\nfunction export.cognate(frame)\n\tlocal args = frame:getParent().args\n\t\n\tif args.gloss\
      \ then\n\t\trequire(\"Module:debug\").track(\"cognate/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {},\n\t\t[3] = {alias_of = \"alt\"},\n\t\t[4] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\
      \t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\targs\
      \ = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal source = fetch_source(args[1])\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").format_cognate(\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\t\
      term = args[2],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"]\n\t\t},\n\t\targs[\"\
      sort\"])\nend\n\n\nfunction export.noncognate(frame)\n\treturn export.cognate(frame)\nend\n\n\nfunction export.derived(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3]\
      \ = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\
      \t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\
      \tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_derived(\n\t\tlang, \n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"\
      g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"]\n\t\t},\n\t\targs[\"sort\"])\nend\n\n\nfunction export.inherited(frame)\n\tlocal params = {\n\t\t[1] = {required\
      \ = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"\
      },\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args,\
      \ params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2], \"no family\")\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").format_inherited(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\
      \t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"\
      ]\n\t\t},\n\t\targs[\"sort\"])\nend\n\n\nfunction export.borrowed(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of\
      \ = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\
      \t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\t\
      return require(\"Module:etymology\").format_borrowed(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts\
      \ = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], false, true, \"plain\")\nend\n\n\nfunction export.learned_borrowed(frame)\n\tlocal args = frame:getParent().args\n\t\n\t\
      if args.gloss then\n\t\trequire(\"Module:debug\").track(\"learned_borrowed/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of\
      \ = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"\
      ] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\
      \tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_borrowed(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\
      \tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"], \"\
      learned\")\nend\n\n\nfunction export.orthographic_borrowed(frame)\n\tlocal args = frame:getParent().args\n\t\n\tif args.gloss then\n\t\trequire(\"Module:debug\").track(\"orthographic_borrowed/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required\
      \ = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"\
      },\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\
      \t}\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_borrowed(\n\
      \t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos\
      \ = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"], \"orthographic\")\nend\n\n\nfunction export.unadapted_borrowed(frame)\n\tlocal args = frame:getParent().args\n\t\n\tif args.gloss then\n\t\t\
      require(\"Module:debug\").track(\"unadapted_borrowed/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5]\
      \ = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"\
      ] = {},\n\t\t\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source =\
      \ fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_borrowed(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"\
      id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"], \"unadapted\")\n\
      end\n\nfunction export.calque(frame)\n\tlocal args = frame:getParent().args\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t\
      [5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t\t[\"nocap\"] = {type\
      \ = \"boolean\"},\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t}\n\t\n\t-- More informative error message.\n\tif args[\"etyl lang\"] or args[\"etyl term\"] or args[\"etyl t\"] or args[\"etyl tr\"] then\n\t\terror(\"{{[[Template:calque|calque]]}} no longer\
      \ supports parameters beginning with etyl. \" ..\n\t\t\t\"The parameters supported are similar to those used by \" ..\n\t\t\t\"{{[[Template:der|der]]}}, {{[[Template:inh|inh]]}}, \" ..\n\t\t\t\"{{[[Template:bor|bor]]}}. See [[Template:calque/documentation]]\
      \ for more.\")\n\tend\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\t\n\treturn require(\"Module:etymology\").calque(\n\t\tlang,\n\t\t{\n\t\t\tlang\
      \ = source,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"\
      ],\n\t\targs[\"nocap\"],\n\t\targs[\"notext\"])\nend\n\nfunction export.semantic_loan(frame)\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of =\
      \ \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t\
      [\"nocap\"] = {type = \"boolean\"},\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t\t[\"ger\"] = {type = \"boolean\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang\
      \ = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").format_semantic_loan(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\
      \t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"\
      nocap\"], args[\"notext\"])\nend\n\nfunction export.psm(frame)\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of\
      \ = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"nocap\"] = {type = \"boolean\"\
      },\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal\
      \ sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").psm(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\t\
      tr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"])\nend\n\nlocal function qualifier(content)\n\tif content then\n\
      \t\treturn table.concat{\n\t\t\t'&lt;span class=\"ib-brac qualifier-brac\"&gt;(&lt;/span&gt;',\n\t\t\t'&lt;span class=\"ib-content qualifier-content\"&gt;',\n\t\t\tcontent,\n\t\t\t'&lt;/span&gt;',\n\t\t\t'&lt;span class=\"ib-brac qualifier-brac\"&gt;)&lt;/span&gt;'\n\
      \t\t}\n\tend\nend\n\n\nfunction export.descendant(frame)\n\tlocal namespace = mw.title.getCurrentTitle().nsText\n\t\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = { alias_of = \"gloss\" },\n\t\t[\"g\"] = {list\
      \ = true},\n\t\t[\"gloss\"] = {},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = { alias_of = \"gloss\" },\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"bor\"] = { type = \"boolean\" },\n\t\t[\"der\"\
      ] = { type = \"boolean\" },\n\t\t[\"clq\"] = { type = \"boolean\" },\n\t\t[\"cal\"] = { alias_of = \"clq\" },\n\t\t[\"calq\"] = { alias_of = \"clq\" },\n\t\t[\"calque\"] = { alias_of = \"clq\" },\n\t\t[\"sl\"] = { type = \"boolean\" },\n\t\t[\"semantic\
      \ loan\"] = { alias_of = \"sl\" },\n\t\t[\"alts\"] = { type = \"boolean\" },\n\t\t[\"sclb\"] = { type = \"boolean\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = args[1]\n\tlocal\
      \ term = args[2]\n\tlocal alt = args[3]\n\tlocal gloss = args[\"gloss\"]\n\tlocal tr = args[\"tr\"]\n\tlocal ts = args[\"ts\"]\n\tlocal sc = args[\"sc\"]\n\t\n\tif namespace == \"Template\" then\n\t\tif not ( sc or lang ) then\n\t\t\tsc = \"Latn\"\n\t\t\
      end\n\t\tif not lang then\n\t\t\tlang = \"en\"\n\t\tend\n\t\tif not term then\n\t\t\tterm = \"word\"\n\t\tend\n\tend\n\t\n\tlang = m_languages.getByCode(lang)\n\t\tor require(\"Module:etymology languages\").getByCode(lang)\n\t\tor m_languages.err(lang,\
      \ 1)\n\t\t\n\tlocal entryLang = require(\"Module:etymology\").getNonEtymological(lang)\n\t\n\tif lang:getCode() ~= entryLang:getCode() then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/descendant/etymological]]\n\t\trequire(\"Module:debug\").track(\"\
      descendant/etymological\")\n\t\trequire(\"Module:debug\").track(\"descendant/etymological/\" .. lang:getCode())\n\tend\n\t\n\tif sc then\n\t\tsc = require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\"\
      )\n\tend\n\t\n\tlocal languageName = lang:getCanonicalName()\n\tlanguageName = mw.ustring.gsub(languageName, \"^Proto%-\", \"\")\n\t\n\tlocal link = \"\"\n\t\n\tif term ~= \"-\" then\n\t\tlink = require(\"Module:links\").full_link(\n\t\t\t{\n\t\t\t\tlang\
      \ = entryLang,\n\t\t\t\tsc = sc,\n\t\t\t\tterm = term,\n\t\t\t\talt = alt,\n\t\t\t\tid = args[\"id\"],\n\t\t\t\ttr = tr,\n\t\t\t\tts = ts,\n\t\t\t\tgenders = args[\"g\"],\n\t\t\t\tgloss = gloss,\n\t\t\t\tpos = args[\"pos\"],\n\t\t\t\tlit = args[\"lit\"\
      ],\n\t\t\t},\n\t\t\tnil,\n\t\t\ttrue)\n\telseif ts or gloss then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/descendant/no term]]\n\t\trequire \"Module:debug\".track(\"descendant/no term\")\n\t\tlink = require(\"Module:links\").full_link(\n\t\t\t\
      {\n\t\t\t\tlang = entryLang,\n\t\t\t\tsc = sc,\n\t\t\t\tts = ts,\n\t\t\t\tgloss = gloss,\n\t\t\t},\n\t\t\tnil,\n\t\t\ttrue)\n\t\tlink = link\n\t\t\t:gsub(\"&lt;small&gt;%[Term%?%]&lt;/small&gt; \", \"\")\n\t\t\t:gsub(\"%[%[Category:[^%[%]]+ term requests%]%]\"\
      , \"\")\n\telse -- display no link at all\n\t\t-- [[Special:WhatLinksHere/Template:tracking/descendant/no term or annotations]]\n\t\trequire \"Module:debug\".track(\"descendant/no term or annotations\")\n\tend\n\t\n\tlocal function add_tooltip(text, tooltip)\n\
      \t\treturn '&lt;span title=\"' .. tooltip .. '\"&gt;' .. text .. '&lt;/span&gt;'\n\tend\n\t\n\tlocal label, arrow, alts, calque, semantic_loan\n\t\n\tif args[\"sclb\"] then\n\t\tif sc then\n\t\t\tlabel = sc:getCanonicalName()\n\t\telse\n\t\t\tlabel = require(\"\
      Module:scripts\").findBestScript(term, lang):getCanonicalName()\n\t\tend\n\telse\n\t\tlabel = languageName\n\tend\n\t\n\tif args[\"bor\"] then\n\t\tarrow = add_tooltip(\"→ \", \"borrowed\")\n\telseif args[\"clq\"] then\n\t\tarrow = add_tooltip(\"→ \",\
      \ \"calque\")\n\telseif args[\"sl\"] then\n\t\tarrow = add_tooltip(\"→ \", \"semantic loan\")\n\telseif args[\"der\"] then\n\t\tarrow = add_tooltip(\"⇒ \", \"derived by addition of morphemes\")\n\telse\n\t\tarrow = \"\"\n\tend\n\t\n\tif args[\"alts\"]\
      \ then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/desc/alts]]\n\t\trequire(\"Module:debug\").track(\"desc/alts\")\n\t\talts = require(\"Module:descendants tree\").getAlternativeForms(entryLang, term)\n\tend\n\t\n\tif args[\"clq\"] then\n\t\tcalque\
      \ = \" \" .. qualifier(\"calque\")\n\telse\n\t\tcalque = \"\"\n\tend\n\t\n\tif args[\"sl\"] then\n\t\tsemantic_loan = \" \" .. qualifier(\"semantic loan\")\n\telse\n\t\tsemantic_loan = \"\"\n\tend\n\t\n\treturn table.concat{arrow, label, \": \", link,\
      \ alts or \"\", calque, semantic_loan}\nend\n\nfunction export.misc_variant(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {},\n\t\t[3] = {alias_of = \"alt\"},\n\t\t[4] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"]\
      \ = {},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"nocap\"] = {type = \"\
      boolean\"}, -- should be processed in the template itself\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocat\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\
      \t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\tlocal parts = {}\n\tif not args[\"notext\"] then\n\t\ttable.insert(parts, frame.args[\"text\"])\n\tend\n\tif args[2] or args[\"alt\"] then\n\t\tif not args[\"notext\"\
      ] then\n\t\t\ttable.insert(parts, \" \")\n\t\t\ttable.insert(parts, frame.args[\"oftext\"] or \"of\")\n\t\t\ttable.insert(parts, \" \")\n\t\tend\n\t\ttable.insert(parts, require(\"Module:links\").full_link(\n\t\t\t{\n\t\t\t\tlang = lang,\n\t\t\t\tsc =\
      \ sc,\n\t\t\t\tterm = args[2],\n\t\t\t\talt = args[\"alt\"],\n\t\t\t\tid = args[\"id\"],\n\t\t\t\ttr = args[\"tr\"],\n\t\t\t\tts = args[\"ts\"],\n\t\t\t\tgenders = args[\"g\"],\n\t\t\t\tgloss = args[\"t\"],\n\t\t\t\tpos = args[\"pos\"],\n\t\t\t\tlit =\
      \ args[\"lit\"],\n\t\t\t},\n\t\t\t\"term\",\n\t\t\ttrue))\n\tend\n\tif not args[\"nocat\"] and frame.args[\"cat\"] then\n\t\tlocal categories = {}\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" \" .. frame.args[\"cat\"])\n\t\ttable.insert(parts,\
      \ require(\"Module:utilities\").format_categories(categories, lang, args[\"sort\"]))\n\tend\n\n\treturn table.concat(parts)\nend\n\nfunction export.misc_variant_no_link(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\n\t\t\
      [\"title\"] = {},\n\t\t[\"nocap\"] = {type = \"boolean\"}, -- should be processed in the template itself\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocat\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\n\tif frame.args[\"title2_alias\"]\
      \ then\n\t\tparams[2] = {alias_of = \"title\"}\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\n\tlocal parts = {}\n\tif not args[\"notext\"] then\n\t\ttable.insert(parts,\
      \ args[\"title\"] or frame.args[\"text\"])\n\tend\n\tif not args[\"nocat\"] and frame.args[\"cat\"] then\n\t\tlocal categories = {}\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" \" .. frame.args[\"cat\"])\n\t\ttable.insert(parts, require(\"\
      Module:utilities\").format_categories(categories, lang, args[\"sort\"]))\n\tend\n\n\treturn table.concat(parts)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:34.574Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=57944 t=1555362394459696
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:34 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1347.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 586226976, 489636729, 690474815
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4998763\" pageid=\"4998763\" ns=\"828\" title=\"Module:etymology\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-09-01T22:35:52Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"show language code in error message\" xml:space=\"preserve\">local export = {}\n\n\n--[[\tIf language is an etymology language, iterates through parent languages\n\t\tuntil it finds a\
      \ non-etymology language. ]]\nfunction export.getNonEtymological(lang)\n\twhile lang:getType() == \"etymology language\" do\n\t\tlocal parentCode = lang:getParentCode()\n\t\tlocal parent = require(\"Module:languages\").getByCode(parentCode)\n\t\t\tor require(\"\
      Module:etymology languages\").getByCode(parentCode)\n\t\t\tor require(\"Module:families\").getByCode(parentCode)\n\t\t\n\t\tlang = parent\n--\t\tmw.log(terminfo.lang:getCode() .. \" \" .. terminfo.lang:getType())\n\tend\n\t\n\treturn lang\nend\n\n\nlocal\
      \ function termError(terminfo)\n\tif terminfo.lang:getType() == \"family\" then\n\t\tif terminfo.term and terminfo.term ~= \"-\" then\n\t\t\trequire(\"Module:debug\").track(\"etymology/family/has-term\")\n\t\tend\n\t\t\n\t\tterminfo.term = \"-\"\n\tend\n\
      \treturn terminfo\nend\n\n\nlocal function createLink(terminfo, templateName)\n\tlocal link = \"\"\n\t\n\tif terminfo.term == \"-\" then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/cognate/no-term]]\n\t\t[[Special:WhatLinksHere/Template:tracking/derived/no-term]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/borrowed/no-term]]\n\t\t[[Special:WhatLinksHere/Template:tracking/calque/no-term]]\n\t\t]=]\n\t\trequire(\"Module:debug\").track(templateName .. \"/no-term\")\n\telse\n--\t\tmw.log(terminfo.term)\n\t\tlink\
      \ = \" \" .. require(\"Module:links\").full_link(terminfo, \"term\", true)\n\tend\n\t\n\treturn link\nend\n\n\nfunction export.format_etyl(lang, source, sort_key, categories)\n\tlocal info = {}\n\t\n\t\n\t-- [[Special:WhatLinksHere/Template:tracking/etymology/sortkey]]\n\
      \tif sort_key then\n\t\trequire(\"Module:debug\").track(\"etymology/sortkey\")\n\tend\n\t\n\tif not categories then\n\t\tcategories = {}\n\tend\n\t\n\tif source:getCode() == \"und\" then\n\t\tinfo = {\n\t\t\tdisplay = \"undetermined\",\n\t\t\tcat_name\
      \ = \"other languages\",\n\t\t}\n\telseif source:getCode() == \"mul-tax\" then\n\t\tinfo = {\n\t\t\tdisplay = \"[[w:taxonomic name|taxonomic name]]\",\n\t\t\tcat_name = \"taxonomic names\",\n\t\t}\n\telse\n\t\tinfo.display = source:makeWikipediaLink()\n\
      \t\t\n\t\tif source:getType() == \"family\" then\n\t\t\tinfo.cat_name = source:getCategoryName()\n\t\telse\n\t\t\tinfo.cat_name = source:getCanonicalName()\n\t\tend\n\tend\n\t\n\t-- Add the categories, but only if there is a current language\n\t\n\tif\
      \ lang then\n\t\tlocal m_utilities = require(\"Module:utilities\")\n\t\t\n\t\tif lang:getCode() == source:getCode() then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" twice-borrowed terms\")\n\t\telse\n\t\t\ttable.insert(categories, lang:getCanonicalName()\
      \ .. \" terms derived from \" .. info.cat_name)\n\t\tend\n\t\t\n\t\tcategories = m_utilities.format_categories(categories, lang, sort_key)\n\telse\n\t\tcategories = \"\"\n\tend\n\t\n\treturn \"&lt;span class=\\\"etyl\\\"&gt;\" .. info.display .. categories\
      \ .. \"&lt;/span&gt;\"\nend\n\n\n-- Internal implementation of {{cognate|...}} template\nfunction export.format_cognate(terminfo, sort_key)\n\treturn export.format_derived(nil, terminfo, sort_key, \"cognate\")\nend\n\n\n-- Internal implementation of {{derived|...}}\
      \ template\nfunction export.format_derived(lang, terminfo, sort_key, templateName)\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\t\n\tlocal link = createLink(terminfo,\
      \ templateName or \"derived\")\n\t\n\treturn export.format_etyl(lang, source, sort_key) .. link\nend\n\n\n-- Internal implementation of {{inherited|...}} template\nfunction export.format_inherited(lang, terminfo, sort_key)\n\tlocal source = terminfo.lang\n\
      \n\tterminfo = termError(terminfo)\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tif not lang:hasAncestor(terminfo.lang) and mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\tlocal function showLanguage(lang)\n\t\t\treturn\
      \ (\"[[:Category:%s|%s]] (%s)\")\n\t\t\t\t:format(lang:getCategoryName(), lang:getCanonicalName(), lang:getCode())\n\t\tend\n\t\tlocal postscript\n\t\tlocal ancestors = lang:getAncestors()\n\t\tlocal moduleLink = \"[[Module:\"\n\t\t\t.. require(\"Module:languages\"\
      ).getDataModuleName(lang:getCode())\n\t\t\t.. \"]]\"\n\t\tif not ancestors[1] then\n\t\t\tpostscript = showLanguage(lang) .. \" has no ancestors.\"\n\t\telse\n\t\t\tlocal ancestorList = table.concat(\n\t\t\t\trequire(\"Module:fun\").map(\n\t\t\t\t\tshowLanguage,\n\
      \t\t\t\t\tancestors),\n\t\t\t\t\" and \")\n\t\t\tpostscript = (\"The ancestor%s of %s %s %s.\"):format(\n\t\t\t\tancestors[2] and \"s\" or \"\", lang:getCanonicalName(),\n\t\t\t\tancestors[2] and \"are\" or \"is\", ancestorList)\n\t\tend\n\t\terror((\"\
      %s is not set as an ancestor of %s in %s. %s\")\n\t\t\t:format(showLanguage(terminfo.lang), showLanguage(lang), moduleLink, postscript))\n\tend\n\t\n\tlocal categories = {}\n\t\n\tlocal link = createLink(terminfo, \"inherited\")\n\t\n\ttable.insert(categories,\
      \ lang:getCanonicalName() .. \" terms inherited from \" .. source:getCanonicalName())\n\t\n\treturn export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\n\n-- Internal implementation of {{borrowed|...}} template\nfunction export.format_borrowed(lang,\
      \ terminfo, sort_key, nocap, notext, borrowing_type)\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\t\n\tterminfo = termError(terminfo)\n\t\n\tlocal text = \"\"\n\tlocal categories = {}\n\n\tif lang:getCode()\
      \ == source:getCode() then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" twice-borrowed terms\")\n\telseif source:getType() == \"family\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms borrowed from \" .. source:getCategoryName())\n\
      \telse\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms borrowed from \" .. source:getCanonicalName())\n\tend\n\n\tif not notext then\n\t\tif borrowing_type == \"learned\" then\n\t\t\ttext = \"[[learned borrowing|\" .. (nocap and \"l\"\
      \ or \"L\") .. \"earned borrowing]] from \"\n\t\telseif borrowing_type == \"orthographic\" then\n\t\t\ttext = \"[[orthographic|\" .. (nocap and \"o\" or \"O\") .. \"rthographic]] [[Appendix:Glossary#borrowing|borrowing]] from \"\n\t\telseif borrowing_type\
      \ == \"unadapted\" then\n\t\t\ttext = \"[[Appendix:Glossary#unadapted borrowing|\" .. (nocap and \"u\" or \"U\") .. \"nadapted borrowing]] from \"\n\t\telse\n\t\t\ttext = \"[[Appendix:Glossary#loanword|Borrowing]] from \"\n\t\tend\n\tend\n\n\tif borrowing_type\
      \ == \"learned\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" learnedly borrowed terms\")\n\telseif borrowing_type == \"orthographic\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" orthographically borrowed terms\"\
      )\n\telseif borrowing_type == \"unadapted\" then\n\t\tif source:getType() == \"family\" then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" unadapted borrowings from \" .. source:getCategoryName())\n\t\telse\n\t\t\ttable.insert(categories,\
      \ lang:getCanonicalName() .. \" unadapted borrowings from \" .. source:getCanonicalName())\n\t\tend\n\tend\n\t\n\tlocal link = createLink(terminfo, \"borrowed\")\n\t\n\treturn text .. export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\
      \n\n-- Internal implementation of {{calque|...}} template\nfunction export.calque(lang, terminfo, sort_key, nocap, notext)\n\tlocal result = \"\"\n\t\n\tif not notext then\n\t\tresult = result .. \"[[Appendix:Glossary#calque|\" .. (nocap and \"c\" or \"\
      C\") .. \"alque]] of \"\n\tend\n\t\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\n\tlocal categories = {}\n\n\tif source:getType() == \"family\" then\n\t\ttable.insert(categories,\
      \ lang:getCanonicalName() .. \" terms calqued from \" .. source:getCategoryName())\n\telse\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms calqued from \" .. source:getCanonicalName())\n\tend\n\t\n\tlocal link = createLink(terminfo, \"\
      calque\")\n\t\n\tresult = result .. \" \" ..  export.format_etyl(lang, source, sort_key, categories) .. link\n\t\n\treturn result\nend\n\n\n-- Internal implementation of {{semantic loan|...}} template\nfunction export.format_semantic_loan(lang, terminfo,\
      \ sort_key, nocap, notext)\n\tif nocap then\n\t\trequire(\"Module:debug\").track(\"semantic_loan/nocap\")\n\tend\n\t\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\n\
      \tlocal text = \"\"\n\tlocal categories = {}\n\n\tif source:getType() == \"family\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" semantic loans from \" .. source:getCategoryName())\n\telse\n\t\ttable.insert(categories, lang:getCanonicalName()\
      \ .. \" semantic loans from \" .. source:getCanonicalName())\n\tend\n\t\n\tif not notext then\n\t\ttext = \"[[w:Semantic loan|\" .. (nocap and \"s\" or \"S\") .. \"emantic loan]] from \"\n\tend\n\t\n\tlocal link = createLink(terminfo, \"semantic_loan\"\
      )\n\t\n\treturn text .. export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\n-- Internal implementation of {{phono-semantic matching|...}} template\nfunction export.psm(lang, terminfo, sort_key, nocap, notext)\n\tif nocap then\n\t\trequire(\"\
      Module:debug\").track(\"psm/nocap\")\n\tend\n\t\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\n\tlocal text = \"\"\n\tlocal categories = {}\n\n\tif source:getType()\
      \ == \"family\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" phono-semantic matchings \")\n\telse\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" phono-semantic matchings \")\n\tend\n\t\n\tif not notext then\n\t\ttext =\
      \ \"[[w:Phono-semantic matching|\" .. (nocap and \"p\" or \"P\") .. \"hono-semantic matching]] of \"\n\tend\n\t\n\tlocal link = createLink(terminfo, \"psm\")\n\t\n\treturn text .. export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\n\
      return export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:36.174Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc%2Fredundant%2Ffa-Arab&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47689 t=1555362396080788
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:36 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 577128239, 826227704, 689065069
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc/redundant/fa-Arab" missing="" /></pages></query></api>
