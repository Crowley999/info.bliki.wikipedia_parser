!tape
name: eye_dialect
interactions:
- recorded: 2019-04-15T21:08:17.885Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=User%3AJberkel%2Fbliki-testcases%2Feye_dialect&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55463 t=1555362497785464
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:17 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Set-Cookie: WMF-Last-Access=15-Apr-2019;Path=/;HttpOnly;secure;Expires=Fri, 17 May 2019 12:00:00 GMT, WMF-Last-Access-Global=15-Apr-2019;Path=/;Domain=.wiktionary.org;HttpOnly;secure;Expires=Fri, 17 May 2019 12:00:00 GMT, GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; Path=/; secure; Domain=.wiktionary.org
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;https=1;nocookies=1
      X-Cache: cp1087 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 736000086, 563295041, 698754728
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><normalized><n from="User:Jberkel/bliki-testcases/eye_dialect" to="User:Jberkel/bliki-testcases/eye dialect" /></normalized><pages><page _idx="5791680" pageid="5791680" ns="2" title="User:Jberkel/bliki-testcases/eye dialect"><revisions><rev user="WingerBot" timestamp="2019-04-02T09:57:07Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="standardize {{eye dialect}} to {{eye dialect of}}" xml:space="preserve"># {{eye dialect of|for|from=NotFound|lang=en}}</rev></revisions></page></pages></query></api>
- recorded: 2016-09-02T21:43:49.967Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aeye+dialect&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Porto:41.15:-8.61:v4; WMF-Last-Access=02-Sep-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=23967 t=1472852630048280
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 02 Sep 2016 21:43:50 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1223.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=02-Sep-2016;https=1
      X-Cache: cp1052 pass, cp3040 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.7
      X-Varnish: 4131246323, 3093616462, 2651020590
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="4434712" pageid="4434712" ns="10" title="Template:eye dialect"><revisions><rev user="Ready Steady Yeti" timestamp="2014-05-23T23:38:21Z" comment="If there is no redirect, people will get confused." contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">#REDIRECT [[Template:eye dialect of]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:08:18.038Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aeye+dialect+of&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=35465 t=1555362497958272
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1627'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:18 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1344.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 672055923, 238083035, 702648925
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"908935\" pageid=\"908935\" ns=\"10\" title=\"Template:eye dialect of\"><revisions><rev user=\"Rua\" timestamp=\"2019-03-31T20:35:08Z\"\
      \ contentformat=\"text/x-wiki\" contentmodel=\"wikitext\" comment=\"\" xml:space=\"preserve\">{{#invoke:form of/templates|form_of_t|[[eye dialect]] spelling of|withcap=1|ignore=from:list|ignore2=nodot:type=boolean|ignore3=dot|cat=eye dialect}}&lt;!--\n\
      \n--&gt;{{#if:{{{from|}}}&lt;!--\n--&gt;|&lt;!--\n  --&gt;&lt;span class='use-with-mention'&gt;, representing &lt;!--\n  \n  --&gt;{{#ifexist:Template:accent:{{{from}}}&lt;!--\n  --&gt;|&lt;!--\n    --&gt;{{accent:{{{from}}}}}&lt;!--\n  --&gt;|&lt;!--\n\
      \    --&gt;{{#invoke:labels/templates|show_from}}&lt;!--\n  --&gt;}}&lt;!--\n  \n  --&gt; {{#invoke:languages/templates|getByCode|{{#if:{{{lang|}}}|{{{lang|}}}|{{{1|en}}}}}|getCanonicalName}}&lt;!--\n  --&gt;&lt;/span&gt;&lt;!--\n--&gt;}}&lt;!--\n\n--&gt;{{#if:{{{dot|}}}|{{{dot|}}}|{{#if:{{{nodot|}}}||.}}}}&lt;!--\n\
      \n--&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>"
- recorded: 2016-09-02T21:43:50.360Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Am&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Porto:41.15:-8.61:v4; WMF-Last-Access=02-Sep-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=21569 t=1472852630442480
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 02 Sep 2016 21:43:50 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=02-Sep-2016;https=1
      X-Cache: cp1053 pass, cp3043 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.7
      X-Varnish: 2764920781, 2096023140, 2651021810
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="4580450" pageid="4580450" ns="10" title="Template:m"><revisions><rev user="CodeCat" timestamp="2014-10-30T23:32:44Z" comment="Redirected page to [[Template:mention]]" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">#REDIRECT [[Template:mention]]</rev></revisions></page></pages></query></api>
- recorded: 2016-09-02T21:43:50.627Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Amention&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Porto:41.15:-8.61:v4; WMF-Last-Access=02-Sep-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=21949 t=1472852630703310
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 02 Sep 2016 21:43:50 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=02-Sep-2016;https=1
      X-Cache: cp1054 pass, cp3040 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.7
      X-Varnish: 1207019172, 3093617182, 2651022363
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="4064248" pageid="4064248" ns="10" title="Template:mention"><revisions><rev user="Daniel Carrero" timestamp="2016-06-28T04:54:37Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:links/templates|l_term_t|face=term&lt;noinclude&gt;|demo=term&lt;/noinclude&gt;}}&lt;!--

      --&gt;{{#if:{{{lang|}}}|[[Category:m with lang]]}}&lt;!--

      --&gt;{{#ifeq:{{PAGENAME}}|RecentChanges||&lt;!--
          --&gt;{{#ifeq:{{{1|}}}|und|[[Category:Undetermined language links]]}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;{{redlink category|{{{1|}}}|{{{2|}}}|template=m}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2016-09-02T21:43:50.976Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Porto:41.15:-8.61:v4; WMF-Last-Access=02-Sep-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=25181 t=1472852631050823
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 02 Sep 2016 21:43:51 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1234.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=02-Sep-2016;https=1
      X-Cache: cp1065 pass, cp3031 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.7
      X-Varnish: 1922399665, 2016238123, 2651024200
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4282542\" pageid=\"4282542\" ns=\"828\" title=\"Module:links/templates\"><revisions><rev user=\"CodeCat\" timestamp=\"2016-07-25T15:56:25Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local m_links = require(&quot;Module:links&quot;)\n\nlocal export = {}\n\n-- Used in [[Template:l]] and [[Template:m]]\nfunction export.l_term_t(frame)\n\tlocal face = frame.args[&quot;face&quot;]\n\t\
      local allowSelfLink = frame.args[&quot;notself&quot;]; allowSelfLink = not allowSelfLink or allowSelfLink == &quot;&quot;\n\t\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = {alias_of = &quot;gloss&quot;},\n\t\
      \t[&quot;g&quot;] = {list = true},\n\t\t[&quot;gloss&quot;] = {},\n\t\t[&quot;id&quot;] = {},\n\t\t[&quot;lit&quot;] = {},\n\t\t[&quot;pos&quot;] = {},\n\t\t[&quot;tr&quot;] = {},\n\t\t[&quot;sc&quot;] = {},\n\t}\n\t\n\t-- Compatibility mode for {{term}}.\n\
      \t-- If given a nonempty value, the function uses lang= to specify the\n\t-- language, and all the positional parameters shift one number lower.\n\tlocal compat = (frame.args[&quot;compat&quot;] or &quot;&quot;) ~= &quot;&quot;\n\t\n\tif compat then\n\t\
      \tparams[&quot;lang&quot;] = {},\n\t\ttable.remove(params, 1)\n\tend\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal lang = args[compat and &quot;lang&quot; or 1]\n\t\n\t-- Tracking for missing\
      \ language or und\n\tif not lang then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;link/no lang&quot;)\n\telseif lang == &quot;und&quot; then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;link/und&quot;)\n\tend\n\t\n\tlang = lang or &quot;und&quot;\n\
      \tlocal sc = args[&quot;sc&quot;]\n\t\n\tlocal term = args[(compat and 1 or 2)]\n\tlocal alt = args[(compat and 2 or 3)]\n\t\n\t-- Check parameters\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot;\
      \ .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\tif not term and not alt and frame.args[&quot;demo&quot;]\
      \ then\n\t\tterm = frame.args[&quot;demo&quot;]\n\tend\n\t\n\t-- Forward the information to full_link\n\treturn m_links.full_link({lang = lang, sc = sc, term = term, alt = alt, id = args[&quot;id&quot;], tr = args[&quot;tr&quot;], genders = args[&quot;g&quot;],\
      \ gloss = args[&quot;gloss&quot;], pos = args[&quot;pos&quot;], lit = args[&quot;lit&quot;]}, face, allowSelfLink)\nend\n\nfunction export.ll(frame)\n\tlocal args = frame:getParent().args\n\tlocal allowSelfLink = args[&quot;notself&quot;]; allowSelfLink\
      \ = not allowSelfLink or allowSelfLink == &quot;&quot;\n\t\n\tlocal lang = args[1]\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\t\n\tlocal\
      \ text = args[2]\n\tlocal alt = args[3]\n\tif text == &quot;&quot; then return alt or &quot;&quot; end\n\tif alt == &quot;&quot; then alt = nil end\n\t\n\tlocal id = args[&quot;id&quot;]; if id == &quot;&quot; then id = nil end\n\t\n\treturn m_links.language_link(text,\
      \ alt, lang, id, allowSelfLink)\nend\n\nfunction export.def_t(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = &quot;&quot;},\n\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\
      \treturn m_links.english_links(args[1])\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:18.598Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58420 t=1555362498469978
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:18 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1281.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 193131658, 490784487, 705167701
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3935515\" pageid=\"3935515\" ns=\"828\" title=\"Module:links\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T18:59:00Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\t[[Unsupported titles]] and pages with high\n\tmemory usage are listed at [[Module:links/data]].\n\t\n\tOther modules used:\n\t\t[[Module:script utilities]]\n\
      \t\t[[Module:scripts]]\n\t\t[[Module:languages]] and its submodules\n\t\t[[Module:gender and number]]\n\t\t[[Module:utilities]]\n\t\t[[Module:string]]\n\t\t[[Module:debug]]\n]=]\n\n-- These are prefixed with u to avoid confusion with the default string\
      \ methods\n-- of the same name.\nlocal usub = mw.ustring.sub\n\nlocal table_insert = table.insert\nlocal table_concat = table.concat\n\nlocal ignore_cap = {\n\t[\"ko\"] = true,\n}\n\nlocal phonetic_extraction = {\n\t[\"th\"] = \"Module:th\",\n\t[\"km\"\
      ] = \"Module:km\",\n}\n\nlocal pos_tags = {\n\t[\"a\"] = \"adjective\",\n\t[\"adv\"] = \"adverb\",\n\t[\"int\"] = \"interjection\",\n\t[\"n\"] = \"noun\",\n\t[\"pron\"] = \"pronoun\",\n\t[\"v\"] = \"verb\",\n\t[\"vi\"] = \"intransitive verb\",\n\t[\"vt\"\
      ] = \"transitive verb\",\n\t[\"vti\"] = \"transitive and intransitive verb\",\n}\n\nlocal unsupported_titles\nfunction export.getLinkPage(target, lang)\n\tunsupported_titles = unsupported_titles or mw.loadData(\"Module:links/data\").unsupported_titles\n\
      \tif unsupported_titles[target] then\n\t\treturn \"Unsupported titles/\" .. unsupported_titles[target]\n\tend\n\t\n\t-- If the link contains unexpanded template parameters, then don't create a link.\n\tif target:find(\"{{{\") then\n\t\treturn nil\n\tend\n\
      \t\n\tif target:sub(1, 1) == \":\" or target:sub(1, 2) == \"w:\" or target:sub(1, 10) == \"wikipedia:\" then\n\t\treturn target\n\tend\n\t\n\t-- Remove diacritics from the page name\n\ttarget = lang:makeEntryName(target)\n\t\n\tif target:sub(1, 1) == \"\
      /\" then\n\t\treturn \":\" .. target\n\t\n\t-- Link to appendix for reconstructed terms and terms in appendix-only languages\n\telseif target:sub(1, 1) == \"*\" and #target &gt; 1 then\n\t\tif lang:getCode() == \"und\" then\n\t\t\treturn nil\n\t\tend\n\
      \t\t\n\t\ttarget = \"Reconstruction:\" .. lang:getCanonicalName() .. \"/\" .. usub(target, 2)\n\telseif lang:getType() == \"reconstructed\" then\n\t\terror(\"The specified language \" .. lang:getCanonicalName()\n\t\t\t.. \" is unattested, while the given\
      \ word is not marked with '*' to indicate that it is reconstructed\")\n\telseif lang:getType() == \"appendix-constructed\" then\n\t\ttarget = \"Appendix:\" .. lang:getCanonicalName() .. \"/\" .. target\n\tend\n\t\n\treturn target\nend\n\n-- Make a language-specific\
      \ link from given link's parts\nlocal function makeLangLink(link, lang, id, allowSelfLink)\n\t-- Temporary tracking code\n\tlocal langCode = lang:getCode()\n\tif langCode == \"se\" or langCode == \"sia\" or langCode:find(\"^sm[ajns]$\")\n\t\t\tor langCode:find(\"\
      ^sj[dektu]$\") then\n\t\tif link.display and link.display:find(\"'\") then\n\t\t\trequire(\"Module:debug\").track(\"links/Sami apostrophe display\")\n\t\telseif link.target and link.target:find(\"'\") then\n\t\t\trequire(\"Module:debug\").track(\"links/Sami\
      \ apostrophe target\")\n\t\tend\n\tend\n\t\n\t-- Find fragments (when link didn't come from parseLink).\n\t-- Prevents {{l|en|word#Etymology 2|word}} from linking to [[word#Etymology 2#English]].\n\tif link.fragment == nil then\n\t\t-- Replace numeric\
      \ character references with the corresponding character (&amp;#29; → '),\n\t\t-- as they contain #, which causes the numeric character reference to be\n\t\t-- misparsed (wa'a → wa&amp;#29;a → pagename wa&amp;, fragment 29;a).\n\t\tlink.target = link.target:gsub(\"\
      &amp;#(%d+);\",\n\t\t\tfunction(number) return mw.ustring.char(tonumber(number)) end)\n\t\tlocal first, second = link.target:match(\"^([^#]+)#(.+)$\")\n\t\tif first then\n\t\t\tlink.target, link.fragment = first, second\n\t\tend\n\tend\n\t\n\t-- If there\
      \ is no display form, then create a default one\n\tif not link.display then\n\t\tlink.display = link.target\n\t\t\n\t\t-- Strip the prefix from the displayed form\n\t\t-- TODO: other interwiki links?\n\t\tif link.display:sub(1, 1) == \":\" and not mw.loadData(\"\
      Module:links/data\").unsupported_titles[link.display] then\n\t\t\tlink.display = link.display:sub(2) -- remove colon from beginning\n\t\telse\n\t\t\tlocal prefix = link.display:match(\"^([^:]+):\")\n\t\t\tlocal prefixes = {\n\t\t\t\tw = true,\n\t\t\t\t\
      wikipedia = true,\n\t\t\t}\n\t\t\t\n\t\t\tif prefixes[prefix] then\n\t\t\t\tlink.display = link.display:sub(#prefix + 2) -- remove prefix plus colon\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Process the target\n\tlink.target = export.getLinkPage(link.target,\
      \ lang)\n\t\n\tif not link.target then\n\t\treturn link.display\n\tend\n\t\n\t-- If the target is the same as the current page and there is no sense id\n\t-- and linking to the same page hasn't been turned on, then return a \"self-link\"\n\t-- like the\
      \ software does.\n\tif not (allowSelfLink or id) and link.target:gsub(\"^:\", \"\") == mw.title.getCurrentTitle().prefixedText then\n\t\treturn \"&lt;strong class=\\\"selflink\\\"&gt;\" .. link.display .. \"&lt;/strong&gt;\"\n\tend\n\t\n\t--[[\n\t\tAdd\
      \ fragment\n\t\tDo not add a section link to \"Undetermined\", as such sections do not exist and are invalid.\n\t\tTabbedLanguages handles links without a section by linking to the \"last visited\" section,\n\t\tbut adding \"Undetermined\" would break\
      \ that feature.\n\t\tFor localized prefixes that make syntax error, please use the format: [\"xyz\"] = true,\n\t]]\n\tlocal prefix = link.target:match(\"^:?([^:]+):\")\n\tlocal prefixes = {\n\t\tw = true,\n\t\twikipedia = true,\n\t\tCategory = true,\n\t\
      }\n\t\n\tif not prefixes[prefix] then\n\t\tif link.fragment or link.target:find(\"#$\") then\n\t\t\trequire(\"Module:debug\").track {\n\t\t\t\t\"links/fragment\",\n\t\t\t\t\"links/fragment/\" .. lang:getCode()\n\t\t\t}\n\t\tend\n\t\t\n\t\tif not link.fragment\
      \ and lang:getCode() ~= \"und\" then\n\t\t\tif id then\n\t\t\t\tlink.fragment = require(\"Module:utilities\").make_id(lang, id)\n\t\t\telseif not mw.ustring.find(link.target, \"^Appendix:\")\n\t\t\t\t\tand not mw.ustring.find(link.target, \"^Reconstruction:\"\
      ) then\n\t\t\t\tlink.fragment = lang:getCanonicalName()\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- This allows linking to pages like [[sms:a]] without it being treated weirdly.\n\t\tlink.target = link.target:gsub(\":\", \"&amp;#x3a;\")\n\tend\n\t\n\treturn \"[[\"\
      \ .. link.target .. (link.fragment and \"#\" .. link.fragment or \"\") .. \"|\" .. link.display .. \"]]\"\nend\n\n\n-- Split a link into its parts\nlocal function parseLink(linktext)\n\tlocal link = { target = linktext }\n\tlocal first, second = link.target:match(\"\
      ^([^|]+)|(.+)$\")\n\t\n\tif first then\n\t\tlink.target = first\n\t\tlink.display = second\n\telse\n\t\tlink.display = link.target\n\tend\n\t\n\tfirst, second = link.target:match(\"^(.+)#(.+)$\")\n\t\n\tif first then\n\t\tlink.target = first\n\t\tlink.fragment\
      \ = second\n\telse\n\t\t-- So that makeLangLink does not look for a fragment again\n\t\tlink.fragment = false\n\tend\n\t\n\treturn link\nend\n\n\n-- Creates a basic wikilink to the given term. If the text already contains\n-- links, these are replaced\
      \ with links to the correct section.\nfunction export.language_link(data, allowSelfLink, dontLinkRecons)\n\tif type(data) ~= \"table\" then\n\t\terror(\"The first argument to the function language_link must be a table. See Module:links/documentation for\
      \ more information.\")\n\tend\n\t\n\tlocal text = data.term\n\t\n\tif ignore_cap[data.lang:getCode()] and text then\n\t\ttext = text:gsub(\"%^\", \"\")\n\tend\n\t\n\t-- If the text begins with * and another character,\n\t-- then act as if each link begins\
      \ with *\n\tlocal allReconstructed = false\n\t\n\tif text:find(\"^*.\") then\n\t\tallReconstructed = true\n\tend\n\t\n\t-- Do we have embedded wikilinks?\n\tif text:find(\"[[\", nil, true) then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/links/alt-ignored]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/links/id-ignored]]\n\t\t]=]\n\t\t\n\t\tif data.alt then\n\t\t\trequire(\"Module:debug\").track(\"links/alt-ignored\")\n\t\t\tmw.log(\"(from Module:links)\", \"text with embedded wikilinks:\", text,\n\t\t\t\t\
      \"ignored alt:\", data.alt, \"lang:\", data.lang:getCode())\n\t\tend\n\t\t\n\t\tif data.id then\n\t\t\trequire(\"Module:debug\").track(\"links/id-ignored\")\n\t\t\tmw.log(\"(from Module:links)\", \"text with embedded wikilinks:\", text,\n\t\t\t\t\"ignored\
      \ id:\", data.id, \"lang:\", data.lang:getCode())\n\t\tend\n\t\t\n\t\t-- Begins and ends with a wikilink tag\n\t\tif text:find(\"^%[%[(.+)%]%]$\") then\n\t\t\t-- There are no [ ] in between.\n\t\t\t-- This makes the wikilink tag redundant.\n\t\t\tif text:find(\"\
      ^%[%[[^%[%]]+%]%]$\") then\n\t\t\t\trequire(\"Module:debug\").track(\"links/redundant wikilink\")\n\t\t\telse\n\t\t\t\tlocal temp = text:gsub(\"^%[%[(.+)%]%]$\", \"%1\")\n\t\t\t\ttemp = temp:gsub(\"%]%], %[%[\", \"|\")\n\t\t\t\t\n\t\t\t\tif not temp:find(\"\
      [%[%]]\") then\n\t\t\t\t\trequire(\"Module:debug\").track(\"links/list\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\ttext = text:gsub(\"%[%[([^%]]+)%]%]\",\n\t\t\tfunction(linktext)\n\t\t\t\tlocal link = parseLink(linktext)\n\t\t\t\t\n\t\t\t\tif allReconstructed\
      \ then\n\t\t\t\t\tlink.target = \"*\" .. link.target\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\treturn makeLangLink(link, data.lang, data.id, allowSelfLink, dontLinkRecons)\n\t\t\tend)\n\t\t\n\t\t-- Remove the extra * at the beginning if it's immediately followed\n\
      \t\t-- by a link whose display begins with * too\n\t\tif allReconstructed then\n\t\t\ttext = text:gsub(\"^%*%[%[([^|%]]+)|%*\", \"[[%1|*\")\n\t\tend\n\telse\n\t\t-- There is no embedded wikilink, make a link using the parameters.\n\t\ttext = makeLangLink({\
      \ target = text, display = data.alt }, data.lang, data.id, allowSelfLink, dontLinkRecons)\n\tend\n\t\n\treturn text\nend\n\nfunction export.mark(text, itemType, face, lang)\n\tlocal tag = { \"\", \"\" }\n\t\n\tif itemType == \"gloss\" then\n\t\ttag = {\
      \ '&lt;span class=\"mention-gloss-double-quote\"&gt;“&lt;/span&gt;&lt;span class=\"mention-gloss\"&gt;',\n\t\t\t'&lt;/span&gt;&lt;span class=\"mention-gloss-double-quote\"&gt;”&lt;/span&gt;' }\n\telseif itemType == \"tr\" then\n\t\tif face == \"term\"\
      \ then\n\t\t\ttag = { '&lt;span lang=\"' .. lang:getCode() .. '\" class=\"tr mention-tr Latn\"&gt;',\n\t\t\t\t'&lt;/span&gt;' }\n\t\telse\n\t\t\ttag = { '&lt;span lang=\"' .. lang:getCode() .. '\" class=\"tr Latn\"&gt;', '&lt;/span&gt;' }\n\t\tend\n\t\
      elseif itemType == \"ts\" then\n\t\ttag = { '&lt;span class=\"ts mention-ts Latn\"&gt;/', '/&lt;/span&gt;' }\n\telseif itemType == \"pos\" then\n\t\ttag = { '&lt;span class=\"ann-pos\"&gt;', '&lt;/span&gt;' }\n\telseif itemType == \"annotations\" then\n\
      \t\ttag = { '&lt;span class=\"mention-gloss-paren annotation-paren\"&gt;(&lt;/span&gt;',\n\t\t\t'&lt;span class=\"mention-gloss-paren annotation-paren\"&gt;)&lt;/span&gt;' }\n\tend\n\t\n\tif type(text) == \"string\" then\n\t\treturn tag[1] .. text .. tag[2]\n\
      \telse\n\t\treturn \"\"\n\tend\nend\n\n-- Format the annotations (things following the linked term)\nfunction export.format_link_annotations(data, face)\n\tlocal output = {}\n\t\n\t-- Interwiki link\n\tif data.interwiki then\n\t\ttable_insert(output, data.interwiki)\n\
      \tend\n\t\n\t-- Genders\n\tif type(data.genders) ~= \"table\" then\n\t\tdata.genders = { data.genders }\n\tend\n\t\n\tif data.genders and #data.genders &gt; 0 then\n\t\tlocal m_gen = require(\"Module:gender and number\")\n\t\ttable_insert(output, \"&amp;nbsp;\"\
      \ .. m_gen.format_list(data.genders, data.lang))\n\tend\n\t\n\tlocal annotations = {}\n\t\n\t-- Transliteration and transcription\n\tif data.tr or data.ts then\n\t\tlocal kind\n\t\tif face == \"term\" then\n\t\t\tkind = face\n\t\telse\n\t\t\tkind = \"\
      default\"\n\t\tend\n\t\t\n\t\tif data.tr and data.ts then\n\t\t\ttable_insert(annotations,\n\t\t\t\trequire(\"Module:script utilities\").tag_translit(data.tr, data.lang, kind)\n\t\t\t\t.. \" \" .. export.mark(data.ts, \"ts\"))\n\t\telseif data.ts then\n\
      \t\t\ttable_insert(annotations, export.mark(data.ts, \"ts\"))\n\t\telse\n\t\t\ttable_insert(annotations,\n\t\t\t\trequire(\"Module:script utilities\").tag_translit(data.tr, data.lang, kind))\n\t\tend\n\tend\n\t\n\t-- Gloss/translation\n\tif data.gloss\
      \ then\n\t\ttable_insert(annotations, export.mark(data.gloss, \"gloss\"))\n\tend\n\t\n\t-- Part of speech\n\tif data.pos then\n\t\t-- debug category for pos= containing transcriptions\n\t\tif data.pos:find(\"/[^&gt;&lt;]*/\") then\n\t\t\tdata.pos = data.pos\
      \ .. \"[[Category:links likely containing transcriptions in pos]]\"\n\t\tend\n\n\t\ttable_insert(annotations, export.mark(pos_tags[data.pos] or data.pos, \"pos\"))\n\tend\n\t\n\t-- Literal/sum-of-parts meaning\n\tif data.lit then\n\t\ttable_insert(annotations,\
      \ \"literally \" .. export.mark(data.lit, \"gloss\"))\n\tend\n\t\n\tif #annotations &gt; 0 then\n\t\ttable_insert(output, \" \" .. export.mark(table_concat(annotations, \", \"), \"annotations\"))\n\tend\n\t\n\treturn table_concat(output)\nend\n\n-- A version\
      \ of {{l}} or {{m}} that can be called from other modules too\nfunction export.full_link(data, face, allowSelfLink, dontLinkRecons)\n\tif type(data) ~= \"table\" then\n\t\terror(\"The first argument to the function full_link must be a table. \"\n\t\t\t\
      .. \"See Module:links/documentation for more information.\")\n\tend\n\t\n\t-- Create the link\n\tlocal output = {}\n\tlocal categories = {}\n\tlocal link = \"\"\n\tlocal annotations\n\t\n\t--local m_utilities = require(\"Module:utilities\")\n\t\n\t-- Is\
      \ there any text to show?\n\tif (data.term or data.alt) then\n\t\t-- Try to detect the script if it was not provided\n\t\tif not data.sc then\n\t\t\tdata.sc = require(\"Module:scripts\").findBestScript(data.alt or data.term, data.lang)\n\t\telse\n\t\t\t\
      -- Track uses of sc parameter\n\t\t\tlocal best = require(\"Module:scripts\").findBestScript(data.alt or data.term, data.lang)\n\t\t\trequire(\"Module:debug\").track(\"links/sc\")\n\t\t\t\n\t\t\tif data.sc:getCode() == best:getCode() then\n\t\t\t\trequire(\"\
      Module:debug\").track(\"links/sc/redundant\")\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/redundant/\" .. data.sc:getCode())\n\t\t\telse\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/needed\")\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/needed/\"\
      \ .. data.sc:getCode())\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal class = \"\"\n\t\t\n\t\tif data.accel then\n\t\t\tlocal form = data.accel.form and data.accel.form .. \"-form-of\" or \"\"\n\t\t\tlocal gender = data.accel.gender and \"gender-\" .. data.accel.gender\
      \ or \"\"\n\t\t\tlocal translit = data.accel.translit and \"transliteration-\" .. data.accel.translit or \"\"\n\t\t\t-- This is decoded again by [[WT:ACCEL]].\n\t\t\tlocal lemma = data.accel.lemma and \"origin-\" .. data.accel.lemma:gsub(\"%%\", \".\"\
      ):gsub(\" \", \"_\") or \"\" \n\t\t\tlocal lemma_translit = data.accel.lemma_translit and \"origin-transliteration-\" .. data.accel.lemma_translit or \"\"\n\t\t\tlocal no_store = data.accel.no_store and \"form-of-nostore\" or \"\"\n\t\t\t\n\t\t\taccel\
      \ =\n\t\t\t\tform .. \" \" ..\n\t\t\t\tgender .. \" \" ..\n\t\t\t\ttranslit .. \" \" ..\n\t\t\t\tlemma .. \" \" ..\n\t\t\t\tlemma_translit .. \" \" ..\n\t\t\t\tno_store .. \" \"\n\t\t\t\n\t\t\tclass = \"form-of lang-\" .. data.lang:getCode() .. \" \" ..\
      \ accel\n\t\tend\n\t\t\n\t\t-- Only make a link if the term has been given, otherwise just show the alt text without a link\n\t\tlink = require(\"Module:script utilities\").tag_text(\n\t\t\tdata.term and export.language_link(data, allowSelfLink, dontLinkRecons)\n\
      \t\t\tor data.alt, data.lang, data.sc, face, class)\n\telse\n\t\t--[[\tNo term to show.\n\t\t\t\tIs there at least a transliteration we can work from?\t]]\n\t\tlink = require(\"Module:script utilities\").request_script(data.lang, data.sc)\n\t\t\n\t\tif\
      \ link == \"\" or not data.tr or data.tr == \"-\" then\n\t\t\t-- No link to show, and no transliteration either. Show a term request.\n\t\t\tlocal category = \"\"\n\t\t\t\n\t\t\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\t\t\ttable_insert(categories,\
      \ \"[[Category:\" .. data.lang:getCanonicalName() .. \" term requests]]\")\n\t\t\tend\n\t\t\t\n\t\t\tlink = \"&lt;small&gt;[Term?]&lt;/small&gt;\"\n\t\tend\n\tend\n\t\n\ttable_insert(output, link)\n\t\n\tif data.tr == \"\" or data.tr == \"-\" then\n\t\t\
      data.tr = nil\n\t\n\telseif phonetic_extraction[data.lang:getCode()] then\n\t\tlocal m_phonetic = require(phonetic_extraction[data.lang:getCode()])\n\t\tdata.tr = data.tr or m_phonetic.getTranslit(export.remove_links(data.term))\n\t\n\telseif (data.term\
      \ or data.alt) and not data.sc:getCode():find(\"Lati?n\") then\n\t\t\n\t\t-- Try to generate a transliteration, unless transliteration has been\n\t\t-- supplied and we are in a high-memory entry.\n\t\tif not (data.tr and mw.loadData(\"Module:links/data\"\
      ).high_memory_entries[mw.title.getCurrentTitle().text]) then\n\t\t\tlocal automated_tr = data.lang:transliterate(export.remove_links(data.alt or data.term), data.sc)\n\t\t\t\n\t\t\tif automated_tr then\n\t\t\t\tlocal manual_tr = data.tr\n\t\t\t\t\n\t\t\
      \t\tif manual_tr then\n\t\t\t\t\tif manual_tr == automated_tr then\n\t\t\t\t\t\ttable_insert(categories,\n\t\t\t\t\t\t\t\"[[Category:Terms with redundant transliterations]]\"\n\t\t\t\t\t\t\t\t\t.. \"[[Category:Terms with redundant transliterations/\" ..\
      \ data.lang:getCode() .. \"]]\")\n\t\t\t\t\telse\n\t\t\t\t\t\t-- Prevents Arabic root categories from flooding the tracking categories.\n\t\t\t\t\t\tif mw.title.getCurrentTitle().nsText ~= \"Category\" then\n\t\t\t\t\t\t\ttable_insert(categories,\n\t\t\
      \t\t\t\t\t\t\"[[Category:Terms with manual transliterations different from the automated ones]]\"\n\t\t\t\t\t\t\t\t\t\t.. \"[[Category:Terms with manual transliterations different from the automated ones/\" .. data.lang:getCode() .. \"]]\")\n\t\t\t\t\t\
      \tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif (not manual_tr) or data.lang:overrideManualTranslit() then\n\t\t\t\t\tdata.tr = automated_tr\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Link to the transliteration entry for languages that\
      \ require this\n\tif data.tr and data.lang:link_tr() then\n\t\tdata.tr = export.language_link { lang = data.lang, term = data.tr }\n\tend\n\t\n\ttable_insert(output, export.format_link_annotations(data, face))\n\t\n\treturn table_concat(output) .. table_concat(categories)\n\
      end\n\n\n--[[\tStrips links: deletes category links,\n\t\tthe targets of piped links,\n\t\tand all double square brackets.\t\t\t]]\nfunction export.remove_links(text)\n\tif type(text) == \"table\" then\n\t\ttext = text.args[1]\n\tend\n\t\n\tif not text\
      \ or text == \"\" then\n\t\treturn \"\"\n\tend\n\t\n\ttext = mw.ustring.gsub(text, \"%[%[Category:[^|%]]-|?[^|%]]-%]%]\", \"\")\n\ttext = text:gsub(\"%[%[[^|%]]-|\", \"\")\n\ttext = text:gsub(\"%[%[\", \"\")\n\ttext = text:gsub(\"%]%]\", \"\")\n\t\n\t\
      return text\nend\n\nfunction export.english_links(text)\n\tlocal lang = require(\"Module:languages\").getByCode(\"en\")\n\t\n\t-- Parentheses around function call to remove second return value, the\n\t-- number of replacements.\n\treturn (text:gsub(\"\
      %[%[([^%]]+)%]%]\",\n\t\tfunction(linktext)\n\t\t\tlocal link = parseLink(linktext)\n\t\t\treturn makeLangLink(link, lang, nil, true, false)\n\t\tend))\nend\n\nfunction export.light_link(data)\n\tlocal language_names = mw.loadData(\"Module:languages/code\
      \ to canonical name\")\n\tlocal script_codes = mw.loadData(\"Module:scripts/codes\")\n\t\n\tif data.langCode then\n\t\tdata.langName = language_names[data.langCode] or error('The language code \"' .. data.langCode .. '\" is not recognized.')\n\telse\n\t\
      \terror('Language code is required.')\n\tend\n\t\n\tif not data.term then\n\t\terror('Term to link to is required.')\n\tend\n\t\n\tif data.scCode then\n\t\tif not script_codes[data.scCode] then\n\t\t\terror('The script code \"' .. data.sc .. '\" is not\
      \ recognized.')\n\t\tend\n\telse\n\t\terror(\"The function light_link requires a script code.\")\n\tend\n\t\n\tlocal fragment\n\tif data.id then\n\t\tfragment = data.langName .. \"-\" .. mw.uri.encode(data.id, \"WIKI\")\n\telse\n\t\tfragment = data.langName\n\
      \tend\n\t\n\treturn table_concat {\n\t\t'&lt;span class=\"', data.scCode, '\" lang=\"', data.langCode,\n\t\t'\"&gt;[[', data.term, \"#\", fragment, \"|\", (data.alt or data.term), \"]]&lt;/span&gt;\"\n\t}\nend\n\n--[=[\n\tFor example, Norwegian_Bokm.C3.A5l\
      \ → Norwegian_Bokmål. 0xC3 and 0xA5 are the\n\thexadecimal-base representation of the two bytes used to encode the character\n\tå in the UTF-8 encoding:\n\t\t11000011 10100101\n\t\n\tNote that the bytes used to represent a character are actually different\
      \ from\n\tthe Unicode codepoint. For å, the codepoint is 0xE5. The bits (digits) that\n\tactually spell the codepoint are found in the brackets: 110[00011] 10[100101].\n\tFor further explanation, see [[w:UTF-8#Description]].\n]=]\n\n-- The character class\
      \ %x should not be used, as it includes the characters a-f,\n-- which do not occur in these anchor encodings.\nlocal capitalHex = \"[0-9A-F]\"\n\nlocal function decodeAnchor(anchor)\n\treturn (anchor:gsub(\"%.(\" .. capitalHex .. capitalHex .. \")\",\n\
      \t\tfunction(hexByte)\n\t\t\treturn string.char(tonumber(hexByte, 16))\n\t\tend))\nend\n\nfunction export.section_link(link)\n\tif type(link) ~= \"string\" then\n\t\terror(\"The first argument to section_link was a \" .. type(link) .. \", but it should\
      \ be a string.\")\n\tend\n\t\n\tlink = link:gsub(\"_\", \" \")\n\t\n\tlocal numberSigns = require(\"Module:string\").count(link, \"#\")\n\t\n\tif numberSigns &gt; 1 then\n\t\terror(\"The section link should only contain one number sign (#).\")\n\tend\n\
      \t\n\tlocal page, section = link:match(\"^([^#]+)#(.+)$\")\n\t\n\tif page and section then\n\t\tsection = decodeAnchor(section)\n\t\t\n\t\t-- URI-encode (percent-encode) section to allow square brackets, [],\n\t\t-- in section name. If not percent-encoded,\
      \ they prevent the parser from\n\t\t-- recognizing the link.\n\t\treturn table_concat { \"[[\", page, \"#\", mw.uri.encode(section, \"WIKI\"), \"|\", page, \" § \", section, \"]]\" }\n\telse\n\t\terror('The function \"' .. section_link .. '\" could not\
      \ find a number sign marking a section name.')\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:19.171Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aparameters&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=40307 t=1555362499076290
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:19 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 599673131, 492619092, 693587680
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4797340\" pageid=\"4797340\" ns=\"828\" title=\"Module:parameters\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-01T01:32:55Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"OK, resurrect the bug fix for disappearing &quot;falt&quot; and such while I figure out how to clone a table properly\" xml:space=\"preserve\">local export = {}\n\n-- A helper function\
      \ to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nlocal plain = require(\"Module:string\").pattern_escape\n\n-- A helper function that removes empty numeric indexes in a table,\n-- so that the values are tightly packed like in\
      \ a normal Lua table.\nlocal remove_holes = require(\"Module:table\").compressSparseArray\n\nfunction export.process(args, params, return_unknown)\n\tlocal args_new = {}\n\t\n\t-- Process parameters for specific properties\n\tlocal required = {}\n\tlocal\
      \ patterns = {}\n\tlocal names_with_equal_sign = {}\n\tlocal list_from_index = nil\n\t\n\tfor name, param in pairs(params) do\n\t\tif param.required then\n\t\t\tif param.alias_of then\n\t\t\t\trequire(\"Module:debug\").track(\"parameters/required alias\"\
      )\n\t\t\tend\n\t\t\trequired[name] = true\n\t\tend\n\t\t\n\t\tif param.list then\n\t\t\tlocal key = name\n\t\t\tif type(name) == \"string\" then\n\t\t\t\tkey = string.gsub(name, \"=\", \"\")\n\t\t\tend\n\t\t\tif param.default ~= nil then\n\t\t\t\targs_new[key]\
      \ = {param.default, maxindex = 1}\n\t\t\telse\n\t\t\t\targs_new[key] = {maxindex = 0}\n\t\t\tend\n\t\t\t\n\t\t\tif type(param.list) == \"string\" then\n\t\t\t\t-- If the list property is a string, then it represents the name\n\t\t\t\t-- to be used as the\
      \ prefix for list items. This is for use with lists\n\t\t\t\t-- where the first item is a numbered parameter and the\n\t\t\t\t-- subsequent ones are named, such as 1, pl2, pl3.\n\t\t\t\tif string.find(param.list, \"=\") then\n\t\t\t\t\tpatterns[\"^\" ..\
      \ string.gsub(plain(param.list), \"=\", \"(%%d+)\") .. \"$\"] = name\n\t\t\t\telse\n\t\t\t\t\tpatterns[\"^\" .. plain(param.list) .. \"(%d+)$\"] = name\n\t\t\t\tend\n\t\t\telseif type(name) == \"number\" then\n\t\t\t\t-- If the name is a number, then all\
      \ indexed parameters from\n\t\t\t\t-- this number onwards go in the list.\n\t\t\t\tlist_from_index = name\n\t\t\telse\n\t\t\t\tif string.find(name, \"=\") then\n\t\t\t\t\tpatterns[\"^\" .. string.gsub(plain(name), \"=\", \"(%%d+)\") .. \"$\"] = string.gsub(name,\
      \ \"=\", \"\")\n\t\t\t\telse\n\t\t\t\t\tpatterns[\"^\" .. plain(name) .. \"(%d+)$\"] = name\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif string.find(name, \"=\") then\n\t\t\t\t-- DO NOT SIDE-EFFECT A TABLE WHILE ITERATING OVER IT.\n\t\t\t\t-- Some elements\
      \ may be skipped or processed twice if you do.\n\t\t\t\t-- Instead, track the changes we want to make to `params`, and\n\t\t\t\t-- do them after the iteration over `params` is done.\n\t\t\t\ttable.insert(names_with_equal_sign, name)\n\t\t\tend\n\t\telseif\
      \ param.default ~= nil then\n\t\t\targs_new[name] = param.default\n\t\tend\n\tend\n\n\t--Process required changes to `params`\n\tfor _, name in ipairs(names_with_equal_sign) do\n\t\trequire(\"Module:debug\").track(\"parameters/name with equals\")\n\t\t\
      params[string.gsub(name, \"=\", \"\")] = params[name]\n\t\tparams[name] = nil\n\tend\n\n\t-- Process the arguments\n\tlocal args_unknown = {}\n\t\n\tfor name, val in pairs(args) do\n\t\tlocal index = nil\n\t\t\n\t\tif type(name) == \"number\" then\n\t\t\
      \tif list_from_index ~= nil and name &gt;= list_from_index then\n\t\t\t\tindex = name - list_from_index + 1\n\t\t\t\tname = list_from_index\n\t\t\tend\n\t\telse\n\t\t\t-- Does this argument name match a pattern?\n\t\t\tfor pattern, pname in pairs(patterns)\
      \ do\n\t\t\t\tindex = mw.ustring.match(name, pattern)\n\t\t\t\t\n\t\t\t\t-- It matches, so store the parameter name and the\n\t\t\t\t-- numeric index extracted from the argument name.\n\t\t\t\tif index then\n\t\t\t\t\tindex = tonumber(index)\n\t\t\t\t\t\
      name = pname\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal param = params[name]\n\t\t\n\t\t-- If a parameter without the trailing index was found, and\n\t\t-- require_index is set on the param, set the param to nil to treat it\n\t\t\
      -- as if it isn't recognized.\n\t\tif not index and param and param.require_index then\n\t\t\tparam = nil\n\t\tend\n\t\t\n\t\t-- If no index was found, use 1 as the default index.\n\t\t-- This makes list parameters like g, g2, g3 put g at index 1.\n\t\t\
      index = index or 1\n\t\t\n\t\t-- If the argument is not in the list of parameters, trigger an error.\n\t\t-- return_unknown suppresses the error, and stores it in a separate list instead.\n\t\tif not param then\n\t\t\tif return_unknown then\n\t\t\t\targs_unknown[name]\
      \ = val\n\t\t\telse\n\t\t\t\terror(\"The parameter \\\"\" .. name .. \"\\\" is not used by this template.\", 2)\n\t\t\tend\n\t\telse\n\t\t\t-- Remove leading and trailing whitespace unless allow_whitespace is true.\n\t\t\tif not param.allow_whitespace\
      \ then\n\t\t\t\tval = mw.text.trim(val)\n\t\t\tend\n\t\t\t\n\t\t\t-- Empty string is equivalent to nil unless allow_empty is true.\n\t\t\tif val == \"\" and not param.allow_empty then\n\t\t\t\tval = nil\n\t\t\tend\n\t\t\t\n\t\t\t-- Convert to proper type\
      \ if necessary.\n\t\t\tif param.type == \"boolean\" then\n\t\t\t\tval = not (not val or val == \"\" or val == \"0\" or val == \"no\" or val == \"n\" or val == \"false\")\n\t\t\telseif param.type == \"number\" then\n\t\t\t\tval = tonumber(val)\n\t\t\telseif\
      \ param.type then\n\t\t\t\trequire(\"Module:debug\").track {\n\t\t\t\t\t\"parameters/unrecognized type\",\n\t\t\t\t\t\"parameters/unrecognized type/\" .. tostring(param.type)\n\t\t\t\t}\n\t\t\tend\n\t\t\t\n\t\t\t-- Can't use \"if val\" alone, because val\
      \ may be a boolean false.\n\t\t\tif val ~= nil then\n\t\t\t\t-- Mark it as no longer required, as it is present.\n\t\t\t\trequired[param.alias_of or name] = nil\n\t\t\t\t\n\t\t\t\t-- Store the argument value.\n\t\t\t\tif param.list then\n\t\t\t\t\t-- If\
      \ the parameter is an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\t\targs_new[name][index] = val\n\t\t\t\t\t\t\n\t\t\t\t\t\t-- Store\
      \ the highest index we find.\n\t\t\t\t\t\targs_new[name].maxindex = math.max(index, args_new[name].maxindex)\n\t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\t\t\t\t\t\
      args_new[param.alias_of][index] = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest index we find.\n\t\t\t\t\t\t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of]\
      \ = val\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\t-- If the parameter is an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\
      \t\targs_new[name] = val\n\t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\t\t\t\t\targs_new[param.alias_of][1] = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest\
      \ index we find.\n\t\t\t\t\t\t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of] = val\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\
      \t\n\t-- The required table should now be empty.\n\t-- If any entry remains, trigger an error, unless we're in the template namespace.\n\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\tlocal list = {}\n\t\tfor name, param in pairs(required)\
      \ do\n\t\t\ttable.insert(list, name)\n\t\tend\n\t\t\n\t\tlocal count = #list\n\t\tif count == 1 then\n\t\t\terror('The parameter \"' .. list[1] .. '\" is required.', 2)\n\t\telseif count == 2 then\n\t\t\terror('The parameters \"' .. table.concat(list,\
      \ '\" and \"') .. '\" are required.', 2)\n\t\telseif count &gt; 2 then\n\t\t\terror('The parameters \"' .. mw.text.listToText(list, '\", \"', '\", and \"') .. '\" are required.', 2)\n\t\tend\n\tend\n\t\n\t-- Remove holes in any list parameters if needed.\n\
      \tfor name, val in pairs(args_new) do\n\t\tif type(val) == \"table\" and not params[name].allow_holes then\n\t\t\targs_new[name] = remove_holes(val)\n\t\tend\n\tend\n\t\n\tif return_unknown then\n\t\treturn args_new, args_unknown\n\telse\n\t\treturn args_new\n\
      \tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:19.958Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=62504 t=1555362499832445
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:19 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1284.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 212798854, 643150020, 696827408
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4453474\" pageid=\"4453474\" ns=\"828\" title=\"Module:languages\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-13T02:06:03Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add getNonEtymological\" xml:space=\"preserve\">local export = {}\n\n--[=[\tThis function checks for things that could plausibly be a language code:\n\t\ttwo or three lowercase letters,\
      \ two or three groups of three lowercase\n\t\tletters with hyphens between them. If such a pattern is not found,\n\t\tit is likely the editor simply forgot to enter a language code. ]=]\n\nfunction export.err(langCode, param, text, template_tag)\n\tlocal\
      \ ordinals = {\n\t\t\"first\", \"second\", \"third\", \"fourth\", \"fifth\", \"sixth\",\n\t\t\"seventh\", \"eighth\", \"ninth\", \"tenth\", \"eleventh\", \"twelfth\",\n\t\t\"thirteenth\", \"fourteenth\", \"fifteenth\", \"sixteenth\", \"seventeenth\",\n\
      \t\t\"eighteenth\", \"nineteenth\", \"twentieth\"\n\t}\n\t\n\tif not template_tag then\n\t\ttemplate_tag = \"\"\n\telse\n\t\tif type(template_tag) ~= \"string\" then\n\t\t\ttemplate_tag = template_tag()\n\t\tend\n\t\ttemplate_tag = \" (Original template:\
      \ \" .. template_tag .. \")\"\n\tend\n\tlocal paramType = type(param)\n\tif paramType == \"number\" then\n\t\tordinal = ordinals[param]\n\t\tparam = ordinal .. ' parameter'\n\telseif paramType == \"string\" then\n\t\tparam = 'parameter \"' .. param ..\
      \ '\"'\n\telse\n\t\terror(\"The parameter name is \"\n\t\t\t\t.. (paramType == \"table\" and \"a table\" or tostring(param))\n\t\t\t\t.. \", but it should be a number or a string.\" .. template_tag, 2)\n\tend\n\t\n\t-- Can use string.find because language\
      \ codes only contain ASCII.\n\tif not langCode or langCode == \"\" then\n\t\terror(\"The \" .. param .. \" (\" .. (text or \"language code\") .. \") is missing.\" .. template_tag, 2)\n\telseif langCode:find(\"^%l%l%l?$\")\n\t\t\tor langCode:find(\"^%l%l%l%-%l%l%l$\"\
      )\n\t\t\tor langCode:find(\"^%l%l%l%-%l%l%l%-%l%l%l$\") then\n\t\terror(\"The language code \\\"\" .. langCode .. \"\\\" is not valid.\" .. template_tag, 2)\n\telse\n\t\terror(\"Please enter a \" .. (text or \"language code\") .. \" in the \" .. param\
      \ .. \".\" .. template_tag, 2)\n\tend\nend\n\nlocal function do_entry_name_or_sort_key_replacements(text, replacements)\n\tif replacements.from then\n\t\tfor i, from in ipairs(replacements.from) do\n\t\t\tlocal to = replacements.to[i] or \"\"\n\t\t\ttext\
      \ = mw.ustring.gsub(text, from, to)\n\t\tend\n\tend\n\t\n\tif replacements.remove_diacritics then\n\t\ttext = mw.ustring.toNFD(text)\n\t\ttext = mw.ustring.gsub(text,\n\t\t\t'[' .. replacements.remove_diacritics .. ']',\n\t\t\t'')\n\t\ttext = mw.ustring.toNFC(text)\n\
      \tend\n\t\n\treturn text\nend\n\nlocal Language = {}\n\nfunction Language:getCode()\n\treturn self._code\nend\n\n\nfunction Language:getCanonicalName()\n\treturn self._rawData[1] or self._rawData.canonicalName\nend\n\n\nfunction Language:getOtherNames()\n\
      \treturn self._rawData.otherNames or {}\nend\n\n\nfunction Language:getType()\n\treturn self._rawData.type or \"regular\"\nend\n\n\nfunction Language:getWikimediaLanguages()\n\tif not self._wikimediaLanguageObjects then\n\t\tlocal m_wikimedia_languages\
      \ = require(\"Module:wikimedia languages\")\n\t\tself._wikimediaLanguageObjects = {}\n\t\tlocal wikimedia_codes = self._rawData.wikimedia_codes or { self._code }\n\t\t\n\t\tfor _, wlangcode in ipairs(wikimedia_codes) do\n\t\t\ttable.insert(self._wikimediaLanguageObjects,\
      \ m_wikimedia_languages.getByCode(wlangcode))\n\t\tend\n\tend\n\t\n\treturn self._wikimediaLanguageObjects\nend\n\nfunction Language:getWikipediaArticle()\n\tif self._rawData.wikipedia_article then\n\t\treturn self._rawData.wikipedia_article \n\telseif\
      \ self._wikipedia_article then\n\t\treturn self._wikipedia_article\n\telseif self:getWikidataItem() and mw.wikibase then\n\t\tself._wikipedia_article = mw.wikibase.sitelink(self:getWikidataItem(), 'enwiki')\n\tend\n\tif not self._wikipedia_article then\n\
      \t\tself._wikipedia_article = mw.ustring.gsub(self:getCategoryName(), \"Creole language\", \"Creole\")\n\tend\n\treturn self._wikipedia_article\nend\n\nfunction Language:makeWikipediaLink()\n\treturn \"[[w:\" .. self:getWikipediaArticle() .. \"|\" .. self:getCanonicalName()\
      \ .. \"]]\"\nend\n\nfunction Language:getWikidataItem()\n\treturn self._rawData[2] or self._rawData.wikidata_item\nend\n\nfunction Language:getScripts()\n\tif not self._scriptObjects then\n\t\tlocal m_scripts = require(\"Module:scripts\")\n\t\tself._scriptObjects\
      \ = {}\n\t\t\n\t\tfor _, sc in ipairs(self._rawData.scripts or { \"None\" }) do\n\t\t\ttable.insert(self._scriptObjects, m_scripts.getByCode(sc))\n\t\tend\n\tend\n\t\n\treturn self._scriptObjects\nend\n\nfunction Language:getScriptCodes()\n\treturn self._rawData.scripts\
      \ or { \"None\" }\nend\n\nfunction Language:getFamily()\n\tif self._familyObject then\n\t\treturn self._familyObject\n\tend\n\t\t\n\tlocal family = self._rawData[3] or self._rawData.family \n\tif family then\n\t\tself._familyObject = require(\"Module:families\"\
      ).getByCode(family)\n\tend\n\t\n\treturn self._familyObject\nend\n\n\nfunction Language:getAncestors()\n\tif not self._ancestorObjects then\n\t\tself._ancestorObjects = {}\n\t\t\n\t\tif self._rawData.ancestors then\n\t\t\tfor _, ancestor in ipairs(self._rawData.ancestors)\
      \ do\n\t\t\t\ttable.insert(self._ancestorObjects, export.getByCode(ancestor) or require(\"Module:etymology languages\").getByCode(ancestor))\n\t\t\tend\n\t\telse\n\t\t\tlocal fam = self:getFamily()\n\t\t\tlocal protoLang = fam and fam:getProtoLanguage()\
      \ or nil\n\t\t\t\n\t\t\t-- For the case where the current language is the proto-language\n\t\t\t-- of its family, we need to step up a level higher right from the start.\n\t\t\tif protoLang and protoLang:getCode() == self:getCode() then\n\t\t\t\tfam =\
      \ fam:getFamily()\n\t\t\t\tprotoLang = fam and fam:getProtoLanguage() or nil\n\t\t\tend\n\t\t\t\n\t\t\twhile not protoLang and not (not fam or fam:getCode() == \"qfa-not\") do\n\t\t\t\tfam = fam:getFamily()\n\t\t\t\tprotoLang = fam and fam:getProtoLanguage()\
      \ or nil\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(self._ancestorObjects, protoLang)\n\t\tend\n\tend\n\t\n\treturn self._ancestorObjects\nend\n\nlocal function iterateOverAncestorTree(node, func)\n\tfor _, ancestor in ipairs(node:getAncestors()) do\n\t\t\
      if ancestor then\n\t\t\tlocal ret = func(ancestor) or iterateOverAncestorTree(ancestor, func)\n\t\t\tif ret then\n\t\t\t\treturn ret\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction Language:getAncestorChain()\n\tif not self._ancestorChain then\n\t\tself._ancestorChain\
      \ = {}\n\t\tlocal step = #self:getAncestors() == 1 and self:getAncestors()[1] or nil\n\t\t\n\t\twhile step do\n\t\t\ttable.insert(self._ancestorChain, 1, step)\n\t\t\tstep = #step:getAncestors() == 1 and step:getAncestors()[1] or nil\n\t\tend\n\tend\n\t\
      \n\treturn self._ancestorChain\nend\n\n\nfunction Language:hasAncestor(otherlang)\n\tlocal function compare(ancestor)\n\t\treturn ancestor:getCode() == otherlang:getCode()\n\tend\n\t\n\treturn iterateOverAncestorTree(self, compare) or false\nend\n\n\n\
      function Language:getCategoryName()\n\tlocal name = self:getCanonicalName()\n\t\n\t-- If the name already has \"language\" in it, don't add it.\n\tif name:find(\"[Ll]anguage$\") then\n\t\treturn name\n\telse\n\t\treturn name .. \" language\"\n\tend\nend\n\
      \n\nfunction Language:getStandardCharacters()\n\treturn self._rawData.standardChars\nend\n\n\nfunction Language:makeEntryName(text)\n\ttext = mw.ustring.gsub(text, \"^[¿¡]\", \"\")\n\ttext = mw.ustring.gsub(text, \"(.)[؟?!;՛՜ ՞ ՟？！︖︕।॥။၊་།]$\", \"%1\"\
      )\n\t\n\tif self:getCode() == \"ar\" then\n\t\tlocal U = mw.ustring.char\n\t\tlocal taTwiil = U(0x640)\n\t\tlocal waSla = U(0x671)\n\t\t-- diacritics ordinarily removed by entry_name replacements\n\t\tlocal Arabic_diacritics = U(0x64B, 0x64C, 0x64D, 0x64E,\
      \ 0x64F, 0x650, 0x651, 0x652, 0x670)\n\t\t\n\t\tif text == waSla or mw.ustring.find(text, \"^\" .. taTwiil .. \"?[\" .. Arabic_diacritics .. \"]\" .. \"$\") then\n\t\t\treturn text\n\t\tend\n\tend\n\t\n\tif type(self._rawData.entry_name) == \"table\" then\n\
      \t\ttext = do_entry_name_or_sort_key_replacements(text, self._rawData.entry_name)\n\tend\n\t\n\treturn text\nend\n\n\n-- Add to data tables?\nlocal has_dotted_undotted_i = {\n\t[\"az\"] = true,\n\t[\"crh\"] = true,\n\t[\"gag\"] = true,\n\t[\"kaa\"] = true,\n\
      \t[\"tt\"] = true,\n\t[\"tr\"] = true,\n\t[\"zza\"] = true,\n}\n\nfunction Language:makeSortKey(name, sc)\n\tif has_dotted_undotted_i[self:getCode()] then\n\t\tname = name:gsub(\"I\", \"ı\")\n\tend\n\t\n\tname = mw.ustring.lower(name)\n\t\n\t-- Remove\
      \ initial hyphens and *\n\tlocal hyphens_regex = \"^[-־ـ*]+(.)\"\n\tname = mw.ustring.gsub(name, hyphens_regex, \"%1\")\n\t\n\t-- If there are language-specific rules to generate the key, use those\n\tif type(self._rawData.sort_key) == \"table\" then\n\
      \t\tname = do_entry_name_or_sort_key_replacements(name, self._rawData.sort_key)\n\telseif type(self._rawData.sort_key) == \"string\" then\n\t\tname = require(\"Module:\" .. self._rawData.sort_key).makeSortKey(name, self:getCode(), sc and sc:getCode())\n\
      \tend\n\t\n\t-- Remove parentheses, as long as they are either preceded or followed by something\n\tname = mw.ustring.gsub(name, \"(.)[()]+\", \"%1\")\n\tname = mw.ustring.gsub(name, \"[()]+(.)\", \"%1\")\n\t\n\tif has_dotted_undotted_i[self:getCode()]\
      \ then\n\t\tname = name:gsub(\"i\", \"İ\")\n\tend\n\t\n\treturn mw.ustring.upper(name)\nend\n\nfunction Language:overrideManualTranslit()\n\tif self._rawData.override_translit then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\n\nfunction Language:transliterate(text,\
      \ sc, module_override)\n\tif not ((module_override or self._rawData.translit_module) and text) then\n\t\treturn nil\n\tend\n\t\n\tif module_override then\n\t\trequire(\"Module:debug\").track(\"module_override\")\n\tend\n\t\n\treturn require(\"Module:\"\
      \ .. (module_override or self._rawData.translit_module)).tr(text, self:getCode(), sc and sc:getCode() or nil)\nend\n\nfunction Language:hasTranslit()\n\treturn self._rawData.translit_module and true or false\nend\n\n\nfunction Language:link_tr()\n\treturn\
      \ self._rawData.link_tr and true or false\nend\n\n\nfunction Language:toJSON()\n\tlocal entryNamePatterns = nil\n\tlocal entryNameRemoveDiacritics = nil\n\t\n\tif self._rawData.entry_name then\n\t\tentryNameRemoveDiacritics = self._rawData.entry_name.remove_diacritics\n\
      \t\tif self._rawData.entry_name.from then\n\t\t\tentryNamePatterns = {}\n\t\t\tfor i, from in ipairs(self._rawData.entry_name.from) do\n\t\t\t\tlocal to = self._rawData.entry_name.to[i] or \"\"\n\t\t\t\ttable.insert(entryNamePatterns, { from = from, to\
      \ = to })\n\t\t\tend\n\t\tend\n\tend\n\t\n\tlocal ret = {\n\t\tancestors = self._rawData.ancestors,\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\tentryNamePatterns = entryNamePatterns,\n\
      \t\tfamily = self._rawData[3] or self._rawData.family,\n\t\totherNames = self:getOtherNames(),\n\t\tscripts = self._rawData.scripts,\n\t\ttype = self:getType(),\n\t\twikimediaLanguages = self._rawData.wikimedia_codes,\n\t\twikidataItem = self:getWikidataItem(),\n\
      \t}\n\t\n\treturn require(\"Module:JSON\").toJSON(ret)\nend\n\n\n-- Do NOT use this method!\n-- All uses should be pre-approved on the talk page!\nfunction Language:getRawData()\n\treturn self._rawData\nend\n\nLanguage.__index = Language\n\n\nfunction\
      \ export.getDataModuleName(code)\n\tif code:find(\"^%l%l$\") then\n\t\treturn \"languages/data2\"\n\telseif code:find(\"^%l%l%l$\") then\n\t\tlocal prefix = code:sub(1, 1)\n\t\treturn \"languages/data3/\" .. prefix\n\telseif code:find(\"^[%l-]+$\") then\n\
      \t\treturn \"languages/datax\"\n\telse\n\t\treturn nil\n\tend\nend\n\n\nlocal function getRawLanguageData(code)\n\tlocal modulename = export.getDataModuleName(code)\n\treturn modulename and mw.loadData(\"Module:\" .. modulename)[code] or nil\nend\n\n\n\
      function export.makeObject(code, data)\n\tif data and data.deprecated then\n\t\trequire(\"Module:debug\").track {\n\t\t\t\"languages/deprecated\",\n\t\t\t\"languages/deprecated/\" .. code\n\t\t}\n\tend\n\t\n\treturn data and setmetatable({ _rawData = data,\
      \ _code = code }, Language) or nil\nend\n\n\nfunction export.getByCode(code)\n\tif type(code) ~= \"string\" then\n\t\terror(\"The function getByCode expects a string as its first argument, but received \" .. (code == nil and \"nil\" or \"a \" .. type(code))\
      \ .. \".\")\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.getByName(name)\n\tlocal byName = mw.loadData(\"Module:languages/by name\")\n\tlocal code = byName.all and byName.all[name] or byName[name]\n\t\
      \n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.getByCanonicalName(name)\n\tlocal byName = mw.loadData(\"Module:languages/canonical names\")\n\tlocal code = byName and\
      \ byName[name]\n\t\n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.iterateAll()\n\tmw.incrementExpensiveFunctionCount()\n\tlocal m_data = mw.loadData(\"Module:languages/alldata\"\
      )\n\tlocal func, t, var = pairs(m_data)\n\t\n\treturn function()\n\t\tlocal code, data = func(t, var)\n\t\treturn export.makeObject(code, data)\n\tend\nend\n\n--[[\tIf language is an etymology language, iterates through parent languages\n\t\tuntil it finds\
      \ a non-etymology language. ]]\nfunction export.getNonEtymological(lang)\n\twhile lang:getType() == \"etymology language\" do\n\t\tlocal parentCode = lang:getParentCode()\n\t\tlocal parent = export.getByCode(parentCode)\n\t\t\tor require(\"Module:etymology\
      \ languages\").getByCode(parentCode)\n\t\t\tor require(\"Module:families\").getByCode(parentCode)\n\t\t\n\t\tlang = parent\n--\t\tmw.log(terminfo.lang:getCode() .. \" \" .. terminfo.lang:getType())\n\tend\n\t\n\treturn lang\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:20.216Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata2&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=60133 t=1555362500037182
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:20 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1312.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 421965487, 249279997, 702976233
    body: !!binary |-
      PD94bWwgdmVyc2lvbj0iMS4wIj8+PGFwaSBiYXRjaGNvbXBsZXRlPSIiPjx3YXJuaW5ncz48bWFpbiB4bWw6c3BhY2U9InByZXNlcnZlIj5TdWJzY3JpYmUgdG8gdGhlIG1lZGlhd2lraS1hcGktYW5ub3VuY2UgbWFpbGluZyBsaXN0IGF0ICZsdDtodHRwczovL2xpc3RzLndpa2ltZWRpYS5vcmcvbWFpbG1hbi9saXN0aW5mby9tZWRpYXdpa2ktYXBpLWFubm91bmNlJmd0OyBmb3Igbm90aWNlIG9mIEFQSSBkZXByZWNhdGlvbnMgYW5kIGJyZWFraW5nIGNoYW5nZXMuIFVzZSBbW1NwZWNpYWw6QXBpRmVhdHVyZVVzYWdlXV0gdG8gc2VlIHVzYWdlIG9mIGRlcHJlY2F0ZWQgZmVhdHVyZXMgYnkgeW91ciBhcHBsaWNhdGlvbi48L21haW4+PHJldmlzaW9ucyB4bWw6c3BhY2U9InByZXNlcnZlIj5CZWNhdXNlICJydnNsb3RzIiB3YXMgbm90IHNwZWNpZmllZCwgYSBsZWdhY3kgZm9ybWF0IGhhcyBiZWVuIHVzZWQgZm9yIHRoZSBvdXRwdXQuIFRoaXMgZm9ybWF0IGlzIGRlcHJlY2F0ZWQsIGFuZCBpbiB0aGUgZnV0dXJlIHRoZSBuZXcgZm9ybWF0IHdpbGwgYWx3YXlzIGJlIHVzZWQuPC9yZXZpc2lvbnM+PC93YXJuaW5ncz48cXVlcnk+PHBhZ2VzPjxwYWdlIF9pZHg9IjQyMDYxODQiIHBhZ2VpZD0iNDIwNjE4NCIgbnM9IjgyOCIgdGl0bGU9Ik1vZHVsZTpsYW5ndWFnZXMvZGF0YTIiPjxyZXZpc2lvbnM+PHJldiB1c2VyPSJNZXRha25vd2xlZGdlIiB0aW1lc3RhbXA9IjIwMTktMDQtMTRUMTY6NDY6MTFaIiBjb250ZW50Zm9ybWF0PSJ0ZXh0L3BsYWluIiBjb250ZW50bW9kZWw9IlNjcmlidW50byIgY29tbWVudD0iIiB4bWw6c3BhY2U9InByZXNlcnZlIj5sb2NhbCB1ID0gbXcudXN0cmluZy5jaGFyCgotLSBVVEYtOCBlbmNvZGVkIHN0cmluZ3MgZm9yIHNvbWUgY29tbW9ubHktdXNlZCBkaWFjcml0aWNzCmxvY2FsIEdSQVZFICAgICA9IHUoMHgwMzAwKQpsb2NhbCBBQ1VURSAgICAgPSB1KDB4MDMwMSkKbG9jYWwgQ0lSQyAgICAgID0gdSgweDAzMDIpCmxvY2FsIFRJTERFICAgICA9IHUoMHgwMzAzKQpsb2NhbCBNQUNST04gICAgPSB1KDB4MDMwNCkKbG9jYWwgQlJFVkUgICAgID0gdSgweDAzMDYpCmxvY2FsIERPVEFCT1ZFICA9IHUoMHgwMzA3KQpsb2NhbCBESUFFUiAgICAgPSB1KDB4MDMwOCkKbG9jYWwgQ0FST04gICAgID0gdSgweDAzMEMpCmxvY2FsIERHUkFWRSAgICA9IHUoMHgwMzBGKQpsb2NhbCBJTlZCUkVWRSAgPSB1KDB4MDMxMSkKbG9jYWwgRE9UQkVMT1cgID0gdSgweDAzMjMpCmxvY2FsIFJJTkdCRUxPVyA9IHUoMHgwMzI1KQpsb2NhbCBDRURJTExBICAgPSB1KDB4MDMyNykKbG9jYWwgT0dPTkVLICAgID0gdSgweDAzMjgpCgotLSBQdW5jdWF0aW9uIHRvIGJlIHVzZWQgZm9yIHN0YW5kYXJkQ2hhcnMgZmllbGQKbG9jYWwgUFVOQ1RVQVRJT04gPSAnICEjJCUmYW1wOyorLC0uLzo7Jmx0Oz0mZ3Q7P0BeX2B8flwnKCknCgpsb2NhbCBDeXJsID0geyJDeXJsIn0KbG9jYWwgTGF0biA9IHsiTGF0biJ9CmxvY2FsIExhdG5BcmFiID0geyJMYXRuIiwgIkFyYWIifQoKbG9jYWwgbSA9IHt9CgptWyJhYSJdID0gewoJIkFmYXIiLAoJIlEyNzgxMSIsCgkiY3VzIiwKCW90aGVyTmFtZXMgPSB7IlFhZmFyIn0sCglzY3JpcHRzID0gTGF0biwKfQoKbVsiYWIiXSA9IHsKCSJBYmtoYXoiLAoJIlE1MTExIiwKCSJjYXUtYWJ6IiwKCW90aGVyTmFtZXMgPSB7IkFia2hhemlhbiIsICJBYnhhem8ifSwKCXNjcmlwdHMgPSB7IkN5cmwiLCAiR2VvciIsICJMYXRuIn0sCgl0cmFuc2xpdF9tb2R1bGUgPSAiYWItdHJhbnNsaXQiLAoJb3ZlcnJpZGVfdHJhbnNsaXQgPSB0cnVlLAoJZW50cnlfbmFtZSA9IHsKCQlmcm9tID0ge0dSQVZFLCBBQ1VURX0sCgkJdG8gICA9IHt9fSAsCn0KCm1bImFlIl0gPSB7CgkiQXZlc3RhbiIsCgkiUTI5NTcyIiwKCSJpcmEtY2VuIiwKCW90aGVyTmFtZXMgPSB7IlplbmQiLCAiT2xkIEJhY3RyaWFuIn0sCglzY3JpcHRzID0geyJBdnN0IiwgIkd1anIifSwKCXRyYW5zbGl0X21vZHVsZSA9ICJBdnN0LXRyYW5zbGl0IiwKCXdpa2lwZWRpYV9hcnRpY2xlID0gIkF2ZXN0YW4iLAp9CgptWyJhZiJdID0gewoJIkFmcmlrYWFucyIsCgkiUTE0MTk2IiwKCSJnbXciLAoJc2NyaXB0cyA9IExhdG5BcmFiLAoJYW5jZXN0b3JzID0geyJubCJ9LAoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsiW8Okw6HDosOgXSIsICJbw6vDqcOqw6hdIiwgIlvDr8Otw67DrF0iLCAiW8O2w7PDtMOyXSIsICJbw7zDusO7w7ldIiwgIlvDv8O9xbfhu7NdIiwgIl4tIiwgIicifSwKCQl0byAgID0geyJhIgkgLCAiZSIJLCAiaSIJLCAibyIJLCAidSIgICwgInkiIH19ICwKfQoKbVsiYWsiXSA9IHsKCSJBa2FuIiwKCSJRMjgwMjYiLAoJImFsdi1rd2EiLAoJb3RoZXJOYW1lcyA9IHsiVHdpLUZhbnRlIiwgIlR3aSIsICJGYW50ZSIsICJGYW50aSIsICJBc2FudGUiLCAiQWt1YXBlbSJ9LAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bImFtIl0gPSB7CgkiQW1oYXJpYyIsCgkiUTI4MjQ0IiwKCSJzZW0tZXRoIiwKCXNjcmlwdHMgPSB7IkV0aGkifSwKCXRyYW5zbGl0X21vZHVsZSA9ICJFdGhpLXRyYW5zbGl0IiwKfQoKbVsiYW4iXSA9IHsKCSJBcmFnb25lc2UiLAoJIlE4NzY1IiwKCSJyb2EtaWJlIiwKCXNjcmlwdHMgPSBMYXRuLAoJYW5jZXN0b3JzID0geyJyb2Etb2FuIn0sCn0KCm1bImFyIl0gPSB7CgkiQXJhYmljIiwKCSJRMTM5NTUiLAoJInNlbS1hcmIiLAoJb3RoZXJOYW1lcyA9IHsiTW9kZXJuIFN0YW5kYXJkIEFyYWJpYyIsICJTdGFuZGFyZCBBcmFiaWMiLCAiTGl0ZXJhcnkgQXJhYmljIiwgIkNsYXNzaWNhbCBBcmFiaWMifSwKCXNjcmlwdHMgPSB7IkFyYWIiLCAiQnJhaSJ9LAoJLS0gYWxpZiB3YeG5o2wgdG8gYWxpZiwgcmVtb3ZlIGRpYWNyaXRpY3MKCWVudHJ5X25hbWUgPSB7CgkJZnJvbSA9IHt1KDB4MDY3MSksIHUoMHgwNjRCKSwgdSgweDA2NEMpLCB1KDB4MDY0RCksIHUoMHgwNjRFKSwgdSgweDA2NEYpLCB1KDB4MDY1MCksIHUoMHgwNjUxKSwgdSgweDA2NTIpLCB1KDB4MDY3MCksIHUoMHgwNjQwKX0sCgkJdG8gICA9IHt1KDB4MDYyNyl9fSwKCXRyYW5zbGl0X21vZHVsZSA9ICJhci10cmFuc2xpdCIsCglzdGFuZGFyZENoYXJzID0gItihLdi62YEt2ZLZsNmxIiAuLiBQVU5DVFVBVElPTiAuLiAi2aAt2anYjNib2J/Zq9ms2YAiLAp9CgptWyJhcyJdID0gewoJIkFzc2FtZXNlIiwKCW90aGVyTmFtZXMgPSB7IkFzYW1peWEifSwKCSJRMjk0MDEiLAoJImluYyIsCglzY3JpcHRzID0geyJCZW5nIn0sCglhbmNlc3RvcnMgPSB7ImluYy1tYXMifSwKCXRyYW5zbGl0X21vZHVsZSA9ICJhcy10cmFuc2xpdCIsCn0KCm1bImF2Il0gPSB7CgkiQXZhciIsCgkiUTI5NTYxIiwKCSJjYXUtbmVjIiwKCW90aGVyTmFtZXMgPSB7IkF2YXJpYyJ9LAoJc2NyaXB0cyA9IEN5cmwsCglhbmNlc3RvcnMgPSB7Im9hdiJ9LAoJdHJhbnNsaXRfbW9kdWxlID0gImF2LXRyYW5zbGl0IiwKCW92ZXJyaWRlX3RyYW5zbGl0ID0gdHJ1ZSwKCWVudHJ5X25hbWUgPSB7CgkJZnJvbSA9IHtHUkFWRSwgQUNVVEV9LAoJCXRvICAgPSB7fX0gLAp9CgptWyJheSJdID0gewoJIkF5bWFyYSIsCgkiUTQ2MjciLAoJInNhaS1heW0iLAoJb3RoZXJOYW1lcyA9IHsiU291dGhlcm4gQXltYXJhIiwgIkNlbnRyYWwgQXltYXJhIn0sCglzY3JpcHRzID0gTGF0biwKfQoKbVsiYXoiXSA9IHsKCSJBemVyYmFpamFuaSIsCgkiUTkyOTIiLAoJInRyay1vZ3oiLAoJb3RoZXJOYW1lcyA9IHsiQXplcmkiLCAiQXphcmkiLCAiQXplcmkgVHVya2ljIiwgIkF6ZXJiYWlqYW5pIFR1cmtpYyIsICJOb3J0aCBBemVyYmFpamFuaSIsICJTb3V0aCBBemVyYmFpamFuaSIsICJBZnNoYXIiLCAiQWZzaGFyaSIsICJBZnNoYXIgQXplcmJhaWphbmkiLCAiQWZjaGFyIiwgIlFhc2hxYSdpIiwgIlFhc2hxYWkiLCAiS2FzaGtheSIsICJTb25xb3IifSwKCXNjcmlwdHMgPSB7IkxhdG4iLCAiQ3lybCIsICJmYS1BcmFiIn0sCglhbmNlc3RvcnMgPSB7InRyay1vYXQifSwKfQoKbVsiYmEiXSA9IHsKCSJCYXNoa2lyIiwKCSJRMTMzODkiLAoJInRyay1raXAiLAoJc2NyaXB0cyA9IEN5cmwsCgl0cmFuc2xpdF9tb2R1bGUgPSAiYmEtdHJhbnNsaXQiLAoJb3ZlcnJpZGVfdHJhbnNsaXQgPSB0cnVlLAp9CgptWyJiZSJdID0gewoJIkJlbGFydXNpYW4iLAoJIlE5MDkxIiwKCSJ6bGUiLAoJb3RoZXJOYW1lcyA9IHsiQmVsb3J1c3NpYW4iLCAiQmVsYXJ1c2FuIiwgIkJpZWxvcnVzc2lhbiIsICJCeWVsb3J1c3NpYW4iLCAiQmVsYXJ1c3NpYW4iLCAiV2hpdGUgUnVzc2lhbiJ9LAoJc2NyaXB0cyA9IEN5cmwsCglhbmNlc3RvcnMgPSB7Im9ydiJ9LAoJdHJhbnNsaXRfbW9kdWxlID0gImJlLXRyYW5zbGl0IiwKCXNvcnRfa2V5ID0gewoJCWZyb20gPSB7ItCBIiwgItGRIn0sCgkJdG8gICA9IHsi0JUiICwgItC1In19LAoJZW50cnlfbmFtZSA9IHsKCQlmcm9tID0geyLQgCIsICLRkCIsIEdSQVZFLCBBQ1VURX0sCgkJdG8gICA9IHsi0JUiLCAi0LUifX0sCn0KCm1bImJnIl0gPSB7CgkiQnVsZ2FyaWFuIiwKCSJRNzkxOCIsCgkiemxzIiwKCXNjcmlwdHMgPSB7IkN5cmwifSwKCWFuY2VzdG9ycyA9IHsiY3UifSwKCXRyYW5zbGl0X21vZHVsZSA9ICJiZy10cmFuc2xpdCIsCgllbnRyeV9uYW1lID0gewoJCWZyb20gPSB7ItCAIiwgItGQIiwgItCNIiwgItGdIiwgR1JBVkUsIEFDVVRFfSwKCQl0byAgID0geyLQlSIsICLQtSIsICLQmCIsICLQuCJ9fSwKfQoKbVsiYmgiXSA9IHsKCSJCaWhhcmkiLAoJIlExMzUzMDUiLAoJImluYyIsCglzY3JpcHRzID0geyJEZXZhIn0sCglhbmNlc3RvcnMgPSB7ImluYy1tZ2QifSwKfQoKbVsiYmkiXSA9IHsKCSJCaXNsYW1hIiwKCSJRMzU0NTIiLAoJImNycCIsCglzY3JpcHRzID0gTGF0biwKCWFuY2VzdG9ycyA9IHsiZW4ifSwKfQoKbVsiYm0iXSA9IHsKCSJCYW1iYXJhIiwKCSJRMzMyNDMiLAoJImRtbi1tYW4iLAoJb3RoZXJOYW1lcyA9IHsiQmFtYW5hbmthbiJ9LAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bImJuIl0gPSB7CgkiQmVuZ2FsaSIsCgkiUTk2MTAiLAoJImluYyIsCglvdGhlck5hbWVzID0geyJCYW5nbGEifSwKCXNjcmlwdHMgPSB7IkJlbmciLCAiTmV3YSJ9LAoJYW5jZXN0b3JzID0geyJpbmMtbWJuIn0sCgl0cmFuc2xpdF9tb2R1bGUgPSAiYm4tdHJhbnNsaXQiLAp9CgptWyJibyJdID0gewoJIlRpYmV0YW4iLAoJIlEzNDI3MSIsCgkidGJxIiwKCW90aGVyTmFtZXMgPSB7IsOcIiwgIkRidXMiLCAiTGhhc2EiLCAiTGhhc2EgVGliZXRhbiIsICJBbWRvIFRpYmV0YW4iLCAiQW1kbyIsICJQYW5hbmciLCAiS2hhbXMiLCAiS2hhbXMgVGliZXRhbiIsICJLaGFtYmEiLCAiVHNla3UiLCAiRG9scG8iLCAiSHVtbGEiLCAiTGltaSIsICJMaG9taSIsICJTaGluZyBTYWFwYSIsICJNdWdvbSIsICJNdWd1IiwgIk51YnJpIiwgIldhbHVuZ2dlIiwgIkdvbGEiLCAiVGh1ZGFtIiwgIkxvd2EiLCAiTG9rZSIsICJNdXN0YW5nIiwgIlRpY2h1cm9uZyJ9LCAtLSBhbmQgIkd5YWxzdW1kbyIsICJMb3dlciBNYW5hbmciPyAiS3lpcm9uZyI/CglzY3JpcHRzID0geyJUaWJ0In0sIC0tIHNvbWV0aW1lcyBEZXZhPwoJYW5jZXN0b3JzID0geyJ4Y3QifSwKCXRyYW5zbGl0X21vZHVsZSA9ICJiby10cmFuc2xpdCIsCglvdmVycmlkZV90cmFuc2xpdCA9IHRydWUsCn0KCm1bImJyIl0gPSB7CgkiQnJldG9uIiwKCSJRMTIxMDciLAoJImNlbC1icnkiLAoJc2NyaXB0cyA9IExhdG4sCglhbmNlc3RvcnMgPSB7InhibSJ9LAp9CgptWyJjYSJdID0gewoJIkNhdGFsYW4iLAoJIlE3MDI2IiwKCSJyb2EiLAoJb3RoZXJOYW1lcyA9IHsiVmFsZW5jaWFuIn0sCglzY3JpcHRzID0gTGF0biwKCWFuY2VzdG9ycyA9IHsicm9hLW9jYSJ9LAoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsiw6AiLCAiW8Oow6ldIiwgIlvDrcOvXSIsICJbw7LDs10iLCAiW8O6w7xdIiwgIsOnIiwgImzCt2wifSwKCQl0byAgID0geyJhIiwgImUiICAgLCAiaSIgICAsICJvIiAgICwgInUiICAgLCAiYyIsICJsbCIgfX0gLAp9CgptWyJjZSJdID0gewoJIkNoZWNoZW4iLAoJIlEzMzM1MCIsCgkiY2F1LW5raCIsCglzY3JpcHRzID0gQ3lybCwKCXRyYW5zbGl0X21vZHVsZSA9ICJjZS10cmFuc2xpdCIsCglvdmVycmlkZV90cmFuc2xpdCA9IHRydWUsCgllbnRyeV9uYW1lID0gewoJCWZyb20gPSB7TUFDUk9OfSwKCQl0byAgID0ge319LAp9CgptWyJjaCJdID0gewoJIkNoYW1vcnJvIiwKCSJRMzMyNjIiLAoJInBvei1zdXMiLAoJb3RoZXJOYW1lcyA9IHsiQ2hhbW9ydSJ9LAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bImNvIl0gPSB7CgkiQ29yc2ljYW4iLAoJIlEzMzExMSIsCgkicm9hLWl0ZCIsCglvdGhlck5hbWVzID0geyJDb3JzdSJ9LAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bImNyIl0gPSB7CgkiQ3JlZSIsCgkiUTMzMzkwIiwKCSJhbGciLAoJc2NyaXB0cyA9IHsiQ2FucyIsICJMYXRuIn0sCgl0cmFuc2xpdF9tb2R1bGUgPSAiY3ItdHJhbnNsaXQiLAp9CgptWyJjcyJdID0gewoJIkN6ZWNoIiwKCSJROTA1NiIsCgkiemx3IiwKCXNjcmlwdHMgPSBMYXRuLAoJYW5jZXN0b3JzID0geyJ6bHctb2NzIn0sCglzb3J0X2tleSA9IHsKCQlmcm9tID0geyLDoSIsICLDqSIsICLDrSIsICLDsyIsICJbw7rFr10iLCAiw70ifSwKCQl0byAgID0geyJhIiwgImUiLCAiaSIsICJvIiwgInUiICAgLCAieSJ9fSAsCn0KCm1bImN1Il0gPSB7CgkiT2xkIENodXJjaCBTbGF2b25pYyIsCgkiUTM1NDk5IiwKCSJ6bHMiLAoJb3RoZXJOYW1lcyA9IHsiT2xkIENodXJjaCBTbGF2aWMifSwKCXNjcmlwdHMgPSB7IkN5cnMiLCAiR2xhZyJ9LAoJdHJhbnNsaXRfbW9kdWxlID0gIkN5cnMtR2xhZy10cmFuc2xpdCIsCgllbnRyeV9uYW1lID0gewoJCWZyb20gPSB7dSgweDA0ODQpfSwgLS0ga2Ftb3JhCgkJdG8gICA9IHt9fSwKCXNvcnRfa2V5ID0gewoJCWZyb20gPSB7ItC+0YMiLCAi0ZQifSwKCQl0byAgID0geyLRgyIgLCAi0LUifX0gLAp9CgptWyJjdiJdID0gewoJIkNodXZhc2giLAoJIlEzMzM0OCIsCgkidHJrLW9nciIsCglzY3JpcHRzID0gQ3lybCwKCXRyYW5zbGl0X21vZHVsZSA9ICJjdi10cmFuc2xpdCIsCglvdmVycmlkZV90cmFuc2xpdCA9IHRydWUsCn0KCm1bImN5Il0gPSB7CgkiV2Vsc2giLAoJIlE5MzA5IiwKCSJjZWwtYnJ5IiwKCXNjcmlwdHMgPSBMYXRuLAoJYW5jZXN0b3JzID0geyJ3bG0ifSwKCXNvcnRfa2V5ID0gewoJCWZyb20gPSB7IlvDosOhw6DDpF0iLCAiY2giLCAiZGQiLCAiW8Oqw6nDqMOrXSIsICJmZiIsICJuZ2giLCAiW8Ouw63DrMOvXSIsICJsbCIsICJbw7TDs8Oyw7ZdIiwgInBoIiwgInJoIiwgInRoIiwgIlvDu8O6w7nDvF0iLCAiW8W14bqD4bqB4bqFXSIsICJbxbfDveG7s8O/XSIsICInIn0sCgkJdG8gICA9IHsiYSIJICAgICwgImN+IiwgImR+IiwgImUiCSAgLCAiZn4iLCAiZ35oIiwgImkiCSAgLCAibH4iLCAibyIJICAsICJwfiIsICJyfiIsICJ0fiIsICJ1IgkgICwgInciICAgICAsICJ5IgkgICAgICAgfX0gLAoJc3RhbmRhcmRDaGFycyA9ICJBLUlMLVBSLVVXWWEtaWwtcHItdXd5MC05w4LDosOKw6rDjsOuw5TDtMObw7vFtMW1xbbFtyIgLi4gUFVOQ1RVQVRJT04sCn0KCm1bImRhIl0gPSB7CgkiRGFuaXNoIiwKCSJROTAzNSIsCgkiZ21xIiwKCXNjcmlwdHMgPSBMYXRuLAoJYW5jZXN0b3JzID0geyJnbXEtb2RhIn0sCn0KCm1bImRlIl0gPSB7CgkiR2VybWFuIiwKCSJRMTg4IiwKCSJnbXciLAoJb3RoZXJOYW1lcyA9IHsiSGlnaCBHZXJtYW4iLCAiTmV3IEhpZ2ggR2VybWFuIiwgIkRldXRzY2gifSwKCXNjcmlwdHMgPSB7IkxhdG4iLCAiTGF0ZiJ9LAoJYW5jZXN0b3JzID0geyJnbWgifSwKCXNvcnRfa2V5ID0gewoJCWZyb20gPSB7IlvDpMOgw6HDosOlXSIsICJbw6vDqMOpw6pdIiwgIlvDr8Osw63Drl0iLCAiW8O2w7LDs8O0XSIsICJbw7zDucO6w7tdIiwgIsOfIiB9LAoJCXRvICAgPSB7ImEiCSAgLCAiZSIJICwgImkiCSAsICJvIgkgLCAidSIJICwgInNzIn19ICwKCXN0YW5kYXJkQ2hhcnMgPSAiQS1aYS16MC05w4TDpMOWw7bDnMO8w58iIC4uIFBVTkNUVUFUSU9OLAp9CgptWyJkdiJdID0gewoJIkRoaXZlaGkiLAoJIlEzMjY1NiIsCgkiaW5jIiwKCW90aGVyTmFtZXMgPSB7IkRpdmVoaSIsICJNYWhhbCIsICJNYWhsIiwgIk1hbGRpdmlhbiJ9LAoJc2NyaXB0cyA9IHsiVGhhYSJ9LAoJYW5jZXN0b3JzID0geyJwbWgifSwJLS0gb3IgSGVsdT8KCXRyYW5zbGl0X21vZHVsZSA9ICJkdi10cmFuc2xpdCIsCglvdmVycmlkZV90cmFuc2xpdCA9IHRydWUsCn0KCm1bImR6Il0gPSB7CgkiRHpvbmdraGEiLAoJIlEzMzA4MSIsCgkidGJxIiwKCXNjcmlwdHMgPSB7IlRpYnQifSwKCWFuY2VzdG9ycyA9IHsieGN0In0sCgl0cmFuc2xpdF9tb2R1bGUgPSAiYm8tdHJhbnNsaXQiLAoJb3ZlcnJpZGVfdHJhbnNsaXQgPSB0cnVlLAp9CgptWyJlZSJdID0gewoJIkV3ZSIsCgkiUTMwMDA1IiwKCSJhbHYtdm9uIiwKCXNjcmlwdHMgPSBMYXRuLAp9CgptWyJlbCJdID0gewoJIkdyZWVrIiwKCSJROTEyOSIsCgkiZ3JrIiwKCW90aGVyTmFtZXMgPSB7Ik1vZGVybiBHcmVlayIsICJOZW8tSGVsbGVuaWMifSwKCXNjcmlwdHMgPSB7IkdyZWsiLCAiQnJhaSJ9LAoJYW5jZXN0b3JzID0geyJncmMifSwKCXRyYW5zbGl0X21vZHVsZSA9ICJlbC10cmFuc2xpdCIsCglvdmVycmlkZV90cmFuc2xpdCA9IHRydWUsCglzb3J0X2tleSA9IHsgIC0tIEtlZXAgdGhpcyBzeW5jaHJvbml6ZWQgd2l0aCBncmMsIGNwZywgcG50CgkJZnJvbSA9IHsiW+G+s86s4b604b2w4b6y4b624b634byA4b6A4byE4b6E4byC4b6C4byG4b6G4byB4b6B4byF4b6F4byD4b6D4byH4b6HXSIsICJbzq3hvbLhvJDhvJThvJLhvJHhvJXhvJNdIiwgIlvhv4POruG/hOG9tOG/guG/huG/h+G8oOG+kOG8pOG+lOG8ouG+kuG8puG+luG8oeG+keG8peG+leG8o+G+k+G8p+G+l10iLCAiW86v4b224b+W4byw4by04byy4by24byx4by14byz4by3z4rOkOG/kuG/l10iLCAiW8+M4b244b2A4b2E4b2C4b2B4b2F4b2DXSIsICJbz43hvbrhv6bhvZDhvZThvZLhvZbhvZHhvZXhvZPhvZfPi86w4b+i4b+nXSIsICJb4b+zz47hv7Thvbzhv7Lhv7bhv7fhvaDhvqDhvaThvqThvaLhvqLhvabhvqbhvaHhvqHhvaXhvqXhvaPhvqPhvafhvqddIiwgIuG/pSIsICLPgiJ9LAoJCXRvICAgPSB7Is6xIgkJCQkJCSwgIs61IgkJICwgIs63IgkJCQkJCSwgIs65IgkJCQksICLOvyIJCSAsICLPhSIJCQkJLCAiz4kiCQkJCQkJLCAiz4EiLCAiz4MifX0gLAoJc3RhbmRhcmRDaGFycyA9ICLNujvOhC3Pjs+cz50iIC4uIFBVTkNUVUFUSU9OIC4uICLhvIAt4b++IiwKfQoKbVsiZW4iXSA9IHsKCSJFbmdsaXNoIiwKCSJRMTg2MCIsCgkiZ213IiwKCW90aGVyTmFtZXMgPSB7Ik1vZGVybiBFbmdsaXNoIiwgIk5ldyBFbmdsaXNoIiwgIkhhd2FpaWFuIENyZW9sZSBFbmdsaXNoIiwgIkhhd2FpJ2lhbiBDcmVvbGUgRW5nbGlzaCIsICJIYXdhaWlhbiBDcmVvbGUiLCAiSGF3YWknaWFuIENyZW9sZSIsICJQb2xhcmkiLCAiWWluZ2xpc2gifSwgLS0gYWxsIGJ1dCB0aGUgZmlyc3QgdGhyZWUgYXJlIG5hbWVzIG9mIHN1YnN1bWVkIGRpYWxlY3RzIHdoaWNoIG9uY2UgaGFkIGNvZGVzCglzY3JpcHRzID0geyJMYXRuIiwgIkJyYWkiLCAiU2hhdyIsICJEc3J0In0sIC0tIGVudHJpZXMgaW4gU2hhdyBvciBEc3J0IG1pZ2h0IHJlcXVpcmUgcHJpb3IgZGlzY3Vzc2lvbgoJYW5jZXN0b3JzID0geyJlbm0ifSwKCXNvcnRfa2V5ID0gewoJCWZyb20gPSB7IlvDpMOgw6HDosOlxIFdIiwgIlvDq8Oow6nDqsSTXSIsICJbw6/DrMOtw67Eq10iLCAiW8O2w7LDs8O0xY1dIiwgIlvDvMO5w7rDu8WrXSIsICLDpiIgLCAixZMiICwgIlvDp8SNXSIsICLDsSIsICInIn0sCgkJdG8gICA9IHsiYSIgICAgICAgLCAiZSIgICAgICAsICJpIiAgICAgICwgIm8iICAgICAgLCAidSIgICAgICAsICJhZSIsICJvZSIsICJjIiAgICwgIm4ifX0sCgl3aWtpbWVkaWFfY29kZXMgPSB7ImVuIiwgInNpbXBsZSJ9LAoJc3RhbmRhcmRDaGFycyA9ICJBLVphLXowLTkiIC4uIFBVTkNUVUFUSU9OIC4uIHUoMHgyODAwKSAuLiAiLSIgLi4gdSgweDI4RkYpLAp9CgptWyJlbyJdID0gewoJIkVzcGVyYW50byIsCgkiUTE0MyIsCgkiYXJ0IiwKCXNjcmlwdHMgPSBMYXRuLAoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsiW8Ohw6BdIiwgIlvDqcOoXSIsICJbw63DrF0iLCAiW8Ozw7JdIiwgIlvDusO5XSIsICJbxIldIiwgIlvEnV0iLCAiW8SlXSIsICJbxLVdIiwgIlvFnV0iLCAiW8WtXSJ9LAoJCXRvICAgPSB7ImEiCSAgICwgImUiICAsICJpIiAgLCAibyIgICwgInUiLCAiY8SJIiwgImfEiSIsICJoxIkiLCAiasSJIiwgInPEiSIsICJ1xIkifX0gLAp9CgptWyJlcyJdID0gewoJIlNwYW5pc2giLAoJIlExMzIxIiwKCSJyb2EtaWJlIiwKCW90aGVyTmFtZXMgPSB7IkNhc3RpbGlhbiIsICJBbWF6b25pYW4gU3BhbmlzaCIsICJBbWF6b25pYyBTcGFuaXNoIiwgIkxvcmV0by1VY2F5YWxpIFNwYW5pc2gifSwKCXNjcmlwdHMgPSB7IkxhdG4iLCAiQnJhaSJ9LAoJYW5jZXN0b3JzID0geyJvc3AifSwKCXNvcnRfa2V5ID0gewoJCWZyb20gPSB7IsOhIiwgIsOpIiwgIsOtIiwgIsOzIiwgIlvDusO8XSIsICLDpyIsICLDsSJ9LAoJCXRvICAgPSB7ImEiLCAiZSIsICJpIiwgIm8iLCAidSIgICAsICJjIiwgIm4ifX0sCglzdGFuZGFyZENoYXJzID0gIkEtVlhZWmEtdnh5ejAtOcOBw6HDicOpw43DrcOTw7PDmsO6w5HDscK/wqEiIC4uIFBVTkNUVUFUSU9OLAp9CgptWyJldCJdID0gewoJIkVzdG9uaWFuIiwKCSJROTA3MiIsCgkiZml1LWZpbiIsCglzY3JpcHRzID0gTGF0biwKfQoKbVsiZXUiXSA9IHsKCSJCYXNxdWUiLAoJIlE4NzUyIiwKCSJldXEiLAoJb3RoZXJOYW1lcyA9IHsiRXVza2FyYSJ9LAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bImZhIl0gPSB7CgkiUGVyc2lhbiIsCgkiUTkxNjgiLAoJImlyYS1zd2kiLAoJb3RoZXJOYW1lcyA9IHsiRmFyc2kiLCAiTmV3IFBlcnNpYW4iLCAiTW9kZXJuIFBlcnNpYW4iLCAiV2VzdGVybiBQZXJzaWFuIiwgIklyYW5pYW4gUGVyc2lhbiIsICJFYXN0ZXJuIFBlcnNpYW4iLCAiRGFyaSIsICJBaW1hcSIsICJBaW1hayIsICJBeW1hcSIsICJFaW1hayJ9LAoJc2NyaXB0cyA9IHsiZmEtQXJhYiJ9LAoJYW5jZXN0b3JzID0geyJwYWwifSwgLS0gImlyYS1taWQiCgllbnRyeV9uYW1lID0gewoJCWZyb20gPSB7dSgweDA2NEUpLCB1KDB4MDY0RiksIHUoMHgwNjUwKSwgdSgweDA2NTEpLCB1KDB4MDY1Mil9LAoJCXRvICAgPSB7fX0gLAp9CgptWyJmZiJdID0gewoJIkZ1bGEiLAoJIlEzMzQ1NCIsCgkiYWx2LXNuZyIsCglvdGhlck5hbWVzID0geyJBZGFtYXdhIEZ1bGZ1bGRlIiwgIkJhZ2lybWkgRnVsZnVsZGUiLCAiQm9yZ3UgRnVsZnVsZGUiLCAiQ2VudHJhbC1FYXN0ZXJuIE5pZ2VyIEZ1bGZ1bGRlIiwgIkZ1bGFuaSIsICJGdWxmdWxkZSIsICJNYWFzaW5hIEZ1bGZ1bGRlIiwgIk5pZ2VyaWFuIEZ1bGZ1bGRlIiwgIlB1bGFyIiwgIlB1bGFhciIsICJXZXN0ZXJuIE5pZ2VyIEZ1bGZ1bGRlIn0sIC0tIE1hYXNpbmEsIGV0YyBhcmUgZGlhbGVjdHMsIHN1YnN1bWVkIGludG8gdGhpcyBjb2RlCglzY3JpcHRzID0geyJMYXRuIiwgIkFkbG0ifSwKfQoKbVsiZmkiXSA9IHsKCSJGaW5uaXNoIiwKCSJRMTQxMiIsCgkiZml1LWZpbiIsCglvdGhlck5hbWVzID0geyJTdW9taSIsICJCb3RuaWFuIn0sCglzY3JpcHRzID0gTGF0biwKCWVudHJ5X25hbWUgPSB7CgkJZnJvbSA9IHsiy6MifSwgIC0tIFVzZWQgdG8gaW5kaWNhdGUgZ2VtaW5hdGlvbiBvZiB0aGUgbmV4dCBjb25zb25hbnQKCQl0byAgID0ge319LAoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsiW8Ohw6DDosOjXSIsICJbw6nDqMOq4bq9XSIsICJbw63DrMOuxKldIiwgIlvDs8Oyw7TDtV0iLCAiW8O6w7nDu8WpXSIsICJbw73hu7PFt8O8xbFdIiwgIlvDuMO1xZFdIiwgIsOmIiAsICLFkyIgLCAiW8SNw6ddIiwgIsWhIiwgIsW+IiwgIsOfIiAsICJbJzpdIn0sCgkJdG8gICA9IHsiYSIJICwgImUiCSAsICJpIgkgLCAibyIJICwgInUiCSAsICAieSIJICwgIsO2IgksICJhZSIsICJvZSIsICJjIiAgICwgInMiLCAieiIsICJzcyJ9fSAsCn0KCm1bImZqIl0gPSB7CgkiRmlqaWFuIiwKCSJRMzMyOTUiLAoJInBvei1vY2MiLAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bImZvIl0gPSB7CgkiRmFyb2VzZSIsCgkiUTI1MjU4IiwKCSJnbXEiLAoJc2NyaXB0cyA9IExhdG4sCglhbmNlc3RvcnMgPSB7Im5vbiJ9LAp9CgptWyJmciJdID0gewoJIkZyZW5jaCIsCgkiUTE1MCIsCgkicm9hLW9pbCIsCglvdGhlck5hbWVzID0geyJNb2Rlcm4gRnJlbmNoIn0sCglzY3JpcHRzID0geyJMYXRuIiwgIkJyYWkifSwKCWFuY2VzdG9ycyA9IHsiZnJtIn0sCglzb3J0X2tleSA9IHsKCQlmcm9tID0geyJbw6HDoMOiw6RdIiwgIlvDqcOow6rDq10iLCAiW8Otw6zDrsOvXSIsICJbw7PDssO0w7ZdIiwgIlvDusO5w7vDvF0iLCAiW8O94buzxbfDv10iLCAiw6ciLCAiw6YiICwgIsWTIiAsICInIn0sCgkJdG8gICA9IHsiYSIJICwgImUiCSAsICJpIgkgLCAibyIJICwgInUiCSAsICJ5IgkgLCAiYyIsICJhZSIsICJvZSJ9fSwKCXN0YW5kYXJkQ2hhcnMgPSAiQS1aYS16MC05w4DDgsOHw4nDiMOKw4vDjsOPw5TFksObw5nDnMOgw6LDp8Opw6jDqsOrw67Dr8O0xZPDu8O5w7zCq8K7IiAuLiBQVU5DVFVBVElPTiwKfQoKbVsiZnkiXSA9IHsKCSJXZXN0IEZyaXNpYW4iLAoJIlEyNzE3NSIsCgkiZ213LWZyaSIsCglvdGhlck5hbWVzID0geyJXZXN0ZXJuIEZyaXNpYW4iLCAiRnJpc2lhbiJ9LAoJc2NyaXB0cyA9IExhdG4sCglhbmNlc3RvcnMgPSB7Im9mcyJ9LAoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsiW8Ogw6HDosOkXSIsICJbw6jDqcOqw6tdIiwgIlvDrMOtw67Dr3nhu7PDvcW3w79dIiwgIlvDssOzw7TDtl0iLCAiW8O5w7rDu8O8XSIsICLDpiIsICJbIC8uLV0ifSwKCQl0byAgID0geyJhIgkgLCAiZSIJLCAiaSIJLCAibyIJLCAidSIsICJhZSJ9fSAsCglzdGFuZGFyZENoYXJzID0gIkEtUFItV1laYS1wci13eXowLTnDhsOmw6LDpMOgw6nDqsOrw6jDr8Osw7TDtsOyw7rDu8O8w7nhu7MiIC4uIFBVTkNUVUFUSU9OLAp9CgptWyJnYSJdID0gewoJIklyaXNoIiwKCSJROTE0MiIsCgkiY2VsLWdhZSIsCglvdGhlck5hbWVzID0geyJJcmlzaCBHYWVsaWMifSwKCXNjcmlwdHMgPSBMYXRuLAoJYW5jZXN0b3JzID0geyJtZ2EifSwKCXNvcnRfa2V5ID0gewoJCWZyb20gPSB7IsOhIiwgIsOpIiwgIsOtIiwgIsOzIiwgIsO6IiwgIsO9IiwgIuG4gyIgLCAixIsiICwgIuG4iyIgLCAi4bifIiAsICLEoSIgLCAi4bmBIiAsICLhuZciICwgIuG5oSIgLCAi4bmrIiB9LAoJCXRvICAgPSB7ImEiLCAiZSIsICJpIiwgIm8iLCAidSIsICJ5IiwgImJoIiwgImNoIiwgImRoIiwgImZoIiwgImdoIiwgIm1oIiwgInBoIiwgInNoIiwgInRoIn19ICwKCXN0YW5kYXJkQ2hhcnMgPSAiQS1JTC1QUi1VYS1pbC1wci11MC05w4HDocOJw6nDjcOtw5PDs8Oaw7oiIC4uIFBVTkNUVUFUSU9OLAp9CgptWyJnZCJdID0gewoJIlNjb3R0aXNoIEdhZWxpYyIsCgkiUTkzMTQiLAoJImNlbC1nYWUiLAoJb3RoZXJOYW1lcyA9IHsiR8OgaWRobGlnIiwgIkhpZ2hsYW5kIEdhZWxpYyIsICJTY290cyBHYWVsaWMiLCAiU2NvdHRpc2gifSwKCXNjcmlwdHMgPSBMYXRuLAoJYW5jZXN0b3JzID0geyJtZ2EifSwKCXNvcnRfa2V5ID0gewoJCWZyb20gPSB7IlvDocOgXSIsICJbw6nDqF0iLCAiW8Otw6xdIiwgIlvDs8OyXSIsICJbw7rDuV0iLCAiW8O94buzXSJ9LAoJCXRvICAgPSB7ImEiICAgLCAiZSIgICAsICJpIiAgICwgIm8iICAgLCAidSIgICAsICJ5IiAgIH19ICwKCXN0YW5kYXJkQ2hhcnMgPSAiQS1JTC1QUi1VYS1pbC1wci11MC05w4DDoMOIw6jDjMOsw5LDssOZw7kiIC4uIFBVTkNUVUFUSU9OLAp9CgptWyJnbCJdID0gewoJIkdhbGljaWFuIiwKCSJROTMwNyIsCgkicm9hLWliZSIsCglzY3JpcHRzID0gTGF0biwKCWFuY2VzdG9ycyA9IHsicm9hLW9wdCJ9LAoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsiw6EiLCAiw6kiLCAiw60iLCAiw7MiLCAiw7oifSwKCQl0byAgID0geyJhIiwgImUiLCAiaSIsICJvIiwgInUifX0gLAp9CgptWyJnbiJdID0gewoJIkd1YXJhbsOtIiwKCSJRMzU4NzYiLAoJInR1cC1ndWEiLAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bImd1Il0gPSB7CgkiR3VqYXJhdGkiLAoJIlE1MTM3IiwKCSJpbmMiLAoJc2NyaXB0cyA9IHsiR3VqciJ9LAoJYW5jZXN0b3JzID0geyJpbmMtbWd1In0sCgl0cmFuc2xpdF9tb2R1bGUgPSAiZ3UtdHJhbnNsaXQiLAp9CgptWyJndiJdID0gewoJIk1hbngiLAoJIlExMjE3NSIsCgkiY2VsLWdhZSIsCglvdGhlck5hbWVzID0geyJNYW54IEdhZWxpYyJ9LAoJc2NyaXB0cyA9IExhdG4sCglhbmNlc3RvcnMgPSB7Im1nYSJ9LAoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsiw6ciLCAiLSJ9LAoJCXRvICAgPSB7ImMifX0gLAoJc3RhbmRhcmRDaGFycyA9ICJBLVdZw4dhLXd5w6cwLTkiIC4uIFBVTkNUVUFUSU9OLAp9CgptWyJoYSJdID0gewoJIkhhdXNhIiwKCSJRNTY0NzUiLAoJImNkYy13c3QiLAoJc2NyaXB0cyA9IExhdG5BcmFiLAogICAgc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsiyZMiLCAgICLJlyIsICAgIsaZIiwgICIneSIsICLGtCIsICAiJyIgfSwKCQl0byAgID0geyJifiIgLCAiZH4iCSwgImt+IiwgInl+IiwgInl+IiwgIiIgIH19LAogICAgZW50cnlfbmFtZSA9IHsKCQlmcm9tID0geyJSzIMiLCAicsyDIiwgIsOAIiwgIsOgIiwgIsOIIiwgIsOoIiwgIsOMIiwgIsOsIiwgIsOSIiwgIsOyIiwgIsOZIiwgIsO5IiwgIsOCIiwgIsOiIiwgIsOKIiwgIsOqIiwgIsOOIiwgIsOuIiwgIsOUIiwgIsO0IiwgIsObIiwgIsO7IiwgIsSAIiwgIsSBIiwgIsSSIiwgIsSTIiwgIsSqIiwgIsSrIiwgIsWMIiwgIsWNIiwgIsWqIiwgIsWrIiwgIsOBIiwgIsOhIiwgIsOJIiwgIsOpIiwgIsONIiwgIsOtIiwgIsOTIiwgIsOzIiwgIsOaIiwgIsO6IiwgIsSAzIAiLCAixIHMgCIsICLhuJQiLCAi4biVIiwgIsSqzIAiLCAixKvMgCIsICLhuZAiLCAi4bmRIiwgIsWqzIAiLCAixavMgCIsIEdSQVZFLCBBQ1VURX0sCgkJdG8gICA9IHsiUiIsICJyIiwgIkEiLCAiYSIsICJFIiwgImUiLCAiSSIsICJpIiwgIk8iLCAibyIsICJVIiwgInUiLCAiQSIsICJhIiwgIkUiLCAiZSIsICJJIiwgImkiLCAiTyIsICJvIiwgIlUiLCAidSIsICJBIiwgImEiLCAiRSIsICJlIiwgIkkiLCAiaSIsICJPIiwgIm8iLCAiVSIsICJ1IiwgIkEiLCAiYSIsICJFIiwgImUiLCAiSSIsICJpIiwgIk8iLCAibyIsICJVIiwgInUiLCAiQSIsICJhIiwgIkUiLCAiZSIsICJJIiwgImkiLCAiTyIsICJvIiwgIlUiLCAidSJ9fSwKfQoKbVsiaGUiXSA9IHsKCSJIZWJyZXciLAoJIlE5Mjg4IiwKCSJzZW0tY2FuIiwKCW90aGVyTmFtZXMgPSB7Ikl2cml0In0sCglzY3JpcHRzID0geyJIZWJyIiwgIlBobngiLCAiQnJhaSJ9LAoJZW50cnlfbmFtZSA9IHsKCQlmcm9tID0geyJbIiAuLiB1KDB4MDU5MSkgLi4gIi0iIC4uIHUoMHgwNUJEKSAuLiB1KDB4MDVCRikgLi4gIi0iIC4uIHUoMHgwNUM1KSAuLiB1KDB4MDVDNykgLi4gIl0ifSwKCQl0byAgID0ge319ICwKfQoKbVsiaGkiXSA9IHsKCSJIaW5kaSIsCgkiUTE1NjgiLAoJImluYyIsCglvdGhlck5hbWVzID0geyJIaW5kYXZpIiwgIktoYXJpYm9saSIsICJLaGFyaSBCb2xpIiwgIk1hbmFrIEhpbmRpIn0sCglzY3JpcHRzID0geyJEZXZhIiwgIkt0aGkiLCAiTmV3YSJ9LAoJYW5jZXN0b3JzID0geyJpbmMtb2hpIn0sCgl0cmFuc2xpdF9tb2R1bGUgPSAiaGktdHJhbnNsaXQiLAp9CgptWyJobyJdID0gewoJIkhpcmkgTW90dSIsCgkiUTMzNjE3IiwKCSJjcnAiLAoJb3RoZXJOYW1lcyA9IHsiUGlkZ2luIE1vdHUiLCAiUG9saWNlIE1vdHUifSwKCXNjcmlwdHMgPSBMYXRuLAoJYW5jZXN0b3JzID0geyJtZXUifSwKfQoKbVsiaHQiXSA9IHsKCSJIYWl0aWFuIENyZW9sZSIsCgkiUTMzNDkxIiwKCSJjcnAiLAoJb3RoZXJOYW1lcyA9IHsiQ3Jlb2xlIiwgIkhhaXRpYW4iLCAiS3JlecOybCJ9LAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bImh1Il0gPSB7CgkiSHVuZ2FyaWFuIiwKCSJROTA2NyIsCgkidXJqLXVnciIsCglvdGhlck5hbWVzID0geyJNYWd5YXIifSwKCXNjcmlwdHMgPSB7IkxhdG4iLCAiSHVuZyJ9LAoJYW5jZXN0b3JzID0geyJvaHUifSwKCXNvcnRfa2V5ID0gewoJCWZyb20gPSB7IsOhIiwgIsOpIiwgIsOtIiwgIsOzIiwgIsO6IiwgIsWRIiwgIsWxIn0sCgkJdG8gICA9IHsiYSIsICJlIiwgImkiLCAibyIsICJ1IiwgIsO2IiwgIsO8In19ICwKfQoKbVsiaHkiXSA9IHsKCSJBcm1lbmlhbiIsCgkiUTg3ODUiLAoJImh5eCIsCglvdGhlck5hbWVzID0geyJNb2Rlcm4gQXJtZW5pYW4iLCAiRWFzdGVybiBBcm1lbmlhbiIsICJXZXN0ZXJuIEFybWVuaWFuIn0sCglzY3JpcHRzID0geyJBcm1uIiwgIkJyYWkifSwKCWFuY2VzdG9ycyA9IHsiYXhtIn0sCgl0cmFuc2xpdF9tb2R1bGUgPSAiQXJtbi10cmFuc2xpdCIsCglvdmVycmlkZV90cmFuc2xpdCA9IHRydWUsCglzb3J0X2tleSA9IHsKCQlmcm9tID0geyLVuNaCIiwgItaHIiwgItWl1oIifSwKCQl0byAgID0geyLWgiIsICLVpdW+IiwgItWl1b4ifX0sCgllbnRyeV9uYW1lID0gewoJCWZyb20gPSB7ItWeIiwgItWcIiwgItWbIiwgItWfIiwgItaHIiwgIiZsdDtzdXAmZ3Q71bUmbHQ7L3N1cCZndDsiLCAiJmx0O3N1cCZndDvVqyZsdDsvc3VwJmd0OyJ9LAoJCXRvICAgPSB7IiIsICIiLCAiIiwgIiIsICLVpdaCIiwgItW1IiwgItWrIn19ICwKfQoKbVsiaHoiXSA9IHsKCSJIZXJlcm8iLAoJIlEzMzMxNSIsCgkiYm50IiwKCXNjcmlwdHMgPSBMYXRuLAp9CgptWyJpYSJdID0gewoJIkludGVybGluZ3VhIiwKCSJRMzU5MzQiLAoJImFydCIsCglzY3JpcHRzID0gTGF0biwKfQoKbVsiaWQiXSA9IHsKCSJJbmRvbmVzaWFuIiwKCSJROTI0MCIsCgkicG96LW1seSIsCglzY3JpcHRzID0gTGF0biwKCWFuY2VzdG9ycyA9IHsibXMifSwKfQoKbVsiaWUiXSA9IHsKCSJJbnRlcmxpbmd1ZSIsCgkiUTM1ODUwIiwKCSJhcnQiLAoJb3RoZXJOYW1lcyA9IHsiT2NjaWRlbnRhbCJ9LAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bImlnIl0gPSB7CgkiSWdibyIsCgkiUTMzNTc4IiwKCSJuaWMtYmNvIiwKCXNjcmlwdHMgPSBMYXRuLAp9CgptWyJpaSJdID0gewoJIlNpY2h1YW4gWWkiLAoJIlEzNDIzNSIsCgkidGJxLWxvbCIsCglvdGhlck5hbWVzID0geyJOdW9zdSIsICJOb3N1IiwgIk5vcnRoZXJuIFlpIiwgIkxpYW5nc2hhbiBZaSJ9LAoJc2NyaXB0cyA9IHsiWWlpaSJ9LAoJdHJhbnNsaXRfbW9kdWxlID0gImlpLXRyYW5zbGl0IiwKfQoKbVsiaWsiXSA9IHsKCSJJbnVwaWFrIiwKCSJRMjcxODMiLAoJImVzeC1pbnUiLAoJb3RoZXJOYW1lcyA9IHsiSW51cGlhcSIsICJJw7F1cGlhcSIsICJJbnVwaWF0dW4ifSwKCXNjcmlwdHMgPSBMYXRuLAp9CgptWyJpbyJdID0gewoJIklkbyIsCgkiUTM1MjI0IiwKCSJhcnQiLAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bImlzIl0gPSB7CgkiSWNlbGFuZGljIiwKCSJRMjk0IiwKCSJnbXEiLAoJc2NyaXB0cyA9IExhdG4sCglhbmNlc3RvcnMgPSB7Im5vbiJ9LAp9CgptWyJpdCJdID0gewoJIkl0YWxpYW4iLAoJIlE2NTIiLAoJInJvYS1pdGQiLAoJc2NyaXB0cyA9IExhdG4sCglzb3J0X2tleSA9IHsKCQlmcm9tID0geyJbw6DDocOiw6TDpV0iLCAiW8Oow6nDqsOrXSIsICJbw6zDrcOuw69dIiwgIlvDssOzw7TDtl0iLCAiW8O5w7rDu8O8XSJ9LAoJCXRvICAgPSB7ImEiCSAgLCAiZSIJICwgImkiCSAsICJvIgkgLCAidSIJIH19ICwKfQoKbVsiaXUiXSA9IHsKCSJJbnVrdGl0dXQiLAoJIlEyOTkyMSIsCgkiZXN4LWludSIsCglvdGhlck5hbWVzID0geyJFYXN0ZXJuIENhbmFkaWFuIEludWt0aXR1dCIsICJFYXN0ZXJuIENhbmFkaWFuIEludWl0IiwgIldlc3Rlcm4gQ2FuYWRpYW4gSW51a3RpdHV0IiwgIldlc3Rlcm4gQ2FuYWRpYW4gSW51aXQiLCAiV2VzdGVybiBDYW5hZGlhbiBJbnVrdHVuIiwgIkludWlubmFxIiwgIkludWlubmFxdHVuIiwgIkludXZpYWx1ayIsICJJbnV2aWFsdWt0dW4iLCAiTnVuYXZpbW1pdXRpdCIsICJOdW5hdHNpYXZ1bW1pdXQiLCAiQWl2aWxpbW1pdXQiLCAiTmF0c2lsaW5nbWl1dCIsICJLaXZhbGxpcm1pdXQiLCAiU2lnbGl0IiwgIlNpZ2xpdHVuIn0sCglzY3JpcHRzID0geyJDYW5zIiwgIkxhdG4ifSwKCXRyYW5zbGl0X21vZHVsZSA9ICJpdS10cmFuc2xpdCIsCglvdmVycmlkZV90cmFuc2xpdCA9IHRydWUsCn0KCm1bImphIl0gPSB7CgkiSmFwYW5lc2UiLAoJIlE1Mjg3IiwKCSJqcHgiLAoJb3RoZXJOYW1lcyA9IHsiTW9kZXJuIEphcGFuZXNlIiwgIk5pcHBvbmVzZSIsICJOaWhvbmdvIn0sCglzY3JpcHRzID0geyJKcGFuIiwgIkJyYWkifSwKCWFuY2VzdG9ycyA9IHsib2pwIn0sCgktLVs9WwoJLS0gSGFuZGxlZCBieSBqc29ydCBmdW5jdGlvbiBpbiBbW01vZHVsZTpqYV1dLgoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsiW+OBgeOCoeOCol0iLCAiW+OBg+OCo+OCpF0iLCAiW+OBheOClOOCpeOCpuODtF0iLCAiW+OBh+OCp+OCqF0iLCAiW+OBieOCqeOCql0iLCAiW+OBjOOCleOCq+OCrOODtV0iLCAiW+OBjuOCreOCrl0iLCAiW+OBkOOCr+OCsOOHsF0iLCAiW+OBkuOCluOCseOCsuODtl0iLCAiW+OBlOOCs+OCtF0iLCAiW+OBluOCteOCtl0iLCAiW+OBmOOCt+OCuOOHsV0iLCAiW+OBmuOCueOCuuOHsl0iLCAiW+OBnOOCu+OCvF0iLCAiW+OBnuOCveOCvl0iLCAiW+OBoOOCv+ODgF0iLCAiW+OBouODgeODgl0iLCAiW+OBo+OBpeODg+ODhOODhV0iLCAiW+OBp+ODhuODh10iLCAiW+OBqeODiOODieOHs10iLCAi44OKIiwgIuODiyIsICJb44OM44e0XSIsICLjg40iLCAi44OOIiwgIlvjgbDjgbHjg4/jg5Djg5Hjh7VdIiwgIlvjgbPjgbTjg5Ljg5Pjg5Tjh7ZdIiwgIlvjgbbjgbfjg5Xjg5bjg5fjh7ddIiwgIlvjgbnjgbrjg5jjg5njg5rjh7hdIiwgIlvjgbzjgb3jg5vjg5zjg53jh7ldIiwgIuODniIsICLjg58iLCAiW+ODoOOHul0iLCAi44OhIiwgIuODoiIsICJb44KD44Oj44OkXSIsICJb44KF44Ol44OmXSIsICJb44KH44On44OoXSIsICJb44Op44e7XSIsICJb44Oq44e8XSIsICJb44Or44e9XSIsICJb44Os44e+XSIsICJb44Ot44e/XSIsICJb44KO44Ou44Ov44O3XSIsICJb44Ow44O4XSIsICJb44Ox44O5XSIsICJb44Oy44O6XSIsICLjg7MiLCAiW+OCmeOCmuOCm+OCnOOCneOCnuODu+ODveODvl0iLCAi8JuAgCJ9LAoJCXRvICAgPSB7IuOBgiIsICLjgYQiLCAi44GGIiwgIuOBiCIsICLjgYoiLCAi44GLIiwgIuOBjSIsICLjgY8iLCAi44GRIiwgIuOBkyIsICLjgZUiLCAi44GXIiwgIuOBmSIsICLjgZsiLCAi44GdIiwgIuOBnyIsICLjgaEiLCAi44GkIiwgIuOBpiIsICLjgagiLCAi44GqIiwgIuOBqyIsICLjgawiLCAi44GtIiwgIuOBriIsICLjga8iLCAi44GyIiwgIuOBtSIsICLjgbgiLCAi44G7IiwgIuOBviIsICLjgb8iLCAi44KAIiwgIuOCgSIsICLjgoIiLCAi44KEIiwgIuOChiIsICLjgogiLCAi44KJIiwgIuOCiiIsICLjgosiLCAi44KMIiwgIuOCjSIsICLjgo8iLCAi44KQIiwgIuOCkSIsICLjgpIiLCAi44KTIiwgIiIsICLjgYgifX0sCgktLV09XQp9CgptWyJqdiJdID0gewoJIkphdmFuZXNlIiwKCSJRMzM1NDkiLAoJInBvei1zdXMiLAoJc2NyaXB0cyA9IHsiTGF0biIsICJKYXZhIn0sCgl0cmFuc2xpdF9tb2R1bGUgPSAianYtdHJhbnNsaXQiLAoJYW5jZXN0b3JzID0geyJrYXcifSwKCWxpbmtfdHIgPSB0cnVlLAp9CgptWyJrYSJdID0gewoJIkdlb3JnaWFuIiwKCSJRODEwOCIsCgkiY2NzLWd6biIsCglvdGhlck5hbWVzID0geyJLYXJ0dmVsaWFuIiwgIkp1ZGVvLUdlb3JnaWFuIiwgIktpdnJ1bGkiLCAiR3J1emluaWMifSwKCXNjcmlwdHMgPSB7Ikdlb3IiLCAiR2VvayIsICJIZWJyIn0sIC0tIEhlYnIgaXMgdXNlZCB0byB3cml0ZSBKdWRlby1HZW9yZ2lhbgoJYW5jZXN0b3JzID0geyJvZ2UifSwKCXRyYW5zbGl0X21vZHVsZSA9ICJHZW9yLXRyYW5zbGl0IiwKCW92ZXJyaWRlX3RyYW5zbGl0ID0gdHJ1ZSwKCWVudHJ5X25hbWUgPSB7CgkJZnJvbSA9IHsizIIifSwKCQl0byAgID0geyIifX0sCn0KCm1bImtnIl0gPSB7CgkiS29uZ28iLAoJIlEzMzcwMiIsCgkiYm50IiwKCW90aGVyTmFtZXMgPSB7Iktpa29uZ28iLCAiS29vbmdvIiwgIkxhYXJpIiwgIlNhbiBTYWx2YWRvciBLb25nbyIsICJZb21iZSJ9LAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bImtpIl0gPSB7CgkiS2lrdXl1IiwKCSJRMzM1ODciLAoJImJudCIsCglvdGhlck5hbWVzID0geyJHaWt1eXUiLCAiR8Spa8WpecWpIn0sCglzY3JpcHRzID0gTGF0biwKfQoKbVsia2oiXSA9IHsKCSJLd2FueWFtYSIsCgkiUTE0MDUwNzciLAoJImJudCIsCglvdGhlck5hbWVzID0geyJLdWFueWFtYSIsICJPc2hpa3dhbnlhbWEifSwKCXNjcmlwdHMgPSBMYXRuLAp9CgptWyJrayJdID0gewoJIkthemFraCIsCgkiUTkyNTIiLAoJInRyay1raXAiLAoJc2NyaXB0cyA9IHsiQ3lybCIsICJMYXRuIiwgImtrLUFyYWIifSwKCXRyYW5zbGl0X21vZHVsZSA9ICJray10cmFuc2xpdCIsCglvdmVycmlkZV90cmFuc2xpdCA9IHRydWUsCn0KCm1bImtsIl0gPSB7CgkiR3JlZW5sYW5kaWMiLAoJIlEyNTM1NSIsCgkiZXN4LWludSIsCglvdGhlck5hbWVzID0geyJLYWxhYWxsaXN1dCJ9LAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bImttIl0gPSB7CgkiS2htZXIiLAoJIlE5MjA1IiwKCSJta2giLAoJb3RoZXJOYW1lcyA9IHsiQ2FtYm9kaWFuIn0sCglzY3JpcHRzID0geyJLaG1yIn0sCglhbmNlc3RvcnMgPSB7Im1raC1ta20ifSwKCXRyYW5zbGl0X21vZHVsZSA9ICJrbS10cmFuc2xpdCIsCn0KCm1bImtuIl0gPSB7CgkiS2FubmFkYSIsCgkiUTMzNjczIiwKCSJkcmEiLAoJc2NyaXB0cyA9IHsiS25kYSJ9LAoJYW5jZXN0b3JzID0geyJkcmEtbWtuIn0sCgl0cmFuc2xpdF9tb2R1bGUgPSAia24tdHJhbnNsaXQiLAp9CgptWyJrbyJdID0gewoJIktvcmVhbiIsCgkiUTkxNzYiLAoJInFmYS1rb3IiLAoJb3RoZXJOYW1lcyA9IHsiTW9kZXJuIEtvcmVhbiJ9LAoJc2NyaXB0cyA9IHsiS29yZSIsICJCcmFpIn0sCglhbmNlc3RvcnMgPSB7Im9rbSJ9LAoJdHJhbnNsaXRfbW9kdWxlID0gImtvLXRyYW5zbGl0IiwKfQoKbVsia3IiXSA9IHsKCSJLYW51cmkiLAoJIlEzNjA5NCIsCgkic3NhLXNhaCIsCglvdGhlck5hbWVzID0geyJLYW5lbWJ1IiwgIkJpbG1hIEthbnVyaSIsICJDZW50cmFsIEthbnVyaSIsICJNYW5nYSBLYW51cmkiLCAiVHVtYXJpIEthbnVyaSJ9LAoJc2NyaXB0cyA9IExhdG5BcmFiLAoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsibnkiLCAix50iLCAic2gifSwKCQl0byAgID0geyJufiIsICJlfiIsICJzfiJ9fSAsIC0tIHRoZSBzb3J0a2V5IGFuZCBlbnRyeV9uYW1lIGFyZSBvbmx5IGZvciBzdGFuZGFyZCBLYW51cmk7IHdoZW4gZGlhbGVjdGFsIGVudHJpZXMgZ2V0IGFkZGVkLCBzb21lb25lIHdpbGwgaGF2ZSB0byB3b3JrIG91dCBob3cgdGhlIGRpYWxlY3RzIHNob3VsZCBiZSByZXByZXNlbnRlZCBvcnRob2dyYXBoaWNhbGx5CgllbnRyeV9uYW1lID0gewoJCWZyb20gPSB7IsOAIiwgIsOgIiwgIsOIIiwgIsOoIiwgIsaOzIAiLCAix53MgCIsICLDjCIsICLDrCIsICLDkiIsICLDsiIsICLDmSIsICLDuSIsICLDgiIsICLDoiIsICLDiiIsICLDqiIsICLGjsyCIiwgIsedzIIiLCAiw44iLCAiw64iLCAiw5QiLCAiw7QiLCAiw5siLCAiw7siLCAixIIiLCAixIMiLCAixJQiLCAixJUiLCAixo7MhiIsICLHncyGIiwgIsSsIiwgIsStIiwgIsWOIiwgIsWPIiwgIsWsIiwgIsWtIiwgIsOBIiwgIsOhIiwgIsOJIiwgIsOpIiwgIsaOzIEiLCAix53MgSIsICLDjSIsICLDrSIsICLDkyIsICLDsyIsICLDmiIsICLDuiIsIEdSQVZFLCBBQ1VURX0sCgkJdG8gICA9IHsiQSIsICJhIiwgIkUiLCAiZSIsICLGjiIsICLHnSIsICJJIiwgImkiLCAiTyIsICJvIiwgIlUiLCAidSIsICJBIiwgImEiLCAiRSIsICJlIiwgIsaOIiwgIsedIiwgIkkiLCAiaSIsICJPIiwgIm8iLCAiVSIsICJ1IiwgIkEiLCAiYSIsICJFIiwgImUiLCAixo4iLCAix50iLCAiSSIsICJpIiwgIk8iLCAibyIsICJVIiwgInUiLCAiQSIsICJhIiwgIkUiLCAiZSIsICLGjiIsICLHnSIsICJJIiwgImkiLCAiTyIsICJvIiwgIlUiLCAidSJ9fSwKfQoKbVsia3MiXSA9IHsKCSJLYXNobWlyaSIsCglvdGhlck5hbWVzID0geyJLb3NodXIifSwKCSJRMzM1NTIiLAoJImluYy1kYXIiLAoJc2NyaXB0cyA9IHsia3MtQXJhYiIsICJEZXZhIiwgIlNocmQiLCAiTGF0biJ9LAoJdHJhbnNsaXRfbW9kdWxlID0gInRyYW5zbGl0LXJlZGlyZWN0IiwKCWFuY2VzdG9ycyA9IHsiaW5jLWRhci1wcm8ifSwKfQoKbVsia3UiXSA9IHsKCSJLdXJkaXNoIiwKCSJRMzYzNjgiLAoJImlyYS1ud2kiLAoJc2NyaXB0cyA9IHsiTGF0biIsICJrdS1BcmFiIiwgIkFybW4iLCAiQ3lybCJ9LAoJdHJhbnNsaXRfbW9kdWxlID0gInRyYW5zbGl0LXJlZGlyZWN0IiwKfQoKLS0gImt2IiBJUyBUUkVBVEVEIEFTICJrb2kiLCAia3B2IiwgU0VFIFdUOkxUCgptWyJrdyJdID0gewoJIkNvcm5pc2giLAoJIlEyNTI4OSIsCgkiY2VsLWJyeSIsCglzY3JpcHRzID0gTGF0biwKCWFuY2VzdG9ycyA9IHsiY254In0sCn0KCm1bImt5Il0gPSB7CgkiS3lyZ3l6IiwKCSJROTI1NSIsCgkidHJrLWtpcCIsCglvdGhlck5hbWVzID0geyJLaXJnaGl6IiwgIktpcmdpeiJ9LAoJc2NyaXB0cyA9IHsiQ3lybCIsICJMYXRuIiwgIkFyYWIifSwKCXRyYW5zbGl0X21vZHVsZSA9ICJreS10cmFuc2xpdCIsCglvdmVycmlkZV90cmFuc2xpdCA9IHRydWUsCn0KCm1bImxhIl0gPSB7CgkiTGF0aW4iLAoJIlEzOTciLAoJIml0YyIsCglzY3JpcHRzID0gTGF0biwKCWFuY2VzdG9ycyA9IHsiaXRjLW9sYSJ9LAoJZW50cnlfbmFtZSA9IHtyZW1vdmVfZGlhY3JpdGljcyA9IE1BQ1JPTi4uQlJFVkUuLkRJQUVSfSwKCXN0YW5kYXJkQ2hhcnMgPSAiQS1aYS16w4bDpsWSxZPEgC3Eg8SSLcSVxKotxK3FjC3Fj8WqLcWtyLLIsyIgLi4gTUFDUk9OIC4uIEJSRVZFIC4uIFBVTkNUVUFUSU9OLAp9CgptWyJsYiJdID0gewoJIkx1eGVtYm91cmdpc2giLAoJIlE5MDUxIiwKCSJnbXciLAoJc2NyaXB0cyA9IExhdG4sCglhbmNlc3RvcnMgPSB7ImdtaCJ9LAp9CgptWyJsZyJdID0gewoJIkx1Z2FuZGEiLAoJIlEzMzM2OCIsCgkiYm50IiwKCW90aGVyTmFtZXMgPSB7IkdhbmRhIiwgIk9sdWdhbmRhIn0sCglzY3JpcHRzID0gTGF0biwKCWVudHJ5X25hbWUgPSB7CgkJZnJvbSA9IHsiw6EiLCAiw4EiLCAiw6kiLCAiw4kiLCAiw60iLCAiw40iLCAiw7MiLCAiw5MiLCAiw7oiLCAiw5oiLCAixYQiLCAixYMiLCAi4bi/IiwgIuG4viIsICLDoiIsICLDgiIsICLDqiIsICLDiiIsICLDriIsICLDjiIsICLDtCIsICLDlCIsICLDuyIsICLDmyIgfSwKCQl0byAgID0geyJhIiwgIkEiLCAiZSIsICJFIiwgImkiLCAiSSIsICJvIiwgIk8iLCAidSIsICJVIiwgIm4iLCAiTiIsICJtIiwgIk0iLCAiYSIsICJBIiwgImUiLCAiRSIsICJpIiwgIkkiLCAibyIsICJPIiwgInUiLCAiVSIsfX0sCglzb3J0X2tleSA9IHsKCQlmcm9tID0geyLFiyJ9LAoJCXRvICAgPSB7Im7ugKEifX0gLAp9CgptWyJsaSJdID0gewoJIkxpbWJ1cmdpc2giLAoJIlExMDIxNzIiLAoJImdtdyIsCglvdGhlck5hbWVzID0geyJMaW1idXJnYW4iLCAiTGltYnVyZ2lhbiIsICJMaW1idXJnaWMifSwKCXNjcmlwdHMgPSBMYXRuLAoJYW5jZXN0b3JzID0geyJkdW0ifSwKfQoKbVsibG4iXSA9IHsKCSJMaW5nYWxhIiwKCSJRMzYyMTciLAoJImJudCIsCglvdGhlck5hbWVzID0geyJOZ2FsYSJ9LAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bImxvIl0gPSB7CgkiTGFvIiwKCSJROTIxMSIsCgkidGFpLXN3ZSIsCglvdGhlck5hbWVzID0geyJMYW90aWFuIn0sCglzY3JpcHRzID0geyJMYW9vIn0sCgl0cmFuc2xpdF9tb2R1bGUgPSAibG8tdHJhbnNsaXQiLAoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsiJXAiLCAiW+C7iC3gu41dIiwgIuC6vCIsICLgur0iLCAi4LucIiwgIuC7nSIsICIoW+C7gOC7geC7guC7g+C7hF0pKFvguoEt4LquXSkifSwKCQl0byAgID0geyIiLCAiIiwgIuC6pSIsICLguo0iLCAi4Lqr4LqZIiwgIuC6q+C6oSIsICIlMiUxIn19LAp9CgptWyJsdCJdID0gewoJIkxpdGh1YW5pYW4iLAoJIlE5MDgzIiwKCSJiYXQiLAoJc2NyaXB0cyA9IExhdG4sCglhbmNlc3RvcnMgPSB7Im9sdCJ9LAoJZW50cnlfbmFtZSA9IHsKCQlmcm9tID0geyJbw6HDo8OgXSIsICJbw4HDg8OAXSIsICJbw6nhur3DqF0iLCAiW8OJ4bq8w4hdIiwgIlvDrcSpw6xdIiwgIlvDjcSow4xdIiwgIlvDveG7uV0iLCAiW8Od4bu4XSIsICLDsSIsICJbw7PDtcOyXSIsICJbw5PDlcOSXSIsICJbw7rFqcO5XSIsICJbw5rFqMOZXSIsIEFDVVRFLCBHUkFWRSwgVElMREV9LAoJCXRvICAgPSB7ImEiLCAgICAgICAiQSIsICAgICAiZSIsICAgICAiRSIsICAgICAiaSIsICAgICAiSSIsICAgICAieSIsICAgIlkiLCAgICJuIiwgICAibyIsICAgICJPIiwgICAgICJ1IiwgICAgICAiVSJ9fSAsCn0KCm1bImx1Il0gPSB7CgkiTHViYS1LYXRhbmdhIiwKCSJRMzYxNTciLAoJImJudCIsCglzY3JpcHRzID0gTGF0biwKfQoKbVsibHYiXSA9IHsKCSJMYXR2aWFuIiwKCSJROTA3OCIsCgkiYmF0IiwKCW90aGVyTmFtZXMgPSB7IkxldHRpc2giLCAiTGV0dCJ9LAoJc2NyaXB0cyA9IExhdG4sCgllbnRyeV9uYW1lID0gewoJCS0tIFRoaXMgYXR0ZW1wdHMgdG8gY29udmVydCB2b3dlbHMgd2l0aCB0b25lIG1hcmtzIHRvIHZvd2VscyBlaXRoZXIgd2l0aAoJCS0tIG9yIHdpdGhvdXQgbWFjcm9ucy4gU3BlY2lmaWNhbGx5LCB0aGVyZSBzaG91bGQgYmUgbm8gbWFjcm9ucyBpZiB0aGUKCQktLSB2b3dlbCBpcyBwYXJ0IG9mIGEgZGlwaHRob25nIChpbmNsdWRpbmcgcmVzb25hbnQgZGlwaHRob25ncyBzdWNoCgkJLS0gcMOscmtzdHMgLSZndDsgcGlya3N0cyBub3QgI3DEq3Jrc3RzKS4gV2hhdCB3ZSBkbyBpcyBmaXJzdCBjb252ZXJ0IHRoZQoJCS0tIHZvd2VsICsgdG9uZSBtYXJrIHRvIGEgdm93ZWwgKyB0aWxkZSBpbiBhIGRlY29tcG9zZWQgZmFzaGlvbiwKCQktLSB0aGVuIHJlbW92ZSB0aGUgdGlsZGUgaW4gZGlwaHRob25ncywgdGhlbiBjb252ZXJ0IHRoZSByZW1haW5pbmcKCQktLSB2b3dlbCArIHRpbGRlIHNlcXVlbmNlcyB0byBtYWNyb25lZCB2b3dlbHMsIHRoZW4gZGVsZXRlIGFueSBvdGhlcgoJCS0tIHRpbGRlLiBXZSBsZWF2ZSBhbHJlYWR5LW1hY3JvbmVkIHZvd2VscyBhbG9uZTogQm90aCBlLmcuIGFyIGFuZCDEgXIKCQktLSBvY2N1ciBiZWZvcmUgY29uc29uYW50cy4gRklYTUU6IFRoaXMgc3RpbGwgbWlnaHQgbm90IGJlIHN1ZmZpY2llbnQuCgkJZnJvbSA9IHsiyKgiLCAiyKkiLCAiW8OCw4PDgF0iLCAiW8Oiw6PDoF0iLCAiW8OK4bq8w4hdIiwgIlvDquG6vcOoXSIsICJbw47EqMOMXSIsICJbw67EqcOsXSIsICJbw5TDlcOSXSIsICJbw7TDtcOyXSIsICJbw5vFqMOZXSIsICJbw7vFqcO5XSIsICJbw5HHuF0iLCAiW8Oxx7ldIiwgIlsiIC4uIENJUkMgLi4gVElMREUgLi5HUkFWRSAuLiJdIiwgIihbYUFlRWlJb091VV0pIiAuLiBUSUxERSAuLiI/KFtscm5tdWlMUk5NVUldKSIgLi4gVElMREUgLi4gIj8oW15hQWVFaUlvT3VVxIHEgMSTxJLEq8SqxavFql0pIiwgIihbYUFlRWlJb091VV0pIiAuLiBUSUxERSAuLiI/KFtscm5tdWlMUk5NVUldKSIgLi4gVElMREUgLi4iPyQiLCAiKFtpSV0pIiAuLiBUSUxERSAuLiAiPyhbZUVdKSIgLi4gVElMREUgLi4gIj8iLCAiQSIgLi4gVElMREUsICJhIiAuLiBUSUxERSwgIkUiIC4uIFRJTERFLCAiZSIgLi4gVElMREUsICJJIiAuLiBUSUxERSwgImkiIC4uIFRJTERFLCAiVSIgLi4gVElMREUsICJ1IiAuLiBUSUxERSwgVElMREV9LAoJCXRvICAgPSB7IkUiLCAiZSIsICJBIiAuLiBUSUxERSwgImEiIC4uIFRJTERFLCAiRSIgLi4gVElMREUsICJlIiAuLiBUSUxERSwgIkkiIC4uIFRJTERFLCAiaSIgLi4gVElMREUsICJPIiwgIm8iLCAiVSIgLi4gVElMREUsICJ1IiAuLiBUSUxERSwgIk4iLCAibiIsIFRJTERFLCAiJTElMiUzIiwgIiUxJTIiLCAiJTElMiIsICLEgCIsICLEgSIsICLEkiIsICLEkyIsICLEqiIsICLEqyIsICLFqiIsICLFqyIsICIifX0sCn0KCm1bIm1nIl0gPSB7CgkiTWFsYWdhc3kiLAoJIlE3OTMwIiwKCSJwb3otYnJlIiwKCW90aGVyTmFtZXMgPSB7IkJldHNpbWlzYXJha2EgTWFsYWdhc3kiLCAiQmV0c2ltaXNhcmFrYSIsICJOb3J0aGVybiBCZXRzaW1pc2FyYWthIE1hbGFnYXN5IiwgIk5vcnRoZXJuIEJldHNpbWlzYXJha2EiLCAiU291dGhlcm4gQmV0c2ltaXNhcmFrYSBNYWxhZ2FzeSIsICJTb3V0aGVybiBCZXRzaW1pc2FyYWthIiwgIkJhcmEgTWFsYWdhc3kiLCAiQmFyYSIsICJNYXNpa29ybyBNYWxhZ2FzeSIsICJNYXNpa29ybyIsICJBbnRhbmthcmFuYSIsICJBbnRhbmthcmFuYSBNYWxhZ2FzeSIsICJQbGF0ZWF1IE1hbGFnYXN5IiwgIlNha2FsYXZhIiwgIlRhbmRyb3kgTWFsYWdhc3kiLCAiVGFuZHJveSIsICJUYW5vc3kiLCAiVGFub3N5IE1hbGFnYXN5IiwgIlRlc2FrYSIsICJUc2ltaWhldHkiLCAiVHNpbWloZXR5IE1hbGFnYXN5IiwgIkJ1c2hpIiwgIlNoaWJ1c2hpIiwgIktpYnVzaGkifSwKCXNjcmlwdHMgPSBMYXRuLAp9CgptWyJtaCJdID0gewoJIk1hcnNoYWxsZXNlIiwKCSJRMzYyODAiLAoJInBvei1taWMiLAoJc2NyaXB0cyA9IExhdG4sCglzb3J0X2tleSA9IHsKCQlmcm9tID0geyLEgSIgLCAixLwiICwgIm3MpyIgLCAixYYiICwgIm7MhCIgICwgIm/MpyIgLCAixY0iICAsICLFqyIgfSwKCQl0byAgID0geyJhfiIsICJsfiIsICJtfiIsICJufiIsICJufn4iLCAib34iLCAib35+IiwgInV+In19ICwKfQoKbVsibWkiXSA9IHsKCSJNYW9yaSIsCgkiUTM2NDUxIiwKCSJwb3otcGVwIiwKCW90aGVyTmFtZXMgPSB7Ik3EgW9yaSJ9LAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bIm1rIl0gPSB7CgkiTWFjZWRvbmlhbiIsCgkiUTkyOTYiLAoJInpscyIsCglzY3JpcHRzID0gQ3lybCwKCXRyYW5zbGl0X21vZHVsZSA9ICJtay10cmFuc2xpdCIsCgllbnRyeV9uYW1lID0gewoJCWZyb20gPSB7QUNVVEV9LAoJCXRvICAgPSB7fX0sCn0KCm1bIm1sIl0gPSB7CgkiTWFsYXlhbGFtIiwKCSJRMzYyMzYiLAoJImRyYSIsCglzY3JpcHRzID0geyJNbHltIn0sCgl0cmFuc2xpdF9tb2R1bGUgPSAibWwtdHJhbnNsaXQiLAoJb3ZlcnJpZGVfdHJhbnNsaXQgPSB0cnVlLAp9CgptWyJtbiJdID0gewoJIk1vbmdvbGlhbiIsCgkiUTkyNDYiLAoJInhnbiIsCglvdGhlck5hbWVzID0geyJLaGFsa2hhIE1vbmdvbGlhbiJ9LAoJc2NyaXB0cyA9IHsiQ3lybCIsICJNb25nIiwgIlNveW8iLCAiWmFuYiJ9LCAtLSBlbnRyaWVzIGluIFNveW8gb3IgWmFuYiBtaWdodCByZXF1aXJlIHByaW9yIGRpc2N1c3Npb24KCWFuY2VzdG9ycyA9IHsiY21nIn0sCgl0cmFuc2xpdF9tb2R1bGUgPSAibW4tdHJhbnNsaXQiLAoJb3ZlcnJpZGVfdHJhbnNsaXQgPSB0cnVlLAp9CgotLSAibW8iIElTIFRSRUFURUQgQVMgInJvIiwgU0VFIFdUOkxUCgptWyJtciJdID0gewoJIk1hcmF0aGkiLAoJIlExNTcxIiwKCSJpbmMiLAoJc2NyaXB0cyA9IHsiRGV2YSIsICJNb2RpIn0sCglhbmNlc3RvcnMgPSB7Im9tciJ9LAoJdHJhbnNsaXRfbW9kdWxlID0gIm1yLXRyYW5zbGl0IiwKfQoKbVsibXMiXSA9IHsKCSJNYWxheSIsCgkiUTkyMzciLAoJInBvei1tbHkiLAoJb3RoZXJOYW1lcyA9IHsiTWFsYXlzaWFuIiwgIlN0YW5kYXJkIE1hbGF5In0sCglzY3JpcHRzID0geyJMYXRuIiwgIm1zLUFyYWIifSwKfQoKbVsibXQiXSA9IHsKCSJNYWx0ZXNlIiwKCSJROTE2NiIsCgkic2VtLWFyYiIsCglzY3JpcHRzID0gTGF0biwKCWFuY2VzdG9ycyA9IHsic3FyIn0sCn0KCm1bIm15Il0gPSB7CgkiQnVybWVzZSIsCgkiUTkyMjgiLAoJInRicS1icm0iLAoJb3RoZXJOYW1lcyA9IHsiTXlhbm1hciJ9LAoJc2NyaXB0cyA9IHsiTXltciJ9LAoJYW5jZXN0b3JzID0geyJvYnIifSwKCXRyYW5zbGl0X21vZHVsZSA9ICJteS10cmFuc2xpdCIsCglvdmVycmlkZV90cmFuc2xpdCA9IHRydWUsCn0KCm1bIm5hIl0gPSB7CgkiTmF1cnVhbiIsCgkiUTEzMzA3IiwKCSJwb3otbWljIiwKCW90aGVyTmFtZXMgPSB7Ik5hdXJ1In0sCglzY3JpcHRzID0gTGF0biwKfQoKbVsibmIiXSA9IHsKCSJOb3J3ZWdpYW4gQm9rbcOlbCIsCgkiUTI1MTY3IiwKCSJnbXEiLAoJb3RoZXJOYW1lcyA9IHsiQm9rbcOlbCJ9LAoJc2NyaXB0cyA9IExhdG4sCglhbmNlc3RvcnMgPSB7ImdtcS1tbm8ifSwKCXdpa2ltZWRpYV9jb2RlcyA9IHsibm8ifSwKfQoKbVsibmQiXSA9IHsKCSJOb3J0aGVybiBOZGViZWxlIiwKCSJRMzU2MTMiLAoJImJudC1uZ3UiLAoJb3RoZXJOYW1lcyA9IHsiTm9ydGggTmRlYmVsZSJ9LAoJc2NyaXB0cyA9IExhdG4sCgllbnRyeV9uYW1lID0gewoJCWZyb20gPSB7IlvEgcOgw6HDoseOXSIsICJbxJPDqMOpw6rEm10iLCAiW8Srw6zDrcOux5BdIiwgIlvFjcOyw7PDtMeSXSIsICJbxavDucO6w7vHlF0iLCAi4bi/IiwgIlvHucWExYhdIiwgTUFDUk9OLCBBQ1VURSwgR1JBVkUsIENJUkMsIENBUk9OfSwKCQl0byAgID0geyJhIiAgICAgICwgImUiICAgICAgLCAiaSIgICAgICAsICJvIiAgICAgICwgInUiICAgICAgLCAibSIsICJuIiAgICB9fSwKfQoKbVsibmUiXSA9IHsKCSJOZXBhbGkiLAoJIlEzMzgyMyIsCgkiaW5jLXBhaCIsCglvdGhlck5hbWVzID0geyJOZXBhbGVzZSJ9LAoJc2NyaXB0cyA9IHsiRGV2YSIsICJOZXdhIn0sCgl0cmFuc2xpdF9tb2R1bGUgPSAibmUtdHJhbnNsaXQiLAoJYW5jZXN0b3JzID0geyJwc3UifSwKfQoKbVsibmciXSA9IHsKCSJOZG9uZ2EiLAoJIlEzMzkwMCIsCgkiYm50IiwKCXNjcmlwdHMgPSBMYXRuLAp9CgptWyJubCJdID0gewoJIkR1dGNoIiwKCSJRNzQxMSIsCgkiZ213IiwKCW90aGVyTmFtZXMgPSB7Ik5ldGhlcmxhbmRpYyIsICJGbGVtaXNoIn0sCglzY3JpcHRzID0gTGF0biwKCWFuY2VzdG9ycyA9IHsiZHVtIn0sCglzb3J0X2tleSA9IHsKCQlmcm9tID0geyJbw6TDocOiw6VdIiwgIlvDq8Opw6pdIiwgIlvDr8Otw65dIiwgIlvDtsOzw7RdIiwgIlvDvMO6w7tdIiwgIsOnIiwgIsOxIiwgIl4tIn0sCgkJdG8gICA9IHsiYSIJICwgImUiCSwgImkiCSwgIm8iCSwgInUiCSwgImMiLCAibiJ9fSAsCglzdGFuZGFyZENoYXJzID0gIkEtWmEtejAtOSIgLi4gUFVOQ1RVQVRJT04gLi4gdSgweDI4MDApIC4uICItIiAuLiB1KDB4MjhGRiksCn0KCm1bIm5uIl0gPSB7CgkiTm9yd2VnaWFuIE55bm9yc2siLAoJIlEyNTE2NCIsCgkiZ21xIiwKCW90aGVyTmFtZXMgPSB7Ik5ldyBOb3J3ZWdpYW4iLCAiTnlub3JzayJ9LAoJc2NyaXB0cyA9IExhdG4sCglhbmNlc3RvcnMgPSB7ImdtcS1tbm8ifSwKfQoKbVsibm8iXSA9IHsKCSJOb3J3ZWdpYW4iLAoJIlE5MDQzIiwKCSJnbXEiLAoJc2NyaXB0cyA9IExhdG4sCglhbmNlc3RvcnMgPSB7ImdtcS1tbm8ifSwKfQoKbVsibnIiXSA9IHsKCSJTb3V0aGVybiBOZGViZWxlIiwKCSJRMzY3ODUiLAoJImJudC1uZ3UiLAoJb3RoZXJOYW1lcyA9IHsiU291dGggTmRlYmVsZSJ9LAoJc2NyaXB0cyA9IExhdG4sCgllbnRyeV9uYW1lID0gewoJCWZyb20gPSB7IlvEgcOgw6HDoseOXSIsICJbxJPDqMOpw6rEm10iLCAiW8Srw6zDrcOux5BdIiwgIlvFjcOyw7PDtMeSXSIsICJbxavDucO6w7vHlF0iLCAi4bi/IiwgIlvHucWExYhdIiwgTUFDUk9OLCBBQ1VURSwgR1JBVkUsIENJUkMsIENBUk9OfSwKCQl0byAgID0geyJhIiAgICAgICwgImUiICAgICAgLCAiaSIgICAgICAsICJvIiAgICAgICwgInUiICAgICAgLCAibSIsICJuIiAgICB9fSwKfQoKbVsibnYiXSA9IHsKCSJOYXZham8iLAoJIlExMzMxMCIsCgkiYXBhIiwKCW90aGVyTmFtZXMgPSB7Ik5hdmFobyIsICJEaW7DqSBiaXphYWQifSwKCXNjcmlwdHMgPSB7Im52LUxhdG4ifSwKCXNvcnRfa2V5ID0gewoJCWZyb20gPSB7IlvDocSFXSIsICJbw6nEmV0iLCAiW8OtxK9dIiwgIlvDs8erXSIsICLFhCIsICJebihbZGpsdF0pIiwgIsWCIiAsICJbyrzigJknXSIsIEFDVVRFfSwKCQl0byAgID0geyJhIiAgICwgImUiICAgLCAiaSIgICAsICJvIiAgICwgIm4iLCAibmklMSIJICAsICJsfiJ9fSwgLS0gdGhlIHRpbGRlIGlzIHVzZWQgdG8gZ3VhcmFudGVlIHRoYXQgxYIgd2lsbCBhbHdheXMgYmUgc29ydGVkIGFmdGVyIGFsbCBvdGhlciB3b3JkcyB3aXRoIGwKfQoKbVsibnkiXSA9IHsKCSJDaGljaGV3YSIsCgkiUTMzMjczIiwKCSJibnQiLAoJb3RoZXJOYW1lcyA9IHsiQ2hpY2hlxbVhIiwgIkNoaW55YW5qYSIsICJOeWFuamEiLCAiQ2hld2EiLCAiQ2ljZXdhIiwgIkNld2EiLCAiQ2lueWFuamEifSwKCXNjcmlwdHMgPSBMYXRuLAoJZW50cnlfbmFtZSA9IHsKCQlmcm9tID0geyLFtSIsICLFtCIsICLDoSIsICLDgSIsICLDqSIsICLDiSIsICLDrSIsICLDjSIsICLDsyIsICLDkyIsICLDuiIsICLDmiIsICLFhCIsICLFgyIsICLhuL8iLCAi4bi+IiB9LAoJCXRvICAgPSB7InciLCAiVyIsICJhIiwgIkEiLCAiZSIsICJFIiwgImkiLCAiSSIsICJvIiwgIk8iLCAidSIsICJVIiwgIm4iLCAiTiIsICJtIiwgIk0ifX0sCglzb3J0X2tleSA9IHsKCQlmcm9tID0geyJuZycifSwKCQl0byAgID0geyJuZyJ9fSAsCn0KCm1bIm9jIl0gPSB7CgkiT2NjaXRhbiIsCgkiUTE0MTg1IiwKCSJyb2EiLAoJb3RoZXJOYW1lcyA9IHsiUHJvdmVuw6dhbCIsICJBdXZlcmduYXQiLCAiQXV2ZXJuaGF0IiwgIkdhc2NvbiIsICJMYW5ndWVkb2NpZW4iLCAiTGVuZ2Fkb2NpYW4iLCAiU2h1YWRpdCIsICJDaG91aGFkaXRlIiwgIkNob3VoYWRpdCIsICJDaG91YWRpdGUiLCAiQ2hvdWFkaXQiLCAiU2h1aGFkaXQiLCAiSnVkZW8tUHJvdmVuw6dhbCIsICJKdWRlby1Qcm92ZW5jYWwiLCAiSnVkZW8tQ29tdGFkaW4ifSwKCXNjcmlwdHMgPSB7IkxhdG4iLCAiSGViciJ9LAoJYW5jZXN0b3JzID0geyJwcm8ifSwKCXNvcnRfa2V5ID0gewoJCWZyb20gPSB7IlvDoMOhXSIsICJbw6jDqV0iLCAiW8Otw69dIiwgIlvDssOzXSIsICJbw7rDvF0iLCAiw6ciLCAiKFtsbnNdKcK3aCJ9LAoJCXRvICAgPSB7ImEiICAgLCAiZSIgICAsICJpIiAgICwgIm8iICAgLCAidSIgICAsICJjIiwgIiUxaCIJICB9fSAsCn0KCm1bIm9qIl0gPSB7CgkiT2ppYndlIiwKCSJRMzM4NzUiLAoJImFsZyIsCglvdGhlck5hbWVzID0geyJDaGlwcGV3YSIsICJPamlid2F5IiwgIk9qaWJ3ZW1vd2luIiwgIlNvdXRod2VzdGVybiBPamlid2EifSwKCXNjcmlwdHMgPSB7IkNhbnMiLCAiTGF0biJ9LAp9CgptWyJvbSJdID0gewoJIk9yb21vIiwKCSJRMzM4NjQiLAoJImN1cyIsCglvdGhlck5hbWVzID0geyJPcm1hIiwgIkJvcmFuYS1BcnNpLUd1amkgT3JvbW8iLCAiV2VzdCBDZW50cmFsIE9yb21vIn0sCglzY3JpcHRzID0geyJMYXRuIiwgIkV0aGkifSwKfQoKbVsib3IiXSA9IHsKCSJPcml5YSIsCgkiUTMzODEwIiwKCSJpbmMiLAoJb3RoZXJOYW1lcyA9IHsiT2RpYSIsICJPb3J5YSJ9LAoJc2NyaXB0cyA9IHsiT3J5YSJ9LAoJYW5jZXN0b3JzID0geyJpbmMtbW9yIn0sCgl0cmFuc2xpdF9tb2R1bGUgPSAib3ItdHJhbnNsaXQiLAp9CgptWyJvcyJdID0gewoJIk9zc2V0aWFuIiwKCSJRMzM5NjgiLAoJImlyYS1zY3kiLAoJb3RoZXJOYW1lcyA9IHsiT3NzZXRlIiwgIk9zc2V0aWMiLCAiRGlnb3IiLCAiSXJvbiJ9LAoJc2NyaXB0cyA9IHsiQ3lybCIsICJHZW9yIiwgIkxhdG4ifSwKCWFuY2VzdG9ycyA9IHsib29zIn0sCgl0cmFuc2xpdF9tb2R1bGUgPSAib3MtdHJhbnNsaXQiLAoJb3ZlcnJpZGVfdHJhbnNsaXQgPSB0cnVlLAoJZW50cnlfbmFtZSA9IHsKCQlmcm9tID0ge0dSQVZFLCBBQ1VURX0sCgkJdG8gICA9IHt9fSAsCn0KCm1bInBhIl0gPSB7CgkiUHVuamFiaSIsCgkiUTU4NjM1IiwKCSJpbmMiLAoJb3RoZXJOYW1lcyA9IHsiUGFuamFiaSJ9LAoJc2NyaXB0cyA9IHsiR3VydSIsICJwYS1BcmFiIiwgIkRldmEifSwKCWFuY2VzdG9ycyA9IHsicHN1In0sCgl0cmFuc2xpdF9tb2R1bGUgPSAidHJhbnNsaXQtcmVkaXJlY3QiLAoJZW50cnlfbmFtZSA9IHsKCQlmcm9tID0ge3UoMHgwNjRCKSwgdSgweDA2NEMpLCB1KDB4MDY0RCksIHUoMHgwNjRFKSwgdSgweDA2NEYpLCB1KDB4MDY1MCksIHUoMHgwNjUxKSwgdSgweDA2NTIpfSwKCQl0byAgID0ge319ICwKfQoKbVsicGkiXSA9IHsKCSJQYWxpIiwKCSJRMzY3MjciLAoJImluYy1vbGQiLAoJc2NyaXB0cyA9IHsiTGF0biIsICJCcmFoIiwgIkRldmEiLCAiQmVuZyIsICJTaW5oIiwgIk15bXIiLCAiVGhhaSIsICJMYW5hIiwgIktobXIifSwgLS0gaG9sZHMgTGFvbywgbm90IGVub3VnaCBnbHlwaGVzIHRvIHJlbmRlcgoJYW5jZXN0b3JzID0geyJzYSJ9LAoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsixIEiLCAixKsiLCAixasiLCAi4biNIiwgIuG4tyIsICJb4bmB4bmDXSIsICJb4bmHw7HhuYVdIiwgIuG5rSIsICIoW+C5gOC5geC5guC5g+C5hF0pKFvguIEt4LiuXSkiLCAi4amUIiwgIuGplSIsICLhqZYiLCAi4amYIiwgIihb4aitLeGosV0p4ambIiwgIihb4ai3LeGovl0p4ambIiwgIuGppCIsIHUoMHhGRTAwKX0sCgkJdG8gICA9IHsiYSIsICJpIiwgInUiLCAiZCIsICJsIiwgIm0iICAgLCAibiIJLCAidCIsICIlMiUxIiwgIuGpiOGpoOGpiCIsICLhqaDhqYEiLCAi4amg4amDIiwgIuGopuGpoCIsICIlMeGpoOGoriIsICIlMeGpoOGouyIsICLhqaMifX0gLAoJZW50cnlfbmFtZSA9IHsKCQlmcm9tID0ge3UoMHhGRTAwKX0sCgkJdG8gICA9IHt9fSwKfQoKbVsicGwiXSA9IHsKCSJQb2xpc2giLAoJIlE4MDkiLAoJInpsdyIsCglzY3JpcHRzID0gTGF0biwKCWFuY2VzdG9ycyA9IHsiemx3LW9wbCJ9LAoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsiW8SExIVdIiwgIlvEhsSHXSIsICJbxJjEmV0iLCAiW8WBxYJdIiwgIlvFg8WEXSIsICJbw5PDs10iLCAiW8WaxZtdIiwgIlvFu8W8XSIsICJbxbnFul0ifSwKCQl0byAgID0gewoJCQkiYSIgLi4gdSgweDEwRkZGRiksCgkJCSJjIiAuLiB1KDB4MTBGRkZGKSwKCQkJImUiIC4uIHUoMHgxMEZGRkYpLAoJCQkibCIgLi4gdSgweDEwRkZGRiksCgkJCSJuIiAuLiB1KDB4MTBGRkZGKSwKCQkJIm8iIC4uIHUoMHgxMEZGRkYpLAoJCQkicyIgLi4gdSgweDEwRkZGRiksCgkJCSJ6IiAuLiB1KDB4MTBGRkZGKSwKCQkJInoiIC4uIHUoMHgxMEZGRkUpfX0gLAp9CgptWyJwcyJdID0gewoJIlBhc2h0byIsCgkiUTU4NjgwIiwKCSJpcmEtcGF0IiwKCW90aGVyTmFtZXMgPSB7IlBhc2h0dW4iLCAiUHVzaHRvIiwgIlBhc2h0dSIsICJDZW50cmFsIFBhc2h0byIsICJOb3J0aGVybiBQYXNodG8iLCAiU291dGhlcm4gUGFzaHRvIiwgIlB1a2h0byIsICJQYWtodG8iLCAiUGFra2h0byIsICJBZmdoYW5pIn0sCglzY3JpcHRzID0geyJwcy1BcmFiIn0sCglhbmNlc3RvcnMgPSB7ImlyYS1wYXQtcHJvIn0sCn0KCm1bInB0Il0gPSB7CgkiUG9ydHVndWVzZSIsCgkiUTUxNDYiLAoJInJvYS1pYmUiLAoJb3RoZXJOYW1lcyA9IHsiTW9kZXJuIFBvcnR1Z3Vlc2UifSwKCXNjcmlwdHMgPSB7IkxhdG4iLCAiQnJhaSJ9LAoJYW5jZXN0b3JzID0geyJyb2Etb3B0In0sCglzb3J0X2tleSA9IHsKCQlmcm9tID0geyJbw6DDo8Ohw6LDpF0iLCAiW8Oo4bq9w6nDqsOrXSIsICJbw6zEqcOtw69dIiwgIlvDssOzw7TDtcO2XSIsICJbw7zDusO5xaldIiwgIsOnIiwgIsOxIn0sCgkJdG8gICA9IHsiYSIJICAsICJlIgkgICwgImkiCSAsICJvIgkgICwgInUiCSAsICJjIiwgIm4ifX0gLAp9CgptWyJxdSJdID0gewoJIlF1ZWNodWEiLAoJIlE1MjE4IiwKCSJxd2UiLAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bInJtIl0gPSB7CgkiUm9tYW5zY2giLAoJIlExMzE5OSIsCgkicm9hLXJoZSIsCglvdGhlck5hbWVzID0geyJSb21hbnNoIiwgIlJ1bWFudHNjaCIsICJSb21hbmNoZSJ9LAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bInJvIl0gPSB7CgkiUm9tYW5pYW4iLAoJIlE3OTEzIiwKCSJyb2EtZWFzIiwKCW90aGVyTmFtZXMgPSB7IkRhY28tUm9tYW5pYW4iLCAiUm91bWFuaWFuIiwgIlJ1bWFuaWFuIn0sCglzY3JpcHRzID0geyJMYXRuIiwgIkN5cmwifSwKCXNvcnRfa2V5ID0gewogICAgICAgIGZyb20gPSB7IsSDIiAsICLDoiIgICwgIsOuIiAsICLImSIgLCAiyJsiIH0sCiAgICAgICAgdG8gICA9IHsiYX4iLCAiYX5+IiwgIml+IiwgInN+IiwgInR+In19LAp9CgptWyJydSJdID0gewoJIlJ1c3NpYW4iLAoJIlE3NzM3IiwKCSJ6bGUiLAoJc2NyaXB0cyA9IHsiQ3lybCIsICJCcmFpIn0sCgl0cmFuc2xpdF9tb2R1bGUgPSAicnUtdHJhbnNsaXQiLAoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsi0ZEifSwKCQl0byAgID0geyLQtSIgLi4gbXcudXN0cmluZy5jaGFyKDB4MTBGRkZGKX19LAoJZW50cnlfbmFtZSA9IHsKCQlmcm9tID0geyLQgCIsICLRkCIsICLQjSIsICLRnSIsIEdSQVZFLCBBQ1VURX0sCgkJdG8gICA9IHsi0JUiLCAi0LUiLCAi0JgiLCAi0LgifX0sCglzdGFuZGFyZENoYXJzID0gItCB0IbQkC3Rj9GR0ZYwLTnigJQiIC4uIFBVTkNUVUFUSU9OLAp9CgptWyJydyJdID0gewoJIlJ3YW5kYS1SdW5kaSIsCgkiUTMzNTczIiwKCSJibnQiLAoJb3RoZXJOYW1lcyA9IHsiUndhbmRhIiwgIktpbnlhcndhbmRhIiwgIlJ1bmRpIiwgIktpcnVuZGkiLCAiSGEiLCAiR2loYSIsICJIYW5nYXphIiwgIlZpbnphIiwgIlNodWJpIiwgIlN1YmkifSwKCXNjcmlwdHMgPSBMYXRuLAp9CgptWyJzYSJdID0gewoJIlNhbnNrcml0IiwKCSJRMTEwNTkiLAoJImluYyIsCglzY3JpcHRzID0geyJEZXZhIiwgIkJhbGkiLCAiYXMtQmVuZyIsICJCZW5nIiwgIkJoa3MiLCAiQnJhaCIsICJHcmFuIiwgIkd1anIiLCAiR3VydSIsICJKYXZhIiwgIktoYXIiLCAiS2htciIsICJLbmRhIiwgIkxhbmEiLCAiTWx5bSIsICJNeW1yIiwgIk5ld2EiLCAiT3J5YSIsICJTYXVyIiwgIlNocmQiLCAiU2lkZCIsICJTaW5oIiwgIlRhbWwiLCAiVGVsdSIsICJUaGFpIiwgIlRpYnQiLCAiVGlyaCJ9LCAtLSBob2xkcyBMYW9vLCBub3QgZW5vdWdoIGdseXBoZXMgdG8gcmVuZGVyCglzb3J0X2tleSA9IHsKCQlmcm9tID0geyLEgSIsICLEqyIsICLFqyIsICLhuI0iLCAi4bi3IiwgIlvhuYHhuYNdIiwgIlvhuYfDseG5hV0iLCAi4bmtIiwgIihb4LmA4LmB4LmC4LmD4LmEXSkoW+C4gS3guK5dKSIsICLhqZQiLCAi4amVIiwgIuGpliIsICLhqZgiLCAiKFvhqK0t4aixXSnhqZsiLCAiKFvhqLct4ai+XSnhqZsiLCAi4amkIiwgdSgweEZFMDApfSwKCQl0byAgID0geyJhIiwgImkiLCAidSIsICJkIiwgImwiLCAibSIgICAsICJuIgksICJ0IiwgIiUyJTEiLCAi4amI4amg4amIIiwgIuGpoOGpgSIsICLhqaDhqYMiLCAi4aim4amgIiwgIiUx4amg4aiuIiwgIiUx4amg4ai7IiwgIuGpoyJ9fSAsCgllbnRyeV9uYW1lID0gewoJCWZyb20gPSB7dSgweEZFMDApfSwKCQl0byAgID0ge319LAoJdHJhbnNsaXRfbW9kdWxlID0gInRyYW5zbGl0LXJlZGlyZWN0IiwKfQoKbVsic2MiXSA9IHsKCSJTYXJkaW5pYW4iLAoJIlEzMzk3NiIsCgkicm9hIiwKCW90aGVyTmFtZXMgPSB7IkNhbXBpZGFuZXNlIiwgIkNhbXBpZGFuZXNlIFNhcmRpbmlhbiIsICJMb2d1ZG9yZXNlIiwgIkxvZ3Vkb3Jlc2UgU2FyZGluaWFuIiwgIk51b3Jlc2UiLCAiTnVvcmVzZSBTYXJkaW5pYW4ifSwKCXNjcmlwdHMgPSBMYXRuLAp9CgptWyJzZCJdID0gewoJIlNpbmRoaSIsCgkiUTMzOTk3IiwKCSJpbmMiLAoJc2NyaXB0cyA9IHsic2QtQXJhYiIsICJEZXZhIiwgIlNpbmQiLCAiS2hvaiJ9LAoJZW50cnlfbmFtZSA9IHsKCQlmcm9tID0ge3UoMHgwNjcxKSwgdSgweDA2NEIpLCB1KDB4MDY0QyksIHUoMHgwNjREKSwgdSgweDA2NEUpLCB1KDB4MDY0RiksIHUoMHgwNjUwKSwgdSgweDA2NTEpLCB1KDB4MDY1MiksIHUoMHgwNjcwKSwgdSgweDA2NDApfSwKCQl0byAgID0ge3UoMHgwNjI3KX19LAoJYW5jZXN0b3JzID0geyJwc3UifSwKfQoKbVsic2UiXSA9IHsKCSJOb3J0aGVybiBTYW1pIiwKCSJRMzM5NDciLAoJInNtaSIsCglvdGhlck5hbWVzID0geyJOb3J0aCBTYW1pIiwgIk5vcnRoZXJuIFNhYW1pIiwgIk5vcnRoIFNhYW1pIn0sCglzY3JpcHRzID0gTGF0biwKCWVudHJ5X25hbWUgPSB7CgkJZnJvbSA9IHsi4bqhIiwgIlvEk+G6uV0iLCAixKsiLCAiW8WN4buNXSIsICLFqyIsICLLiCJ9LAoJCXRvICAgPSB7ImEiLCAiZSIgICAsICJpIiwgIm8iICAgLCAidSJ9IH0sCglzb3J0X2tleSA9IHsKCQlmcm9tID0geyLDoSIgLCAixI0iICwgIsSRIiAsICLFiyIgLCAixaEiICwgIsWnIiAsICLFviIgfSwKCQl0byAgID0geyJhwrIiLCAiY8KyIiwgImTCsiIsICJuwrIiLCAic8KyIiwgInTCsiIsICJ6wrIifSB9LAoJc3RhbmRhcmRDaGFycyA9ICJBLVBSLVZaYS1wci12ejAtOcOBw6HEjMSNxJDEkcWKxYvFoMWhxabFp8W9xb4iIC4uIFBVTkNUVUFUSU9OLAp9CgptWyJzZyJdID0gewoJIlNhbmdvIiwKCSJRMzM5NTQiLAoJImNycCIsCglzY3JpcHRzID0gTGF0biwKfQoKbVsic2giXSA9IHsKCSJTZXJiby1Dcm9hdGlhbiIsCgkiUTkzMDEiLAoJInpscyIsCglvdGhlck5hbWVzID0geyJCQ1MiLCAiQ3JvYXRvLVNlcmJpYW4iLCAiU2VyYm9jcm9hdGlhbiIsICJCb3NuaWFuIiwgIkNyb2F0aWFuIiwgIk1vbnRlbmVncmluIiwgIlNlcmJpYW4ifSwKCXNjcmlwdHMgPSB7IkxhdG4iLCAiQ3lybCJ9LAoJZW50cnlfbmFtZSA9IHsKCQlmcm9tID0geyJbyIDDgMiCw4HEgMODXSIsICJbyIHDoMiDw6HEgcOjXSIsICJbyITDiMiGw4nEkuG6vF0iLCAiW8iFw6jIh8OpxJPhur1dIiwgIlvIiMOMyIrDjcSqxKhdIiwgIlvIicOsyIvDrcSrxKldIiwgIlvIjMOSyI7Dk8WMw5VdIiwgIlvIjcOyyI/Ds8WNw7VdIiwgIlvIkMiSxZRdIiwgIlvIkciTxZVdIiwgIlvIlMOZyJbDmsWqxahdIiwgIlvIlcO5yJfDusWrxaldIiwgItCAIiwgItGQIiwgIlvTotCNXSIsICJb06PRnV0iLCAiW9OuXSIsICJb069dIiwgR1JBVkUsIEFDVVRFLCBER1JBVkUsIElOVkJSRVZFLCBNQUNST04sIFRJTERFfSwKCQl0byAgID0geyJBIgkgICwgImEiCSAgLCAiRSIJICAsICJlIgkgICwgIkkiCSAgLCAiaSIJICAsICJPIgkgICwgIm8iCSAgLCAiUiIJLCAiciIJLCAiVSIJICAsICJ1IgkgICwgItCVIiwgItC1IiwgItCYIiAgICwgItC4IiwgItCjIiwgItGDIiAgIH19LAoJd2lraW1lZGlhX2NvZGVzID0geyJzaCIsICJicyIsICJociIsICJzciJ9LAp9CgptWyJzaSJdID0gewoJIlNpbmhhbGVzZSIsCgkiUTEzMjY3IiwKCSJpbmMiLAoJb3RoZXJOYW1lcyA9IHsiU2luZ2hhbGVzZSIsICJTaW5oYWxhIn0sCglzY3JpcHRzID0geyJTaW5oIn0sCglhbmNlc3RvcnMgPSB7ImVsdS1wcmsifSwKCXRyYW5zbGl0X21vZHVsZSA9ICJzaS10cmFuc2xpdCIsCglvdmVycmlkZV90cmFuc2xpdCA9IHRydWUsCn0KCm1bInNrIl0gPSB7CgkiU2xvdmFrIiwKCSJROTA1OCIsCgkiemx3IiwKCXNjcmlwdHMgPSBMYXRuLAoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsiW8Ohw6RdIiwgIsOpIiwgIsOtIiwgIlvDs8O0XSIsICLDuiIsICLDvSIsICLFlSIsICLEuiIsICJbIiAuLiBESUFFUiAuLiBBQ1VURSAuLiBDSVJDIC4uICJdIn0sCgkJdG8gICA9IHsiYSIgICAsICJlIiwgImkiLCAibyIgICAsICJ1IiwgInkiLCAiciIsICJsIiwgIiJ9fSAsCn0KCm1bInNsIl0gPSB7CgkiU2xvdmVuZSIsCgkiUTkwNjMiLAoJInpscyIsCglvdGhlck5hbWVzID0geyJTbG92ZW5pYW4ifSwKCXNjcmlwdHMgPSBMYXRuLAoJZW50cnlfbmFtZSA9IHsKCQlmcm9tID0geyJbw4HDgMOCyILIgF0iLCAiW8Ohw6DDosiDyIFdIiwgIlvDicOIw4rIhsiE4buG4bq4XSIsICJbw6nDqMOqyIfIheG7h+G6ucmZXSIsICJbw43DjMOOyIrIiF0iLCAiW8Otw6zDrsiLyIldIiwgIlvDk8OSw5TIjsiM4buY4buMXSIsICJbw7PDssO0yI/IjeG7meG7jV0iLCAiW8WUyJLIkF0iLCAiW8WVyJPIkV0iLCAiW8Oaw5nDm8iWyJRdIiwgIlvDusO5w7vIl8iVXSIsICLFgiIsIEdSQVZFLCBBQ1VURSwgREdSQVZFLCBJTlZCUkVWRSwgQ0lSQywgRE9UQkVMT1d9LAoJCXRvICAgPSB7IkEiCSAgLCAiYSIJICAsICJFIgkJLCAiZSIJCSAsICJJIgkgICwgImkiCSAgLCAiTyIJCSwgIm8iCQksICJSIgksICJyIgksICJVIgkgICwgInUiCSAgLCAibCJ9fSAsCn0KCm1bInNtIl0gPSB7CgkiU2Ftb2FuIiwKCSJRMzQwMTEiLAoJInBvei1wbnAiLAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bInNuIl0gPSB7CgkiU2hvbmEiLAoJIlEzNDAwNCIsCgkiYm50IiwKCXNjcmlwdHMgPSBMYXRuLAoJZW50cnlfbmFtZSA9IHsKICAgICAgICBmcm9tID0ge0FDVVRFfSwKICAgICAgICB0byA9IHt9fSAsCn0KCm1bInNvIl0gPSB7CgkiU29tYWxpIiwKCSJRMTMyNzUiLAoJImN1cyIsCglzY3JpcHRzID0geyJMYXRuIiwgIkFyYWIiLCAiT3NtYSJ9LAoJZW50cnlfbmFtZSA9IHsKCQlmcm9tID0geyJbw4HDgMOCXSIsICJbw6HDoMOiXSIsICJbw4nDiMOKXSIsICJbw6nDqMOqXSIsICJbw43DjMOOXSIsICJbw63DrMOuXSIsICJbw5PDksOUXSIsICJbw7PDssO0XSIsICJbw5rDmcObXSIsICJbw7rDucO7XSIsICJbw53hu7JdIiwgIlvDveG7s10ifSwKCQl0byAgID0geyJBIgkgICwgImEiCSAgLCAiRSIJLCAiZSIgLCAiSSIJICAsICJpIgkgICwgIk8iCSwgIm8iCSwgIlUiICAsICJ1IiwgIlkiLCAieSJ9fSAsCn0KCm1bInNxIl0gPSB7CgkiQWxiYW5pYW4iLAoJIlE4NzQ4IiwKCSJzcWoiLAoJb3RoZXJOYW1lcyA9IHsiVG9zayIsICJHaGVnIiwgIkFydmFuaXRpa2EiLCAiQXJiw6tyZXNow6siLCAiQXJiw6tyZXNoIn0sCglzY3JpcHRzID0geyJMYXRuIiwgIkdyZWsiLCAiRWxiYSJ9LAoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsgJ1vDosOjw6RdJywgJ1vDgsODw4RdJywgJ1vDquG6vcOrXScsICdbw4rhurzDi10nLCAnxKknLCAnxKgnLCAnw7UnLCAnw5UnLCAnxaknLCAnxagnLCAn4bu5JywgJ+G7uCcsICfDpycsICfDhycgfSwKCQl0byAgID0geyAgICAgJ2EnLCAgICAgJ0EnLCAgICAgJ2UnLCAgICAgJ0UnLCAnaScsICdJJywgJ28nLCAnTycsICd1JywgJ1UnLCAneScsICdZJywgJ2MnLCAnQycgfSB9ICwKfQoKbVsic3MiXSA9IHsKCSJTd2F6aSIsCgkiUTM0MDE0IiwKCSJibnQtbmd1IiwKCW90aGVyTmFtZXMgPSB7IlN3YXRpIn0sCglzY3JpcHRzID0gTGF0biwKCWVudHJ5X25hbWUgPSB7CgkJZnJvbSA9IHsiW8SBw6DDocOix45dIiwgIlvEk8Oow6nDqsSbXSIsICJbxKvDrMOtw67HkF0iLCAiW8WNw7LDs8O0x5JdIiwgIlvFq8O5w7rDu8eUXSIsICLhuL8iLCAiW8e5xYTFiF0iLCBNQUNST04sIEFDVVRFLCBHUkFWRSwgQ0lSQywgQ0FST059LAoJCXRvICAgPSB7ImEiICAgICAgLCAiZSIgICAgICAsICJpIiAgICAgICwgIm8iICAgICAgLCAidSIgICAgICAsICJtIiwgIm4iICAgIH19LAp9CgptWyJzdCJdID0gewoJIlNvdGhvIiwKCSJRMzQzNDAiLAoJImJudC1zdHMiLAoJb3RoZXJOYW1lcyA9IHsiU2Vzb3RobyIsICJTb3V0aGVybiBTZXNvdGhvIiwgIlNvdXRoZXJuIFNvdGhvIn0sCglzY3JpcHRzID0gTGF0biwKCWVudHJ5X25hbWUgPSB7CgkJZnJvbSA9IHsiW8SBw6DDocOix45dIiwgIlvEk8Oow6nDqsSbXSIsICJbxKvDrMOtw67HkF0iLCAiW8WNw7LDs8O0x5JdIiwgIlvFq8O5w7rDu8eUXSIsICLhuL8iLCAiW8e5xYTFiF0iLCBNQUNST04sIEFDVVRFLCBHUkFWRSwgQ0lSQywgQ0FST059LAoJCXRvICAgPSB7ImEiICAgICAgLCAiZSIgICAgICAsICJpIiAgICAgICwgIm8iICAgICAgLCAidSIgICAgICAsICJtIiwgIm4iICAgIH19LAp9CgptWyJzdSJdID0gewoJIlN1bmRhbmVzZSIsCgkiUTM0MDAyIiwKCSJwb3otbXNhIiwKCXNjcmlwdHMgPSB7IkxhdG4iLCAiU3VuZCJ9LAoJdHJhbnNsaXRfbW9kdWxlID0gInN1LXRyYW5zbGl0IiwKfQoKbVsic3YiXSA9IHsKCSJTd2VkaXNoIiwKCSJROTAyNyIsCgkiZ21xIiwKCXNjcmlwdHMgPSBMYXRuLAoJYW5jZXN0b3JzID0geyJnbXEtb3N3In0sCn0KCm1bInN3Il0gPSB7CgkiU3dhaGlsaSIsCgkiUTc4MzgiLAoJImJudCIsCglvdGhlck5hbWVzID0geyJTZXR0bGVyIFN3YWhpbGkiLCAiS2lTZXRsYSIsICJLaVNldHRsYSIsICJTZXRsYSIsICJTZXR0bGEiLCAiS2l0Y2hlbiBTd2FoaWxpIiwgIktpaGluZGkiLCAiSW5kaWFuIFN3YWhpbGkiLCAiS2lTaGFtYmEiLCAiS2lzaGFtYmEiLCAiRmllbGQgU3dhaGlsaSIsICJLaWJhYnUiLCAiQXNpYW4gU3dhaGlsaSIsICJLaW1hbmdhIiwgIkFyYWIgU3dhaGlsaSIsICJLaXR2aXRhIiwgIkFybXkgU3dhaGlsaSJ9LAoJc2NyaXB0cyA9IExhdG5BcmFiLAoJc29ydF9rZXkgPSB7CgkJZnJvbSA9IHsibmcnIiwgIl4tIn0sCgkJdG8gICA9IHsibmd6In19ICwKfQoKbVsidGEiXSA9IHsKCSJUYW1pbCIsCgkiUTU4ODUiLAoJImRyYSIsCglzY3JpcHRzID0geyJUYW1sIn0sCglhbmNlc3RvcnMgPSB7Im90eSJ9LAoJdHJhbnNsaXRfbW9kdWxlID0gInRhLXRyYW5zbGl0IiwKCW92ZXJyaWRlX3RyYW5zbGl0ID0gdHJ1ZSwKfQoKbVsidGUiXSA9IHsKCSJUZWx1Z3UiLAoJIlE4MDk3IiwKCSJkcmEiLAoJc2NyaXB0cyA9IHsiVGVsdSJ9LAoJdHJhbnNsaXRfbW9kdWxlID0gInRlLXRyYW5zbGl0IiwKCW92ZXJyaWRlX3RyYW5zbGl0ID0gdHJ1ZSwKfQoKbVsidGciXSA9IHsKCSJUYWppayIsCgkiUTkyNjAiLAoJImlyYS1zd2kiLAoJb3RoZXJOYW1lcyA9IHsiVGFkamlrIiwgIlRhZHpoaWsiLCAiVGFqaWtpIiwgIlRhamlrIFBlcnNpYW4iLCAiVGFqaWtpIFBlcnNpYW4ifSwKCXNjcmlwdHMgPSB7IkN5cmwiLCAiZmEtQXJhYiIsICJMYXRuIn0sCglhbmNlc3RvcnMgPSB7InBhbCJ9LCAtLSBzYW1lIGFzICJmYSIsIHNlZSBXVDpUOkFGQQoJdHJhbnNsaXRfbW9kdWxlID0gInRnLXRyYW5zbGl0IiwKCW92ZXJyaWRlX3RyYW5zbGl0ID0gdHJ1ZSwKCXNvcnRfa2V5ID0gewoJCWZyb20gPSB7ItCBIiwgItGRIn0sCgkJdG8gICA9IHsi0JUiICwgItC1In19ICwKCWVudHJ5X25hbWUgPSB7CgkJZnJvbSA9IHtBQ1VURX0sCgkJdG8gICA9IHt9fSAsCn0KCm1bInRoIl0gPSB7CgkiVGhhaSIsCgkiUTkyMTciLAoJInRhaS1zd2UiLAoJb3RoZXJOYW1lcyA9IHsiU2lhbWVzZSIsICJDZW50cmFsIFRoYWkifSwKCXNjcmlwdHMgPSB7IlRoYWkiLCAiQnJhaSJ9LAoJdHJhbnNsaXRfbW9kdWxlID0gInRoLXRyYW5zbGl0IiwKCXNvcnRfa2V5ID0gewoJCWZyb20gPSB7IiVwIiwgIlvguYct4LmOXSIsICIoW+C5gOC5geC5guC5g+C5hF0pKFvguIEt4LiuXSkifSwKCQl0byAgID0geyIiLCAiIiwgIiUyJTEifX0sCn0KCm1bInRpIl0gPSB7CgkiVGlncmlueWEiLAoJIlEzNDEyNCIsCgkic2VtLWV0aCIsCglvdGhlck5hbWVzID0geyJUaWdyaWduYSJ9LAoJc2NyaXB0cyA9IHsiRXRoaSJ9LAoJdHJhbnNsaXRfbW9kdWxlID0gIkV0aGktdHJhbnNsaXQiLAp9CgptWyJ0ayJdID0gewoJIlR1cmttZW4iLAoJIlE5MjY3IiwKCSJ0cmstb2d6IiwKCXNjcmlwdHMgPSB7IkxhdG4iLCAiQ3lybCJ9LAoJZW50cnlfbmFtZSA9IHsKCQlmcm9tID0geyLEgSIsICLEkyIsICLEqyIsICLFjSIsICLFqyIsICLIsyIsICLIqyIsICLHliIsIE1BQ1JPTn0sCgkJdG8gICA9IHsiYSIsICJlIiwgImkiLCAibyIsICJ1IiwgInkiLCAiw7YiLCAiw7wiLCAiIn19LAoJYW5jZXN0b3JzID0geyJ0cmstb2d6LXBybyJ9LAp9CgptWyJ0bCJdID0gewoJIlRhZ2Fsb2ciLAoJIlEzNDA1NyIsCgkicGhpIiwKCXNjcmlwdHMgPSB7IkxhdG4iLCAiVGdsZyJ9LAoJZW50cnlfbmFtZSA9IHsKCQlmcm9tID0geyJbw6HDoMOiXSIsICJbw6nDqMOqXSIsICJbw63DrMOuXSIsICJbw7PDssO0XSIsICJbw7rDucO7XSIsIEFDVVRFLCBHUkFWRSwgQ0lSQ30sCgkJdG8gICA9IHsiYSIgICAgLCAiZSIgICAgLCAiaSIgICAgLCAibyIgICAgLCAidSIgICAgfX0sCn0KCm1bInRuIl0gPSB7CgkiVHN3YW5hIiwKCSJRMzQxMzciLAoJImJudC1zdHMiLAoJb3RoZXJOYW1lcyA9IHsiU2V0c3dhbmEifSwKCXNjcmlwdHMgPSBMYXRuLAp9CgptWyJ0byJdID0gewoJIlRvbmdhbiIsCgkiUTM0MDk0IiwKCSJwb3otcG9sIiwKCXNjcmlwdHMgPSBMYXRuLAp9CgptWyJ0ciJdID0gewoJIlR1cmtpc2giLAoJIlEyNTYiLAoJInRyay1vZ3oiLAoJc2NyaXB0cyA9IExhdG4sCglhbmNlc3RvcnMgPSB7Im90YSJ9LAp9CgptWyJ0cyJdID0gewoJIlRzb25nYSIsCgkiUTM0MzI3IiwKCSJibnQiLAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bInR0Il0gPSB7CgkiVGF0YXIiLAoJIlEyNTI4NSIsCgkidHJrLWtpcCIsCglzY3JpcHRzID0geyJDeXJsIiwgIkxhdG4iLCAidHQtQXJhYiJ9LAoJdHJhbnNsaXRfbW9kdWxlID0gInR0LXRyYW5zbGl0IiwKCW92ZXJyaWRlX3RyYW5zbGl0ID0gdHJ1ZSwKfQoKLS0gInR3IiBJUyBUUkVBVEVEIEFTICJhayIsIFNFRSBXVDpMVAoKbVsidHkiXSA9IHsKCSJUYWhpdGlhbiIsCgkiUTM0MTI4IiwKCSJwb3otcGVwIiwKCXNjcmlwdHMgPSBMYXRuLAp9CgptWyJ1ZyJdID0gewoJIlV5Z2h1ciIsCgkiUTEzMjYzIiwKCSJ0cmsiLAoJb3RoZXJOYW1lcyA9IHsiVWlndXIiLCAiVWlnaHVyIiwgIlV5Z3VyIn0sCglzY3JpcHRzID0geyJ1Zy1BcmFiIiwgIkxhdG4iLCAiQ3lybCJ9LAoJYW5jZXN0b3JzID0geyJjaGcifSwKCXRyYW5zbGl0X21vZHVsZSA9ICJ1Zy10cmFuc2xpdCIsCglvdmVycmlkZV90cmFuc2xpdCA9IHRydWUsCn0KCm1bInVrIl0gPSB7CgkiVWtyYWluaWFuIiwKCSJRODc5OCIsCgkiemxlIiwKCXNjcmlwdHMgPSBDeXJsLAoJYW5jZXN0b3JzID0geyJvcnYifSwKCXRyYW5zbGl0X21vZHVsZSA9ICJ1ay10cmFuc2xpdCIsCgllbnRyeV9uYW1lID0gewoJCWZyb20gPSB7ItCAIiwgItGQIiwgItCNIiwgItGdIiwgR1JBVkUsIEFDVVRFfSwKCQl0byAgID0geyLQlSIsICLQtSIsICLQmCIsICLQuCJ9fSwKCXN0YW5kYXJkQ2hhcnMgPSAi0ITQhtCH0JAt0KnQq9Cs0K4t0YnRi9GM0Y7Rj9GU0ZbRlyIgLi4gUFVOQ1RVQVRJT04sCn0gCm1bInVyIl0gPSB7CgkiVXJkdSIsCgkiUTE2MTciLAoJImluYyIsCglzY3JpcHRzID0geyJ1ci1BcmFiIn0sCglhbmNlc3RvcnMgPSB7ImluYy1zYXAifSwKCWVudHJ5X25hbWUgPSB7CgkJZnJvbSA9IHt1KDB4MDY0QiksIHUoMHgwNjRDKSwgdSgweDA2NEQpLCB1KDB4MDY0RSksIHUoMHgwNjRGKSwgdSgweDA2NTApLCB1KDB4MDY1MSksIHUoMHgwNjUyKX0sCgkJdG8gICA9IHt9fSAsCn0KCm1bInV6Il0gPSB7CgkiVXpiZWsiLAoJIlE5MjY0IiwKCSJ0cmsiLAoJb3RoZXJOYW1lcyA9IHsiTm9ydGhlcm4gVXpiZWsiLCAiU291dGhlcm4gVXpiZWsifSwKCXNjcmlwdHMgPSB7IkxhdG4iLCAiQ3lybCIsICJmYS1BcmFiIn0sCglhbmNlc3RvcnMgPSB7ImNoZyJ9LAp9CgptWyJ2ZSJdID0gewoJIlZlbmRhIiwKCSJRMzI3MDQiLAoJImJudCIsCglzY3JpcHRzID0gTGF0biwKfQoKbVsidmkiXSA9IHsKCSJWaWV0bmFtZXNlIiwKCSJROTE5OSIsCgkibWtoLXZpZSIsCglvdGhlck5hbWVzID0geyJBbm5hbWVzZSIsICJBbm5hbWl0ZSJ9LAoJc2NyaXB0cyA9IHsiTGF0biIsICJIYW5pIn0sCglhbmNlc3RvcnMgPSB7Im1raC1tdmkifSwKCXNvcnRfa2V5ID0gInZpLXNvcnRrZXkiLAp9CgptWyJ2byJdID0gewoJIlZvbGFww7xrIiwKCSJRMzY5ODYiLAoJImFydCIsCglzY3JpcHRzID0gTGF0biwKfQoKbVsid2EiXSA9IHsKCSJXYWxsb29uIiwKCSJRMzQyMTkiLAoJInJvYS1vaWwiLAoJb3RoZXJOYW1lcyA9IHsiTGnDqWdlb2lzIiwgIk5hbXVyb2lzIiwgIldhbGxvLVBpY2FyZCIsICJXYWxsby1Mb3JyYWluIn0sCglzY3JpcHRzID0gTGF0biwKCWFuY2VzdG9ycyA9IHsiZnJvIn0sCglzb3J0X2tleSA9IHsKCQlmcm9tID0geyJbw6HDoMOiw6TDpV0iLCAiW8Opw6jDqsOrXSIsICJbw63DrMOuw69dIiwgIlvDs8Oyw7TDtl0iLCAiW8O6w7nDu8O8XSIsICJbw73hu7PFt8O/XSIsICLDpyIsICInIn0sCgkJdG8gICA9IHsiYSIJICAsICJlIgkgLCAiaSIJICwgIm8iCSAsICJ1IgkgLCAieSIJICwgImMifX0gLAp9CgptWyJ3byJdID0gewoJIldvbG9mIiwKCSJRMzQyNTciLAoJImFsdi1zbmciLAoJb3RoZXJOYW1lcyA9IHsiR2FtYmlhbiBXb2xvZiJ9LCAtLSB0aGUgc3Vic3VtZWQgZGlhbGVjdCAnd29mJwoJc2NyaXB0cyA9IExhdG5BcmFiLAp9CgptWyJ4aCJdID0gewoJIlhob3NhIiwKCSJRMTMyMTgiLAoJImJudC1uZ3UiLAoJc2NyaXB0cyA9IExhdG4sCgllbnRyeV9uYW1lID0gewoJCWZyb20gPSB7IlvEgcOgw6HDoseOXSIsICJbxJPDqMOpw6rEm10iLCAiW8Srw6zDrcOux5BdIiwgIlvFjcOyw7PDtMeSXSIsICJbxavDucO6w7vHlF0iLCAi4bi/IiwgIlvHucWExYhdIiwgTUFDUk9OLCBBQ1VURSwgR1JBVkUsIENJUkMsIENBUk9OfSwKCQl0byAgID0geyJhIiAgICAgICwgImUiICAgICAgLCAiaSIgICAgICAsICJvIiAgICAgICwgInUiICAgICAgLCAibSIsICJuIiAgICB9fSwKfQoKbVsieWkiXSA9IHsKCSJZaWRkaXNoIiwKCSJRODY0MSIsCgkiZ213IiwKCXNjcmlwdHMgPSB7IkhlYnIifSwKCWFuY2VzdG9ycyA9IHsiZ21oIn0sCglzb3J0X2tleSA9IHsKCQlmcm9tID0geyJb15DWt9eQ1rhdIiwgIteR1rwiLCAiW9eV1rnXlda8XSIsICLXmda0IiwgItey1rciLCAi16TWvyJ9LAoJCXRvID0geyLXkCIsICLXkSIsICLXlSIsICLXmSIsCSLXmdeZIiwgItekIn19ICwKCXRyYW5zbGl0X21vZHVsZSA9ICJ5aS10cmFuc2xpdCIsCn0KCm1bInlvIl0gPSB7CgkiWW9ydWJhIiwKCSJRMzQzMTEiLAoJImFsdi12b24iLAoJc2NyaXB0cyA9IExhdG4sCn0KCm1bInphIl0gPSB7CgkiWmh1YW5nIiwKCSJRMTMyMTYiLAoJInRhaSIsCglvdGhlck5hbWVzID0geyJTdGFuZGFyZCBaaHVhbmciLCAiRGFpIFpodWFuZyIsICJXZW5tYSBaaHVhbmciLCAiV2VubWEgVGh1IiwgIldlbm1hIiwgIk5vbmcgWmh1YW5nIiwgIllvdWppYW5nIFpodWFuZyIsICJZb25nYmVpIFpodWFuZyIsICJZYW5nIFpodWFuZyIsICJZb25nbmFuIFpodWFuZyIsICJadW9qaWFuZyBaaHVhbmciLCAiQ2VudHJhbCBIb25nc2h1aWhlIFpodWFuZyIsICJFYXN0ZXJuIEhvbmdzaHVpaGUgWmh1YW5nIiwgIkd1aWJlaSBaaHVhbmciLCAiTWlueiBaaHVhbmciLCAiR3VpYmlhbiBaaHVhbmciLCAiTGl1amlhbmcgWmh1YW5nIiwgIkxpYW5zaGFuIFpodWFuZyIsICJMaXVxaWFuIFpodWFuZyIsICJRaXViZWkgWmh1YW5nIiwgIkNob25nenVvIFpodWFuZyIsICJTaGFuZ3NpIFpodWFuZyJ9LAoJc2NyaXB0cyA9IHsiTGF0biIsICJIYW5pIn0sCn0KCm1bInpoIl0gPSB7CgkiQ2hpbmVzZSIsCgkiUTc4NTAiLAoJInpoeCIsCglzY3JpcHRzID0geyJIYW5pIiwgIkJyYWkiLCAiTnNodSJ9LAoJYW5jZXN0b3JzID0geyJsdGMifSwKCXNvcnRfa2V5ID0gInpoLXNvcnRrZXkiLAp9CgptWyJ6dSJdID0gewoJIlp1bHUiLAoJIlExMDE3OSIsCgkiYm50LW5ndSIsCglvdGhlck5hbWVzID0geyJpc2ladWx1In0sCglzY3JpcHRzID0gTGF0biwKCWVudHJ5X25hbWUgPSB7CiAgICAgICAgICAgICAgICBmcm9tID0geyJbxIHDoMOhw6LHjl0iLCAiW8STw6jDqcOqxJtdIiwgIlvEq8Osw63DrseQXSIsICJbxY3DssOzw7THkl0iLCAiW8Wrw7nDusO7x5RdIiwgIuG4vyIsICJbx7nFhMWIXSIsIE1BQ1JPTiwgQUNVVEUsIEdSQVZFLCBDSVJDLCBDQVJPTn0sCiAgICAgICAgICAgICAgICB0byAgID0geyJhIiAgICAgICwgImUiICAgICAgLCAiaSIgICAgICAsICJvIiAgICAgICwgInUiICAgICAgLCAibSIsICJuIiAgICB9fSwKfQoKcmV0dXJuIG08L3Jldj48L3JldmlzaW9ucz48L3BhZ2U+PC9wYWdlcz48L3F1ZXJ5PjwvYXBpPg==
- recorded: 2019-04-15T21:08:19.600Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=57073 t=1555362499476596
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:19 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1343.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 928722381, 570951217, 700881738
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4073440\" pageid=\"4073440\" ns=\"828\" title=\"Module:utilities\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-10-30T22:40:37Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"pipe doesn&#039;t have to be escaped\" xml:space=\"preserve\">local export = {}\n\nlocal data = mw.loadData(\"Module:utilities/data\")\nlocal notneeded = data.notneeded\nlocal neededhassubpage\
      \ = data.neededhassubpage\n\n-- A helper function to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nfunction export.pattern_escape(text)\n\tif type(text) == \"table\" then\n\t\ttext = text.args[1]\n\tend\n\ttext = mw.ustring.gsub(text,\
      \ \"([%^$()%%.%[%]*+%-?])\", \"%%%1\")\n\treturn text\nend\n\nfunction export.plain_gsub(text, pattern, replacement)\n\tlocal invoked = false\n\t\n\tif type(text) == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\
      \t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = {},\n\t\t\t\t[2] = {},\n\t\t\t\t[3] = { allow_empty = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\
      \t\t\treplacement = args[3]\n\t\telse\n\t\t\terror(\"If the first argument to plain_gsub is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not ( type(pattern) == \"string\" or type(pattern) == \"number\" ) then\n\t\t\terror(\"The second\
      \ argument to plain_gsub should be a string or a number.\")\n\t\tend\n\t\t\n\t\tif not ( type(replacement) == \"string\" or type(replacement) == \"number\" ) then\n\t\t\terror(\"The third argument to plain_gsub should be a string or a number.\")\n\t\t\
      end\n\tend\n\t\n\tpattern = export.pattern_escape(pattern)\n\t\n\tif invoked then\n\t\ttext = mw.ustring.gsub(text, pattern, replacement)\n\t\treturn text\n\telse\n\t\treturn mw.ustring.gsub(text, pattern, replacement)\n\tend\nend\n\n--[[\nFormat the categories\
      \ with the appropriate sort key. CATEGORIES is a list of\ncategories.\n\t-- LANG is an object encapsulating a language; if nil, the object for\n\t   language code 'und' (undetermined) will be used.\n\t-- SORT_KEY is placed in the category invocation, and\
      \ indicates how the\n\t   page will sort in the respective category. Normally this should be nil,\n\t   and a default sort key based on the subpage name (the part after the\n\t   colon) will be used.\n\t-- SORT_BASE lets you override the default sort key\
      \ used when SORT_KEY is\n\t   nil. Normally, this should be nil, and a language-specific default sort\n\t   key is computed from the subpage name (e.g. for Russian this converts\n\t   Cyrillic ё to a string consisting of Cyrillic е followed by U+10FFFF,\n\
      \t   so that effectively ё sorts after е instead of the default Wikimedia\n\t   sort, which (I think) is based on Unicode sort order and puts ё after я,\n\t   the last letter of the Cyrillic alphabet.\n\t-- FORCE_OUTPUT forces normal output in all namespaces.\
      \ Normally, nothing\n\t   is output if the page isn't in the main, Appendix:, Reconstruction: or\n\t   Citations: namespaces.\n]]\nfunction export.format_categories(categories, lang, sort_key, sort_base, force_output, sc)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\
      \t\n\tif type(lang) == \"table\" and not lang.getCode then\n\t\terror(\"The second argument to format_categories should be a language object.\")\n\tend\n\t\n\tif force_output or data.allowedNamespaces[NAMESPACE] then\n\t\tlocal PAGENAME = mw.title.getCurrentTitle().text\n\
      \t\tlocal SUBPAGENAME = mw.title.getCurrentTitle().subpageText\n\t\t\n\t\tif not lang then\n\t\t\tlang = require(\"Module:languages\").getByCode(\"und\")\n\t\tend\n\t\t\n\t\t-- Generate a default sort key\n\t\tsort_base = lang:makeSortKey(sort_base or\
      \ SUBPAGENAME, sc)\n\t\t\n\t\tif sort_key and sort_key ~= \"\" then\n\t\t\t-- Gather some statistics regarding sort keys\n\t\t\tif mw.ustring.upper(sort_key) == sort_base then\n\t\t\t\ttable.insert(categories, \"Sort key tracking/redundant\")\n\t\t\tend\n\
      \t\telse\n\t\t\tsort_key = sort_base\n\t\tend\n\t\t\n\t\t--[[\tIf the resulting key is the same as the wiki software's\n\t\t\t\tdefault, or if the sortkey is empty, remove it\t\t\t ]]\n\t\tif sort_key == PAGENAME or sort_key == \"\" then\n\t\t\tsort_key\
      \ = nil\n\t\tend\n\t\t\n\t\tlocal out_categories = {}\n\t\tfor key, cat in ipairs(categories) do\n\t\t\tout_categories[key] = \"[[Category:\" .. cat .. (sort_key and \"|\" .. sort_key or \"\") .. \"]]\"\n\t\tend\n\t\t\n\t\treturn table.concat(out_categories,\
      \ \"\")\n\telse\n\t\treturn \"\"\n\tend\nend\n\n-- Used by {{categorize}}\nfunction export.template_categorize(frame)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\tlocal format = frame.args[\"format\"]\n\tlocal args = frame:getParent().args\n\
      \t\n\tlocal langcode = args[1]; if langcode == \"\" then langcode = nil end\n\tlocal sort_key = args[\"sort\"]; if sort_key == \"\" then sort_key = nil end\n\tlocal categories = {}\n\t\n\tif not langcode then\n\t\tif NAMESPACE == \"Template\" then return\
      \ \"\" end\n\t\terror(\"Language code has not been specified. Please pass parameter 1 to the template.\")\n\tend\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(langcode)\n\t\n\tif not lang then\n\t\tif NAMESPACE == \"Template\" then return\
      \ \"\" end\n\t\terror(\"The language code \\\"\" .. langcode .. \"\\\" is not valid.\")\n\tend\n\t\n\tlocal prefix = \"\"\n\t\n\tif format == \"pos\" then\n\t\tprefix = lang:getCanonicalName() .. \" \"\n\telseif format == \"topic\" then\n\t\tprefix = lang:getCode()\
      \ .. \":\"\n\tend\n\t\n\tlocal i = 2\n\tlocal cat = args[i]\n\t\n\twhile cat do\n\t\tif cat ~= \"\" then\n\t\t\ttable.insert(categories, prefix .. cat)\n\t\tend\n\t\t\n\t\ti = i + 1\n\t\tcat = args[i]\n\tend\n\t\n\treturn export.format_categories(categories,\
      \ lang, sort_key)\nend\n\nfunction export.catfix(lang, sc)\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"catfix/no lang\")\n\t\treturn nil\n\telseif type(lang) ~= \"table\" then\n\t\trequire(\"Module:debug\").track(\"catfix/lang not table\"\
      )\n\t\treturn nil\n\tend\n\tlocal canonicalName = lang:getCanonicalName() or error('The first argument to the function \"catfix\" should be a language object from Module:languages.')\n\t\n\tif sc and not sc.getCode then\n\t\terror('The second argument\
      \ to the function \"catfix\" should be a script object from Module:scripts.')\n\tend\n\t\n\t-- To add script classes to links on pages created by category boilerplate templates.\n\tif not sc then\n\t\tsc = data.catfix_scripts[lang:getCode()]\n\t\tif sc\
      \ then\n\t\t\tsc = require(\"Module:scripts\").getByCode(sc)\n\t\tend\n\tend\n\t\n\treturn \"&lt;span id=\\\"catfix\\\" style=\\\"display:none;\\\" class=\\\"CATFIX-\" .. mw.uri.anchorEncode(canonicalName) .. \"\\\"&gt;\" ..\n\t\trequire(\"Module:script\
      \ utilities\").tag_text(\"&amp;nbsp;\", lang, sc, nil) ..\n\t\t\"&lt;/span&gt;\"\nend\n\nfunction export.catfix_template(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t\t[2] = { alias_of = \"sc\" },\n\t\t[\"sc\"] = {},\n\t}\n\t\n\tlocal args = require(\"\
      Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal sc = args.sc\n\tif sc then\n\t\tsc = require(\"Module:scripts\"\
      ).getByCode(sc) or error('The script code \"' .. sc .. '\", provided in the second parameter, is not valid.')\n\tend\n\t\n\treturn export.catfix(lang, sc)\nend\n\n-- Not exporting because it is not used yet.\nlocal function getDateTense(frame) \n\tlocal\
      \ name_num_mapping = {[\"January\"] = 1, [\"February\"] = 2, [\"March\"] = 3, [\"April\"] = 4, [\"May\"] = 5, [\"June\"] = 6, \n\t\t[\"July\"] = 7, [\"August\"] = 8, [\"September\"] = 9, [\"October\"] = 10, [\"November\"] = 11, [\"December\"] = 12, \n\t\
      \t[1] = 1, [2] = 2, [3] = 3, [4] = 4, [5] = 5, [6] = 6, [7] = 7, [8] = 8, [9] = 9, [10] = 10, [11] = 11, [12] = 12}\n\tlocal month = name_num_mapping[frame.args[2]]\n\tlocal date = os.time({year = frame.args[1], day = frame.args[3], month = month})\n\t\
      local today = os.time() -- 12 AM/PM\n\tlocal diff = os.difftime(date, today)\n\tlocal daylength = 24 * 3600\n\t\n\tif diff &lt; -daylength / 2 then return \"past\"\n\telse \n\t\tif diff &gt; daylength / 2  then return \"future\"\n\t\telse return \"present\"\
      \ end\n\tend\nend\n\nfunction export.make_id(lang, str)\n\t--[[\tIf called with invoke, first argument is a frame object.\n\t\t\tIf called by a module, first argument is a language object. ]]\n\tlocal invoked = false\n\t\n\tif type(lang) == \"table\" then\n\
      \t\tif lang.args then\n\t\t\tinvoked = true\n\t\t\t\n\t\t\tlocal frame = lang\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = {},\n\t\t\t\t[2] = {},\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\
      \t\t\t\n\t\t\tlocal langCode = args[1]\n\t\t\tstr = args[2]\n\t\t\t\n\t\t\tlocal m_languages = require(\"Module:languages\")\n\t\t\t\n\t\t\tlang = m_languages.getByCode(langCode) or m_languages.err(langCode, 1)\n\t\telseif not lang.getCanonicalName then\n\
      \t\t\terror(\"The first argument to make_id should be a language object.\")\n\t\tend\n\tend\n\n\tif not ( type(str) == \"string\" or type(str) == \"number\" ) then\n\t\terror(\"The second argument to make_id should be a string or a number.\")\n\tend\n\t\
      \n\tlocal canonicalName = lang:getCanonicalName()\n\t\n\tstr = mw.uri.encode(str, \"WIKI\")\n\t\n\tlocal id = canonicalName .. \"-\" .. str\n\t\n\tif invoked then\n\t\treturn '&lt;li class=\"senseid\" id=\"' .. id .. '\"&gt;'\n\telse\n\t\treturn id\n\t\
      end\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:21.027Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45194 t=1555362500842168
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:20 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1341.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 587148942, 499134689, 701962943
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4099100\" pageid=\"4099100\" ns=\"828\" title=\"Module:script utilities\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T16:56:29Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 52248476 by [[Special:Contributions/Rua|Rua]] ([[User talk:Rua|talk]])\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\tModules used:\n\t[[Module:script utilities/data]]\n\
      \t[[Module:scripts]]\n\t[[Module:languages]]\n\t[[Module:parameters]]\n\t[[Module:utilities]]\n\t[[Module:debug]]\n]=]\n\nfunction export.is_Latin_script(sc)\n\t-- Latn, Latf, Latinx, nv-Latn, pjt-Latn\n\treturn sc:getCode():find(\"Lat\") and true or false\n\
      end\n\n-- Used by [[Template:lang]]\nfunction export.lang_t(frame)\n\tparams = {\n\t\t[1] = {},\n\t\t[2] = { allow_empty = true, default = \"\" },\n\t\t[\"sc\"] = {},\n\t\t[\"face\"] = {},\n\t\t[\"class\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\t\n\tlocal lang = args[1] or (NAMESPACE == \"Template\" and \"und\") or error(\"Language code has not been specified. Please pass parameter 1 to the template.\"\
      )\n\tlang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, 1)\n\t\n\tlocal text = args[2]\n\t\n\tlocal sc = args[\"sc\"]\n\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\
      \" .. sc .. \"\\\" is not valid.\")) or nil)\n\t\n\tlocal face = args[\"face\"]\n\t\n\treturn export.tag_text(text, lang, sc, face, class)\nend\n\n-- Ustring turns on the codepoint-aware string matching. The basic string function\n-- should be used for\
      \ simple sequences of characters, Ustring function for\n-- sets – [].\nlocal function trackPattern(text, pattern, tracking, ustring)\n\tlocal find = ustring and mw.ustring.find or string.find\n\tif pattern and find(text, pattern) then\n\t\trequire(\"Module:debug\"\
      ).track(\"script/\" .. tracking)\n\tend\nend\n\nlocal function track(text, lang, sc)\n\tlocal U = mw.ustring.char\n\t\n\tif lang and text then\n\t\tlocal langCode = lang:getCode()\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/ang/acute]]\n\
      \t\tif langCode == \"ang\" then\n\t\t\tlocal decomposed = mw.ustring.toNFD(text)\n\t\t\tlocal acute = U(0x301)\n\t\t\t\n\t\t\ttrackPattern(decomposed, acute, \"ang/acute\")\n\t\t\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-phi]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-theta]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-kappa]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-rho]]\n\t\t\tϑ, ϰ, ϱ, ϕ should generally\
      \ be replaced with θ, κ, ρ, φ.\n\t\t]=]\n\t\telseif langCode == \"el\" or langCode == \"grc\" then\n\t\t\ttrackPattern(text, \"ϑ\", \"Greek/wrong-theta\")\n\t\t\ttrackPattern(text, \"ϰ\", \"Greek/wrong-kappa\")\n\t\t\ttrackPattern(text, \"ϱ\", \"Greek/wrong-rho\"\
      )\n\t\t\ttrackPattern(text, \"ϕ\", \"Greek/wrong-phi\")\n\t\t\n\t\t\t--[=[\n\t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/spacing-coronis]]\n\t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/spacing-smooth-breathing]]\n\
      \t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/wrong-apostrophe]]\n\t\t\t\tWhen spacing coronis and spacing smooth breathing are used as apostrophes, \n\t\t\t\tthey should be replaced with right single quotation marks (’).\n\t\t\t\
      ]=]\n\t\t\tif langCode == \"grc\" then\n\t\t\t\ttrackPattern(text, U(0x1FBD), \"Ancient Greek/spacing-coronis\")\n\t\t\t\ttrackPattern(text, U(0x1FBF), \"Ancient Greek/spacing-smooth-breathing\")\n\t\t\t\ttrackPattern(text, \"[\" .. U(0x1FBD) .. U(0x1FBF)\
      \ .. \"]\", \"Ancient Greek/wrong-apostrophe\", true)\n\t\t\tend\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/Russian/grave-accent]]\n\t\telseif langCode == \"ru\" then\n\t\t\tlocal decomposed = mw.ustring.toNFD(text)\n\t\t\t\n\t\t\t\
      trackPattern(decomposed, U(0x300), \"Russian/grave-accent\")\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/Tibetan/trailing-punctuation]]\n\t\telseif langCode == \"bo\" then\n\t\t\ttrackPattern(text, \"[་།]$\", \"Tibetan/trailing-punctuation\"\
      , true)\n\t\t\ttrackPattern(text, \"[་།]%]%]$\", \"Tibetan/trailing-punctuation\", true)\n\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/broken-ae]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/broken-am]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/wrong-rue-lue]]\n\
      \t\t]=]\n\t\telseif langCode == \"th\" then\n\t\t\ttrackPattern(text, \"เ\"..\"เ\", \"Thai/broken-ae\")\n\t\t\ttrackPattern(text, \"ํ[่้๊๋]?า\", \"Thai/broken-am\", true)\n\t\t\ttrackPattern(text, \"[ฤฦ]า\", \"Thai/wrong-rue-lue\", true)\n\n\t\t--[=[\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Lao/broken-ae]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Lao/broken-am]]\n\t\t]=]\n\t\telseif langCode == \"lo\" then\n\t\t\ttrackPattern(text, \"ເ\"..\"ເ\", \"Lao/broken-ae\")\n\t\t\ttrackPattern(text,\
      \ \"ໍ[່້໊໋]?າ\", \"Lao/broken-am\", true)\n\t\tend\n\tend\nend\n\n-- Wrap text in the appropriate HTML tags with language and script class.\nfunction export.tag_text(text, lang, sc, face, class, id)\n\tif not sc then\n\t\tsc = require(\"Module:scripts\"\
      ).findBestScript(text, lang)\n\tend\n\t\n\ttrack(text, lang, sc)\n\t\t\n\t-- Replace space characters with newlines in Mongolian-script text, which is written top-to-bottom.\n\tif sc and sc:getDirection() == \"down\" then\n\t\t--[[\tFirst, escape targets\
      \ of wikilinks and HTML tags,\n\t\t\t\twhich should not have their spaces\n\t\t\t\treplaced with line breaks. ]]\n\t\tlocal escaped = {}\n\t\tlocal i = 0\n\t\tlocal escape_format = \"$%d\"\n\t\t\n\t\tlocal function escape(text, pattern, prefix)\n\t\t\t\
      return text:gsub(\n\t\t\t\tpattern,\n\t\t\t\tfunction(item)\n\t\t\t\t\ti = i + 1\n\t\t\t\t\tescaped[i] = item\n\t\t\t\t\treturn (prefix or \"\") .. escape_format:format(i)\n\t\t\t\tend)\n\t\tend\n\t\t\n\t\ttext = escape(text, \"%[%[([^|]+|)\", \"[[\")\n\
      \t\ttext = escape(text, \"&lt;[^&gt;]+&gt;\")\n\t\t\n\t\ttext = text:gsub(\" +\", \"&lt;br&gt;\")\n\t\t\n\t\t-- Unescape whatever was escaped.\n\t\ttext = text:gsub(\n\t\t\t\"$(%d)\",\n\t\t\tfunction(a)\n\t\t\t\ta = tonumber(a)\n\t\t\t\treturn escaped[a]\n\
      \t\t\tend\n\t\t)\n\tend\n\n\tif sc:getCode() == \"Imag\" then\n\t\tface = nil\n\tend\n\n\tlocal function class_attr(classes)\n\t\ttable.insert(classes, 1, sc:getCode())\n\t\tif class and class ~= '' then\n\t\t\ttable.insert(classes, class)\n\t\tend\n\t\
      \treturn 'class=\"' .. table.concat(classes, ' ') .. '\"'\n\tend\n\t\n\tlocal function tag_attr(...)\n\t\tlocal output = {}\n\t\tif id then\n\t\t\ttable.insert(output, 'id=\"' .. require(\"Module:utilities\").make_id(lang, id) .. '\"')\n\t\tend\n\t\t\n\
      \t\ttable.insert(output, class_attr({...}) )\n\t\t\n\t\tif lang then\n\t\t\ttable.insert(output, 'lang=\"' .. lang:getCode() .. '\"')\n\t\tend\n\t\t\n\t\treturn table.concat(output, \" \")\n\tend\n\t\n\tif face == \"hypothetical\" then\n\t-- [[Special:WhatLinksHere/Template:tracking/script-utilities/face/hypothetical]]\n\
      \t\trequire(\"Module:debug\").track(\"script-utilities/face/hypothetical\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").faces[face or \"nil\"]\n\t\n\tlocal post = \"\"\n\tif sc:getDirection() == \"rtl\" and (face == \"translation\"\
      \ or mw.ustring.find(text, \"%p$\")) then\n\t\tpost = \"&amp;lrm;\"\n\tend\n\t\n\t-- Add a script wrapper\n\tif data then\n\t\treturn ( data.prefix or \"\" ) .. '&lt;' .. data.tag .. ' ' .. tag_attr(data.class) .. '&gt;' .. text .. '&lt;/' .. data.tag\
      \ .. '&gt;' .. post\n\telse\n\t\terror('Invalid script face \"' .. face .. '\".')\n\tend\nend\n\nfunction export.tag_translit(translit, lang, kind, attributes, is_manual)\n\tif type(lang) == \"table\" then\n\t\tlang = lang.getCode and lang:getCode()\n\t\
      \t\tor error(\"Third argument to tag_translit should be a language code or language object.\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").translit[kind or \"default\"]\n\t\n\tlocal opening_tag = {}\n\t\n\ttable.insert(opening_tag,\
      \ data.tag)\n\tif lang == \"ja\" then\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. (is_manual and \"manual-tr \" or \"\") .. 'tr\"')\n\telse\n\t\ttable.insert(opening_tag, 'lang=\"' .. lang .. '-Latn\"\
      ')\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. (is_manual and \"manual-tr \" or \"\") .. 'tr Latn\"')\n\tend\n\t\n\tif data.dir then\n\t\ttable.insert(opening_tag, 'dir=\"' .. data.dir .. '\"')\n\tend\n\
      \t\n\ttable.insert(opening_tag, attributes)\n\t\n\treturn \"&lt;\" .. table.concat(opening_tag, \" \") .. \"&gt;\" .. translit .. \"&lt;/\" .. data.tag .. \"&gt;\"\nend\n\nfunction export.tag_transcription(transcription, lang, kind, attributes)\n\tif type(lang)\
      \ == \"table\" then\n\t\tlang = lang.getCode and lang:getCode()\n\t\t\tor error(\"Third argument to tag_translit should be a language code or language object.\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").transcription[kind\
      \ or \"default\"]\n\t\n\tlocal opening_tag = {}\n\t\n\ttable.insert(opening_tag, data.tag)\n\tif lang == \"ja\" then\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. 'ts\"')\n\telse\n\t\ttable.insert(opening_tag,\
      \ 'lang=\"' .. lang .. '-Latn\"')\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. 'ts Latn\"')\n\tend\n\t\n\tif data.dir then\n\t\ttable.insert(opening_tag, 'dir=\"' .. data.dir .. '\"')\n\tend\n\t\n\ttable.insert(opening_tag,\
      \ attributes)\n\t\n\treturn \"&lt;\" .. table.concat(opening_tag, \" \") .. \"&gt;\" .. transcription .. \"&lt;/\" .. data.tag .. \"&gt;\"\t\nend\n\n-- Add a notice to request the native script of a word\nfunction export.request_script(lang, sc)\n\tlocal\
      \ scripts = lang.getScripts and lang:getScripts() or error('The language \"' .. lang:getCode() .. '\" does not have the method getScripts. It may be unwritten.')\n\t\n\t-- By default, request for \"native\" script\n\tlocal cat_script = \"native\"\n\tlocal\
      \ disp_script = \"script\"\n\t\n\t-- If the script was not specified, and the language has only one script, use that.\n\tif not sc and #scripts == 1 then\n\t\tsc = scripts[1]\n\tend\n\t\n\t-- Is the script known?\n\tif sc then\n\t\t-- If the script is\
      \ Latin, return nothing.\n\t\tif export.is_Latin_script(sc) then\n\t\t\treturn \"\"\n\t\tend\n\t\t\n\t\tif sc:getCode() ~= scripts[1]:getCode() then\n\t\t\tdisp_script = sc:getCanonicalName()\n\t\tend\n\t\t\n\t\t-- The category needs to be specific to\
      \ script only if there is chance\n\t\t-- of ambiguity. This occurs when lang=und, or when the language has\n\t\t-- multiple scripts.\n\t\tif lang:getCode() == \"und\" or scripts[2] then\n\t\t\tcat_script = sc:getCanonicalName()\n\t\tend\n\telse\n\t\t--\
      \ The script is not known.\n\t\t-- Does the language have at least one non-Latin script in its list?\n\t\tlocal has_nonlatin = false\n\t\t\n\t\tfor i, val in ipairs(scripts) do\n\t\t\tif not export.is_Latin_script(val) then\n\t\t\t\thas_nonlatin = true\n\
      \t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- If there are non-Latin scripts, return nothing.\n\t\tif not has_nonlatin then\n\t\t\treturn \"\"\n\t\tend\n\tend\n\t\n\tlocal category = \"\"\n\t\n\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\
      \t\tcategory = \"[[Category:\" .. lang:getCanonicalName() .. \" terms needing \" .. cat_script .. \" script]]\"\n\tend\n\t\n\treturn \"&lt;small&gt;[\" .. disp_script .. \" needed]&lt;/small&gt;\" .. category\nend\n\nfunction export.template_rfscript(frame)\n\
      \tlocal args = frame.args\n\tlocal lang = args[1] or error(\"The first parameter (language code) has not been given\")\n\tlocal sc = args[\"sc\"]; if sc == \"\" then sc = nil end\n\tlang = require(\"Module:languages\").getByCode(lang) or error(\"The language\
      \ code \\\"\" .. lang .. \"\\\" is not valid.\")\n\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil)\n\t\n\tlocal ret = export.request_script(lang, sc)\n\t\n\tif ret ==\
      \ \"\" then\n\t\terror(\"This language is written in the Latin alphabet. It does not need a native script.\")\n\telse\n\t\treturn ret\n\tend\nend\n\nfunction export.checkScript(text, scriptCode, result)\n\tlocal scriptObject = require(\"Module:scripts\"\
      ).getByCode(scriptCode)\n\t\n\tif not scriptObject then\n\t\terror('The script code \"' .. scriptCode .. '\" is not recognized.')\n\tend\n\t\n\tlocal originalText = text\n\t\n\t-- Remove non-letter characters.\n\ttext = mw.ustring.gsub(text, \"[%A]\",\
      \ \"\")\n\t\n\t-- Remove all characters of the script in question.\n\ttext = mw.ustring.gsub(text, \"[\" .. scriptObject:getCharacters() .. \"]\", \"\")\n\t\n\tif text ~= \"\" then\n\t\tif type(result) == \"string\" then\n\t\t\terror(result)\n\t\telse\n\
      \t\t\terror('The text \"' .. originalText .. '\" contains the letters \"' .. text .. '\" that do not belong to the ' .. scriptObject:getCategoryName() .. '.', 2)\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:20.536Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53721 t=1555362500309084
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:20 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 198301958, 831791074, 696664021
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4216643\" pageid=\"4216643\" ns=\"828\" title=\"Module:scripts\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-02-03T10:53:06Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"that was incorrect, but it turns out there aren&#039;t even any scripts whose canonical names contain &quot;script&quot;, so it didn&#039;t cause problems\" xml:space=\"preserve\">local export = {}\nlocal\
      \ Script = {}\n\nfunction Script:getCode()\n\treturn self._code\nend\n\nfunction Script:getCanonicalName()\n\treturn self._rawData.canonicalName\nend\n\nfunction Script:getOtherNames()\n\treturn self._rawData.otherNames or {}\nend\n\nfunction Script:getParent()\n\
      \treturn self._rawData.parent\nend\n\nfunction Script:getSystems()\n\tif not self._systemObjects then\n\t\tlocal m_systems = require(\"Module:writing systems\")\n\t\tself._systemObjects = {}\n\t\t\n\t\tfor _, sys in ipairs(self._rawData.systems or {})\
      \ do\n\t\t\ttable.insert(self._systemObjects, m_systems.getByCode(sys))\n\t\tend\n\tend\n\t\n\treturn self._systemObjects\nend\n\n--function Script:getAllNames()\n--\treturn self._rawData.names\n--end\n\n\nfunction Script:getType()\n\treturn \"script\"\
      \nend\n\n\nfunction Script:getCategoryName()\n\tlocal name = self._rawData.canonicalName\n\t\n\t-- If the name already has \"code\" or \"semaphore\" in it, don't add it.\n\t-- No names contain \"script\".\n\tif name:find(\"[Cc]ode$\") or name:find(\"[Ss]emaphore$\"\
      ) then\n\t\treturn name\n\telse\n\t\treturn name .. \" script\"\n\tend\nend\n\n\nfunction Script:getWikipediaArticle()\n\treturn self._rawData.wikipedia_article or self:getCategoryName()\nend\n\n\nfunction Script:getCharacters()\n\tif self._rawData.characters\
      \ then\n\t\treturn self._rawData.characters\n\telse\n\t\treturn nil\n\tend\nend\n\n\nfunction Script:countCharacters(text)\n\tif not self._rawData.characters then\n\t\treturn 0\n\telse\n\t\tlocal _, num = mw.ustring.gsub(text, \"[\" .. self._rawData.characters\
      \ .. \"]\", \"\")\n\t\treturn num\n\tend\nend\n\nfunction Script:getDirection()\n\tlocal direction = self._rawData.direction\n\tif not direction then\n\t\treturn nil\n\telse\n\t\treturn direction\n\tend\nend\n\n\nfunction Script:getRawData()\n\treturn\
      \ self._rawData\nend\n\n\nfunction Script:toJSON()\n\tlocal ret = {\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\totherNames = self:getOtherNames(),\n\t\ttype = self:getType(),\n\t\
      \t}\n\t\n\treturn require(\"Module:JSON\").toJSON(ret)\nend\n\n\nScript.__index = Script\n\n\nfunction export.makeObject(code, data)\n\treturn data and setmetatable({ _rawData = data, _code = code }, Script) or nil\nend\n\n\nfunction export.getByCode(code)\n\
      \tif code == \"IPAchar\" then\n\t\trequire(\"Module:debug\").track(\"IPAchar\")\n\tend\n\treturn export.makeObject(code, mw.loadData(\"Module:scripts/data\")[code])\nend\n\nfunction export.getByCanonicalName(name)\n\tlocal code = mw.loadData(\"Module:scripts/by\
      \ name\")[name]\n\t\n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, mw.loadData(\"Module:scripts/data\")[code])\nend\n\n-- Find the best script to use, based on the characters of a string.\nfunction export.findBestScript(text,\
      \ lang)\n\tif not text or not lang or not lang.getScripts then\n\t\treturn export.getByCode(\"None\")\n\tend\n\t\n\tlocal scripts = lang:getScripts()\n\t\n\tif not scripts[2] then\n\t\treturn scripts[1]\n\tend\n\t\n\t--[=[\n\t\tRemove any HTML entities;\
      \ catfix function in [[Module:utilities]]\n\t\tadds tagging to a no-break space (&amp;nbsp;), which contains Latin characters;\n\t\thence Latin was returned as the script if \"Latn\" is one of the language's scripts.\n\t]=]\n\ttext = string.gsub(text,\
      \ \"&amp;[a-zA-Z0-9]+;\", \"\")\n\t\n\t-- Try to match every script against the text,\n\t-- and return the one with the most matching characters.\n\tlocal bestcount = 0\n\tlocal bestscript = nil\n\t\n\t-- Get length of text minus any spacing or punctuation\
      \ characters.\n\t-- Counting instances of UTF-8 character pattern is faster than mw.ustring.len.\n\tlocal _, length = string.gsub(mw.ustring.gsub(text, \"[%s%p]+\", \"\"), \"[\\1-\\127\\194-\\244][\\128-\\191]*\", \"\")\n\t\n\tif length == 0 then\n\t\t\
      return export.getByCode(\"None\")\n\tend\n\t\n\tfor i, script in ipairs(scripts) do\n\t\tlocal count = script:countCharacters(text)\n\t\t\n\t\tif count &gt;= length then\n\t\t\treturn script\n\t\tend\n\t\t\n\t\tif count &gt; bestcount then\n\t\t\tbestcount\
      \ = count\n\t\t\tbestscript = script\n\t\tend\n\tend\n\t\n\tif bestscript then\n\t\treturn bestscript\n\tend\n\t\n\t-- No matching script was found. Return \"None\".\n\treturn export.getByCode(\"None\")\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:20.765Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45408 t=1555362500619030
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:20 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1282.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 681968421, 649730338, 694436474
    body: !!binary |-
      
- recorded: 2016-09-02T21:43:53.145Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aredlink+category&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Porto:41.15:-8.61:v4; WMF-Last-Access=02-Sep-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=33658 t=1472852633212099
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 02 Sep 2016 21:43:53 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1191.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=02-Sep-2016;https=1
      X-Cache: cp1053 pass, cp3031 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.7
      X-Varnish: 2764930182, 2016243880, 2651033680
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="5379564" pageid="5379564" ns="10" title="Template:redlink category"><revisions><rev user="Daniel Carrero" timestamp="2016-07-03T13:52:45Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">&lt;!--
      --&gt;{{#switch:{{PAGENAME}}|-ere|mies|water|=|&lt;!--
          --&gt;{{#ifeq:{{NAMESPACE}}||&lt;!--
              --&gt;{{#switch:{{{1}}}|grc|fi|it|pt|gml|ru=&lt;!-- testing
                  --&gt;{{#ifeq:{{isValidPageName|{{{2|}}}}}|valid|&lt;!--
                      --&gt;{{#invoke:redlink category|cat|{{{1}}}|{{{2}}}|template={{{template|-}}}}}&lt;!--
                  --&gt;}}&lt;!--
              --&gt;}}&lt;!--
          --&gt;}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2016-09-02T21:42:39.243Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aaccent%3AAAVE&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Porto:41.15:-8.61:v4; WMF-Last-Access=02-Sep-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=28947 t=1472852559315674
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 02 Sep 2016 21:42:39 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1204.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=02-Sep-2016;https=1
      X-Cache: cp1054 pass, cp3041 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.7
      X-Varnish: 1206580900, 2685537752, 2650493623
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:accent:AAVE" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:08:21.854Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44619 t=1555362501759404
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:21 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 918805920, 816905144, 702255656
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4393059\" pageid=\"4393059\" ns=\"828\" title=\"Module:labels/templates\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-31T04:12:12Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"when compat=1 in show(), allow language code in either lang= or 1=; otherwise only in lang=\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\tModules used:\n\t[[Module:labels]]\n\t\
      [[Module:parameters]]\n\t[[Module:utilities]]\n\t[[Module:languages]]\n\t[[Module:template_link]]\n]=]\n\nfunction export.show(frame)\n\tlocal parent_args = frame:getParent().args\n\tlocal compat = (frame.args[\"compat\"] or \"\") ~= \"\" and parent_args[\"\
      lang\"]\n\tlocal term_mode = (frame.args[\"term\"] or \"\") ~= \"\"\n\t\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {list = true},\n\t\t[\"nocat\"] = {type = \"boolean\"},\n\t\t[\"script\"] = {},\n\t\t[\"script2\"] = {},\n\t\t[\"sort\"\
      ] = {},\n\t\t[\"sort2\"] = {},\n\t}\n\t\n\tif compat then\n\t\tparams[1] = params[2]\n\t\tparams[2] = nil\n\t\tparams[\"lang\"] = {required = true}\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(parent_args, params)\n\t\n\t-- Gather\
      \ parameters\n\tlocal lang = args[compat and \"lang\" or 1]\n\tlocal labels = args[compat and 1 or 2]\n\tlocal nocat = args[\"nocat\"]\n\tlocal script = args[\"script\"]\n\tlocal script2 = args[\"script2\"]\n\tlocal sort_key = args[\"sort\"]\n\tlocal sort_key2\
      \ = args[\"sort2\"]\n\n\tif not lang then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tlang = \"und\"\n\t\telse\n\t\t\terror(\"Language code has not been specified. Please provide it to the template using the first parameter.\"\
      )\n\t\tend\n\tend\n\t\n\tlang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, compat and \"lang\" or 1)\n\t\n\treturn require(\"Module:labels\").show_labels(labels, lang, script, script2, sort_key, sort_key2,\
      \ nocat, term_mode)\nend\n\n--[[\ttemporary. intentionally undocumented.\n\t\tthis function is only to be used in\n\t\t{{alternative spelling of}},\n\t\t{{eye dialect of}}\n\t\tand similar templates\t\t\t\t\t]]\nfunction export.show_from(frame)\n\tlocal\
      \ m_labeldata = require('Module:labels/data')\n\t\n\tlocal froms = {}\n\tlocal categories = {}\n\tlocal args = frame:getParent().args\n\tlocal nocat = args[\"nocat\"]\n\tlocal lang = frame.args[\"lang\"] or args[\"lang\"] or args[1] or \"en\"\n\tlocal\
      \ limit = frame.args.limit and tonumber(frame.args.limit) or 99999\n\t\n\tlocal m_languages = require(\"Module:languages\")\n\tlang = m_languages.getByCode(lang) or m_languages.err(lang, \"lang\")\n\n\tlocal key, i = 'from', 1\n\twhile args[key] do\n\t\
      \tlocal k = args[key]\n\t\tk = m_labeldata.aliases[k] or k\n\t\tlocal data = m_labeldata.labels[k]\n\t\tlocal label = data and data.display or k\n\t\tlocal category1, category2\n\t\t\n\t\tif not nocat and data then\n\t\t\tif data.regional_categories then\n\
      \t\t\t\tfor j, cat in ipairs(data.regional_categories) do\n\t\t\t\t\tcategory1 = cat .. ' ' .. lang:getCanonicalName()\n\t\t\t\tend\n\t\t\tend\n\t\t\n\t\t\tif data.plain_categories then\n\t\t\t\tfor j, cat in ipairs(data.plain_categories) do\n\t\t\t\t\t\
      category2 = cat\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\ttable.insert(froms, label)\n\t\ttable.insert(categories, category1)\n\t\ttable.insert(categories, category2)\n\t\ti = i + 1\n\t\tif i &gt; limit then\n\t\t\tbreak\t\n\t\tend\n\t\tkey = 'from' .. i\n\
      \tend\n\t\n\tcategories = require(\"Module:utilities\").format_categories(categories, lang)\n\t\n\tif #froms == 0 then\n\t\treturn frame.args.default\n\tend\n\t\n\tif #froms == 2 then\n\t\treturn froms[1] .. \" and \" .. froms[2] .. categories\n\tend\n\
      \t\n\tlocal results = {}\n\tfor i, item in ipairs(froms) do\n\t\tif i == 1 then\n\t\t\t-- nothing\n\t\telseif i == #froms then\n\t\t\ttable.insert(results, '&lt;span class=\"serial-comma\"&gt;,&lt;/span&gt; &lt;span class=\"serial-and\"&gt; and&lt;/span&gt;\
      \ ')\n\t\telse\n\t\t\ttable.insert(results, ', ')\n\t\tend\n\t\t\n\t\ttable.insert(results, item)\n\tend\n\treturn table.concat(results) .. categories\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-09-02T21:43:53.828Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Porto:41.15:-8.61:v4; WMF-Last-Access=02-Sep-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=32782 t=1472852633894781
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 02 Sep 2016 21:43:53 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=02-Sep-2016;https=1
      X-Cache: cp1067 pass, cp3032 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.7
      X-Varnish: 64094586, 2119593323, 2651036791
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4073701\" pageid=\"4073701\" ns=\"828\" title=\"Module:labels\"><revisions><rev user=\"CodeCat\" timestamp=\"2016-08-15T21:23:42Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local m_labeldata = mw.loadData(&quot;Module:labels/data&quot;)\nlocal m_utilities = require(&quot;Module:utilities&quot;)\n\nlocal export = {}\n\nlocal function show_categories(data, lang, script, sort_key,\
      \ script2, sort_key2, term_mode)\n\tlocal categories = {}\n\tlocal categories2 = {}\n\t\n\tfor i, cat in ipairs(data.topical_categories or {}) do\n\t\ttable.insert(categories, lang:getCode() .. &quot;:&quot; .. cat)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories,\
      \ lang:getCode() .. &quot;:&quot; .. cat .. &quot; in &quot; .. script .. &quot; script&quot;)\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, lang:getCode() .. &quot;:&quot; .. cat .. &quot; in &quot; .. script2 .. &quot; script&quot;)\n\
      \t\tend\n\tend\n\t\n\tfor i, cat in ipairs(data.sense_categories or {}) do\n\t\tcat = (term_mode and (cat .. &quot; terms&quot;) or (&quot;terms with &quot; .. cat .. &quot; senses&quot;))\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot;\
      \ &quot; .. cat)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; &quot; .. cat .. &quot; in &quot; .. script .. &quot; script&quot;)\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, lang:getCanonicalName()\
      \ .. &quot; &quot; .. cat .. &quot; in &quot; .. script2 .. &quot; script&quot;)\n\t\tend\n\tend\n\n\tfor i, cat in ipairs(data.pos_categories or {}) do\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; &quot; .. cat)\n\t\t\n\t\tif script\
      \ then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; &quot; .. cat .. &quot; in &quot; .. script .. &quot; script&quot;)\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, lang:getCanonicalName() .. &quot; &quot; ..\
      \ cat .. &quot; in &quot; .. script2 .. &quot; script&quot;)\n\t\tend\n\tend\n\t\n\tfor i, cat in ipairs(data.regional_categories or {}) do\n\t\ttable.insert(categories, cat .. &quot; &quot; .. lang:getCanonicalName())\n\t\t\n\t\tif script then\n\t\t\t\
      table.insert(categories, cat .. &quot; &quot; .. lang:getCanonicalName() .. &quot; in &quot; .. script .. &quot; script&quot;)\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, cat .. &quot; &quot; .. lang:getCanonicalName() .. &quot;\
      \ in &quot; .. script2 .. &quot; script&quot;)\n\t\tend\n\tend\n\t\n\tfor i, cat in ipairs(data.plain_categories or {}) do\n\t\ttable.insert(categories, cat)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories, cat .. &quot; in &quot; .. script ..\
      \ &quot; script&quot;)\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, cat .. &quot; in &quot; .. script2 .. &quot; script&quot;)\n\t\tend\n\tend\n\t\n\treturn m_utilities.format_categories(categories, lang, sort_key) .. m_utilities.format_categories(categories2,\
      \ lang, sort_key2)\nend\n\nfunction export.show_labels(labels, lang, script, script2, sort_key, sort_key2, nocat, term_mode)\n\tif #labels &lt; 1 then\n\t\tif mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\t\tlabels = {&quot;example&quot;}\n\
      \t\telse\n\t\t\terror(&quot;You must specify at least one label.&quot;)\n\t\tend\n\tend\n\t\n\t-- Show the labels\n\tlocal omit_preComma = false\n\tlocal omit_postComma = false\n\t\n\tfor i, label in ipairs(labels) do\n\t\tif omit_postComma then\n\t\t\t\
      omit_preComma = true\n\t\t\tomit_postComma = false\n\t\tend\n\t\t\n\t\tlocal deprecated = false\n\t\tif m_labeldata.deprecated[label] then\n\t\t\tdeprecated = true\n\t\tend\n\t\tif m_labeldata.aliases[label] then\n\t\t\tlabel = m_labeldata.aliases[label]\n\
      \t\tend\n\t\tif m_labeldata.deprecated[label] then\n\t\t\tdeprecated = true\n\t\tend\n\t\t\t\n\t\tlocal data = m_labeldata.labels[label] or {}\n\t\t\t\n\t\tlabel = data.display or label\n\t\t\n\t\tlocal omit_comma = omit_preComma or data.omit_preComma\n\
      \t\tomit_preComma = false\n\t\tomit_postComma = data.omit_postComma\n\t\t\n\t\tif deprecated then\n\t\t\tlabel = '&lt;span class=&quot;deprecated-label&quot;&gt;' .. label .. '&lt;/span&gt;'\n\t\t\tif not nocat then\n\t\t\t\tlabel = label .. m_utilities.format_categories({\
      \ &quot;Entries with deprecated labels&quot; }, lang)\n\t\t\tend\n\t\tend\n\t\t\n\t\tif i &gt; 1 then\n\t\t\tlabel = (not omit_comma and &quot;&lt;span class=\\&quot;ib-comma\\&quot;&gt;,&lt;/span&gt;&quot; or &quot;&quot;) .. &quot;&amp;#32;&quot; ..\
      \ label\n\t\tend\n\t\t\n\t\tlabels[i] = label .. (nocat and &quot;&quot; or show_categories(data, lang, script, sort_key, script2, sort_key2, term_mode))\n\tend\n\t\n\treturn\n\t\t&quot;&lt;span class=\\&quot;ib-brac\\&quot;&gt;(&lt;/span&gt;&lt;span class=\\\
      &quot;ib-content\\&quot;&gt;&quot; ..\n\t\ttable.concat(labels, &quot;&quot;) ..\n\t\t&quot;&lt;/span&gt;&lt;span class=\\&quot;ib-brac\\&quot;&gt;)&lt;/span&gt;&quot;\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:22.195Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=82918 t=1555362501932771
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:22 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 608953446, 239853891, 700356967
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4077514\" pageid=\"4077514\" ns=\"828\" title=\"Module:labels/data\"><revisions><rev user=\"Mnemosientje\" timestamp=\"2019-04-10T19:23:30Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Reverted edits by [[Special:Contributions/User123o987name|User123o987name]]. If you think this rollback is in error, please leave a message on my talk page.\" xml:space=\"preserve\">local\
      \ labels = {}\nlocal aliases = {}\nlocal deprecated = {}\nlocal replacements = {\n\tlabels = {},\n\taliases = {},\n\tdeprecated = {},\n}\n\n\n--  Helper labels\n\nlabels['_'] = {\n\tdisplay = '',\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\n\n\
      labels['also'] = {\n\tomit_postComma = true,\n}\n\nlabels['and'] = {\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\naliases['&amp;'] = 'and'\n\nlabels['or'] = {\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\n\nlabels[';'] = {\n\tomit_preComma\
      \ = true,\n\tomit_postComma = true,\n\tomit_preSpace = true,\n}\n\n-- combine with 'except in', 'outside'? or retain for entries like \"wnuczę\"?\nlabels['except'] = {\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\n\nlabels['outside'] = {\n\tomit_preComma\
      \ = true,\n\tomit_postComma = true,\n}\naliases['except in'] = 'outside'\n\n-- Qualifier labels\n\nlabels['chiefly'] = {\n\tomit_postComma = true,\n}\naliases['mainly'] = 'chiefly'\naliases['mostly'] = 'chiefly'\naliases['primarily'] = 'chiefly'\n\nlabels['especially']\
      \ = {\n\tomit_postComma = true,\n}\n\nlabels['particularly'] = {\n\tomit_postComma = true,\n}\n\nlabels['excluding'] = {\n\tomit_postComma = true,\n}\n\nlabels['extremely'] = {\n\tomit_postComma = true,\n}\n\nlabels['frequently'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['humorously'] = { omit_postComma = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"jocular terms\" },\n}\n\nlabels['including'] = {\n\tomit_postComma = true,\n\
      }\n\nlabels['many'] = {\n\tomit_postComma = true,\n} -- e.g. \"many dialects\"\n\nlabels['markedly'] = {\n\tomit_postComma = true,\n}\n\nlabels['mildly'] = {\n\tomit_postComma = true,\n}\n\nlabels['now'] = {\n\tomit_postComma = true,\n}\naliases['nowadays']\
      \ = 'now'\n\nlabels['of'] = {\n\tomit_postComma = true,\n}\n\nlabels['of a'] = {\n\tomit_postComma = true,\n}\n\nlabels['of an'] = {\n\tomit_postComma = true,\n}\n\nlabels['often'] = {\n\tomit_postComma = true,\n}\n\nlabels['originally'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['possibly'] = {\n\tomit_postComma = true,\n}\n-- aliases['perhaps'] = 'possibly'\n\nlabels['rarely'] = {\n\tomit_postComma = true,\n}\n\nlabels['slightly'] = {\n\tomit_postComma = true,\n}\n\nlabels['sometimes'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['somewhat'] = {\n\tomit_postComma = true,\n}\n\nlabels['strongly'] = {\n\tomit_postComma = true,\n}\n\nlabels['then'] = {\n\tomit_postComma = true,\n} -- e.g. \"then colloquial, now dated\"\n\nlabels['typically'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['usually'] = {\n\tomit_postComma = true,\n}\n\nlabels['very'] = {\n\tomit_postComma = true,\n}\n\n\n-- Grammatical labels\n\nlabels[\"abbreviation\"] = {\n\tdisplay = \"[[abbreviation]]\",\n\tpos_categories = { \"abbreviations\"\
      \ },\n}\n\nlabels[\"acronym\"] = {\n\tdisplay = \"[[acronym]]\",\n\tpos_categories = { \"acronyms\" },\n}\n\nlabels[\"active\"] = {\n\tWikipedia = \"Active voice\",\n}\naliases[\"active voice\"] = \"active\"\naliases[\"in the active\"] = \"active\"\n\n\
      labels[\"ambitransitive\"] = {\n\tdisplay = \"[[transitive]], [[intransitive]]\",\n\tpos_categories = { \"transitive verbs\", \"intransitive verbs\" },\n}\n\nlabels[\"archaic-verb-form\"] = {\n\tglossary = \"archaic\",\n\tpos_categories = { \"archaic verb\
      \ forms\" },\n}\n\nlabels[\"attributive\"] = {\n\tdisplay = \"[[Appendix:English nouns#Attributive|attributive]]\",\n}\n\nlabels[\"attributively\"] = {\n\tdisplay = \"[[Appendix:English nouns#Attributive|attributively]]\",\n}\n\nlabels[\"auxiliary\"] =\
      \ {\n\tglossary = true,\n\tpos_categories = { \"auxiliary verbs\" }\n}\n\nlabels[\"by ellipsis\"] = {\n\tdisplay = \"by [[ellipsis]]\",\n\tpos_categories = { \"ellipses\" },\n}\n\nlabels[\"by extension\"] = {}\n\nlabels[\"cardinal\"] = {\n\tdisplay = \"\
      [[cardinal number|cardinal]]\",\n\tpos_categories = { \"cardinal numbers\" },\n}\ndeprecated[\"cardinal\"] = true\n\nlabels[\"causative\"] = {\n\tdisplay = \"[[causative]]\" }\n\nlabels[\"cognate object\"] = {\n\tdisplay = \"with [[w:Cognate object|cognate\
      \ object]]\",\n\tpos_categories = { \"verbs used with cognate objects\" },\n}\naliases[\"with cognate object\"] = \"cognate object\"\n\nlabels[\"collective\"] = {\n\tglossary = true,\n\tdisplay = \"collective\",\n\tpos_categories = { \"collective nouns\"\
      \ },\n}\n\nlabels[\"collectively\"] = {\n\tdisplay = \"collectively\",\n\tpos_categories = { \"collective nouns\" },\n}\n\nlabels[\"control verb\"] = {\n\tWikipedia = true,\n\tpos_categories = { \"control verbs\" },\n}\naliases[\"control\"] = \"control\
      \ verb\"\n\nlabels[\"common\"] = {\n\tglossary = true\n}\n\nlabels[\"comparable\"] = {\n\tglossary = true\n}\n\nlabels[\"copulative\"] = {\n\tdisplay = \"[[copular verb|copulative]]\",\n\tpos_categories = { \"copulative verbs\" },\n}\naliases[\"copular\"\
      ] = \"copulative\"\n\nlabels[\"countable\"] = {\n\tglossary = true,\n\tpos_categories = { \"countable nouns\" },\n}\n\nlabels[\"ditransitive\"] = {\n\tglossary = true,\n\tpos_categories = { \"ditransitive verbs\" },\n}\n\nlabels[\"dysphemistic\"] = {\n\
      \twikipedia = \"Dysphemism\",\n\tpos_categories = { \"dysphemisms\" },\n}\naliases[\"dysphemism\"] = \"dysphemistic\"\n\nlabels[\"emphatic\"] = {\n\tglossary = true\n}\n\nlabels[\"ergative\"] = {\n\tglossary = true,\n\tpos_categories = { \"ergative verbs\"\
      \ },\n}\n\nlabels[\"feminine\"] = {\n\tglossary = true\n}\n\nlabels[\"focus\"] = {\n\tglossary = true,\n\tpos_categories = { \"focus adverbs\" },\n}\n\nlabels[\"fractional\"] = {\n\tpos_categories = { \"fractional numbers\" },\n}\n\nlabels[\"hedge\"] =\
      \ {\n\tglossary = true,\n\tpos_categories = { \"hedges\" },\n}\naliases[\"hedges\"] = \"hedge\"\n\nlabels[\"ideophonic\"] = {\n\tglossary = true,\n}\naliases[\"ideophone\"] = \"ideophonic\"\n\nlabels[\"idiomatic\"] = {\n\tglossary = true,\n\tpos_categories\
      \ = { \"idioms\" },\n}\naliases[\"idiom\"] = \"idiomatic\"\n\nlabels[\"impersonal\"] = {\n\tglossary = true,\n\tpos_categories = { \"impersonal verbs\" },\n}\n\nlabels[\"in the singular\"] = {\n\tdisplay = \"in the [[singular]]\",\n}\naliases[\"in singular\"\
      ] = \"in the singular\"\n\nlabels[\"in the dual\"] = {\n\tdisplay = \"in the [[dual]]\",\n}\naliases[\"in dual\"] = \"in the dual\"\n\nlabels[\"in the plural\"] = {\n\tdisplay = \"in the [[Appendix:Glossary#plural|plural]]\",\n}\naliases[\"in plural\"\
      ] = \"in the plural\"\n\nlabels[\"in the mediopassive\"] = {\n\tdisplay = \"in the [[mediopassive]]\" }\naliases[\"in mediopassive\"] = \"in the mediopassive\"\naliases[\"mediopassive\"] = \"in the mediopassive\"\n\nlabels[\"inanimate\"] = {\n\tglossary\
      \ = true\n}\n\naliases[\"indef\"] = \"indefinite\"\n\nlabels[\"initialism\"] = {\n\tdisplay = \"[[initialism]]\",\n\tpos_categories = { \"initialisms\" },\n}\n\nlabels[\"intransitive\"] = {\n\tglossary = true,\n\tpos_categories = { \"intransitive verbs\"\
      \ },\n}\n\n-- Japanese inflecting suffixes\nlabels[\"jodōshi\"] = {\n\tdisplay = \"[[助動詞#Japanese|jodōshi]]\",\n\tpos_categories = { \"auxiliary verbs in traditional grammar\" },\n}\n\naliases[\"jodoshi\"] = \"jodōshi\"\naliases[\"jodoushi\"] = \"jodō\
      shi\"\n\nlabels[\"not comparable\"] = {\n\tdisplay = \"[[Appendix:Glossary#uncomparable|not comparable]]\"\n}\naliases[\"notcomp\"] = \"not comparable\"\naliases[\"uncomparable\"] = \"not comparable\"\n\nlabels[\"masculine\"] = {\n\tglossary = true\n}\n\
      \nlabels[\"middle\"] = {\n\tWikipedia = \"Voice (grammar)#Middle\",\n}\naliases[\"middle voice\"] = \"middle\"\naliases[\"in the middle\"] = \"middle\"\naliases[\"in the middle voice\"] = \"middle\"\n\nlabels[\"mnemonic\"] = {\n\tdisplay = '[[mnemonic]]',\n\
      \tpos_categories = { \"mnemonics\" },\n}\n\nlabels[\"neuter\"] = {\n\tglossary = true\n}\n\nlabels[\"onomatopoeia\"] = {\n\tdisplay = \"[[onomatopoeia]]\",\n\tpos_categories = { \"onomatopoeias\" },\n}\n\nlabels[\"ordinal\"] = {\n\tpos_categories = { \"\
      ordinal numbers\" },\n}\ndeprecated[\"ordinal\"] = true\n\ndeprecated[\"plural\"] = true\n\nlabels[\"passive\"] = {\n\tWikipedia = \"Passive voice\",\n}\naliases[\"passive voice\"] = \"passive\"\naliases[\"in the passive\"] = \"passive\"\n\nlabels[\"plural\
      \ only\"] = {\n\tpos_categories = { \"pluralia tantum\" },\n}\naliases[\"pluralonly\"] = \"plural only\"\naliases[\"plurale tantum\"] = \"plural only\"\n\nlabels[\"possessive pronoun\"] = {\n\tdisplay = \"possessive\",\n\tpos_categories = { \"possessive\
      \ pronouns\" },\n}\n\nlabels[\"postpositive\"] = {\n\tglossary = true\n}\n\nlabels[\"productive\"] = {\n\tdisplay = \"[[productive]]\" }\n\n-- TODO: This label is probably inappropriate for many languages\nlabels[\"pronominal\"] = {\n\tdisplay = \"takes\
      \ a [[Appendix:Glossary#reflexive|reflexive pronoun]]\",\n}\n\nlabels[\"pro-verb\"] = {\n\tWikipedia = true\n}\n\nlabels[\"reciprocal\"] = {\n\tdisplay = \"[[Appendix:Glossary#reciprocal|reciprocal]]\",\n\tpos_categories = { \"reciprocal verbs\" },\n}\n\
      \nlabels[\"reflexive\"] = {\n\tdisplay = \"[[Appendix:Glossary#reflexive|reflexive]]\",\n\tpos_categories = { \"reflexive verbs\" },\n}\n\nlabels[\"reflexive pronoun\"] = {\n\tdisplay = \"[[Appendix:Glossary#reflexive|reflexive]]\",\n\tpos_categories =\
      \ { \"reflexive pronouns\" }\n}\n\nlabels[\"relational\"] = {\n\tdisplay = \"[[Appendix:Glossary#relational|relational]]\",\n\tpos_categories = { \"relational adjectives\" },\n}\n\nlabels[\"rhetorical question\"] = {\n\tglossary = true,\n\tpos_categories\
      \ = { \"rhetorical questions\" },\n}\n\nlabels[\"set phrase\"] = {\n\tdisplay = \"[[set phrase]]\" }\n\nlabels[\"simile\"] = {\n\tglossary = true,\n\tpos_categories = { \"similes\" },\n}\n\ndeprecated[\"singular\"] = true\n\nlabels[\"singular only\"] =\
      \ {\n\tdisplay = \"singular only\",\n\tpos_categories = { \"singularia tantum\" },\n}\naliases[\"singulare tantum\"] = \"singular only\"\naliases[\"no plural\"] = \"singular only\"\n\nlabels[\"snowclone\"] = {\n\tglossary = true,\n\tpos_categories = {\
      \ \"snowclones\" },\n}\n\nlabels[\"stative\"] = {\n\tWikipedia = \"stative verb\",\n\tpos_categories = { \"stative verbs\" },\n}\naliases[\"stative verb\"] = \"stative\"\n\nlabels[\"substantive\"] = {\n\ttrack = true\n}\n\nlabels[\"transitive\"] = {\n\t\
      glossary = true,\n\tpos_categories = { \"transitive verbs\" },\n}\n\nlabels[\"unaccusative\"] = {\n\tWikipedia = \"Unaccusative verb\",\n}\n\nlabels[\"uncountable\"] = {\n\tglossary = true,\n\tpos_categories = { \"uncountable nouns\" },\n}\n\nlabels[\"\
      unergative\"] = {\n\tWikipedia = \"Unergative verb\",\n}\n\nlabels[\"usually plural\"] = {\n\tdisplay = \"usually in the [[plural]]\",\n}\naliases[\"usually in the plural\"] = \"usually plural\"\naliases[\"usually in plural\"] = \"usually plural\"\n\n\n\
      -- Usage labels\n\nlabels[\"ACG\"] = {\n\tdisplay = \"[[ACG]]\",\n\t-- see also \"fandom slang\"\n\tpos_categories = { \"fandom slang\" },\n}\n\nlabels[\"advertising slang\"] = {\n\tpos_categories = { \"advertising slang\" },\n}\naliases[\"ad slang\"]\
      \ = \"advertising slang\"\naliases[\"cosmo\"] = \"advertising slang\"\n\nlabels[\"affectionate\"] = {\n\tdisplay = \"[[affectionate]]\",\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"affectionate\
      \ terms\" },\n}\naliases[\"endearing\"] = \"affectionate\"\n\nlabels[\"pre-classical\"] = {\n\tdisplay = \"pre-classical\",\n\tregional_categories = { \"Pre-classical\" },\n}\naliases[\"ante-classical\"] = \"pre-classical\"\n\nlabels[\"archaic\"] = {\n\
      \tglossary = true,\n\tsense_categories = { \"archaic\" },\n}\n\nlabels[\"Australian slang\"] = {\n\tregional_categories = { \"Australian\" },\n\tplain_categories = { \"Australian slang\" },\n}\n\nlabels[\"avoidance\"] = {\n\tglossary = true\n}\n\nlabels[\"\
      back slang\"] = {\n\tdisplay = \"[[Appendix:Glossary#backslang|back slang]]\",\n\tpos_categories = { \"back slang\" },\n}\naliases[\"backslang\"] = \"back slang\"\naliases[\"back-slang\"] = \"back slang\"\n\nlabels[\"Bargoens\"] = {\n\tWikipedia = true,\n\
      \tplain_categories = { \"Bargoens\" },\n}\n\nlabels[\"Braille\"] = {\n\tWikipedia = true,\n}\n\nlabels[\"British slang\"] = {\n\tplain_categories = { \"British slang\" },\n}\naliases[\"UK slang\"] = \"British slang\"\n\nlabels[\"buzzword\"] = {\n\tdisplay\
      \ = \"[[buzzword]]\",\n\tpos_categories = { \"buzzwords\" },\n}\n\nlabels[\"Cambridge University slang\"] = {\n\tplain_categories = { \"Cambridge University slang\" },\n}\naliases[\"Cambridge University\"] = \"Cambridge University slang\"\n\nlabels[\"\
      cant\"] = {\n\tdisplay = \"[[cant]]\",\n\tpos_categories = { \"cant\" },\n}\naliases[\"argot\"] = \"cant\"\naliases[\"cryptolect\"] = \"cant\"\n\nlabels[\"capitalized\"] = {\n\tdisplay = \"[[capitalisation|capitalized]]\" }\n\nlabels[\"childish\"] = {\n\
      \tdisplay = \"[[childish]]\",\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"childish terms\" },\n}\naliases[\"baby talk\"] = \"childish\"\naliases[\"child language\"] = \"childish\"\n\nlabels[\"\
      chu Nom\"] = {\n\tdisplay = \"[[Vietnamese]] [[chữ Nôm]]\",\n\tplain_categories = { \"Vietnamese Han tu\" },\n}\n\nlabels[\"Classic 1811 Dictionary of the i Tongue\"] = {\n\tdisplay = \"[[Appendix:Glossary#archaic|archaic]], [[Appendix:Glossary#slang|slang]]\"\
      ,\n\tplain_categories = { \"Classic 1811 Dictionary of the Vulgar Tongue\" },\n}\naliases[\"1811\"] = \"Classic 1811 Dictionary of the Vulgar Tongue\"\n\nlabels[\"Cockney rhyming slang\"] = {\n\tdisplay = \"[[Cockney rhyming slang]]\",\n\tplain_categories\
      \ = { \"Cockney rhyming slang\" },\n}\n\nlabels[\"colloquial\"] = {\n\tglossary = true,\n\tpos_categories = { \"colloquialisms\" },\n}\naliases[\"colloquially\"] = \"colloquial\"\n\nlabels[\"colloquial-um\"] = {\n\tglossary = \"colloquial\",\n\tpos_categories\
      \ = { \"colloquialisms containing sequence um\" },\n}\n\nlabels[\"colloquial-un\"] = {\n\tglossary = \"colloquial\",\n\tpos_categories = { \"colloquialisms containing sequence un\" },\n}\n\nlabels[\"costermongers\"] = {\n\tdisplay = \"[[Appendix:Costermongers'\
      \ back slang|costermongers]]\",\n\tplain_categories = { \"Costermongers' back slang\" },\n}\naliases[\"coster\"] = \"costermongers\"\naliases[\"costers\"] = \"costermongers\"\naliases[\"costermonger\"] = \"costermongers\"\naliases[\"costermongers back\
      \ slang\"] = \"costermongers\"\naliases[\"costermongers' back slang\"] = \"costermongers\"\n\nlabels[\"dated\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"dated\
      \ terms\" },\n}\n\nlabels[\"dated form\"] = {\n\tglossary = \"dated\",\n\tpos_categories = { \"dated forms\" },\n}\n\nlabels[\"dated sense\"] = {\n\tglossary = \"dated\",\n\tsense_categories = { \"dated\" },\n} -- combine with previous\n\n\nlabels[\"derogatory\"\
      ] = {\n\tdisplay = \"[[derogatory]]\",\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"derogatory terms\" },\n}\naliases[\"pejorative\"] = \"derogatory\"\naliases[\"disparaging\"] = \"derogatory\"\
      \n\nlabels[\"dialectal\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"dialectal terms\" },\n}\naliases[\"dialect\"] = \"dialectal\"\naliases[\"dialects\"] = \"dialectal\"\
      \n\nlabels[\"dismissal\"] = {\n\tdisplay = \"[[dismissal]]\",\n\tpos_categories = { \"dismissals\" },\n}\n\nlabels[\"ethnic slur\"] = {\n\tdisplay = \"[[ethnic]] [[slur]]\",\n\tpos_categories = { \"ethnic slurs\" },\n}\naliases[\"racial slur\"] = \"ethnic\
      \ slur\"\n\nlabels[\"euphemistic\"] = {\n\tglossary = \"euphemism\",\n\tpos_categories = { \"euphemisms\" },\n}\naliases[\"euphemism\"] = \"euphemistic\"\n\nlabels[\"eye dialect\"] = {\n\tpos_categories = { \"eye dialect\" },\n}\n\nlabels[\"familiar\"\
      ] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"familiar terms\" },\n}\n\nlabels[\"fandom slang\"] = {\n\tpos_categories = { \"fandom slang\" },\n}\naliases[\"fandom\"\
      ] = \"fandom slang\"\n\nlabels[\"figuratively\"] = {\n\tglossary = \"figurative\" }\naliases[\"figurative\"] = \"figuratively\"\naliases[\"metaphorically\"] = \"figuratively\"\naliases[\"metaphorical\"] = \"figuratively\"\naliases[\"metaphor\"] = \"figuratively\"\
      \n\nlabels[\"folk poetic\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"folk poetic terms\", \"poetic terms\" },\n}\n\nlabels[\"formal\"] = {\n\tglossary = true,\n\t-- should be \"terms\
      \ with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"formal terms\" },\n}\n\nlabels[\"gay slang\"] = {\n\tpos_categories = { \"gay slang\" },\n}\n\nlabels['hapax legomenon'] = {\n\tdisplay = \"hapax legomenon\",\n\t\
      pos_categories = { \"hapax legomena\" },\n\tglossary = true,\n}\n\nlabels[\"historical\"] = {\n\tglossary = true,\n\tsense_categories = { \"historical\" },\n}\naliases[\"historic\"] = \"historical\"\naliases[\"history\"] = \"historical\"\n\nlabels[\"non-native\
      \ speakers\"] = {\n\tdisplay = \"[[non-native speaker]]s\", -- so it can be preceded by \"used by\", \"an error by children and\", etc\n\tregional_categories = { \"Non-native speakers'\" },\n}\naliases[\"NNES\"] = \"non-native speakers\"\naliases[\"NNS\"\
      ] = \"non-native speakers\"\n\n-- used exclusively by languages that use the “Jpan” script code\nlabels[\"historical hiragana\"] = {\n\tpos_categories = { \"historical hiragana\" },\n}\n\n-- used exclusively by languages that use the “Jpan” script code\n\
      labels[\"historical katakana\"] = {\n\tpos_categories = { \"historical katakana\" },\n}\n\n-- applies to Japanese and Korean, etc., please do not confuse with \"polite\"\nlabels[\"honorific\"] = {\n\tWikipedia = \"Honorifics (linguistics)\",\n\t-- should\
      \ be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"honorific terms\" },\n}\n\n-- for Ancient Greek\nlabels['Homeric epithet'] = {\n  display = \"[[Homeric Greek|Homeric]] [[w:Homeric epithets|epithet]]\"\
      ,\n  plain_categories = { \"Epic Ancient Greek\" },\n  omit_postComma = true,\n}\n\n-- applies to Japanese and Korean, etc.\nlabels[\"humble\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tdisplay = \"[[humble]]\"\
      ,\n\tpos_categories = { \"humble terms\" },\n}\n\nlabels[\"humorous\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp; NB and cf a similar \"jocular\" label further up on this page\n\tdisplay = \"[[humorous]]\"\
      ,\n\tpos_categories = { \"jocular terms\" },\n}\naliases[\"jocular\"] = \"humorous\"\n\nlabels[\"hyperbolic\"] = {\n\tpos_categories = { \"hyperboles\" },\n}\naliases[\"hyperbole\"] = \"hyperbolic\"\n\nlabels[\"hypercorrect\"] = {\n\tglossary = true,\n\
      \tpos_categories = { \"hypercorrections\" },\n}\n\nlabels[\"hyperforeign\"] = {\n\tglossary = true,\n\tpos_categories = { \"hyperforeign terms\" },\n}\n\nlabels[\"informal\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X\
      \ terms\" to the term-context temp\n\tpos_categories = { \"informal terms\" },\n}\naliases[\"informally\"] = \"informal\"\n\nlabels[\"Internet slang\"] = {\n\tdisplay = \"[[Internet]] [[slang]]\",\n\tpos_categories = { \"internet slang\" },\n}\n\naliases[\"\
      internet slang\"] = \"Internet slang\"\n\nlabels[\"IRC\"] = {\n\tdisplay = \"[[IRC]]\",\n\tpos_categories = { \"internet slang\" },\n}\n\nlabels[\"ironic\"] = {}\n\nlabels[\"leet\"] = {\n\tdisplay = \"[[leetspeak]]\",\n\tpos_categories = { \"leet\" },\n\
      }\naliases[\"leetspeak\"] = \"leet\"\n\nlabels['literally'] = {\n\tglossary = \"literally\" }\naliases['literal'] = 'literally'\n\nlabels[\"literary\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tglossary\
      \ = true,\n\tpos_categories = { \"literary terms\" },\n}\naliases[\"bookish\"] = \"literary\"\n\nlabels[\"loosely\"] = {\n\tglossary = true\n}\n\nlabels[\"Lubunyaca\"] = {\n\tdisplay = \"[[Lubunyaca]]\",\n\tpos_categories = { \"Lubunyaca\" },\n}\n\nlabels[\"\
      medical slang\"] = {\n\tdisplay = \"[[medical]] [[slang]]\",\n\tpos_categories = { \"medical slang\" },\n}\n\n-- for Awetí, Karajá, etc., where men and women use different words\nlabels[\"men's speech\"] = {\n\tglossary = \"men's speech\",\n\tpos_categories\
      \ = { \"men's speech terms\" },\n}\naliases[\"male speech\"] = \"men's speech\"\n\nlabels[\"metonymically\"] = {\n\tglossary = true,\n\tpos_categories = { \"metonyms\" },\n}\naliases[\"metonymic\"] = \"metonymically\"\naliases[\"metonymy\"] = \"metonymically\"\
      \naliases[\"metonym\"] = \"metonymically\"\n\nlabels[\"military slang\"] = {\n\tpos_categories = { \"military slang\" },\n}\n\nlabels[\"minced oath\"] = {\n\tdisplay = \"[[minced oath]]\",\n\tpos_categories = { \"euphemisms\" },\n}\n\nlabels[\"neologism\"\
      ] = {\n\tglossary = true,\n\tpos_categories = { \"neologisms\" },\n}\naliases[\"neologistic\"] = \"neologism\"\n\nlabels[\"New Julfa\"] = {\n\tregional_categories = { \"New Julfa\" },\n}\naliases[\"Jugha\"] = \"New Julfa\"\n\nlabels[\"no longer productive\"\
      ] = {\n\tdisplay = \"no longer [[Appendix:Glossary#productive|productive]]\",\n}\n\nlabels[\"nonce word\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tdisplay = \"[[Appendix:Glossary#nonce word|nonce word]]\"\
      ,\n\tpos_categories = { \"nonce terms\" },\n}\naliases[\"nonce\"] = \"nonce word\"\n\nlabels[\"nonstandard\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"nonstandard\
      \ terms\" },\n}\naliases[\"non-standard\"] = \"nonstandard\"\n\nlabels[\"nonstandard form\"] = {\n\tglossary = \"nonstandard\",\n\tpos_categories = { \"nonstandard forms\" },\n}\n\nlabels[\"obsolete\"] = {\n\tglossary = true,\n\tsense_categories = { \"\
      obsolete\" },\n}\n\nlabels[\"obsolete term\"] = {\n\tglossary = \"obsolete\",\n\t-- combine with previous two, q.v.\n\tpos_categories = { \"obsolete terms\" },\n}\n\nlabels[\"offensive\"] = {\n\tdisplay = \"[[offensive]]\",\n\t-- should be \"terms with\
      \ X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"offensive terms\" },\n}\n\nlabels[\"officialese\"] = {\n\tdisplay = \"[[officialese]]\",\n\tpos_categories = { \"officialese terms\" },\n}\n\nlabels[\"Oxbridge slang\"]\
      \ = {\n\tdisplay = \"[[Oxbridge]] slang\",\n\tplain_categories = { \"Cambridge University slang\", \"Oxford University slang\" },\n}\naliases[\"Oxbridge\"] = \"Oxbridge slang\"\n\nlabels[\"Oxford University slang\"] = {\n\tplain_categories = { \"Oxford\
      \ University slang\" },\n}\naliases[\"Oxford University\"] = \"Oxford University slang\"\n\nlabels[\"poetic\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tdisplay = \"[[poetic]]\",\n\tpos_categories = {\
      \ \"poetic terms\" },\n}\n\nlabels[\"Polari\"] = {\n\tdisplay = \"[[Polari]]\",\n\tpos_categories = { \"Polari slang\" },\n}\n\nlabels[\"polite\"] = {\n\tpos_categories = { \"polite terms\" },\n}\n\nlabels[\"post-classical\"] = {\n\tdisplay = \"post-classical\"\
      ,\n\tregional_categories = { \"Post-classical\" },\n}\naliases[\"Post-classical\"] = \"post-classical\"\naliases[\"post-Classical\"] = \"post-classical\"\naliases[\"Post-Classical\"] = \"post-classical\"\naliases[\"Postclassical\"] = \"post-classical\"\
      \naliases[\"postclassical\"] = \"post-classical\"\n\nlabels[\"proscribed\"] = {\n\tglossary = true,\n\tpos_categories = { \"disputed terms\" },\n}\n\nlabels[\"radio slang\"] = {\n\tpos_categories = { \"radio slang\" },\n}\n\nlabels[\"rare\"] = {\n\tsense_categories\
      \ = { \"rare\" },\n}\naliases[\"rare sense\"] = \"rare\"\n\nlabels[\"rare term\"] = {\n\tdisplay = \"rare\",\n\t-- see comments about \"obsolete\"\n\tpos_categories = { \"rare terms\" },\n}\n\nlabels[\"religious slur\"] = {\n\tdisplay = \"[[religious]]\
      \ [[slur]]\",\n\tpos_categories = { \"religious slurs\" },\n}\naliases[\"sectarian slur\"] = \"religious slur\"\n\nlabels[\"retronym\"] = {\n\tdisplay = \"[[retronym]]\",\n\tpos_categories = { \"retronyms\" },\n}\n\nlabels[\"sarcastic\"] = {\n\tdisplay\
      \ = \"[[sarcastic]]\",\n\tpos_categories = { \"sarcastic terms\" },\n}\n\nlabels[\"school slang\"] = {\n\tpos_categories = { \"school slang\" },\n}\naliases[\"public school slang\"] = \"school slang\"\n\nlabels[\"slang\"] = {\n\tglossary = true,\n\tpos_categories\
      \ = { \"slang\" },\n}\n\nlabels[\"college slang\"] = {\n\tpos_categories = { \"student slang\" },\n}\naliases[\"university slang\"] = \"college slang\"\naliases[\"student slang\"] = \"college slang\"\n\nlabels[\"swear word\"] = {\n\tpos_categories = {\
      \ \"swear words\" },\n}\naliases[\"profanity\"] = \"swear word\"\naliases[\"expletive\"] = \"swear word\"\n\nlabels[\"text messaging\"] = {\n\tdisplay = \"[[text messaging]]\",\n\tpos_categories = { \"text messaging slang\" },\n}\naliases[\"texting\"]\
      \ = \"text messaging\"\n\nlabels[\"thieves' cant\"] = {\n\tWikipedia = true,\n\tplain_categories = { \"Thieves' cant\" },\n}\naliases[\"thieves cant\"] = \"thieves' cant\"\naliases[\"thieves'\"] = \"thieves' cant\"\naliases[\"thieves\"] = \"thieves' cant\"\
      \n\nlabels[\"trademark\"] = {\n\tdisplay = \"[[trademark]]\",\n\tpos_categories = { \"trademarks\" },\n}\n\nlabels[\"transferred sense\"] = {\n\tglossary = true,\n\tpos_categories = { \"terms with transferred senses\" },\n}\n\nlabels[\"transferred senses\"\
      ] = {\n\tdisplay = \"[[transferred sense#English|transferred senses]]\",\n\tpos_categories = { \"terms with transferred senses\" },\n}\n\nlabels[\"uds.\"] = {\n\tdisplay = \"[[Appendix:Spanish pronouns#Ustedes and vosotros|used formally in Spain]]\" }\n\
      \nlabels[\"uncommon\"] = {\n\tpos_categories = { \"rare forms\" },\n}\n\nlabels[\"verlan\"] = {\n\tdisplay = \"[[Appendix:Glossary#verlan|verlan]]\",\n\tplain_categories = { \"Verlan\" },\n}\n\nlabels[\"very rare\"] = {\n\tpos_categories = { \"rare forms\"\
      \ },\n}\n\nlabels[\"vulgar\"] = {\n\tglossary = true,\n\tpos_categories = { \"vulgarities\" },\n}\naliases[\"coarse\"] = \"vulgar\"\naliases[\"obscene\"] = \"vulgar\"\naliases[\"profane\"] = \"vulgar\"\n\nlabels[\"vesre\"] = {\n\tplain_categories = { \"\
      Vesre\" },\n}\n\n-- for Awetí, Karajá, etc., where men &amp; women use different words\nlabels[\"women's speech\"] = {\n\tglossary = \"women's speech\",\n\tpos_categories = { \"women's speech terms\" },\n}\naliases[\"female speech\"] = \"women's speech\"\
      \n\nlabels[\"example1\"] = {\n\tWikipedia = \"Wu Chinese\"\n}\n\nlabels[\"example2\"] = {\n\tglossary = \"palatalization\"\n}\n\n\n-- Regional labels\nlocal m_regional = require(\"Module:labels/data/regional\")\n\nfor key, val in pairs(m_regional.labels)\
      \ do\n\tlabels[key] = val\nend\n\nfor key, val in pairs(m_regional.aliases) do\n\taliases[key] = val\nend\n\nfor key, val in pairs(m_regional.deprecated) do\n\tdeprecated[key] = val\nend\n\n\n-- Topical labels\n\nlocal m_topical = require(\"Module:labels/data/topical\"\
      )\n\nfor key, val in pairs(m_topical.labels) do\n\tlabels[key] = val\nend\n\nfor key, val in pairs(m_topical.aliases) do\n\taliases[key] = val\nend\n\nfor key, val in pairs(m_topical.deprecated) do\n\tdeprecated[key] = val\nend\n\n--[[\tAdd subvariety\
      \ labels and the corresponding aliases\n\t\tand deprecated labels if they have a language code\n\t\tin the \"languages\" field.\t\t\t\t\t\t\t\t]]\nlocal m_subvarieties = require(\"Module:labels/data/subvarieties\")\n\nfor key, val in pairs(m_subvarieties.labels)\
      \ do\n\tif labels[key] then\n\t\treplacements.labels[key] = labels[key]\n\tend\n\t\n\tif val.languages then\n\t\tlabels[key] = val\n\tend\nend\n\nfor key, val in pairs(m_subvarieties.aliases) do\n\tif aliases[key] then\n\t\treplacements.aliases[key] =\
      \ aliases[key]\n\tend\n\t\n\tif labels[val] then\n\t\taliases[key] = val\n\tend\nend\n\nfor key, val in pairs(m_subvarieties.deprecated) do\n\tif deprecated[key] then\n\t\treplacements.deprecated[key] = deprecated[key]\n\tend\n\t\n\tif labels[key] then\n\
      \t\tdeprecated[key] = val\n\tend\nend\n\nreturn {\n\t[\"labels\"] = labels,\n\t[\"aliases\"] = aliases,\n\t[\"deprecated\"] = deprecated,\n\t[\"replacements\"] = replacements,\n}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:22.695Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Fregional&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58190 t=1555362502388033
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:22 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 931500521, 566012684, 697937710
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4952140\" pageid=\"4952140\" ns=\"828\" title=\"Module:labels/data/regional\"><revisions><rev user=\"Fay Freak\" timestamp=\"2019-04-08T01:27:43Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Add Chad, Mali, Mauritania.\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\nlocal deprecated = {}\n\nlocal m_data_functions = require(\"Module:labels/data/functions\")\n\
      \n-- Generic\n\n--not sure where to put this\nlabels[\"Classical\"] = {\n\tspecial_display = \"[[Classical &lt;canonical_name&gt;]]\",\n\tregional_categories = {\"Classical\"},\n}\naliases[\"classical\"] = \"Classical\"\n\nlabels[\"regional\"] = {\n\t\
      regional_categories = {\"Regional\"},\n}\n\n\n-- Africa\n\nlabels[\"Africa\"] = {\n\tregional_categories = {\"African\"},\n}\naliases[\"African\"] = \"Africa\"\n\nlabels[\"Algeria\"] = {\n\tdisplay = \"Algeria\",\n\tregional_categories = {\"Algerian\"\
      },\n}\naliases[\"Algerian\"] = \"Algeria\"\n\nlabels[\"Angola\"] = {\n\tregional_categories = {\"Angolan\"},\n}\naliases[\"Angolan\"] = \"Angola\"\n\nlabels[\"Botswana\"] = {\n\tregional_categories = {\"Botswanan\"},\n}\n\nlabels[\"Cape Verde\"] = {\n\t\
      regional_categories = {\"Cape Verdean\"},\n}\naliases[\"Cape Verdean\"] = \"Cape Verde\"\n\nlabels[\"Chad\"] = {\n\tdisplay = \"Chad\",\n\tregional_categories = {\"Chadian\"},\n}\naliases[\"Chadian\"] = \"Chad\"\n\nlabels[\"Congo\"] = {\n\tdisplay = \"\
      Congo\",\n\tregional_categories = {\"Congolese\"},\n} -- these could be split if need be\naliases[\"Democratic Republic of the Congo\"] = \"Congo\"\naliases[\"Democratic Republic of Congo\"] = \"Congo\"\naliases[\"DR Congo\"] = \"Congo\"\naliases[\"Congo-Kinshasa\"\
      ] = \"Congo\"\naliases[\"Republic of the Congo\"] = \"Congo\"\naliases[\"Republic of Congo\"] = \"Congo\"\naliases[\"Congo-Brazzaville\"] = \"Congo\"\naliases[\"Congolese\"] = \"Congolese\"\n\nlabels[\"Durban\"] = {\n\tdisplay = \"[[Durban]]\",\n\tregional_categories\
      \ = {\"Durban\"},\n}\n\nlabels[\"East Africa\"] = {\n\tregional_categories = {\"East African\"},\n}\naliases[\"East African\"] = \"East Africa\"\n\nlabels[\"Egypt\"] = {\n\tregional_categories = {\"Egyptian\"},\n}\naliases[\"Egyptian\"] = \"Egypt\"\n\n\
      labels[\"Equatorial Guinea\"] = {\n    display = \"[[w:Equatorial Guinea|Equatorial Guinea]]\",\n\tregional_categories = {\"Equatorial Guinean\"},\n}\naliases[\"Equatorial Guinean\"] = \"Equatorial Guinea\"\naliases[\"Equatoguinean\"] = \"Equatorial Guinea\"\
      \n\nlabels[\"Ghana\"] = {\n\tregional_categories = {\"Ghanaian\"},\n}\n\nlabels[\"Haketia\"] = {\n    display = \"[[w:Haketia|Haketia]]\",\n    plain_categories = {\"Haketia\"},\n}\naliases[\"Hakitia\"] = \"Haketia\"\naliases[\"Haquitía\"] = \"Haketia\"\
      \n\nlabels[\"Kenya\"] = {\n\tregional_categories = {\"Kenyan\"},\n}\naliases[\"Kenyan\"] = \"Kenya\"\n\nlabels[\"Liberia\"] = {\n\tregional_categories = {\"Liberian\"},\n}\naliases[\"Liberian\"] = \"Liberia\"\n\nlabels[\"Mali\"] = {\n\tdisplay = \"Mali\"\
      ,\n\tregional_categories = {\"Malian\"},\n}\naliases[\"Malian\"] = \"Mali\"\n\nlabels[\"Mauritania\"] = {\n\tdisplay = \"Mauritania\",\n\tregional_categories = {\"Mauritanian\"},\n}\naliases[\"Mauritanian\"] = \"Mauritania\"\n\nlabels[\"Morocco\"] = {\n\
      \tregional_categories = {\"Moroccan\"},\n}\naliases[\"Moroccan\"] = \"Morocco\"\n\nlabels[\"Mozambique\"] = {\n\tregional_categories = {\"Mozambican\"},\n}\naliases[\"Mozambican\"] = \"Mozambique\"\n\nlabels[\"Namibia\"] = {\n\tregional_categories = {\"\
      Namibian\"},\n}\naliases[\"Namibian\"] = \"Namibia\"\n\nlabels[\"Natal\"] = {\n\tdisplay = \"[[Natal]]\",\n\tregional_categories = {\"Natal\"},\n}\n\nlabels[\"Niger\"] = {\n\tregional_categories = {\"Nigerien\"},\n}\naliases[\"Nigerien\"] = \"Niger\"\n\
      \nlabels[\"Nigeria\"] = {\n\tregional_categories = {\"Nigerian\"},\n}\naliases[\"Nigerian\"] = \"Nigeria\"\n\nlabels[\"Rhodesia\"] = {\n\tdisplay = \"[[w:Rhodesia|Rhodesia]]\",\n\tregional_categories = {\"Rhodesian\"},\n}\naliases[\"Rhodesian\"] = \"Rhodesia\"\
      \n\nlabels[\"Rwanda\"] = {\n\tdisplay = \"Rwanda\",\n\tregional_categories = {\"Rwandan\"},\n}\n\nlabels[\"Réunion\"] = {\n\tregional_categories = {\"Réunion\"},\n}\n\nlabels[\"South Africa\"] = {\n\tdisplay = \"[[w:South Africa|South Africa]]\",\n\tregional_categories\
      \ = {\"South African\"},\n}\naliases[\"South African\"] = \"South Africa\"\n\nlabels[\"Sudan\"] = {\n\tdisplay = \"[[w:Sudan|Sudan]]\",\n\tregional_categories = {\"Sudanese\"},\n}\naliases[\"Sudanese\"] = \"Sudan\"\n\nlabels[\"Tanzania\"] = {\n\tregional_categories\
      \ = {\"Tanzanian\"},\n}\n\nlabels[\"Tunisian\"] = {\n\tdisplay = \"Tunisia\",\n\tregional_categories = {\"Tunisian\"} }\naliases[\"Tunisia\"] = \"Tunisian\"\n\nlabels[\"Uganda\"] = {\n\tregional_categories = {\"Ugandan\"}\n}\n\nlabels[\"West Africa\"]\
      \ = {\n\tregional_categories = {\"West African\"},\n}\naliases[\"West African\"] = \"West Africa\"\n\nlabels[\"Zimbabwe\"] = {\n\tdisplay = \"[[Zimbabwe]]\",\n\tregional_categories = {\"Zimbabwe\"},\n}\n\nlabels[\"Zululand\"] = {\n\tdisplay = \"[[Zululand]]\"\
      ,\n\tregional_categories = {\"Zululand\"},\n}\n\n\n-- North America\n\nlabels[\"Acadia\"] = {\n\tdisplay = \"Acadian\",\n\tregional_categories = {\"Acadian\"},\n}\n\nlabels[\"Alberta\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Appalachia\"\
      ] = {\n\tdisplay = \"[[Appalachia]]\",\n\tregional_categories = {\"Appalachian\"},\n}\naliases[\"Appalachian\"] = \"Appalachia\"\n\nlabels[\"Atlantic Canada\"] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"British Columbia\"] = {\n\
      \tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Cajun\"] = {\n\tdisplay = \"[[w:Cajun|Louisiana]]\",\n\tregional_categories = {\"Louisiana\"},\n}\n\nlabels[\"Canada\"] = {\n\tdisplay = \"[[w:Canada|Canada]]\",\n\tregional_categories = {\"Canadian\"\
      },\n}\naliases[\"Canadian\"] = \"Canada\"\n\nlabels[\"Canadian Prairies\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Georgia\"] = {\n\tdisplay = \"[[w:Georgia (U.S. state)|Georgia]]\",\n\tregional_categories = {\"Georgian\"},\n}\n\nlabels[\"\
      Indiana\"] = {\n\tdisplay = \"[[w:Indiana|Indiana]]\",\n\tregional_categories = {\"Indiana\"},\n}\naliases[\"Indianan\"] = \"Indiana\"\naliases[\"Indianian\"] = \"Indiana\"\n\nlabels[\"Labrador\"] = {\n\tdisplay = \"[[Labrador]]\",\n\tregional_categories\
      \ = {\"Labrador\"},\n}\n\nlabels[\"Louisiana\"] = {\n\tregional_categories = {\"Louisiana\"},\n}\naliases[\"New Orleans\"] = \"Louisiana\"\n\nlabels[\"Manitoba\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Maryland\"] = {\n\tdisplay =\
      \ \"[[w:Maryland|Maryland]]\",\n\tregional_categories = {\"Maryland\"},\n}\n\nlabels[\"Mecayapan\"] = {\n\tregional_categories = {\"Mecayapan\"},\n}\n\nlabels[\"Mexico\"] = {\n\tregional_categories = {\"Mexican\"},\n}\naliases[\"Mexican\"] = \"Mexico\"\
      \n\nlabels[\"Midland US\"] = {\n\tdisplay = \"[[w:Midland American English|Midland US]]\", -- for lack of a better link target\n\tregional_categories = {\"Midland US\"},\n}\naliases[\"North Midland US\"] = \"Midland US\" -- split North and South off?\n\
      aliases[\"Northern Midland US\"] = \"Midland US\"\naliases[\"South Midland US\"] = \"Midland US\"\naliases[\"Southern Midland US\"] = \"Midland US\"\n\nlabels[\"Midwest US\"] = {\n\tdisplay = \"[[w:Midwestern United States|Midwestern US]]\",\n\tregional_categories\
      \ = {\"Midwest US\"},\n}\naliases[\"Midwestern US\"] = \"Midwest US\"\n\nlabels[\"Missouri\"] = {\n\tdisplay = \"[[w:Missouri|Missouri]]\",\n\tregional_categories = {\"Missourian\"},\n}\naliases[\"St Louis, Missouri\"] = \"Missouri\"\naliases[\"St. Louis,\
      \ Missouri\"] = \"Missouri\"\n\nlabels[\"New Brunswick\"] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"New England\"] = {\n\tdisplay = \"[[w:New England|New England]]\",\n\tregional_categories = {\"New England\"},\n}\n\nlabels[\"\
      New Jersey\"] = {\n\tdisplay = \"[[w:New Jersey|New Jersey]]\",\n\tregional_categories = {\"New Jersey\"},\n}\n\nlabels[\"New York\"] = {\n\tdisplay = \"[[w:New York|New York]]\",\n\tregional_categories = {\"New York\"},\n}\naliases[\"NY\"] = \"New York\"\
      \n\nlabels[\"New York City\"] = {\n\tdisplay = \"[[w:New York City|New York City]]\",\n\tregional_categories = {\"New York City\"},\n}\naliases[\"NYC\"] = \"New York City\"\naliases[\"New York city\"] = \"New York City\"\n\nlabels[\"Newfoundland\"] = {\n\
      \tdisplay = \"[[Newfoundland English|Newfoundland]]\",\n\tregional_categories = {\"Newfoundland\"},\n}\n\nlabels[\"North America\"] = {\n\tdisplay = \"[[Canada]], [[American English|US]]\",\n\tregional_categories = {\"Canadian\", \"American\"},\n}\naliases[\"\
      North American\"] = \"North America\"\n\nlabels[\"North Carolina\"] = {\n\tdisplay = \"[[w:North Carolina|North Carolina]]\",\n\tregional_categories = {\"North Carolinian\"},\n}\n\nlabels[\"North India\"] = {\n\tdisplay = \"[[w:North India|North India]]\"\
      ,\n\tregional_categories = {\"North Indian\"},\n}\n\nlabels[\"Northwest Territories\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Northwestern US\"] = {\n\tdisplay = \"[[w:Northwestern United States|Northwestern US]]\",\n\tregional_categories\
      \ = {\"Northwestern US\"},\n}\naliases[\"northwestern US\"] = \"Northwestern US\"\n\nlabels[\"Nova Scotia\"] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"Nunavut\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Ohio\"\
      ] = {\n\tdisplay = \"[[Ohio]]\",\n\tregional_categories = {\"Ohioan\"},\n}\n\nlabels[\"Ontario\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Pennsylvania\"] = {\n\tdisplay = \"[[w:Pennsylvania|Pennsylvania]]\",\n\tregional_categories =\
      \ {\"Pennsylvanian\"},\n}\n\nlabels[\"Pittsburgh\"] = {\n\tdisplay = \"[[w:Pittsburgh|Pittsburgh]]\",\n\tregional_categories = {\"Pennsylvanian\"},\n} -- can be split off if enough entries in it arise; group with PA for now\n\nlabels[\"Prince Edward Island\"\
      ] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"Quebec\"] = {\n\tregional_categories = {\"Quebec\"},\n}\naliases[\"Québec\"] = \"Quebec\"\n\nlabels[\"Saskatchewan\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Southern\
      \ US\"] = {\n\tdisplay = \"[[w:Southern United States|Southern US]]\",\n\tregional_categories = {\"Southern US\"},\n}\naliases[\"southern US\"] = \"Southern US\"\naliases[\"US South\"] = \"Southern US\"\naliases[\"US Southern\"] = \"Southern US\"\n\nlabels[\"\
      Southwestern US\"] = {\n\tdisplay = \"[[w:Southwestern United States|Southwestern US]]\",\n\tregional_categories = {\"Southwestern US\"},\n}\naliases[\"Southwest US\"] = \"Southwestern US\"\naliases[\"southwest US\"] = \"Southwestern US\"\naliases[\"southwestern\
      \ US\"] = \"Southwestern US\"\n\nlabels[\"Texas\"] = {\n\tdisplay = \"[[w:Texas|Texas]]\",\n\tregional_categories = {\"Texan\"},\n}\naliases[\"TX\"] = \"Texas\"\n\nlabels[\"Upper Midwest US\"] = {\n\tdisplay = \"[[w:Upper Midwest|Upper Midwestern US]]\"\
      ,\n\tregional_categories = {\"Upper Midwest US\"},\n}\naliases[\"Upper Midwestern US\"] = \"Upper Midwest US\"\n\nlabels[\"US\"] = {\n\tdisplay = \"[[w:United States|US]]\",\n\tregional_categories = {\"American\"},\n}\naliases[\"U.S.\"] = \"US\"\naliases[\"\
      United States\"] = \"US\"\naliases[\"United States of America\"] = \"US\"\naliases[\"USA\"] = \"US\"\naliases[\"America\"] = \"US\" -- or should these be aliases of 'North America'?\naliases[\"American\"] = \"US\"\n\nlabels[\"Virginia\"] = {\n\tdisplay\
      \ = \"[[w:Virginia|Virginia]]\",\n\tregional_categories = {\"Virginian\"},\n}\n\nlabels[\"Yukon\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\n-- Yokuts tribal varieties\n\nlabels[\"Chawchila\"] = {\n\tregional_categories = {\"Chawchila\"},\n}\n\
      \nlabels[\"Choinimni\"] = {\n\tregional_categories = {\"Choinimni\"},\n}\naliases[\"Choynimni\"] = \"Choinimni\"\n\nlabels[\"Choinok\"] = {\n\tregional_categories = {\"Choinok\"},\n}\naliases[\"Choynok\"] = \"Choinok\"\n\n\nlabels[\"Chukaimina\"] = {\n\
      \tregional_categories = {\"Chukaimina\"},\n}\naliases[\"Chukaymina\"] = \"Chukaimina\"\n\nlabels[\"Chukchansi\"] = {\n\tregional_categories = {\"Chukchansi\"},\n}\n\nlabels[\"Chulamni\"] = {\n\tregional_categories = {\"Chulamni\"},\n}\naliases[\"Yachikumne\"\
      ] = \"Chulamni\"\naliases[\"Yachikumni\"] = \"Chulamni\"\n\nlabels[\"Dumna\"] = {\n\tregional_categories = {\"Dumna\"},\n}\n\nlabels[\"Hometwoli\"] = {\n\tregional_categories = {\"Hometwoli\"},\n}\n\nlabels[\"Kechayi\"] = {\n\tregional_categories = {\"\
      Kechayi\"},\n}\n\nlabels[\"Kocheyali\"] = {\n\tregional_categories = {\"Kocheyali\"},\n}\naliases[\"Ayitcha\"] = \"Kocheyali\"\naliases[\"Ayticha\"] = \"Kocheyali\"\n\nlabels[\"Koyeti\"] = {\n\tregional_categories = {\"Koyeti\"},\n}\n\nlabels[\"Lakisamni\"\
      ] = {\n\tregional_categories = {\"Lakisamni\"},\n}\n\nlabels[\"Michahay\"] = {\n\tregional_categories = {\"Michahay\"},\n}\n\nlabels[\"Noptinte\"] = {\n\tregional_categories = {\"Noptinte\"},\n}\naliases[\"Nopṭinṭe\"] = \"Noptinte\"\naliases[\"Nopthrinthre\"\
      ] = \"Noptinte\"\naliases[\"Nopchinchi\"] = \"Noptinte\"\n\nlabels[\"Tachi\"] = {\n\tregional_categories = {\"Tachi\"},\n}\n\nlabels[\"Tawalimni\"] = {\n\tregional_categories = {\"Tawalimni\"},\n}\n\nlabels[\"Tulamni\"] = {\n\tregional_categories = {\"\
      Tulamni\"},\n}\naliases[\"Tulamne\"] = \"Tulamni\"\n\nlabels[\"Wechihit\"] = {\n\tregional_categories = {\"Wechihit\"},\n}\n\nlabels[\"Wo'lasi\"] = {\n\tregional_categories = {\"Wo'lasi\"},\n}\n\nlabels[\"Wukchumni\"] = {\n\tregional_categories = {\"Wukchumni\"\
      },\n}\naliases[\"Wukchamni\"] = \"Wukchumni\"\naliases[\"Wikchamni\"] = \"Wukchumni\"\n\nlabels[\"Yawdanchi\"] = {\n\tregional_categories = {\"Yawdanchi\"},\n}\n\nlabels[\"Yawelmani\"] = {\n\tregional_categories = {\"Yawelmani\"},\n}\n\n\n-- Central America\
      \ and Caribbean\n\nlabels[\"Barbados\"] = {\n\tregional_categories = {\"Barbadian\"},\n}\naliases[\"Barbadian\"] = \"Barbados\"\n\nlabels[\"Belize\"] = {\n\tdisplay = \"[[w:Belize|Belize]]\",\n\tregional_categories = {\"Belizean\"},\n}\naliases[\"Belizean\"\
      ] = \"Belize\"\n\nlabels[\"Caribbean\"] = {\n\tdisplay = \"[[Caribbean]]\",\n\tregional_categories = {\"Caribbean\"},\n}\n\nlabels[\"Central America\"] = {\n\tregional_categories = {\"Central American\"},\n}\n\nlabels[\"Cincinnati\"] = {\n\tdisplay = \"\
      [[Cincinnati]]\",\n\tregional_categories = {\"Cincinnati\"},\n}\n\nlabels[\"Cirebon\"] = {\n\tplain_categories = {\"Cirebon Javanese\"},\n}\n\nlabels[\"Costa Rica\"] = {\n\tregional_categories = {\"Costa Rican\"},\n}\n\nlabels[\"Cuba\"] = {\n\tregional_categories\
      \ = {\"Cuban\"},\n}\n\nlabels[\"Dominican Republic\"] = {\n\tregional_categories = {\"Dominican\"},\n}\n\nlabels[\"El Salvador\"] = {\n\tregional_categories = {\"Salvadorian\"},\n}\n\nlabels[\"Guatemala\"] = {\n\tregional_categories = {\"Guatemalan\"},\n\
      }\n\nlabels[\"Honduras\"] = {\n\tregional_categories = {\"Honduran\"},\n}\n\nlabels[\"Jamaica\"] = {\n\tdisplay = \"[[w:Jamaica|Jamaica]]\",\n\tregional_categories = {\"Jamaican\"},\n}\naliases[\"Jamaican\"] = \"Jamaica\"\n\nlabels[\"Nicaragua\"] = {\n\
      \tregional_categories = {\"Nicaraguan\"},\n}\n\nlabels[\"Panama\"] = {\n\tregional_categories = {\"Panamanian\"},\n}\n\n\n-- South America\n\nlabels[\"Argentina\"] = {\n\tregional_categories = {\"Argentinian\"},\n}\n\nlabels[\"Bolivia\"] = {\n\tregional_categories\
      \ = {\"Bolivian\"},\n}\n\nlabels[\"Brazil\"] = {\n\tdisplay = \"[[w:Brazil|Brazil]]\",\n\tregional_categories = {\"Brazilian\"},\n}\n\nlabels[\"Chile\"] = {\n\tregional_categories = {\"Chilean\"},\n}\n\nlabels[\"Colombia\"] = {\n\tregional_categories =\
      \ {\"Colombian\"},\n}\n\nlabels[\"Ecuador\"] = {\n\tregional_categories = {\"Ecuadorian\"},\n}\n\nlabels[\"Guyana\"] = {\n\tregional_categories = {\"Guyanese\"},\n}\n\nlabels[\"Northeast Brazil\"] = {\n\tregional_categories = {\"Northeastern Brazilian\"\
      } \n}\naliases[\"Nordestino\"] = \"Northeast Brazil\"\naliases[\"Nordeste\"] = \"Northeast Brazil\"\naliases[\"Northeastern Brazilian\"] = \"South Brazil\"\naliases[\"Northeast Brazilian\"] = \"South Brazil\"\n\nlabels[\"Paraguay\"] = {\n\tregional_categories\
      \ = {\"Paraguayan\"},\n}\n\nlabels[\"Paraná\"] = {\n\tdisplay = \"[[w:Paraná (state)|Paraná]]\",\n\tregional_categories = {\"Paranaense\"},\n}\naliases[\"Paranaense\"] = \"Paraná\"\n\nlabels[\"Peru\"] = {\n\tregional_categories = {\"Peruvian\"},\n}\n\n\
      labels[\"Rio de Janeiro\"] = {\n\tdisplay = \"[[w:Rio de Janeiro|Rio de Janeiro]]\",\n\tregional_categories = {\"Carioca\"},\n}\naliases[\"Fluminense\"] = \"Rio de Janeiro\"\naliases[\"Carioca\"] = \"Rio de Janeiro\"\n\nlabels[\"Rio Grande do Sul\"] =\
      \ {\n\tregional_categories = {\"Gaúcho\"} \n}\naliases[\"Gaúcho\"] = \"Rio Grande do Sul\"\naliases[\"Gaucho\"] = \"Rio Grande do Sul\"\n\nlabels[\"São Paulo\"] = {\n\tdisplay = \"[[w:São Paulo (state)|São Paulo]]\",\n\tregional_categories = {\"Paulista\"\
      },\n}\naliases[\"Sao Paulo\"] = \"São Paulo\"\naliases[\"Paulista\"] = \"São Paulo\"\n\nlabels[\"South Brazil\"] = {\n\tregional_categories = {\"Southern Brazilian\"} \n}\naliases[\"Southern Brazilian\"] = \"South Brazil\"\naliases[\"South Brazilian\"\
      ] = \"South Brazil\"\n\nlabels[\"Trinidad and Tobago\"] = {\n\tdisplay = \"[[Trinidad and Tobago]]\",\n\tregional_categories = {\"Trinidad and Tobago\"},\n}\n\nlabels[\"Uruguay\"] = {\n\tregional_categories = {\"Uruguayan\"},\n}\n\nlabels[\"Suriname\"\
      ] = {\n\tdisplay = \"[[w:Suriname|Suriname]]\",\n\tregional_categories = {\"Surinamese\"},\n}\n\nlabels[\"Venezuela\"] = {\n\tregional_categories = {\"Venezuelan\"},\n}\naliases[\"Venezuelan\"] = \"Venezuela\"\n\n\n-- Asia\n\nlabels[\"Adana\"] = {\n\t\
      display = \"[[w:Adana|Adana]]\",\n\tregional_categories = {\"Adana\"},\n}\naliases[\"Atana\"] = \"Adana\"\n\nlabels[\"Afyonkarahisar\"] = {\n\tdisplay = \"[[w:Afyonkarahisar|Afyonkarahisar]]\",\n\tregional_categories = {\"Afyonkarahisar\"},\n}\naliases[\"\
      Afyon\"] = \"Afyonkarahisar\"\n\nlabels[\"Ağın\"] = {\n\tdisplay = \"[[w:Ağın|Ağın]]\",\t\n\tregional_categories = {\"Ağın\"},\n}\naliases[\"Aghin\"] = \"Ağın\"\naliases[\"Vaghaver\"] = \"Ağın\"\n\nlabels[\"Ağrı\"] = {\n\tdisplay = \"[[w:Ağrı|Ağrı]]\"\
      ,\n\tregional_categories = {\"Ağrı\"},\n}\naliases[\"Aghri\"] = \"Ağrı\"\naliases[\"Karaköse\"] = \"Ağrı\"\n\nlabels[\"Ahlat\"] = {\n\tdisplay = \"[[w:Ahlat|Ahlat]]\",\n\tregional_categories = {\"Ahlat\"},\n}\naliases[\"Khlat\"] = \"Ahlat\"\naliases[\"\
      Xlat\"] = \"Ahlat\"\n\nlabels[\"Akhalkalaki\"] = {\n\tdisplay = \"[[w:Akhalkalaki|Akhalkalaki]]\",\n\tregional_categories = {\"Akhalkalaki\"},\n}\naliases[\"Akhalkalak\"] = \"Akhalkalaki\"\naliases[\"Akhlkalak\"] = \"Akhalkalaki\"\n\nlabels[\"Akn\"] =\
      \ {\n\tdisplay = \"[[w:Kemaliye|Akn]]\",\n\tregional_categories = {\"Akn\"},\n}\naliases[\"Egin\"] = \"Akn\"\naliases[\"Eğin\"] = \"Akn\"\n\nlabels[\"Alashkert\"] = {\n\tdisplay = \"[[w:Eleşkirt|Alashkert]]\",\n\tregional_categories = {\"Alashkert\"},\n\
      }\naliases[\"Eleşkirt\"] = \"Alashkert\"\naliases[\"Alaškert\"] = \"Alashkert\"\n\nlabels[\"Amur\"] = {\n\tdisplay = \"[[w:Amur|Amur]]\",\n\tregional_categories = {\"Amur\"},\n}\n\nlabels[\"Angkorian\"] = {\n\tdisplay = \"[[w:Khmer language#Historical\
      \ periods|Angkorian]]\",\n\tregional_categories = {\"Angkorian\"},\n}\n\nlabels[\"Ankara\"] = {\n\tdisplay = \"[[w:Ankara|Ankara]]\",\n\tregional_categories = {\"Ankara\"},\n}\n\nlabels[\"Antalya\"] = {\n\tdisplay = \"[[w:Antalya|Antalya]]\",\n\tregional_categories\
      \ = {\"Antalya\"},\n}\n\nlabels[\"Arapgir\"] = {\n\tdisplay = \"[[w:Arapgir|Arapgir]]\",\n\tregional_categories = {\"Arapgir\"},\n}\naliases[\"Arapkir\"] = \"Arapgir\"\naliases[\"Arabkir\"] = \"Arapgir\"\n\nlabels[\"Ardanuç\"] = {\n\tdisplay = \"[[w:Ardanuç\
      |Ardanuç]]\",\n\tregional_categories = {\"Ardanuç\"},\n}\naliases[\"Artanuj\"] = \"Ardanuç\"\naliases[\"Ardanuji\"] = \"Ardanuç\"\n\nlabels[\"Artvin\"] = {\n\tdisplay = \"[[w:Artvin|Artvin]]\",\n\tregional_categories = {\"Artvin\"},\n}\naliases[\"Ardvin\"\
      ] = \"Artvin\"\naliases[\"Ardvini\"] = \"Artvin\"\n\nlabels[\"Banten\"] = {\n\tdisplay = \"[[w:Bantenese|Banten]]\",\n\tregional_categories = {\"Banten\"},\n}\naliases[\"Bantenese\"] = \"Banten\"\n\nlabels[\"Beijing\"] = {\n\tdisplay = \"[[w:Beijing dialect|Beijing]]\"\
      ,\n\tregional_categories = {\"Beijing\"},\n}\naliases[\"Peking\"] = \"Beijing\"\naliases[\"Pekingese\"] = \"Beijing\"\naliases[\"Beijing Mandarin\"] = \"Beijing\"\n\nlabels[\"Balıkesir\"] = {\n\tdisplay = \"[[w:Balıkesir|Balıkesir]]\",\n\tregional_categories\
      \ = {\"Balıkesir\"},\n}\n\nlabels[\"Bình Định\"] = {\n\tdisplay = \"[[w:Bình Định|Bình Định dialect]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Binh Dinh\"] = \"Bình Định\"\naliases[\"Bình Định dialect\"] = \"Bình Định\"\naliases[\"Binh\
      \ Dinh dialect\"] = \"Bình Định\"\n\nlabels[\"Bitlis\"] = {\n\tdisplay = \"[[w:Bitlis|Bitlis]]\",\n\tregional_categories = {\"Bitlis\"},\n}\naliases[\"Baghesh\"] = \"Bitlis\"\n\nlabels[\"hbo\"] = {\n    display = \"[[w:Biblical Hebrew|Biblical Hebrew]]\"\
      ,\n    plain_categories = {\"Biblical Hebrew\"},\n}\naliases[\"Biblical Hebrew\"] = \"hbo\"\naliases[\"Classical Hebrew\"] = \"hbo\"\naliases[\"Ancient Hebrew\"] = \"hbo\"\naliases[\"Old Hebrew\"] = \"hbo\"\n\nlabels[\"Bogor\"] = {\n\tregional_categories\
      \ = {\"Bogor\"},\n}\n\nlabels[\"Brebes\"] = {\n\tregional_categories = {\"Brebes\"},\n}\naliases[\"Brebian\"] = \"Brebes\"\n\nlabels[\"Brunei\"] = {\n\tdisplay = \"[[w:Brunei|Brunei]]\",\n\tregional_categories = {\"Bruneian\"},\n}\n\nlabels[\"Burdur\"\
      ] = {\n\tdisplay = \"[[w:Burdur|Burdur]]\",\n\tregional_categories = {\"Burdur\"},\n}\n\nlabels[\"Bursa\"] = {\n\tdisplay = \"[[w:Bursa|Bursa]]\",\n\tregional_categories = {\"Bursa\"},\n}\n\nlabels[\"Çanakkale\"] = {\n\tdisplay = \"[[w:Çanakkale|Çanakkale]]\"\
      ,\n\tregional_categories = {\"Çanakkale\"},\n}\n\nlabels[\"Çemişgezek\"] = {\n\tdisplay = \"[[w:Çemişgezek|Çemişgezek]]\",\n\tregional_categories = {\"Çemişgezek\"},\n}\naliases[\"Chmshkatsag\"] = \"Çemişgezek\"\naliases[\"Çemişkezek\"] = \"Çemişgezek\"\
      \naliases[\"Čmškacag\"] = \"Çemişgezek\"\n\nlabels[\"central Assam\"] = {\n\tdisplay = \"Central Assam\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Central Assam\"] = \"central Assam\"\naliases[\"Central Assamese\"] = \"central Assam\"\naliases[\"\
      central Assamese\"] = \"central Assam\"\n\nlabels[\"central Vietnam\"] = {\n\tdisplay = \"[[w:Central Vietnam|Central Vietnam]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Central Vietnam\"] = \"central Vietnam\"\naliases[\"central Vietnamese\"\
      ] = \"central Vietnam\"\naliases[\"Central Vietnamese\"] = \"central Vietnam\"\n\nlabels[\"China\"] = {\n\tdisplay = \"[[w:China|China]]\",\n\tregional_categories = {\"Chinese\"},\n}\n\nlabels[\"Cirebon\"] = {\n\tregional_categories = {\"Cirebon\"},\n\
      }\naliases[\"Cirebonese\"] = \"Cirebon\"\n\nlabels[\"Cypriot\"] = {\n\tdisplay = \"[[w:Cyprus|Cyprus]]\",\n\tregional_categories = {\"Cypriot\"},\n}\naliases['cypriot'] = 'Cypriot'\n\nlabels[\"Delhi\"] = {\n\tdisplay = \"[[w:Delhi|Delhi]]\",\n\tregional_categories\
      \ = {\"Delhi\"},\n}\n\nlabels[\"Divriği\"] = {\n\tdisplay = \"[[w:Divriği|Divriği]]\",\n\tregional_categories = {\"Divriği\"},\n}\naliases[\"Tevrik\"] = \"Divriği\"\naliases[\"Tewrik\"] = \"Divriği\"\naliases[\"Dewrik\"] = \"Divriği\"\naliases[\"Devrik\"\
      ] = \"Divriği\"\naliases[\"Devrike\"] = \"Divriği\"\naliases[\"Dewrike\"] = \"Divriği\"\n\nlabels[\"Denizli\"] = {\n\tdisplay = \"[[w:Denizli|Denizli]]\",\n\tregional_categories = {\"Denizli\"},\n}\n\nlabels[\"Diyarbakır\"] = {\n\tdisplay = \"[[w:Diyarbakı\
      r|Diyarbakır]]\",\n\tregional_categories = {\"Diyarbakır\"},\n}\naliases[\"Diyarbakir\"] = \"Diyarbakır\"\naliases[\"Diyarbekir\"] = \"Diyarbakır\"\naliases[\"Tigranakert\"] = \"Diyarbakır\"\n\nlabels[\"East Sakhalin\"] = {\n\tdisplay = \"East [[w:Sakhalin|Sakhalin]]\"\
      , \n\tregional_categories = {\"East Sakhalin\"},\n}\n\nlabels[\"Elazığ\"] = {\n\tdisplay = \"[[w:Elazığ|Elazığ]]\",\n\tregional_categories = {\"Elazığ\"},\n}\naliases[\"Elazig\"] = \"Elazığ\"\naliases[\"Elazigh\"] = \"Elazığ\"\n\nlabels[\"Erciş\"] = {\n\
      \tdisplay = \"[[w:Erciş|Erciş]]\",\n\tregional_categories = {\"Erciş\"},\n}\naliases[\"Ercis\"] = \"Erciş\"\naliases[\"Archesh\"] = \"Erciş\"\naliases[\"Artchesh\"] = \"Erciş\"\naliases[\"Erdîş\"] = \"Erciş\"\n\nlabels[\"Erzurum\"] = {\n\tdisplay = \"\
      [[w:Erzurum|Erzurum]]\",\n\tregional_categories = {\"Erzurum\"},\n}\naliases[\"Karin\"] = \"Erzurum\"\naliases[\"Erzrum\"] = \"Erzurum\"\n\nlabels[\"Eskişehir\"] = {\n\tdisplay = \"[[w:Eskişehir|Eskişehir]]\",\n\tregional_categories = {\"Eskişehir\"},\n\
      }\n\nlabels[\"Fengkai\"] = {\n\tdisplay = \"[[w:Fengkai County|Fengkai]]\",\n\tregional_categories = {\"Fengkai\"},\n}\n\nlabels[\"Fuzuli\"] = {\n\tdisplay = \"[[w:Fuzuli District|Fuzuli]]\",\n\tregional_categories = {\"Fuzuli\"},\n}\naliases[\"Füzuli\"\
      ] = \"Fuzuli\"\naliases[\"Fizuli\"] = \"Fuzuli\"\n\nlabels[\"Gadabay\"] = {\n\tdisplay = \"[[w:Gadabay District|Gadabay]]\",\n\tregional_categories = {\"Gadabay\"},\n}\naliases[\"Gədəbəy\"] = \"Gadabay\"\naliases[\"Getabek\"] = \"Gadabay\"\n\nlabels[\"\
      Ganja\"] = {\n\tdisplay = \"[[w:Ganja, Azerbaijan|Ganja]]\",\n\tregional_categories = {\"Ganja\"},\n}\naliases[\"Gandzak\"] = \"Ganja\"\n\nlabels[\"Gansu\"] = {\n\tdisplay = \"[[w:Gansu, China|Gansu]]\",\n\tregional_categories = {\"Gansu\"},\n}\n\nlabels[\"\
      Giresun\"] = {\n\tdisplay = \"[[w:Giresun|Giresun]]\",\n\tregional_categories = {\"Giresun\"},\n}\n\nlabels[\"Goris\"] = {\n\tdisplay = \"[[w:Goris|Goris]]\",\n\tregional_categories = {\"Goris\"},\n}\n\nlabels[\"Hải Phòng\"] = {\n\tdisplay = \"[[w:Haiphong|Hả\
      i Phòng dialect]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"Hai Phong\"] = \"Hải Phòng\"\naliases[\"Haiphong\"] = \"Hải Phòng\"\naliases[\"Hải Phòng dialect\"] = \"Hải Phòng\"\naliases[\"Hai Phong dialect\"] = \"Hải Phòng\"\n\nlabels[\"\
      Haiti\"] = {\n\tdisplay = \"[[w:Haiti|Haiti]]\",\n\tregional_categories = {\"Haitian\"},\n}\n\nlabels[\"Hakkari\"] = {\n\tdisplay = \"[[w:Hakkari|Hakkari]]\",\t\n\tregional_categories = {\"Hakkari\"},\n}\naliases[\"Hakkiari\"] = \"Hakkari\"\naliases[\"\
      Hakari\"] = \"Hakkari\"\naliases[\"Hakiari\"] = \"Hakkari\"\naliases[\"Hakkâri\"] = \"Hakkari\"\n\nlabels[\"Hà Tĩnh\"] = {\n\tdisplay = \"[[w:Hà Tĩnh|Hà Tĩnh dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Ha Tinh\"] = \"Hà Tĩnh\"\n\
      aliases[\"Hà Tĩnh dialect\"] = \"Hà Tĩnh\"\naliases[\"Ha Tinh dialect\"] = \"Hà Tĩnh\"\n\nlabels[\"Hemşin\"] = {\n\tdisplay = \"[[w:Hemşin|Hemşin]]\",\n\tregional_categories = {\"Hemşin\"},\n}\n\nlabels[\"Hong Kong\"] = {\n\tdisplay = \"[[w:Hong Kong|Hong\
      \ Kong]]\",\n\tregional_categories = {\"Hong Kong\"},\n}\n\nlabels[\"Huế\"] = {\n\tdisplay = \"[[w:Huế|Huế dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Hue\"] = \"Huế\"\naliases[\"Huế dialect\"] = \"Huế\"\naliases[\"Hue dialect\"\
      ] = \"Huế\"\n\nlabels[\"Hyderabad\"] = {\n\tdisplay = \"[[w:Hyderabad|Hyderabad]]\",\n\tregional_categories = {\"Hyderabadi\"},\n}\n\nlabels[\"İçel\"] = {\n\tdisplay = \"[[w:Mersin Province|İçel]]\",\n\tregional_categories = {\"İçel\"},\n}\naliases[\"\
      Içel\"] = \"İçel\"\n\nlabels[\"India\"] = {\n\tdisplay = \"[[w:India|India]]\",\n\tregional_categories = {\"Indian\"},\n}\naliases[\"Indian\"] = \"India\"\n\nlabels[\"Indore\"] = {\n\tdisplay = \"[[Indore|Indore]]\",\n\tregional_categories = {\"Indore\"\
      },\n}\n\nlabels[\"Indonesia\"] = {\n\tdisplay = \"[[w:Indonesia|Indonesia]]\",\n\tregional_categories = {\"Indonesian\"},\n}\n\nlabels[\"Iran\"] = {\n\tdisplay = \"[[w:Iran|Iran]]\",\n\tregional_categories = {\"Iranian\"},\n}\n\nlabels[\"Iraqi\"] = {\n\
      \tdisplay = \"Iraq\",\n\tregional_categories = {\"Iraqi\"} }\naliases[\"Iraq\"] = \"Iraqi\"\n\nlabels[\"Isparta\"] = {\n\tdisplay = \"[[w:Isparta|Isparta]]\",\n\tregional_categories = {\"Isparta\"},\n}\n\nlabels[\"Israel\"] = {\n\tdisplay = \"[[w:Israel|Israel]]\"\
      ,\n\tregional_categories = {\"Israeli\"},\n}\naliases[\"Israeli\"] = \"Israel\"\n\nlabels[\"Ivory Coast\"] = {\n\tdisplay = \"[[w:Ivory Coast|Ivory Coast]]\",\n\tregional_categories = {\"Ivorian\"},\n}\naliases[\"Côte d’Ivoire\"] = \"Ivory Coast\"\naliases[\"\
      Côte d'Ivoire\"] = \"Ivory Coast\"\naliases[\"Ivorian\"] = \"Ivory Coast\"\n\nlabels[\"İzmir\"] = {\n\tdisplay = \"[[w:İzmir|İzmir]]\",\n\tregional_categories = {\"İzmir\"},\n}\naliases[\"Izmir\"] = \"İzmir\"\n\nlabels[\"İzmit\"] = {\n\tdisplay = \"[[w:İ\
      zmit|İzmit]]\",\n\tregional_categories = {\"İzmit\"},\n}\naliases[\"Izmit\"] = \"İzmit\"\naliases[\"Nicomedia\"] = \"İzmit\"\naliases[\"Nikomedia\"] = \"İzmit\"\n\nlabels[\"Jakarta\"] = {\n\tdisplay = \"[[w:Jakarta|Jakarta]]\",\n\tregional_categories =\
      \ {\"Jakarta\"},\n}\n\nlabels[\"Java\"] = {\n\tdisplay = \"[[w:Java|Java]]\",\n\tregional_categories = {\"Javanese\"},\n}\naliases[\"Javanese\"] = \"Java\"\n\nlabels[\"Jordanian\"] = {\n\tdisplay = \"Jordan\",\n\tregional_categories = {\"Jordanian\"} }\n\
      aliases[\"Jordan\"] = \"Jordanian\"\n\nlabels[\"Kaptanpaşa\"] = {\n\tdisplay = \"[[w:tr:Kaptanpaşa, Çayeli|Kaptanpaşa]]\",\n\tregional_categories = {\"Rize\"},\n}\n\nlabels[\"Kars\"] = {\n\tdisplay = \"[[w:Kars|Kars]]\",\n\tregional_categories = {\"Kars\"\
      },\n}\naliases[\"Ghars\"] = \"Kars\"\n\nlabels[\"Kathiyawadi\"] = {\n\tdisplay = \"[[w:Kathiawar|Kathiyawadi]]\",\n\tregional_categories = {\"Kathiyawadi\"},\n}\naliases[\"Kathiawadi\"] = \"Kathiyawadi\"\naliases[\"Sorathi\"] = \"Kathiyawadi\"\naliases[\"\
      Bhawnagari\"] = \"Kathiyawadi\"\naliases[\"Gohilwadi\"] = \"Kathiyawadi\"\naliases[\"Holadi\"] = \"Kathiyawadi\"\naliases[\"Jhalawadi\"] = \"Kathiyawadi\"\n\nlabels[\"Kayseri\"] = {\n\tdisplay = \"[[w:Kayseri|Kayseri]]\",\n\tregional_categories = {\"Kayseri\"\
      },\n}\naliases[\"Kesaria\"] = \"Kayseri\"\n\nlabels[\"Kazym\"] = {\n\tregional_categories = {\"Kazym\"},\n}\n\nlabels[\"Kemaliye\"] = {\n\tdisplay = \"[[w:Kemaliye|Kemaliye]]\",\n\tregional_categories = {\"Kemaliye\"},\n}\n\nlabels[\"Kharberd\"] = {\n\t\
      display = \"[[w:Elazığ|Kharberd]]\",\n\tregional_categories = {\"Kharberd\"},\n}\naliases[\"Kharpert\"] = \"Kharberd\"\naliases[\"Kharput\"] = \"Kharberd\"\naliases[\"Harput\"] = \"Kharberd\"\n\nlabels[\"Khevsureti\"] = {\n\tdisplay = \"[[w:Khevsureti|Khevsureti]]\"\
      ,\n\tregional_categories = {\"Khevsureti\"},\n}\naliases[\"Khevsuria\"] = \"Khevsureti\"\n\nlabels[\"Khotorjur\"] = {\n\tdisplay = \"[[w:Khotorjur|Khotorjur]]\",\n\tregional_categories = {\"Khotorjur\"},\n}\naliases[\"Khodorchur\"] = \"Khotorjur\"\naliases[\"\
      Hodiçor\"] = \"Khotorjur\"\naliases[\"Xodiçur\"] = \"Khotorjur\"\naliases[\"Xodrçur\"] = \"Khotorjur\"\naliases[\"Xodorçur\"] = \"Khotorjur\"\naliases[\"Sırakonak\"] = \"Khotorjur\"\n\nlabels[\"Konya\"] = {\n\tdisplay = \"[[w:Konya|Konya]]\",\n\tregional_categories\
      \ = {\"Konya\"},\n}\n\nlabels[\"Lachin\"] = {\n\tdisplay = \"[[w:Lachin District|Lachin]]\",\n\tregional_categories = {\"Lachin\"},\n}\naliases[\"Laçın\"] = \"Lachin\"\naliases[\"Laçîn\"] = \"Lachin\"\n\nlabels[\"Lebanese\"] = {\n\tdisplay = \"Lebanon\"\
      ,\n\tregional_categories = {\"Lebanese\"} }\naliases[\"Lebanon\"] = \"Lebanese\"\n\nlabels[\"Levantine\"] = {\n\tdisplay = \"[[w:Levant|Levantine]]\",\n\tregional_categories = {\"Levantine\"},\n}\naliases[\"Levant\"] = \"Levantine\"\n\nlabels[\"Libya\"\
      ] = {\n\tdisplay = \"Libya\",\n\tregional_categories = {\"Libyan\"} }\naliases[\"Libyan\"] = \"Libya\"\n\nlabels[\"Lisan ud-Dawat\"] = {\n\tdisplay = \"[[w:Lisan ud-Dawat|LDA]]\",\n\tregional_categories = {\"Lisan ud-Dawat\"},\n}\naliases[\"LDA\"] = \"\
      Lisan ud-Dawat\"\naliases[\"Lisaan ud-Da'wat\"] = \"Lisan ud-Dawat\"\naliases[\"Lisaan ud-Da'wat il-'Alaviyah\"] = \"Lisan ud-Dawat\"\n\nlabels[\"Lucknow\"] = {\n\tregional_categories = {\"Lucknow\"},\n}\n\nlabels[\"Macau\"] = {\n\tdisplay = \"[[w:Macau|Macau]]\"\
      ,\n\tregional_categories = {\"Macanese\"},\n}\naliases[\"Macao\"] = \"Macau\"\nlabels[\"Mainland China\"] = {\n\tdisplay = \"[[w:Mainland China|Mainland China]]\",\n\tregional_categories = {\"Mainland China\"},\n}\naliases[\"Mainland\"] = \"Mainland China\"\
      \naliases[\"mainland\"] = \"Mainland China\"\naliases[\"mainland China\"] = \"Mainland China\"\n\nlabels[\"Malatya\"] = {\n\tdisplay = \"[[w:Malatya|Malatya]]\",\n\tregional_categories = {\"Malatya\"},\n}\naliases[\"Malatia\"] = \"Malatya\"\n\nlabels[\"\
      Malayeri\"] = {\n\tdisplay = \"[[w:Malayer|Malayeri]]\",\n\tregional_categories = {\"Malayeri\"},\n}\n\nlabels[\"Malaysia\"] = {\n\tdisplay = \"[[w:Malaysia|Malaysia]]\",\n\tregional_categories = {\"Malaysian\"},\n}\naliases[\"Malaysian\"] = \"Malaysia\"\
      \n\nlabels[\"Medieval Hebrew\"] = {\n    display = \"[[w:Medieval Hebrew|Medieval Hebrew]]\",\n    plain_categories = {\"Medieval Hebrew\"},\n}\n\nlabels[\"Mehsani\"] = {\n\tdisplay = \"[[w:Mehsana|Mehsani]]\",\n\tregional_categories = {\"Mehsani\"},\n\
      }\naliases[\"Mahesani\"] = \"Mehsani\"\n\nlabels[\"Mekong Delta\"] = {\n\tdisplay = \"[[w:Mekong Delta|Mekong Delta dialect]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Mekong Delta dialect\"] = \"Mekong Delta\"\n\nlabels[\"Mesudiye\"] =\
      \ {\n\tdisplay = \"[[w:Mesudiye, Ordu|Mesudiye]]\",\n\tregional_categories = {\"Mesudiye\"},\n}\n\nlabels[\"Mishnaic Hebrew\"] = {\n    display = \"[[w:Mishnaic Hebrew|Mishnaic Hebrew]]\",\n    plain_categories = {\"Mishnaic Hebrew\"},\n}\naliases[\"Mishnaic\"\
      ] = \"Mishnaic Hebrew\"\n\nlabels[\"Moks\"] = {\n\tdisplay = \"[[w:Bahçesaray (District), Van|Moks]]\",\n\tregional_categories = {\"Moks\"},\n}\naliases[\"Müküs\"] = \"Moks\"\naliases[\"Miks\"] = \"Moks\"\n\nlabels[\"Muğla\"] = {\n\tdisplay = \"[[w:Muğ\
      la|Muğla]]\",\n\tregional_categories = {\"Muğla\"},\n}\n\nlabels[\"Mumbai\"] = {\n\tregional_categories = {\"Mumbai\"},\n}\n\nlabels[\"Muş\"] = {\n\tdisplay = \"[[w:Muş|Muş]]\",\n\tregional_categories = {\"Muş\"},\n}\naliases[\"Mush\"] = \"Muş\"\n\nlabels[\"\
      Nakhchivan\"] = {\n\tdisplay = \"[[w:Nakhchivan|Nakhchivan]]\",\n\tregional_categories = {\"Nakhchivan\"},\n}\naliases[\"Naxçıvan\"] = \"Nakhchivan\"\naliases[\"Nakhichevan\"] = \"Nakhchivan\"\naliases[\"Nakhijevan\"] = \"Nakhchivan\"\naliases[\"Nahçı\
      van\"] = \"Nakhchivan\"\n\nlabels[\"Negeri Sembilan\"] = {\n\tdisplay = \"[[w:Negeri Sembilan|Negeri Sembilan]]\",\n\tregional_categories = {\"Negeri Sembilan\"},\n}\n\nlabels[\"Nepal\"] = {\n\tdisplay = \"[[w:Nepal|Nepal]]\",\n\tregional_categories =\
      \ {\"Nepali\"},\n}\n\nlabels[\"Nghệ An\"] = {\n\tdisplay = \"[[w:Nghệ An|Nghệ An dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Nghe An\"] = \"Nghệ An\"\naliases[\"Nghệ An dialect\"] = \"Nghệ An\"\naliases[\"Nghe An dialect\"] = \"\
      Nghệ An\"\n\nlabels[\"Nghệ Tĩnh\"] = {\n\tdisplay = \"[[w:Nghệ Tĩnh|Nghệ Tĩnh dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Nghe Tinh\"] = \"Nghệ Tĩnh\"\naliases[\"Nghệ Tinh dialect\"] = \"Nghệ Tĩnh\"\naliases[\"Nghe Tinh dialect\"\
      ] = \"Nghệ Tĩnh\"\n\nlabels[\"Niğde\"] = {\n\tdisplay = \"[[w:Niğde|Niğde]]\",\n\tregional_categories = {\"Niğde\"},\n}\naliases[\"Nigde\"] = \"Niğde\"\n\nlabels[\"Nor Bayazet\"] = {\n\tdisplay = \"[[w:Nor Bayazet|Nor Bayazet]]\",\n\tregional_categories\
      \ = {\"Nor Bayazet\"},\n}\naliases[\"Novo-Bayazet\"] = \"Nor Bayazet\"\naliases[\"Gavar\"] = \"Nor Bayazet\"\n\nlabels[\"Nor Nakhichevan\"] = {\n\tdisplay = \"[[w:Nakhichevan-on-Don|Nor Nakhichevan]]\",\n\tregional_categories = {\"Nor Nakhichevan\"},\n\
      }\naliases[\"New Nakhichevan\"] = \"Nor Nakhichevan\"\naliases[\"Nor Nakhijevan\"] = \"Nor Nakhichevan\"\naliases[\"Nakhichevan-on-Don\"] = \"Nor Nakhichevan\"\n\nlabels[\"North Korea\"] = {\n\tdisplay = \"[[w:North Korea|North Korea]]\",\n\tregional_categories\
      \ = {\"North\"},\n}\n\nlabels[\"North Sakhalin\"] = {\n\tdisplay = \"North [[w:Sakhalin|Sakhalin]]\", \n\tregional_categories = {\"North Sakhalin\"},\n}\n\nlabels[\"North Central Vietnam\"] = {\n\tdisplay = \"[[w:North Central Coast|North Central Vietnam]]\"\
      ,\n\tregional_categories = {\"Central\"},\n}\naliases[\"North-Central Vietnam\"] = \"North Central Vietnam\"\n\nlabels[\"northern Vietnam\"] = {\n\tdisplay = \"[[w:Northern Vietnam|Northern Vietnam]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"\
      north Vietnam\"] = \"northern Vietnam\"\naliases[\"North Vietnam\"] = \"northern Vietnam\"\naliases[\"north Vietnamese\"] = \"northern Vietnam\"\naliases[\"North Vietnamese\"] = \"northern Vietnam\"\naliases[\"Northern Vietnam\"] = \"northern Vietnam\"\
      \naliases[\"northern Vietnamese\"] = \"northern Vietnam\"\naliases[\"Northern Vietnamese\"] = \"northern Vietnam\"\n\nlabels[\"Oman\"] = {\n\tdisplay = \"Oman\",\n\tregional_categories = {\"Omani\"},\n}\naliases[\"Omani\"] = \"Oman\"\n\nlabels[\"overseas\
      \ Vietnamese\"] = {\n\tdisplay = \"[[w:Overseas Vietnamese|Overseas Vietnamese]]\",\n\tregional_categories = {\"Overseas\"},\n}\naliases[\"Overseas Vietnamese\"] = \"overseas Vietnamese\"\n\nlabels[\"Pahang\"] = {\n\tdisplay = \"[[w:Pahang|Pahang]]\",\n\
      \tregional_categories = {\"Pahang\"},\n}\n\nlabels[\"Pakistan\"] = {\n\tdisplay = \"[[w:Pakistan|Pakistan]]\",\n\tregional_categories = {\"Pakistani\"},\n}\n\nlabels[\"Palestinian\"] = {\n\tdisplay = \"Palestine\",\n\tregional_categories = {\"Palestinian\"\
      } }\naliases[\"Palestine\"] = \"Palestinian\"\n\nlabels[\"Partizak\"] = {\n\tdisplay = \"[[w:hy:Պարտիզակ (Քոջաելի)|Partizak]]\",\n\tregional_categories = {\"Partizak\"},\n}\naliases[\"Bardizag\"] = \"Partizak\"\n\nlabels[\"Perak\"] = {\n\tdisplay = \"\
      [[w:Perak|Perak]]\",\n\tregional_categories = {\"Perak\"},\n}\n\nlabels[\"Philadelphia\"] = {\n\tdisplay = \"[[w:Philadelphia|Philadelphia]]\",\n\tregional_categories = {\"Pennsylvanian\"},\n} -- can be split off if enough entries in it arise; group with\
      \ PA for now\n\nlabels[\"Philippines\"] = {\n\tdisplay = \"[[w:Philippines|Philippines]]\",\n\tregional_categories = {\"Philippine\"},\n}\n\nlabels[\"Phú Yên\"] = {\n\tdisplay = \"[[w:Phú Yên|Phú Yên dialect]]\",\n\tregional_categories = {\"Southern\"\
      },\n}\naliases[\"Phu Yen\"] = \"Phú Yên\"\naliases[\"Phú Yên dialect\"] = \"Phú Yên\"\naliases[\"Phu Yen dialect\"] = \"Phú Yên\"\n\nlabels[\"Pre-Angkorian\"] = {\n\tdisplay = \"[[w:Khmer language#Historical periods|Pre-Angkorian]]\",\n\tregional_categories\
      \ = {\"Pre-Angkorian\"},\n}\n\nlabels[\"Priangan\"] = {\n\tregional_categories = {\"Priangan\"},\n}\n\nlabels[\"Pshavi\"] = {\n\tdisplay = \"[[w:Pshavi|Pshavi]]\",\n\tregional_categories = {\"Pshavi\"},\n}\n\nlabels[\"Pulur\"] = {\n\tdisplay = \"[[w:Ovacı\
      k, Dersim|Pulur]]\",\n\tregional_categories = {\"Pulur\"},\n}\n\nlabels[\"Qakh\"] = {\n\tdisplay = \"[[w:Qakh District|Qakh]]\",\n\tregional_categories = {\"Qakh\"},\n}\naliases[\"Kakhi\"] = \"Qakh\"\naliases[\"Gakh\"] = \"Qakh\"\naliases[\"Qax\"] = \"\
      Qakh\"\n\nlabels[\"Qinghai\"] = {\n\tdisplay = \"[[w:Qinghai, China|Qinghai]]\",\n\tregional_categories = {\"Qinghai\"},\n}\n\nlabels[\"Quảng Bình\"] = {\n\tdisplay = \"[[w:Quảng Bình|Quảng Bình dialect]]\",\n\tregional_categories = {\"Central\"},\n}\n\
      aliases[\"Quang Binh\"] = \"Quảng Bình\"\naliases[\"Quảng Bình dialect\"] = \"Quảng Bình\"\naliases[\"Quang Binh dialect\"] = \"Quảng Bình\"\n\nlabels[\"Quảng Nam\"] = {\n\tdisplay = \"[[w:Quảng Nam|Quảng Nam dialect]]\",\n\tregional_categories = {\"Southern\"\
      },\n}\naliases[\"Quang Nam\"] = \"Quảng Nam\"\naliases[\"Quảng Nam dialect\"] = \"Quảng Nam\"\naliases[\"Quang Nam dialect\"] = \"Quảng Nam\"\n\nlabels[\"Quảng Ngãi\"] = {\n\tdisplay = \"[[w:Quảng Ngãi|Quảng Ngãi dialect]]\",\n\tregional_categories = {\"\
      Southern\"},\n}\naliases[\"Quang Ngai\"] = \"Quảng Ngãi\"\naliases[\"Quảng Ngãi dialect\"] = \"Quảng Ngãi\"\naliases[\"Quang Ngai dialect\"] = \"Quảng Ngãi\"\n\nlabels[\"Quảng Trị\"] = {\n\tdisplay = \"[[w:Quảng Trị|Quảng Trị dialect]]\",\n\tregional_categories\
      \ = {\"Central\"},\n}\naliases[\"Quang Tri\"] = \"Quảng Trị\"\naliases[\"Quảng Trị dialect\"] = \"Quảng Trị\"\naliases[\"Quang Tri dialect\"] = \"Quảng Trị\"\n\nlabels[\"Rize\"] = {\n\tdisplay = \"[[w:Rize|Rize]]\",\n\tregional_categories = {\"Rize\"},\n\
      }\n\nlabels[\"Sakhalin\"] = {\n\tdisplay = \"[[w:Sakhalin|Sakhalin]]\",\n\tregional_categories = {\"Sakhalin\"},\n}\n\nlabels[\"Salyan\"] = {\n\tdisplay = \"[[w:Salyan District, Azerbaijan|Salyan]]\",\n\tregional_categories = {\"Salyan\"},\n}\n\nlabels[\"\
      Sasun\"] = {\n\tdisplay = \"[[w:Sason|Sasun]]\",\n\tregional_categories = {\"Sasun\"},\n}\naliases[\"Sason\"] = \"Sasun\"\naliases[\"Sassoun\"] = \"Sasun\"\n\nlabels[\"Shamakhi\"] = {\n\tdisplay = \"[[w:Shamakhi|Shamakhi]]\",\n\tregional_categories = {\"\
      Shamakhi\"},\n}\naliases[\"Şamaxı\"] = \"Shamakhi\"\n\nlabels[\"Shanghai\"] = {\n\tdisplay = \"[[w:Shanghai|Shanghai]]\",\n\tregional_categories = {\"Shanghainese\"},\n}\naliases[\"Shanghainese\"] = \"Shanghai\"\n\nlabels[\"Sheki\"] = {\n\tdisplay = \"\
      [[w:Sheki, Azerbaijan|Sheki]]\",\n\tregional_categories = {\"Sheki\"},\n}\naliases[\"Şəki\"] = \"Sheki\"\naliases[\"Shaki\"] = \"Sheki\"\n\nlabels[\"Shidong\"] = {\n\tdisplay = \"[[w:Shidong|Shidong]]\",\n\tregional_categories = {\"Shidong\"},\n}\n\nlabels[\"\
      Shuryshkar\"] = {\n\tregional_categories = {\"Shuryshkar\"},\n}\naliases[\"Shurishkar\"] = \"Shuryshkar\"\n\nlabels[\"Singapore\"] = {\n\tdisplay = \"[[w:Singapore|Singapore]]\",\n\tregional_categories = {\"Singapore\"},\n}\naliases[\"Singaporian\"] =\
      \ \"Singapore\"\n\nlabels[\"Sivas\"] = {\n\tdisplay = \"[[w:Sivas|Sivas]]\",\n\tregional_categories = {\"Sivas\"},\n}\naliases[\"Sebastia\"] = \"Sivas\"\naliases[\"Sebastea\"] = \"Sivas\"\n\nlabels[\"South Korea\"] = {\n\tdisplay = \"[[w:South Korea|South\
      \ Korea]]\",\n\tregional_categories = {\"South\"},\n}\n\nlabels[\"South Sakhalin\"] = {\n\tdisplay = \"South [[w:Sakhalin|Sakhalin]]\", \n\tregional_categories = {\"South Sakhalin\"},\n}\n\nlabels[\"southern Vietnam\"] = {\n\tdisplay = \"[[w:Southern Vietnam|Southern\
      \ Vietnam]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"south Vietnam\"] = \"southern Vietnam\"\naliases[\"South Vietnam\"] = \"southern Vietnam\"\naliases[\"south Vietnamese\"] = \"southern Vietnam\"\naliases[\"South Vietnamese\"] = \"southern\
      \ Vietnam\"\naliases[\"Southern Vietnam\"] = \"southern Vietnam\"\naliases[\"southern Vietnamese\"] = \"southern Vietnam\"\naliases[\"Southern Vietnamese\"] = \"southern Vietnam\"\n\nlabels[\"Sri Lanka\"] = {\n\tdisplay = \"[[Sri Lanka]]\",\n\tregional_categories\
      \ = {\"Sri Lankan\"},\n}\n\nlabels[\"Surati\"] = {\n\tdisplay = \"[[w:Surat district|Surati]]\",\n\tregional_categories = {\"Surati\"},\n}\n\nlabels[\"Surgut\"] = {\n\tdisplay = \"[[w:Surgut|Surgut]]\",\n\tregional_categories = {\"Surgut\"},\n}\n\nlabels[\"\
      Suzhou\"] = {\n\tdisplay = \"[[w:Suzhou|Suzhou]]\",\n\tregional_categories = {\"Suzhounese\"},\n}\naliases[\"Suzhounese\"] = \"Suzhou\"\n\nlabels[\"Syrian\"] = {\n\tdisplay = \"Syria\",\n\tregional_categories = {\"Syrian\"} }\naliases[\"Syria\"] = \"Syrian\"\
      \n\nlabels[\"Taiwan\"] = {\n\tdisplay = \"[[w:Taiwan|Taiwan]]\",\n\tregional_categories = {\"Taiwanese\"},\n}\naliases[\"Taiwanese\"] = \"Taiwan\"\n\nlabels[\"Tbilisi\"] = {\n\tdisplay = \"[[w:Tbilisi|Tbilisi]]\",\n\tregional_categories = {\"Tbilisi\"\
      },\n}\naliases[\"Tiflis\"] = \"Tbilisi\"\n\nlabels[\"Thailand\"] = {\n\tdisplay = \"[[w:Thailand|Thailand]]\",\n\tregional_categories = {\"Thai\"},\n}\n\nlabels[\"Thanh Hoá\"] = {\n\tdisplay = \"[[w:Thanh Hoá|Thanh Hoá dialect]]\",\n\tregional_categories\
      \ = {\"Central\"},\n}\naliases[\"Thanh Hoa\"] = \"Thanh Hoá\"\naliases[\"Thanh Hoá dialect\"] = \"Thanh Hoá\"\naliases[\"Thanh Hoa dialect\"] = \"Thanh Hoá\"\n\nlabels[\"Tianjin\"] = {\n\tdisplay = \"[[w:Tianjin dialect|Tianjin]]\",\n\tplain_categories\
      \ = {\"Mandarin Chinese\"},\n}\naliases[\"Tianjin dialect\"] = \"Tianjin\"\naliases[\"Tianjin Mandarin\"] = \"Tianjin\"\naliases[\"Tianjinese\"] = \"Tianjin\"\n\nlabels[\"Tokat\"] = {\n\tdisplay = \"[[w:Tokat|Tokat]]\",\n\tregional_categories = {\"Tokat\"\
      },\n}\naliases[\"Evdokia\"] = \"Tokat\"\n\nlabels[\"Trabzon\"] = {\n\tdisplay = \"[[w:Trabzon|Trabzon]]\",\n\tregional_categories = {\"Trabzon\"},\n}\naliases[\"Trapizon\"] = \"Trabzon\"\n\nlabels[\"Urfa\"] = {\n\tdisplay = \"[[w:Şanlıurfa|Urfa]]\",\n\t\
      regional_categories = {\"Urfa\"},\n}\naliases[\"Urha\"] = \"Urfa\"\naliases[\"Şanlıurfa\"] = \"Urfa\"\n\nlabels[\"Uşak\"] = {\n\tdisplay = \"[[w:Uşak|Uşak]]\",\n\tregional_categories = {\"Uşak\"},\n}\n\nlabels[\"Van\"] = {\n\tdisplay = \"[[w:Van, Turkey|Van]]\"\
      ,\n\tregional_categories = {\"Van\"},\n}\n\nlabels[\"Vietnam\"] = {\n\tdisplay = \"[[w:Vietnam|Vietnam]]\",\n\tregional_categories = {\"Vietnamese\"},\n}\n\nlabels[\"Wuhan\"] = {\n\tdisplay = \"[[w:Wuhan dialect|Wuhan]]\",\n\tregional_categories = {\"\
      Wuhan\"},\n}\naliases[\"Hankou\"] = \"Wuhan\"\naliases[\"Hankow\"] = \"Wuhan\"\naliases[\"Wuhan dialect\"] = \"Wuhan\"\n\nlabels[\"Yanbian\"] = {\n\tdisplay = \"[[w:Korean language in China|Yanbian dialect]]\",\n\tregional_categories = {\"Yanbian\"},\n\
      }\n\nlabels[\"Yemen\"] = {\n\tdisplay = \"Yemen\",\n\tregional_categories = {\"Yemeni\"},\n}\naliases[\"Yemeni\"] = \"Yemen\"\naliases[\"Yemenite\"] = \"Yemen\"\n\nlabels[\"Yerevan\"] = {\n\tdisplay = \"[[w:Yerevan|Yerevan]]\",\n\tregional_categories =\
      \ {\"Yerevan\"},\n}\naliases[\"İrəvan\"] = \"Yerevan\"\n\nlabels[\"Yonggu\"] = {\n\tdisplay = \"[[w:Yonggu, Guangdong|Yonggu]]\",\n\tregional_categories = {\"Yonggu\"},\n}\n\nlabels[\"Zangilan\"] = {\n\tdisplay = \"[[w:Zəngilan|Zangilan]]\",\n\tregional_categories\
      \ = {\"Zangilan\"},\n}\naliases[\"Zəngilan\"] = \"Zangilan\"\naliases[\"Zangelan\"] = \"Zangilan\"\n\nlabels[\"Zanjan\"] = {\n\tdisplay = \"[[w:Zanjan, Iran|Zanjan]]\",\n\tregional_categories = {\"Zanjan\"},\n}\naliases[\"Zәncan\"] = \"Zanjan\"\naliases[\"\
      Zәngan\"] = \"Zanjan\"\n\nlabels[\"Zaqatala\"] = {\n\tdisplay = \"[[w:Zaqatala District|Zaqatala]]\",\n\tregional_categories = {\"Zaqatala\"},\n}\naliases[\"Zakatala\"] = \"Zaqatala\"\naliases[\"Zagatala\"] = \"Zaqatala\"\n\n\n-- Europe\n\nlabels[\"Aachen\"\
      ] = {\n\tdisplay = \"[[w:Aachen dialect|Aachen]]\",\n\tregional_categories = {\"Aachen\"},\n}\n\nlabels[\"Alghero\"] = {\n\tdisplay = \"[[w:Alghero|Alghero]]\",\n\tregional_categories = {\"Algherese\"},\n}\n\nlabels[\"Alsatian\"] = {\n\tdisplay = \"[[w:Alsatian\
      \ dialect|Alsatian]]\",\n\tregional_categories = {\"Alsatian\"},\n}\naliases[\"Alsace\"] = \"Alsatian\"\naliases[\"Alsacien\"] = \"Alsatian\"\naliases[\"Alsatian German\"] = \"Alsatian\"\naliases[\"Elsässisch\"] = \"Alsatian\"\n\nlabels[\"Al-Andalus\"\
      ] = {\n\tdisplay = \"[[w:al-Andalus|al-Andalus]]\",\n\tregional_categories = {\"Andalusian\"},\n}\naliases[\"al-Andalus\"] = \"Al-Andalus\"\n\nlabels[\"Andalusia\"] = {\n\tdisplay = \"[[w:Andalusia|Andalusia]]\",\n\tregional_categories = {\"Andalusian\"\
      },\n}\nlabels[\"Antrim\"] = {\n\tdisplay = \"[[w:County Antrim|Antrim]]\",\n\tregional_categories = {\"Ulster\"},\n}\n\nlabels[\"Aragón\"] = {\n\tregional_categories = {\"Aragonese\"},\n}\n\nlabels[\"Aran\"] = {\n\tdisplay = \"[[w:Aran Islands|Aran]]\"\
      ,\n\tregional_categories = {\"Connacht\"},\n}\n\nlabels[\"Arran\"] = {\n\tdisplay = \"[[w:Isle of Arran|Arran]]\",\n\tregional_categories = {\"Arran\"},\n}\n\nlabels[\"Arvanitika\"] = {\n\tdisplay = \"[[w:Arvanitika|Arvanitika]]\",\n\tregional_categories\
      \ = {\"Arvanitika\"},\n}\n\nlabels[\"Asturias\"] = {\n\tregional_categories = {\"Asturian\"},\n}\n\nlabels[\"Austria\"] = {\n\tdisplay = \"[[w:Austria|Austria]]\",\n\tregional_categories = {\"Austrian\"},\n}\naliases[\"Austrian\"] = \"Austria\"\n\nlabels[\"\
      Auvergne\"] = {\n\tdisplay = \"[[w:Auvergnat (language)|Auvergne]]\",\n\tregional_categories = {\"Auvergnese\"},\n}\n\nlabels[\"Bedfordshire\"] = {\n\tdisplay = \"[[w:Bedfordshire|Bedfordshire]]\",\n\tregional_categories = {\"Bedfordshire\"},\n}\naliases[\"\
      Bedfordshire dialect\"] = \"Bedfordshire\"\n\nlabels[\"Berkshire\"] = {\n\tdisplay = \"[[w:Berkshire|Berkshire]]\",\n\tregional_categories = {\"Berkshire\"},\n}\naliases[\"Berkshire dialect\"] = \"Berkshire\"\n\nlabels[\"Balearics\"] = {\n\tdisplay = \"\
      [[w:Balearic Islands|Balearics]]\",\n\tregional_categories = {\"Balearic\"},\n}\n\nlabels[\"Banat\"] = {\n\tdisplay = \"[[w:Banat|Banat]]\",\n\tregional_categories = {\"Banat\"},\n}\n\nlabels[\"Batavia\"] = {\n\tdisplay = \"[[w:Betawi language|Batavian\
      \ Malay]]\",\n\tplain_categories = {\"Batavian Malay\"},\n}\naliases[\"Batavian\"] = \"Batavia\"\naliases[\"Betawi\"] = \"Batavia\"\n\nlabels[\"Belgium\"] = {\n\tdisplay = \"[[w:Belgium|Belgium]]\",\n\tregional_categories = {\"Belgian\"},\n}\naliases[\"\
      Belgian\"] = \"Belgium\"\n\naliases[\"Bologna\"] = \"Bolognese\"\nlabels[\"Bolognese\"] = {\n\tdisplay = \"[[Bolognese]]\",\n\tregional_categories = {\"Bolognese\"},\n}\n\nlabels[\"Bosnia\"] = {\n\tdisplay = \"[[w:Bosnia|Bosnia]]\",\n\tregional_categories\
      \ = {\"Bosnian\"},\n}\naliases[\"Bosnian\"] = \"Bosnia\"\n\nlabels[\"Brabant\"] = {\n\tdisplay = \"[[w:Brabant|Brabant]]\",\n\tregional_categories = {\"Brabantian\"},\n}\n\nlabels[\"Bristol\"] = {\n\tdisplay = \"[[w:Bristol|Bristol]]\",\n\tregional_categories\
      \ = {\"Bristolian\"},\n}\naliases[\"Bristolian\"] = \"Bristol\"\n\nlabels[\"Britain\"] = {\n\tdisplay = \"[[w:Britain|Britain]]\",\n\tregional_categories = {\"British\"},\n}\naliases[\"Brit\"] = \"Britain\"\naliases[\"British\"] = \"Britain\"\naliases[\"\
      Great Britain\"] = \"Britain\"\naliases[\"UK\"] = \"Britain\"\naliases[\"United Kingdom\"] = \"Britain\"\n\nlabels[\"Bukovina\"] = {\n\tdisplay = \"[[w:Bukovina|Bukovina]]\",\n\tregional_categories = {\"Bukovinian\"},\n}\naliases[\"Bucovina\"] = \"Bukovina\"\
      \naliases[\"Bukovinian\"] = \"Bukovina\"\n\nlabels[\"Burgos\"] = {\n\tregional_categories = {\"Burgos\"},\n}\n\nlabels[\"Campello Monti\"] = {\n\tdisplay = \"[[:it:w:Campello Monti|Campello Monti]]\",\n\tplain_categories = {\"Campello Monti Walser\"},\n\
      }\n\nlabels[\"Carcoforo\"] = {\n\tdisplay = \"[[w:Carcoforo|Carcoforo]]\",\n\tplain_categories = {\"Carcoforo Walser\"},\n}\n\naliases[\"Carpi\"] = \"Carpigiano\"\nlabels[\"Carpigiano\"] = {\n\tdisplay = \"[[w:Carpi, Emilia-Romagna|Carpigiano]]\",\n\t\
      regional_categories = {\"Carpigiano\"},\n}\n\nlabels[\"Central Germany\"] = {\n\tdisplay = \"central Germany\",\n\tregional_categories = {\"Central German\"},\n}\naliases[\"Central German\"] = \"Central Germany\"\naliases[\"central Germany\"] = \"Central\
      \ Germany\"\naliases[\"central German\"] = \"Central Germany\"\n\nlabels[\"Central Italy\"] = {\n\tdisplay = \"[[w:Central Italian|central Italy]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Central Italian\"] = \"Central Italy\"\naliases[\"\
      central Italy\"] = \"Central Italy\"\naliases[\"central Italian\"] = \"Central Italy\"\n\nlabels[\"Channel Islands\"] = {\n\tdisplay = \"[[w:Channel Islands|Channel Islands]]\",\n\tregional_categories = {\"Channel Islands\"},\n}\n\nlabels[\"Chungcheong\"\
      ] = {\n\tdisplay = \"[[w:Chungcheong dialect|Chungcheong dialect]]\",\n\tregional_categories = {\"Chungcheong\"},\n}\n\nlabels[\"Chungnam\"] = {\n\tdisplay = \"[[w:Chungcheong dialect|Chungnam dialect]]\",\n\tregional_categories = {\"Chungcheong\"},\n\
      }\n\nlabels[\"Connacht\"] = {\n\tdisplay = \"[[w:Connacht|Connacht]]\",\n\tregional_categories = {\"Connacht\"},\n}\n\nlabels[\"Connemara\"] = {\n\tdisplay = \"[[w:Connemara|Connemara]]\",\n\tregional_categories = {\"Connacht\"},\n}\n\nlabels[\"Cornwall\"\
      ] = {\n\tdisplay = \"[[w:Cornwall|Cornwall]]\",\n\tregional_categories = {\"Cornish\"},\n}\naliases[\"Cornish\"] = \"Cornwall\"\naliases[\"Cornish dialect\"] = \"Cornwall\"\n\nlabels[\"Crimea\"] = {\n\tdisplay = \"[[w:Crimea|Crimea]]\",\n\tregional_categories\
      \ = {\"Crimean\"},\n}\naliases[\"Crimean\"] = \"Crimea\"\n\nlabels[\"Croatia\"] = {\n\tdisplay = \"[[w:Croatia|Croatia]]\",\n\tregional_categories = {\"Croatian\"},\n}\naliases[\"Croatian\"] = \"Croatia\"\n\nlabels[\"Cumbria\"] = {\n\tdisplay = \"[[w:Cumbria|Cumbria]]\"\
      ,\n\tregional_categories = {\"Cumbrian\"},\n}\naliases[\"Cumbrian\"] = \"Cumbria\"\n\nlabels[\"DDR\"] = {\n\tdisplay = \"[[w:German Democratic Republic|East Germany]]\",\n\tregional_categories = {\"DDR\"},\n}\naliases[\"GDR\"] = \"DDR\"\naliases[\"East\
      \ German\"] = \"DDR\"\naliases[\"East Germany\"] = \"DDR\"\n\nlabels[\"Dalmatia\"] = {\n\tdisplay = \"[[w:Dalmatia|Dalmatia]]\",\n\tregional_categories = {\"Dalmatian\"},\n}\n\nlabels[\"Derbyshire\"] = {\n\tdisplay = \"[[w:Derbyshire|Derbyshire]]\",\n\t\
      regional_categories = {\"Derbyshire\"},\n}\naliases[\"Derbyshire dialect\"] = \"Derbyshire\"\n\nlabels[\"Devon\"] = {\n\tdisplay = \"[[w:Devon|Devon]]\",\n\tregional_categories = {\"Devonian\"},\n}\naliases[\"Devonian\"] = \"Devon\"\naliases[\"Devonian\
      \ dialect\"] = \"Devon\"\naliases[\"Devonshire\"] = \"Devon\"\naliases[\"Devonshire dialect\"] = \"Devon\"\n\nlabels[\"Dobruja\"] = {\n\tdisplay = \"[[w:Dobruja|Dobruja]]\",\n\tregional_categories = {\"Dobrujan\"},\n}\naliases[\"Dobrogea\"] = \"Dobruja\"\
      \naliases[\"Dobrujan\"] = \"Dobruja\"\n\nlabels[\"Dorset\"] = {\n\tdisplay = \"[[w:Dorset|Dorset]]\",\n\tregional_categories = {\"Dorset\"},\n}\naliases[\"Dorset dialect\"] = \"Dorset\"\n\nlabels[\"Dublin\"] = {\n\tdisplay = \"[[w:Dublin|Dublin]]\",\n\t\
      regional_categories = {\"Dublin\"},\n}\n\nlabels[\"Durham\"] = {\n\tdisplay = \"[[w:County Durham|Durham]]\",\n\tregional_categories = {\"Durham\"},\n}\n\nlabels[\"East Anglia\"] = {\n\tdisplay = \"[[w:East Anglia|East Anglia]]\",\n\tregional_categories\
      \ = {\"East Anglian\"},\n}\naliases[\"East Anglian\"] = \"East Anglia\"\naliases[\"East Anglian dialect\"] = \"East Anglia\"\n\nlabels[\"East Midlands\"] = {\n\tdisplay = \"[[w:East Midlands|East Midlands]]\",\n\tregional_categories = {\"East Midlands\"\
      },\n}\naliases[\"East Midlands dialect\"] = \"East Midlands\"\n\nlabels[\"East Palatine\"] = {\n\tdisplay = \"[[w:Palatine German language|Vorderpfälzisch]]\",\n\tregional_categories = {\"East Palatine\"},\n}\naliases[\"Vorderpfälzisch\"] = \"East Palatine\"\
      \n\nlabels[\"Edirne\"] = {\n\tdisplay = \"[[w:Edirne|Edirne]]\",\n\tregional_categories = {\"Edirne\"},\n}\naliases[\"Adrianople\"] = \"Edirne\"\naliases[\"Odrin\"] = \"Edirne\"\n\nlabels[\"England\"] = {\n\tdisplay = \"[[w:England|England]]\",\n\tregional_categories\
      \ = {\"English\"},\n}\n\nlabels[\"Essex\"] = {\n\tdisplay = \"[[w:Essex|Essex]]\",\n\tregional_categories = {\"Essex\"},\n}\naliases[\"Essex dialect\"] = \"Essex\"\n\nlabels[\"Europe\"] = {\n\tdisplay = \"[[w:Europe|Europe]]\",\n\tregional_categories =\
      \ {\"European\"},\n}\n\nlabels[\"Exmoor\"] = {\n\tdisplay = \"[[w:Exmoor|Exmoor]]\",\n\tregional_categories = {\"Devonian\", \"Somerset\"},\n}\n\nlabels[\"Finland\"] = {\n\tdisplay = \"[[w:Finland|Finland]]\",\n\tregional_categories = {\"Finland\"},\n\
      }\naliases[\"Finnish\"] = \"Finland\"\n\nlabels[\"France\"] = {\n\tdisplay = \"[[w:France|France]]\",\n\tregional_categories = {\"French\"},\n}\n\nlabels[\"Föhr-Amrum\"] = {\n\tdisplay = \"[[w:Föhr-Amrum|Föhr-Amrum]]\",\n\tregional_categories = {\"Föhr-Amrum\"\
      },\n}\naliases[\"Föhr-Amrum dialect\"] = \"Föhr-Amrum\"\naliases[\"Feer\"] = \"Föhr-Amrum\"\naliases[\"Fering\"] = \"Föhr-Amrum\"\naliases[\"Oomram\"] = \"Föhr-Amrum\"\naliases[\"Öömrang\"] = \"Föhr-Amrum\"\n\nlabels[\"Formazza\"] = {\n\tdisplay = \"[[w:Formazza|Formazza]]\"\
      ,\n\tplain_categories = {\"Formazza Walser\"},\n}\n\nlabels[\"Galicia\"] = {\n\tregional_categories = {\"Galician\"},\n}\nlabels[\"Galway\"] = {\n\tdisplay = \"[[w:County Galway|Galway]]\",\n\tregional_categories = {\"Galway\"},\n}\n\nlabels[\"Gangwon\"\
      ] = {\n\tdisplay = \"[[w:Gangwon dialect|Gangwon dialect]]\",\n\tregional_categories = {\"Gangwon\"},\n}\naliases[\"Kangwon\"] = \"Gangwon\"\naliases[\"Kangwŏn\"] = \"Gangwon\"\n\nlabels[\"Gascony\"] = {\n\tdisplay = \"[[w:Gascon language|Gascony]]\",\n\
      \tregional_categories = {\"Gascon\"},\n}\n\nlabels[\"Germany\"] = {\n\tregional_categories = {\"German\"},\n}\naliases[\"German\"] = \"Germany\" -- comment this alias out if it causes problems\n\nlabels[\"Gloucestershire\"] = {\n\tdisplay = \"[[w:Gloucestershire|Gloucestershire]]\"\
      ,\n\tregional_categories = {\"Gloucestershire\"},\n}\naliases[\"Gloucestershire dialect\"] = \"Gloucestershire\"\naliases[\"Glos\"] = \"Gloucestershire\"\n\nlabels[\"Granada\"] = {\n\tregional_categories = {\"Granada\"},\n}\nlabels[\"Gressoney\"] = {\n\
      \tdisplay = \"[[w:Gressoney|Gressoney]]\", -- disambig page :-/\n\tplain_categories = {\"Gressoney Walser\"},\n}\n\nlabels[\"Guernsey\"] = {\n\tdisplay = \"[[w:Guernsey|Guernsey]]\",\n\tregional_categories = {\"Guernsey\"},\n}\n\nlabels[\"Gyeonggi\"] =\
      \ {\n\tdisplay = \"[[w:Gyeonggi dialect|Gyeonggi dialect]]\",\n\tregional_categories = {\"Gyeonggi\"},\n}\n\nlabels[\"Gyeongsang\"] = {\n\tdisplay = \"[[w:Gyeongsang dialect|Gyeongsang dialect]]\",\n\tregional_categories = {\"Gyeongsang\"},\n}\n\nlabels[\"\
      The Hague\"] = {\n\tdisplay = \"[[w:The Hague|The Hague]]\",\n\tregional_categories = {\"Hague\"},\n}\naliases[\"Hague\"] = \"The Hague\"\naliases[\"Den Haag\"] = \"The Hague\"\n\nlabels[\"Hamgyŏng\"] = {\n\tdisplay = \"[[w:Hamgyŏng dialect|Hamgyŏng dialect]]\"\
      ,\n\tregional_categories = {\"Hamgyŏng\"},\n}\naliases[\"Hamgyong\"] = \"Hamgyŏng\"\naliases[\"Hamgyeong\"] = \"Hamgyŏng\"\n\nlabels[\"Hartlepool\"] = {\n\tdisplay = \"[[w:Hartlepool|Hartlepool]]\",\n\tregional_categories = {\"Teesside\"},\n}\n\nlabels[\"\
      Heligoland\"] = {\n\tdisplay = \"[[w:Heligoland|Heligoland]]\",\n\tregional_categories = {\"Heligolandic\"},\n}\naliases[\"Heligoland dialect\"] = \"Heligoland\"\naliases[\"Halunder\"] = \"Heligoland\"\naliases[\"Heligolandic\"] = \"Heligoland\"\naliases[\"\
      Helgoland\"] = \"Heligoland\"\naliases[\"Helgoland dialect\"] = \"Heligoland\"\n\nlabels[\"Herefordshire\"] = {\n\tdisplay = \"[[w:Herefordshire|Herefordshire]]\",\n\tregional_categories = {\"Herefordshire\"},\n}\naliases[\"Herefordshire dialect\"] = \"\
      Herefordshire\"\n\nlabels[\"Hessian\"] = {\n\tdisplay = \"[[w:Hessian dialects|Hessian]]\",\n\tregional_categories = {\"Hessian\"},\n}\naliases[\"Hesse\"] = \"Hessian\"\naliases[\"Hessen\"] = \"Hessian\"\naliases[\"Hessisch\"] = \"Hessian\"\n\nlabels[\"\
      Holland\"] = {\n\tdisplay = \"[[w:Holland|Holland]]\",\n\tregional_categories = {\"Hollandic\"},\n}\naliases[\"Hollandic\"] = \"Holland\"\n\nlabels[\"Hwanghae\"] = {\n\tdisplay = \"[[w:Hwanghae dialect|Hwanghae dialect]]\",\n\tregional_categories = {\"\
      Hwanghae\"},\n}\n\nlabels[\"Ireland\"] = {\n\tdisplay = \"[[w:Ireland|Ireland]]\",\n\tregional_categories = {\"Irish\"},\n}\naliases[\"Irish\"] = \"Ireland\"\n\nlabels[\"Isle of Man\"] = {\n\tdisplay = \"[[w:Isle of Man|Isle of Man]]\",\n\tregional_categories\
      \ = {\"Manx\"},\n}\naliases[\"Manx\"] = \"Isle of Man\"\naliases[\"Isle of Mann\"] = \"Isle of Man\"\n\nlabels[\"Isle of Wight\"] = {\n\tdisplay = \"[[w:Isle of Wight|Isle of Wight]]\",\n\tregional_categories = {\"Isle of Wight\"},\n}\n\nlabels[\"Issime\"\
      ] = {\n\tdisplay = \"[[w:Issime|Issime]]\",\n\tplain_categories = {\"Issime Walser\"},\n}\n\nlabels[\"Istanbul\"] = {\n\tdisplay = \"[[w:Istanbul|Istanbul]]\",\n\tregional_categories = {\"Istanbul\"},\n}\naliases[\"İstanbul\"] = \"Istanbul\"\naliases[\"\
      Polis\"] = \"Istanbul\"\n\nlabels[\"Jeju\"] = {\n\tdisplay = \"[[w:Jeju dialect|Jeju dialect]]\",\n\tregional_categories = {\"Jeju\"},\n}\n\nlabels[\"Jeolla\"] = {\n\tdisplay = \"[[w:Jeolla dialect|Jeolla dialect]]\",\n\tregional_categories = {\"Jeolla\"\
      },\n}\n\nlabels[\"Jersey\"] = {\n\tdisplay = \"[[w:Jersey|Jersey]]\",\n\tregional_categories = {\"Jersey\"},\n}\n\nlabels[\"Kazan\"] = {\n\tdisplay = \"[[w:Kazan|Kazan]]\",\n\tregional_categories = {\"Kazan\"},\n}\n\nlabels[\"Kent\"] = {\n\tdisplay = \"\
      [[w:Kent|Kent]]\",\n\tregional_categories = {\"Kentish\"},\n}\naliases[\"Kentish\"] = \"Kent\"\naliases[\"Kentish dialect\"] = \"Kent\"\naliases[\"Kent dialect\"] = \"Kent\"\n\nlabels[\"Kerry\"] = {\n\tdisplay = \"[[w:Gaeltacht#Kerry Gaeltacht|Kerry]]\"\
      ,\n\tregional_categories = {\"Munster\"},\n}\n\nlabels[\"Kırklareli\"] = {\n\tdisplay = \"[[w:Kırklareli|Kırklareli]]\",\n\tregional_categories = {\"Kırklareli\"},\n}\naliases[\"Kirklareli\"] = \"Kırklareli\"\n\nlabels[\"Kölsch\"] = {\n\tdisplay = \"[[w:Colognian\
      \ language|Kölsch]]\",\n\tregional_categories = {\"Kölsch\"},\n}\naliases[\"Colognian\"] = \"Kölsch\"\naliases[\"Cologne\"] = \"Kölsch\"\naliases[\"Köln\"] = \"Kölsch\"\n\nlabels[\"Kukkuzi\"] = {\n\tdisplay = \"[[w:Kukkuzi|Kukkuzi]]\",\n\tregional_categories\
      \ = {\"Kukkuzi\"},\n}\n\nlabels[\"Lancashire\"] = {\n\tdisplay = \"[[w:Lancashire|Lancashire]]\",\n\tregional_categories = {\"Lancashire\"},\n}\n\nlabels[\"Languedoc\"] = {\n\tdisplay = \"[[w:Languedocien dialect|Languedoc]]\",\n\tregional_categories =\
      \ {\"Languedocian\"},\n}\n\nlabels[\"Liechtenstein\"] = {\n\tdisplay = \"[[w:Liechenstein|Liechtenstein]]\",\n\tregional_categories = {\"Liechtenstein\"},\n}\n\nlabels[\"Limousin\"] = {\n\tdisplay = \"[[w:Limousin dialect|Limousin]]\",\n\tregional_categories\
      \ = {\"Limousin\"},\n}\n\nlabels[\"Lincolnshire\"] = {\n\tdisplay = \"[[w:Lincolnshire|Lincolnshire]]\",\n\tregional_categories = {\"Lincolnshire\"},\n}\n\nlabels[\"Liverpool\"] = {\n\tdisplay = \"[[w:Liverpool|Liverpudlian]]\",\n\tregional_categories\
      \ = {\"Liverpudlian\"},\n}\naliases[\"Scouse\"] = \"Liverpool\"\n\nlabels[\"Lombardic\"] = {\n\tdisplay = \"[[w:Lombardic language|Lombardic]]\",\n\tplain_categories = {\"Lombardic\"},\n}\n\nlabels[\"London\"] = {\n\tdisplay = \"[[w:London|London]]\",\n\
      \tregional_categories = {\"London\"},\n}\n\nlabels[\"Lorraine\"] = {\n\tdisplay = \"[[w:Lorraine|Lorraine]]\",\n\tregional_categories = {\"Lorraine\"},\n}\n\nlabels[\"Luserna\"] = {\n\tdisplay = \"[[w:Luserna|Luserna]]\",\n\tregional_categories = {\"Luserna\"\
      },\n}\n\nlabels[\"Luxembourg\"] = {\n\tdisplay = \"[[w:Luxembourg|Luxembourg]]\",\n\tregional_categories = {\"Luxembourgish\"},\n}\naliases[\"Luxembourgish\"] = \"Luxembourg\"\naliases[\"Luxemburg\"] = \"Luxembourg\"\naliases[\"Luxemburgish\"] = \"Luxembourg\"\
      \n\nlabels[\"Lviv\"] = {\n\tdisplay = \"[[w:Lviv|Lviv]]\",\n\tregional_categories = {\"Lviv\"},\n}\naliases[\"Lvov\"] = \"Lviv\"\n\nlabels[\"Maastrichtian\"] = {\n\tdisplay = \"[[w:Maastrichtian dialect|Maastrichtian]]\",\n\tplain_categories = {\"Maastrichtian\
      \ Limburgish\"},\n}\n\nlabels[\"Mallorca\"] = {\n\tdisplay = \"[[w:Mallorca|Mallorca]]\",\n\tregional_categories = {\"Mallorcan\"},\n}\n\nlabels[\"Malta\"] = {\n\tregional_categories = {\"Maltese\"},\n}\n\nlabels[\"Mancunian\"] = {\n\tdisplay = \"[[w:Manchester|Mancunian]]\"\
      ,\n\tregional_categories = {\"Mancunian\"},\n}\naliases[\"Manchester\"] = \"Mancunian\"\naliases[\"Manc\"] = \"Mancunian\"\n\naliases[\"Mantua\"] = \"Mantovano\"\nlabels[\"Mantovano\"] = {\n\tdisplay = \"[[w:Mantua|Mantovano]]\",\n\tregional_categories\
      \ = {\"Mantovano\"},\n}\n\nlabels[\"Maramureș\"] = {\n\tdisplay = \"[[w:Maramureș|Maramureș]]\",\n\tregional_categories = {\"Maramureș\"},\n}\naliases[\"Maramures\"] = \"Maramureș\"\n\nlabels[\"Marseille\"] = {\n\tdisplay = \"[[w:Marseille|Marseille]]\"\
      ,\n\tregional_categories = {\"Marseille\"},\n}\n\nlabels[\"Midlands\"] = {\n\tdisplay = \"[[w:The Midlands|Midlands]]\",\n\tregional_categories = {\"Midlands\"},\n}\naliases[\"Midlands dialect\"] = \"Midlands\"\naliases[\"South Midlands\"] = \"Midlands\"\
      \ -- OK as alias? or a subvariety worth distinguishing?\n\nlabels[\"Minangkabau\"] = {\n\tdisplay = \"[[w:Minangkabau language|Minangkabau Malay]]\",\n\tplain_categories = {\"Minangkabau Malay\"},\n}\n\naliases[\"Mirandola\"] = \"Mirandolese\"\nlabels[\"\
      Mirandolese\"] = {\n\tdisplay = \"[[w:Mirandola|Mirandolese]]\",\n\tregional_categories = {\"Mirandolese\"},\n}\n\naliases[\"Modena\"] = \"Modenese\"\nlabels[\"Modenese\"] = {\n\tdisplay = \"[[w:Modena|Modenese]]\",\n\tregional_categories = {\"Modenese\"\
      },\n}\n\nlabels[\"Moldavia\"] = {\n\tdisplay = \"[[w:Moldavia|Moldavia]]\",\n\tregional_categories = {\"Moldavian\"},\n}\naliases[\"Moldavian\"] = \"Moldavia\"\naliases[\"Moldova\"] = \"Moldavia\"\naliases[\"Moldovan\"] = \"Moldavia\"\n\n\nlabels[\"Montenegro\"\
      ] = {\n\tdisplay = \"[[w:Montenegro|Montenegro]]\",\n\tregional_categories = {\"Montenegrin\"},\n}\naliases[\"Montenegrin\"] = \"Montenegro\"\n\nlabels[\"Moscow\"] = {\n\tdisplay = \"[[w:Moscow|Moscow]]\",\n\tregional_categories = {\"Moscow\"},\n}\n\n\
      labels[\"Moselle Franconian\"] = {\n\tdisplay = \"[[w:Moselle Franconian dialects|Moselle Franconian]]\",\n\tregional_categories = {\"Moselle\"},\n}\naliases[\"Moselfränkisch\"] = \"Moselle Franconian\"\n\nlabels[\"Munster\"] = {\n\tdisplay = \"[[w:Munster|Munster]]\"\
      ,\n\tregional_categories = {\"Munster\"},\n}\n\nlabels[\"Muntenia\"] = {\n\tdisplay = \"[[w:Muntenia|Muntenia]]\",\n\tregional_categories = {\"Muntenian\"},\n}\naliases[\"Muntenian\"] = \"Muntenia\"\n\nlabels[\"Murcia\"] = {\n\tregional_categories = {\"\
      Murcian\"},\n}\n\nlabels[\"Naples\"] = {\n\tdisplay = \"[[w:Naples|Naples]]\",\n\tregional_categories = {\"Neapolitan\"},\n}\naliases[\"Neapolitan\"] = \"Naples\"\n\nlabels[\"Navarre\"] = {\n\tregional_categories = {\"Navarre\"},\n}\nlabels[\"Netherlands\"\
      ] = {\n\tdisplay = \"[[w:Netherlands|Netherlands]]\",\n\tregional_categories = {\"Netherlands\"},\n}\n\nlabels[\"Norfolk\"] = {\n\tdisplay = \"[[w:Norfolk|Norfolk]]\",\n\tregional_categories = {\"Norfolk\"},\n}\n\nlabels[\"North Wales\"] = {\n\tdisplay\
      \ = \"[[w:North Wales|North Wales]]\",\n\tregional_categories = {\"North Wales\"},\n}\n\nlabels[\"Northern and Central Germany\"] = {\n\tdisplay = \"[[w:Northern Germany|northern]] and central Germany\",\n\tregional_categories = {\"Northern\", \"Central\"\
      },\n}\naliases[\"northern and central Germany\"] = \"Northern and Central Germany\"\naliases[\"Northern and Central German\"] = \"Northern and Central Germany\"\naliases[\"northern and central German\"] = \"Northern and Central Germany\"\naliases[\"North\
      \ and Central Germany\"] = \"Northern and Central Germany\"\naliases[\"north and central Germany\"] = \"Northern and Central Germany\"\naliases[\"North and Central German\"] = \"Northern and Central Germany\"\naliases[\"north and central German\"] = \"\
      Northern and Central Germany\"\n\nlabels[\"Northern Crimea\"] = {\n\tdisplay = \"Northern [[w:Crimea|Crimea]]\",\n\tregional_categories = {\"Northern\"},\n}\n\nlabels[\"Northern England\"] = {\n\tdisplay = \"[[w:Northern England|Northern England]]\",\n\
      \tregional_categories = {\"Northern England\"},\n}\naliases[\"northern England\"] = \"Northern England\"\naliases[\"North England\"] = \"Northern England\"\naliases[\"north England\"] = \"Northern England\"\n\nlabels[\"Northern Germany\"] = {\n\tdisplay\
      \ = \"[[w:Northern Germany|Northern Germany]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"northern Germany\"] = \"Northern Germany\"\naliases[\"Northern German\"] = \"Northern Germany\"\naliases[\"northern German\"] = \"Northern Germany\"\
      \naliases[\"North Germany\"] = \"Northern Germany\"\naliases[\"north Germany\"] = \"Northern Germany\"\naliases[\"North German\"] = \"Northern Germany\"\naliases[\"north German\"] = \"Northern Germany\"\n\nlabels[\"Northern Ireland\"] = {\n\tdisplay =\
      \ \"[[w:Northern Ireland|Northern Ireland]]\",\n\tregional_categories = {\"Ulster\"},\n}\naliases[\"Northern Irish\"] = \"Northern Ireland\"\n\nlabels[\"Northern Isles\"] = {\n\tdisplay = \"[[w:Orkney|Orkney]], [[w:Shetland|Shetland]]\",\n\tregional_categories\
      \ = {\"Orkney\", \"Shetland\"},\n}\naliases[\"Insular Scots\"] = \"Northern Isles\"\n\nlabels[\"Northern Italy\"] = {\n\tdisplay = \"[[w:Northern Italy|northern Italy]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"Northern Italian\"] = \"\
      Northern Italy\"\naliases[\"northern Italy\"] = \"Northern Italy\"\naliases[\"northern Italian\"] = \"Northern Italy\"\n\nlabels[\"Northumbria\"] = {\n\tdisplay = \"[[w:Northumbria|Northumbria]]\",\n\tregional_categories = {\"Northumbrian\"},\n}\naliases[\"\
      Northumbrian\"] = \"Northumbria\"\naliases[\"Northumberland\"] = \"Northumbria\"\naliases[\"Northeast England\"] = \"Northumbria\"\naliases[\"North-East England\"] = \"Northumbria\"\naliases[\"North East England\"] = \"Northumbria\"\n\nlabels[\"Nottinghamshire\"\
      ] = {\n\tdisplay = \"[[w:Nottinghamshire|Nottinghamshire]]\",\n\tregional_categories = {\"Nottinghamshire\"},\n}\naliases[\"Nottinghamshire dialect\"] = \"Nottinghamshire\"\n\nlabels[\"Oltenia\"] = {\n\tdisplay = \"[[w:Oltenia|Oltenia]]\",\n\tregional_categories\
      \ = {\"Oltenian\"},\n}\naliases[\"Oltenian\"] = \"Oltenia\"\n\nlabels[\"Orenburg\"] = {\n\tdisplay = \"[[w:Orenburg|Orenburg]]\",\n\tregional_categories = {\"Orenburg\"},\n}\n\nlabels[\"Orkney\"] = {\n\tdisplay = \"[[w:Orkney|Orkney]]\",\n\tregional_categories\
      \ = {\"Orkney\"},\n}\naliases[\"Orcadian\"] = \"Orkney\"\n\nlabels[\"Oxfordshire\"] = {\n\tdisplay = \"[[w:Oxfordshire|Oxfordshire]]\",\n\tregional_categories = {\"Oxfordshire\"},\n}\naliases[\"Oxfordshire dialect\"] = \"Oxfordshire\"\n\nlabels[\"Pahang\"\
      ] = {\n\tdisplay = \"[[w:Pahang Malay|Pahang Malay]]\",\n\tplain_categories = {\"Pahang Malay\"},\n}\n\nlabels[\"Palatine German\"] = {\n\tdisplay = \"[[w:Palatine German language|Palatine]]\",\n\tregional_categories = {\"Palatine\"},\n}\naliases[\"Palatinate\
      \ German\"] = \"Palatine German\"\naliases[\"Palatinate\"] = \"Palatine German\"\naliases[\"Palatine\"] = \"Palatine German\" -- remove if other languages have 'palatine' varieties\naliases[\"Pälzisch\"] = \"Palatine German\"\naliases[\"Pfälzisch\"] =\
      \ \"Palatine German\"\n\naliases[\"Parma\"] = \"Parmigiano\"\nlabels[\"Parmigiano\"] = {\n\tdisplay = \"[[w:Parma|Parmigiano]]\",\n\tregional_categories = {\"Parmigiano\"},\n}\n\naliases[\"Piacenza\"] = \"Piacentino\"\nlabels[\"Piacentino\"] = {\n\tdisplay\
      \ = \"[[w:Piacenza|Piacentino]]\",\n\tregional_categories = {\"Piacentino\"},\n}\n\nlabels[\"Picardy\"] = {\n\tdisplay = \"[[w:Picardy|Picardy]]\",\n\tregional_categories = {\"Picard\"},\n}\n\nlabels[\"Portugal\"] = {\n\tdisplay = \"[[w:Portugal|Portugal]]\"\
      ,\n\tregional_categories = {\"Portuguese\"},\n}\n\nlabels[\"Provence\"] = {\n\tdisplay = \"[[w:Provençal dialect|Provence]]\",\n\tregional_categories = {\"Provençal\"},\n}\n\nlabels[\"Prussia\"] = {\n\tdisplay = \"[[w:Prussia (region)|Prussia]]\",\n\t\
      regional_categories = {\"Prussian\"},\n}\naliases[\"Prussian\"] = \"Prussia\"\naliases[\"East Prussia\"] = \"Prussia\" -- aliased for now; if many entries use it, it can be separated\naliases[\"East Prussian\"] = \"Prussia\"\naliases[\"West Prussia\"]\
      \ = \"Prussia\"\naliases[\"West Prussian\"] = \"Prussia\"\n\nlabels[\"Pskov\"] = {\n\tdisplay = \"[[w:Pskov|Pskov]]\",\n\tregional_categories = {\"Pskov\"},\n}\naliases[\"Reggio Emilia\"] = \"Reggiano\"\n\nlabels[\"P'yŏng'an\"] = {\n\tdisplay = \"[[w:Pyongan\
      \ dialect|P'yŏng'an dialect]]\",\n\tregional_categories = {\"P'yŏng'an\"},\n}\naliases[\"Pyongan\"] = \"P'yŏng'an\"\naliases[\"Pyong'an\"] = \"P'yŏng'an\"\naliases[\"Pyŏngan\"] = \"P'yŏng'an\"\naliases[\"P'yŏngan\"] = \"P'yŏng'an\"\naliases[\"Pyeongan\"\
      ] = \"P'yŏng'an\"\naliases[\"Pyeong'an\"] = \"P'yŏng'an\"\naliases[\"Pyeong-an\"] = \"P'yŏng'an\"\n\nlabels[\"Reggiano\"] = {\n\tdisplay = \"[[w:Reggio Emilia|Reggiano]]\",\n\tregional_categories = {\"Reggiano\"},\n}\n\nlabels[\"Rimella\"] = {\n\tdisplay\
      \ = \"[[w:Rimella|Rimella]]\",\n\tplain_categories = {\"Rimella Walser\"},\n}\n\nlabels[\"Ripuarian\"] = {\n\tdisplay = \"[[w:Ripuarian language|Ripuarian]]\",\n\tregional_categories = {\"Ripuarian\"},\n}\naliases[\"Ripuarian Franconian\"] = \"Ripuarian\"\
      \naliases[\"Ripuarisch\"] = \"Ripuarian\"\n\nlabels[\"Romanesco\"] = {\n\tdisplay = \"[[w:Romanesco dialect|Rome]]\",\n\tregional_categories = {\"Romanesco\"},\n\tlanguages = { \"it\" },\n}\naliases[\"Roman Italian\"] = \"Romanesco\"\naliases[\"Romanesco\
      \ Italian\"] = \"Romanesco\"\naliases[\"Roman\"] = \"Romanesco\"\naliases[\"Rome\"] = \"Romanesco\"\n\nlabels[\"Rotterdam\"] = {\n\tdisplay = \"[[w:Rotterdam|Rotterdam]]\",\n\tregional_categories = {\"Rotterdam\"},\n}\naliases[\"Rotterdams\"] = \"Rotterdam\"\
      \n\nlabels[\"Saint Ouen\"] = {\n\tdisplay = \"[[w:Saint Ouen, Jersey|Saint Ouën]]\",\n\tregional_categories = {\"Saint Ouënnais\"},\n}\n\nlabels[\"Saint Petersburg\"] = {\n\tdisplay = \"[[w:Saint Petersburg|Saint Petersburg]]\",\n\tregional_categories\
      \ = {\"Saint Petersburg\"},\n}\naliases[\"St Petersburg\"] = \"Saint Petersburg\"\naliases[\"St. Petersburg\"] = \"Saint Petersburg\"\n\nlabels[\"Sappada\"] = {\n\tdisplay = \"[[w:Sappada|Sappada]]\",\n\tregional_categories = {\"Sappada\"},\n}\n\nlabels[\"\
      Sark\"] = {\n\tdisplay = \"[[w:Sercquiais|Sark]]\",\n\tregional_categories = {\"Sarkese\"},\n}\n\nlabels[\"Sauris\"] = {\n\tdisplay = \"[[w:Sauris|Sauris]]\",\n\tregional_categories = {\"Sauris\"},\n}\n\nlabels[\"Scania\"] = {\n\tdisplay = \"[[w:Scania|Scania]]\"\
      ,\n\tregional_categories = {\"Scanian\"},\n}\naliases[\"Skanian\"] = \"Scania\"\naliases[\"Skåne\"] = \"Scania\"\n\nlabels[\"Scotland\"] = {\n\tdisplay = \"[[w:Scotland|Scotland]]\",\n\tregional_categories = {\"Scottish\"},\n}\naliases[\"Scottish\"] =\
      \ \"Scotland\"\n\nlabels[\"Sense\"] = {\n\tdisplay = \"[[w:Sense District|Sense]]\",\n\tregional_categories = {\"Sensler\"},\n}\naliases[\"Sensler\"] = \"Sense\"\naliases[\"Sense District\"] = \"Sense\"\naliases[\"Senslerdeutsch\"] = \"Sense\"\n\nlabels[\"\
      Serbia\"] = {\n\tdisplay = \"[[w:Serbia|Serbia]]\",\n\tregional_categories = {\"Serbian\"},\n}\naliases[\"Serbian\"] = \"Serbia\"\n\nlabels[\"Sette Comuni\"] = {\n\tdisplay = \"[[w:Sette Comuni|Sette Comuni]]\",\n\tplain_categories = {\"Sette Comuni Cimbrian\"\
      },\n}\naliases[\"7\"] = \"Sette Comuni\"\naliases[\"Seven Comunes\"] = \"Sette Comuni\"\n\nlabels[\"Shetland\"] = {\n\tdisplay = \"[[w:Shetland|Shetland]]\",\n\tregional_categories = {\"Shetland\"},\n}\naliases[\"Shetland islands\"] = \"Shetland\"\naliases[\"\
      Shetland Islands\"] = \"Shetland\"\naliases[\"Shetlandic\"] = \"Shetland\"\naliases[\"Shetlands\"] = \"Shetland\"\n\nlabels[\"Silesia\"] = {\n\tdisplay = \"[[w:Silesia|Silesia]]\",\n\tregional_categories = {\"Silesian\"},\n}\naliases[\"Silesian\"] = \"\
      Silesia\"\naliases[\"Silesian German\"] = \"Silesia\" -- might be appropriate to split German/Polish? but why?\naliases[\"Lower Silesian\"] = \"Silesia\" -- ... would any entries be categorized different?\naliases[\"Upper Silesian\"] = \"Silesia\"\n\n\
      labels[\"Somerset\"] = {\n\tdisplay = \"[[w:Somerset|Somerset]]\",\n\tregional_categories = {\"Somerset\"},\n}\naliases[\"Somerset dialect\"] = \"Somerset\"\n\nlabels[\"South Asia\"] = {\n\tdisplay = \"[[w:South Asia|South Asia]]\",\n\tregional_categories\
      \ = {\"South Asian\"},\n}\n\nlabels[\"South Hessian\"] = {\n\tdisplay = \"South Hessian\",\n\tregional_categories = {\"South Hessian\"},\n}\naliases[\"South Hesse\"] = \"South Hessian\"\naliases[\"south Hesse\"] = \"South Hessian\"\naliases[\"South Hessen\"\
      ] = \"South Hessian\"\naliases[\"south Hessen\"] = \"South Hessian\"\naliases[\"south Hessian\"] = \"South Hessian\"\naliases[\"Südhessisch\"] = \"South Hessian\"\n\nlabels[\"South Wales\"] = {\n\tdisplay = \"[[w:South Wales|South Wales]]\",\n\tregional_categories\
      \ = {\"South Wales\"},\n}\n\nlabels[\"Southern England\"] = {\n\tdisplay = \"[[w:Southern England|Southern England]]\",\n\tregional_categories = {\"Southern England\"},\n}\naliases[\"southern England\"] = \"Southern England\"\naliases[\"South England\"\
      ] = \"Southern England\"\naliases[\"south England\"] = \"Southern England\"\n\nlabels[\"Southern Italy\"] = {\n\tdisplay = \"[[w:Southern Italy|southern Italy]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Southern Italian\"] = \"Southern\
      \ Italy\"\naliases[\"southern Italy\"] = \"Southern Italy\"\naliases[\"southern Italian\"] = \"Southern Italy\"\n\nlabels[\"Southern Russia\"] = {\n\tdisplay = \"[[w:Southern Russia|Southern Russia]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"\
      South of Russia\"] = \"Southern Russia\"\naliases[\"south of Russia\"] = \"Southern Russia\"\naliases[\"South Russia\"] = \"Southern Russia\"\naliases[\"Southern Russian\"] = \"Southern Russia\"\naliases[\"southern Russia\"] = \"Southern Russia\"\naliases[\"\
      southern Russian\"] = \"Southern Russia\"\n\nlabels[\"South Tyrol\"] = {\n\tdisplay = \"[[w:South Tyrol|South Tyrol]]\",\n\tregional_categories = {\"South Tyrolean\"},\n}\naliases[\"Alto Adige\"] = \"South Tyrol\"\naliases[\"South Tirol\"] = \"South Tyrol\"\
      \naliases[\"South Tirolean\"] = \"South Tyrol\"\naliases[\"South Tirolese\"] = \"South Tyrol\"\naliases[\"South Tyrolean\"] = \"South Tyrol\"\naliases[\"South Tyrolese\"] = \"South Tyrol\"\n\nlabels[\"Spain\"] = {\n\tdisplay = \"[[w:Spain|Spain]]\",\n\t\
      regional_categories = {\"Spanish\"},\n}\n\nlabels[\"Suffolk\"] = {\n\tdisplay = \"[[w:Suffolk|Suffolk]]\",\n\tregional_categories = {\"Suffolk\"},\n}\naliases[\"Suffolk dialect\"] = \"Suffolk\"\n\nlabels[\"Suðuroy\"] = {\n\tdisplay = \"[[w:Suðuroy|Suð\
      uroy]]\",\n\tregional_categories = {\"Suðuroy\"},\n}\n\nlabels[\"Sweden\"] = {\n\tdisplay = \"[[w:Sweden|Sweden]]\",\n\tregional_categories = {\"Swedish\"},\n}\n\nlabels[\"Switzerland\"] = {\n\tdisplay = \"[[w:Switzerland|Switzerland]]\",\n\tregional_categories\
      \ = {\"Switzerland\"},\n}\naliases[\"Swiss\"] = \"Switzerland\"\naliases[\"Swiss German\"] = \"Switzerland\" -- some German entries use this alias; let -sche know if it causes problems\n\nlabels[\"Sylt\"] = {\n\tdisplay = \"[[w:Sylt|Sylt]]\",\n\tregional_categories\
      \ = {\"Sylt\"},\n}\naliases[\"Söl\"] = \"Sylt\"\naliases[\"Sölring\"] = \"Sylt\"\naliases[\"Söl'\"] = \"Sylt\"\naliases[\"Söl'ring\"] = \"Sylt\"\n\nlabels[\"Teesside\"] = {\n\tdisplay = \"[[w:Teesside|Teesside]]\",\n\tregional_categories = {\"Teesside\"\
      },\n}\n\nlabels[\"Terengganu\"] = {\n\tdisplay = \"[[w:Terengganu Malay|Terengganu Malay]]\",\n\tplain_categories = {\"Terengganu Malay\"},\n}\n\nlabels[\"Thirteen Communities\"] = {\n\tdisplay = \"[[w:Thirteen Communities|Thirteen Communities]]\",\n\t\
      plain_categories = {\"Thirteen Communities Cimbrian\"},\n}\naliases[\"13\"] = \"Thirteen Communities\"\naliases[\"13 Communities\"] = \"Thirteen Communities\"\n\nlabels[\"Timau\"] = {\n\tdisplay = \"[[w:Paluzza|Timau]]\",\n\tregional_categories = {\"Timau\"\
      },\n}\n\nlabels[\"Torlakian\"] = {\n        display = \"[[w:Torlakian dialect|Torlakian]]\",\n        plain_categories = {\"Torlakian Serbo-Croatian\"},\n}\n\nlabels[\"Transylvania\"] = {\n\tdisplay = \"[[w:Transylvania|Transylvania]]\",\n\tregional_categories\
      \ = {\"Transylvanian\"},\n}\naliases[\"Transilvania\"] = \"Transylvania\"\naliases[\"Transylvanian\"] = \"Transylvania\"\n\nlabels[\"Tuscany\"] = {\n\tdisplay = \"[[w:Tuscan dialect|Tuscany]]\",\n\tregional_categories = {\"Tuscan\"},\n}\naliases[\"Tuscan\"\
      ] = \"Tuscany\"\n\nlabels[\"Ukraine\"] = {\n\tdisplay = \"[[w:Ukraine|Ukraine]]\",\n\tregional_categories = {\"Ukrainian\"},\n}\n\nlabels[\"Ulster\"] = {\n\tdisplay = \"[[w:Ulster|Ulster]]\",\n\tregional_categories = {\"Ulster\"},\n}\n\nlabels[\"Upper\
      \ Saxony\"] = {\n\tdisplay = \"[[w:Upper Saxony|Upper Saxony]]\",\n\tregional_categories = {\"Upper Saxon\"},\n}\naliases[\"Upper Saxon\"] = \"Upper Saxony\"\naliases[\"Upper Saxon German\"] = \"Upper Saxony\" -- gmw-ecg dialect; cf Silesian; move to data/subvarieties?\n\
      \nlabels[\"Uri\"] = {\n\tdisplay = \"[[w:Canton of Uri|Uri]]\",\n\tregional_categories = {\"Urner\"},\n}\naliases[\"Urseren\"] = \"Uri\"\naliases[\"Urner\"] = \"Uri\"\naliases[\"Urnerdeutsch\"] = \"Uri\"\n\nlabels[\"Valencia\"] = {\n\tdisplay = \"[[w:Valencia|Valencia]]\"\
      ,\n\tregional_categories = {\"Valencian\"},\n}\naliases[\"Valencian\"] = \"Valencia\"\n\nlabels[\"Venice\"] = {\n\tdisplay = \"[[w:Venice|Venice]]\",\n\tregional_categories = {\"Venetian\"},\n}\naliases[\"Venetian\"] = \"Venice\"\n\nlabels[\"Vienna\"]\
      \ = {\n\tdisplay = \"[[w:Vienna|Vienna]]\",\n\tregional_categories = {\"Viennese\"},\n}\naliases[\"Viennese\"] = \"Vienna\"\n\nlabels[\"Vojvodina\"] = {\n\tdisplay = \"[[w:Vojvodina|Vojvodina]]\",\n\tregional_categories = {\"Vojvodina\"},\n}\n\nlabels[\"\
      Wales\"] = {\n\tdisplay = \"[[w:Wales|Wales]]\",\n\tregional_categories = {\"Welsh\"},\n}\naliases[\"Welsh\"] = \"Wales\"\n\nlabels[\"Wallonia\"] = {\n\tdisplay = \"[[w:Wallonia|Wallonia]]\",\n\tregional_categories = {\"Wallonian\"},\n}\n\nlabels[\"Waterford\"\
      ] = {\n\tdisplay = \"[[w:Gaeltacht na nDéise|Waterford]]\",\n\tregional_categories = {\"Munster\"},\n}\n\nlabels[\"Wearside\"] = {\n\tdisplay = \"[[w:Wearside|Wearside]]\",\n\tregional_categories = {\"Wearside\"},\n}\n\nlabels[\"Wenzhou\"] = {\n\tdisplay\
      \ = \"[[w:Wenzhounese|Wenzhou]]\",\n\tregional_categories = {\"Wenzhounese\"},\n}\naliases[\"Wenzhounese\"] = \"Wenzhou\"\naliases[\"Wenzhou Wu\"] = \"Wenzhou\"\naliases[\"Oujiang\"] = \"Wenzhou\"\n\nlabels[\"West Country\"] = {\n\tdisplay = \"[[w:West\
      \ Country|West Country]]\",\n\tregional_categories = {\"West Country\"},\n}\naliases[\"West England\"] = \"West Country\"\naliases[\"west England\"] = \"West Country\"\naliases[\"Western England\"] = \"West Country\"\naliases[\"western England\"] = \"\
      West Country\"\naliases[\"West of England\"] = \"West Country\"\n\nlabels[\"West Midlands\"] = {\n\tdisplay = \"[[w:West Midlands|West Midlands]]\",\n\tregional_categories = {\"West Midlands\"},\n}\n\nlabels[\"West Palatine\"] = {\n\tdisplay = \"[[w:Palatine\
      \ German language|Westpfälzisch]]\",\n\tregional_categories = {\"West Palatine\"},\n}\naliases[\"Westpfälzisch\"] = \"West Palatine\"\n\nlabels[\"Western Ukraine\"] = {\n\tdisplay = \"[[w:Western Ukraine|Western Ukraine]]\",\n\tregional_categories = {\"\
      Western\"},\n}\n\nlabels[\"Wiltshire\"] = {\n\tdisplay = \"[[w:Wiltshire|Wiltshire]]\",\n\tregional_categories = {\"Wiltshire\"},\n}\naliases[\"Wiltshire dialect\"] = \"Wiltshire\"\naliases[\"Wilts\"] = \"Wiltshire\"\naliases[\"Wilts dialect\"] = \"Wiltshire\"\
      \n\nlabels[\"Yorkshire\"] = {\n\tdisplay = \"[[w:Yorkshire|Yorkshire]]\",\n\tregional_categories = {\"Yorkshire\"},\n}\n\n\n-- Australia and Oceania\n\nlabels[\"Australia\"] = {\n\tdisplay = \"[[w:Australia|Australia]]\",\n\tregional_categories = {\"Australian\"\
      },\n}\naliases[\"AU\"] = \"Australia\"\naliases[\"Australian\"] = \"Australia\"\n\nlabels[\"Hawaii\"] = {\n\tdisplay = \"[[w:Hawaii|Hawaii]]\",\n\tregional_categories = {\"Hawaiian\"},\n}\n\nlabels[\"Kauaʻi\"] = {\n\tdisplay = \"[[w:Kauai|Kauaʻi]]\",\n\
      \tregional_categories = {\"Kauaʻi\"},\n}\naliases[\"Kauai\"] = \"Kauaʻi\"\naliases[\"Kaua'i\"] = \"Kauaʻi\"\n\nlabels[\"Lānaʻi\"] = {\n\tdisplay = \"[[w:Lanai|Lānaʻi]]\",\n\tregional_categories = {\"Lānaʻi\"},\n}\naliases[\"Lanaʻi\"] = \"Lānaʻi\"\naliases[\"\
      Lanai\"] = \"Lānaʻi\"\naliases[\"Lāna'i\"] = \"Lānaʻi\"\naliases[\"Lana'i\"] = \"Lānaʻi\"\n\nlabels[\"Maui\"] = {\n\tdisplay = \"[[w:Maui|Maui]]\",\n\tregional_categories = {\"Maui\"},\n}\n\nlabels[\"Mekong Delta\"] = {\n\tdisplay = \"[[w:Mekong Delta|Mekong\
      \ Delta dialect]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Mekong Delta dialect\"] = \"Mekong Delta\"\n\nlabels[\"Molokaʻi\"] = {\n\tdisplay = \"[[w:Molokai|Molokaʻi]]\",\n\tregional_categories = {\"Molokaʻi\"},\n}\naliases[\"Molokai\"\
      ] = \"Molokaʻi\"\naliases[\"Moloka'i\"] = \"Molokaʻi\"\n\nlabels[\"New Zealand\"] = {\n\tdisplay = \"[[w:New Zealand|New Zealand]]\",\n\tregional_categories = {\"New Zealand\"},\n}\naliases[\"NZ\"] = \"New Zealand\"\n\nlabels[\"Niʻihau\"] = {\n\tdisplay\
      \ = \"[[w:Niihau|Niʻihau]]\",\n\tregional_categories = {\"Niʻihau\"},\n}\naliases[\"Ni'ihau\"] = \"Niʻihau\"\naliases[\"Niihau\"] = \"Niʻihau\"\n\n\n-- Other/unclear\n\nlabels[\"Antarctica\"] = {\n\tdisplay = \"[[w:Antarctica|Antarctica]]\",\n\tregional_categories\
      \ = {\"Antarctic\"},\n}\naliases[\"Antarctic\"] = \"Antarctica\"\naliases[\"South Pole\"] = \"Antarctica\"\n\nlabels[\"Antilles\"] = {\n\tregional_categories = {\"Antilles\"},\n}\n\nlabels[\"Commonwealth\"] = {\n\tdisplay = \"[[Commonwealth of Nations]]\"\
      ,\n\tregional_categories = {\"Commonwealth\"},\n}\n\nlabels[\"Kitti\"] = {\n\tregional_categories = {\"Kitti\"},\n}\n\n\n-- Language specific\n\nlabels[\"African American Vernacular English\"] = {\n\tdisplay = \"[[w:African American Vernacular English|African\
      \ American Vernacular]]\",\n\tregional_categories = {\"African American Vernacular\"},\n}\naliases[\"AAVE\"] = \"African American Vernacular English\"\naliases[\"ebonics\"] = \"African American Vernacular English\"\n\nlabels[\"Anglo-Norman\"] = {\n\tdisplay\
      \ = \"[[w:Anglo-Norman language|Anglo-Norman]]\",\n\tplain_categories = {\"Anglo-Norman Old French\"},\n}\n\nlabels[\"Australian English\"] = {\n\tdisplay = \"[[w:Australian English|Australia]]\",\n\tplain_categories = {\"Australian English\"},\n}\n\n\
      labels[\"Akhmimic\"] = {\n\tdisplay = \"[[w:Coptic language#Akhmimic|Akhmimic]]\",\n\tplain_categories = {\"Akhmimic Coptic\"},\n}\n\nlabels[\"Ararat\"] = {\n\tdisplay = \"[[w:Araratian dialect|Ararat]]\",\n\tplain_categories = {\"Ararat Armenian\"},\n\
      }\n\nlabels[\"Balhae\"] = {\n\tplain_categories = {\"Balhae Old Korean\"},\n}\n\nlabels[\"Balkar\"] = {\n\tplain_categories = {\"Balkar\"},\n}\n\nlabels[\"Birmingham\"] = {\n\tdisplay = \"[[wikipedia:Brummie|Birmingham]]\",\n\tplain_categories = {\"Birmingham\
      \ English\"},\n}\naliases[\"Brummie\"] = \"Birmingham\"\naliases[\"Brummy\"] = \"Birmingham\"\n\nlabels[\"Bohairic\"] = {\n\tdisplay = \"[[w:Coptic language#Bohairic|Bohairic]]\",\n\tplain_categories = {\"Bohairic Coptic\"},\n}\naliases[\"Memphitic\"]\
      \ = \"Bohairic\"\n\nlabels[\"Bokmål\"] = {\n\tdisplay = \"[[w:Bokmål|Bokmål]]\",\n\tplain_categories = {\"Norwegian Bokmål\"},\n}\n\nlabels[\"Border Scots\"] = {\n\tplain_categories = {\"Border Scots\"},\n}\n\nlabels[\"British Contemporary Latin\"] = {\n\
      \tdisplay = \"British [[w:Contemporary Latin|Contemporary Latin]]\",\n\tplain_categories = {\"British Contemporary Latin\"},\n}\naliases[\"Contemporary Anglo-Latin\"] = \"British Contemporary Latin\"\naliases[\"Contemporary British\"] = \"British Contemporary\
      \ Latin\"\n\nlabels[\"British Late Latin\"] = {\n\tdisplay = \"British [[w:Late Latin|Late Latin]]\",\n\tplain_categories = {\"British Late Latin\"},\n}\naliases[\"Late Anglo-Latin\"] = \"British Late Latin\"\naliases[\"Late British\"] = \"British Late\
      \ Latin\"\n\nlabels[\"British Medieval Latin\"] = {\n\tdisplay = \"British [[w:Medieval Latin|Medieval Latin]]\",\n\tplain_categories = {\"British Medieval Latin\"},\n}\naliases[\"British Mediaeval Latin\"] = \"British Medieval Latin\"\naliases[\"Mediaeval\
      \ Anglo-Latin\"] = \"British Medieval Latin\"\naliases[\"Mediaeval British\"] = \"British Medieval Latin\"\naliases[\"Medieval Anglo-Latin\"] = \"British Medieval Latin\"\naliases[\"Medieval British\"] = \"British Medieval Latin\"\n\nlabels[\"British New\
      \ Latin\"] = {\n\tdisplay = \"British [[w:New Latin|New Latin]]\",\n\tplain_categories = {\"British New Latin\"},\n}\naliases[\"New Anglo-Latin\"] = \"British New Latin\"\naliases[\"New British\"] = \"British New Latin\"\n\nlabels[\"British Renaissance\
      \ Latin\"] = {\n\tdisplay = \"British [[w:Renaissance Latin|Renaissance Latin]]\",\n\tplain_categories = {\"British Renaissance Latin\"},\n}\naliases[\"Renaissance Anglo-Latin\"] = \"British Renaissance Latin\"\naliases[\"Renaissance British\"] = \"British\
      \ Renaissance Latin\"\n\nlabels[\"British Vulgar Latin\"] = {\n\tdisplay = \"[[w:British Vulgar Latin|British Vulgar Latin]]\",\n\tplain_categories = {\"British Vulgar Latin\"},\n}\naliases[\"Vulgar Anglo-Latin\"] = \"British Vulgar Latin\"\naliases[\"\
      Vulgar British\"] = \"British Vulgar Latin\"\n\nlabels[\"Canadian English\"] = {\n\tdisplay = \"[[w:Canadian English|Canada]]\",\n\tplain_categories = {\"Canadian English\"},\n}\n\nlabels[\"Canadian spelling\"] = {\n\tdisplay = \"[[w:Canadian spelling|Canadian]]\"\
      ,\n\tplain_categories = {\"Canadian English forms\"},\n}\n\nlabels[\"Cantonese\"] = {\n\tdisplay = \"[[w:Cantonese|Cantonese]]\",\n\tplain_categories = {\"Cantonese Chinese\"},\n}\n\nlabels[\"Central Plains Mandarin\"] = {\n\tdisplay = \"[[w:Central Plains\
      \ Mandarin|Central Plains Mandarin]]\",\n\tplain_categories = {\"Central Plains Mandarin\"},\n}\naliases[\"Zhongyuan Mandarin\"] = \"Central Plains Mandarin\"\n\nlabels[\"Chakavian\"] = {\n\tdisplay = \"[[Chakavian]]\",\n\tplain_categories = {\"Chakavian\
      \ Serbo-Croatian\"},\n}\naliases[\"Čakavian\"] = \"Chakavian\"\n\nlabels[\"Cham Albanian\"] = {\n\tdisplay = \"[[w:Cham Albanian dialect|Cham]]\",\n\tplain_categories = {\"Cham Albanian\"},\n}\n\nlabels[\"Chinglish\"] = {\n\tdisplay = \"[[w:Chinglish|Chinglish]]\"\
      ,\n\tplain_categories = {\"Chinglish\"},\n}\n\nlabels[\"Cockney\"] = {\n\tdisplay = \"[[w:Cockney#Speech|Cockney]]\",\n\tplain_categories = {\"Cockney English\"},\n}\n\nlabels[\"Cois Fharraige\"] = {\n\tdisplay = \"[[w:Gaeltacht Cois Fharraige|Cois Fharraige]]\"\
      ,\n\tplain_categories = {\"Cois Fharraige Irish\"},\n}\naliases[\"Cois Fhairrge\"] = \"Cois Fharraige\"\n\nlabels[\"Dari\"] = {\n\tdisplay = \"[[w:Dari (Persian)|Dari (Afghanistan)]]\",\n\tplain_categories = {\"Dari Persian\"},\n}\n\nlabels[\"De'kwana\"\
      ] = {\n\tdisplay = \"De'kwana dialect\",\n\tplain_categories = {\"De'kwana Maquiritari\"},\n}\naliases[\"De'kwana dialect\"] = \"De'kwana\"\n\nlabels[\"dialectal Mandarin\"] = {\n\tdisplay = \"dialectal [[Mandarin]]\",\n\tplain_categories = {\"Mandarin\
      \ Chinese\"},\n}\nlabels[\"dialectal Cantonese\"] = {\n\tdisplay = \"dialectal [[Cantonese]]\",\n\tplain_categories = {\"Cantonese Chinese\"},\n}\nlabels[\"dialectal Hakka\"] = {\n\tdisplay = \"dialectal [[Hakka]]\",\n\tplain_categories = {\"Hakka Chinese\"\
      },\n}\nlabels[\"dialectal Gan\"] = {\n\tdisplay = \"dialectal [[Gan]]\",\n\tplain_categories = {\"Gan Chinese\"},\n}\nlabels[\"dialectal Jin\"] = {\n\tdisplay = \"dialectal [[Jin]]\",\n\tplain_categories = {\"Jin Chinese\"},\n}\nlabels[\"dialectal Min\
      \ Dong\"] = {\n\tdisplay = \"dialectal [[Min Dong]]\",\n\tplain_categories = {\"Min Dong Chinese\"},\n}\nlabels[\"dialectal Min Nan\"] = {\n\tdisplay = \"dialectal [[Min Nan]]\",\n\tplain_categories = {\"Min Nan Chinese\"},\n}\nlabels[\"dialectal Wu\"\
      ] = {\n\tdisplay = \"dialectal [[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n}\nlabels[\"dialectal Xiang\"] = {\n\tdisplay = \"dialectal [[Xiang]]\",\n\tplain_categories = {\"Xiang Chinese\"},\n}\n\nlabels[\"Digor\"] = {\n\tdisplay = \"Digor dialect\"\
      ,\n\tplain_categories = {\"Digor Ossetian\"},\n}\naliases[\"Digor dialect\"] = \"Digor\"\n\nlabels[\"Doric Scots\"] = {\n\tdisplay = \"[[w:Doric dialect (Scotland)|Doric]]\",\n\tplain_categories = {\"Doric Scots\"},\n}\n\nlabels[\"East Anglian English\"\
      ] = {\n\tdisplay = \"[[w:East Anglian English|East Anglia]]\",\n\tplain_categories = {\"East Anglian English\"},\n}\n\nlabels[\"East Frisian\"] = {\n\tdisplay = \"[[w:East Frisian Low Saxon|East Frisian]]\",\n\tplain_categories = {\"East Frisian Low German\"\
      },\n} -- for East Frisian dialectal German Low German, not the Frisianic language\n\nlabels[\"East Germanic\"] = {\n\tdisplay = \"[[w:East Germanic languages|East Germanic]]\",\n\tplain_categories = {\"East Proto-Germanic\"},\n}\n\nlabels[\"East Midlands\
      \ English\"] = {\n\tdisplay = \"[[w:East Midlands English|East Midlands]]\",\n\tplain_categories = {\"East Midlands English\"},\n}\n\nlabels[\"Eastern Armenian\"] = {\n\tdisplay = \"[[w:Eastern Armenian|Eastern Armenian]]\",\n\tplain_categories = {\"Eastern\
      \ Armenian\"},\n}\n\nlabels[\"Eastern Catalan\"] = {\n\tdisplay = \"[[w:Catalan dialects|Eastern Catalan]]\",\n\tplain_categories = {\"Eastern Catalan\"},\n}\n\nlabels[\"Ecclesiastical Latin\"] = {\n\tdisplay = \"[[w:Ecclesiastical Latin|Ecclesiastical\
      \ Latin]]\",\n\tplain_categories = {\"Ecclesiastical Latin\"},\n}\naliases[\"Church Latin\"] = \"Ecclesiastical Latin\"\n\nlabels[\"Dungan\"] = {\n\tdisplay = \"[[w:Dungan language|Dungan]]\",\n\tplain_categories = {\"Dungan Chinese\"},\n}\n\nlabels[\"\
      Ekavian\"] = {\n\tdisplay = \"[[Ekavian]]\",\n}\n\nlabels[\"European French\"] = {\n\tdisplay = \"[[w:European French|Europe]]\",\n\tplain_categories = {\"European French\"},\n}\n\nlabels[\"Fayyumic\"] = {\n\tdisplay = \"[[w:Coptic language#Fayyumic|Fayyumic]]\"\
      ,\n\tplain_categories = {\"Fayyumic Coptic\"},\n}\naliases[\"Faiyumic\"] = \"Fayyumic\"\naliases[\"Bashmuric\"] = \"Fayyumic\"\n\nlabels[\"East and West Flanders\"] = {\n\tdisplay = \"[[w:East Flanders|East]] and [[w:West Flanders|West Flanders]]\",\n\t\
      plain_categories = {\"East and West Flemish Dutch\"},\n}\naliases[\"Flanders\"] = \"East and West Flanders\"\naliases[\"Flemish\"] = \"East and West Flanders\"\n\nlabels[\"Gan\"] = {\n\tdisplay = \"[[w:Gan Chinese|Gan]]\",\n\tplain_categories = {\"Gan\
      \ Chinese\"},\n}\n\nlabels[\"Geordie\"] = {\n\tdisplay = \"[[w:Geordie|Geordie]]\",\n\tplain_categories = {\"Geordie English\"},\n}\n\nlabels[\"Gheg\"] = {\n\tdisplay = \"[[w:Gheg Albanian|Gheg]]\",\n\tplain_categories = {\"Gheg Albanian\"},\n}\n\nlabels[\"\
      Guardiol\"] = {\n\tdisplay = \"[[w:Guardia Piemontese|Guardiol]]\",\n\tplain_categories = {\"Guardiol Occitan\"},\n}\n\nlabels[\"Hakka\"] = {\n\tdisplay = \"[[w:Hakka Chinese|Hakka]]\",\n\tplain_categories = {\"Hakka Chinese\"},\n}\n\nlabels[\"Hamburgisch\"\
      ] = {\n\tdisplay = \"[[w:Hamburgisch dialect|Hamburgisch]]\",\n\tplain_categories = {\"Hamburgisch Low German\"},\n}\n\nlabels[\"Hamshen\"] = {\n\tdisplay = \"[[w:Homshetsi dialect|Hamshen]]\",\n\tplain_categories = {\"Hamshen Armenian\"},\n}\naliases[\"\
      Homshetsi\"] = \"Hamshen\"\naliases[\"Homshetsma\"] = \"Hamshen\"\n\nlabels[\"Helsinki slang\"] = {\n\tdisplay = \"[[w:Helsinki slang|Helsinki slang]]\",\n\tplain_categories = {\"Helsinki slang\"},\n}\n\nlabels[\"Hokkien\"] = {\n\tdisplay = \"[[w:Hokkien|Hokkien]]\"\
      ,\n\tplain_categories = {\"Hokkien Chinese\"},\n}\n\nlabels[\"Hong Kong Cantonese\"] = {\n\tdisplay = \"[[w:Hong Kong Cantonese|Hong Kong Cantonese]]\",\n\tplain_categories = {\"Hong Kong Cantonese\"},\n}\n\nlabels[\"Hubei\"] = {\n\tdisplay = \"[[w:Hubei|Hubei]]\"\
      ,\n}\n\nlabels[\"Hulu Pahang\"] = {\n\tplain_categories = {\"Hulu Pahang Malay\"},\n}\n\nlabels[\"Ikavian\"] = {\n\tdisplay = \"[[Ikavian]]\",\n\tplain_categories = {\"Ikavian Serbo-Croatian\"},\n}\n\nlabels[\"Indian English\"] = {\n\tdisplay = \"[[w:Indian\
      \ English|India]]\",\n\tplain_categories = {\"Indian English\"},\n}\n\nlabels[\"Ingilo\"] = {\n\tdisplay = \"[[w:Ingiloy people|Ingilo]]\",\n\tplain_categories = {\"Ingilo Georgian\"},\n}\naliases[\"Ingiloy\"] = \"Ingilo\"\naliases[\"Saingilo\"] = \"Ingilo\"\
      \n\nlabels[\"Inner Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About Mbugu|Ma'a]]\",\n\tplain_categories = {\"Inner Mbugu\"},\n}\naliases[\"inner Mbugu\"] = \"Inner Mbugu\"\n\nlabels[\"Inuktun\"] = {\n\tplain_categories = {\"Inuktun Inuktitut\"},\n}\naliases[\"\
      Polar Eskimo\"] = \"Inuktun\"\n\nlabels[\"Inuttut\"] = {\n\tplain_categories = {\"Inuttut Inuktitut\"},\n}\naliases[\"Nunatsiavummiutut\"] = \"Inuttut\"\naliases[\"Labradorimiutut\"] = \"Inuttut\"\naliases[\"Inuttitut\"] = \"Inuttut\"\n\nlabels[\"Irish\
      \ English\"] = {\n\tdisplay = \"[[w:Irish English|Ireland]]\",\n\tplain_categories = {\"Irish English\"},\n}\n\nlabels[\"Iron\"] = {\n\tdisplay = \"Iron dialect\",\n\tplain_categories = {\"Iron Ossetian\"},\n}\naliases[\"Iron dialect\"] = \"Iron\"\n\n\
      labels[\"Itivimuit\"] = {\n\tplain_categories = {\"Itivimuit Inuktitut\"},\n}\n\nlabels[\"Jianghuai Mandarin\"] = {\n\tdisplay = \"[[w:Lower Yangtze Mandarin|Jianghuai Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"Jiang-Huai\
      \ Mandarin\"] = \"Jianghuai Mandarin\"\naliases[\"Lower Yangtze Mandarin\"] = \"Jianghuai Mandarin\"\n\nlabels[\"Jiaoliao Mandarin\"] = {\n\tdisplay = \"[[w:Jiaoliao Mandarin|Jiaoliao Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"\
      Jiao-Liao Mandarin\"] = \"Jiaoliao Mandarin\"\n\nlabels[\"Jilu Mandarin\"] = {\n\tdisplay = \"[[w:Jilu Mandarin|Jilu Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"Ji-Lu Mandarin\"] = \"Jilu Mandarin\"\n\nlabels[\"Jin\"] = {\n\
      \tdisplay = \"[[w:Jin Chinese|Jin]]\",\n\tregional_categories = {\"Jin\"},\n}\n\nlabels[\"Kajkavian\"] = {\n\tdisplay = \"[[Kajkavian]]\",\n\tplain_categories = {\"Kajkavian Serbo-Croatian\"},\n}\n\nlabels[\"Karabakh\"] = {\n\tdisplay = \"[[w:Karabakh\
      \ dialect (Armenian)|Karabakh]]\",\n\tplain_categories = {\"Karabakh Armenian\"},\n}\naliases[\"Gharabagh\"] = \"Karabakh\"\naliases[\"Artsakh\"] = \"Karabakh\"\n\nlabels[\"Kansai\"] = {\n\tdisplay = \"[[w:Kansai dialect|Kansai]]\",\n\tplain_categories\
      \ = {\"Kansai Japanese\"},\n}\n\nlabels[\"Karachay\"] = {\n\tplain_categories = {\"Karachay\"},\n}\n\nlabels[\"Kichwa\"] = {\n\tdisplay = \"[[w:Kichwa language|Standard Ecuadorian Kichwa]]\",\n\tplain_categories = {\"Standard Kichwa\"},\n}\n\nlabels[\"\
      Kromanti\"] = {\n\tdisplay = \"[[w:Jamaican Maroon spirit-possession language|Kromanti spirit possession language]]\",\n\tplain_categories = {\"Kromanti Akan\"},\n}\n\nlabels[\"Lanyin Mandarin\"] = {\n\tdisplay = \"[[w:Lanyin Mandarin|Lanyin Mandarin]]\"\
      ,\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"Lan-Yin Mandarin\"] = \"Lanyin Mandarin\"\n\nlabels[\"Late Latin\"] = {\n\tdisplay = \"[[w:Late Latin|Late Latin]]\",\n\tplain_categories = {\"Late Latin\"},\n}\n\nlabels[\"Latin America\"]\
      \ = {\n\tdisplay = \"[[w:Latin America|Latin America]]\",\n\tplain_categories = {\"Latin American Spanish\"},\n}\naliases[\"Latin American Spanish\"] = \"Latin America\"\n\nlabels[\"Louisiana French\"] = {\n\tdisplay = \"[[w:Cajun French|Louisiana]]\"\
      ,\n\tplain_categories = {\"Louisiana French\"},\n}\n\nlabels[\"Low Prussian\"] = {\n\tdisplay = \"[[w:Low Prussian dialect|Low Prussian]]\",\n\tplain_categories = {\"Low Prussian Low German\"},\n}\n\nlabels[\"Lowlands Scots\"] = {\n\tplain_categories =\
      \ {\"Lowlands Scots\"},\n}\n\nlabels[\"Lycopolitan\"] = {\n\tdisplay = \"[[w:Coptic language#Lycopolitan|Lycopolitan]]\",\n\tplain_categories = {\"Lycopolitan Coptic\"},\n}\naliases[\"Subakhmimic\"] = \"Lycopolitan\"\naliases[\"Assiutic\"] = \"Lycopolitan\"\
      \n\nlabels[\"Mecklenburgisch Low German\"] = {\n\tdisplay = \"[[w:Mecklenburgisch dialect|Mecklenburgisch]]\",\n\tplain_categories = {\"Mecklenburgisch Low German\"},\n}\naliases[\"Mecklenburgisch\"] = \"Mecklenburgisch Low German\"\naliases[\"Mecklenburg\"\
      ] = \"Mecklenburgisch Low German\"\n\nlabels[\"Medieval Latin\"] = {\n\tdisplay = \"[[w:Medieval Latin|Medieval Latin]]\",\n\tplain_categories = {\"Medieval Latin\"},\n}\n\nlabels[\"Midlands English\"] = {\n\tdisplay = \"[[w:Midlands English|Midlands]]\"\
      ,\n\tplain_categories = {\"Midlands English\"},\n}\n\nlabels[\"Min\"] = {\n\tdisplay = \"[[w:Min Chinese|Min]]\",\n\tplain_categories = {\"Min Chinese\"},\n}\n\nlabels[\"Min Bei\"] = {\n\tdisplay = \"[[w:Northern Min|Min Bei]]\",\n\tplain_categories =\
      \ {\"Min Bei Chinese\"},\n}\n\nlabels[\"Min Dong\"] = {\n\tdisplay = \"[[w:Eastern Min|Min Dong]]\",\n\tplain_categories = {\"Min Dong Chinese\"},\n}\n\nlabels[\"Min Nan\"] = {\n\tdisplay = \"[[w:Southern Min|Min Nan]]\",\n\tplain_categories = {\"Min Nan\
      \ Chinese\"},\n}\n\nlabels[\"Min Zhong\"] = {\n\tdisplay = \"[[w:Central Min|Min Zhong]]\",\n\tplain_categories = {\"Min Zhong Chinese\"},\n}\n\nlabels[\"Mistralian\"] = {\n\tdisplay = \"[[w:Occitan language#Writing system|Mistralian]]\",\n\tplain_categories\
      \ = {\"Mistralian Occitan\"},\n}\n\nlabels[\"Mooring\"] = {\n\tdisplay = \"[[w:Mooring (North Frisian dialect)|Mooring]]\",\n\tplain_categories = {\"Mooring North Frisian\"},\n}\naliases[\"Mooring dialect\"] = \"Mooring\"\n\nlabels[\"Multicultural London\
      \ English\"] = {\n\tdisplay = \"[[w:Multicultural London English|MLE]]\",\n\tplain_categories = {\"Multicultural London English\"},\n}\naliases[\"MLE\"] = \"Multicultural London English\"\n\nlabels[\"New Latin\"] = {\n\tdisplay = \"[[w:New Latin|New Latin]]\"\
      ,\n\tplain_categories = {\"New Latin\"},\n}\n\nlabels[\"New Zealand English\"] = {\n\tdisplay = \"[[w:New Zealand English|New Zealand]]\",\n\tplain_categories = {\"New Zealand English\"},\n}\n\nlabels[\"Non-Oxford British spelling\"] = {\n\tdisplay = \"\
      Non-[[w:Oxford spelling|Oxford]] [[British English]]\",\n\tplain_categories = {\"British English forms\"},\n}\naliases[\"non-Oxford British spelling\"] = \"Non-Oxford British spelling\"\naliases[\"Non-Oxford\"] = \"Non-Oxford British spelling\"\naliases[\"\
      non-Oxford\"] = \"Non-Oxford British spelling\"\n\nlabels[\"Normal Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About Mbugu|Mbugu]]\",\n\tplain_categories = {\"Normal Mbugu\"},\n}\naliases[\"normal Mbugu\"] = \"Normal Mbugu\"\n\nlabels[\"North Germanic\"]\
      \ = {\n\tdisplay = \"[[w:North Germanic languages|North Germanic]]\",\n\tplain_categories = {\"North Proto-Germanic\"},\n}\n\nlabels[\"Northeastern Mandarin\"] = {\n\tdisplay = \"[[w:Northeastern Mandarin|Northeastern Mandarin]]\",\n\tplain_categories\
      \ = {\"Mandarin Chinese\"},\n}\naliases[\"northeastern Mandarin\"] = \"Northeastern Mandarin\"\n\nlabels[\"Northern Dutch\"] = {\n\tdisplay = \"[[w:Dutch dialects|Northern]]\",\n\tplain_categories = {\"Northern Dutch\"},\n}\n\nlabels[\"Northern England\
      \ English\"] = {\n\tdisplay = \"[[w:Northern England English|Northern England]]\",\n\tplain_categories = {\"Northern England English\"},\n}\naliases[\"Northern English dialect\"] = \"Northern England English\"\naliases[\"northern English\"] = \"Northern\
      \ England English\"\naliases[\"North English\"] = \"Northern England English\"\naliases[\"north English\"] = \"Northern England English\"\n\nlabels[\"Northern Finnic\"] = {\n\tplain_categories = {\"Northern Proto-Finnic\"},\n}\n\nlabels[\"Northern Wu\"\
      ] = {\n\tdisplay = \"Northern [[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n}\n\nlabels[\"Northwest Germanic\"] = {\n\tdisplay = \"[[w:Northwest Germanic languages|Northwest Germanic]]\",\n\tplain_categories = {\"Northwest Proto-Germanic\"},\n}\n\n\
      labels[\"Nynorsk\"] = {\n\tdisplay = \"Nynorsk\",\n\tplain_categories = {\"Norwegian Nynorsk\"},\n}\n\nlabels[\"Oxford British spelling\"] = {\n\tdisplay = \"[[w:Oxford spelling|Oxford]] [[British English]]\",\n\tplain_categories = {\"Oxford spellings\"\
      },\n}\naliases[\"Oxford\"] = \"Oxford British spelling\"\n\nlabels[\"Oxyrhynchite\"] = {\n\tdisplay = \"[[w:Coptic language#Oxyrhynchite|Oxyrhynchite]]\",\n\tplain_categories = {\"Oxyrhynchite Coptic\"},\n}\naliases[\"Mesokemic\"] = \"Oxyrhynchite\"\n\n\
      labels[\"Pennsylvania Dutch English\"] = {\n\tdisplay = \"[[w:Pennsylvania Dutch English|Pennsylvania Dutch English]]\",\n\tplain_categories = {\"Pennsylvania Dutch English\"},\n}\n\nlabels[\"Pomeranian Low German\"] = {\n\tdisplay = \"[[w:Pomeranian Low\
      \ German|Pomeranian]]\",\n\tplain_categories = {\"Pomeranian Low German\"},\n}\naliases[\"Pomeranian LG\"] = \"Pomeranian Low German\"\n\nlabels[\"Potteries\"] = {\n\tdisplay = \"[[w:Potteries dialect|Potteries]]\",\n\tplain_categories = {\"Potteries English\"\
      },\n}\naliases[\"Potteries dialect\"] = \"Potteries\"\n\nlabels[\"Punjab\"] = {\n\tdisplay = \"[[w:Punjab|Punjab]]\",\n\tregional_categories = {\"Punjabi\"},\n}\n\nlabels[\"Puter\"] = {\n\tdisplay = \"[[w:Putèr|Puter]]\",\n\tplain_categories = {\"Puter\
      \ Romansch\"},\n}\n\nlabels[\"Puxian Min\"] = {\n\tdisplay = \"[[w:Pu-Xian Min|Puxian Min]]\",\n\tplain_categories = {\"Puxian Min Chinese\"},\n}\naliases[\"Puxian\"] = \"Puxian Min\"\naliases[\"Pu-Xian Min\"] = \"Puxian Min\"\naliases[\"Pu-Xian\"] = \"\
      Puxian Min\"\naliases[\"Xinghua\"] = \"Puxian Min\"\naliases[\"Hinghwa\"] = \"Puxian Min\"\n\nlabels[\"Quanzhou\"] = {\n\tdisplay = \"[[w:Quanzhou dialect|Quanzhou]]\",\n\tplain_categories = {\"Hokkien Chinese\"},\n}\naliases[\"Quanzhou dialect\"] = \"\
      Quanzhou\"\naliases[\"Chinchew\"] = \"Quanzhou\"\naliases[\"Chinchew dialect\"] = \"Quanzhou\"\naliases[\"Choanchew\"] = \"Quanzhou\"\naliases[\"Choanchew dialect\"] = \"Quanzhou\"\n\nlabels[\"Renaissance Latin\"] = {\n\tdisplay = \"[[w:Renaissance Latin|Renaissance\
      \ Latin]]\",\n\tplain_categories = {\"Renaissance Latin\"},\n}\n\nlabels[\"Royal Thai\"] = {\n\tdisplay = \"royal\",\n\tplain_categories = {\"Thai royal vocabulary\"},\n}\n\nlabels[\"Rumantsch Grischun\"] = {\n\tdisplay = \"[[w:Rumantsch Grischun|Rumantsch\
      \ Grischun]]\",\n}\n\nlabels[\"Saarland\"] = {\n\tdisplay = \"Saarland\",\n\tregional_categories = {\"Saarland\"},\n}\naliases[\"Saarländisch\"] = \"Saarland\"\naliases[\"Saarlandic\"] = \"Saarland\"\naliases[\"Saarlandish\"] = \"Saarland\"\n\nlabels[\"\
      Sahidic\"] = {\n\tdisplay = \"[[w:Coptic language#Sahidic|Sahidic]]\",\n\tplain_categories = {\"Sahidic Coptic\"},\n}\naliases[\"Thebaic\"] = \"Sahidic\"\n\nlabels[\"Saigon\"] = {\n\tdisplay = \"[[w:Saigon|Saigon]]\",\n\tregional_categories = {\"Southern\"\
      },\n}\naliases[\"Saigonese\"] = \"Saigon\"\n\nlabels[\"Scottish English\"] = {\n\tdisplay = \"[[w:Scottish English|Scotland]]\",\n\tplain_categories = {\"Scottish English\"},\n}\n\nlabels[\"Shapsug\"] = {\n\tdisplay = \"[[w:Shapsug Adyghe dialect|Shapsug\
      \ dialect]]\",\n\tplain_categories = {\"Shapsug Adyghe\"},\n}\n\nlabels[\"Shopski\"] = {\n\tdisplay = \"[[w:Shopi#Dialects|Shopski]]\",\n\tplain_categories = {\"Shopski Bulgarian\"},\n}\n\nlabels[\"Sichuan\"] = {\n\tdisplay = \"[[w:Sichuanese dialects|Sichuan]]\"\
      ,\n\tplain_categories = {\"Sichuanese Chinese\"},\n}\naliases[\"Sichuanese\"] = \"Sichuan\"\n\nlabels[\"Silla\"] = {\n\tplain_categories = {\"Silla Old Korean\"},\n}\n\nlabels[\"Sistani\"] = {\n\tdisplay = \"[[w:Sistani dialect|Sistani]]\",\n\tplain_categories\
      \ = {\"Sistani Persian\"},\n}\n\nlabels[\"Shropshire\"] = {\n\tdisplay = \"[[w:Shropshire|Shropshire]]\",\n\tregional_categories = {\"Shropshire\"},\n}\naliases[\"Shropshire dialect\"] = \"Shropshire\"\naliases[\"Shrops\"] = \"Shropshire\"\naliases[\"\
      Salop\"] = \"Shropshire\"\naliases[\"Salopian\"] = \"Shropshire\"\n\nlabels[\"Skiri Pawnee\"] = {\n\tplain_categories = {\"Skiri Pawnee\"},\n}\n\nlabels[\"South African English\"] = {\n\tdisplay = \"[[w:South African English|South Africa]]\",\n\tplain_categories\
      \ = {\"South African English\"},\n}\n\nlabels[\"South Scots\"] = {\n\tdisplay = \"[[w:Southern Scots|South Scots]]\",\n\tplain_categories = {\"South Scots\"},\n}\n\nlabels[\"Southern Dutch\"] = {\n\tdisplay = \"[[w:Dutch dialects|Southern]]\",\n\tplain_categories\
      \ = {\"Southern Dutch\"},\n}\n\nlabels[\"Southern England English\"] = {\n\tdisplay = \"[[w:English in southern England|Southern England]]\",\n\tplain_categories = {\"Southern England English\"},\n}\naliases[\"Southern English\"] = \"Southern England English\"\
      \naliases[\"Southern English dialect\"] = \"Southern England English\"\n\nlabels[\"Southern Germany\"] = {\n\tdisplay = \"[[w:Southern Germany|southern Germany]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"southern Germany\"] = \"southern\
      \ Germany\"\naliases[\"Southern German\"] = \"southern Germany\"\naliases[\"southern German\"] = \"southern Germany\"\naliases[\"South Germany\"] = \"southern Germany\"\naliases[\"south Germany\"] = \"southern Germany\"\naliases[\"South German\"] = \"\
      southern Germany\"\naliases[\"south German\"] = \"southern Germany\"\n\nlabels[\"Southern US English\"] = {\n\tdisplay = \"[[w:Southern American English|Southern US]]\",\n\tplain_categories = {\"Southern US English\"},\n}\naliases[\"Southern American English\"\
      ] = \"Southern US English\"\n\nlabels[\"Southern Wu\"] = {\n\tdisplay = \"Southern [[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n}\n\nlabels[\"Southwestern Mandarin\"] = {\n\tdisplay = \"[[w:Southwestern Mandarin|Southwestern Mandarin]]\",\n\tplain_categories\
      \ = {\"Southwestern Mandarin\"},\n}\naliases[\"southwestern Mandarin\"] = \"Southwestern Mandarin\"\naliases[\"Upper Yangtze Mandarin\"] = \"Southwestern Mandarin\"\naliases[\"Southwest Mandarin\"] = \"Southwestern Mandarin\"\n\naliases[\"Spilamberto\"\
      ] = \"Spilambertese\"\nlabels[\"Spilambertese\"] = {\n\tdisplay = \"[[w:Spilamberto|Spilambertese]]\",\n\tregional_categories = {\"Spilambertese\"},\n}\n\nlabels[\"Surmiran\"] = {\n\tdisplay = \"[[w:Surmiran dialect|Surmiran]]\",\n\tplain_categories =\
      \ {\"Surmiran Romansch\"},\n}\n\nlabels[\"Sursilvan\"] = {\n\tdisplay = \"[[w:Sursilvan dialects (Romansh)|Sursilvan]]\",\n\tplain_categories = {\"Sursilvan Romansch\"},\n}\n\nlabels[\"Sussex\"] = {\n\tdisplay = \"[[w:Sussex dialect|Sussex]]\",\n\tplain_categories\
      \ = {\"Sussex English\"},\n}\n\nlabels[\"Sutsilvan\"] = {\n\tdisplay = \"[[w:Sutsilvan dialects (Romansh)|Sutsilvan]]\",\n\tplain_categories = {\"Sutsilvan Romansch\"},\n}\n\nlabels[\"Switzerland and Liechtenstein spelling\"] = {\n\tdisplay = \"[[Switzerland]]\
      \ and [[Liechtenstein]]\",\n\tplain_categories = {\"Switzerland and Liechtenstein German forms\"},\n}\naliases[\"SLDE\"] = \"Switzerland and Liechtenstein spelling\"\n\nlabels[\"Tosk\"] = {\n\tdisplay = \"[[w:Tosk Albanian|Tosk]]\",\n\tplain_categories\
      \ = {\"Tosk Albanian\"},\n}\n\nlabels[\"Trás-os-Montes\"] = {\n\tdisplay = \"[[Trás-os-Montes]]\",\n\tplain_categories = {\"Transmontane Portuguese\"},\n}\n\nlabels[\"Tyneside\"] = {\n\tplain_categories = {\"Geordie English\"},\n}\n\nlabels[\"Ulster Scots\"\
      ] = {\n\tdisplay = \"[[w:Ulster Scots dialects|Ulster Scots]]\",\n\tplain_categories = {\"Ulster Scots\"},\n}\naliases[\"Ullans\"] = \"Ulster Scots\"\n\nlabels[\"Uttar Pradesh\"] = {\n\tdisplay = \"[[w:Uttar Pradesh|Uttar Pradesh]]\",\n\tregional_categories\
      \ = {\"Uttar Pradeshi\"},\n}\n\nlabels[\"Vallader\"] = {\n\tdisplay = \"[[w:Vallader dialect (Romansh)|Vallader]]\",\n\tplain_categories = {\"Vallader Romansch\"},\n}\n\nlabels[\"Vivaro-Alpine\"] = {\n\tdisplay = \"[[w:Vivaro-Alpine dialect|Vivaro-Alpine]]\"\
      ,\n\tplain_categories = {\"Vivaro-Alpine Occitan\"},\n}\n\nlabels[\"Vulgar Latin\"] = {\n\tdisplay = \"[[w:Vulgar Latin|Vulgar Latin]]\",\n\tplain_categories = {\"Vulgar Latin\"},\n}\n\nlabels[\"West Country English\"] = {\n\tdisplay = \"[[w:West Country\
      \ English|West Country]]\",\n\tplain_categories = {\"West Country English\"},\n}\naliases[\"West Country dialect\"] = \"West Country English\"\n\nlabels[\"West Germanic\"] = {\n\tdisplay = \"[[w:West Germanic languages|West Germanic]]\",\n\tplain_categories\
      \ = {\"West Proto-Germanic\"},\n}\n\nlabels[\"West Midlands English\"] = {\n\tdisplay = \"[[w:West Midlands English|West Midlands]]\",\n\tplain_categories = {\"West Midlands English\"},\n}\naliases[\"West Midlands dialect\"] = \"West Midlands English\"\
      \n\nlabels[\"Western Armenian\"] = {\n\tdisplay = \"[[w:Western Armenian|Western Armenian]]\",\n\tplain_categories = {\"Western Armenian\"},\n}\n\nlabels[\"Western Catalan\"] = {\n\tdisplay = \"[[w:Catalan dialects|Western Catalan]]\",\n\tplain_categories\
      \ = {\"Western Catalan\"},\n}\n\nlabels[\"Western Malayo-Polynesian\"] = {\n\tdisplay = \"[[w:Western Malayo-Polynesian languages|Western Malayo-Polynesian]]\",\n\tplain_categories = {\"Western Proto-Malayo-Polynesian\"},\n}\n\nlabels[\"Western Pomeranian\
      \ Low German\"] = {\n\tdisplay = \"Western Pomeranian\",\n\tplain_categories = {\"Western Pomeranian Low German\"},\n}\naliases[\"West Pomeranian Low German\"] = \"Western Pomeranian Low German\"\naliases[\"Western Pomeranian LG\"] = \"Western Pomeranian\
      \ Low German\"\naliases[\"West Pomeranian LG\"] = \"Western Pomeranian Low German\"\n\nlabels[\"Western Samic\"] = {\n\tplain_categories = {\"Western Proto-Samic\"},\n}\n\nlabels[\"Wu\"] = {\n\tdisplay = \"[[w:Wu Chinese|Wu]]\",\n\tplain_categories = {\"\
      Wu Chinese\"},\n}\n\nlabels[\"Xiamen\"] = {\n\tdisplay = \"[[w:Amoy dialect|Xiamen]]\",\n\tplain_categories = {\"Hokkien Chinese\"},\n}\naliases[\"Xiamen dialect\"] = \"Xiamen\"\naliases[\"Amoy\"] = \"Xiamen\"\naliases[\"Amoy dialect\"] = \"Xiamen\"\n\n\
      labels[\"Xiang\"] = {\n\tdisplay = \"[[w:Xiang Chinese|Xiang]]\",\n\tplain_categories = {\"Xiang Chinese\"},\n}\n\nlabels[\"Ye'kwana\"] = {\n\tdisplay = \"Ye'kwana dialect\",\n\tplain_categories = {\"Ye'kwana Maquiritari\"},\n}\naliases[\"Ye'kwana dialect\"\
      ] = \"Ye'kwana\"\n\nlabels[\"Zhangzhou\"] = {\n\tdisplay = \"[[w:Zhangzhou dialect|Zhangzhou]]\",\n\tplain_categories = {\"Hokkien Chinese\"},\n}\naliases[\"Zhangzhou dialect\"] = \"Zhangzhou\"\naliases[\"Changchew\"] = \"Zhangzhou\"\naliases[\"Changchew\
      \ dialect\"] = \"Zhangzhou\"\n\n-- Adds labels[label][\"languages\"][language_code] = true for members of \"languages\" field.\nm_data_functions.handle_languages(labels)\n\nreturn {labels = labels, aliases = aliases, deprecated = deprecated}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:24.029Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50934 t=1555362503928699
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:24 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1347.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 747291819, 632154192, 691589482
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4253487\" pageid=\"4253487\" ns=\"828\" title=\"Module:languages/templates\"><revisions><rev user=\"Dodecaplex\" timestamp=\"2019-02-02T15:50:43Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"&quot;We prefer module name with spaces&quot; =&gt; Then this version should be more coherent...\" xml:space=\"preserve\">local export = {}\n\nfunction export.exists(frame)\n\tlocal args\
      \ = frame.args\n\tlocal lang = args[1] or error(\"Language code has not been specified. Please pass parameter 1 to the module invocation.\")\n\t\n\tlang = require(\"Module:languages\").getByCode(lang)\n\t\n\tif lang then\n\t\treturn \"1\"\n\telse\n\t\t\
      return \"\"\n\tend\nend\n\n-- Used by the following JS:\n-- * [[WT:ACCEL]]\n-- * [[WT:EDIT]]\n-- * [[WT:NEC]]\nfunction export.getByCode(frame)\n\tlocal args = frame.args\n\tlocal langcode = args[1] or error(\"Language code has not been specified. Please\
      \ pass parameter 1 to the module invocation.\")\n\tlocal itemname = args[2] or error(\"Type of information to look up has not been specified. Please pass parameter 2 to the module invocation.\")\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(langcode)\n\
      \t\n\tif not lang then\n\t\terror(\"The language code '\" .. langcode .. \"' is not valid.\")\n\tend\n\t\n\t\n\t-- The item that the caller wanted to look up\n\t\n\tif itemname == \"getOtherNames\" then\n\t\tlocal index = args[3]; if index == \"\" then\
      \ index = nil end\n\t\tindex = tonumber(index) or error(\"Please specify the numeric index of the desired name.\")\n\t\treturn lang:getOtherNames()[index] or \"\"\n\telseif itemname == \"getFamily\" then\n\t\treturn lang:getFamily():getCode()\n\telseif\
      \ itemname == \"getWikimediaLanguages\" then\n\t\tlocal index = args[3]; if index == \"\" then index = nil end\n\t\tindex = tonumber(index) or error(\"Please specify the numeric index of the desired language.\")\n\t\tlocal langs = lang:getWikimediaLanguages()\n\
      \t\t\n\t\tif langs[index] then\n\t\t\treturn langs[index]:getCode()\n\t\telse\n\t\t\treturn \"\"\n\t\tend\n\telseif itemname == \"getScripts\" then\n\t\tlocal index = args[3]; if index == \"\" then index = nil end\n\t\tindex = tonumber(index) or error(\"\
      Please specify the numeric index of the desired script.\")\n\t\tlocal scripts = lang:getScriptCodes()\n\t\t\n\t\tif scripts[index] then\n\t\t\treturn scripts[index]\n\t\telse\n\t\t\treturn \"\"\n\t\tend\n\telseif itemname == \"getAncestors\" then\n\t\t\
      local index = args[3]; if index == \"\" then index = nil end\n\t\tindex = tonumber(index) or error(\"Please specify the numeric index of the desired ancestor.\")\n\t\tlocal ancestors = lang:getAncestors()\n\t\t\n\t\tif ancestors[index] then\n\t\t\treturn\
      \ ancestors[index]:getCode()\n\t\telse\n\t\t\treturn \"\"\n\t\tend\n\telseif itemname == \"transliterate\" then\n\t\tlocal text = args[3]; if text == \"\" then text = nil end\n\t\tlocal sc = args[4]; if sc == \"\" then sc = nil end\n\t\tlocal module_override\
      \ = args[5]; if module_override == \"\" then module_override = nil end\n\t\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil)\n\t\treturn lang:transliterate(text, sc, module_override)\
      \ or \"\"\n\telseif itemname == \"makeEntryName\" then\n\t\tlocal text = args[3]; if text == \"\" then text = nil end\n\t\treturn lang:makeEntryName(text) or \"\"\n\telseif itemname == \"makeSortKey\" then\n\t\tlocal text = args[3]; if text == \"\" then\
      \ text = nil end\n\t\treturn lang:makeSortKey(text) or \"\"\n\telseif lang[itemname] then\n\t\tlocal ret = lang[itemname](lang)\n\t\t\n\t\tif type(ret) == \"string\" then\n\t\t\treturn ret\n\t\telse\n\t\t\terror(\"The function \\\"\" .. itemname .. \"\\\
      \" did not return a string value.\")\n\t\tend\n\telse\n\t\terror(\"Requested invalid item name \\\"\" .. itemname .. \"\\\".\")\n\tend\nend\n\nfunction export.getByCanonicalName(frame)\n\tlocal args = frame.args\n\tlocal langname = args[1] or error(\"\
      Language name has not been specified. Please pass parameter 1 to the module invocation.\")\n\t\n\tlocal lang = require(\"Module:languages\").getByCanonicalName(langname)\n\t\n\tif lang then\n\t\treturn lang:getCode()\n\telse\n\t\treturn \"\"\n\tend\nend\n\
      \nfunction export.getByName(frame)\n\tlocal args = frame.args\n\tlocal langname = args[1] or error(\"Language name has not been specified. Please pass parameter 1 to the module invocation.\")\n\t\n\tlocal lang = require(\"Module:languages\").getByName(langname)\n\
      \t\n\tif lang then\n\t\treturn lang:getCode()\n\telse\n\t\treturn \"\"\n\tend\nend\n\nfunction export.makeEntryName(frame)\n\tlocal args = frame.args\n\tlocal langname = args[1] or error(\"Language name has not been specified. Please pass parameter 1 to\
      \ the module invocation.\")\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(langname)\n\t\n\tif lang then\n\t\treturn lang:makeEntryName(args[2])\n\telse\n\t\treturn \"\"\n\tend\nend\n\nfunction export.getCanonicalName(frame)\n\tlocal langCode,\
      \ args\n\tif require(\"Module:yesno\")(frame.args.parent) then\n\t\targs = frame:getParent().args\n\telse\n\t\targs = frame.args\n\tend\n\tlangCode = args[1]\n\t\n\tif not langCode or langCode == \"\" then\n\t\terror(\"Supply a language code in parameter\
      \ 1.\")\n\tend\n\t\n\treturn mw.loadData(\"Module:languages/code to canonical name\")[langCode]\n\t\tor not args.return_if_invalid and \"\" or langCode\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2016-09-02T21:43:55.048Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Acatlangname&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Porto:41.15:-8.61:v4; WMF-Last-Access=02-Sep-2016
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Backend-Timing: D=31467 t=1472852635116862
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Fri, 02 Sep 2016 21:43:55 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1235.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=02-Sep-2016;https=1
      X-Cache: cp1052 pass, cp3031 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 82.155.193.179
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.7
      X-Varnish: 4131262317, 2016249051, 2651042308
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="2130756" pageid="2130756" ns="10" title="Template:catlangname"><revisions><rev user="CodeCat" timestamp="2013-07-29T12:47:08Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:utilities|template_categorize|format=pos}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:08:21.677Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aaccent%3ANotFound&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=32293 t=1555362501593520
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '149'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:21 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 418397856, 649730347, 694733104
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:accent:NotFound" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:08:18.243Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aform+of%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55117 t=1555362498119607
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:18 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1225.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 597839763, 264307979, 701766762
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4895369\" pageid=\"4895369\" ns=\"828\" title=\"Module:form of/templates\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-10T05:06:28Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"support notext=\" xml:space=\"preserve\">local export = {}\n\nlocal m_form_of = require(\"Module:form of\")\nlocal rfind = mw.ustring.find\nlocal rmatch = mw.ustring.match\nlocal rsplit\
      \ = mw.text.split\n\n-- Add tracking category for PAGE when called from TEMPLATE. The tracking category\n-- linked to is [[Template:tracking/form-of/TEMPLATE/PAGE]].\nlocal function track(template, page)\n\trequire(\"Module:debug\").track(\"form-of/\"\
      \ .. template .. \"/\" .. page)\nend\n\n\n--[=[\nProcess parent arguments. This is similar to the following:\n\trequire(\"Module:parameters\").process(parent_args, params)\nbut in addition it does the following:\n(1) Supplies default values for unspecified\
      \ parent arguments as specified in\n\tDEFAULTS, which consist of specs of the form \"ARG=VALUE\". These are\n\tadded to the parent arguments prior to processing, so boolean and number\n\tparameters will process the value appropriately.\n(2) Removes parent\
      \ arguments specified in IGNORESPECS, which consist either\n\tof bare argument names to remove, or list-argument names to remove of the\n\tform \"ARG:list\".\n(3) Tracks the use of any parent arguments specified in TRACKED_PARAMS, which\n\tis a set-type\
      \ table where the keys are arguments as they exist after\n\tprocessing (hence numeric arguments should be numbers, not strings)\n\tand the values should be boolean true.\n]=]--\nlocal function process_parent_args(template, parent_args, params, defaults,\
      \ ignorespecs, tracked_params)\n\tif #defaults &gt; 0 or #ignorespecs &gt; 0 then\n\t\tlocal new_parent_args = {}\n\t\tfor _, default in ipairs(defaults) do\n\t\t\tlocal defparam, defval = rmatch(default, \"^(.-)=(.*)$\")\n\t\t\tif not defparam then\n\t\
      \t\t\terror(\"Bad default spec \" .. default)\n\t\t\tend\n\t\t\tnew_parent_args[defparam] = defval\n\t\tend\n\t\n\t\tlocal params_to_ignore = {}\n\t\tlocal numbered_list_params_to_ignore = {}\n\t\tlocal named_list_params_to_ignore = {}\n\n\t\tfor _, ignorespec\
      \ in ipairs(ignorespecs) do\n\t\t\tfor _, ignore in ipairs(rsplit(ignorespec, \",\")) do\n\t\t\t\tlocal param = rmatch(ignore, \"^(.*):list$\")\n\t\t\t\tif param then\n\t\t\t\t\tif rfind(param, \"^[0-9]+$\") then\n\t\t\t\t\t\ttable.insert(numbered_list_params_to_ignore,\
      \ tonumber(param))\n\t\t\t\t\telse\n\t\t\t\t\t\ttable.insert(named_list_params_to_ignore,\n\t\t\t\t\t\t\t\"^\" .. require(\"Module:utilities\").pattern_escape(param) .. \"[0-9]*$\")\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tif rfind(ignore, \"^[0-9]+$\"\
      ) then\n\t\t\t\t\t\tignore = tonumber(ignore)\n\t\t\t\t\tend\n\t\t\t\t\tparams_to_ignore[ignore] = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\tfor k, v in pairs(parent_args) do\n\t\t\tif not params_to_ignore[k] then\n\t\t\t\tlocal ignore_me = false\n\t\
      \t\t\tif type(k) == \"number\" then\n\t\t\t\t\tfor _, lparam in ipairs(numbered_list_params_to_ignore) do\n\t\t\t\t\t\tif k &gt;= lparam then\n\t\t\t\t\t\t\tignore_me = true\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\t\
      for _, lparam in ipairs(named_list_params_to_ignore) do\n\t\t\t\t\t\tif rfind(k, lparam) then\n\t\t\t\t\t\t\tignore_me = true\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\tif not ignore_me then\n\t\t\t\t\tnew_parent_args[k]\
      \ = v\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\tparent_args = new_parent_args\n\tend\n\n\tlocal args = require(\"Module:parameters\").process(parent_args, params)\n\n\t-- Tracking for certain user-specified params. This is generally used for\n\t-- parameters\
      \ that we accept but ignore, so that we can eventually remove\n\t-- all uses of these params and stop accepting them.\n\tif tracked_params then\n\t\tfor tracked_param, _ in pairs(tracked_params) do\n\t\t\tif parent_args[tracked_param] then\n\t\t\t\ttrack(template,\
      \ \"arg/\" .. tracked_param)\n\t\t\tend\n\t\tend\n\tend\n\n\treturn args\nend\n\n\n-- Split TAGSPECS (inflection tag specifications) on SPLIT_REGEX, which\n-- may be nil for no splitting.\nlocal function split_inflection_tags(tagspecs, split_regex)\n\t\
      if not split_regex then\n\t\treturn tagspecs\n\tend\n\tlocal inflection_tags = {}\n\tfor _, tagspec in ipairs(tagspecs) do\n\t\tfor _, tag in ipairs(rsplit(tagspec, split_regex)) do\n\t\t\ttable.insert(inflection_tags, tag)\n\t\tend\n\tend\n\treturn inflection_tags\n\
      end\n\n\n-- Modify PARAMS in-place by adding parameters that control the link to the\n-- main entry. TERM_PARAM is the number of the param specifying the main\n-- entry itself; TERM_PARAM + 1 will be the display text, and TERM_PARAM + 2\n-- will be the\
      \ gloss, unless NO_NUMBERED_GLOSS is given.\nlocal function add_link_params(params, term_param, no_numbered_gloss)\n\t-- Numbered params controlling link display\n\tparams[term_param] = {}\n\tparams[term_param + 1] = {}\n\tif not no_numbered_gloss then\n\
      \t\tparams[term_param + 2] = {alias_of = \"t\"}\n\tend\n\t\n\t-- Named params controlling link display\n\tparams[\"t\"] = {}\n\tparams[\"gloss\"] = {alias_of = \"t\"}\n\tparams[\"sc\"] = {}\n\tparams[\"tr\"] = {}\n\tparams[\"ts\"] = {}\n\tparams[\"pos\"\
      ] = {}\n\tparams[\"g\"] = {list = true}\n\tparams[\"id\"] = {}\n\tparams[\"lit\"] = {}\nend\n\n\n-- Given processed invocation arguments IARGS and processed parent arguments\n-- ARGS, as well as TERM_PARAM (the parent argument specifying the main\n-- entry)\
      \ and COMPAT (true if the language code is found in args[\"lang\"]\n-- instead of args[1]), return LANG, TERMINFO, CATEGORIES, where\n-- * LANG is the language code;\n-- * TERMINFO is the terminfo structure specifying the main entry, as\n--   passed to\
      \ full_link in Module:links;\n-- * CATEGORIES is the categories to add the page to.\n--\n-- This is a subfunction of construct_form_of_text().\nlocal function get_terminfo_and_categories(iargs, args, term_param, compat)\n\tlocal lang = args[compat and\
      \ \"lang\" or 1] or iargs[\"lang\"] or \"und\"\n\tlang = require(\"Module:languages\").getByCode(lang) or\n\t\trequire(\"Module:languages\").err(lang, compat and \"lang\" or 1)\n\n\t-- Determine categories for the page, including tracking categories\n\n\
      \tlocal categories = {}\n\n\tif not args[\"nocat\"] then\n\t\tfor _, cat in ipairs(iargs[\"cat\"]) do\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" \" .. cat)\n\t\tend\n\tend\n\tfor _, cat in ipairs(args[\"cat\"]) do\n\t\ttable.insert(categories,\
      \ lang:getCanonicalName() .. \" \" .. cat)\n\tend\n\t\t\n\t-- Format the link, preceding text and categories\n\n\tlocal terminfo\n\n\tif iargs[\"nolink\"] then\n\t\tterminfo = nil\n\telseif iargs[\"linktext\"] then\n\t\tterminfo = iargs[\"linktext\"]\n\
      \telse\n\t\tlocal term = args[term_param]\n\n\t\tif not term and not args[term_param + 1] and not args[\"tr\"] and not args[\"ts\"] then\n\t\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\t\tterm = \"term\"\n\t\t\telse\n\t\t\t\terror(\"\
      No linked-to term specified; either specify term, alt, translit or transcription\")\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- add tracking category if term is same as page title\n\t\tif term and mw.title.getCurrentTitle().text == lang:makeEntryName(term) then\n\
      \t\t\ttable.insert(categories, \"Forms linking to themselves\")\n\t\tend\n\t\t-- maybe add tracking category if primary entry doesn't exist (this is an\n\t\t-- expensive call so we don't do it by default)\n\t\tif iargs[\"noprimaryentrycat\"] and term and\
      \ mw.title.getCurrentTitle().nsText == \"\"\n\t\t\tand not mw.title.new(term).exists then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" \" .. iargs[\"noprimaryentrycat\"])\n\t\tend\n\n\t\tlocal sc = args[\"sc\"] or iargs[\"sc\"]\n\t\t\n\
      \t\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or\n\t\t\terror(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil)\n\n\t\tterminfo = {\n\t\t\tlang = lang,\n\t\t\tsc = sc,\n\t\t\tterm = term,\n\t\t\talt = args[term_param + 1],\n\
      \t\t\tid = args[\"id\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\tlit = args[\"lit\"],\n\t\t}\n\tend\n\t\n\treturn lang, terminfo, categories\nend\n\
      \n\n-- Construct and return the full definition line for a form-of-type template\n-- invocation, given processed invocation arguments IARGS, processed parent\n-- arguments ARGS, TERM_PARAM (the parent argument specifying the main entry),\n-- COMPAT (true\
      \ if the language code is found in args[\"lang\"] instead of\n-- args[1]), and DO_FORM_OF, which is a function of one argument (the\n-- terminfo structure ultimately passed to full_link in Module:links) that\n-- should return the actual definition-line\
      \ text, minus any terminating\n-- period/dot. The terminating period/dot will be added as appropriate, as\n-- well as formatted categories to add the page to.\nlocal function construct_form_of_text(iargs, args, term_param, compat, do_form_of)\n\tlocal\
      \ lang, terminfo, categories = get_terminfo_and_categories(iargs, args, term_param, compat)\n\n\treturn do_form_of(terminfo) .. (\n\t\targs[\"nodot\"] and \"\" or args[\"dot\"] or iargs[\"withdot\"] and \".\" or \"\"\n\t) .. require(\"Module:utilities\"\
      ).format_categories(categories, lang, args[\"sort\"])\nend\n\n\n--[=[\nFunction that implements {{form of}} and the various more specific form-of\ntemplates (but not {{inflection of}} or templates that take tagged inflection\nparameters).\n\nInvocation\
      \ params:\n\n1= (required):\n\tText to display before the link.\nterm_param=:\n\tNumbered param holding the term linked to. Other numbered params come after.\n\tDefaults to 1 if invocation or template param lang= is present, otherwise 2.\nlang=:\n\tDefault\
      \ language code for language-specific templates. If specified, no\n\tlanguage code needs to be specified, and if specified it needs to be set\n\tusing lang=, not 1=.\nsc=:\n\tDefault script code for language-specific templates. The script code can\n\t\
      still be overridden using template param sc=.\ncat=, cat2=, ...:\n\tCategories to place the page into. The language name will automatically be\n\tprepended. Note that there is also a template param cat= to specify\n\tcategories at the template level. Use\
      \ of nocat= disables categorization of\n\tcategories specified using invocation param cat=, but not using template\n\tparam cat=.\nignore=, ignore2=, ...:\n\tOne or more template params to silently accept and ignore. Useful e.g. when\n\tthe template takes\
      \ additional parameters such as from= or POS=. Each value\n\tis a comma-separated list of either bare parameter names or specifications\n\tof the form \"PARAM:list\" to specify that the parameter is a list parameter.\ndef=, def2=, ...:\n\tOne or more default\
      \ values to supply for template args. For example,\n\tspecifying '|def=tr=-' causes the default for template param '|tr=' to be\n\t'-'. Actual template params override these defaults.\nwithcap=:\n\tCapitalize the first character of the text preceding the\
      \ link, unless\n\ttemplate param nocap= is given.\nwithdot=:\n\tAdd a final period after the link, unless template param nodot= is given\n\tto suppress the period, or dot= is given to specify an alternative\n\tpunctuation character.\nnolink=:\n\tSuppress\
      \ the display of the link. If specified, none of the template\n\tparams that control the link (TERM_PARAM, TERM_PARAM + 1, TERM_PARAM + 2,\n\tt=, gloss=, sc=, tr=, ts=, pos=, g=, id=, lit=) will be available.\n\tIf the calling template uses any of these\
      \ parameters, they must be\n\tignored using ignore=.\nlinktext=:\n\tOverride the display of the link with the specified text. This is useful\n\tif a custom template is available to format the link (e.g. in Hebrew,\n\tChinese and Japanese). If specified,\
      \ none of the template params that\n\tcontrol the link (TERM_PARAM, TERM_PARAM + 1, TERM_PARAM + 2, t=, gloss=,\n\tsc=, tr=, ts=, pos=, g=, id=, lit=) will be available. If the calling\n\ttemplate uses any of these parameters, they must be ignored using\
      \ ignore=.\nposttext=:\n\tAdditional text to display directly after the formatted link, before any\n\tterminating period/dot and inside of \"&lt;span class='use-with-mention'&gt;\".\nnoprimaryentrycat=:\n\tCategory to add the page to if the primary entry\
      \ linked to doesn't exist.\n\tThe language name will automatically be prepended.\n]=]--\nfunction export.form_of_t(frame)\n\tlocal iparams = {\n\t\t[1] = {required = true},\n\t\t[\"term_param\"] = {type = \"number\"},\n\t\t[\"lang\"] = {},\n\t\t[\"sc\"\
      ] = {},\n\t\t[\"cat\"] = {list = true},\n\t\t[\"ignore\"] = {list = true},\n\t\t[\"def\"] = {list = true},\n\t\t[\"withcap\"] = {type = \"boolean\"},\n\t\t[\"withdot\"] = {type = \"boolean\"},\n\t\t[\"nolink\"] = {type = \"boolean\"},\n\t\t[\"linktext\"\
      ] = {},\n\t\t[\"posttext\"] = {},\n\t\t[\"noprimaryentrycat\"] = {},\n\t}\n\t\n\tlocal iargs = require(\"Module:parameters\").process(frame.args, iparams)\n\tlocal parent_args = frame:getParent().args\n\n\tlocal term_param = iargs[\"term_param\"]\n\t\n\
      \tlocal compat = iargs[\"lang\"] or parent_args[\"lang\"]\n\tterm_param = term_param or compat and 1 or 2\n\n\tlocal params = {\n\t\t-- Numbered params\n\t\t[compat and \"lang\" or 1] = {required = not iargs[\"lang\"]},\n\t\t\n\t\t-- Named params not controlling\
      \ link display\t\t\n\t\t[\"cat\"] = {list = true},\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t\t-- FIXME! The following should only be available when withcap=1 in\n\t\t-- invocation args. Before doing that, need to remove all uses\
      \ of\n\t\t-- nocap= in other circumstances.\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t-- FIXME! The following should only be available when withdot=1 in\n\t\t-- invocation args. Before doing that, need to remove all uses of\n\t\t-- nodot= in other\
      \ circumstances.\n\t\t[\"nodot\"] = {type = \"boolean\"},\n\t}\n\n\tif not iargs[\"nolink\"] and not iargs[\"linktext\"] then\n\t\tadd_link_params(params, term_param)\n\tend\n\n\tif next(iargs[\"cat\"]) then\n\t\tparams[\"nocat\"] = {type = \"boolean\"\
      }\n\tend\n\n\tif iargs[\"withdot\"] then\n\t\tparams[\"dot\"] = {}\n\tend\n\n\tlocal ignored_params = {}\n\tif not iargs[\"withcap\"] then\n\t\tignored_params[\"nocap\"] = true\n\tend\n\tif not iargs[\"withdot\"] then\n\t\tignored_params[\"nodot\"] = true\n\
      \tend\n\n\tlocal args = process_parent_args(\"form-of-t\", parent_args, params, iargs[\"def\"],\n\t\tiargs[\"ignore\"], ignored_params)\n\t\n\tlocal text = args[\"notext\"] and \"\" or iargs[1]\n\tif iargs[\"withcap\"] and not args[\"nocap\"] then\n\t\t\
      text = m_form_of.ucfirst(text)\n\tend\n\n\treturn construct_form_of_text(iargs, args, term_param, compat,\n\t\tfunction(terminfo)\n\t\t\treturn m_form_of.format_form_of(text, terminfo, iargs[\"posttext\"])\n\t\tend\n\t)\nend\n\n--[=[\nFunction that implements\
      \ form-of templates that are defined by specific tagged\ninflections (typically a template referring to a non-lemma inflection,\nsuch as {{genitive plural of}}). This works exactly like form_of_t() except\nthat the \"form of\" text displayed before the\
      \ link is based off of a\npre-specified set of inflection tags (which will be appropriately linked to\nthe glossary) instead of arbitrary text. From the user's perspective, there\nis no difference between templates implemented using form_of_t() and\ntagged_form_of_t();\
      \ they accept exactly the same parameters and work the same.\nSee also inflection_of_t() below, which is intended for templates with\nuser-specified inflection tags.\n\nInvocation params:\n\n1=, 2=, ... (required):\n\tOne or more inflection tags describing\
      \ the inflection in question.\nsplit_tags=:\n\tIf specified, character to split specified inflection tags on. This allows\n\tmultiple tags to be included in a single argument, simplifying template\n\tcode.\nterm_param=:\nlang=:\nsc=:\ncat=, cat2=, ...:\n\
      ignore=, ignore2=, ...:\ndef=, def2=, ...:\nwithcap=:\nwithdot=:\nnolink=:\nlinktext=:\nposttext=:\nnoprimaryentrycat=:\n\tAll of these are the same as in form_of_t().\n]=]--\nfunction export.tagged_form_of_t(frame)\n\tlocal iparams = {\n\t\t[1] = {list\
      \ = true, required = true},\n\t\t[\"split_tags\"] = {},\n\t\t[\"term_param\"] = {type = \"number\"},\n\t\t[\"lang\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"cat\"] = {list = true},\n\t\t[\"ignore\"] = {list = true},\n\t\t[\"def\"] = {list = true},\n\t\t[\"withcap\"\
      ] = {type = \"boolean\"},\n\t\t[\"withdot\"] = {type = \"boolean\"},\n\t\t[\"nolink\"] = {type = \"boolean\"},\n\t\t[\"linktext\"] = {},\n\t\t[\"posttext\"] = {},\n\t\t[\"noprimaryentrycat\"] = {},\n\t}\n\t\n\tlocal iargs = require(\"Module:parameters\"\
      ).process(frame.args, iparams)\n\tlocal parent_args = frame:getParent().args\n\n\tlocal term_param = iargs[\"term_param\"]\n\n\tlocal compat = iargs[\"lang\"] or parent_args[\"lang\"]\n\tterm_param = term_param or compat and 1 or 2\n\n\tlocal params =\
      \ {\n\t\t-- Numbered params\n\t\t[compat and \"lang\" or 1] = {required = not iargs[\"lang\"]},\n\n\t\t-- Named params not controlling link display\t\t\n\t\t[\"cat\"] = {list = true},\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t\t\
      -- FIXME! The following should only be available when withcap=1 in\n\t\t-- invocation args. Before doing that, need to remove all uses of\n\t\t-- nocap= in other circumstances.\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t-- FIXME! The following should\
      \ only be available when withdot=1 in\n\t\t-- invocation args. Before doing that, need to remove all uses of\n\t\t-- nodot= in other circumstances.\n\t\t[\"nodot\"] = {type = \"boolean\"},\n\t}\n\t\n\tif not iargs[\"nolink\"] and not iargs[\"linktext\"\
      ] then\n\t\tadd_link_params(params, term_param)\n\tend\n\n\tif next(iargs[\"cat\"]) then\n\t\tparams[\"nocat\"] = {type = \"boolean\"}\n\tend\n\t\n\tif iargs[\"withdot\"] then\n\t\tparams[\"dot\"] = {}\n\tend\n\n\tlocal ignored_params = {}\n\tif not iargs[\"\
      withcap\"] then\n\t\tignored_params[\"nocap\"] = true\n\tend\n\tif not iargs[\"withdot\"] then\n\t\tignored_params[\"nodot\"] = true\n\tend\n\n\tlocal args = process_parent_args(\"tagged-form-of-t\", parent_args,\n\t\tparams, iargs[\"def\"], iargs[\"ignore\"\
      ], ignored_params)\n\t\n\treturn construct_form_of_text(iargs, args, term_param, compat,\n\t\tfunction(terminfo)\n\t\t\treturn m_form_of.tagged_inflections(\n\t\t\t\tsplit_inflection_tags(iargs[1], iargs[\"split_tags\"]), terminfo,\n\t\t\t\targs[\"notext\"\
      ], iargs[\"withcap\"] and not args[\"nocap\"],\n\t\t\t\tiargs[\"posttext\"]\n\t\t\t)\n\t\tend\n\t)\nend\n\n--[=[\nFunction that implements {{inflection of}} and certain semi-specific variants,\nsuch as {{participle of}} and {{past participle form of}}.\
      \ This function is\nintended for templates that allow the user to specify a set of inflection tags.\nIt works similarly to form_of_t() and tagged_form_of_t() except that the\ncalling convention for the calling template is\n\t{{TEMPLATE|LANG|MAIN_ENTRY_LINK|MAIN_ENTRY_DISPLAY_TEXT|TAG|TAG|...}}\n\
      instead of \n\t{{TEMPLATE|LANG|MAIN_ENTRY_LINK|MAIN_ENTRY_DISPLAY_TEXT|GLOSS}}\nNote that there isn't a numbered parameter for the gloss, but it can still\nbe specified using t= or gloss=.\n\nInvocation params:\n\npreinfl=, preinfl2=, ...:\n\tExtra inflection\
      \ tags to automatically prepend to the tags specified by\n\tthe template.\npostinfl=, postinfl2=, ...:\n\tExtra inflection tags to automatically append to the tags specified by the\n\ttemplate. Used for example by {{past participle form of}} to add the\
      \ tags\n\t'of the|past|p' onto the user-specified tags, which indicate which past\n\tparticiple form the page refers to.\nsplit_tags=:\n\tIf specified, character to split specified inflection tags on. This allows\n\tmultiple tags to be included in a single\
      \ argument, simplifying template\n\tcode. Note that this applies *ONLY* to inflection tags specified in the\n\tinvocation arguments using preinfl= or postinfl=, not to user-specified\n\tinflection tags.\nterm_param=:\nlang=:\nsc=:\ncat=, cat2=, ...:\n\
      ignore=, ignore2=, ...:\ndef=, def2=, ...:\nwithcap=:\nwithdot=:\nnolink=:\nlinktext=:\nposttext=:\nnoprimaryentrycat=:\n\tAll of these are the same as in form_of_t().\n]=]--\nfunction export.inflection_of_t(frame)\n\tlocal iparams = {\n\t\t[\"preinfl\"\
      ] = {list = true},\n\t\t[\"postinfl\"] = {list = true},\n\t\t[\"split_tags\"] = {},\n\t\t[\"term_param\"] = {type = \"number\"},\n\t\t[\"lang\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"cat\"] = {list = true},\n\t\t[\"ignore\"] = {list = true},\n\t\t[\"def\"\
      ] = {list = true},\n\t\t[\"withcap\"] = {type = \"boolean\"},\n\t\t[\"withdot\"] = {type = \"boolean\"},\n\t\t[\"nolink\"] = {type = \"boolean\"},\n\t\t[\"linktext\"] = {},\n\t\t[\"posttext\"] = {},\n\t\t[\"noprimaryentrycat\"] = {},\n\t}\n\n\tlocal iargs\
      \ = require(\"Module:parameters\").process(frame.args, iparams)\n\tlocal parent_args = frame:getParent().args\n\n\tlocal term_param = iargs[\"term_param\"]\n\t\n\tlocal compat = iargs[\"lang\"] or parent_args[\"lang\"]\n\tterm_param = term_param or compat\
      \ and 1 or 2\n\n\tlocal params = {\n\t\t-- Numbered params\n\t\t[compat and \"lang\" or 1] = {required = not iargs[\"lang\"]},\n\t\t[term_param + 2] = {list = true, required = true},\n\t\t\n\t\t-- Named params not controlling link display\t\t\n\t\t[\"\
      cat\"] = {list = true},\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t\t-- FIXME! The following should only be available when withcap=1 in\n\t\t-- invocation args. Before doing that, need to remove all uses of\n\t\t-- nocap= in other\
      \ circumstances.\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t-- FIXME! The following should only be available when withdot=1 in\n\t\t-- invocation args. Before doing that, need to remove all uses of\n\t\t-- nodot= in other circumstances.\n\t\t[\"nodot\"\
      ] = {type = \"boolean\"},\n\t\t-- FIXME! The following should only be available when cat= is specified\n\t\t-- in the invocation args. Before doing that, need to remove all uses\n\t\t-- of nocat= in other circumstances.\n\t\t[\"nocat\"] = {type = \"boolean\"\
      },\n\t}\n\t\n\tif not iargs[\"nolink\"] and not iargs[\"linktext\"] then\n\t\tadd_link_params(params, term_param, \"no-numbered-gloss\")\n\tend\n\n\tlocal ignored_params = {}\n\tif not iargs[\"withcap\"] then\n\t\tignored_params[\"nocap\"] = true\n\tend\n\
      \tif not iargs[\"withdot\"] then\n\t\tignored_params[\"nodot\"] = true\n\tend\n\tif not next(iargs[\"cat\"]) then\n\t\tignored_params[\"nocat\"] = true\n\tend\n\n\tlocal args = process_parent_args(\"inflection-of-t\", parent_args,\n\t\tparams, iargs[\"\
      def\"], iargs[\"ignore\"], ignored_params)\n\t\n\tlocal infls\n\tif not next(iargs[\"preinfl\"]) and not next(iargs[\"postinfl\"]) then\n\t\tinfls = args[term_param + 2]\n\telse\n\t\tinfls = {}\n\t\tfor _, infl in ipairs(split_inflection_tags(iargs[\"\
      preinfl\"], iargs[\"split_tags\"])) do\n\t\t\ttable.insert(infls, infl)\n\t\tend\n\t\tfor _, infl in ipairs(args[term_param + 2]) do\n\t\t\ttable.insert(infls, infl)\n\t\tend\n\t\tfor _, infl in ipairs(split_inflection_tags(iargs[\"postinfl\"], iargs[\"\
      split_tags\"])) do\n\t\t\ttable.insert(infls, infl)\n\t\tend\n\tend\n\n\treturn construct_form_of_text(iargs, args, term_param, compat,\n\t\tfunction(terminfo)\n\t\t\treturn m_form_of.tagged_inflections(\n\t\t\t\tinfls, terminfo, args[\"notext\"],\n\t\t\
      \t\tiargs[\"withcap\"] and not args[\"nocap\"], iargs[\"posttext\"]\n\t\t\t)\n\t\tend\n\t)\nend\n\nreturn export\n\n-- For Vim, so we get 4-space tabs\n-- vim: set ts=4 sw=4 noet:</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:18.400Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aform+of&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=36782 t=1555362498313675
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:18 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1226.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 594632480, 728551373, 702942564
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4222325\" pageid=\"4222325\" ns=\"828\" title=\"Module:form of\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-10T05:06:26Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"support notext=\" xml:space=\"preserve\">local m_links = require(\"Module:links\")\nlocal m_table = require(\"Module:table\")\nlocal m_data = mw.loadData(\"Module:form of/data\")\n\nlocal rmatch = mw.ustring.match\n\
      local rsplit = mw.text.split\n\nlocal export = {}\n\n-- FIXME! Move to a utility module.\n\nfunction export.ucfirst(text)\n\tlocal function doucfirst(text)\n\t\t-- Actual function to uppercase first letter.\n\t\treturn mw.ustring.upper(mw.ustring.sub(text,\
      \ 1, 1)) .. mw.ustring.sub(text, 2)\n\tend\n\t-- If there's a link at the beginning, uppercase the first letter of the\n\t-- link text. This pattern matches both piped and unpiped links.\n\t-- If the link is not piped, the second capture (linktext) will\
      \ be empty.\n\tlocal link, linktext, remainder = rmatch(text, \"^%[%[([^|%]]+)%|?(.-)%]%](.*)$\")\n\tif link then\n\t\treturn \"[[\" .. link .. \"|\" .. doucfirst(linktext ~= \"\" and linktext or link) .. \"]]\" .. remainder\n\tend\n\treturn doucfirst(text)\n\
      end\n\n\nfunction export.format_form_of(text, terminfo, posttext)\n\tlocal parts = {}\n\ttable.insert(parts, \"&lt;span class='form-of-definition use-with-mention'&gt;\")\n\ttable.insert(parts, text)\n\tif text ~= \"\" and terminfo then\n\t\ttable.insert(parts,\
      \ \" \")\n\tend\n\tif terminfo then\n\t\ttable.insert(parts, \"&lt;span class='form-of-definition-link'&gt;\")\n\t\tif type(terminfo) == \"string\" then\n\t\t\ttable.insert(parts, terminfo)\n\t\telse\n\t\t\ttable.insert(parts, m_links.full_link(terminfo,\
      \ \"term\", false))\n\t\tend\n\t\ttable.insert(parts, \"&lt;/span&gt;\")\n\tend\n\tif posttext then\n\t\ttable.insert(parts, posttext)\n\tend\n\ttable.insert(parts, \"&lt;/span&gt;\")\n\treturn table.concat(parts)\nend\n\n\nlocal function normalize_tag(tag)\n\
      \tif m_data.shortcuts[tag] then\n\telseif m_data.tags[tag] then\n\telse\n\t\trequire(\"Module:debug\").track{\n\t\t\t\"inflection of/unknown\",\n\t\t\t\"inflection of/unknown/\" .. tag:gsub(\"%[\", \"(\"):gsub(\"%]\", \")\"):gsub(\"|\", \"!\")\n\t\t}\n\
      \tend\n\n\ttag = m_data.shortcuts[tag] or tag\n\tlocal data = m_data.tags[tag]\n\n\t-- If the tag has a special display form, use it\n\tif data and data.display then\n\t\ttag = data.display\n\tend\n\n\t-- If there is a nonempty glossary index, then show\
      \ a link to it\n\tif data and data.glossary then\n\t\ttag = \"[[Appendix:Glossary#\" .. mw.uri.anchorEncode(data.glossary) .. \"|\" .. tag .. \"]]\"\n\tend\n\treturn tag\nend\n\nfunction export.tagged_inflections(tags, terminfo, notext, capfirst, posttext)\n\
      \tlocal cur_infl = {}\n\tlocal inflections = {}\n\t\n\tfor i, tagspec in ipairs(tags) do\n\t\tif tagspec == \";\" then\n\t\t\tif #cur_infl &gt; 0 then\n\t\t\t\ttable.insert(inflections, table.concat(cur_infl, \" \"))\n\t\t\tend\n\t\t\t\n\t\t\tcur_infl\
      \ = {}\n\t\telse\n\t\t\tlocal split_tags = rsplit(tagspec, \"//\", true)\n\t\t\tif #split_tags == 1 then\n\t\t\t\ttable.insert(cur_infl, normalize_tag(split_tags[1]))\n\t\t\telse\n\t\t\t\tlocal normalized_tags = {}\n\t\t\t\tfor _, tag in ipairs(split_tags)\
      \ do\n\t\t\t\t\ttable.insert(normalized_tags, normalize_tag(tag))\n\t\t\t\tend\n\t\t\t\ttable.insert(cur_infl, m_table.serialCommaJoin(normalized_tags))\n\t\t\tend\n\t\tend\n\tend\n\t\n\tif #cur_infl &gt; 0 then\n\t\ttable.insert(inflections, table.concat(cur_infl,\
      \ \" \"))\n\tend\n\t\n\tif #inflections == 1 then\n\t\treturn export.format_form_of(\n\t\t\tnotext and \"\" or ((capfirst and export.ucfirst(inflections[1]) or inflections[1]) ..\n\t\t\t\t(terminfo and \" of\" or \"\")),\n\t\t\tterminfo, posttext\n\t\t\
      )\n\telse\n\t\tlocal link = export.format_form_of(\n\t\t\tnotext and \"\" or ((capfirst and \"Inflection\" or \"inflection\") ..\n\t\t\t\t(terminfo and \" of\" or \"\")),\n\t\t\tterminfo, (posttext or \"\") .. \":\"\n\t\t)\n\t\treturn link ..\"\\n## &lt;span\
      \ class='form-of-definition use-with-mention'&gt;\" .. table.concat(inflections, \"&lt;/span&gt;\\n## &lt;span class='form-of-definition use-with-mention'&gt;\") .. \"&lt;/span&gt;\"\n\tend\nend\n\nfunction export.to_Wikidata_IDs(tags)\n\tif type(tags)\
      \ == \"string\" then\n\t\ttags = mw.text.split(tags, \"|\", true)\n\tend\n\t\n\tlocal ret = {}\n\t\n\tfor i, tag in ipairs(tags) do\n\t\tif tag == \";\" then\n\t\t\terror(\"Semicolon is not supported for Wikidata IDs\")\n\t\tend\n\t\t\n\t\ttag = m_data.shortcuts[tag]\
      \ or tag\n\t\tlocal data = m_data.tags[tag]\n\t\t\n\t\tif not data or not data.wikidata then\n\t\t\terror(\"The tag \\\"\" .. tag .. \"\\\" does not have a Wikidata ID defined in Module:form of/data\")\n\t\tend\n\t\t\n\t\ttable.insert(ret, data.wikidata)\n\
      \tend\n\t\n\treturn ret\nend\n\n\nreturn export\n\n-- For Vim, so we get 4-space tabs\n-- vim: set ts=4 sw=4 noet:</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:18.805Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Atable&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54817 t=1555362498677169
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:18 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1221.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 193261429, 559366021, 691490887
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5122966\" pageid=\"5122966\" ns=\"828\" title=\"Module:table\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-14T04:16:37Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"add deepEquals, deepEqualsList for deep comparisons\" xml:space=\"preserve\">--[[\n------------------------------------------------------------------------------------\n--                      table (formerly\
      \ TableTools)                               --\n--                                                                                --\n-- This module inclcudes a number of functions for dealing with Lua tables.        --\n-- It is a meta-module, meant to\
      \ be called from other Lua modules, and should     --\n-- not be called directly from #invoke.                                           --\n------------------------------------------------------------------------------------\n--]]\n\n--[[\n\tInserting\
      \ new values into a table using a local \"index\" variable, which is\n\tincremented each time, is faster than using \"table.insert(t, x)\" or\n\t\"t[#t + 1] = x\". See the talk page.\n]]\n\nlocal libraryUtil = require('libraryUtil')\n\nlocal export = {}\n\
      \n-- Define often-used variables and functions.\nlocal floor = math.floor\nlocal infinity = math.huge\nlocal checkType = libraryUtil.checkType\nlocal checkTypeMulti = libraryUtil.checkTypeMulti\n\nlocal function _check(funcName, expectType)\n\tif type(expectType)\
      \ == \"string\" then\n\t\treturn function(argIndex, arg, nilOk)\n\t\t\tcheckType(funcName, argIndex, arg, expectType, nilOk)\n\t\tend\n\telse\n\t\treturn function(argIndex, arg, expectType, nilOk)\n\t\t\tif type(expectType) == \"table\" then\n\t\t\t\t\
      checkTypeMulti(funcName, argIndex, arg, expectType, nilOk)\n\t\t\telse\n\t\t\t\tcheckType(funcName, argIndex, arg, expectType, nilOk)\n\t\t\tend\n\t\tend\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- isPositiveInteger\n--\n-- This function returns true if the given value is a positive integer, and false\n-- if not. Although it doesn't operate on tables, it is included here as it is\n-- useful for determining whether a given table key is in the array\
      \ part or the\n-- hash part of a table.\n------------------------------------------------------------------------------------\n--]]\nfunction export.isPositiveInteger(v)\n\treturn type(v) == 'number' and v &gt;= 1 and floor(v) == v and v &lt; infinity\n\
      end\n\n--[[\n------------------------------------------------------------------------------------\n-- isNan\n--\n-- This function returns true if the given number is a NaN value, and false\n-- if not. Although it doesn't operate on tables, it is included\
      \ here as it is\n-- useful for determining whether a value can be a valid table key. Lua will\n-- generate an error if a NaN is used as a table key.\n------------------------------------------------------------------------------------\n--]]\nfunction export.isNan(v)\n\
      \tif type(v) == 'number' and tostring(v) == '-nan' then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- shallowClone\n--\n-- This returns a clone of\
      \ a table. The value returned is a new table, but all\n-- subtables and functions are shared. Metamethods are respected, but the returned\n-- table will have no metatable of its own.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.shallowClone(t)\n\tlocal ret = {}\n\tfor k, v in pairs(t) do\n\t\tret[k] = v\n\tend\n\treturn ret\nend\n\n--[[\nShallow copy\n]]\nfunction export.shallowcopy(orig)\n\tlocal orig_type = type(orig)\n\tlocal copy\n\tif orig_type == 'table'\
      \ then\n\t\tcopy = {}\n\t\tfor orig_key, orig_value in pairs(orig) do\n\t\t\tcopy[orig_key] = orig_value\n\t\tend\n\telse -- number, string, boolean, etc\n\t\tcopy = orig\n\tend\n\treturn copy\nend\n\n--[[\n\tRecursive deep copy function\n\tEquivalent\
      \ to mw.clone?\n]]\nlocal function deepcopy(orig, includeMetatable, already_seen)\n\t-- Stores copies of tables indexed by the original table.\n\talready_seen = already_seen or {}\n\t\n\tlocal copy = already_seen[orig]\n\tif copy ~= nil then\n\t\treturn\
      \ copy\n\tend\n\t\n\tif type(orig) == 'table' then\n\t\tcopy = {}\n\t\tfor orig_key, orig_value in pairs(orig) do\n\t\t\tcopy[deepcopy(orig_key, includeMetatable, already_seen)] = deepcopy(orig_value, includeMetatable, already_seen)\n\t\tend\n\t\talready_seen[orig]\
      \ = copy\n\t\t\n\t\tif includeMetatable then\n\t\t\tlocal mt = getmetatable(orig)\n\t\t\tif mt ~= nil then\n\t\t\t\tlocal mt_copy = deepcopy(mt, includeMetatable, already_seen)\n\t\t\t\tsetmetatable(copy, mt_copy)\n\t\t\tend\n\t\tend\n\telse -- number,\
      \ string, boolean, etc\n\t\tcopy = orig\n\tend\n\treturn copy\nend\n\nfunction export.deepcopy(orig, noMetatable, already_seen)\n\tcheckType(\"deepcopy\", 3, already_seen, \"table\", true)\n\t\n\treturn deepcopy(orig, not noMetatable, already_seen)\nend\n\
      \n--[[\n------------------------------------------------------------------------------------\n-- removeDuplicates\n--\n-- This removes duplicate values from an array. Non-positive-integer keys are\n-- ignored. The earliest value is kept, and all subsequent\
      \ duplicate values are\n-- removed, but otherwise the array order is unchanged.\n------------------------------------------------------------------------------------\n--]]\nfunction export.removeDuplicates(t)\n\tcheckType('removeDuplicates', 1, t, 'table')\n\
      \tlocal isNan = export.isNan\n\tlocal ret, exists = {}, {}\n\tlocal index = 1\n\tfor _, v in ipairs(t) do\n\t\tif isNan(v) then\n\t\t\t-- NaNs can't be table keys, and they are also unique, so we don't need to check existence.\n\t\t\tret[index] = v\n\t\
      \t\tindex = index + 1\n\t\telse\n\t\t\tif not exists[v] then\n\t\t\t\tret[index] = v\n\t\t\t\tindex = index + 1\n\t\t\t\texists[v] = true\n\t\t\tend\n\t\tend\n\tend\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- numKeys\n--\n-- This takes a table and returns an array containing the numbers of any numerical\n-- keys that have non-nil values, sorted in numerical order.\n------------------------------------------------------------------------------------\n--]]\n\
      function export.numKeys(t, checked)\n\tif not checked then\n\t\tcheckType('numKeys', 1, t, 'table')\n\tend\n\tlocal isPositiveInteger = export.isPositiveInteger\n\tlocal nums = {}\n\tlocal index = 1\n\tfor k, _ in pairs(t) do\n\t\tif isPositiveInteger(k)\
      \ then\n\t\t\tnums[index] = k\n\t\t\tindex = index + 1\n\t\tend\n\tend\n\ttable.sort(nums)\n\treturn nums\nend\n\nfunction export.maxIndex(t)\n\tcheckType('maxIndex', 1, t, 'table')\n\tlocal positiveIntegerKeys = export.numKeys(t)\n\tif positiveIntegerKeys[1]\
      \ then\n\t\treturn math.max(unpack(positiveIntegerKeys))\n\telse\n\t\treturn 0 -- ???\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- affixNums\n--\n-- This takes a table and returns an array\
      \ containing the numbers of keys with the\n-- specified prefix and suffix.\n-- affixNums({a1 = 'foo', a3 = 'bar', a6 = 'baz'}, \"a\")\n--\t\t↓\n-- {1, 3, 6}.\n------------------------------------------------------------------------------------\n--]]\n\
      function export.affixNums(t, prefix, suffix)\n\tlocal check = _check('affixNums')\n\tcheck(1, t, 'table')\n\tcheck(2, prefix, 'string', true)\n\tcheck(3, suffix, 'string', true)\n\t\n\tlocal function cleanPattern(s)\n\t\t-- Cleans a pattern so that the\
      \ magic characters ()%.[]*+-?^$ are interpreted literally.\n\t\ts = s:gsub('([%(%)%%%.%[%]%*%+%-%?%^%$])', '%%%1')\n\t\treturn s\n\tend\n\t\n\tprefix = prefix or ''\n\tsuffix = suffix or ''\n\tprefix = cleanPattern(prefix)\n\tsuffix = cleanPattern(suffix)\n\
      \tlocal pattern = '^' .. prefix .. '([1-9]%d*)' .. suffix .. '$'\n\t\n\tlocal nums = {}\n\tlocal index = 1\n\tfor k, _ in pairs(t) do\n\t\tif type(k) == 'string' then\n\t\t\tlocal num = mw.ustring.match(k, pattern)\n\t\t\tif num then\n\t\t\t\tnums[index]\
      \ = tonumber(num)\n\t\t\t\tindex = index + 1\n\t\t\tend\n\t\tend\n\tend\n\ttable.sort(nums)\n\treturn nums\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- numData\n--\n-- Given a table with keys like\
      \ (\"foo1\", \"bar1\", \"foo2\", \"baz2\"), returns a table\n-- of subtables in the format\n-- { [1] = {foo = 'text', bar = 'text'}, [2] = {foo = 'text', baz = 'text'} }\n-- Keys that don't end with an integer are stored in a subtable named \"other\".\n\
      -- The compress option compresses the table so that it can be iterated over with\n-- ipairs.\n------------------------------------------------------------------------------------\n--]]\nfunction export.numData(t, compress)\n\tlocal check = _check('numData')\n\
      \tcheck(1, t, 'table')\n\tcheck(2, compress, 'boolean', true)\n\t\n\tlocal ret = {}\n\tfor k, v in pairs(t) do\n\t\tlocal prefix, num = tostring(k):match('^([^0-9]*)([1-9][0-9]*)$')\n\t\tif num then\n\t\t\tnum = tonumber(num)\n\t\t\tlocal subtable = ret[num]\
      \ or {}\n\t\t\tif prefix == '' then\n\t\t\t\t-- Positional parameters match the blank string; put them at the start of the subtable instead.\n\t\t\t\tprefix = 1\n\t\t\tend\n\t\t\tsubtable[prefix] = v\n\t\t\tret[num] = subtable\n\t\telse\n\t\t\tlocal subtable\
      \ = ret.other or {}\n\t\t\tsubtable[k] = v\n\t\t\tret.other = subtable\n\t\tend\n\tend\n\tif compress then\n\t\tlocal other = ret.other\n\t\tret = export.compressSparseArray(ret)\n\t\tret.other = other\n\tend\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- compressSparseArray\n--\n-- This takes an array with one or more nil values, and removes the nil values\n-- while preserving the order, so that the array can be safely traversed with\n-- ipairs.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.compressSparseArray(t)\n\tcheckType('compressSparseArray', 1, t, 'table')\n\tlocal ret = {}\n\tlocal index = 1\n\tlocal nums = export.numKeys(t)\n\tfor _, num in ipairs(nums) do\n\t\tret[index] = t[num]\n\t\tindex = index + 1\n\t\
      end\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- sparseIpairs\n--\n-- This is an iterator for sparse arrays. It can be used like ipairs, but can\n-- handle nil values.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.sparseIpairs(t)\n\tcheckType('sparseIpairs', 1, t, 'table')\n\tlocal nums = export.numKeys(t)\n\tlocal i = 0\n\treturn function()\n\t\ti = i + 1\n\t\tlocal key = nums[i]\n\t\tif key then\n\t\t\treturn key, t[key]\n\t\telse\n\t\t\t\
      return nil, nil\n\t\tend\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- size\n--\n-- This returns the size of a key/value pair table. It will also work on arrays,\n-- but for arrays it is more\
      \ efficient to use the # operator.\n------------------------------------------------------------------------------------\n--]]\nfunction export.size(t)\n\tcheckType('size', 1, t, 'table')\n\tlocal i = 0\n\tfor _ in pairs(t) do\n\t\ti = i + 1\n\tend\n\t\
      return i\nend\n\n--[[\n-- This returns the length of a table, or the first integer key n counting from\n-- 1 such that t[n + 1] is nil. It is similar to the operator #, but may return\n-- a different value when there are gaps in the array portion of the\
      \ table.\n-- Intended to be used on data loaded with mw.loadData. For other tables, use #.\n--]]\nfunction export.length(t)\n\tlocal i = 0\n\trepeat\n\t\ti = i + 1\n\tuntil t[i] == nil\n\treturn i - 1\nend\n\n--[[\nTakes table and a value to be found.\n\
      If the value is in the array portion of the table, return true.\nIf the value is in the hashmap or not in the table, return false.\n]]\nfunction export.contains(list, x)\n\tfor _, v in ipairs(list) do\n\t\tif v == x then return true end\n\tend\n\treturn\
      \ false\nend\n\n--[[\nRecursively compare two values that may be tables, including tables with\nnested tables as values. Return true if both values are structurally equal.\nNote that this handles arbitary levels of nesting. If all tables are known\nto\
      \ be lists (with only integral keys), use export.deepEqualsList, which will\nbe more efficient.\n\nNOTE: This is *NOT* smart enough to properly handle cycles; in such a case, it\nwill get into an infinite loop.\n]]\nfunction export.deepEquals(x, y)\n \
      \   if type(x) == \"table\" and type(y) == \"table\" then\n    \t-- Two tables are the same if they have the same number of elements\n    \t-- and all keys that are present in one of the tables compare equal\n    \t-- to the corresponding keys in the other\
      \ table, using structural\n    \t-- comparison.\n    \tlocal sizex = 0\n        for key, value in pairs(x) do\n            if not export.deepEquals(value, y[key]) then\n                return false\n            end\n            sizex = sizex + 1\n    \
      \    end\n        local sizey = export.size(y)\n        if sizex ~= sizey then\n            return false\n        end \n        return true\n    end\n    return x == y\nend\n\n--[[\nRecursively compare two values that may be lists (i.e. tables with integral\n\
      keys), including lists with nested lists as values. Return true if both values\nare structurally equal. Note that this handles arbitary levels of nesting.\nResults are undefined if tables with non-integral keys are present anywhere in\neither structure;\
      \ if that may be the case, use export.deepEquals, which will\nhandle such tables correctly but be less efficient on lists than\nexport.deepEqualsList.\n\nNOTE: This is *NOT* smart enough to properly handle cycles; in such a case, it\nwill get into an infinite\
      \ loop.\n]]\nfunction export.deepEqualsList(x, y)\n    if type(x) == \"table\" and type(y) == \"table\" then\n        if #x ~= #y then\n            return false\n        end \n        for key, value in ipairs(x) do\n            if not export.deepEqualsList(value,\
      \ y[key]) then\n                return false\n            end\n        end\n        return true\n    end\n    return x == y\nend\n\n--[[\n\tFinds key for specified value in a given table.\n\tRoughly equivalent to reversing the key-value pairs in the table\
      \ –\n\t\treversed_table = { [value1] = key1, [value2] = key2, ... }\n\t– and then returning reversed_table[valueToFind].\n\t\n\tThe value can only be a string or a number\n\t(not nil, a boolean, a table, or a function).\n\t\n\tOnly reliable if there is\
      \ just one key with the specified value.\n\tOtherwise, the function returns the first key found,\n\tand the output is unpredictable.\n]]\nfunction export.keyFor(t, valueToFind)\n\tlocal check = _check('keyFor')\n\tcheck(1, t, 'table')\n\tcheck(2, valueToFind,\
      \ { 'string', 'number' })\n\t\n\tfor key, value in pairs(t) do\n\t\tif value == valueToFind then\n\t\t\treturn key\n\t\tend\n\tend\n\t\n\treturn nil\nend\n\n--[[\n\tThe default sorting function used in export.keysToList if no keySort\n\tis defined.\n]]\n\
      local function defaultKeySort(key1, key2)\n\t-- \"number\" &lt; \"string\", so numbers will be sorted before strings.\n\tlocal type1, type2 = type(key1), type(key2)\n\tif type1 ~= type2 then\n\t\treturn type1 &lt; type2\n\telse\n\t\treturn key1 &lt; key2\n\
      \tend\nend\n\n--[[\n\tReturns a list of the keys in a table, sorted using either the default\n\ttable.sort function or a custom keySort function.\n\tIf there are only numerical keys, numKeys is probably more efficient.\n]]\nfunction export.keysToList(t,\
      \ keySort, checked)\n\tif not checked then\n\t\tlocal check = _check('keysToList')\n\t\tcheck(1, t, 'table')\n\t\tcheck(2, keySort, 'function', true)\n\tend\n\t\n\tlocal list = {}\n\tlocal index = 1\n\tfor key, _ in pairs(t) do\n\t\tlist[index] = key\n\
      \t\tindex = index + 1\n\tend\n\t\n\t-- Place numbers before strings, otherwise sort using &lt;.\n\tif not keySort then\n\t\tkeySort = defaultKeySort\n\tend\n\t\n\ttable.sort(list, keySort)\n\t\n\treturn list\nend\n\n--[[\n\tIterates through a table, with\
      \ the keys sorted using the keysToList function.\n\tIf there are only numerical keys, sparseIpairs is probably more efficient.\n]]\nfunction export.sortedPairs(t, keySort)\n\tlocal check = _check('keysToList')\n\tcheck(1, t, 'table')\n\tcheck(2, keySort,\
      \ 'function', true)\n\t\n\tlocal list = export.keysToList(t, keySort, true)\n\t\n\tlocal i = 0\n\treturn function()\n\t\ti = i + 1\n\t\tlocal key = list[i]\n\t\tif key ~= nil then\n\t\t\treturn key, t[key]\n\t\telse\n\t\t\treturn nil, nil\n\t\tend\n\t\
      end\nend\n\nfunction export.reverseIpairs(list)\n\tcheckType('reverse_ipairs', 1, list, 'table')\n\t\n\tlocal i = #list + 1\n\treturn function()\n\t\ti = i - 1\n\t\tif list[i] ~= nil then\n\t\t\treturn i, list[i]\n\t\telse\n\t\t\treturn nil, nil\n\t\t\
      end\n\tend\nend\n\n--[=[\n\tJoins an array with serial comma and serial conjunction, normally \"and\".\n\tAn improvement on mw.text.listToText, which doesn't properly handle serial\n\tcommas.\n\t\n\tOptions:\n\t\t- conj\n\t\t\tConjunction to use; defaults\
      \ to \"and\".\n\t\t- italicizeConj\n\t\t\tItalicize conjunction: for [[Module:Template:also]]\n\t\t- dontTag\n\t\t\tDon't tag the serial comma and serial \"and\". For error messages, in\n\t\t\twhich HTML cannot be used.\n]=]\nfunction export.serialCommaJoin(seq,\
      \ options)\n\tlocal check = _check(\"serialCommaJoin\", \"table\")\n\tcheck(1, seq)\n\tcheck(2, options, true)\n\t\n\tlocal length = #seq\n\t\n\tif not options then\n\t\toptions = {}\n\tend\n\t\n\tlocal conj\n\tif length &gt; 1 then\n\t\tconj = options.conj\
      \ or \"and\"\n\t\tif options.italicizeConj then\n\t\t\tconj = \"''\" .. conj .. \"''\"\n\t\tend\n\tend\n\t\n\tif length == 0 then\n\t\treturn \"\"\n\telseif length == 1 then\n\t\treturn seq[1] -- nothing to join\n\telseif length == 2 then\n\t\treturn seq[1]\
      \ .. \" \" .. conj .. \" \" .. seq[2]\n\telse\n\t\tlocal comma = options.dontTag and \",\" or '&lt;span class=\"serial-comma\"&gt;,&lt;/span&gt;'\n\t\tconj = options.dontTag and ' ' .. conj .. \" \" or '&lt;span class=\"serial-and\"&gt; ' .. conj .. '&lt;/span&gt;\
      \ '\n\t\treturn table.concat(seq, \", \", 1, length - 1) ..\n\t\t\t\tcomma .. conj .. seq[length]\n\tend\nend\n\n--[[\n\tConcatenates all values in the table that are indexed by a number, in order.\n\tsparseConcat{ a, nil, c, d }  =&gt;  \"acd\"\n\tsparseConcat{\
      \ nil, b, c, d }  =&gt;  \"bcd\"\n]]\nfunction export.sparseConcat(t, sep, i, j)\n\tlocal list = {}\n\t\n\tlocal list_i = 0\n\tfor _, v in export.sparseIpairs(t) do\n\t\tlist_i = list_i + 1\n\t\tlist[list_i] = v\n\tend\n\t\n\treturn table.concat(list,\
      \ sep, i, j)\nend\n\n--[[\n\tValues of numberic keys in array portion of table are reversed:\n\t{ \"a\", \"b\", \"c\" } -&gt; { \"c\", \"b\", \"a\" }\n--]]\nfunction export.reverse(t)\n\tcheckType(\"reverse\", 1, t, \"table\")\n\t\n\tlocal new_t = {}\n\
      \tlocal new_t_i = 1\n\tfor i = #t, 1, -1 do\n\t\tnew_t[new_t_i] = t[i]\n\t\tnew_t_i = new_t_i + 1\n\tend\n\treturn new_t\nend\n\nfunction export.reverseConcat(t, sep, i, j)\n\treturn table.concat(export.reverse(t), sep, i, j)\nend\n\n-- { \"a\", \"b\"\
      , \"c\" } -&gt; { a = 1, b = 2, c = 3 }\nfunction export.invert(array)\n\tcheckType(\"invert\", 1, array, \"table\")\n\t\n\tlocal map = {}\n\tfor i, v in ipairs(array) do\n\t\tmap[v] = i\n\tend\n\t\n\treturn map\nend\n\n--[[\n\t{ \"a\", \"b\", \"c\" }\
      \ -&gt; { [\"a\"] = true, [\"b\"] = true, [\"c\"] = true }\n--]]\nfunction export.listToSet(t)\n\tcheckType(\"listToSet\", 1, t, \"table\")\n\t\n\tlocal set = {}\n\tfor _, item in ipairs(t) do\n\t\tset[item] = true\n\tend\n\treturn set\nend\n\n--[[\n\t\
      Returns true if all keys in the table are consecutive integers starting at 1.\n--]]\nfunction export.isArray(t)\n\tcheckType(\"isArray\", 1, t, \"table\")\n\t\n\tlocal i = 0\n\tfor _ in pairs(t) do\n\t\ti = i + 1\n\t\tif t[i] == nil then\n\t\t\treturn\
      \ false\n\t\tend\n\tend\n\treturn true\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:18.995Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aform+of%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49418 t=1555362498885950
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:18 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 573566818, 821513874, 690251784
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4625972\" pageid=\"4625972\" ns=\"828\" title=\"Module:form of/data\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-11T02:03:34Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add quotative mood and wikidata for volitive mood\" xml:space=\"preserve\">local tags = {}\n\n-- Person\ntags[\"first-person\"] = {\n\ttag_type = \"person\",\n\tglossary = \"first person\"\
      ,\n\tshortcuts = {\"1\"},\n\twikidata = \"Q21714344\",\n}\n\ntags[\"second-person\"] = {\n\ttag_type = \"person\",\n\tglossary = \"second person\",\n\tshortcuts = {\"2\"},\n\twikidata = \"Q51929049\",\n}\n\ntags[\"third-person\"] = {\n\ttag_type = \"person\"\
      ,\n\tglossary = \"third person\",\n\tshortcuts = {\"3\"},\n\twikidata = \"Q51929074\",\n}\n\ntags[\"impersonal\"] = {\n\ttag_type = \"person\",\n\tglossary = \"impersonal\",\n\tshortcuts = {\"impers\"},\n}\n\n-- Number\ntags[\"singular\"] = {\n\ttag_type\
      \ = \"number\",\n\tglossary = \"singular number\",\n\tshortcuts = {\"s\"},\n\twikidata = \"Q110786\",\n}\n\ntags[\"dual\"] = {\n\ttag_type = \"number\",\n\tglossary = \"dual number\",\n\tshortcuts = {\"d\"},\n\twikidata = \"Q110022\",\n}\n\ntags[\"trial\"\
      ] = {\n\ttag_type = \"number\",\n\tglossary = \"trial number\",\n\tshortcuts = {\"tr\"},\n\twikidata = \"Q2142560\",\n}\n\ntags[\"paucal\"] = {\n\ttag_type = \"number\",\n\tglossary = \"paucal number\",\n\tshortcuts = {\"pau\"},\n\twikidata = \"Q489410\"\
      ,\n}\n\ntags[\"distributive paucal\"] = {\n\ttag_type = \"number\",\n\tglossary = \"distributive paucal number\",\n\tshortcuts = {\"dpau\"},\n}\n\ntags[\"plural\"] = {\n\ttag_type = \"number\",\n\tglossary = \"plural number\",\n\tshortcuts = {\"p\"},\n\
      \twikidata = \"Q146786\",\n}\n\ntags[\"singulative\"] = {\n\ttag_type = \"number\",\n\tglossary = \"singulative number\",\n\tshortcuts = {\"sgl\"},\n\twikidata = \"Q1450795\",\n}\n\ntags[\"collective\"] = {\n\ttag_type = \"number\",\n\tglossary = \"collective\
      \ number\",\n\tshortcuts = {\"col\"},\n\twikidata = \"Q694268\",\n}\n\n-- Gender\ntags[\"masculine\"] = {\n\ttag_type = \"gender\",\n\tglossary = \"gender\",\n\tshortcuts = {\"m\"},\n\twikidata = \"Q499327\",\n}\n\ntags[\"feminine\"] = {\n\ttag_type =\
      \ \"gender\",\n\tglossary = \"gender\",\n\tshortcuts = {\"f\"},\n\twikidata = \"Q1775415\",\n}\n\ntags[\"neuter\"] = {\n\ttag_type = \"gender\",\n\tglossary = \"gender\",\n\tshortcuts = {\"n\"},\n\twikidata = \"Q1775461\",\n}\n\ntags[\"common\"] = {\n\t\
      tag_type = \"gender\",\n\tglossary = \"gender\",\n\tshortcuts = {\"c\"},\n\twikidata = \"Q1305037\",\n}\n\ntags[\"virile\"] = {\n\ttag_type = \"gender\",\n\tglossary = \"virile\",\n\tshortcuts = {\"vr\"},\n}\n\ntags[\"nonvirile\"] = {\n\ttag_type = \"\
      gender\",\n\tglossary = \"nonvirile\",\n\tshortcuts = {\"nv\"},\n}\n\n-- Animacy (may be useful sometimes for [[Module:object usage]].)\ntags[\"animate\"] = {\n\ttag_type = \"animacy\",\n\tglossary = \"animate\",\n\tshortcuts = {\"an\"},\n\twikidata =\
      \ \"Q51927507\",\n}\n\ntags[\"inanimate\"] = {\n\ttag_type = \"animacy\",\n\tglossary = \"inanimate\",\n\tshortcuts = {\"in\"},\n\twikidata = \"Q51927539\",\n}\n\ntags[\"personal\"] = {\n\ttag_type = \"animacy\",\n\tshortcuts = {\"pr\"},\n}\n\n-- Tense/aspect\n\
      tags[\"present\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"present tense\",\n\tshortcuts = {\"pres\"},\n\twikidata = \"Q192613\",\n}\n\ntags[\"past\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"past tense\",\n\twikidata = \"Q1994301\"\
      ,\n}\n\ntags[\"future\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"future tense\",\n\tshortcuts = {\"fut\", \"futr\"},\n\twikidata = \"Q501405\",\n}\n\ntags[\"non-past\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"non-past tense\",\n\
      \tshortcuts = {\"npast\"},\n\twikidata = \"Q16916993\",\n}\n\ntags[\"progressive\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"progressive\",\n\tshortcuts = {\"prog\"},\n\twikidata = \"Q56653945\",\n}\n\ntags[\"preterite\"] = {\n\ttag_type = \"\
      tense-aspect\",\n\tshortcuts = {\"pret\"},\n\twikidata = \"Q442485\",\n}\n\ntags[\"perfect\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"perfect\",\n\tshortcuts = {\"perf\"},\n\twikidata = \"Q625420\",\n}\n\ntags[\"imperfect\"] = {\n\ttag_type\
      \ = \"tense-aspect\",\n\tglossary = \"imperfect\",\n\tshortcuts = {\"impf\", \"imperf\"},\n}\n\ntags[\"pluperfect\"] = {\n\ttag_type = \"tense-aspect\",\n\tshortcuts = {\"plup\", \"pluperf\"},\n\twikidata = \"Q623742\",\n}\n\ntags[\"semelfactive\"] = {\n\
      \ttag_type = \"tense-aspect\",\n\tshortcuts = {\"semf\"},\n\twikidata = \"Q7449203\",\n}\n\ntags[\"aorist\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"aorist tense\",\n\tshortcuts = {\"aor\", \"aori\"},\n\twikidata = \"Q216497\",\n}\n\ntags[\"\
      past historic\"] = {\n\ttag_type = \"tense-aspect\",\n\tshortcuts = {\"phis\"},\n}\n\ntags[\"imperfective\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"imperfective\",\n\tshortcuts = {\"impfv\", \"imperfv\"},\n\twikidata = \"Q371427\",\n}\n\n\
      tags[\"perfective\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"perfective\",\n\tshortcuts = {\"pfv\", \"perfv\"},\n\twikidata = \"Q1424306\",\n}\n\ntags[\"iterative\"] = {\n\ttag_type = \"tense-aspect\",\n\tshortcuts = {\"iter\"},\n\twikidata\
      \ = \"Q2866772\",\n}\n\n-- Mood\ntags[\"imperative\"] = {\n\ttag_type = \"mood\",\n\tglossary = \"imperative mood\",\n\tshortcuts = {\"imp\", \"impr\"},\n\twikidata = \"Q22716\",\n}\n\ntags[\"indicative\"] = {\n\ttag_type = \"mood\",\n\tglossary = \"indicative\
      \ mood\",\n\tshortcuts = {\"ind\", \"indc\", \"indic\"},\n\twikidata = \"Q682111\",\n}\n\ntags[\"subjunctive\"] = {\n\ttag_type = \"mood\",\n\tglossary = \"subjunctive mood\",\n\tshortcuts = {\"sub\", \"subj\"},\n\twikidata = \"Q473746\",\n}\n\ntags[\"\
      conditional\"] = {\n\ttag_type = \"mood\",\n\tglossary = \"conditional mood\",\n\tshortcuts = {\"cond\"},\n\twikidata = \"Q625581\",\n}\n\ntags[\"optative\"] = {\n\ttag_type = \"mood\",\n\tglossary = \"optative mood\",\n\tshortcuts = {\"opta\", \"opt\"\
      },\n\twikidata = \"Q527205\",\n}\n\ntags[\"potential\"] = {\n\ttag_type = \"mood\",\n\tshortcuts = {\"potn\"},\n\twikidata = \"Q2296856\",\n}\n\ntags[\"jussive\"] = {\n\ttag_type = \"mood\",\n\tglossary = \"jussive mood\",\n\tshortcuts = {\"juss\"},\n\t\
      wikidata = \"Q462367\",\n}\n\ntags[\"cohortative\"] = {\n\ttag_type = \"mood\",\n\tshortcuts = {\"coho\", \"cohort\"},\n}\n\ntags[\"volitive\"] = {\n\ttag_type = \"mood\",\n\tshortcuts = {\"voli\"},\n\twikidata = \"Q10716592\",\n}\n\n-- Exists at least\
      \ in Estonian\ntags[\"quotative\"] = {\n\ttag_type = \"mood\",\n\tglossary = \"quotative mood\",\n\tshortcuts = {\"quot\"},\n\twikidata = \"Q7272884\",\n}\n\n-- Voice\ntags[\"active\"] = {\n\ttag_type = \"voice\",\n\tglossary = \"active voice\",\n\tshortcuts\
      \ = {\"act\", \"actv\"},\n\twikidata = \"Q1317831\",\n}\n\ntags[\"middle\"] = {\n\ttag_type = \"voice\",\n\tglossary = \"middle voice\",\n\tshortcuts = {\"mid\", \"midl\"},\n}\n\ntags[\"passive\"] = {\n\ttag_type = \"voice\",\n\tglossary = \"passive voice\"\
      ,\n\tshortcuts = {\"pass\", \"pasv\"},\n\twikidata = \"Q1194697\",\n}\n\ntags[\"mediopassive\"] = {\n\ttag_type = \"voice\",\n\tglossary = \"mediopassive\",\n\tshortcuts = {\"mp\", \"mpsv\"},\n\twikidata = \"Q1601545\",\n}\n\n-- Non-finite\ntags[\"infinitive\"\
      ] = {\n\ttag_type = \"non-finite\",\n\tshortcuts = {\"inf\"},\n\twikidata = \"Q179230\",\n}\n\ntags[\"participle\"] = {\n\ttag_type = \"non-finite\",\n\tglossary = \"participle\",\n\tshortcuts = {\"part\", \"ptcp\"},\n\twikidata = \"Q814722\",\n}\n\ntags[\"\
      converb\"] = {\n\ttag_type = \"non-finite\",\n\twikidata = \"Q149761\",\n}\n\ntags[\"possessive\"] = {\n\ttag_type = \"non-finite\",\n\tshortcuts = {\"poss\"},\n\twikidata = \"Q2105891\",\n}\n\ntags[\"negative\"] = {\n\ttag_type = \"non-finite\",\n\tshortcuts\
      \ = {\"neg\"},\n}\n\ntags[\"connegative\"] = {\n\ttag_type = \"non-finite\",\n\tshortcuts = {\"conn\", \"conneg\"},\n\twikidata = \"Q5161718\",\n}\n\ntags[\"supine\"] = {\n\ttag_type = \"non-finite\",\n\tglossary = \"supine\",\n\tshortcuts = {\"sup\"},\n\
      \twikidata = \"Q548470\",\n}\n\n-- Cases\ntags[\"abessive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"abe\"},\n\twikidata = \"Q319822\",\n}\n\ntags[\"ablative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"ablative case\",\n\tshortcuts = {\"abl\"\
      },\n\twikidata = \"Q156986\",\n}\n\ntags[\"absolutive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"abs\"},\n\twikidata = \"Q332734\",\n}\n\ntags[\"accusative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"accusative case\",\n\tshortcuts = {\"acc\"\
      },\n\twikidata = \"Q146078\",\n}\n\ntags[\"adessive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"ade\"},\n\twikidata = \"Q281954\",\n}\n\ntags[\"adjectival\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"adj\"},\n}\n\ntags[\"adverbial\"] = {\n\ttag_type\
      \ = \"case\",\n\tglossary = \"adverbial\",\n\tshortcuts = {\"adv\"},\n}\n\ntags[\"allative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"all\"},\n\twikidata = \"Q655020\",\n}\n\ntags[\"anterior\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"ant\"\
      },\n}\n\ntags[\"associative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"ass\", \"assoc\"},\n\twikidata = \"Q15948746\",\n}\n\ntags[\"causal-final\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"cfi\", \"cfin\"},\n\twikidata = \"Q18012653\",\n}\n\n\
      tags[\"comitative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"com\"},\n\twikidata = \"Q838581\",\n}\n\n-- be careful not to clash with comparative degree\ntags[\"comparative case\"] = {\n\ttag_type = \"case\",\n\tdisplay = \"comparative\",\n\tshortcuts\
      \ = {\"comc\"},\n\twikidata = \"Q5155633\",\n}\n\ntags[\"dative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"dative case\",\n\tshortcuts = {\"dat\"},\n\twikidata = \"Q145599\",\n}\n\ntags[\"delative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"del\"\
      },\n\twikidata = \"Q1183901\",\n}\n\ntags[\"direct\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"dir\"},\n\twikidata = \"Q1751855\",\n}\n\ntags[\"distributive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"dis\", \"dist\"},\n\twikidata = \"Q492457\"\
      ,\n}\n\ntags[\"elative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"elative case\",\n\tshortcuts = {\"ela\"},\n\twikidata = \"Q394253\",\n}\n\ntags[\"ergative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"ergative case\",\n\tshortcuts = {\"erg\"},\n\
      \twikidata = \"Q324305\",\n}\n\ntags[\"essive-formal\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"esf\", \"efor\"},\n\twikidata = \"Q3827688\",\n}\n\ntags[\"essive-modal\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"esm\", \"emod\"},\n\twikidata\
      \ = \"Q3827703\",\n}\n\ntags[\"essive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"ess\"},\n\twikidata = \"Q148465\",\n}\n\ntags[\"exclusive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"exc\", \"excl\"},\n}\n\ntags[\"genitive\"] = {\n\ttag_type\
      \ = \"case\",\n\tglossary = \"genitive case\",\n\tshortcuts = {\"gen\"},\n\twikidata = \"Q146233\",\n}\n\ntags[\"illative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"ill\"},\n\twikidata = \"Q474668\",\n}\n\ntags[\"inessive\"] = {\n\ttag_type = \"\
      case\",\n\tshortcuts = {\"ine\"},\n\twikidata = \"Q282031\",\n}\n\ntags[\"instructive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"ist\"},\n\twikidata = \"Q1665275\",\n}\n\ntags[\"instrumental\"] = {\n\ttag_type = \"case\",\n\tglossary = \"instrumental\
      \ case\",\n\tshortcuts = {\"ins\"},\n\twikidata = \"Q192997\",\n}\n\ntags[\"limitative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"limitative case\",\n\tshortcuts = {\"lim\"},\n\twikidata = \"Q35870079\",\n}\n\ntags[\"locative\"] = {\n\ttag_type = \"\
      case\",\n\tglossary = \"locative case\",\n\tshortcuts = {\"loc\"},\n\twikidata = \"Q202142\",\n}\n\ntags[\"locative-qualitative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"locative-qualitative case\",\n\tshortcuts = {\"lqu\", \"lqua\"},\n}\n\ntags[\"\
      nominative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"nominative case\",\n\tshortcuts = {\"nom\"},\n\twikidata = \"Q131105\",\n}\n\ntags[\"objective\"] = {\n\ttag_type = \"case\",\n\tglossary = \"objective case\",\n\tshortcuts = {\"obj\"},\n\twikidata\
      \ = \"Q1233197\",  -- Same as oblique. Wikipedia considers them the same thing, but we want to allow users to choose their own terminology.\n}\n\ntags[\"oblique\"] = {\n\ttag_type = \"case\",\n\tglossary = \"oblique case\",\n\tshortcuts = {\"obl\"},\n\t\
      wikidata = \"Q1233197\",\n}\n\ntags[\"partitive\"] = {\n\ttag_type = \"case\",\n\tglossary = \"partitive case\",\n\tshortcuts = {\"par\"},\n\twikidata = \"Q857325\",\n}\n\ntags[\"prolative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"pro\"},\n\twikidata\
      \ = \"Q952933\",\n}\n\ntags[\"prepositional\"] = {\n\ttag_type = \"case\",\n\tglossary = \"prepositional case\",\n\tshortcuts = {\"pre\", \"prep\"},\n\twikidata = \"Q2114906\",\n}\n\ntags[\"sociative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"sociative\
      \ case\",\n\tshortcuts = {\"soc\"},\n\twikidata = \"Q3773161\",\n}\n\ntags[\"sublative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"sbl\"},\n\twikidata = \"Q2120615\",\n}\n\ntags[\"superessive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"spe\"\
      },\n\twikidata = \"Q222355\",\n}\n\ntags[\"temporal\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"tem\", \"temp\"},\n\twikidata = \"Q3235219\",\n}\n\ntags[\"terminative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"ter\", \"term\"},\n\twikidata =\
      \ \"Q747019\",\n}\n\ntags[\"translative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"tra\", \"tran\"},\n\twikidata = \"Q950170\",\n}\n\ntags[\"vocative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"vocative case\",\n\tshortcuts = {\"voc\"},\n\twikidata\
      \ = \"Q185077\",\n}\n\n-- State\ntags[\"construct\"] = {\n\ttag_type = \"state\",\n\tglossary = \"construct state\",\n\tshortcuts = {\"cons\", \"construct state\"},\n\twikidata = \"Q1641446\",\n}\n\ntags[\"definite\"] = {\n\ttag_type = \"state\",\n\tglossary\
      \ = \"definite\",\n\tshortcuts = {\"def\", \"defn\", \"definite state\"},\n\twikidata = \"Q53997851\",\n}\n\ntags[\"indefinite\"] = {\n\ttag_type = \"state\",\n\tglossary = \"indefinite\",\n\tshortcuts = {\"indef\", \"indf\", \"indefinite state\"},\n\t\
      wikidata = \"Q53997857\",\n}\n\ntags[\"attributive\"] = {\n\ttag_type = \"state\",\n\tglossary = \"attributive\",\n\tshortcuts = {\"attr\"},\n}\n\ntags[\"predicative\"] = {\n\ttag_type = \"state\",\n\tshortcuts = {\"pred\"},\n}\n\n-- Degrees of comparison\n\
      tags[\"comparative degree\"] = {\n\ttag_type = \"comparison\",\n\tglossary = \"comparative\",\n\tshortcuts = {\"comd\", \"comparative\"},\n\twikidata = \"Q14169499\",\n}\n\ntags[\"superlative degree\"] = {\n\ttag_type = \"comparison\",\n\tglossary = \"\
      superlative\",\n\tshortcuts = {\"supd\", \"superlative\"},\n\twikidata = \"Q1817208\",\n}\n\ntags[\"elative degree\"] = {\n\ttag_type = \"comparison\",\n\tglossary = \"elative\",\n\tshortcuts = {\"elad\"},  -- Can't use \"elative\" as shortcut because\
      \ that's already used for the elative case\n\twikidata = \"Q1555419\",\n}\n\ntags[\"equative degree\"] = {\n\ttag_type = \"comparison\",\n\tshortcuts = {\"equd\", \"equative\"},\n\twikidata = \"Q5384239\",\n}\n\n-- Sound changes\ntags[\"contracted\"] =\
      \ {\n\ttag_type = \"sound change\",\n}\n\n-- Other tags\ntags[\"and\"] = {\n\ttag_type = \"other\",\n}\n\nlocal shortcuts = {}\n\n-- Create the shortcuts list\nfor name, data in pairs(tags) do\n\tif data.shortcuts then\n\t\tfor _, shortcut in ipairs(data.shortcuts)\
      \ do\n\t\t\t-- If the shortcut is already in the list, then there is a duplicate.\n\t\t\tif shortcuts[shortcut] then\n\t\t\t\terror(\"The shortcut \\\"\" .. shortcut .. \"\\\" (for the grammar tag \\\"\" .. name .. \"\\\") conflicts with an existing shortcut\
      \ for the tag \\\"\" .. shortcuts[shortcut] .. \"\\\".\")\n\t\t\telseif tags[shortcut] then\n\t\t\t\terror(\"The shortcut \\\"\" .. shortcut .. \"\\\" (for the grammar tag \\\"\" .. name .. \"\\\") conflicts with an existing tag with that name.\")\n\t\t\
      \tend\n\t\t\t\n\t\t\tshortcuts[shortcut] = name\n\t\tend\n\tend\nend\n\nreturn {tags = tags, shortcuts = shortcuts}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:19.376Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Astring&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=57827 t=1555362499250592
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:19 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 210771117, 255499119, 694798115
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4099547\" pageid=\"4099547\" ns=\"828\" title=\"Module:string\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-10-18T08:33:33Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"okay for count to be nil\" xml:space=\"preserve\">local str = {}\n\n-- Cannot include null byte.\nlocal UTF8_char = \"[\\1-\\127\\194-\\244][\\128-\\191]*\"\n\n--[[\nulen\n\nCounts UTF-8 characters. Faster\
      \ than mw.ustring.len.\n\nAssumes that the encoding is correct. Unlike mw.ustring.len, does not return nil\nif encoding is invalid.\n\nDoes not count the bytes 192, 193, and 245-255. They are not used in UTF-8 and\nwill not occur if the string is valid.\
      \ They are replaced with the replacement\ncharacter (U+FFFD) on MediaWiki pages.\n--]]\nfunction str.ulen(text)\n\tlocal _, length = string.gsub(text, UTF8_char, \"\")\n\treturn length\nend\n\n--[[\nlen\n\nThis function returns the length of the target\
      \ string.\n\nUsage:\n{{#invoke:string|len|target_string|}}\nOR\n{{#invoke:string|len|s=target_string}}\n\nParameters\n    s: The string whose length to report\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing\
      \ whitespace from the target string.\n]]\nfunction str.len(frame)\n\tlocal new_args = str._getParameters(frame.args, { 's' });\n\tlocal s = new_args['s'] or '';\n\treturn mw.ustring.len(s)\nend\n\n--[[\nsub\n\nThis function returns a substring of the target\
      \ string at specified indices.\n\nUsage:\n{{#invoke:string|sub|target_string|start_index|end_index}}\nOR\n{{#invoke:string|sub|s=target_string|i=start_index|j=end_index}}\n\nParameters\n    s: The string to return a subset of\n    i: The fist index of\
      \ the substring to return, defaults to 1.\n    j: The last index of the string to return, defaults to the last character.\n    \nThe first character of the string is assigned an index of 1.  If either i or j\nis a negative value, it is interpreted the\
      \ same as selecting a character by\ncounting from the end of the string.  Hence, a value of -1 is the same as\nselecting the last character of the string.\n\nIf the requested indices are out of range for the given string, an error is\nreported.\n]]\nfunction\
      \ str.sub(frame)\n\tlocal new_args = str._getParameters(frame.args, { 's', 'i', 'j' });\n\tlocal s = new_args['s'] or '';\n\tlocal i = tonumber(new_args['i']) or 1;\n\tlocal j = tonumber(new_args['j']) or -1;\n\t\n\tlocal len = mw.ustring.len(s);\n\t\n\
      \t-- Convert negatives for range checking\n\tif i &lt; 0 then\n\t\ti = len + i + 1;\n\tend\n\tif j &lt; 0 then\n\t\tj = len + j + 1;\n\tend\n\t\n\tif i &gt; len or j &gt; len or i &lt; 1 or j &lt; 1 then\n\t\treturn str._error('String subset index out\
      \ of range');\n\tend\n\tif j &lt; i then\n\t\treturn str._error('String subset indices out of order');\n\tend\n\t\n\treturn mw.ustring.sub(s, i, j)\nend\n\n--[[\nThis function implements that features of {{str sub old}} and is kept in order\nto maintain\
      \ these older templates.\n]]\nfunction str.sublength(frame)\n\tlocal i = tonumber(frame.args.i) or 0\n\tlocal len = tonumber(frame.args.len)\n\treturn mw.ustring.sub(frame.args.s, i + 1, len and (i + len))\nend\n\n--[[\nmatch\n\nThis function returns a\
      \ substring from the source string that matches a\nspecified pattern.\n\nUsage:\n{{#invoke:string|match|source_string|pattern_string|start_index|match_number|plain_flag|nomatch_output}}\nOR\n{{#invoke:string|pos|s=source_string|pattern=pattern_string|start=start_index\n\
      \    |match=match_number|plain=plain_flag|nomatch=nomatch_output}}\n\nParameters\n    s: The string to search\n    pattern: The pattern or string to find within the string\n    start: The index within the source string to start the search.  The first\n\
      \        character of the string has index 1.  Defaults to 1.\n    match: In some cases it may be possible to make multiple matches on a single\n        string.  This specifies which match to return, where the first match is\n        match= 1.  If a negative\
      \ number is specified then a match is returned\n        counting from the last match.  Hence match = -1 is the same as requesting\n        the last match.  Defaults to 1.\n    plain: A flag indicating that the pattern should be understood as plain\n  \
      \      text.  Defaults to false.\n    nomatch: If no match is found, output the \"nomatch\" value rather than an error.\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from each string.  In\
      \ some circumstances this is desirable, in\nother cases one may want to preserve the whitespace.\n\nIf the match_number or start_index are out of range for the string being queried, then\nthis function generates an error.  An error is also generated if\
      \ no match is found.\nIf one adds the parameter ignore_errors=true, then the error will be suppressed and\nan empty string will be returned on any failure.\n\nFor information on constructing Lua patterns, a form of [regular expression], see:\n\n* http://www.lua.org/manual/5.1/manual.html#5.4.1\n\
      * http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Patterns\n* http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Ustring_patterns\n\n]]\nfunction str.match(frame)\n\tlocal new_args = str._getParameters(frame.args,\
      \ { 's', 'pattern', 'start', 'match', 'plain', 'nomatch' });\n\tlocal s = new_args['s'] or '';\n\tlocal start = tonumber(new_args['start']) or 1;\n\tlocal plain_flag = str._getBoolean(new_args['plain'] or false);\n\tlocal pattern = new_args['pattern']\
      \ or '';\n\tlocal match_index = math.floor(tonumber(new_args['match']) or 1);\n\tlocal nomatch = new_args['nomatch'];\n\t\n\tif s == '' then\n\t\treturn str._error('Target string is empty');\n\tend\n\tif pattern == '' then\n\t\treturn str._error('Pattern\
      \ string is empty');\n\tend\n\tif math.abs(start) &lt; 1 or math.abs(start) &gt; mw.ustring.len(s) then\n\t\treturn str._error('Requested start is out of range');\n\tend\n\tif match_index == 0 then\n\t\treturn str._error('Match index is out of range');\n\
      \tend\n\tif plain_flag then\n\t\tpattern = str.pattern_escape(pattern);\n\tend\n\t\n\tlocal result\n\tif match_index == 1 then\n\t\t-- Find first match is simple case\n\t\tresult = mw.ustring.match(s, pattern, start)\n\telse\n\t\tif start &gt; 1 then\n\
      \t\t\ts = mw.ustring.sub(s, start);\n\t\tend\n\t\t\n\t\tlocal iterator = mw.ustring.gmatch(s, pattern);\n\t\tif match_index &gt; 0 then\n\t\t\t-- Forward search\n\t\t\tfor w in iterator do\n\t\t\t\tmatch_index = match_index - 1;\n\t\t\t\tif match_index\
      \ == 0 then\n\t\t\t\t\tresult = w;\n\t\t\t\t\tbreak;\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\t-- Reverse search\n\t\t\tlocal result_table = {};\n\t\t\tlocal count = 1;\n\t\t\tfor w in iterator do\n\t\t\t\tresult_table[count] = w;\n\t\t\t\tcount = count\
      \ + 1;\n\t\t\tend\n\t\t\t\n\t\t\tresult = result_table[count + match_index];\n\t\tend\n\tend\n\t\n\tif result == nil then\n\t\tif nomatch == nil then\n\t\t\treturn str._error('Match not found');\n\t\telse\n\t\t\treturn nomatch;\n\t\tend\n\telse\n\t\treturn\
      \ result;\n\tend\nend\n\n--[[\npos\n\nThis function returns a single character from the target string at position pos.\n\nUsage:\n{{#invoke:string|pos|target_string|index_value}}\nOR\n{{#invoke:string|pos|target=target_string|pos=index_value}}\n\nParameters\n\
      \    target: The string to search\n    pos: The index for the character to return\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from the target string.  In some circumstances this is desirable,\
      \ in\nother cases one may want to preserve the whitespace.\n\nThe first character has an index value of 1.\n\nIf one requests a negative value, this function will select a character by counting backwards\nfrom the end of the string.  In other words pos\
      \ = -1 is the same as asking for the last character.\n\nA requested value of zero, or a value greater than the length of the string returns an error.\n]]\nfunction str.pos(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'target', 'pos' });\n\
      \tlocal target_str = new_args['target'] or '';\n\tlocal pos = tonumber(new_args['pos']) or 0;\n\t\n\tif pos == 0 or math.abs(pos) &gt; mw.ustring.len(target_str) then\n\t\treturn str._error('String index out of range');\n\tend\n\t\n\treturn mw.ustring.sub(target_str,\
      \ pos, pos);\nend\n\n--[[\nstr_find\n\nThis function duplicates the behavior of {{str_find}}, including all of its quirks.\nThis is provided in order to support existing templates, but is NOT RECOMMENDED for\nnew code and templates.  New code is recommended\
      \ to use the \"find\" function instead.\n\nReturns the first index in \"source\" that is a match to \"target\".  Indexing is 1-based,\nand the function returns -1 if the \"target\" string is not present in \"source\".\n\nImportant Note: If the \"target\"\
      \ string is empty / missing, this function returns a\nvalue of \"1\", which is generally unexpected behavior, and must be accounted for\nseparatetly.\n]]\nfunction str.str_find(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'source', 'target'\
      \ });\n\tlocal source_str = new_args['source'] or '';\n\tlocal target_str = new_args['target'] or '';\n\t\n\tif target_str == '' then\n\t\treturn 1;\n\tend\n\t\n\tlocal start = mw.ustring.find(source_str, target_str, 1, true)\n\tif start == nil then\n\t\
      \tstart = -1\n\tend\n\t\n\treturn start\nend\n\n--[[\nfind\n\nThis function allows one to search for a target string or pattern within another\nstring.\n\nUsage:\n{{#invoke:string|find|source_str|target_string|start_index|plain_flag}}\nOR\n{{#invoke:string|find|source=source_str|target=target_str|start=start_index|plain=plain_flag}}\n\
      \nParameters\n    source: The string to search\n    target: The string or pattern to find within source\n    start: The index within the source string to start the search, defaults to 1\n    plain: Boolean flag indicating that target should be understood\
      \ as plain\n        text and not as a Lua style regular expression, defaults to true\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from the parameter.  In some circumstances this is desirable,\
      \ in\nother cases one may want to preserve the whitespace.\n\nThis function returns the first index &gt;= \"start\" where \"target\" can be found\nwithin \"source\".  Indices are 1-based.  If \"target\" is not found, then this\nfunction returns an empty\
      \ string.  If either \"source\" or \"target\" are missing / empty, this\nfunction also returns an empty string.\n\nThis function should be safe for UTF-8 strings.\n]]\nfunction str.find(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2]\
      \ = { required = true },\n\t\t[3] = { type = \"number\" },\n\t\t[4] = { type = \"boolean\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\treturn mw.ustring.find(args[1], args[2], args[3], args[4])\nend\n\n\
      --[[\nreplace\n\nThis function allows one to replace a target string or pattern within another\nstring.\n\nUsage:\n{{#invoke:string|replace|source_str|pattern_string|replace_string|replacement_count|plain_flag}}\nOR\n{{#invoke:string|replace|source=source_string|pattern=pattern_string|replace=replace_string|\n\
      \   count=replacement_count|plain=plain_flag}}\n\nParameters\n    source: The string to search\n    pattern: The string or pattern to find within source\n    replace: The replacement text\n    count: The number of occurences to replace, defaults to all.\n\
      \    plain: Boolean flag indicating that pattern should be understood as plain\n        text and not as a Lua style regular expression, defaults to true\n]]\nfunction str.replace(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'source', 'pattern',\
      \ 'replace', 'count', 'plain' });\n\tlocal source_str = new_args['source'] or '';\n\tlocal pattern = new_args['pattern'] or '';\n\tlocal replace = new_args['replace'] or '';\n\tlocal count = tonumber(new_args['count']);\n\tlocal plain = new_args['plain']\
      \ or true;\n\t\n\tif source_str == '' or pattern == '' then\n\t\treturn source_str;\n\tend\n\tplain = str._getBoolean(plain);\n\t\n\tif plain then\n\t\tpattern = str.pattern_escape(pattern);\n\t\treplace = mw.ustring.gsub(replace, \"%%\", \"%%%%\"); --Only\
      \ need to escape replacement sequences.\n\tend\n\t\n\tlocal result;\n\t\n\tresult = mw.ustring.gsub(source_str, pattern, replace, count);\n\t\n\treturn result;\nend\n\n\nfunction str.gsub(frame)\n\tlocal params = {\n\t\t[1] = { required = true, allow_empty\
      \ = true },\n\t\t[2] = { required = true, allow_empty = true },\n\t\t[3] = { required = true, allow_empty = true },\n\t\t[4] = { type = \"number\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\treturn (mw.ustring.gsub(args[1],\
      \ args[2], args[3], args[4]))\nend\n\n\n--[[\n    simple function to pipe string.rep to templates.\n]]\n\nfunction str.rep(frame)\n\tlocal repetitions = tonumber(frame.args[2])\n\tif not repetitions then\n\t\treturn str._error('function rep expects a number\
      \ as second parameter, received \"' .. (frame.args[2] or '') .. '\"')\n\tend\n\treturn string.rep(frame.args[1] or '', repetitions)\nend\n\nfunction str.lower(frame)\n\tlocal text = frame.args[1] or ''\n\treturn mw.ustring.lower(text)\nend\n\nstr.lc =\
      \ str.lower\n\n--[[\nHelper function that populates the argument list given that user may need to use a mix of\nnamed and unnamed parameters.  This is relevant because named parameters are not\nidentical to unnamed parameters due to string trimming, and\
      \ when dealing with strings\nwe sometimes want to either preserve or remove that whitespace depending on the application.\n]]\nfunction str._getParameters(frame_args, arg_list)\n\tlocal new_args = {};\n\tlocal index = 1;\n\tlocal value;\n\t\n\tfor _, arg\
      \ in ipairs(arg_list) do\n\t\tvalue = frame_args[arg]\n\t\tif value == nil then\n\t\t\tvalue = frame_args[index];\n\t\t\tindex = index + 1;\n\t\tend\n\t\tnew_args[arg] = value;\n\tend\n\t\n\treturn new_args;\nend\n\n--[[\nHelper function to handle error\
      \ messages.\n]]\nfunction str._error(error_str)\n\tlocal frame = mw.getCurrentFrame();\n\tlocal error_category = frame.args.error_category or 'Errors reported by Module String';\n\tlocal ignore_errors = frame.args.ignore_errors or false;\n\tlocal no_category\
      \ = frame.args.no_category or false;\n\t\n\tif str._getBoolean(ignore_errors) then\n\t\treturn '';\n\tend\n\t\n\tlocal error_str = '&lt;strong class=\"error\"&gt;String Module Error: ' .. error_str .. '&lt;/strong&gt;';\n\tif error_category ~= '' and not\
      \ str._getBoolean(no_category) then\n\t\terror_str = '[[Category:' .. error_category .. ']]' .. error_str;\n\tend\n\t\n\treturn error_str;\nend\n\n--[[\nHelper Function to interpret boolean strings\n]]\nfunction str._getBoolean(boolean_str)\n\tlocal boolean_value;\n\
      \t\n\tif type(boolean_str) == 'string' then\n\t\tboolean_str = boolean_str:lower();\n\t\tif boolean_str == 'false' or boolean_str == 'no' or boolean_str == '0'\n\t\t\t\tor boolean_str == '' then\n\t\t\tboolean_value = false;\n\t\telse\n\t\t\tboolean_value\
      \ = true;\n\t\tend\n\telseif type(boolean_str) == 'boolean' then\n\t\tboolean_value = boolean_str;\n\telse\n\t\terror('No boolean value found');\n\tend\n\treturn boolean_value\nend\n\n--[[\nHelper function that escapes all pattern characters – ().%+-*?[^$]\
      \ – so that they will be treated\nas plain text.\n]]\nfunction str.pattern_escape(pattern_str)\n\tlocal invoked = false\n\t\n\tif type(pattern_str) == \"table\" then\n\t\tif pattern_str.args then\n\t\t\tlocal frame = pattern_str\n\t\t\tinvoked = true\n\
      \t\t\t\n\t\t\tif frame.args[1] then\n\t\t\t\tpattern_str = frame.args[1]\n\t\t\telse\n\t\t\t\tpattern_str = frame:getParent().args[1]\n\t\t\tend\n\t\telse\n\t\t\terror(\"First argument to pattern_escape should be a string, a number, or a frame object.\"\
      )\n\t\tend\n\telseif not (type(pattern_str) == \"string\" or type(pattern_str) == \"number\") then\n\t\terror(\"First argument to pattern_escape should be a string or a number.\")\n\tend\n\t\n\tif invoked then\n\t\tlocal escaped = mw.ustring.gsub(pattern_str,\
      \ \"([%(%)%.%%%+%-%*%?%[%^%$%]])\", \"%%%1\")\n\t\treturn escaped\n\telse\n\t\treturn mw.ustring.gsub(pattern_str, \"([%(%)%.%%%+%-%*%?%[%^%$%]])\", \"%%%1\");\n\tend\nend\n\nfunction str.count(text, pattern, plain)\n\tif not (type(text) == \"string\"\
      \ or type(text) == \"number\") then\n\t\terror('The first argument to the function \"count\" must be a string or a number, not a ' .. type(text) .. '.')\n\tend\n\t\n\tif not (type(pattern) == \"string\" or type(pattern) == \"number\") then\n\t\terror('The\
      \ first argument to the function \"count\" must be a string or a number, not a ' .. type(text) .. '.')\n\tend\n\t\n\tif plain then\n\t\tpattern = str.pattern_escape(pattern)\n\tend\n\t\n\tlocal _, count = mw.ustring.gsub(text, pattern, \"\")\n\t\n\treturn\
      \ count\nend\n\nfunction str.plain_gsub(text, pattern, replacement)\n\tlocal invoked = false\n\t\n\tif type(text) == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1]\
      \ = {},\n\t\t\t\t[2] = {},\n\t\t\t\t[3] = { allow_empty = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\t\t\treplacement = args[3]\n\t\t\
      else\n\t\t\terror(\"If the first argument to plain_gsub is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not (type(pattern) == \"string\" or type(pattern) == \"number\") then\n\t\t\terror(\"The second argument to plain_gsub should be\
      \ a string or a number.\")\n\t\tend\n\t\t\n\t\tif not (type(replacement) == \"string\" or type(replacement) == \"number\") then\n\t\t\terror(\"The third argument to plain_gsub should be a string or a number.\")\n\t\tend\n\tend\n\t\n\tpattern = str.pattern_escape(pattern)\n\
      \t\n\tif invoked then\n\t\ttext = mw.ustring.gsub(text, pattern, replacement)\n\t\treturn text\n\telse\n\t\treturn mw.ustring.gsub(text, pattern, replacement)\n\tend\nend\n\nfunction str.matchToArray(text, pattern)\n\tlocal invoked = false\n\t\n\tif type(text)\
      \ == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = { required = true },\n\t\t\t\t[2] = { required = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\"\
      ).process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\t\telse\n\t\t\terror(\"If the first argument to matchToArray is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not (type(pattern) == \"string\" or\
      \ type(pattern) == \"number\") then\n\t\t\terror(\"The second argument to matchToArray should be a string or a number.\")\n\t\tend\n\tend\n\t\n\tlocal matches = {}\n\tlocal i = 0\n\tfor match in mw.ustring.gmatch(text, pattern) do\n\t\ti = i + 1\n\t\t\
      matches[i] = match\n\tend\n\t\n\tif i &gt; 0 then\n\t\tif invoked then\n\t\t\treturn table.concat(matches, \", \")\n\t\telse\n\t\t\treturn matches\n\t\tend\n\telse\n\t\tif invoked then\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn nil\n\t\tend\n\tend\nend\n\
      \n--[=[\n\tSimilar to gmatch, but it returns the count of the match in addition to the\n\tlist of captures, something like ipairs().\n\t\n\tIf the pattern doesn't contain any captures, the whole match is returned.\n\t\n\tInvoke thus:\n\t\n\t\tfor i, whole_match\
      \ in require(\"Module:string\").imatch(text, pattern) do\n\t\t\t[ do something with i and whole_match ]\n\t\tend\n\t\n\tor\n\t\n\t\tfor i, capture1[, capture2[, capture3[, ...]]] in require(\"Module:string\").imatch(text, pattern) do\n\t\t\t[ do something\
      \ with i and capture1 ]\n\t\tend\n\t\n\tFor example, this code\n\t\tfor i, whole_match in require(\"Module:string\").imatch(\"a b c\", \"[a-z]\") do\n\t\t\tmw.log(i, whole_match)\n\t\tend\n\twill log\n\t\t1\ta\n\t\t2\tb\n\t\t3\tc\n]=]\nfunction str.imatch(text,\
      \ pattern, pos, plain, use_basic_Lua_function)\n\tlocal i = 0\n\tpos = pos or 0\n\tif not string.find(pattern, \"%b()\") then\n\t\tpattern = \"(\" .. pattern .. \")\"\n\tend\n\tlocal find = use_basic_Lua_function and string.find or mw.ustring.find\n\t\
      return function()\n\t\ti = i + 1\n\t\tlocal return_values = { find(text, pattern, pos, plain) }\n\t\tlocal j = return_values[2]\n\t\t\n\t\tif return_values[3] then\n\t\t\tpos = j + 1\n\t\t\t-- Skip the first two returned values, which are the indices of\
      \ the\n\t\t\t-- whole match.\n\t\t\treturn i, unpack(return_values, 3)\n\t\tend\n\tend\nend\n\nfunction str.escapebytes(s)\n\treturn (string.gsub(s,\n\t\t'.',\n\t\tfunction(char)\n\t\t\treturn ('\\\\%03d'):format(string.byte(char))\n\t\tend))\nend\n\n\
      function str.URIdecode(frame)\n\treturn mw.uri.decode(frame.args[1], frame.args[2] or \"PATH\")\nend\n\nreturn str</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:19.749Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=32298 t=1555362499670260
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:19 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1232.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 212439124, 487185842, 700521130
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6279245\" pageid=\"6279245\" ns=\"828\" title=\"Module:utilities/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-01-04T05:57:22Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 51192985 by [[Special:Contributions/2601:CD:C101:322D:F03C:8688:907:84|2601:CD:C101:322D:F03C:8688:907:84]] ([[User talk:2601:CD:C101:322D:F03C:8688:907:84|talk]]): ???\"\
      \ xml:space=\"preserve\">local data = {}\n\ndata.notneeded = {\n\t[\"und\"] = true,\n\t[\"cmn\"] = true,\n\t[\"ja\"] = true,\n\t[\"zu\"] = true,\n\t[\"nan\"] = true,\n\t[\"yue\"] = true,\n\t[\"ko\"] = true,\n}\n\ndata.neededhassubpage = {\n\t[\"ga\"] =\
      \ true,\n\t[\"gv\"] = true,\n\t[\"nv\"] = true,\n\t[\"roa-jer\"] = true,\n\t[\"fr\"] = true,\n\t[\"rm\"] = true,\n\t[\"prg\"] = true,\n\t[\"gd\"] = true,\n\t[\"twf\"] = true,\n\t[\"en\"] = true,\n\t[\"ro\"] = true,\n\t[\"egl\"] = true,\n\t[\"roa-tar\"\
      ] = true,\n\t[\"gl\"] = true,\n\t[\"ast\"] = true,\n\t[\"br\"] = true,\n}\n\n--[[\n\tScript that should be applied to links in categories.\n]]\ndata.catfix_scripts = {\n\t[\"ab\"] = \"Cyrl\",\n\t[\"ae\"] = \"Avst\",\n\t[\"ar\"] = \"Arab\",\n\t[\"ary\"\
      ] = \"Arab\",\n\t[\"be\"] = \"Cyrl\",\n\t[\"cu\"] = \"Cyrs\",\n\t[\"el\"] = \"Grek\",\n\t[\"grc\"] = \"polytonic\",\n\t[\"he\"] = \"Hebr\",\n\t[\"ka\"] = \"Geor\",\n\t[\"orv\"] = \"Cyrs\",\n\t[\"ru\"] = \"Cyrl\",\n\t[\"sa\"] = \"Deva\",\n\t[\"syl\"] =\
      \ \"Sylo\",\n\t[\"xfa\"] = \"Ital\",\n\t[\"zle-ono\"] = \"Cyrs\",\n\t[\"hi\"] = \"Deva\",\n\t[\"mr\"] = \"Deva\",\n--[[\n\t[\"\"] = \"\",\n]]\n}\n\n-- Namespaces in which format_categories will add categories.\ndata.allowedNamespaces = {\n\t[\"\"] = true,\n\
      \t[\"Appendix\"] = true,\n\t[\"Reconstruction\"] = true,\n\t[\"Citations\"] = true,\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:21.332Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49944 t=1555362501108138
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:21 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1341.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 745066186, 814544746, 703336214
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6246525\" pageid=\"6246525\" ns=\"828\" title=\"Module:links/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-03-13T02:26:26Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add [[Unsupported titles/MeToo]]\" xml:space=\"preserve\">local data = {}\n\ndata.high_memory_entries = {\n\t\"a\",\n\t\"animal\",\n\t\"book\",\n\t\"coffee\",\n\t\"do\",\n\t\"e\",\n\t\"\
      language\",\n\t\"night\",\n\t\"smoke\",\n\t\"son\",\n\t\"sun\",\n\t\"water\",\n\t\"wind\",\n}\n\n\nlocal U = mw.ustring.char\nlocal soft_hyphen = U(0xAD)\n\n--[[\tThe \"actual title\" is the page name with the prefix \"Unsupported titles/\" removed.\n\t\
      \t[\"displayed_title\"] = \"actual title\"\t]]\ndata.unsupported_titles = {\n\t[\" \"] = \"Space\",\n\t[\"{\"] = \"Left curly bracket\",\n\t[\"}\"] = \"Right curly bracket\",\n\t[\"[\"] = \"Left square bracket\",\n\t[\"]\"] = \"Right square bracket\",\n\
      \t[\"&lt;\"] = \"Less than\",\n\t[\"&gt;\"] = \"Greater than\",\n\t[\"=&lt;\"] = \"Equal less than\",\n\t[\"=&gt;\"] = \"Equal greater than\",\n\t[\"&gt;=\"] = \"Greater than equal\",\n\t[\"&lt;=\"] = \"Less than equal\",\n\t[\"-&gt;\"] = \"Hyphen greater\
      \ than\",\n\t[\"&lt;-\"] = \"Less than hyphen\",\n\t[\"&gt;_&lt;\"] = \"Greater than low line less than\",\n\t[\"::\"] = \"Double colon\",\n\t[\": :\"] = \"Enclosing colons\",\n\t[\":=\"] = \"Colon equals\",\n\t[\":Þ\"] = \"Colon capital thorn\",\n\t[\"\
      :(\"] = \"Colon left paren\",\n\t[\":)\"] = \"Colon right paren\",\n\t[\"&lt;&gt;\"] = \"Less than greater than\",\n\t[\"&lt;3\"] = \"Less than three\",\n\t[\"&lt;/3\"] = \"Less than slash three\",\n\t[\"&lt; &gt;\"] = \"Enclosing less than greater than\"\
      ,\n\t[\"&lt; /&gt;\"] = \"Less than trailing slash greater than\",\n\t[\"&lt; &gt; &lt;/ &gt;\"] = \"HTML start tag end tag\",\n\t[\"&lt;!-- --&gt;\"] = \"HTML comment\",\n\t[\"&lt;g&gt;\"] = \"g tag\",\n\t[\":-(\"] = \"Colon hyphen left paren\",\n\t[\"\
      :-)\"] = \"Colon hyphen right paren\",\n\t[\"|\"] = \"Vertical line\",\n\t[\"||\"] = \"Vertical line vertical line\",\n\t[\"| |\"] = \"Enclosing vertical lines\",\n\t[\"C#\"] = \"C sharp\",\n\t[\"#\"] = \"Number sign\",\n\t[\"# #\"] = \"Enclosing number\
      \ signs\",\n\t[\":\"] = \"Colon\",\n\t[\"..\"] = \"Double period\",\n\t[\".\"] = \"Full stop\",\n\t[\"_\"] = \"Low line\",\n\t[\"-_-\"] = \"Low line interfix\",\n\t[U(0xFFFD)] = \"Replacement character\",\n\t[U(0x1680)] = \"Ogham space\",\n\t[\"[ ]\"]\
      \ = \"Square brackets\",\n\t[\"{ }\"] = \"Curly brackets\",\n\t[\"[…]\"] = \"Square bracketed ellipsis\",\n\t[\"_ _\"] = \"Enclosing low lines\",\n\t[\"C|N&gt;K\"] = \"C through N to K\",\n\t[\"#MeToo\"] = \"MeToo\",\n\t[\"о/.\"] = \"о slash dot\",\n\t\
      [\"กรุงเทพมหานคร อมรรัตนโกสินทร์ มหินทรายุธยา มหาดิลกภพ นพรัตนราชธานีบูรีรมย์ อุดมราชนิเวศน์มหาสถาน อมรพิมานอวตารสถิต สักกะทัตติยวิษณุกรรมประสิทธิ์\"] = \"Thai name of Bangkok\",\n\t[\"λοπαδοτεμαχοσελαχογαλεοκρανιολειψανοδριμυποτριμματοσιλφιοκαραβομελι\
      τοκατακεχυμενοκιχλ\" .. soft_hyphen .. \"επικοσσυφοφαττοπεριστεραλεκτρυονοπτοκεφαλλιοκιγκλοπελειολαγῳοσιραιοβαφητραγανοπτερύγων\"] = \"Ancient Greek dish\",\n\t[\":≠\"] = \":≠\",\n\t[\"S:t\"] = \"S:t\",\n\t[\"S:ta\"] = \"S:ta\",\n\t[\"c:a\"] = \"c:a\"\
      ,\n\t[\"n:a\"] = \"n:a\",\n\t[\"n:o\"] = \"n:o\",\n\t[\"n:r\"] = \"n:r\",\n\t[\"s:a\"] = \"s:a\",\n\t[\"st:a\"] = \"st:a\",\n\t[\"v:a\"] = \"v:a\",\n}\n\nfor i, item in ipairs(data.high_memory_entries) do\n\tdata.high_memory_entries[i] = nil\n\tdata.high_memory_entries[item]\
      \ = true\nend\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:21.512Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49623 t=1555362501416841
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:21 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1227.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 571927243, 831529250, 691851891
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6149597\" pageid=\"6149597\" ns=\"828\" title=\"Module:script utilities/data\"><revisions><rev user=\"DTLHS\" timestamp=\"2018-03-12T01:54:08Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local data = {}\n\ndata.translit = {\n\t[\"term\"] = {\n--[=[\tcan't be done until Kana transliterations are correctly parsed by [[Module:links]]\n\t\t[\"tag\"\
      ] = \"i\",\n\t\t]=]\n\t\t[\"classes\"] = \"mention-tr\",\n\t},\n\t[\"usex\"] = {\n\t\t[\"tag\"] = \"i\",\n\t\t[\"classes\"] = \"e-transliteration\",\n\t},\n\t[\"head\"] = {\n\t\t[\"classes\"] = \"headword-tr\",\n\t\t[\"dir\"] = \"ltr\",\n\t},\n\t[\"default\"\
      ] = {},\n}\n\ndata.transcription = {\n\t[\"head\"] = {\n\t\t[\"tag\"] = \"span\",\n\t\t[\"classes\"] = \"headword-ts\",\n\t\t[\"dir\"] = \"ltr\",\n\t},\n\t[\"default\"] = {},\n}\n\nfor key, value in pairs(data.translit) do\n\tif not value.tag then\n\t\t\
      value.tag = \"span\"\n\tend\nend\n\ndata.faces = {\n\t[\"term\"] = {\n\t\ttag = \"i\",\n\t\tclass = \"mention\",\n\t},\n\t[\"head\"] = {\n\t\ttag = \"strong\",\n\t\tclass = \"headword\",\n\t},\n\t[\"hypothetical\"] = {\n\t\tprefix = '&lt;span class=\"\
      hypothetical-star\"&gt;*&lt;/span&gt;',\n\t\ttag = \"i\",\n\t\tclass = \"hypothetical\",\n\t},\n\t[\"bold\"] = {\n\t\ttag = \"b\",\n\t},\n\t[\"translation\"] = {\n\t\ttag = \"span\",\n\t},\n\t[\"nil\"] = {\n\t\ttag = \"span\",\n\t},\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:23.009Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Ffunctions&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=60477 t=1555362502901606
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:23 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1285.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 410476244, 260411988, 699307594
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6052562\" pageid=\"6052562\" ns=\"828\" title=\"Module:labels/data/functions\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-02-26T03:03:38Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"need to declare field &quot;languages&quot; as table\" xml:space=\"preserve\">export = {}\n\nfunction export.handle_languages(labels)\n\tif type(labels) ~= \"table\" then\n\t\terror('The\
      \ function \"handle_languages\" requires a table as argument.')\n\tend\n\t\n\tfor label, data in pairs(labels) do\n\t\tif data[\"languages\"] then\n\t\t\tfor key, language in ipairs(data[\"languages\"] or {}) do\n\t\t\t\tlabels[label][\"languages\"][language]\
      \ = true\n\t\t\tend\n\t\telseif data[\"language\"] and data[\"language\"] ~= \"\" then\n\t\t\tlabels[label][\"languages\"] = {}\n\t\t\tlabels[label][\"languages\"][data[\"language\"]] = true\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:23.356Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Ftopical&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48115 t=1555362503088624
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:23 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1235.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 930647601, 625344334, 697808700
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5967302\" pageid=\"5967302\" ns=\"828\" title=\"Module:labels/data/topical\"><revisions><rev user=\"King of Hearts\" timestamp=\"2019-04-09T07:56:12Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"better link for bridge\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\nlocal deprecated = {}\n\n-- This file is split into two sections: topical labels and labels for set-type\
      \ categories.\n-- Each section is sorted alphabetically.\n\n\n-- Topical labels\n\nlabels[\"accounting\"] = {\n\tdisplay = \"[[accounting#Noun|accounting]]\",\n\ttopical_categories = {\"Accounting\"},\n}\n\nlabels[\"acoustics\"] = {\n\tdisplay = \"[[acoustics]]\"\
      ,\n\ttopical_categories = {\"Acoustics\"},\n}\n\nlabels[\"acting\"] = {\n\tdisplay = \"[[acting#Noun|acting]]\",\n\ttopical_categories = {\"Acting\"},\n}\n\nlabels[\"advertising\"] = {\n\tdisplay = \"[[advertising#Noun|advertising]]\",\n\ttopical_categories\
      \ = {\"Advertising\"},\n}\n\nlabels[\"aeronautics\"] = {\n\tdisplay = \"[[aeronautics]]\",\n\ttopical_categories = {\"Aeronautics\"},\n}\n\nlabels[\"aerospace\"] = {\n\tdisplay = \"[[aeronautics]], [[space science|space]]\",\n\ttopical_categories = {\"\
      Aerospace\"},\n}\n\nlabels[\"agriculture\"] = {\n\tdisplay = \"[[agriculture]]\",\n\ttopical_categories = {\"Agriculture\"},\n}\n\nlabels[\"aircraft\"] = {\n\tdisplay = \"[[aircraft]]\",\n\ttopical_categories = {\"Aircraft\"},\n}\n\nlabels[\"alchemy\"\
      ] = {\n\tdisplay = \"[[alchemy]]\",\n\ttopical_categories = {\"Alchemy\"},\n}\n\nlabels[\"alcoholism\"] = {\n\tdisplay = \"[[alcoholism]]\",\n\ttopical_categories = {\"Alcoholism\"},\n}\naliases[\"alcohol\"] = \"alcoholism\"\n\nlabels[\"algebra\"] = {\n\
      \tdisplay = \"[[algebra]]\",\n\ttopical_categories = {\"Algebra\"},\n}\n\nlabels[\"algebraic geometry\"] = {\n\tdisplay = \"[[algebraic geometry]]\",\n\ttopical_categories = {\"Algebraic geometry\"},\n}\n\nlabels[\"alternative medicine\"] = {\n\tdisplay\
      \ = \"[[alternative medicine]]\",\n\ttopical_categories = {\"Alternative medicine\"},\n}\n\nlabels[\"amateur radio\"] = {\n\tdisplay = \"[[amateur radio]]\",\n\ttopical_categories = {\"Amateur radio\"},\n}\naliases[\"ham radio\"] = \"amateur radio\"\n\n\
      labels[\"American football\"] = {\n\tdisplay = \"[[American football]]\",\n\ttopical_categories = {\"Football (American)\"},\n}\n\nlabels[\"analytic geometry\"] = {\n\tdisplay = \"[[analytic geometry]]\",\n\ttopical_categories = {\"Geometry\"},\n}\n\n\
      labels[\"analytical chemistry\"] = {\n\tdisplay = \"[[analytical]] [[chemistry]]\",\n\ttopical_categories = {\"Analytical chemistry\"},\n}\n\nlabels[\"anarchism\"] = {\n\tdisplay = \"[[anarchism]]\",\n\ttopical_categories = {\"Anarchism\"},\n}\n\nlabels[\"\
      anatomy\"] = {\n\tdisplay = \"[[anatomy]]\",\n\ttopical_categories = {\"Anatomy\"},\n}\n\nlabels[\"Ancient Greece\"] = {\n\tdisplay = \"[[Ancient Greece]]\",\n\ttopical_categories = {\"Ancient Greece\"},\n}\n\nlabels[\"Ancient Rome\"] = {\n\tdisplay =\
      \ \"[[Ancient Rome]]\",\n\ttopical_categories = {\"Ancient Rome\"},\n}\n\nlabels[\"Anglicanism\"] = {\n\tdisplay = \"[[Anglicanism]]\",\n\ttopical_categories = {\"Anglicanism\"},\n}\n\nlabels[\"animation\"] = {\n\tdisplay = \"[[animation]]\",\n\ttopical_categories\
      \ = {\"Animation\"},\n}\n\nlabels[\"anime\"] = {\n\tdisplay = \"[[anime]]\",\n\ttopical_categories = {\"Japanese fiction\"},\n}\n\nlabels[\"anthropology\"] = {\n\tdisplay = \"[[anthropology]]\",\n\ttopical_categories = {\"Anthropology\"},\n}\n\nlabels[\"\
      arachnology\"] = {\n\tdisplay = \"[[arachnology]]\",\n\ttopical_categories = {\"Arachnology\"},\n}\n\nlabels[\"archaeology\"] = {\n\tdisplay = \"[[archaeology]]\",\n\ttopical_categories = {\"Archaeology\"},\n}\n\nlabels[\"archery\"] = {\n\tdisplay = \"\
      [[archery]]\",\n\ttopical_categories = {\"Archery\"},\n}\n\nlabels[\"architecture\"] = {\n\tdisplay = \"[[architecture]]\",\n\ttopical_categories = {\"Architecture\"},\n}\n\nlabels[\"arithmetic\"] = {\n\tdisplay = \"[[arithmetic]]\",\n\ttopical_categories\
      \ = {\"Arithmetic\"},\n}\n\nlabels[\"Armenian mythology\"] = {\n\tdisplay = \"[[Armenian]] [[mythology]]\",\n\ttopical_categories = {\"Armenian mythology\"},\n}\n\nlabels[\"art\"] = {\n\tdisplay = \"[[art]]\",\n\ttopical_categories = {\"Art\"},\n}\naliases[\"\
      arts\"] = \"art\"\n\nlabels[\"artificial intelligence\"] = {\n\tdisplay = \"[[artificial intelligence]]\",\n\ttopical_categories = {\"Artificial intelligence\"},\n}\n\nlabels[\"Arthurian legend\"] = {\n\tdisplay = \"[[w:Arthurian legend|Arthurian legend]]\"\
      ,\n\ttopical_categories = {\"Arthurian mythology\"},\n}\naliases[\"Arthurian mythology\"] = \"Arthurian legend\"\n\nlabels[\"astrology\"] = {\n\tdisplay = \"[[astrology]]\",\n\ttopical_categories = {\"Astrology\"},\n}\naliases[\"horoscope\"] = \"astrology\"\
      \naliases[\"zodiac\"] = \"astrology\"\n\nlabels[\"astronautics\"] = {\n\tdisplay = \"[[astronautics]]\",\n\ttopical_categories = {\"Astronautics\"},\n}\n\nlabels[\"astronomy\"] = {\n\tdisplay = \"[[astronomy]]\",\n\ttopical_categories = {\"Astronomy\"\
      },\n}\n\nlabels[\"astrophysics\"] = {\n\tdisplay = \"[[astrophysics]]\",\n\ttopical_categories = {\"Astrophysics\"},\n}\n\nlabels[\"Asturian mythology\"] = {\n\tdisplay = \"[[Asturian]] [[mythology]]\",\n\ttopical_categories = {\"Asturian mythology\"},\n\
      }\n\nlabels[\"athletics\"] = {\n\tdisplay = \"[[athletics]]\",\n\ttopical_categories = {\"Athletics\"},\n}\n\nlabels[\"Australian Aboriginal mythology\"] = {\n\tdisplay = \"[[w:Australian Aboriginal religion and mythology|Australian Aboriginal mythology]]\"\
      ,\n\ttopical_categories = {\"Australian Aboriginal mythology\"},\n}\n\nlabels[\"Australian rules football\"] = {\n\tdisplay = \"[[Australian rules football]]\",\n\ttopical_categories = {\"Australian rules football\"},\n}\n\nlabels[\"automotive\"] = {\n\
      \tdisplay = \"[[automotive]]\",\n\ttopical_categories = {\"Automotive\"},\n}\naliases[\"automotives\"] = \"automotive\"\n\nlabels[\"aviation\"] = {\n\tdisplay = \"[[aviation]]\",\n\ttopical_categories = {\"Aviation\"},\n}\n\nlabels[\"backgammon\"] = {\n\
      \tdisplay = \"[[backgammon]]\",\n\ttopical_categories = {\"Backgammon\"},\n}\n\nlabels[\"bacteriology\"] = {\n\tdisplay = \"[[bacteriology]]\",\n\ttopical_categories = {\"Bacteriology\"},\n}\naliases[\"bacteria\"] = \"bacteriology\"\n\nlabels[\"badminton\"\
      ] = {\n\tdisplay = \"[[badminton]]\",\n\ttopical_categories = {\"Badminton\"},\n}\n\nlabels[\"baking\"] = {\n\tdisplay = \"[[baking#Noun|baking]]\",\n\ttopical_categories = {\"Baking\"},\n}\n\nlabels[\"ball games\"] = {\n\tdisplay = \"[[ball game]]s\"\
      ,\n\ttopical_categories = {\"Ball games\"},\n}\n\nlabels[\"ballet\"] = {\n\tdisplay = \"[[ballet]]\",\n\ttopical_categories = {\"Ballet\"},\n}\n\nlabels[\"banking\"] = {\n\tdisplay = \"[[banking#Noun|banking]]\",\n\ttopical_categories = {\"Banking\"},\n\
      }\n\nlabels[\"baseball\"] = {\n\tdisplay = \"[[baseball]]\",\n\ttopical_categories = {\"Baseball\"},\n}\n\nlabels[\"basketball\"] = {\n\tdisplay = \"[[basketball]]\",\n\ttopical_categories = {\"Basketball\"},\n}\n\nlabels[\"BDSM\"] = {\n\tdisplay = \"\
      [[BDSM]]\",\n\ttopical_categories = {\"BDSM\"},\n}\n\nlabels[\"beekeeping\"] = {\n\tdisplay = \"[[beekeeping]]\",\n\ttopical_categories = {\"Beekeeping\"},\n}\n\nlabels[\"beer\"] = {\n\tdisplay = \"[[beer]]\",\n\ttopical_categories = {\"Beer\"},\n}\n\n\
      labels[\"betting\"] = {\n\tdisplay = \"[[gambling#Noun|gambling]]\",\n\ttopical_categories = {\"Betting\"},\n}\n\nlabels[\"biblical\"] = {\n\tdisplay = \"[[Bible|biblical]]\",\n\ttopical_categories = {\"Bible\"},\n}\naliases[\"Bible\"] = \"biblical\"\n\
      aliases[\"Biblical\"] = \"biblical\"\n\nlabels[\"billiards\"] = {\n\tdisplay = \"[[billiards]]\",\n\ttopical_categories = {\"Billiards\"},\n}\n\nlabels[\"bingo\"] = {\n\tdisplay = \"[[bingo]]\",\n\ttopical_categories = {\"Bingo\"},\n}\n\nlabels[\"biochemistry\"\
      ] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Biochemistry\"},\n}\n\nlabels[\"biology\"] = {\n\tdisplay = \"[[biology]]\",\n\ttopical_categories = {\"Biology\"},\n}\n\nlabels[\"biotechnology\"] = {\n\tdisplay = \"[[biotechnology]]\"\
      ,\n\ttopical_categories = {\"Biotechnology\"},\n}\n\nlabels[\"birdwatching\"] = {\n\tdisplay = \"[[birdwatching#Noun|birdwatching]]\",\n\ttopical_categories = {\"Birdwatching\"},\n}\n\nlabels[\"blogging\"] = {\n\tdisplay = \"[[blogging#Noun|blogging]]\"\
      ,\n\ttopical_categories = {\"Internet\"},\n}\n\nlabels[\"board games\"] = {\n\tdisplay = \"[[board game]]s\",\n\ttopical_categories = {\"Board games\"},\n}\naliases[\"board game\"] = \"board games\"\n\nlabels[\"board sports\"] = {\n\tdisplay = \"[[boardsport|board\
      \ sports]]\",\n\ttopical_categories = {\"Board sports\"},\n}\n\nlabels[\"bodybuilding\"] = {\n\tdisplay = \"[[bodybuilding#Noun|bodybuilding]]\",\n\ttopical_categories = {\"Bodybuilding\"},\n}\n\nlabels[\"botany\"] = {\n\tdisplay = \"[[botany]]\",\n\t\
      topical_categories = {\"Botany\"},\n}\n\nlabels[\"bowling\"] = {\n\tdisplay = \"[[bowling#Noun|bowling]]\",\n\ttopical_categories = {\"Bowling\"},\n}\n\nlabels[\"boxing\"] = {\n\tdisplay = \"[[boxing#Noun|boxing]]\",\n\ttopical_categories = {\"Boxing\"\
      },\n}\n\nlabels[\"brewing\"] = {\n\tdisplay = \"[[brewing#Noun|brewing]]\",\n\ttopical_categories = {\"Brewing\"},\n}\n\nlabels[\"bridge\"] = {\n\tdisplay = \"[[bridge#English-game|bridge]]\",\n\ttopical_categories = {\"Bridge\"},\n}\n\nlabels[\"broadcasting\"\
      ] = {\n\tdisplay = \"[[broadcasting#Noun|broadcasting]]\",\n\ttopical_categories = {\"Broadcasting\"},\n}\n\nlabels[\"bryology\"] = {\n\tdisplay = \"[[bryology]]\",\n\ttopical_categories = {\"Bryology\"},\n}\n\nlabels[\"Buddhism\"] = {\n\tdisplay = \"\
      [[Buddhism]]\",\n\ttopical_categories = {\"Buddhism\"},\n}\n\nlabels[\"bullfighting\"] = {\n\tdisplay = \"[[bullfighting]]\",\n\ttopical_categories = {\"Bullfighting\"},\n}\n\nlabels[\"business\"] = {\n\tdisplay = \"[[business]]\",\n\ttopical_categories\
      \ = {\"Business\"},\n}\n\nlabels[\"Byzantine Empire\"] = {\n\tdisplay = \"[[Byzantine Empire]]\",\n\ttopical_categories = {\"Byzantine Empire\"},\n}\n\nlabels[\"calculus\"] = {\n\tdisplay = \"[[calculus]]\",\n\ttopical_categories = {\"Calculus\"},\n}\n\
      \nlabels[\"calligraphy\"] = {\n\tdisplay = \"[[calligraphy]]\",\n\ttopical_categories = {\"Calligraphy\"},\n}\n\nlabels[\"Canadian football\"] = {\n\tdisplay = \"[[Canadian football]]\",\n\ttopical_categories = {\"Canadian football\"},\n}\n\nlabels[\"\
      canoeing\"] = {\n\tdisplay = \"[[canoeing#Noun|canoeing]]\",\n\ttopical_categories = {\"Water sports\"},\n}\n\nlabels[\"card games\"] = {\n\tdisplay = \"[[card game]]s\",\n\ttopical_categories = {\"Card games\"},\n}\naliases[\"cards\"] = \"card games\"\
      \naliases[\"playing card\"] = \"card games\"\n\nlabels[\"cardiology\"] = {\n\tdisplay = \"[[cardiology]]\",\n\ttopical_categories = {\"Cardiology\"},\n}\n\nlabels[\"carpentry\"] = {\n\tdisplay = \"[[carpentry]]\",\n\ttopical_categories = {\"Carpentry\"\
      },\n}\n\nlabels[\"cartography\"] = {\n\tdisplay = \"[[cartography]]\",\n\ttopical_categories = {\"Cartography\"},\n}\n\nlabels[\"cartomancy\"] = {\n\tdisplay = \"[[cartomancy]]\",\n\ttopical_categories = {\"Cartomancy\"},\n}\n\nlabels[\"category theory\"\
      ] = {\n\tdisplay = \"[[category theory]]\",\n\ttopical_categories = {\"Category theory\"},\n}\n\nlabels[\"Catholicism\"] = {\n\tdisplay = \"[[Catholicism]]\",\n\ttopical_categories = {\"Catholicism\"},\n}\naliases[\"Catholic\"] = \"Catholicism\"\n\nlabels[\"\
      caving\"] = {\n\tdisplay = \"[[caving#Noun|caving]]\",\n\ttopical_categories = {\"Caving\"},\n}\n\nlabels[\"Celtic mythology\"] = {\n\tdisplay = \"[[Celtic]] [[mythology]]\",\n\ttopical_categories = {\"Celtic mythology\"},\n}\n\nlabels[\"ceramics\"] =\
      \ {\n\tdisplay = \"[[ceramics]]\",\n\ttopical_categories = {\"Ceramics\"},\n}\n\nlabels[\"cheerleading\"] = {\n\tdisplay = \"[[cheerleading#Noun|cheerleading]]\",\n\ttopical_categories = {\"Cheerleading\"},\n}\n\nlabels[\"chemical element\"] = {\n\tdisplay\
      \ = \"[[chemistry]]\",\n\ttopical_categories = {\"Chemical elements\"},\n}\n\nlabels[\"chemical engineering\"] = {\n\tdisplay = \"[[chemical engineering]]\",\n\ttopical_categories = {\"Chemical engineering\"},\n}\n\nlabels[\"chemistry\"] = {\n\tdisplay\
      \ = \"[[chemistry]]\",\n\ttopical_categories = {\"Chemistry\"},\n}\n\nlabels[\"chess\"] = {\n\tdisplay = \"[[chess]]\",\n\ttopical_categories = {\"Chess\"},\n}\n\nlabels[\"Chinese astronomy\"] = {\n\tdisplay = \"[[Chinese]] [[astronomy]]\",\n\ttopical_categories\
      \ = {\"Chinese astronomy\"},\n}\n\nlabels[\"Chinese calligraphy\"] = {\n\tdisplay = \"[[Chinese]] [[calligraphy]]\",\n\ttopical_categories = {\"Calligraphy\"},\n}\n\nlabels[\"Chinese constellation\"] = {\n\tdisplay = \"[[Chinese]] [[astronomy]]\",\n\t\
      topical_categories = {\"Constellations\"},\n}\n\nlabels[\"Chinese folk religion\"] = {\n\tdisplay = \"[[Chinese]] [[folk religion]]\",\n\ttopical_categories = {\"Religion\"},\n}\n\nlabels[\"Chinese linguistics\"] = {\n\tdisplay = \"[[Chinese]] [[linguistics]]\"\
      ,\n\ttopical_categories = {\"Linguistics\"},\n}\n\nlabels[\"Chinese mythology\"] = {\n\tdisplay = \"[[Chinese]] [[mythology]]\",\n\ttopical_categories = {\"Chinese mythology\"},\n}\n\nlabels[\"Chinese philosophy\"] = {\n\tdisplay = \"[[Chinese]] [[philosophy]]\"\
      ,\n\ttopical_categories = {\"Chinese philosophy\"},\n}\n\nlabels[\"Chinese phonetics\"] = {\n\tdisplay = \"[[Chinese]] [[phonetics]]\",\n\ttopical_categories = {\"Phonetics\"},\n}\n\nlabels[\"Chinese religion\"] = {\n\tdisplay = \"[[Chinese]] [[religion]]\"\
      ,\n\ttopical_categories = {\"Religion\"},\n}\n\nlabels[\"Chinese star\"] = {\n\tdisplay = \"[[Chinese]] [[astronomy]]\",\n\ttopical_categories = {\"Stars\"},\n}\n\nlabels[\"Christianity\"] = {\n\tdisplay = \"[[Christianity]]\",\n\ttopical_categories =\
      \ {\"Christianity\"},\n}\naliases[\"christianity\"] = \"Christianity\"\ndeprecated[\"christianity\"] = true\n\nlabels[\"cinematography\"] = {\n\tdisplay = \"[[cinematography]]\",\n\ttopical_categories = {\"Cinematography\"},\n}\naliases[\"filmology\"]\
      \ = \"cinematography\"\n\nlabels[\"cladistics\"] = {\n\tdisplay = \"[[cladistics]]\",\n\ttopical_categories = {\"Systematics\"},\n}\n\nlabels[\"classical mechanics\"] = {\n\tdisplay = \"[[classical mechanics]]\",\n\ttopical_categories = {\"Classical mechanics\"\
      },\n}\n\nlabels[\"classical studies\"] = {\n\tdisplay = \"[[classical studies]]\",\n\ttopical_categories = {\"Classical studies\"},\n}\n\nlabels[\"climatology\"] = {\n\tdisplay = \"[[climatology]]\",\n\ttopical_categories = {\"Climatology\"},\n}\n\nlabels[\"\
      climbing\"] = {\n\tdisplay = \"[[climbing#Noun|climbing]]\",\n\ttopical_categories = {\"Climbing\"},\n}\n\nlabels[\"clinical psychology\"] = {\n\tdisplay = \"[[clinical]] [[psychology]]\",\n\ttopical_categories = {\"Clinical psychology\"},\n}\n\nlabels[\"\
      clothing\"] = {\n\tdisplay = \"[[clothing#Noun|clothing]]\",\n\ttopical_categories = {\"Clothing\"},\n}\n\nlabels[\"color\"] = {\n\tdisplay = \"[[color]]\",\n\ttopical_categories = {\"Colors\"},\n}\n\nlabels[\"colour\"] = {\n   \tdisplay = \"[[colour]]\"\
      ,\n   topical_categories = {\"Colors\"},\n}\n\nlabels[\"combinatorics\"] = {\n\tdisplay = \"[[combinatorics]]\",\n\ttopical_categories = {\"Combinatorics\"},\n}\n\nlabels[\"comedy\"] = {\n\tdisplay = \"[[comedy]]\",\n\ttopical_categories = {\"Comedy\"\
      },\n}\n\nlabels[\"commercial law\"] = {\n\tdisplay = \"[[commercial#Adjective|commercial]] [[law]]\",\n\ttopical_categories = {\"Commercial law\"},\n}\nlabels[\"comics\"] = {\n\tdisplay = \"[[comics]]\",\n\ttopical_categories = {\"Comics\"},\n}\n\nlabels[\"\
      communication\"] = {\n\tdisplay = \"[[communication]]\",\n\ttopical_categories = {\"Communication\"},\n}\naliases[\"communications\"] = \"communication\"\n\nlabels[\"communism\"] = {\n\tdisplay = \"[[communism]]\",\n\ttopical_categories = {\"Communism\"\
      },\n}\naliases[\"Communism\"] = \"communism\"\n\nlabels[\"compilation\"] = {\n\tdisplay = \"[[software]] [[compilation]]\",\n\ttopical_categories = {\"Compilation\"},\n}\n\nlabels[\"complex analysis\"] = {\n\tdisplay = \"[[complex analysis]]\",\n\ttopical_categories\
      \ = {\"Complex analysis\"},\n}\n\nlabels[\"computational linguistics\"] = {\n\tdisplay = \"[[computational linguistics]]\",\n\ttopical_categories = {\"Computational linguistics\"},\n}\n\t\nlabels[\"computer games\"] = {\n\tdisplay = \"[[computer game]]s\"\
      ,\n\ttopical_categories = {\"Video games\"},\n}\n\nlabels[\"computer graphics\"] = {\n\tdisplay = \"[[computer graphics]]\",\n\ttopical_categories = {\"Computer graphics\"},\n}\n\nlabels[\"computer hardware\"] = {\n\tdisplay = \"[[computer]] [[hardware]]\"\
      ,\n\ttopical_categories = {\"Computer hardware\"},\n}\n\nlabels[\"computer languages\"] = {\n\tdisplay = \"[[computer language]]s\",\n\ttopical_categories = {\"Computer languages\"},\n}\naliases[\"computer language\"] = \"computer languages\"\n\nlabels[\"\
      computer science\"] = {\n\tdisplay = \"[[computer science]]\",\n\ttopical_categories = {\"Computer science\"},\n}\naliases[\"comp sci\"] = \"computer science\"\n\nlabels[\"computer security\"] = {\n\tdisplay = \"[[computer security]]\",\n\ttopical_categories\
      \ = {\"Computer security\"},\n}\n\nlabels[\"computing\"] = {\n\tdisplay = \"[[computing#Noun|computing]]\",\n\ttopical_categories = {\"Computing\"},\n}\naliases[\"computer\"] = \"computing\"\naliases[\"computers\"] = \"computing\"\n\nlabels[\"computing\
      \ theory\"] = {\n\tdisplay = \"[[computing#Noun|computing]] [[theory]]\",\n\ttopical_categories = {\"Theory of computing\"},\n}\naliases[\"comptheory\"] = \"computing theory\"\n\nlabels[\"conchology\"] = {\n\tdisplay = \"[[conchology]]\",\n\ttopical_categories\
      \ = {\"Conchology\"},\n}\n\nlabels[\"Confucianism\"] = {\n\tdisplay = \"[[Confucianism]]\",\n\ttopical_categories = {\"Confucianism\"},\n}\n\nlabels[\"construction\"] = {\n\tdisplay = \"[[construction]]\",\n\ttopical_categories = {\"Construction\"},\n\
      }\n\nlabels[\"cooking\"] = {\n\tdisplay = \"[[cooking#Noun|cooking]]\",\n\ttopical_categories = {\"Cooking\"},\n}\naliases[\"culinary\"] = \"cooking\"\naliases[\"cuisine\"] = \"cooking\"\naliases[\"cookery\"] = \"cooking\"\naliases[\"gastronomy\"] = \"\
      cooking\"\n\nlabels[\"copyright\"] = {\n\tdisplay = \"[[copyright]] [[law]]\",\n\ttopical_categories = {\"Copyright\"},\n}\n\nlabels[\"cosmetics\"] = {\n\tdisplay = \"[[cosmetics]]\",\n\ttopical_categories = {\"Cosmetics\"},\n}\naliases[\"cosmetology\"\
      ] = \"cosmetics\"\n\nlabels[\"cribbage\"] = {\n\tdisplay = \"[[cribbage]]\",\n\ttopical_categories = {\"Cribbage\"},\n}\n\nlabels[\"cricket\"] = {\n\tdisplay = \"[[cricket]]\",\n\ttopical_categories = {\"Cricket\"},\n}\n\nlabels[\"crime\"] = {\n\tdisplay\
      \ = \"[[crime]]\",\n\ttopical_categories = {\"Crime\"},\n}\n\nlabels[\"criminal law\"] = {\n\tdisplay = \"[[criminal law]]\",\n\ttopical_categories = {\"Criminal law\"},\n}\n\nlabels[\"criminology\"] = {\n\tdisplay = \"[[criminology]]\",\n\ttopical_categories\
      \ = {\"Criminology\"},\n}\n\nlabels[\"cryptography\"] = {\n\tdisplay = \"[[cryptography]]\",\n\ttopical_categories = {\"Cryptography\"},\n}\n\nlabels[\"cryptozoology\"] = {\n\tdisplay = \"[[cryptozoology]]\",\n\ttopical_categories = {\"Cryptozoology\"\
      },\n}\n\nlabels[\"crystallography\"] = {\n\tdisplay = \"[[crystallography]]\",\n\ttopical_categories = {\"Crystallography\"},\n}\n\nlabels[\"cultural anthropology\"] = {\n\tdisplay = \"[[cultural anthropology]]\",\n\ttopical_categories = {\"Cultural anthropology\"\
      },\n}\n\nlabels[\"curling\"] = {\n\tdisplay = \"[[curling]]\",\n\ttopical_categories = {\"Curling\"},\n}\n\nlabels[\"cybernetics\"] = {\n\tdisplay = \"[[cybernetics]]\",\n\ttopical_categories = {\"Cybernetics\"},\n}\n\nlabels[\"cycle racing\"] = {\n\t\
      display = \"[[w:cycle sport|cycle racing]]\",\n\ttopical_categories = {\"Cycle racing\"},\n}\n\nlabels[\"cycling\"] = {\n\tdisplay = \"[[cycling#Noun|cycling]]\",\n\ttopical_categories = {\"Cycling\"},\n}\n\nlabels[\"cytology\"] = {\n\tdisplay = \"[[cytology]]\"\
      ,\n\ttopical_categories = {\"Cytology\"},\n}\n\nlabels[\"dance\"] = {\n\tdisplay = \"[[dance#Noun|dance]]\",\n\ttopical_categories = {\"Dance\"},\n}\n\nlabels[\"darts\"] = {\n\tdisplay = \"[[darts]]\",\n\ttopical_categories = {\"Darts\"},\n}\n\nlabels[\"\
      data management\"] = {\n\tdisplay = \"[[data management]]\",\n\ttopical_categories = {\"Data management\"},\n}\n\nlabels[\"data modeling\"] = {\n\tdisplay = \"[[data modeling]]\",\n\ttopical_categories = {\"Data modeling\"},\n}\n\nlabels[\"databases\"\
      ] = {\n\tdisplay = \"[[database]]s\",\n\ttopical_categories = {\"Databases\"},\n}\naliases[\"database\"] = \"databases\"\n\nlabels[\"deltiology\"] = {\n\tdisplay = \"[[deltiology]]\",\n\ttopical_categories = {\"Deltiology\"},\n}\n\nlabels[\"demography\"\
      ] = {\n\tdisplay = \"[[demography]]\",\n\ttopical_categories = {\"Demography\"},\n}\n\nlabels[\"demoscene\"] = {\n\ttopical_categories = {\"Demoscene\"},\n}\n\nlabels[\"dentistry\"] = {\n\tdisplay = \"[[dentistry]]\",\n\ttopical_categories = {\"Dentistry\"\
      },\n}\n\nlabels[\"dermatology\"] = {\n\tdisplay = \"[[dermatology]]\",\n\ttopical_categories = {\"Dermatology\"},\n}\n\nlabels[\"design\"] = {\n\tdisplay = \"[[design#Noun|design]]\",\n\ttopical_categories = {\"Design\"},\n}\n\nlabels[\"dice games\"] =\
      \ {\n\tdisplay = \"[[dice game]]s\",\n\ttopical_categories = {\"Dice games\"},\n}\naliases[\"dice\"] = \"dice games\"\n\nlabels[\"dictation\"] = {\n\tdisplay = \"[[dictation]]\",\n\ttopical_categories = {\"Dictation\"},\n}\n\nlabels[\"diplomacy\"] = {\n\
      \tdisplay = \"[[diplomacy]]\",\n\ttopical_categories = {\"Diplomacy\"},\n}\n\nlabels[\"disc golf\"] = {\n\tdisplay = \"[[disc golf]]\",\n\ttopical_categories = {\"Disc golf\"},\n}\n\nlabels[\"divination\"] = {\n\tdisplay = \"[[divination]]\",\n\ttopical_categories\
      \ = {\"Divination\"},\n}\n\nlabels[\"diving\"] = {\n\tdisplay = \"[[diving#Noun|diving]]\",\n\ttopical_categories = {\"Diving\"},\n}\n\nlabels[\"dominoes\"] = {\n\tdisplay = \"[[dominoes]]\",\n\ttopical_categories = {\"Dominoes\"},\n}\n\nlabels[\"drama\"\
      ] = {\n\tdisplay = \"[[drama]]\",\n\ttopical_categories = {\"Drama\"},\n}\n\nlabels[\"dressage\"] = {\n\tdisplay = \"[[dressage]]\",\n\ttopical_categories = {\"Dressage\"},\n}\n\nlabels[\"earth science\"] = {\n\tdisplay = \"[[earth science]]\",\n\ttopical_categories\
      \ = {\"Earth sciences\"},\n}\n\nlabels[\"Eastern Catholicism\"] = {\n\tdisplay = \"[[w:Eastern Catholic Churches|Eastern Catholicism]]\",\n\ttopical_categories = {\"Eastern Catholicism\"},\n}\naliases[\"Eastern Catholic\"] = \"Eastern Catholicism\"\n\n\
      labels[\"Eastern Orthodoxy\"] = {\n\tdisplay = \"[[Eastern Orthodoxy]]\",\n\ttopical_categories = {\"Eastern Orthodoxy\"},\n}\n\nlabels[\"ecclesiastical\"] = {\n\tdisplay = \"[[ecclesiastical]]\",\n\ttopical_categories = {\"Christianity\"},\n}\n\nlabels[\"\
      ecology\"] = {\n\tdisplay = \"[[ecology]]\",\n\ttopical_categories = {\"Ecology\"},\n}\n\nlabels[\"economics\"] = {\n\tdisplay = \"[[economics]]\",\n\ttopical_categories = {\"Economics\"},\n}\n\nlabels[\"education\"] = {\n\tdisplay = \"[[education]]\"\
      ,\n\ttopical_categories = {\"Education\"},\n}\n\nlabels[\"Egyptian mythology\"] = {\n\tdisplay = \"[[Egyptian]] [[mythology]]\",\n\ttopical_categories = {\"Egyptian mythology\"},\n}\n\nlabels[\"Egyptology\"] = {\n\tdisplay = \"[[Egyptology]]\",\n\ttopical_categories\
      \ = {\"Ancient Egypt\"},\n}\n\nlabels[\"electrencephalography\"] = {\n\tdisplay = \"[[electrencephalography]]\",\n\ttopical_categories = {\"Electrencephalography\"},\n}\n\nlabels[\"electrical engineering\"] = {\n\tdisplay = \"[[electrical engineering]]\"\
      ,\n\ttopical_categories = {\"Electrical engineering\"},\n}\n\nlabels[\"electricity\"] = {\n\tdisplay = \"[[electricity]]\",\n\ttopical_categories = {\"Electricity\"},\n}\n\nlabels[\"electrodynamics\"] = {\n\tdisplay = \"[[electrodynamics]]\",\n\ttopical_categories\
      \ = {\"Electrodynamics\"},\n}\n\nlabels[\"electromagnetism\"] = {\n\tdisplay = \"[[electromagnetism]]\",\n\ttopical_categories = {\"Electromagnetism\"},\n}\n\nlabels[\"electronics\"] = {\n\tdisplay = \"[[electronics]]\",\n\ttopical_categories = {\"Electronics\"\
      },\n}\n\nlabels[\"embryology\"] = {\n\tdisplay = \"[[embryology]]\",\n\ttopical_categories = {\"Embryology\"},\n}\n\nlabels[\"emergency medicine\"] = {\n\tdisplay = \"[[emergency medicine]]\",\n\ttopical_categories = {\"Emergency medicine\"},\n}\naliases[\"\
      emergency\"] = \"emergency medicine\"\n\nlabels[\"endocrinology\"] = {\n\tdisplay = \"[[endocrinology]]\",\n\ttopical_categories = {\"Endocrinology\"},\n}\n\nlabels[\"engineering\"] = {\n\tdisplay = \"[[engineering#Noun|engineering]]\",\n\ttopical_categories\
      \ = {\"Engineering\"},\n}\n\nlabels[\"enterprise engineering\"] = {\n\tdisplay = \"[[enterprise engineering]]\",\n\ttopical_categories = {\"Enterprise engineering\"},\n}\n\nlabels[\"entomology\"] = {\n\tdisplay = \"[[entomology]]\",\n\ttopical_categories\
      \ = {\"Entomology\"},\n}\n\nlabels[\"epidemiology\"] = {\n\tdisplay = \"[[epidemiology]]\",\n\ttopical_categories = {\"Epidemiology\"},\n}\n\nlabels[\"epistemology\"] = {\n\tdisplay = \"[[epistemology]]\",\n\ttopical_categories = {\"Epistemology\"},\n\
      }\n\nlabels[\"equestrianism\"] = {\n\tdisplay = \"[[equestrianism]]\",\n\ttopical_categories = {\"Equestrianism\"},\n}\n\nlabels[\"espionage\"] = {\n\tdisplay = \"[[espionage]]\",\n\ttopical_categories = {\"Espionage\"},\n}\n\nlabels[\"ethics\"] = {\n\t\
      display = \"[[ethics]]\",\n\ttopical_categories = {\"Ethics\"},\n}\n\nlabels[\"ethnography\"] = {\n\tdisplay = \"[[ethnography]]\",\n\ttopical_categories = {\"Ethnography\"},\n}\n\nlabels[\"European folklore\"] = {\n\tdisplay = \"[[European]] [[folklore]]\"\
      ,\n\ttopical_categories = {\"European folklore\"},\n}\n\nlabels[\"evolutionary theory\"] = {\n\tdisplay = \"[[evolutionary theory]]\",\n\ttopical_categories = {\"Evolutionary theory\"},\n}\n\nlabels[\"exercise\"] = {\n\tdisplay = \"[[exercise|exercise\
      \ (sport)]]\",\n\ttopical_categories = {\"Exercise\"},\n}\n\nlabels[\"falconry\"] = {\n\tdisplay = \"[[falconry]]\",\n\ttopical_categories = {\"Falconry\"},\n}\n\nlabels[\"fantasy\"] = {\n\tdisplay = \"[[fantasy]]\",\n\ttopical_categories = {\"Fantasy\"\
      },\n}\n\nlabels[\"fascism\"] = {\n\tdisplay = \"[[fascism]]\",\n\ttopical_categories = {\"Fascism\"},\n}\n\nlabels[\"fashion\"] = {\n\tdisplay = \"[[fashion]]\",\n\ttopical_categories = {\"Fashion\"},\n}\n\nlabels[\"feminism\"] = {\n\tdisplay = \"[[feminism]]\"\
      ,\n\ttopical_categories = {\"Feminism\"},\n}\n\nlabels[\"fencing\"] = {\n\tdisplay = \"[[fencing#Noun|fencing]]\",\n\ttopical_categories = {\"Fencing\"},\n}\n\nlabels[\"fiction\"] = {\n\tdisplay = \"[[fiction]]\",\n\ttopical_categories = {\"Fiction\"},\n\
      }\n\nlabels[\"field hockey\"] = {\n\tdisplay = \"[[field hockey]]\",\n\ttopical_categories = {\"Field hockey\"},\n}\n\nlabels[\"figure skating\"] = {\n\tdisplay = \"[[figure skating]]\",\n\ttopical_categories = {\"Figure skating\"},\n}\n\nlabels[\"film\"\
      ] = {\n\tdisplay = \"[[film#Noun|film]]\",\n\ttopical_categories = {\"Film\"},\n}\naliases[\"cinema\"] = \"film\"\n\nlabels[\"finance\"] = {\n\tdisplay = \"[[finance#Noun|finance]]\",\n\ttopical_categories = {\"Finance\"},\n}\n\nlabels[\"Finnish mythology\"\
      ] = {\n\tdisplay = \"[[Finnish]] [[mythology]]\",\n\ttopical_categories = {\"Finnish mythology\"},\n}\n\nlabels[\"firearms\"] = {\n\tdisplay = \"[[firearm]]s\",\n\ttopical_categories = {\"Firearms\"}\n}\naliases[\"firearm\"] = \"firearms\"\n\nlabels[\"\
      firefighting\"] = {\n\ttopical_categories = {\"Firefighting\"},\n}\n\nlabels[\"fishing\"] = {\n\tdisplay = \"[[fishing#Noun|fishing]]\",\n\ttopical_categories = {\"Fishing\"},\n}\naliases[\"angling\"] = \"fishing\"\n\nlabels[\"fluid dynamics\"] = {\n\t\
      display = \"[[fluid dynamics]]\",\n\ttopical_categories = {\"Fluid dynamics\"},\n}\n\nlabels[\"fluid mechanics\"] = {\n\tdisplay = \"[[fluid mechanics]]\",\n\ttopical_categories = {\"Mechanics\"},\n}\n\nlabels[\"folklore\"] = {\n\tdisplay = \"[[folklore]]\"\
      ,\n\ttopical_categories = {\"Folklore\"},\n}\n\nlabels[\"forestry\"] = {\n\ttopical_categories = {\"Forestry\"},\n}\n\nlabels[\"freemasonry\"] = {\n\ttopical_categories = {\"Freemasonry\"},\n}\n\nlabels[\"functional analysis\"] = {\n\ttopical_categories\
      \ = {\"Functional analysis\"},\n}\n\nlabels[\"furniture\"] = {\n\ttopical_categories = {\"Furniture\"},\n}\n\nlabels[\"fuzzy logic\"] = {\n\ttopical_categories = {\"Fuzzy logic\"},\n}\n\nlabels[\"Gaelic football\"] = {\n\tdisplay = \"[[Gaelic football]]\"\
      ,\n\ttopical_categories = {\"Gaelic football\"},\n}\n\nlabels[\"gambling\"] = {\n\tdisplay = \"[[gambling#Noun|gambling]]\",\n\ttopical_categories = {\"Gambling\"},\n}\n\nlabels[\"game of go\"] = {\n\tdisplay = \"[[Go|game of Go]]\",\n\ttopical_categories\
      \ = {\"Go\"},\n}\n\nlabels[\"game theory\"] = {\n\tdisplay = \"[[game theory]]\",\n\ttopical_categories = {\"Game theory\"},\n}\n\nlabels[\"games\"] = {\n\tdisplay = \"[[game]]s\",\n\ttopical_categories = {\"Games\"},\n}\naliases[\"game\"] = \"games\"\n\
      \nlabels[\"gaming\"] = {\n\tdisplay = \"[[gaming#Noun|gaming]]\",\n\ttopical_categories = {\"Gaming\"},\n}\n\nlabels[\"genealogy\"] = {\n\tdisplay = \"[[genealogy]]\",\n\ttopical_categories = {\"Genealogy\"},\n}\n\nlabels[\"genetics\"] = {\n\tdisplay =\
      \ \"[[genetics]]\",\n\ttopical_categories = {\"Genetics\"},\n}\n\nlabels[\"geography\"] = {\n\tdisplay = \"[[geography]]\",\n\ttopical_categories = {\"Geography\"},\n}\n\nlabels[\"geology\"] = {\n\tdisplay = \"[[geology]]\",\n\ttopical_categories = {\"\
      Geology\"},\n}\n\nlabels[\"geometry\"] = {\n\tdisplay = \"[[geometry]]\",\n\ttopical_categories = {\"Geometry\"},\n}\n\nlabels[\"geomorphology\"] = {\n\tdisplay = \"[[geomorphology]]\",\n\ttopical_categories = {\"Geomorphology\"},\n}\n\nlabels[\"gerontology\"\
      ] = {\n\tdisplay = \"[[gerontology]]\",\n\ttopical_categories = {\"Gerontology\"},\n}\n\nlabels[\"glassblowing\"] = {\n\tdisplay = \"[[glassblowing]]\",\n\ttopical_categories = {\"Glassblowing\"},\n}\n\nlabels[\"Gnosticism\"] = {\n\tdisplay = \"[[Gnosticism]]\"\
      ,\n\ttopical_categories = {\"Gnosticism\"},\n}\naliases[\"gnosticism\"] = \"Gnosticism\"\n\nlabels[\"go\"] = {\n\tdisplay = \"[[go]]\",\n\ttopical_categories = {\"Go\"},\n}\naliases[\"Go\"] = \"go\"\n\nlabels[\"golf\"] = {\n\tdisplay = \"[[golf]]\",\n\t\
      topical_categories = {\"Golf\"},\n}\n\nlabels[\"government\"] = {\n\tdisplay = \"[[government]]\",\n\ttopical_categories = {\"Government\"},\n}\n\nlabels[\"grammar\"] = {\n\tdisplay = \"[[grammar]]\",\n\ttopical_categories = {\"Grammar\"},\n}\n\nlabels[\"\
      grammatical mood\"] = {\n\tdisplay = \"[[grammar]]\",\n\ttopical_categories = {\"Grammatical moods\"},\n}\n\nlabels[\"graph theory\"] = {\n\tdisplay = \"[[graph theory]]\",\n\ttopical_categories = {\"Graph theory\"},\n}\n\nlabels[\"graphic design\"] =\
      \ {\n\tdisplay = \"[[graphic design]]\",\n\ttopical_categories = {\"Graphic design\"},\n}\n\nlabels[\"graphical user interface\"] = {\n\tdisplay = \"[[graphical user interface]]\",\n\ttopical_categories = {\"Graphical user interface\"},\n}\naliases[\"\
      GUI\"] = \"graphical user interface\"\n\nlabels[\"Greek mythology\"] = {\n\tdisplay = \"[[Greek]] [[mythology]]\",\n\ttopical_categories = {\"Greek mythology\"},\n}\naliases[\"greekmyth\"] = \"Greek mythology\"\ndeprecated[\"greekmyth\"] = true\n\nlabels[\"\
      group theory\"] = {\n\tdisplay = \"[[group theory]]\",\n\ttopical_categories = {\"Group theory\"},\n}\n\nlabels[\"gun mechanisms\"] = {\n\tdisplay = \"[[firearm]]s\",\n\ttopical_categories = {\"Gun mechanisms\"}\n}\naliases[\"firearm mechanism\"] = \"\
      Gun mechanisms\"\naliases[\"firearm mechanisms\"] = \"Gun mechanisms\"\naliases[\"gun mechanism\"] = \"Gun mechanisms\"\n\nlabels[\"gymnastics\"] = {\n\tdisplay = \"[[gymnastics]]\",\n\ttopical_categories = {\"Gymnastics\"},\n}\n\nlabels[\"gynaecology\"\
      ] = {\n\tdisplay = \"[[gynaecology]]\",\n\ttopical_categories = {\"Gynaecology\"},\n}\naliases[\"gynecology\"] = \"gynaecology\"\n\nlabels[\"handball\"] = {\n\tdisplay = \"[[handball]]\",\n\ttopical_categories = {\"Handball\"},\n}\n\nlabels[\"Hawaiian\
      \ mythology\"] = {\n\tdisplay = \"[[Hawaiian]] [[mythology]]\",\n\ttopical_categories = {\"Hawaiian mythology\"},\n}\n\nlabels[\"healthcare\"] = {\n\tdisplay = \"[[healthcare]]\",\n\ttopical_categories = {\"Healthcare\"},\n}\n\nlabels[\"hematology\"] =\
      \ {\n\tdisplay = \"[[hematology]]\",\n\ttopical_categories = {\"Hematology\"},\n}\naliases[\"haematology\"] = \"hematology\"\n\nlabels[\"heraldry\"] = {\n\tdisplay = \"[[heraldry]]\",\n\ttopical_categories = {\"Heraldry\"},\n}\n\nlabels[\"herbalism\"]\
      \ = {\n\tdisplay = \"[[herbalism]]\",\n\ttopical_categories = {\"Herbalism\"},\n}\n\nlabels[\"herpetology\"] = {\n\tdisplay = \"[[herpetology]]\",\n\ttopical_categories = {\"Herpetology\"},\n}\n\nlabels[\"Hinduism\"] = {\n\tdisplay = \"[[Hinduism]]\",\n\
      \ttopical_categories = {\"Hinduism\"},\n}\n\nlabels[\"historiography\"] = {\n\tdisplay = \"[[historiography]]\",\n\ttopical_categories = {\"Historiography\"},\n}\n\nlabels[\"history\"] = {\n\tdisplay = \"[[history]]\",\n\ttopical_categories = {\"History\"\
      },\n}\n\nlabels[\"hockey\"] = {\n\tdisplay = \"[[field hockey]] or [[ice hockey]]\",\n\ttopical_categories = {\"Field hockey\", \"Ice hockey\"},\n}\n\nlabels[\"homeopathy\"] = {\n\tdisplay = \"[[homeopathy]]\",\n\ttopical_categories = {\"Homeopathy\"},\n\
      }\n\nlabels[\"horse racing\"] = {\n\tdisplay = \"[[horse racing]]\",\n\ttopical_categories = {\"Horse racing\"},\n}\n\nlabels[\"horticulture\"] = {\n\tdisplay = \"[[horticulture]]\",\n\ttopical_categories = {\"Horticulture\"},\n}\naliases[\"gardening\"\
      ] = \"horticulture\"\n\nlabels[\"HTML\"] = {\n\tdisplay = \"[[Hypertext Markup Language|HTML]]\",\n\ttopical_categories = {\"HTML\"},\n}\n\nlabels[\"human resources\"] = {\n\tdisplay = \"[[human resources]]\",\n\ttopical_categories = {\"Human resources\"\
      },\n}\n\nlabels[\"humanities\"] = {\n\tdisplay = \"[[humanities]]\",\n\ttopical_categories = {\"Humanities\"},\n}\n\nlabels[\"hunting\"] = {\n\tdisplay = \"[[hunting#Noun|hunting]]\",\n\ttopical_categories = {\"Hunting\"},\n}\n\nlabels[\"hurling\"] = {\n\
      \tdisplay = \"[[hurling#Noun|hurling]]\",\n\ttopical_categories = {\"Hurling\"},\n}\n\nlabels[\"hydrology\"] = {\n\tdisplay = \"[[hydrology]]\",\n\ttopical_categories = {\"Hydrology\"},\n}\n\nlabels[\"ice hockey\"] = {\n\tdisplay = \"[[ice hockey]]\",\n\
      \ttopical_categories = {\"Ice hockey\"},\n}\n\nlabels[\"ichthyology\"] = {\n\tdisplay = \"[[ichthyology]]\",\n\ttopical_categories = {\"Ichthyology\"},\n}\n\nlabels[\"immunochemistry\"] = {\n\tdisplay = \"[[immunochemistry]]\",\n\ttopical_categories =\
      \ {\"Immunochemistry\"},\n}\n\nlabels[\"immunology\"] = {\n\tdisplay = \"[[immunology]]\",\n\ttopical_categories = {\"Immunology\"},\n}\n\nlabels[\"import/export\"] = {\n\tdisplay = \"[[import#Noun|import]]/[[export#Noun|export]]\",\n\ttopical_categories\
      \ = {\"Import/export\"},\n}\n\nlabels[\"Indo-European studies\"] = {\n\tdisplay = \"[[Indo-European studies]]\",\n\ttopical_categories = {\"Indo-European studies\"},\n}\naliases[\"indo-european studies\"] = \"Indo-European studies\"\n\nlabels[\"information\
      \ science\"] = {\n\tdisplay = \"[[information science]]\",\n\ttopical_categories = {\"Information science\"},\n}\n\nlabels[\"information theory\"] = {\n\tdisplay = \"[[information theory]]\",\n\ttopical_categories = {\"Information theory\"},\n}\n\nlabels[\"\
      inorganic chemistry\"] = {\n\tdisplay = \"[[inorganic chemistry]]\",\n\ttopical_categories = {\"Inorganic chemistry\"},\n}\n\nlabels[\"insurance\"] = {\n\tdisplay = \"[[insurance]]\",\n\ttopical_categories = {\"Insurance\"},\n}\n\nlabels[\"international\
      \ law\"] = {\n\tdisplay = \"[[international law]]\",\n\ttopical_categories = {\"International law\"},\n}\n\nlabels[\"Internet\"] = {\n\tdisplay = \"[[Internet]]\",\n\ttopical_categories = {\"Internet\"},\n}\naliases[\"internet\"] = \"Internet\"\naliases[\"\
      online\"] = \"Internet\"\n\nlabels[\"Iranian mythology\"] = {\n\tdisplay = \"[[Iranian]] [[mythology]]\",\n\ttopical_categories = {\"Iranian mythology\"},\n}\n\nlabels[\"Irish mythology\"] = {\n\tdisplay = \"[[Irish]] [[mythology]]\",\n\ttopical_categories\
      \ = {\"Irish mythology\"},\n}\n\nlabels[\"Islam\"] = {\n\tdisplay = \"[[Islam]]\",\n\ttopical_categories = {\"Islam\"},\n}\naliases[\"islam\"] = \"Islam\"\ndeprecated[\"islam\"] = true\n\nlabels[\"Jainism\"] = {\n\t\tdisplay = \"[[Jainism]]\",\n\ttopical_categories\
      \ = {\"Jainism\"},\n}\n\nlabels[\"Japanese mythology\"] = {\n\tdisplay = \"[[Japanese]] [[mythology]]\",\n\ttopical_categories = {\"Japanese mythology\"},\n}\n\nlabels[\"Java programming language\"] = {\n\tdisplay = \"[[w:Java (programming language)|Java\
      \ programming language]]\",\n\ttopical_categories = {\"Java programming language\"},\n}\naliases[\"JavaPL\"] = \"Java programming language\"\naliases[\"Java PL\"] = \"Java programming language\"\n\nlabels[\"jazz\"] = {\n\tdisplay = \"[[jazz#Noun|jazz]]\"\
      ,\n\ttopical_categories = {\"Jazz\"},\n}\n\nlabels[\"Jewish law\"] = {\n\tdisplay = \"[[Jewish]] [[law]]\",\n\ttopical_categories = {\"Jewish law\"},\n}\naliases[\"Halacha\"] = \"Jewish law\"\naliases[\"Halachah\"] = \"Jewish law\"\naliases[\"Halakha\"\
      ] = \"Jewish law\"\naliases[\"Halakhah\"] = \"Jewish law\"\naliases[\"halacha\"] = \"Jewish law\"\naliases[\"halachah\"] = \"Jewish law\"\naliases[\"halakha\"] = \"Jewish law\"\naliases[\"halakhah\"] = \"Jewish law\"\naliases[\"jewish law\"] = \"Jewish\
      \ law\"\naliases[\"Jewish Law\"] = \"Jewish law\"\n\nlabels[\"journalism\"] = {\n\tdisplay = \"[[journalism]]\",\n\ttopical_categories = {\"Mass media\"},\n}\n\nlabels[\"Judaism\"] = {\n\tdisplay = \"[[Judaism]]\",\n\ttopical_categories = {\"Judaism\"\
      },\n}\n\nlabels[\"judo\"] = {\n\tdisplay = \"[[judo]]\",\n\ttopical_categories = {\"Judo\"},\n}\n\nlabels[\"juggling\"] = {\n\tdisplay = \"[[juggling#Noun|juggling]]\",\n\ttopical_categories = {\"Juggling\"},\n}\n\nlabels[\"knitting\"] = {\n\tdisplay =\
      \ \"[[knitting#Noun|knitting]]\",\n\ttopical_categories = {\"Knitting\"},\n}\n\nlabels[\"lacrosse\"] = {\n\tdisplay = \"[[lacrosse]]\",\n\ttopical_categories = {\"Lacrosse\"},\n}\n\nlabels[\"law\"] = {\n\tdisplay = \"[[law]]\",\n\ttopical_categories =\
      \ {\"Law\"},\n}\naliases[\"legal\"] = \"law\"\n\nlabels[\"law enforcement\"] = {\n\tdisplay = \"[[law enforcement]]\",\n\ttopical_categories = {\"Law enforcement\"},\n}\naliases[\"police\"] = \"law enforcement\"\naliases[\"policing\"] = \"law enforcement\"\
      \n\nlabels[\"letterpress\"] = {\n\tdisplay = \"[[letterpress]] [[typography]]\",\n\ttopical_categories = {\"Typography\"},\n}\naliases[\"metal type\"] = \"letterpress\"\naliases[\"metal typesetting\"] = \"letterpress\"\n\nlabels[\"lexicography\"] = {\n\
      \tdisplay = \"[[lexicography]]\",\n\ttopical_categories = {\"Lexicography\"},\n}\n\nlabels[\"LGBT\"] = {\n\tdisplay = \"[[LGBT]]\",\n\ttopical_categories = {\"LGBT\"},\n}\n\nlabels[\"liberalism\"] = {\n\tdisplay = \"[[liberalism]]\",\n\ttopical_categories\
      \ = {\"Liberalism\"},\n}\n\nlabels[\"library science\"] = {\n\tdisplay = \"[[library science]]\",\n\ttopical_categories = {\"Library science\"},\n}\n\nlabels[\"lichenology\"] = {\n\tdisplay = \"[[lichenology]]\",\n\ttopical_categories = {\"Lichenology\"\
      },\n}\n\nlabels[\"limnology\"] = {\n\tdisplay = \"[[limnology]]\",\n\ttopical_categories = {\"Ecology\"},\n}\n\nlabels[\"lipid\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Lipids\"},\n}\n\nlabels[\"linear algebra\"] = {\n\tdisplay\
      \ = \"[[linear algebra]]\",\n\ttopical_categories = {\"Linear algebra\"},\n}\naliases[\"vector\"] = \"linear algebra\"\naliases[\"vector algebra\"] = \"linear algebra\"\ndeprecated[\"vector\"] = true\n\nlabels[\"linguistic morphology\"] = {\n\tdisplay\
      \ = \"[[linguistic]] [[morphology]]\",\n\ttopical_categories = {\"Linguistic morphology\"},\n}\naliases[\"morphology\"] = \"linguistic morphology\"\ndeprecated[\"morphology\"] = true\n\nlabels[\"linguistics\"] = {\n\tdisplay = \"[[linguistics]]\",\n\t\
      topical_categories = {\"Linguistics\"},\n}\n\nlabels[\"literature\"] = {\n\tdisplay = \"[[literature]]\",\n\ttopical_categories = {\"Literature\"},\n}\n\nlabels[\"logic\"] = {\n\tdisplay = \"[[logic]]\",\n\ttopical_categories = {\"Logic\"},\n}\n\nlabels[\"\
      luge\"] = {\n\tdisplay = \"[[luge]]\",\n\ttopical_categories = {\"Luge\"},\n}\n\nlabels[\"machining\"] = {\n\tdisplay = \"[[machining#Noun|machining]]\",\n\ttopical_categories = {\"Machining\"},\n}\n\nlabels[\"mahjong\"] = {\n\tdisplay = \"[[mahjong]]\"\
      ,\n\ttopical_categories = {\"Mahjong\"},\n}\n\nlabels[\"malacology\"] = {\n\tdisplay = \"[[malacology]]\",\n\ttopical_categories = {\"Malacology\"},\n}\n\nlabels[\"mammalogy\"] = {\n\tdisplay = \"[[mammalogy]]\",\n\ttopical_categories = {\"Mammalogy\"\
      },\n}\n\nlabels[\"management\"] = {\n\tdisplay = \"[[management]]\",\n\ttopical_categories = {\"Management\"},\n}\n\nlabels[\"manga\"] = {\n\tdisplay = \"[[manga]]\",\n\ttopical_categories = {\"Japanese fiction\"},\n}\n\nlabels[\"manufacturing\"] = {\n\
      \tdisplay = \"[[manufacturing#Noun|manufacturing]]\",\n\ttopical_categories = {\"Manufacturing\"},\n}\naliases[\"industry\"] = \"manufacturing\"\ndeprecated[\"industry\"] = true\n\nlabels[\"marching\"] = {\n\tdisplay = \"[[marching#Noun|marching]]\",\n\
      \ttopical_categories = {\"Marching\"},\n}\n\nlabels[\"marine biology\"] = {\n\tdisplay = \"[[marine biology]]\",\n\ttopical_categories = {\"Marine biology\"},\n}\naliases[\"coral science\"] = \"marine biology\"\n\nlabels[\"marketing\"] = {\n\tdisplay =\
      \ \"[[marketing#Noun|marketing]]\",\n\ttopical_categories = {\"Marketing\"},\n}\n\nlabels[\"martial arts\"] = {\n\tdisplay = \"[[martial arts]]\",\n\ttopical_categories = {\"Martial arts\"},\n}\n\nlabels[\"Marxism\"] = {\n\tdisplay = \"[[Marxism]]\",\n\
      \ttopical_categories = {\"Marxism\"},\n}\n\nlabels[\"massage\"] = {\n\tdisplay = \"[[massage]]\",\n\ttopical_categories = {\"Massage\"},\n}\n\nlabels[\"materials science\"] = {\n\tdisplay = \"[[materials science]]\",\n\ttopical_categories = {\"Materials\
      \ science\"},\n}\n\nlabels[\"mathematical analysis\"] = {\n\tdisplay = \"[[mathematical analysis]]\",\n\ttopical_categories = {\"Mathematical analysis\"},\n}\naliases[\"analysis\"] = \"mathematical analysis\"\n\nlabels[\"mathematics\"] = {\n\tdisplay =\
      \ \"[[mathematics]]\",\n\ttopical_categories = {\"Mathematics\"},\n}\naliases[\"math\"] = \"mathematics\"\naliases[\"maths\"] = \"mathematics\"\n\nlabels[\"mechanical engineering\"] = {\n\tdisplay = \"[[mechanical engineering]]\",\n\ttopical_categories\
      \ = {\"Mechanical engineering\"},\n}\n\nlabels[\"mechanics\"] = {\n\tdisplay = \"[[mechanics]]\",\n\ttopical_categories = {\"Mechanics\"},\n}\n\nlabels[\"media\"] = {\n\tdisplay = \"[[media]]\",\n\ttopical_categories = {\"Media\"},\n}\n\nlabels[\"mediaeval\
      \ folklore\"] = {\n\tdisplay = \"[[mediaeval]] [[folklore]]\",\n\ttopical_categories = {\"European folklore\"},\n}\naliases[\"medieval folklore\"] = \"mediaeval folklore\"\n\nlabels[\"medical genetics\"] = {\n\tdisplay = \"[[medical]] [[genetics]]\",\n\
      \ttopical_categories = {\"Medical genetics\"},\n}\n\nlabels[\"medical sign\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories = {\"Medical signs and symptoms\"},\n}\n\nlabels[\"medicine\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories\
      \ = {\"Medicine\"},\n}\naliases[\"medical\"] = \"medicine\"\n\nlabels[\"Mesopotamian mythology\"] = {\n\tdisplay = \"[[Mesopotamian]] [[mythology]]\",\n\ttopical_categories = {\"Mesopotamian mythology\"},\n}\n\nlabels[\"metadata\"] = {\n\tdisplay = \"\
      [[metadata]]\",\n\ttopical_categories = {\"Data management\"},\n}\n\nlabels[\"metallurgy\"] = {\n\tdisplay = \"[[metallurgy]]\",\n\ttopical_categories = {\"Metallurgy\"},\n}\n\nlabels[\"metaphysics\"] = {\n\tdisplay = \"[[metaphysics]]\",\n\ttopical_categories\
      \ = {\"Metaphysics\"},\n}\n\nlabels[\"meteorology\"] = {\n\tdisplay = \"[[meteorology]]\",\n\ttopical_categories = {\"Meteorology\"},\n}\n\nlabels[\"metrology\"] = {\n\tdisplay = \"[[metrology]]\",\n\ttopical_categories = {\"Metrology\"},\n}\n\nlabels[\"\
      microbiology\"] = {\n\tdisplay = \"[[microbiology]]\",\n\ttopical_categories = {\"Microbiology\"},\n}\n\nlabels[\"microelectronics\"] = {\n\tdisplay = \"[[microelectronics]]\",\n\ttopical_categories = {\"Microelectronics\"},\n}\n\nlabels[\"microscopy\"\
      ] = {\n\tdisplay = \"[[microscopy]]\",\n\ttopical_categories = {\"Microscopy\"},\n}\n\nlabels[\"military\"] = {\n\tdisplay = \"[[military]]\",\n\ttopical_categories = {\"Military\"},\n}\n\nlabels[\"mineralogy\"] = {\n\tdisplay = \"[[mineralogy]]\",\n\t\
      topical_categories = {\"Mineralogy\"},\n}\n\nlabels[\"mining\"] = {\n\tdisplay = \"[[mining#Noun|mining]]\",\n\ttopical_categories = {\"Mining\"},\n}\n\nlabels[\"molecular biology\"] = {\n\tdisplay = \"[[molecular biology]]\",\n\ttopical_categories = {\"\
      Molecular biology\"},\n}\n\nlabels[\"monarchy\"] = {\n\tdisplay = \"[[monarchy]]\",\n\ttopical_categories = {\"Monarchy\"},\n}\n\nlabels[\"money\"] = {\n\tdisplay = \"[[money]]\",\n\ttopical_categories = {\"Money\"},\n}\n\nlabels[\"Mormonism\"] = {\n\t\
      display = \"[[Mormonism]]\",\n\ttopical_categories = {\"Mormonism\"},\n}\n\nlabels[\"motorcycling\"] = {\n\tdisplay = \"[[motorcycling#Noun|motorcycling]]\",\n\ttopical_categories = {\"Motorcycles\"},\n}\n\nlabels[\"motor racing\"] = {\n\tdisplay = \"\
      [[motor racing]]\",\n\ttopical_categories = {\"Motor racing\"},\n}\naliases[\"motor sport\"] = \"motor racing\"\n\nlabels[\"music\"] = {\n\tdisplay = \"[[music]]\",\n\ttopical_categories = {\"Music\"},\n}\n\nlabels[\"mycology\"] = {\n\tdisplay = \"[[mycology]]\"\
      ,\n\ttopical_categories = {\"Mycology\"},\n}\n\nlabels[\"mythology\"] = {\n\tdisplay = \"[[mythology]]\",\n\ttopical_categories = {\"Mythology\"},\n}\n\nlabels[\"nanotechnology\"] = {\n\tdisplay = \"[[nanotechnology]]\",\n\ttopical_categories = {\"Nanotechnology\"\
      },\n}\n\nlabels[\"narratology\"] = {\n\tdisplay = \"[[narratology]]\",\n\ttopical_categories = {\"Narratology\"},\n}\n\nlabels[\"nautical\"] = {\n\tdisplay = \"[[nautical]]\",\n\ttopical_categories = {\"Nautical\"},\n}\n\nlabels[\"navigation\"] = {\n\t\
      display = \"[[navigation]]\",\n\ttopical_categories = {\"Navigation\"},\n}\n\nlabels[\"Nazism\"] = { -- but also this is often used to indicate Nazi-used jargon; cf \"white supremacist ideology\"\n\tdisplay = \"[[w:Nazism|Nazism]]\",\n\ttopical_categories\
      \ = {\"Nazism\"},\n}\naliases[\"Nazi\"] = \"Nazism\"\naliases[\"nazi\"] = \"Nazism\"\naliases[\"nazism\"] = \"Nazism\"\naliases[\"neo-Nazism\"] = \"Nazism\"\naliases[\"neo-nazism\"] = \"Nazism\"\naliases[\"neo-Nazi\"] = \"Nazism\"\naliases[\"neo-nazi\"\
      ] = \"Nazism\"\naliases[\"neoNazism\"] = \"Nazism\"\naliases[\"neoNazi\"] = \"Nazism\"\naliases[\"neonazism\"] = \"Nazism\"\naliases[\"neonazi\"] = \"Nazism\"\n\nlabels[\"nematology\"] = {\n\tdisplay = \"[[nematology]]\",\n\ttopical_categories = {\"Zoology\"\
      },\n}\n\nlabels[\"netball\"] = {\n\tdisplay = \"[[netball]]\",\n\ttopical_categories = {\"Netball\"},\n}\n\nlabels[\"networking\"] = {\n\tdisplay = \"[[networking#Noun|networking]]\",\n\ttopical_categories = {\"Networking\"},\n}\n\nlabels[\"neuroanatomy\"\
      ] = {\n\tdisplay = \"[[neuroanatomy]]\",\n\ttopical_categories = {\"Neuroanatomy\"},\n}\n\nlabels[\"neurology\"] = {\n\tdisplay = \"[[neurology]]\",\n\ttopical_categories = {\"Neurology\"},\n}\n\nlabels[\"neuroscience\"] = {\n\tdisplay = \"[[neuroscience]]\"\
      ,\n\ttopical_categories = {\"Neuroscience\"},\n}\n\nlabels[\"neurosurgery\"] = {\n\tdisplay = \"[[neurosurgery]]\",\n\ttopical_categories = {\"Neurosurgery\"},\n}\n\nlabels[\"newspapers\"] = {\n\tdisplay = \"[[newspaper]]s\",\n\ttopical_categories = {\"\
      Newspapers\"},\n}\n\nlabels[\"Norse mythology\"] = {\n\tdisplay = \"[[Norse]] [[mythology]]\",\n\ttopical_categories = {\"Norse mythology\"},\n}\n\nlabels[\"nuclear physics\"] = {\n\tdisplay = \"[[nuclear physics]]\",\n\ttopical_categories = {\"Nuclear\
      \ physics\"},\n}\n\nlabels[\"number theory\"] = {\n\tdisplay = \"[[number theory]]\",\n\ttopical_categories = {\"Number theory\"},\n}\n\nlabels[\"numismatics\"] = {\n\tdisplay = \"[[numismatics]]\",\n\ttopical_categories = {\"Currency\"},\n}\naliases[\"\
      currency\"] = \"numismatics\"\ndeprecated[\"currency\"] = true\n\nlabels[\"nutrition\"] = {\n\tdisplay = \"[[nutrition]]\",\n\ttopical_categories = {\"Nutrition\"},\n}\n\nlabels[\"object-oriented programming\"] = {\n\tdisplay = \"[[w:Object-oriented programming|object-oriented\
      \ programming]]\",\n\ttopical_categories = {\"Object-oriented programming\"},\n}\naliases[\"object-oriented\"] = \"object-oriented programming\"\n\nlabels[\"obstetrics\"] = {\n\tdisplay = \"[[obstetrics]]\",\n\ttopical_categories = {\"Obstetrics\"},\n\
      }\naliases[\"obstetric\"] = \"obstetrics\"\n\nlabels[\"occult\"] = {\n\tdisplay = \"[[occult]]\",\n\ttopical_categories = {\"Occult\"},\n}\n\nlabels[\"oceanography\"] = {\n\tdisplay = \"[[oceanography]]\",\n\ttopical_categories = {\"Oceanography\"},\n\
      }\n\nlabels[\"oenology\"] = {\n\tdisplay = \"[[oenology]]\",\n\ttopical_categories = {\"Oenology\"},\n}\n\nlabels[\"oil industry\"] = {\n\tdisplay = \"[[w:Petroleum industry|oil industry]]\",\n\ttopical_categories = {\"Oil industry\"},\n}\naliases[\"oil\
      \ drilling\"] = \"oil industry\"\n\nlabels[\"oncology\"] = {\n\tdisplay = \"[[oncology]]\",\n\ttopical_categories = {\"Oncology\"},\n}\n\nlabels[\"online gaming\"] = {\n\tdisplay = \"[[online]] [[gaming#Noun|gaming]]\",\n\ttopical_categories = {\"Video\
      \ games\"},\n}\naliases[\"online games\"] = \"online gaming\"\naliases[\"MMO\"] = \"online gaming\"\naliases[\"MMORPG\"] = \"online gaming\"\n\nlabels[\"opera\"] = {\n\tdisplay = \"[[opera]]\",\n\ttopical_categories = {\"Opera\"},\n}\n\nlabels[\"operating\
      \ systems\"] = {\n\tdisplay = \"[[operating system]]s\",\n\ttopical_categories = {\"Software\"},\n}\n\nlabels[\"ophthalmology\"] = {\n\tdisplay = \"[[ophthalmology]]\",\n\ttopical_categories = {\"Ophthalmology\"},\n}\n\nlabels[\"optics\"] = {\n\tdisplay\
      \ = \"[[optics]]\",\n\ttopical_categories = {\"Optics\"},\n}\n\nlabels[\"organic chemistry\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Organic chemistry\"},\n}\n\nlabels[\"ornithology\"] = {\n\tdisplay = \"[[ornithology]]\"\
      ,\n\ttopical_categories = {\"Ornithology\"},\n}\n\nlabels[\"orthodontics\"] = {\n\tdisplay = \"[[orthodontics]]\",\n\ttopical_categories = {\"Dentistry\"},\n}\n\nlabels[\"orthography\"] = {\n\tdisplay = \"[[orthography]]\",\n\ttopical_categories = {\"\
      Orthography\"},\n}\n\nlabels[\"paganism\"] = {\n\tdisplay = \"[[paganism]]\",\n\ttopical_categories = {\"Paganism\"},\n}\naliases[\"pagan\"] = \"paganism\"\naliases[\"neopagan\"] = \"paganism\"\naliases[\"neopaganism\"] = \"paganism\"\naliases[\"neo-pagan\"\
      ] = \"paganism\"\naliases[\"neo-paganism\"] = \"paganism\"\n\nlabels[\"pain\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories = {\"Pain\"},\n}\n\nlabels[\"paintball\"] = {\n\tdisplay = \"[[paintball]]\",\n\ttopical_categories = {\"Paintball\"\
      },\n}\n\nlabels[\"painting\"] = {\n\tdisplay = \"[[painting#Noun|painting]]\",\n\ttopical_categories = {\"Painting\"},\n}\n\nlabels[\"palaeography\"] = {\n\tdisplay = \"[[palaeography]]\",\n\ttopical_categories = {\"Palaeography\"},\n}\naliases[\"paleography\"\
      ] = \"palaeography\"\n\nlabels[\"paleontology\"] = {\n\tdisplay = \"[[paleontology]]\",\n\ttopical_categories = {\"Paleontology\"},\n}\naliases[\"palaeontology\"] = \"paleontology\"\n\nlabels[\"palmistry\"] = {\n\tdisplay = \"[[palmistry]]\",\n\ttopical_categories\
      \ = {\"Palmistry\"},\n}\n\nlabels[\"palynology\"] = {\n\tdisplay = \"[[palynology]]\",\n\ttopical_categories = {\"Palynology\"},\n}\n\nlabels[\"parapsychology\"] = {\n\tdisplay = \"[[parapsychology]]\",\n\ttopical_categories = {\"Parapsychology\"},\n}\n\
      \nlabels[\"particle physics\"] = {\n\tdisplay = \"[[particle physics]]\",\n\ttopical_categories = {\"Particle physics\"},\n}\n\nlabels[\"pasteurisation\"] = {\n\tdisplay = \"[[pasteurisation]]\",\n\ttopical_categories = {\"Pasteurisation\"},\n}\n\nlabels[\"\
      patent law\"] = {\n\tdisplay = \"[[patent#Noun|patent]] [[law]]\",\n\ttopical_categories = {\"Patent law\"},\n}\naliases[\"patents\"] = \"patent law\"\n\nlabels[\"pathology\"] = {\n\tdisplay = \"[[pathology]]\",\n\ttopical_categories = {\"Pathology\"},\n\
      }\n\nlabels[\"pensions\"] = {\n\tdisplay = \"[[pension]]s\",\n\ttopical_categories = {\"Pensions\"},\n}\n\nlabels[\"pesäpallo\"] = {\n\tdisplay = \"[[pesäpallo]]\",\n\ttopical_categories = {\"Pesäpallo\"},\n}\naliases[\"pesapallo\"] = \"pesäpallo\"\n\n\
      labels[\"petrochemistry\"] = {\n\tdisplay = \"[[petrochemistry]]\",\n\ttopical_categories = {\"Petrochemistry\"},\n}\n\nlabels[\"petrology\"] = {\n\tdisplay = \"[[petrology]]\",\n\ttopical_categories = {\"Petrology\"},\n}\n\nlabels[\"pharmacology\"] =\
      \ {\n\tdisplay = \"[[pharmacology]]\",\n\ttopical_categories = {\"Pharmacology\"},\n}\n\nlabels[\"pharmacy\"] = {\n\tdisplay = \"[[pharmacy]]\",\n\ttopical_categories = {\"Pharmacy\"},\n}\n\nlabels[\"pharyngology\"] = {\n\tdisplay = \"[[pharyngology]]\"\
      ,\n\ttopical_categories = {\"Pharyngology\"},\n}\n\nlabels[\"philately\"] = {\n\tdisplay = \"[[philately]]\",\n\ttopical_categories = {\"Philately\"},\n}\n\nlabels[\"philosophy\"] = {\n\tdisplay = \"[[philosophy]]\",\n\ttopical_categories = {\"Philosophy\"\
      },\n}\n\nlabels[\"phonetics\"] = {\n\tdisplay = \"[[phonetics]]\",\n\ttopical_categories = {\"Phonetics\"},\n}\n\nlabels[\"phonology\"] = {\n\tdisplay = \"[[phonology]]\",\n\ttopical_categories = {\"Phonology\"},\n}\n\nlabels[\"photography\"] = {\n\tdisplay\
      \ = \"[[photography]]\",\n\ttopical_categories = {\"Photography\"},\n}\n\nlabels[\"phrenology\"] = {\n\tdisplay = \"[[phrenology]]\",\n\ttopical_categories = {\"Phrenology\"},\n}\n\nlabels[\"physical chemistry\"] = {\n\tdisplay = \"[[physical chemistry]]\"\
      ,\n\ttopical_categories = {\"Physical chemistry\"},\n}\n\nlabels[\"physics\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Physics\"},\n}\n\nlabels[\"physiology\"] = {\n\tdisplay = \"[[physiology]]\",\n\ttopical_categories = {\"Physiology\"\
      },\n}\n\nlabels[\"phytopathology\"] = {\n\tdisplay = \"[[phytopathology]]\",\n\ttopical_categories = {\"Phytopathology\"},\n}\n\nlabels[\"pinball\"] = {\n\tdisplay = \"[[pinball]]\",\n\ttopical_categories = {\"Pinball\"},\n}\n\nlabels[\"planetology\"]\
      \ = {\n\tdisplay = \"[[planetology]]\",\n\ttopical_categories = {\"Planetology\"},\n}\n\nlabels[\"poetry\"] = {\n\tdisplay = \"[[poetry]]\",\n\ttopical_categories = {\"Poetry\"},\n}\n\nlabels[\"Pokémon\"] = {\n\tdisplay = \"[[w:Pokémon|Pokémon]]\",\n\t\
      topical_categories = {\"Pokémon\"},\n}\n\nlabels[\"poker\"] = {\n\tdisplay = \"[[poker]]\",\n\ttopical_categories = {\"Poker\"},\n}\n\nlabels[\"poker slang\"] = {\n\tdisplay = \"[[poker]] [[slang]]\",\n\ttopical_categories = {\"Poker\"},\n}\n\nlabels[\"\
      political science\"] = {\n\tdisplay = \"[[political science]]\",\n\ttopical_categories = {\"Political science\"},\n}\n\nlabels[\"politics\"] = {\n\tdisplay = \"[[politics]]\",\n\ttopical_categories = {\"Politics\"},\n}\naliases[\"political\"] = \"politics\"\
      \n\nlabels[\"polymer science\"] = {\n\tdisplay = \"[[polymer]] [[science]]\",\n\ttopical_categories = {\"Polymer science\"},\n}\n\nlabels[\"pornography\"] = {\n\tdisplay = \"[[pornography]]\",\n\ttopical_categories = {\"Pornography\"},\n}\n\nlabels[\"\
      Portuguese folklore\"] = {\n\tdisplay = \"[[Portuguese#Adjective|Portuguese]] [[folklore]]\",\n\ttopical_categories = {\"European folklore\"},\n}\n\nlabels[\"pottery\"] = {\n\tdisplay = \"[[pottery]]\",\n\ttopical_categories = {\"Ceramics\"},\n}\n\nlabels[\"\
      pragmatics\"] = {\n\tdisplay = \"[[pragmatics]]\",\n\ttopical_categories = {\"Pragmatics\"},\n}\n\nlabels[\"printing\"] = {\n\tdisplay = \"[[printing#Noun|printing]]\",\n\ttopical_categories = {\"Printing\"},\n}\n\nlabels[\"probability theory\"] = {\n\t\
      display = \"[[probability theory]]\",\n\ttopical_categories = {\"Probability theory\"},\n}\n\nlabels[\"programming\"] = {\n\tdisplay = \"[[programming#Noun|programming]]\",\n\ttopical_categories = {\"Programming\"},\n}\naliases[\"computer programming\"\
      ] = \"programming\"\n\nlabels[\"property law\"] = {\n\tdisplay = \"[[property law]]\",\n\ttopical_categories = {\"Property law\"},\n}\n\nlabels[\"prosody\"] = {\n\tdisplay = \"[[prosody]]\",\n\ttopical_categories = {\"Prosody\"},\n}\n\nlabels[\"Protestantism\"\
      ] = {\n\tdisplay = \"[[Protestantism]]\",\n\ttopical_categories = {\"Protestantism\"},\n}\n\nlabels[\"pseudoscience\"] = {\n\tdisplay = \"[[pseudoscience]]\",\n\ttopical_categories = {\"Pseudoscience\"},\n}\n\nlabels[\"psychiatry\"] = {\n\tdisplay = \"\
      [[psychiatry]]\",\n\ttopical_categories = {\"Psychiatry\"},\n}\n\nlabels[\"psychoanalysis\"] = {\n\tdisplay = \"[[psychoanalysis]]\",\n\ttopical_categories = {\"Psychoanalysis\"},\n}\n\nlabels[\"psychology\"] = {\n\tdisplay = \"[[psychology]]\",\n\ttopical_categories\
      \ = {\"Psychology\"},\n}\n\nlabels[\"psychotherapy\"] = {\n\tdisplay = \"[[psychotherapy]]\",\n\ttopical_categories = {\"Psychotherapy\"},\n}\n\nlabels[\"publishing\"] = {\n\tdisplay = \"[[publishing#Noun|publishing]]\",\n\ttopical_categories = {\"Publishing\"\
      },\n}\n\nlabels[\"pyrotechnics\"] = {\n\tdisplay = \"[[pyrotechnics]]\",\n\ttopical_categories = {\"Pyrotechnics\"},\n}\n\nlabels[\"Quakerism\"] = {\n\ttopical_categories = {\"Quakerism\"},\n}\n\nlabels[\"quantum mechanics\"] = {\n\ttopical_categories\
      \ = {\"Quantum mechanics\"},\n}\naliases[\"quantum physics\"] = \"quantum mechanics\"\naliases[\"quantum\"] = \"quantum mechanics\"\ndeprecated[\"quantum\"] = true\n\n-- TODO: What kind of topic is \"radiation\"? Is it specific kinds of radiation? That\
      \ would be a set-type category.\nlabels[\"radiation\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Radiation\"},\n}\n\nlabels[\"radio\"] = {\n\tdisplay = \"[[radio]]\",\n\ttopical_categories = {\"Radio\"},\n}\n\nlabels[\"Raëlism\"] = {\n\
      \tdisplay = \"[[Raëlism]]\",\n\ttopical_categories = {\"Raëlism\"},\n}\n\nlabels[\"rail transport\"] = {\n\tdisplay = \"[[rail transport]]\",\n\ttopical_categories = {\"Rail transportation\"},\n}\naliases[\"rail\"] = \"rail transport\"\naliases[\"railroading\"\
      ] = \"rail transport\"\naliases[\"railroads\"] = \"rail transport\"\n\nlabels[\"Rastafari\"] = {\n\tdisplay = \"[[Rastafari]]\",\n\ttopical_categories = {\"Rastafari\"},\n}\naliases[\"Rasta\"] = \"Rastafari\"\naliases[\"rasta\"] = \"Rastafari\"\naliases[\"\
      Rastafarian\"] = \"Rastafari\"\naliases[\"rastafarian\"] = \"Rastafari\"\naliases[\"Rastafariamism\"] = \"Rastafari\"\n\nlabels[\"real estate\"] = {\n\tdisplay = \"[[real estate]]\",\n\ttopical_categories = {\"Real estate\"},\n}\n\nlabels[\"real tennis\"\
      ] = {\n\tdisplay = \"[[real tennis]]\",\n\ttopical_categories = {\"Tennis\"},\n}\n\nlabels[\"recreational mathematics\"] = {\n\tdisplay = \"[[recreational mathematics]]\",\n\ttopical_categories = {\"Mathematics\"},\n}\n\nlabels[\"regular expressions\"\
      ] = {\n\tdisplay = \"[[regular expression]]s\",\n\ttopical_categories = {\"Regular expressions\"},\n}\naliases[\"regex\"] = \"regular expressions\"\n\nlabels[\"relativity\"] = {\n\tdisplay = \"[[relativity]]\",\n\ttopical_categories = {\"Relativity\"},\n\
      }\n\nlabels[\"religion\"] = {\n\tdisplay = \"[[religion]]\",\n\ttopical_categories = {\"Religion\"},\n}\n\nlabels[\"rhetoric\"] = {\n\tdisplay = \"[[rhetoric]]\",\n\ttopical_categories = {\"Rhetoric\"},\n}\n\nlabels[\"road transport\"] = {\n\tdisplay =\
      \ \"[[w:road transport|road transport]]\",\n\ttopical_categories = {\"Road transport\"},\n}\n\nlabels[\"robotics\"] = {\n\tdisplay = \"[[robotics]]\",\n\ttopical_categories = {\"Robotics\"},\n}\n\nlabels[\"rock paper scissors\"] = {\n\ttopical_categories\
      \ = {\"Rock paper scissors\"},\n}\n\nlabels[\"role-playing games\"] = {\n\tdisplay = \"[[role-playing game]]s\",\n\ttopical_categories = {\"Role-playing games\"},\n}\naliases[\"role playing games\"] = \"role-playing games\"\naliases[\"RPG\"] = \"role-playing\
      \ games\"\n\nlabels[\"roller derby\"] = {\n\tdisplay = \"[[roller derby]]\",\n\ttopical_categories = {\"Roller derby\"},\n}\n\nlabels[\"Roman Catholicism\"] = {\n\tdisplay = \"[[Roman Catholicism]]\",\n\ttopical_categories = {\"Roman Catholicism\"},\n\
      }\naliases[\"Roman Catholic\"] = \"Roman Catholicism\"\n\nlabels[\"Roman mythology\"] = {\n\tdisplay = \"[[Roman]] [[mythology]]\",\n\ttopical_categories = {\"Roman mythology\"},\n}\n\nlabels[\"Roman numerals\"] = {\n\tdisplay = \"[[Roman numeral]]s\"\
      ,\n\ttopical_categories = {\"Roman numerals\"},\n}\n\nlabels[\"roofing\"] = {\n\tdisplay = \"[[roofing#Noun|roofing]]\",\n\ttopical_categories = {\"Roofing\"},\n}\n\nlabels[\"rosiculture\"] = {\n\tdisplay = \"[[rosiculture]]\",\n\ttopical_categories =\
      \ {\"Rosiculture\"},\n}\n\nlabels[\"rowing\"] = {\n\tdisplay = \"[[rowing#Noun|rowing]]\",\n\ttopical_categories = {\"Rowing\"},\n}\n\nlabels[\"Rubik's Cube\"] = {\n\tdisplay = \"[[Rubik's Cube]]\",\n\ttopical_categories = {\"Rubik's Cube\"},\n}\naliases[\"\
      Rubik's cubes\"] = \"Rubik's Cube\"\n\nlabels[\"rugby\"] = {\n\tdisplay = \"[[rugby]]\",\n\ttopical_categories = {\"Rugby\"},\n}\n\nlabels[\"rugby league\"] = {\n\tdisplay = \"[[rugby league]]\",\n\ttopical_categories = {\"Rugby league\"},\n}\n\nlabels[\"\
      rugby union\"] = {\n\tdisplay = \"[[rugby union]]\",\n\ttopical_categories = {\"Rugby union\"},\n}\n\nlabels[\"sailing\"] = {\n\tdisplay = \"[[sailing#Noun|sailing]]\",\n\ttopical_categories = {\"Sailing\"},\n}\n\nlabels[\"science fiction\"] = {\n\tdisplay\
      \ = \"[[science fiction]]\",\n\ttopical_categories = {\"Science fiction\"},\n}\naliases[\"scifi\"] = \"science fiction\"\naliases[\"sci fi\"] = \"science fiction\"\n\nlabels[\"sciences\"] = {\n\tdisplay = \"[[sciences]]\",\n\ttopical_categories = {\"Sciences\"\
      },\n}\naliases[\"science\"] = \"sciences\"\naliases[\"scientific\"] = \"sciences\"\n\nlabels[\"Scientology\"] = {\n\tdisplay = \"[[Scientology]]\",\n\ttopical_categories = {\"Scientology\"},\n}\n\nlabels[\"Scouting\"] = {\n\tdisplay = \"[[Scouting]]\"\
      ,\n\ttopical_categories = {\"Scouting\"},\n}\naliases[\"scouting\"] = \"Scouting\"\n\nlabels[\"scrapbooks\"] = {\n\tdisplay = \"[[scrapbook]]s\",\n\ttopical_categories = {\"Scrapbooks\"},\n}\n\nlabels[\"sculpture\"] = {\n\tdisplay = \"[[sculpture]]\",\n\
      \ttopical_categories = {\"Sculpture\"},\n}\n\nlabels[\"seduction community\"] = {\n\tdisplay = \"[[w:Seduction community|seduction community]]\",\n\ttopical_categories = {\"Seduction community\"},\n}\n\nlabels[\"seismology\"] = {\n\tdisplay = \"[[seismology]]\"\
      ,\n\ttopical_categories = {\"Seismology\"},\n}\n\nlabels[\"semantics\"] = {\n\tdisplay = \"[[semantics]]\",\n\ttopical_categories = {\"Semantics\"},\n}\n\nlabels[\"semiotics\"] = {\n\tdisplay = \"[[semiotics]]\",\n\ttopical_categories = {\"Semiotics\"\
      },\n}\n\nlabels[\"set theory\"] = {\n\tdisplay = \"[[set theory]]\",\n\ttopical_categories = {\"Set theory\"},\n}\n\nlabels[\"sewing\"] = {\n\tdisplay = \"[[sewing#Noun|sewing]]\",\n\ttopical_categories = {\"Sewing\"},\n}\n\nlabels[\"sexology\"] = {\n\t\
      display = \"[[sexology]]\",\n\ttopical_categories = {\"Sexology\"},\n}\n\nlabels[\"sexuality\"] = {\n\tdisplay = \"[[sexuality]]\",\n\ttopical_categories = {\"Sexuality\"},\n}\n\nlabels[\"shamanism\"] = {\n\tdisplay = \"[[shamanism]]\",\n\ttopical_categories\
      \ = {\"Shamanism\"},\n}\naliases[\"Shamanism\"] = \"shamanism\"\n\nlabels[\"Shinto\"] = {\n\tdisplay = \"[[Shinto]]\",\n\ttopical_categories = {\"Shinto\"},\n}\n\nlabels[\"shipping\"] = {\n\tdisplay = \"[[shipping#Noun|shipping]]\",\n\ttopical_categories\
      \ = {\"Shipping\"},\n}\n\nlabels[\"shogi\"] = {\n\tdisplay = \"[[shogi]]\",\n\ttopical_categories = {\"Shogi\"},\n}\n\nlabels[\"signal processing\"] = {\n\tdisplay = \"[[w:Signal processing|signal processing]]\",\n\ttopical_categories = {\"Signal processing\"\
      },\n}\n\nlabels[\"Sikhism\"] = {\n\tdisplay = \"[[Sikhism]]\",\n\ttopical_categories = {\"Sikhism\"},\n}\n\nlabels[\"singing\"] = {\n\tdisplay = \"[[singing#Noun|singing]]\",\n\ttopical_categories = {\"Singing\"},\n}\n\nlabels[\"skateboarding\"] = {\n\t\
      display = \"[[skateboarding#Noun|skateboarding]]\",\n\ttopical_categories = {\"Skateboarding\"},\n}\n\nlabels[\"skating\"] = {\n\tdisplay = \"[[skating#Noun|skating]]\",\n\ttopical_categories = {\"Skating\"},\n}\n\nlabels[\"skiing\"] = {\n\tdisplay = \"\
      [[skiing#Noun|skiing]]\",\n\ttopical_categories = {\"Skiing\"},\n}\n\nlabels[\"smoking\"] = {\n\tdisplay = \"[[smoking#Noun|smoking]]\",\n\ttopical_categories = {\"Smoking\"},\n}\n\nlabels[\"snooker\"] = {\n\tdisplay = \"[[snooker#Noun|snooker]]\",\n\t\
      topical_categories = {\"Snooker\"},\n}\n\nlabels[\"snowboarding\"] = {\n\tdisplay = \"[[snowboarding#Noun|snowboarding]]\",\n\ttopical_categories = {\"Snowboarding\"},\n}\n\nlabels[\"soccer\"] = {\n\tdisplay = \"[[soccer]]\",\n\ttopical_categories = {\"\
      Football (soccer)\"},\n}\naliases[\"football\"] = \"soccer\"\naliases[\"association football\"] = \"soccer\"\n\nlabels[\"social sciences\"] = {\n\tdisplay = \"[[social sciences]]\",\n\ttopical_categories = {\"Social sciences\"},\n}\naliases[\"social science\"\
      ] = \"social sciences\"\n\nlabels[\"socialism\"] = {\n\tdisplay = \"[[socialism]]\",\n\ttopical_categories = {\"Socialism\"},\n}\n\nlabels[\"sociolinguistics\"] = {\n\tdisplay = \"[[sociolinguistics]]\",\n\ttopical_categories = {\"Sociolinguistics\"},\n\
      }\n\nlabels[\"sociology\"] = {\n\tdisplay = \"[[sociology]]\",\n\ttopical_categories = {\"Sociology\"},\n}\n\nlabels[\"softball\"] = {\n\tdisplay = \"[[softball]]\",\n\ttopical_categories = {\"Softball\"},\n}\n\nlabels[\"software\"] = {\n\tdisplay = \"\
      [[software]]\",\n\ttopical_categories = {\"Software\"},\n}\n\nlabels[\"software architecture\"] = {\n\tdisplay = \"[[software architecture]]\",\n\ttopical_categories = {\"Software engineering\", \"Programming\"},\n}\n\nlabels[\"software engineering\"]\
      \ = {\n\tdisplay = \"[[software engineering]]\",\n\ttopical_categories = {\"Software engineering\"},\n}\n\nlabels[\"soil science\"] = {\n\tdisplay = \"[[soil science]]\",\n\ttopical_categories = {\"Soil science\"},\n}\n\nlabels[\"sound\"] = {\n\tdisplay\
      \ = \"[[sound#Noun|sound]]\",\n\ttopical_categories = {\"Sound\"},\n}\n\nlabels[\"sound engineering\"] = {\n\tdisplay = \"[[sound engineering]]\",\n\ttopical_categories = {\"Sound engineering\"},\n}\n\nlabels[\"Soviet Union\"] = {\n\tdisplay = \"[[Soviet\
      \ Union]]\",\n\ttopical_categories = {\"Soviet Union\"},\n}\naliases[\"USSR\"] = \"Soviet Union\"\n\nlabels[\"space flight\"] = {\n\tdisplay = \"[[space flight]]\",\n\ttopical_categories = {\"Space\"},\n}\n\nlabels[\"space science\"] = {\n\tdisplay = \"\
      [[space science]]\",\n\ttopical_categories = {\"Space\"},\n}\naliases[\"space\"] = \"space science\"\n\nlabels[\"spectroscopy\"] = {\n\tdisplay = \"[[spectroscopy]]\",\n\ttopical_categories = {\"Spectroscopy\"},\n}\n\nlabels[\"spiritualism\"] = {\n\tdisplay\
      \ = \"[[spiritualism]]\",\n\ttopical_categories = {\"Spiritualism\"},\n}\n\nlabels[\"sports\"] = {\n\tdisplay = \"[[sports]]\",\n\ttopical_categories = {\"Sports\"},\n}\naliases[\"sport\"] = \"sports\"\n\nlabels[\"squash\"] = {\n\tdisplay = \"[[squash#Noun|squash\
      \ (sport)]]\",\n\ttopical_categories = {\"Squash\"},\n}\n\nlabels[\"statistics\"] = {\n\tdisplay = \"[[statistics]]\",\n\ttopical_categories = {\"Statistics\"},\n}\n\nlabels[\"Star Wars\"] = {\n\tdisplay = \"[[Star Wars]]\",\n\ttopical_categories = {\"\
      Star Wars\"},\n}\n\nlabels[\"stock market\"] = {\n\tdisplay = \"[[stock market]]\",\n\ttopical_categories = {\"Stock market\"},\n}\n\nlabels[\"stock ticker symbol\"] = {\n\tdisplay = \"[[stock ticker symbol]]\",\n\ttopical_categories = {\"Stock symbols\
      \ for companies\"},\n}\naliases[\"stock symbol\"] = \"stock ticker symbol\"\n\nlabels[\"subculture\"] = {\n\tdisplay = \"[[subculture]]\",\n\ttopical_categories = {\"Culture\"},\n}\n\nlabels[\"sumo\"] = {\n\tdisplay = \"[[sumo]]\",\n\ttopical_categories\
      \ = {\"Sumo\"},\n}\n\nlabels[\"surfing\"] = {\n\tdisplay = \"[[surfing#Noun|surfing]]\",\n\ttopical_categories = {\"Surfing\"},\n}\n\nlabels[\"surgery\"] = {\n\tdisplay = \"[[surgery]]\",\n\ttopical_categories = {\"Surgery\"},\n}\n\nlabels[\"surveying\"\
      ] = {\n\tdisplay = \"[[surveying#Noun|surveying]]\",\n\ttopical_categories = {\"Surveying\"},\n}\n\nlabels[\"sushi\"] = {\n\tdisplay = \"[[sushi]]\",\n\ttopical_categories = {\"Sushi\"},\n}\n\nlabels[\"swimming\"] = {\n\tdisplay = \"[[swimming#Noun|swimming]]\"\
      ,\n\ttopical_categories = {\"Swimming\"},\n}\n\nlabels[\"swords\"] = {\n\tdisplay = \"[[sword]]s\",\n\ttopical_categories = {\"Swords\"},\n}\n\nlabels[\"systematics\"] = {\n\tdisplay = \"[[systematics]]\",\n\ttopical_categories = {\"Systematics\"},\n}\n\
      \nlabels[\"systems engineering\"] = {\n\tdisplay = \"[[systems engineering]]\",\n\ttopical_categories = {\"Systems engineering\"},\n}\n\nlabels[\"systems theory\"] = {\n\tdisplay = \"[[systems theory]]\",\n\ttopical_categories = {\"Systems theory\"},\n\
      }\n\nlabels[\"table tennis\"] = {\n\tdisplay = \"[[table tennis]]\",\n\ttopical_categories = {\"Table tennis\"},\n}\n\nlabels[\"Taoism\"] = {\n\tdisplay = \"[[Taoism]]\",\n\ttopical_categories = {\"Taoism\"},\n}\naliases[\"Daoism\"] = \"Taoism\"\n\nlabels[\"\
      tarot\"] = {\n\tdisplay = \"[[tarot]]\",\n\ttopical_categories = {\"Cartomancy\"},\n}\n\nlabels[\"taxation\"] = {\n\tdisplay = \"[[taxation]]\",\n\ttopical_categories = {\"Law\"},\n}\naliases[\"tax\"] = \"taxation\"\naliases[\"taxes\"] = \"taxation\"\n\
      \nlabels[\"taxonomy\"] = {\n\tdisplay = \"[[taxonomy]]\",\n\ttopical_categories = {\"Taxonomy\"},\n}\n\nlabels[\"technology\"] = {\n\tdisplay = \"[[technology]]\",\n\ttopical_categories = {\"Technology\"},\n}\n\nlabels[\"telecommunications\"] = {\n\tdisplay\
      \ = \"[[telecommunications]]\",\n\ttopical_categories = {\"Telecommunications\"},\n}\naliases[\"telecommunication\"] = \"telecommunications\"\naliases[\"telecom\"] = \"telecommunications\"\n\nlabels[\"telegraphy\"] = {\n\tdisplay = \"[[telegraphy]]\",\n\
      \ttopical_categories = {\"Telegraphy\"},\n}\n\nlabels[\"telephony\"] = {\n\tdisplay = \"[[telephony]]\",\n\ttopical_categories = {\"Telephony\"},\n}\naliases[\"telephone\"] = \"telephony\"\naliases[\"telephones\"] = \"telephony\"\n\nlabels[\"television\"\
      ] = {\n\tdisplay = \"[[television]]\",\n\ttopical_categories = {\"Television\"},\n}\naliases[\"TV\"] = \"television\"\n\nlabels[\"tennis\"] = {\n\tdisplay = \"[[tennis]]\",\n\ttopical_categories = {\"Tennis\"},\n}\n\nlabels[\"teratology\"] = {\n\tdisplay\
      \ = \"[[teratology]]\",\n\ttopical_categories = {\"Teratology\"},\n}\n\nlabels[\"Tetris\"] = {\n\tdisplay = \"[[Tetris]]\",\n\ttopical_categories = {\"Tetris\"},\n}\n\nlabels[\"textiles\"] = {\n\tdisplay = \"[[textiles]]\",\n\ttopical_categories = {\"\
      Textiles\"},\n}\n\nlabels[\"theater\"] = {\n\tdisplay = \"[[theater]]\",\n\ttopical_categories = {\"Theater\"},\n}\naliases[\"theatre\"] = \"theater\"\n\nlabels[\"theology\"] = {\n\tdisplay = \"[[theology]]\",\n\ttopical_categories = {\"Theology\"},\n\
      }\n\nlabels[\"thermodynamics\"] = {\n\tdisplay = \"[[thermodynamics]]\",\n\ttopical_categories = {\"Thermodynamics\"},\n}\n\nlabels[\"Tibetan Buddhism\"] = {\n\tdisplay = \"[[Tibetan Buddhism]]\",\n\ttopical_categories = {\"Buddhism\"},\n}\n\nlabels[\"\
      topology\"] = {\n\tdisplay = \"[[topology]]\",\n\ttopical_categories = {\"Topology\"},\n}\n\nlabels[\"tourism\"] = {\n\tdisplay = \"[[tourism]]\",\n\ttopical_categories = {\"Tourism\"},\n}\n\nlabels[\"toxicology\"] = {\n\tdisplay = \"[[toxicology]]\",\n\
      \ttopical_categories = {\"Toxicology\"},\n}\n\nlabels[\"trading\"] = {\n\tdisplay = \"[[trading#Noun|trading]]\",\n\ttopical_categories = {\"Trading\"},\n}\n\nlabels[\"trading cards\"] = {\n\tdisplay = \"[[trading card]]s\",\n\ttopical_categories = {\"\
      Trading cards\"},\n}\n\nlabels[\"traditional Chinese medicine\"] = {\n\tdisplay = \"[[traditional Chinese medicine]]\",\n\ttopical_categories = {\"Traditional Chinese medicine\"},\n}\naliases[\"TCM\"] = \"traditional Chinese medicine\"\naliases[\"Chinese\
      \ medicine\"] = \"traditional Chinese medicine\"\n\nlabels[\"transgender\"] = {\n\tdisplay = \"[[transgender]]\",\n\ttopical_categories = {\"Transgender\"},\n}\n\nlabels[\"translation studies\"] = {\n\tdisplay = \"[[translation studies]]\",\n\ttopical_categories\
      \ = {\"Translation studies\"},\n}\n\nlabels[\"transport\"] = {\n\tdisplay = \"[[transport]]\",\n\ttopical_categories = {\"Transport\"},\n}\naliases[\"transportation\"] = \"transport\"\n\nlabels[\"traumatology\"] = {\n\tdisplay = \"[[traumatology]]\",\n\
      \ttopical_categories = {\"Emergency medicine\"},\n}\n\nlabels[\"travel\"] = {\n\tdisplay = \"[[travel]]\",\n\ttopical_categories = {\"Travel\"},\n}\n\nlabels[\"trigonometry\"] = {\n\tdisplay = \"[[trigonometry]]\",\n\ttopical_categories = {\"Trigonometry\"\
      },\n}\n\nlabels[\"two-up\"] = {\n\tdisplay = \"[[two-up]]\",\n\ttopical_categories = {\"Two-up\"},\n}\n\nlabels[\"typography\"] = {\n\tdisplay = \"[[typography]]\",\n\ttopical_categories = {\"Typography\"},\n}\naliases[\"typesetting\"] = \"typography\"\
      \n\nlabels[\"ufology\"] = {\n\tdisplay = \"[[ufology]]\",\n\ttopical_categories = {\"Ufology\"},\n}\n\nlabels[\"underwater diving\"] = {\n\tdisplay = \"[[underwater]] [[diving#Noun|diving]]\",\n\ttopical_categories = {\"Underwater diving\"},\n}\naliases[\"\
      scuba\"] = \"underwater diving\"\naliases[\"scuba diving\"] = \"underwater diving\"\n\nlabels[\"Valentinianism\"] = {\n\tdisplay = \"[[w:Valentinianism|Valentinianism]]\",\n\ttopical_categories = {\"Valentinianism\"},\n}\naliases[\"valentinianism\"] =\
      \ \"Valentinianism\"\n\nlabels[\"vegetable\"] = {\n\tdisplay = \"[[vegetable]]\",\n\ttopical_categories = {\"Vegetables\"},\n}\naliases[\"vegetables\"] = \"vegetable\"\n\nlabels[\"vehicles\"] = {\n\tdisplay = \"[[vehicle]]s\",\n\ttopical_categories = {\"\
      Vehicles\"},\n}\naliases[\"vehicle\"] = \"vehicles\"\n\nlabels[\"veterinary medicine\"] = {\n\tdisplay = \"[[veterinary medicine]]\",\n\ttopical_categories = {\"Veterinary medicine\"},\n}\n\nlabels[\"video games\"] = {\n\tdisplay = \"[[video game]]s\"\
      ,\n\ttopical_categories = {\"Video games\"},\n}\naliases[\"video gaming\"] = \"video games\"\n\nlabels[\"virology\"] = {\n\tdisplay = \"[[virology]]\",\n\ttopical_categories = {\"Virology\"},\n}\n\nlabels[\"viticulture\"] = {\n\tdisplay = \"[[viticulture]]\"\
      ,\n\ttopical_categories = {\"Horticulture\", \"Wine\"},\n}\n\nlabels[\"volcanology\"] = {\n\tdisplay = \"[[volcanology]]\",\n\ttopical_categories = {\"Volcanology\"},\n}\naliases[\"vulcanology\"] = \"volcanology\"\n\nlabels[\"volleyball\"] = {\n\tdisplay\
      \ = \"[[volleyball]]\",\n\ttopical_categories = {\"Volleyball\"},\n}\n\nlabels[\"voodoo\"] = {\n\tdisplay = \"[[voodoo]]\",\n\ttopical_categories = {\"Voodoo\"},\n}\n\nlabels[\"weather\"] = {\n\ttopical_categories = {\"Weather\"},\n}\n\nlabels[\"weaving\"\
      ] = {\n\ttopical_categories = {\"Weaving\"},\n}\n\nlabels[\"web design\"] = {\n\ttopical_categories = {\"Web design\"},\n}\n\nlabels[\"web development\"] = {\n\ttopical_categories = {\"Programming\", \"Web design\"},\n}\n\nlabels[\"weightlifting\"] = {\n\
      \ttopical_categories = {\"Weightlifting\"},\n}\n\nlabels[\"white supremacist ideology\"] = { -- but also this is often used to indicate white-supremacist-used jargon; cf \"Nazism\"\n\tdisplay = \"[[w:White supremacy|white supremacist ideology]]\",\n\t\
      topical_categories = {\"White supremacist ideology\"},\n}\naliases[\"white nationalism\"] = \"white supremacist ideology\"\naliases[\"white nationalist\"] = \"white supremacist ideology\"\naliases[\"white power\"] = \"white supremacist ideology\"\naliases[\"\
      white racism\"] = \"white supremacist ideology\"\naliases[\"white supremacy\"] = \"white supremacist ideology\"\naliases[\"white supremacism\"] = \"white supremacist ideology\"\naliases[\"white supremacist\"] = \"white supremacist ideology\"\n\nlabels[\"\
      wine\"] = {\n\tdisplay = \"[[wine]]\",\n\ttopical_categories = {\"Wine\"},\n}\n\nlabels[\"woodworking\"] = {\n\ttopical_categories = {\"Woodworking\"},\n}\n\nlabels[\"wrestling\"] = {\n\ttopical_categories = {\"Wrestling\"},\n}\n\nlabels[\"writing\"] =\
      \ {\n\ttopical_categories = {\"Writing\"},\n}\n\nlabels[\"yoga\"] = {\n\ttopical_categories = {\"Yoga\"},\n}\n\nlabels[\"zoology\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Zoology\"},\n}\n\nlabels[\"zootomy\"] = {\n\tdisplay = \"[[zootomy]]\"\
      ,\n\ttopical_categories = {\"Animal body parts\"},\n}\n\nlabels[\"Zoroastrianism\"] = {\n\tdisplay = \"[[Zoroastrianism]]\",\n\ttopical_categories = {\"Zoroastrianism\"},\n}\n\n\n-- Labels with set-type categories\n\n-- TODO: These are probably misuses\
      \ of the label template, and should be deprecated\n\nlabels[\"amino acid\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Amino acids\"},\n}\n\nlabels[\"architectural element\"] = {\n\tdisplay = \"[[architecture]]\",\n\ttopical_categories\
      \ = {\"Architectural elements\"},\n}\naliases[\"architectural elements\"] = \"architectural element\"\n\nlabels[\"asterism\"] = {\n\tdisplay = \"[[uranography]]\",\n\ttopical_categories = {\"Asterisms\"},\n}\n\nlabels[\"biblical character\"] = {\n\tdisplay\
      \ = \"[[Bible|biblical]]\",\n\ttopical_categories = {\"Biblical characters\"},\n}\naliases[\"Biblical character\"] = \"biblical character\"\naliases[\"biblical figure\"] = \"biblical character\"\naliases[\"Biblical figure\"] = \"biblical character\"\n\n\
      labels[\"book of the bible\"] = {\n\tdisplay = \"[[Bible|biblical]]\",\n\ttopical_categories = {\"Books of the Bible\"},\n}\n\nlabels[\"canid\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Canids\"},\n}\n\nlabels[\"carbohydrate\"] = {\n\
      \tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Carbohydrates\"},\n}\n\nlabels[\"coenzyme\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Coenzymes\"},\n}\n\nlabels[\"constellation\"] = {\n\tdisplay = \"[[astronomy]]\"\
      ,\n\ttopical_categories = {\"Constellations\"},\n}\n\nlabels[\"cookware\"] = {\n\tdisplay = \"[[cooking#Noun|cooking]]\",\n\ttopical_categories = {\"Cookware and bakeware\"},\n}\n\nlabels[\"disease\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories\
      \ = {\"Diseases\"},\n}\naliases[\"diseases\"] = \"disease\"\n\nlabels[\"E number\"] = {\n\tdisplay = \"[[food]] [[manufacture]]\",\n\tplain_categories = {\"E numbers\"},\n}\n\nlabels[\"element symbol\"] = {\n\tdisplay = \"[[chemistry]]\",\n\tplain_categories\
      \ = {\"Symbols for chemical elements\"},\n}\n\nlabels[\"enzyme\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Enzymes\"},\n}\n\nlabels[\"fatty acid\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Fatty acids\"\
      },\n}\n\nlabels[\"felid\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Felids\"},\n}\naliases[\"cat\"] = \"felid\"\n\nlabels[\"fictional character\"] = {\n\tdisplay = \"[[fiction]]\",\n\ttopical_categories = {\"Fictional characters\"},\n\
      }\n\nlabels[\"figure of speech\"] = {\n\tdisplay = \"[[rhetoric]]\",\n\ttopical_categories = {\"Figures of speech\"},\n}\n\nlabels[\"fish\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Fish\"},\n}\n\nlabels[\"footwear\"] = {\n\tdisplay\
      \ = \"[[clothing#Noun|clothing]]\",\n\ttopical_categories = {\"Footwear\"},\n}\n\nlabels[\"functional group prefix\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Functional group prefixes\"},\n}\n\nlabels[\"functional group suffix\"\
      ] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Functional group suffixes\"},\n}\n\nlabels[\"galaxy\"] = {\n\tdisplay = \"[[astronomy]]\",\n\ttopical_categories = {\"Galaxies\"},\n}\n\nlabels[\"genetic disorder\"] = {\n\tdisplay\
      \ = \"[[medical]] [[genetics]]\",\n\ttopical_categories = {\"Genetic disorders\"},\n}\n\nlabels[\"Greek god\"] = {\n\tdisplay = \"[[Greek]] [[mythology]]\",\n\ttopical_categories = {\"Greek deities\"},\n}\n\nlabels[\"heraldic charge\"] = {\n\tdisplay =\
      \ \"[[heraldry]]\",\n\ttopical_categories = {\"Heraldic charges\"},\n}\naliases[\"heraldiccharge\"] = \"heraldic charge\"\n\nlabels[\"Hindu god\"] = {\n\tdisplay = \"[[Hinduism]]\",\n\ttopical_categories = {\"Hindu deities\"},\n}\n\nlabels[\"hormone\"\
      ] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Hormones\"},\n}\n\nlabels[\"hydrocarbon chain prefix\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Hydrocarbon chain prefixes\"},\n}\n\nlabels[\"hydrocarbon\
      \ chain suffix\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Hydrocarbon chain suffixes\"},\n}\n\nlabels[\"incoterm\"] = {\n\tdisplay = \"[[incoterm]]\",\n\ttopical_categories = {\"Incoterms\"},\n}\n\nlabels[\"inorganic compound\"\
      ] = {\n\tdisplay = \"[[inorganic chemistry]]\",\n\ttopical_categories = {\"Inorganic compounds\"},\n}\n\nlabels[\"isotope\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Isotopes\"},\n}\n\nlabels[\"landforms\"] = {\n\tdisplay = \"[[geography]]\"\
      ,\n\ttopical_categories = {\"Landforms\"},\n}\n\nlabels[\"logical fallacy\"] = {\n\tdisplay = \"[[rhetoric]]\",\n\ttopical_categories = {\"Logical fallacies\"},\n}\n\nlabels[\"lutherie\"] = {\n\tdisplay = \"[[lutherie]]\",\n\ttopical_categories = {\"Lutherie\"\
      },\n}\n\nlabels[\"Mesopotamian god\"] = {\n\tdisplay = \"[[Mesopotamian]] [[mythology]]\",\n\ttopical_categories = {\"Mesopotamian deities\"},\n}\n\nlabels[\"metamaterial\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Metamaterials\"},\n\
      }\n\nlabels[\"military ranks\"] = {\n\tdisplay = \"[[military]]\",\n\ttopical_categories = {\"Military ranks\"},\n}\naliases[\"military rank\"] = \"military ranks\"\n\nlabels[\"military unit\"] = {\n\tdisplay = \"[[military]]\",\n\ttopical_categories =\
      \ {\"Military units\"},\n}\n\nlabels[\"mineral\"] = {\n\tdisplay = \"[[mineralogy]]\",\n\ttopical_categories = {\"Minerals\"},\n}\n\nlabels[\"mobile phones\"] = {\n\tdisplay = \"[[mobile telephone|mobile telephony]]\",\n\ttopical_categories = {\"Mobile\
      \ phones\"},\n}\naliases[\"cell phone\"] = \"mobile phones\"\naliases[\"cell phones\"] = \"mobile phones\"\naliases[\"mobile phone\"] = \"mobile phones\"\naliases[\"mobile telephony\"] = \"mobile phones\"\n\nlabels[\"muscle\"] = {\n\tdisplay = \"[[anatomy]]\"\
      ,\n\ttopical_categories = {\"Muscles\"},\n}\n\nlabels[\"mushroom\"] = {\n\tdisplay = \"[[mycology]]\",\n\ttopical_categories = {\"Mushrooms\"},\n}\naliases[\"mushrooms\"] = \"mushroom\"\n\nlabels[\"musical instruments\"] = {\n\tdisplay = \"[[music]]\"\
      ,\n\ttopical_categories = {\"Musical instruments\"},\n}\naliases[\"musical instrument\"] = \"musical instruments\"\naliases[\"musici\"] = \"musical instruments\"\ndeprecated[\"musici\"] = true\n\nlabels[\"music genre\"] = {\n\tdisplay = \"[[music]]\",\n\
      \ttopical_categories = {\"Musical genres\"},\n}\n\nlabels[\"musician\"] = {\n\tdisplay = \"[[music]]\",\n\ttopical_categories = {\"Musicians\"},\n}\n\nlabels[\"mythological creature\"] = {\n\tdisplay = \"[[mythology]]\",\n\ttopical_categories = {\"Mythological\
      \ creatures\"},\n}\n\nlabels[\"neurotoxin\"] = {\n\tdisplay = \"[[neurotoxicology]]\",\n\ttopical_categories = {\"Neurotoxins\"},\n}\n\nlabels[\"neurotransmitter\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Neurotransmitters\"},\n\
      }\n\nlabels[\"organic compound\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Organic compounds\"},\n}\n\nlabels[\"part of speech\"] = {\n\tdisplay = \"[[grammar]]\",\n\ttopical_categories = {\"Parts of speech\"},\n}\n\nlabels[\"\
      particle\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Subatomic particles\"},\n}\n\nlabels[\"pharmaceutical drug\"] = {\n\tdisplay = \"[[pharmacology]]\",\n\ttopical_categories = {\"Pharmaceutical drugs\"},\n}\n\nlabels[\"plant\"] =\
      \ {\n\tdisplay = \"[[botany]]\",\n\ttopical_categories = {\"Plants\"},\n}\n\nlabels[\"plant disease\"] = {\n\tdisplay = \"[[phytopathology]]\",\n\ttopical_categories = {\"Plant diseases\"},\n}\n\nlabels[\"poison\"] = {\n\tdisplay = \"[[toxicology]]\",\n\
      \ttopical_categories = {\"Poisons\"},\n}\n\nlabels[\"political subdivision\"] = {\n\tdisplay = \"[[government]]\",\n\ttopical_categories = {\"Political subdivisions\"},\n}\n\nlabels[\"protein\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories\
      \ = {\"Proteins\"},\n}\naliases[\"proteins\"] = \"protein\"\n\nlabels[\"rock\"] = {\n\tdisplay = \"[[petrology]]\",\n\ttopical_categories = {\"Rocks\"},\n}\n\nlabels[\"Roman god\"] = {\n\tdisplay = \"[[Roman]] [[mythology]]\",\n\ttopical_categories = {\"\
      Roman deities\"},\n}\n\nlabels[\"schools\"] = {\n\tdisplay = \"[[education]]\",\n\ttopical_categories = {\"Schools\"},\n}\n\nlabels[\"skeleton\"] = {\n\tdisplay = \"[[anatomy]]\",\n\ttopical_categories = {\"Skeleton\"},\n}\n\nlabels[\"standard of identity\"\
      ] = {\n\tdisplay = \"[[standard of identity|standards of identity]]\",\n\ttopical_categories = {\"Standards of identity\"},\n}\n\nlabels[\"star\"] = {\n\tdisplay = \"[[astronomy]]\",\n\ttopical_categories = {\"Stars\"},\n}\n\nlabels[\"steroid\"] = {\n\t\
      display = \"[[biochemistry]]\",\n\ttopical_categories = {\"Steroids\"},\n}\n\nlabels[\"steroid hormone\"] = {\n\tdisplay = \"[[biochemistry]], [[steroids]]\",\n\ttopical_categories = {\"Hormones\"},\n}\naliases[\"steroid drug\"] = \"steroid hormone\"\n\
      \nlabels[\"surface feature\"] = {\n\tdisplay = \"[[planetology]]\",\n\ttopical_categories = {\"Planetary nomenclature\"},\n}\n\nlabels[\"symptom\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories = {\"Medical signs and symptoms\"},\n}\n\nlabels[\"\
      taxonomic name\"] = {\n\tdisplay = \"[[taxonomy]]\",\n\ttopical_categories = {\"Taxonomic names\"},\n}\n\nlabels[\"tincture\"] = {\n\tdisplay = \"[[heraldry]]\",\n\ttopical_categories = {\"Heraldic tinctures\"},\n}\n\nlabels[\"video game genre\"] = {\n\
      \tdisplay = \"[[video game]]s\",\n\ttopical_categories = {\"Video game genres\"},\n}\n\nlabels[\"vitamin\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Vitamins\"},\n}\n\nlabels[\"watercraft\"] = {\n\tdisplay = \"[[nautical]]\",\n\
      \ttopical_categories = {\"Watercraft\"},\n}\n\nlabels[\"weaponry\"] = {\n\tdisplay = \"[[weaponry]]\",\n\ttopical_categories = {\"Weapons\"},\n}\naliases[\"weapons\"] = \"weaponry\"\n\nlabels[\"Wiktionary and WMF jargon\"] = {\n\tdisplay = \"[[Wiktionary]]\
      \ and [[Appendix:Glossary#W|WMF]] [[jargon]]\",\n\ttopical_categories = {\"Wiki\"},\n}\naliases[\"WMF\"] = \"Wiktionary and WMF jargon\"\naliases[\"WMF jargon\"] = \"Wiktionary and WMF jargon\"\naliases[\"Wiktionary\"] = \"Wiktionary and WMF jargon\"\n\
      aliases[\"Wiktionary jargon\"] = \"Wiktionary and WMF jargon\"\n\nlabels[\"yoga pose\"] = {\n\tdisplay = \"[[yoga]]\",\n\ttopical_categories = {\"Yoga poses\"},\n}\naliases[\"asana\"] = \"yoga pose\"\n\nlabels[\"zodiac constellations\"] = {\n\tdisplay\
      \ = \"[[astronomy]]\",\n\ttopical_categories = {\"Constellations in the zodiac\"},\n}\n\nreturn {labels = labels, aliases = aliases, deprecated = deprecated}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:23.828Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Fsubvarieties&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54138 t=1555362503547832
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:23 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 503530981, 639550702, 699047346
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4977892\" pageid=\"4977892\" ns=\"828\" title=\"Module:labels/data/subvarieties\"><revisions><rev user=\"Лорд Алекс\" timestamp=\"2019-03-27T02:05:05Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\nlocal deprecated = {}\n\nlocal m_functions = require(\"Module:labels/data/functions\")\n\nlabels[\"Aeolic\"] = {\n\tWikipedia\
      \ = \"Aeolic Greek\",\n\tplain_categories = {\"Aeolic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Aeolic Greek\"] = \"Aeolic\"\n\nlabels[\"African American Vernacular English\"] = {\n\tdisplay = \"African American Vernacular\",\n\tWikipedia\
      \ = true,\n\tplain_categories = {\"African American Vernacular English\"},\n\tlanguage = \"en\",\n}\naliases[\"AAVE\"] = \"African American Vernacular English\"\naliases[\"ebonics\"] = \"African American Vernacular English\"\n\nlabels[\"Akhmimic\"] = {\n\
      \tWikipedia = \"Coptic language#Akhmimic\",\n\tplain_categories = {\"Akhmimic Coptic\"},\n\tlanguage = \"cop\",\n}\n\nlabels[\"Alsatian German\"] = {\n\tdisplay = \"Alsatian\",\n\tWikipedia = \"Alsatian dialect\",\n\tplain_categories = {\"Alsatian German\"\
      },\n\tlanguage = \"gsw\",\n}\naliases[\"Elsässisch\"] = \"Alsatian German\"\n\nlabels[\"American spelling\"] = {\n\tdisplay = \"American spelling\",\n\tWikipedia = \"American and British English spelling differences\",\n\tplain_categories = {\"American\
      \ English forms\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Anglo-Norman\"] = {\n\tWikipedia = \"Anglo-Norman language\",\n\tplain_categories = {\"Anglo-Norman Old French\"},\n\tlanguage = \"fro\",\n}\n\nlabels[\"Anglian\"] = {\n\tWikipedia = \"Anglian dialect\"\
      ,\n\tplain_categories = { \"Anglian Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Ararat\"] = {\n\tWikipedia = \"Araratian dialect\",\n\tplain_categories = {\"Ararat Armenian\"},\n\tlanguage = \"hy\",\n}\n\nlabels[\"Arbëresh\"] = {\n\tWikipedia\
      \ = \"Arbëresh\",\n\tplain_categories = {\"Arbëresh Albanian\"},\n\tlanguage = \"sq\",\n}\naliases[\"Arbëreshë\"] = \"Arbëresh\"\naliases[\"Arbërisht\"] = \"Arbëresh\"\n\nlabels[\"Arcadocypriot\"] = {\n\tWikipedia = \"Arcadocypriot Greek\",\n\tplain_categories\
      \ = {\"Arcadocypriot Ancient Greek\"},\n\tlanguage = \"grc\"\n}\naliases[\"Arcadocypriot Greek\"] = \"Arcadocypriot\"\n\nlabels[\"Arvanitika\"] = {\n\tWikipedia = \"Arvanitika\",\n\tplain_categories = {\"Arvanitika Albanian\"},\n\tlanguage = \"sq\",\n\
      }\n\nlabels[\"Attic\"] = {\n\tWikipedia = \"Attic Greek\",\n\tplain_categories = {\"Attic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Attic Greek\"] = \"Attic\"\n\nlabels[\"Old Attic\"] = {\n\tWikipedia = \"Attic Greek\",\n\tplain_categories\
      \ = {\"Attic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\n\nlabels[\"Old Hittite\"] = {\n\tWikipedia = true,\n\tlanguage = \"hit\",\n\tplain_categories = { \"Old Hittite\" },\n}\n\nlabels[\"Australian Aboriginal English\"] = {\n\tdisplay = \"Australian\
      \ Aboriginal\",\n\tWikipedia = true,\n\tplain_categories = {\"Australian Aboriginal English\"},\n\tlanguage = \"en\",\n}\naliases[\"Australian Aboriginal\"] = \"Australian Aboriginal English\"\n\nlabels[\"Australian English\"] = {\n\tdisplay = \"Australia\"\
      ,\n\tWikipedia = true,\n\tplain_categories = {\"Australian English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Balhae\"] = {\n\tplain_categories = {\"Balhae Old Korean\"},\n\tlanguage = \"oko\",\n}\n\nlabels[\"Balkar\"] = {\n\tplain_categories = {\"Balkar\"\
      },\n\tlanguage = \"krc\",\n}\n\nlabels[\"Batangas\"] = {\n\tdisplay = \"[[w:Batangas Tagalog|Batangas]]\",\n\tplain_categories = { \"Batangas Tagalog\" },\n\tlanguage = \"tl\",\n}\naliases[\"Batangas Tagalog\"] = \"Batangas\"\naliases[\"Batangueño\"] =\
      \ \"Batangas\"\n\n-- For Standard German as used in Bavaria\nlabels[\"Bavaria\"] = {\n\tWikipedia = \"Bavarian language#Use\",\n\tplain_categories = {\"Bavarian German\"},\n\tlanguage = \"de\",\n}\n\nlabels[\"Bavarian\"] = {\n\tWikipedia = \"Old High German\"\
      ,\n\tplain_categories = { \"Bavarian Old High German\" },\n\tlanguage = \"goh\",\n}\n\nlabels[\"Biblical Hebrew\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Biblical Hebrew\"},\n\tlanguage = \"he\",\n}\naliases[\"hbo\"] = \"Biblical Hebrew\"\n\
      aliases[\"Classical Hebrew\"] = \"Biblical Hebrew\"\naliases[\"Ancient Hebrew\"] = \"Biblical Hebrew\"\naliases[\"Old Hebrew\"] = \"Biblical Hebrew\"\n\nlabels[\"Birmingham\"] = {\n\tdisplay = \"[[wikipedia:Brummie|Birmingham]]\",\n\tplain_categories =\
      \ {\"Birmingham English\"},\n\tlanguage = \"en\",\n}\naliases[\"Brummie\"] = \"Birmingham\"\naliases[\"Brummy\"] = \"Birmingham\"\n\nlabels[\"Boeotian\"] = {\n\tWikipedia = \"Boeotian Greek\",\n\tplain_categories = {\"Boeotian Ancient Greek\"},\n\tlanguage\
      \ = \"grc\",\n}\naliases[\"Boeotian Greek\"] = \"Boeotian\"\n\nlabels[\"Bohairic\"] = {\n\tWikipedia = \"Coptic language#Bohairic\",\n\tplain_categories = {\"Bohairic Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Memphitic\"] = \"Bohairic\"\n\nlabels[\"\
      Bombay\"] = {\n\tWikipedia = \"Bombay Hindi\",\n\tplain_categories = {\"Bombay Hindi\"},\n\tlanguage = \"hi\",\n}\naliases[\"Bambaiyya\"] = \"Bombay\"\naliases[\"Mumbai\"] = \"Bombay\"\n\nlabels[\"Bokmål\"] = {\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Norwegian Bokmål\"},\n\tlanguage = \"nb\",\n}\n\nlabels[\"Border Scots\"] = {\n\tplain_categories = {\"Border Scots\"},\n\tlanguage = \"sco\",\n}\n\nlabels[\"Braj\"] = {\n    display = \"[[w:Braj Bhasha|Braj]]\",\n\tplain_categories = {\"Braj Bhā\
      ṣā\"},\n\tlanguage = \"hi\",\n}\n\nlabels[\"British English\"] = {\n\tdisplay = \"British\",\n\tWikipedia = true,\n\tplain_categories = {\"British English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"British spelling\"] = {\n\tdisplay = \"British spelling\"\
      ,\n\tWikipedia = \"American and British English spelling differences\",\n\tplain_categories = {\"British English forms\"},\n\tlanguage = \"en\",\n}\naliases[\"Commonwealth spelling\"] = \"British spelling\"\n\nlabels[\"Buddhist Hybrid Sanskrit\"] = {\n\
      \    display = \"Buddhist Hybrid Sanskrit\",\n\tWikipedia = true,\n    plain_categories = {\"Buddhist Hybrid Sanskrit\"},\n    language = \"sa\",\n}\naliases[\"BHS\"] = \"Buddhist Hybrid Sanskrit\"\n\nlabels[\"Byzantine\"] = {\n\tWikipedia = \"Medieval\
      \ Greek\",\n\tplain_categories = {\"Byzantine Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Byzantine Greek\"] = \"Byzantine\"\naliases[\"Medieval Greek\"] = \"Byzantine\"\n\nlabels[\"Bzyb\"] = {\n\tdisplay = \"[[w:Bzyb dialect|Bzyb]]\",\n\tplain_categories\
      \ = {\"Bzyb Abkhaz\"},\n\tlanguage = \"ab\",\n}\naliases[\"Bzyp\"] = \"Bzyb\"\n\nlabels[\"Canadian English\"] = {\n\tdisplay = \"Canada\",\n\tWikipedia = true,\n\tplain_categories = {\"Canadian English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Canadian\
      \ spelling\"] = {\n\tdisplay = \"Canadian\",\n\tWikipedia = true,\n\tplain_categories = {\"Canadian English forms\"},\n\tlanguage = \"en\",\n}\n\n-- Two instances of the language code \"yue\" being used with this label\nlabels[\"Cantonese\"] = {\n\tdisplay\
      \ = \"[[Cantonese]]\",\n\tplain_categories = {\"Cantonese Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Catholic\"] = {\n\tdisplay = \"[[w:Goan Catholics|Catholic]]\",\n\tplain_categories = {\"Catholic Konkani\"},\n\tlanguage = \"kok\"\n}\n\nlabels[\"\
      Central Standard\"] = {\n\tdiplay = \"Central Standard\",\n\tplain_categories = {\"Central Standard Assamese\"},\n\tlanguage = \"as\",\n}\n\nlabels[\"Chakavian\"] = {\n\tdisplay = \"[[Chakavian]]\",\n\tplain_categories = {\"Chakavian Serbo-Croatian\"},\n\
      \tlanguage = \"sh\",\n}\naliases[\"Čakavian\"] = \"Chakavian\"\n\nlabels[\"Cham Albanian\"] = {\n\tdisplay = \"Cham\",\n\tWikipedia = \"Cham Albanian dialect\",\n\tplain_categories = {\"Cham Albanian\"},\n\tlanguage = \"sq\",\n}\n\n--[=[ Currently empty:\n\
      labels[\"Chinglish\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Chinglish\"},\n\tlanguage = \"\",\n}\n]=]\n\nlabels[\"Clay Frisian\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Clay Frisian\"},\n\tlanguage = \"fy\",\n}\n\nlabels[\"Cockney\"\
      ] = {\n\tWikipedia = \"Cockney#Speech\",\n\tplain_categories = {\"Cockney English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Cois Fharraige\"] = {\n\tWikipedia = \"Gaeltacht Cois Fharraige\",\n\tplain_categories = {\"Connacht Irish\"},\n\tlanguage = \"ga\"\
      ,\n}\naliases[\"Cois Fhairrge\"] = \"Cois Fharraige\"\n\nlabels[\"Cretan\"] = {\n\tWikipedia = \"Cretan Greek\",\n\tplain_categories = {\"Cretan Greek\"},\n\tlanguage = \"el\",\n}\naliases[\"cretan\"] = \"Cretan\"\n\nlabels[\"Dari\"] = {\n\tdisplay = \"\
      Dari (Afghanistan)\",\n\tWikipedia = \"Dari (Persian)\",\n\tplain_categories = {\"Dari Persian\"},\n\tlanguage = \"fa\",\n}\n\nlabels[\"Datian Min\"] = {\n\tdisplay = \"Datian Min\",\n\tWikipedia = true,\n\tplain_categories = {\"Datian Min Chinese\"},\n\
      \tlanguage = \"zh\",\n}\n\nlabels[\"Daytshmerish\"] = {\n\tdisplay = \"[[דײַטשמעריש|Daytshmerish]]\",\n\tplain_categories = {\"Daytshmerish Yiddish\"},\n\tlanguage = \"yi\",\n}\naliases[\"daytshmerish\"] = \"Daytshmerish\"\n\nlabels[\"De'kwana\"] = {\n\
      \tdisplay = \"De'kwana dialect\",\n\tplain_categories = {\"De'kwana Maquiritari\"},\n\tlanguage = \"mch\",\n}\naliases[\"De'kwana dialect\"] = \"De'kwana\"\n\nlabels[\"Delhi-Meerut\"] = {\n\tWikipedia = \"Ashokan Edicts in Delhi#Delhi-Meerut pillar\",\n\
      \tdisplay = \"Delhi-Meerut\",\n\tplain_categories = {\"Delhi-Meerut Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\naliases[\"Meerut\"] = \"Delhi-Meerut\"\n\nlabels[\"Delhi-Topra\"] = {\n\tWikipedia = \"Ashokan Edicts in Delhi#Delhi-Topra pillar\",\n\
      \tdisplay = \"Delhi-Topra\",\n\tplain_categories = {\"Delhi-Topra Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\naliases[\"Topra\"] = \"Delhi-Topra\"\n\nlabels[\"Dhauli\"] = {\n\tWikipedia = true,\n\tdisplay = \"Dhauli\",\n\tplain_categories = {\"\
      Dhauli Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Digor\"] = {\n\tdisplay = \"Digor dialect\",\n\tplain_categories = {\"Digor Ossetian\"},\n\tlanguage = \"os\",\n}\naliases[\"Digor dialect\"] = \"Digor\"\n\nlabels[\"Doric\"] = {\n\t\
      Wikipedia = \"Doric Greek\",\n\tplain_categories = {\"Doric Ancient Greek\"},\n\tlanguage = \"grc\",\n}\n\nlabels[\"Drasi\"] = {\n\tWikipedia = \"Dras\",\n\tplain_categories = {\"Dras Shina\"},\n\tlanguage = \"scl\",\n}\n\nlabels[\"Early West Saxon\"]\
      \ = {\n\tdisplay = \"Early West Saxon\",\n\tWikipedia = true,\n\tplain_categories = {\"Early West Saxon Old English\"},\n\tlanguage = \"ang\",\n}\n\nlabels[\"Early Middle English\"] = {\n\tdisplay = \"Early Middle English\",\n\tWikipedia = \"Middle English#Early\
      \ Middle English\",\n\tplain_categories = {\"Early Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Early ME\"] = \"Early Middle English\"\naliases[\"Earlier ME\"] = \"Early Middle English\"\naliases[\"early ME\"] = \"Early Middle English\"\n\n\
      labels[\"East Anglian English\"] = {\n\tdisplay = \"East Anglia\",\n\tWikipedia = true,\n\tplain_categories = {\"East Anglian English\"},\n\tlanguage = \"en\",\n}\n\n-- for East Frisian dialectal German Low German, not the Frisianic language\nlabels[\"\
      East Frisian\"] = {\n\tWikipedia = \"East Frisian Low Saxon\",\n\tplain_categories = {\"East Frisian Low German\"},\n\tlanguage = \"nds-de\",\n}\n\nlabels[\"East Germanic\"] = {\n\tWikipedia = \"East Germanic languages\",\n\tplain_categories = {\"East\
      \ Proto-Germanic\"},\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"East Midland Middle English\"] = {\n\tdisplay = \"East Midlands\",\n\tplain_categories = {\"East Midland Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"East Midlands ME\"] = \"East\
      \ Midland Middle English\"\naliases[\"East Midland ME\"] = \"East Midland Middle English\"\n\nlabels[\"East Midlands English\"] = {\n\tdisplay = \"East Midlands\",\n\tWikipedia = true,\n\tplain_categories = {\"East Midlands English\"},\n\tlanguage = \"\
      en\",\n}\n\nlabels[\"East Palatine\"] = {\n\tdisplay = \"Vorderpfälzisch\",\n\tWikipedia = \"Palatine German language\",\n\tplain_categories = {\"East Palatine German\"},\n\tlanguage = \"\",\n}\naliases[\"Vorderpfälzisch\"] = \"East Palatine\"\n\nlabels[\"\
      Eastern Armenian\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Eastern Armenian\"},\n\tlanguage = \"hy\",\n}\n\nlabels[\"Eastern Catalan\"] = {\n\tWikipedia = \"Catalan dialects\",\n\tplain_categories = {\"Eastern Catalan\"},\n\tlanguage = \"ca\"\
      ,\n}\n\nlabels[\"Eastern Standard\"] = {\n\tdiplay = \"Eastern Standard\",\n\tplain_categories = {\"Eastern Standard Assamese\"},\n\tlanguage = \"as\",\n}\n\nlabels[\"Ecclesiastical Latin\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Ecclesiastical\
      \ Latin\"},\n\tlanguage = \"la\",\n}\naliases[\"Church Latin\"] = \"Ecclesiastical Latin\"\n\nlabels[\"Ekavian\"] = {\n\tdisplay = \"[[Ekavian]]\",\n}\n\nlabels[\"Epic\"] = {\n\tWikipedia = \"Homeric Greek\",\n\tplain_categories = {\"Epic Ancient Greek\"\
      },\n\tlanguage = \"grc\",\n}\naliases[\"Homeric\"] = \"Epic\"\naliases[\"Epic Greek\"] = \"Epic\"\naliases[\"Homeric Greek\"] = \"Homeric\"\n\nlabels[\"European French\"] = {\n\tdisplay = \"Europe\",\n\tWikipedia = true,\n\tplain_categories = {\"European\
      \ French\"},\n\tlanguage = \"fr\",\n}\n\nlabels[\"Fante\"] = {\n\tdisplay = \"[[w:Fante dialect|Fante]]\",\n\tplain_categories = {\"Fante Akan\"},\n\tlanguage = \"ak\",\n}\naliases[\"Fantse\"] = \"Fante\"\naliases[\"Fanti\"] = \"Fante\"\naliases[\"Mfantse\"\
      ] = \"Fante\"\n\nlabels[\"Fayyumic\"] = {\n\tWikipedia = \"Coptic language#Fayyumic\",\n\tplain_categories = {\"Fayyumic Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Faiyumic\"] = \"Fayyumic\"\naliases[\"Bashmuric\"] = \"Fayyumic\"\n\nlabels[\"East\
      \ and West Flanders\"] = {\n\tdisplay = \"[[w:East Flanders|East]] and [[w:West Flanders|West Flanders]]\",\n\tplain_categories = {\"East and West Flemish Dutch\"},\n\tlanguage = \"nl\",\n}\naliases[\"Flanders\"] = \"East and West Flanders\"\naliases[\"\
      Flemish\"] = \"East and West Flanders\"\n\nlabels[\"Gan\"] = {\n\tdisplay = \"[[Gan]]\",\n\tplain_categories = {\"Gan Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Geordie\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Geordie English\"},\n\t\
      language = \"en\",\n}\n\nlabels[\"Gheg\"] = {\n\tWikipedia = \"Gheg Albanian\",\n\tplain_categories = {\"Gheg Albanian\"},\n\tlanguage = \"sq\",\n}\n\nlabels[\"Gilgiti\"] = {\n\tWikipedia = \"Gilgit\",\n\tplain_categories = {\"Gilgit Shina\"},\n\tlanguage\
      \ = \"scl\",\n}\n\nlabels[\"Girnar\"] = {\n\tdisplay = \"Girnar\",\n\tWikipedia = true,\n\tplain_categories = {\"Girnar Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Gottscheerisch\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Gottscheerisch\
      \ German\"},\n\tlanguage = \"\",\n}\naliases[\"Gottscheerish\"] = \"Gottscheerisch\"\n\nlabels[\"Guardiol\"] = {\n\tWikipedia = \"Guardia Piemontese\",\n\tplain_categories = {\"Guardiol Occitan\"},\n\tlanguage = \"oc\",\n}\n\nlabels[\"Hainan Min\"] = {\n\
      \tdisplay = \"Hainan Min\",\n\tWikipedia = \"Hainanese\",\n\tplain_categories = {\"Hainan Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Hakka\"] = {\n\tdisplay = \"[[Hakka]]\",\n\tplain_categories = {\"Hakka Chinese\"},\n\tlanguage = \"zh\",\n}\n\
      \nlabels[\"Hamburgisch\"] = {\n\tWikipedia = \"Hamburgisch dialect\",\n\tplain_categories = {\"Hamburgisch Low German\"},\n\tlanguage = \"nds-de\",\n}\n\nlabels[\"Hamshen\"] = {\n\tWikipedia = \"Homshetsi dialect\",\n\tplain_categories = {\"Hamshen Armenian\"\
      },\n\tlanguage = \"hy\",\n}\naliases[\"Homshetsi\"] = \"Hamshen\"\naliases[\"Homshetsma\"] = \"Hamshen\"\n\nlabels[\"Hariyanvi\"] = {\n\tdisplay = \"Hariyāṇvī\",\n\tWikipedia = \"Hariyanvi language\",\n\tplain_categories = {\"Hariyāṇvī\"},\n\tlanguage\
      \ = \"hi\",\n}\naliases[\"Hariyana\"] = \"Hariyanvi\"\n\nlabels[\"Helsinki slang\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Helsinki slang\"},\n\tlanguage = \"fi\",\n}\n\nlabels[\"Hessian\"] = {\n\tWikipedia = \"Hessian dialects\",\n\tplain_categories\
      \ = {\"Hessian German\"},\n\tlanguage = \"de\",\n}\naliases[\"Hessisch\"] = \"Hessian\"\n\nlabels[\"Hong Kong Hakka\"] = {\n\tdisplay = \"Hong Kong [[Hakka]]\",\n\tplain_categories = {\"Hong Kong Hakka\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Huizhou\"\
      ] = {\n\tdisplay = \"[[Huizhou]]\",\n\tplain_categories = {\"Huizhou Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Hulu Pahang\"] = {\n\tplain_categories = {\"Hulu Pahang Malay\"},\n\tlanguage = \"ms\",\n}\n\nlabels[\"Ikavian\"] = {\n\tdisplay = \"\
      [[Ikavian]]\",\n\tplain_categories = {\"Ikavian Serbo-Croatian\"},\n\tlanguage = \"sh\",\n}\n\nlabels[\"Indian English\"] = {\n\tdisplay = \"India\",\n\tWikipedia = true,\n\tplain_categories = {\"Indian English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"\
      Ingilo\"] = {\n\tWikipedia = \"Ingiloy people\",\n\tplain_categories = {\"Ingilo Georgian\"},\n\tlanguage = \"ka\",\n}\naliases[\"Ingiloy\"] = \"Ingilo\"\naliases[\"Saingilo\"] = \"Ingilo\"\n\nlabels[\"Inner Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About\
      \ Mbugu|Ma'a]]\",\n\tplain_categories = {\"Inner Mbugu\"},\n\tlanguage = \"mhd\",\n}\naliases[\"inner Mbugu\"] = \"Inner Mbugu\"\n\nlabels[\"Inuktun\"] = {\n\tplain_categories = {\"Inuktun Inuktitut\"},\n\tlanguage = \"iu\",\n}\naliases[\"Polar Eskimo\"\
      ] = \"Inuktun\"\n\nlabels[\"Inuttut\"] = {\n\tplain_categories = {\"Inuttut Inuktitut\"},\n\tlanguage = \"iu\",\n}\naliases[\"Nunatsiavummiutut\"] = \"Inuttut\"\naliases[\"Labradorimiutut\"] = \"Inuttut\"\n\nlabels[\"Ionic\"] = {\n\tWikipedia = \"Ionic\
      \ Greek\",\n\tplain_categories = {\"Ionic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Ionic Greek\"] = \"Ionic\"\n\nlabels[\"Irish English\"] = {\n\tdisplay = \"Ireland\",\n\tWikipedia = true,\n\tplain_categories = {\"Irish English\"},\n\tlanguage\
      \ = \"en\",\n}\n\nlabels[\"Iron\"] = {\n\tdisplay = \"Iron dialect\",\n\tplain_categories = {\"Iron Ossetian\"},\n\tlanguage = \"os\",\n}\naliases[\"Iron dialect\"] = \"Iron\"\n\nlabels[\"Itivimuit\"] = {\n\tplain_categories = {\"Itivimuit Inuktitut\"\
      },\n\tlanguage = \"iu\",\n}\n\nlabels[\"Ivory Coast French\"] = {\n\tdisplay = \"Ivory Coast\",\n\tWikipedia = \"African French#Abidjan French vocabulary\",\n\tplain_categories = {\"Ivorian French\"},\n\tlanguage = \"fr\",\n}\naliases[\"Ivory Coast\"]\
      \ = \"Ivory Coast French\"\naliases[\"Côte d’Ivoire\"] = \"Ivory Coast French\"\naliases[\"Côte d'Ivoire\"] = \"Ivory Coast French\"\naliases[\"Ivorian\"] = \"Ivory Coast French\"\n\nlabels[\"Ivory Coast French slang\"] = {\n\tdisplay = \"Ivory Coast slang\"\
      ,\n\tWikipedia = \"fr:Nouchi\",\n\tplain_categories = {\"Ivorian French\"},\n\tlanguage = \"fr\",\n}\naliases[\"nouchi\"] = \"Ivory Coast French slang\"\naliases[\"Nouchi\"] = \"Ivory Coast French slang\"\naliases[\"noussi\"] = \"Ivory Coast French slang\"\
      \naliases[\"Noussi\"] = \"Ivory Coast French slang\"\naliases[\"Ivory Coast slang\"] = \"Ivory Coast French slang\"\naliases[\"Côte d’Ivoire slang\"] = \"Ivory Coast French slang\"\naliases[\"Côte d'Ivoire slang\"] = \"Ivory Coast French slang\"\naliases[\"\
      Ivorian slang\"] = \"Ivory Coast French slang\"\n\nlabels[\"Jamaican English\"] = {\n\tdisplay = \"Jamaican\",\n\tWikipedia = true,\n\tplain_categories = {\"Jamaican English\"},\n\tlanguage = \"en\",\n}\naliases[\"Jamaican Standard English\"] = \"Jamaican\
      \ English\"\n\nlabels[\"Jaugada\"] = {\n\tdisplay = \"Jaugada\",\n\tWikipedia = true,\n\tplain_categories = {\"Jaugada Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Jewish Babylonian Aramaic\"] = {\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Jewish Babylonian Aramaic\"},\n\tlanguage = \"arc\",\n}\naliases[\"JBA\"] = \"Jewish Babylonian Aramaic\"\naliases[\"Talmudic Aramaic\"] = \"Jewish Babylonian Aramaic\"\naliases[\"Babylonian Talmudic Aramaic\"] = \"Jewish Babylonian Aramaic\"\n\n\
      labels[\"Kajkavian\"] = {\n\tdisplay = \"[[Kajkavian]]\",\n\tplain_categories = {\"Kajkavian Serbo-Croatian\"},\n\tlanguage = \"sh\",\n}\n\nlabels[\"Karabakh\"] = {\n\tWikipedia = \"Karabakh dialect (Armenian)\",\n\tplain_categories = {\"Karabakh Armenian\"\
      },\n\tlanguage = \"hy\",\n}\naliases[\"Gharabagh\"] = \"Karabakh\"\naliases[\"Artsakh\"] = \"Karabakh\"\n\nlabels[\"Kalsi\"] = {\n\tdisplay = \"Kalsi\",\n\tplain_categories = {\"Kalsi Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Kamrupi\"\
      ] = {\n\tdisplay = \"[[w:Kamprui dialect|Kamrupi]]\",\n\tplain_categories = { \"Kamrupi Assamese\" },\n\tlanguage = \"as\",\n}\naliases[\"Kamruipa\"] = \"Kamrupi\"\naliases[\"Kamrupiya\"] = \"Kamrupi\"\naliases[\"Kamrup\"] = \"Kamrupi\"\n\nlabels[\"Kansai\"\
      ] = {\n\tWikipedia = \"Kansai dialect\",\n\tplain_categories = {\"Kansai Japanese\"},\n\tlanguage = \"ja\",\n}\n\nlabels[\"Karachay\"] = {\n\tplain_categories = {\"Karachay\"},\n\tlanguage = \"krc\",\n}\n\nlabels[\"Katharevousa\"] = {\n\tdisplay = \"[[Katharevousa#English|Katharevousa]]\"\
      ,\n\tplain_categories = { \"Katharevousa\" },\n\tlanguage = \"el\",\n}\n\n--[=[\ncategory has been deleted\nlabels[\"Kichwa\"] = {\n\tdisplay = \"Standard Ecuadorian Kichwa\",\n\tWikipedia = \"Kichwa language\",\n\tplain_categories = {\"Standard Kichwa\"\
      },\n\tlanguage = \"\",\n}\n]=]\n\n--[[\tThis will conflict with a Kentish dialect label for Modern English,\n\t\tif someone wants to make one. ]]\nlabels[\"Kentish\"] = {\n\tWikipedia = \"Kentish dialect (Old English)\",\n\tplain_categories = { \"Kentish\
      \ Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Koine\"] = {\n\tdisplay = \"Koine\",\n\tWikipedia = \"Koine Greek\",\n\tplain_categories = {\"Koine Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Koine Greek\"] = \"Koine\"\naliases[\"Hellenistic\"\
      ] = \"Koine\"\naliases[\"Hellenistic Koine\"] = \"Koine\"\n\nlabels[\"Kölsch\"] = {\n\tWikipedia = \"Colognian language\",\n\tplain_categories = {\"Kölsch Central Franconian\"},\n\tlanguage = \"gmw-cfr\",\n}\naliases[\"Colognian\"] = \"Kölsch\"\naliases[\"\
      Cologne\"] = \"Kölsch\"\naliases[\"Köln\"] = \"Kölsch\"\n\nlabels[\"Kromanti\"] = {\n\tdisplay = \"Kromanti spirit possession language\",\n\tWikipedia = \"Jamaican Maroon spirit-possession language\",\n\tplain_categories = {\"Kromanti Akan\"},\n\tlanguage\
      \ = \"ak\",\n}\n\nlabels[\"Late Latin\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Late Latin\"},\n\tlanguage = \"la\",\n}\n\nlabels[\"Latin America\"] = {\n\tplain_categories = {\"Latin American Spanish\"},\n\tlanguage = \"es\",\n}\naliases[\"\
      Latin American Spanish\"] = \"Latin America\"\n\nlabels[\"Late West Saxon\"] = {\n\tWikipedia = \"Late West Saxon\",\n\tplain_categories = { \"Late West Saxon Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Late Middle English\"] = {\n\tdisplay\
      \ = \"Late Middle English\",\n\tWikipedia = \"Middle English#Late Middle English\",\n\tplain_categories = {\"Late Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Late ME\"] = \"Late Middle English\"\naliases[\"Later ME\"] = \"Late Middle English\"\
      \naliases[\"late ME\"] = \"Late Middle English\"\n\nlabels[\"Leizhou Min\"] = {\n\tdisplay = \"Leizhou Min\",\n\tWikipedia = true,\n\tplain_categories = {\"Leizhou Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Lorraine Franconian\"] = {\n\tdisplay\
      \ = \"[[w:Lorraine Franconian|Lorraine Franconian]]\",\n\tWikipedia = true,\n\tplain_categories = {\"Lorraine Franconian\"},\n\tlanguage = \"\",\n}\naliases[\"Lorrainian\"] = \"Lorraine Franconian\"\naliases[\"Lothringian\"] = \"Lorraine Franconian\"\n\
      aliases[\"Lothringisch\"] = \"Lorraine Franconian\"\n\n\nlabels[\"Louisiana French\"] = {\n\tdisplay = \"Louisiana\",\n\tWikipedia = \"Cajun French\",\n\tplain_categories = {\"Louisiana French\"},\n\tlanguage = \"fr\",\n}\n\nlabels[\"Low Prussian\"] =\
      \ {\n\tWikipedia = \"Low Prussian dialect\",\n\tplain_categories = {\"Low Prussian German Low German\"},\n\tlanguage = \"nds-de\",\n}\n\nlabels[\"Lowlands Scots\"] = {\n\tplain_categories = {\"Lowlands Scots\"},\n\tlanguage = \"sco\",\n}\n\nlabels[\"Lycopolitan\"\
      ] = {\n\tWikipedia = \"Coptic language#Lycopolitan\",\n\tplain_categories = {\"Lycopolitan Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Subakhmimic\"] = \"Lycopolitan\"\naliases[\"Assiutic\"] = \"Lycopolitan\"\n\nlabels[\"Maastrichtian\"] = {\n\tWikipedia\
      \ = \"Maastrichtian dialect\",\n\tplain_categories = {\"Maastrichtian Limburgish\"},\n\tlanguage = \"li\",\n}\n\nlabels[\"Mandarin\"] = {\n\tdisplay = \"[[Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"\
      Maniot\"] = {\n\tdisplay = \"Maniot dialect\",\n\tWikipedia = \"Maniot dialect\",\n\tplain_categories = {\"Maniot Greek\"},\n\tlanguage = \"el\",\n}\naliases['maniot'] = \"Maniot\"\n\nlabels[\"Mansehra\"] = {\n\tdisplay = \"Mansehra\",\n\tWikipedia = true,\n\
      \tplain_categories = {\"Mansehra Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Mecklenburgisch Low German\"] = {\n\tdisplay = \"Mecklenburgisch\",\n\tWikipedia = \"Mecklenburgisch dialect\",\n\tplain_categories = {\"Mecklenburgisch Low\
      \ German\"},\n\tlanguage = \"nds-de\",\n}\naliases[\"Mecklenburgisch\"] = \"Mecklenburgisch Low German\"\naliases[\"Mecklenburg\"] = \"Mecklenburgisch Low German\"\n\nlabels[\"Medieval Hebrew\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Medieval\
      \ Hebrew\"},\n\tlanguage = \"he\",\n}\n\nlabels[\"Medieval Latin\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Medieval Latin\"},\n\tlanguage = \"la\",\n}\n\nlabels[\"Megarian\"] = {\n\tWikipedia = \"Doric Greek\",\n\tplain_categories = {\"Doric\
      \ Ancient Greek\"},\n\tlanguage = \"grc\",\n}\n\nlabels[\"Mercian\"] = {\n\tWikipedia = \"Mercian dialect\",\n\tplain_categories = { \"Mercian Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Middle Hittite\"] = {\n\tWikipedia = true,\n\tlanguage\
      \ = \"hit\",\n\tplain_categories = { \"Middle Hittite\" },\n}\n\nlabels[\"Midlands English\"] = {\n\tdisplay = \"Midlands\",\n\tWikipedia = true,\n\tplain_categories = {\"Midlands English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Min\"] = {\n\tdisplay =\
      \ \"[[Min]]\",\n\tplain_categories = {\"Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Bei\"] = {\n\tdisplay = \"[[Min Bei]]\",\n\tplain_categories = {\"Min Bei Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Dong\"] = {\n\tdisplay = \"\
      [[Min Dong]]\",\n\tplain_categories = {\"Min Dong Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Nan\"] = {\n\tdisplay = \"[[Min Nan]]\",\n\tplain_categories = {\"Min Nan Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Zhong\"] = {\n\tdisplay\
      \ = \"[[Min Zhong]]\",\n\tplain_categories = {\"Min Zhong Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Mishnaic Hebrew\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Mishnaic Hebrew\"},\n\tlanguage = \"he\",\n}\naliases[\"Mishnaic\"] = \"Mishnaic\
      \ Hebrew\"\n\nlabels[\"Mistralian\"] = {\n\tWikipedia = \"Occitan language#Writing system\",\n\tplain_categories = {\"Mistralian Occitan\"},\n\tlanguage = \"oc\",\n}\n\nlabels[\"Mooring\"] = {\n\tWikipedia = \"Mooring (North Frisian dialect)\",\n\tplain_categories\
      \ = {\"Mooring North Frisian\"},\n\tlanguage = \"frr\",\n}\naliases[\"Mooring dialect\"] = \"Mooring\"\n\nlabels[\"Moselle Franconian\"] = {\n\tWikipedia = \"Moselle Franconian dialects\",\n\tplain_categories = {\"Moselle Central Franconian\"},\n\tlanguage\
      \ = \"gmw-cfr\",\n}\naliases[\"Moselfränkisch\"] = \"Moselle Franconian\"\n\nlabels[\"Multicultural London English\"] = {\n\tdisplay = \"MLE\",\n\tWikipedia = true,\n\tplain_categories = {\"Multicultural London English\"},\n\tlanguage = \"en\",\n}\naliases[\"\
      MLE\"] = \"Multicultural London English\"\n\nlabels[\"New Hittite\"] = {\n\tWikipedia = true,\n\tlanguage = \"hit\",\n\tplain_categories = { \"New Hittite\" },\n}\naliases[\"Neo-Hittite\"] = \"New Hittite\"\n\nlabels[\"New Latin\"] = {\n\tWikipedia = true,\n\
      \tplain_categories = {\"New Latin\"},\n\tlanguage = \"la\",\n}\n\nlabels[\"New Sanskrit\"] = {\n\tWikipedia = \"Sanskrit Revival\",\n\tplain_categories = {\"New Sanskrit\"},\n\tlanguage = \"sa\",\n}\naliases[\"Neo-Sanskrit\"] = \"New Sanskrit\"\n\nlabels[\"\
      New Zealand English\"] = {\n\tdisplay = \"New Zealand\",\n\tWikipedia = true,\n\tplain_categories = {\"New Zealand English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Non-Oxford British spelling\"] = {\n\tdisplay = \"Non-[[w:Oxford spelling|Oxford]] [[British\
      \ English]]\",\n\tplain_categories = {\"British English forms\"},\n\tlanguage = \"en\",\n}\naliases[\"non-Oxford British spelling\"] = \"Non-Oxford British spelling\"\naliases[\"Non-Oxford\"] = \"Non-Oxford British spelling\"\naliases[\"non-Oxford\"] =\
      \ \"Non-Oxford British spelling\"\n\nlabels[\"Normal Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About Mbugu|Mbugu]]\",\n\tplain_categories = {\"Normal Mbugu\"},\n\tlanguage = \"mhd\",\n}\naliases[\"normal Mbugu\"] = \"Normal Mbugu\"\n\nlabels[\"North Germanic\"\
      ] = {\n\tWikipedia = \"North Germanic languages\",\n\tplain_categories = {\"North Proto-Germanic\"},\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"Northern Dutch\"] = {\n\tdisplay = \"Northern\",\n\tWikipedia = \"Dutch dialects\",\n\tplain_categories = {\"\
      Northern Dutch\"},\n\tlanguage = \"nl\",\n}\n\nlabels[\"Northern England English\"] = {\n\tdisplay = \"Northern England\",\n\tWikipedia = true,\n\tplain_categories = {\"Northern England English\"},\n\tlanguage = \"en\",\n}\naliases[\"Northern English dialect\"\
      ] = \"Northern England English\"\naliases[\"northern English\"] = \"Northern England English\"\naliases[\"North English\"] = \"Northern England English\"\naliases[\"north English\"] = \"Northern England English\"\n\nlabels[\"Northern Middle English\"]\
      \ = {\n\tdisplay = \"Northern\",\n\tplain_categories = {\"Northern Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Northern ME\"] = \"Northern Middle English\"\naliases[\"North ME\"] = \"Northern Middle English\"\n\nlabels[\"Northern Finnic\"]\
      \ = {\n\tplain_categories = {\"Northern Proto-Finnic\"},\n\tlanguage = \"fiu-fin-pro\",\n}\n\nlabels[\"Northern German\"] = {\n\tplain_categories = {\"Northern German\"},\n\tlanguage = \"de\",\n}\naliases[\"northern German\"] = \"Northern German\"\naliases[\"\
      North German\"] = \"Northern German\"\naliases[\"north German\"] = \"Northern German\"\n\nlabels[\"Northumbrian\"] = {\n\tWikipedia = \"Northumbrian dialect\",\n\tplain_categories = { \"Northumbrian Old English\", \"Anglian Old English\" },\n\tlanguage\
      \ = \"ang\",\n}\n\nlabels[\"Northwest Germanic\"] = {\n\tWikipedia = \"Northwest Germanic languages\",\n\tplain_categories = {\"Northwest Proto-Germanic\"},\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"Nunavik\"] = {\n\tWikipedia = \"Inuktitut#Nunavik\",\n\
      \tplain_categories = {\"Nunavik Inuktitut\"},\n\tlanguage = \"iu\",\n}\naliases[\"Nunavimmiutitut\"] = \"Nunavik\"\naliases[\"Inuttitut\"] = \"Nunavik\"\n\nlabels[\"Nynorsk\"] = {\n\tdisplay = \"Nynorsk\",\n\tplain_categories = {\"Norwegian Nynorsk\"},\n\
      \tlanguage = \"nn\",\n}\n\nlabels[\"Old\"] = {\n    display = \"[[w:Old Avestan|Old Avestan]]\",\n    language = \"ae\",\n    track = true,\n}\naliases[\"Old Avestan\"] = \"Old\"\n\nlabels[\"Old East Norse\"] = {\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Old East Norse\"},\n\tlanguage = \"non\",\n}\naliases[\"East Norse\"] = \"Old East Norse\"\n\nlabels[\"Old Gutnish\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Old Gutnish Norse\"},\n\tlanguage = \"non\",\n}\naliases[\"Old Gotlandic\"] =\
      \ \"Old Gutnish\"\n\nlabels[\"Old West Norse\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Old West Norse\"},\n\tlanguage = \"non\",\n}\naliases[\"West Norse\"] = \"Old West Norse\"\n\nlabels[\"Ormulum\"] = {\n\tWikipedia = \"Ormulum\",\n\tplain_categories\
      \ = {\"Middle English terms unique to the Ormulum\"},\n\tlanguage = \"enm\",\n}\n\nlabels[\"Oxford British spelling\"] = {\n\tdisplay = \"[[w:Oxford spelling|Oxford]] [[British English]]\",\n\tplain_categories = {\"Oxford spellings\"},\n\tlanguage = \"\
      en\",\n}\naliases[\"Oxford\"] = \"Oxford British spelling\"\n\nlabels[\"Oxyrhynchite\"] = {\n\tWikipedia = \"Coptic language#Oxyrhynchite\",\n\tplain_categories = {\"Oxyrhynchite Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Mesokemic\"] = \"Oxyrhynchite\"\
      \n\nlabels[\"Palatine German\"] = {\n\tdisplay = \"Palatine\",\n\tWikipedia = \"Palatine German language\",\n\tplain_categories = {\"Palatine German\"},\n\tlanguage = \"gmw-rfr\",\n}\naliases[\"Palatinate German\"] = \"Palatine German\"\naliases[\"Pälzisch\"\
      ] = \"Palatine German\"\naliases[\"Pfälzisch\"] = \"Palatine German\"\n\nlabels[\"Pennsylvania Dutch English\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Pennsylvania Dutch English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Pinghua\"] = {\n\tdisplay\
      \ = \"Pinghua\",\n\tWikipedia = true,\n\tplain_categories = {\"Pinghua Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Pomeranian Low German\"] = {\n\tdisplay = \"Pomeranian\",\n\tWikipedia = true,\n\tplain_categories = {\"Pomeranian Low German\"},\n\t\
      language = \"nds-de\",\n}\naliases[\"Pomeranian LG\"] = \"Pomeranian Low German\"\n\nlabels[\"Potteries\"] = {\n\tWikipedia = \"Potteries dialect\",\n\tplain_categories = {\"Potteries English\"},\n\tlanguage = \"en\",\n}\naliases[\"Potteries dialect\"\
      ] = \"Potteries\"\n\nlabels[\"Puter\"] = {\n\tWikipedia = \"Putèr\",\n\tplain_categories = {\"Puter Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Ripuarian\"] = {\n\tWikipedia = \"Ripuarian language\",\n\tplain_categories = {\"Ripuarian Central Franconian\"\
      },\n\tlanguage = \"gmw-cfr\",\n}\naliases[\"Ripuarian Franconian\"] = \"Ripuarian\"\naliases[\"Ripuarisch\"] = \"Ripuarian\"\n\n--[[\nThis category has been deleted.\nlabels[\"Royal Thai\"] = {\n\tdisplay = \"royal\",\n\tplain_categories = {\"Thai royal\
      \ vocabulary\"},\n\tlanguage = \"\",\n}\n]]\n\nlabels[\"Rumantsch Grischun\"] = {\n\tWikipedia = true,\n\tlanguage = \"rm\",\n}\n\nlabels[\"Saarlandic\"] = {\n\tdisplay = \"Saarland\",\n\tWikipedia = \"Saarland\",\n\tplain_categories = {\"Saarland German\"\
      },\n\tlanguage = \"\",\n}\naliases[\"Saarländisch\"] = \"Saarlandic\"\naliases[\"Saarlandish\"] = \"Saarlandic\"\n\nlabels[\"Sahidic\"] = {\n\tWikipedia = \"Coptic language#Sahidic\",\n\tplain_categories = {\"Sahidic Coptic\"},\n\tlanguage = \"cop\",\n\
      }\naliases[\"Thebaic\"] = \"Sahidic\"\n\nlabels[\"Scottish English\"] = {\n\tdisplay = \"Scotland\",\n\tWikipedia = true,\n\tplain_categories = {\"Scottish English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Shahbazgarhi\"] = {\n\tdisplay = \"Shahbazgarhi\"\
      ,\n\tWikipedia = \"Shahbaz Garhi\",\n\tplain_categories = {\"Shahbazgarhi Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Shapsug\"] = {\n\tdisplay = \"Shapsug dialect\",\n\tWikipedia = \"Shapsug Adyghe dialect\",\n\tplain_categories = {\"\
      Shapsug Adyghe\"},\n\tlanguage = \"ady\",\n}\n\nlabels[\"Shopski\"] = {\n\tWikipedia = \"Shopi#Dialects\",\n\tplain_categories = {\"Shopski Bulgarian\"},\n\tlanguage = \"bg\",\n}\n\nlabels[\"Silla\"] = {\n\tplain_categories = {\"Silla Old Korean\"},\n\t\
      language = \"oko\",\n}\n\nlabels[\"Sistani\"] = {\n\tWikipedia = \"Sistani dialect\",\n\tplain_categories = {\"Sistani Persian\"},\n\tlanguage = \"fa\",\n}\n\nlabels[\"Siyi\"] = {\n\tWikipedia = \"Siyi Yue\",\n\tlanguage = \"zh\",\n}\n\nlabels[\"Skiri\
      \ Pawnee\"] = {\n\tplain_categories = {\"Skiri Pawnee\"},\n\tlanguage = \"paw\",\n}\n\nlabels[\"Sopara\"] = {\n\tdisplay = \"Sopara\",\n\tWikipedia = true,\n\tplain_categories = {\"Sopara Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"South\
      \ African English\"] = {\n\tdisplay = \"South Africa\",\n\tWikipedia = true,\n\tplain_categories = {\"South African English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"South Scots\"] = {\n\tWikipedia = \"Southern Scots\",\n\tplain_categories = {\"South Scots\"\
      },\n\tlanguage = \"sco\",\n}\n\nlabels[\"Southern Dutch\"] = {\n\tdisplay = \"Southern\",\n\tWikipedia = \"Dutch dialects\",\n\tplain_categories = {\"Southern Dutch\"},\n\tlanguage = \"nl\",\n}\n\nlabels[\"Southern England English\"] = {\n\tdisplay = \"\
      Southern England\",\n\tWikipedia = \"English in southern England\",\n\tplain_categories = {\"Southern England English\"},\n\tlanguage = \"en\",\n}\naliases[\"Southern English\"] = \"Southern England English\"\naliases[\"Southern English dialect\"] = \"\
      Southern England English\"\n\nlabels[\"Southern German\"] = {\n\tplain_categories = {\"Southern German\"},\n\tlanguage = \"\",\n}\naliases[\"southern German\"] = \"Southern German\"\naliases[\"South German\"] = \"Southern German\"\naliases[\"south German\"\
      ] = \"Southern German\"\n\nlabels[\"Southern Middle English\"] = {\n\tdisplay = \"Southern\",\n\tplain_categories = {\"Southern Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Southern ME\"] = \"Southern Middle English\"\naliases[\"South ME\"]\
      \ = \"Southern Middle English\"\naliases[\"Southwest ME\"] = \"Southern Middle English\"\n\nlabels[\"Southern US English\"] = {\n\tdisplay = \"Southern US\",\n\tWikipedia = \"Southern American English\",\n\tplain_categories = {\"Southern US English\"},\n\
      \tlanguage = \"en\",\n}\naliases[\"Southern American English\"] = \"Southern US English\"\n\nlabels[\"Surmiran\"] = {\n\tWikipedia = \"Surmiran dialect\",\n\tplain_categories = {\"Surmiran Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Sursilvan\"]\
      \ = {\n\tWikipedia = \"Sursilvan dialects (Romansh)\",\n\tplain_categories = {\"Sursilvan Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Sussex\"] = {\n\tWikipedia = \"Sussex dialect\",\n\tplain_categories = {\"Sussex English\"},\n\tlanguage = \"en\"\
      ,\n}\n\nlabels[\"Sutsilvan\"] = {\n\tWikipedia = \"Sutsilvan dialects (Romansh)\",\n\tplain_categories = {\"Sutsilvan Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Swiss German\"] = {\n\tdisplay = \"Switzerland\",\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Switzerland German\"},\n\tlanguage = \"de\",\n}\n\nlabels[\"Switzerland and Liechtenstein spelling\"] = {\n\tdisplay = \"[[Switzerland]] and [[Liechtenstein]]\",\n\tplain_categories = {\"Switzerland and Liechtenstein German forms\"},\n\tlanguage\
      \ = \"de\",\n}\naliases[\"SLDE\"] = \"Switzerland and Liechtenstein spelling\"\n\nlabels[\"Taishanese\"] = {\n\tdisplay = \"[[Taishanese]]\",\n\tplain_categories = {\"Taishanese Chinese\"},\n\tlanguage = \"zh\",\n}\naliases[\"Toishanese\"] = \"Taishanese\"\
      \naliases[\"Hoisanese\"] = \"Taishanese\"\n\nlabels[\"Taiwanese Hakka\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Taiwanese Hakka\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwan Hakka\"] = \"Taiwanese Hakka\"\n\nlabels[\"Taiwanese Mandarin\"] =\
      \ {\n\tWikipedia = true,\n\tplain_categories = {\"Taiwanese Mandarin\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwan Mandarin\"] = \"Taiwanese Mandarin\"\n\nlabels[\"Taiwanese Hokkien\"] = {\n\tWikipedia = \"Taiwanese Hokkien\",\n\tplain_categories = {\"\
      Taiwanese Min Nan\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwanese Min Nan\"] = \"Taiwanese Hokkien\"\naliases[\"Taiwan Hokkien\"] = \"Taiwanese Hokkien\"\naliases[\"Taiwan Min Nan\"] = \"Taiwanese Hokkien\"\n\nlabels[\"Taiwanese Hokkien and Hakka\"]\
      \ = {\n\tdisplay = \"[[w:Taiwanese Hokkien|Taiwanese Hokkien]] and [[w:Taiwanese Hakka|Hakka]]\",\n\tplain_categories = {\"Taiwanese Min Nan\", \"Taiwanese Hakka\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwanese Min Nan and Hakka\"] = \"Taiwanese Hokkien\
      \ and Hakka\"\naliases[\"Taiwanese Hakka and Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Hakka and Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Min Nan &amp; Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"\
      Taiwanese Hokkien &amp; Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Hakka &amp; Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Hakka &amp; Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hokkien and\
      \ Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka and Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka and Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Min Nan &amp; Hakka\"] = \"Taiwanese Hokkien\
      \ and Hakka\"\naliases[\"Taiwan Hokkien &amp; Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka &amp; Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka &amp; Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\n\nlabels[\"\
      Teochew\"] = {\n\tdisplay = \"[[Teochew]]\",\n\tplain_categories = {\"Teochew Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Tosk\"] = {\n\tWikipedia = \"Tosk Albanian\",\n\tplain_categories = {\"Tosk Albanian\"},\n\tlanguage = \"sq\",\n}\n\nlabels[\"\
      Twi\"] = {\n\tdisplay = \"[[w:Twi|Twi]]\",\n\tplain_categories = { \"Twi Akan\" },\n\tlanguage = \"ak\",\n}\naliases[\"Akan Kasa\"] = \"Twi\"\n\nlabels[\"Tyneside\"] = {\n\tplain_categories = {\"Geordie English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"\
      Ulster Scots\"] = {\n\tWikipedia = \"Ulster Scots dialects\",\n\tplain_categories = {\"Ulster Scots\"},\n\tlanguage = \"sco\",\n}\naliases[\"Ullans\"] = \"Ulster Scots\"\n\nlabels[\"US English\"] = {\n\tdisplay = \"US\",\n\tWikipedia = \"American English\"\
      ,\n\tplain_categories = {\"American English\"},\n\tlanguage = \"en\",\n}\naliases[\"U.S. English\"] = \"US English\"\naliases[\"American English\"] = \"US English\"\n\nlabels[\"Vallader\"] = {\n\tWikipedia = \"Vallader dialect (Romansh)\",\n\tplain_categories\
      \ = {\"Vallader Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Vedic\"] = {\n    display = \"[[w:Vedic Sanskrit|Vedic]]\",\n    plain_categories = {\"Vedic Sanskrit\"},\n    language = \"sa\",\n}\n\nlabels[\"Vegliot\"] = {\n\tdisplay = \"[[w:Dalmatian_language#Vegliot_dialect|Vegliot]]\"\
      ,\n\tplain_categories = {\"Vegliot Dalmatian\"},\n\tlanguage = \"dlm\",\n}\naliases[\"Krk\"] = \"Vegliot\"\n\nlabels[\"Vivaro-Alpine\"] = {\n\tWikipedia = \"Vivaro-Alpine dialect\",\n\tplain_categories = {\"Vivaro-Alpine Occitan\"},\n\tlanguage = \"oc\"\
      ,\n}\n\nlabels[\"Walser\"] = {\n\tWikipedia = \"Walser German\",\n\tplain_categories = {\"Walser German\"},\n\tlanguage = \"gsw\"\n}\naliases[\"wae\"] = \"Walser\"\naliases[\"Waser German\"] = \"Walser\"\naliases[\"Walserdeutsch\"] = \"Walser\"\n\nlabels[\"\
      West Arabian\"] = {\n\tdisplay = \"Hejazi\",\n\tplain_categories = {\"Hejazi Arabic\"},\n\tlanguage = \"ar\",\n}\naliases[\"Hejazi Arabic\"] = \"West Arabian\"\n\nlabels[\"West Country English\"] = {\n\tdisplay = \"West Country\",\n\tWikipedia = true,\n\
      \tplain_categories = {\"West Country English\"},\n\tlanguage = \"en\",\n}\naliases[\"West Country dialect\"] = \"West Country English\"\n\nlabels[\"West Germanic\"] = {\n\tWikipedia = \"West Germanic languages\",\n\tplain_categories = {\"West Proto-Germanic\"\
      },\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"West Midland Middle English\"] = {\n\tdisplay = \"West Midlands\",\n\tplain_categories = {\"West Midland Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"West Midlands ME\"] = \"West Midland Middle English\"\
      \naliases[\"West Midland ME\"] = \"West Midland Middle English\"\n\nlabels[\"West Midlands English\"] = {\n\tdisplay = \"West Midlands\",\n\tWikipedia = true,\n\tplain_categories = {\"West Midlands English\"},\n\tlanguage = \"en\",\n}\naliases[\"West Midlands\
      \ dialect\"] = \"West Midlands English\"\n\nlabels[\"West Saxon\"] = {\n\tWikipedia = \"West Saxon dialect\",\n\tplain_categories = { \"West Saxon Old English\" },\n\tlanguage = \"ang\",\n}\n\n--[=[\nNo category exists yet.\nlabels[\"West Palatine\"] =\
      \ {\n\tdisplay = \"Westpfälzisch\",\n\tWikipedia = \"Palatine German language\",\n\tplain_categories = {\"West Palatine German\"},\n\tlanguage = \"\",\n}\naliases[\"Westpfälzisch\"] = \"West Palatine\"\n]=]\n\nlabels[\"Western Armenian\"] = {\n\tWikipedia\
      \ = true,\n\tplain_categories = {\"Western Armenian\"},\n\tlanguage = \"hy\",\n}\n\nlabels[\"Western Catalan\"] = {\n\tWikipedia = \"Catalan dialects\",\n\tplain_categories = {\"Western Catalan\"},\n\tlanguage = \"ca\",\n}\n\nlabels[\"Western Malayo-Polynesian\"\
      ] = {\n\tWikipedia = \"Western Malayo-Polynesian languages\",\n\tplain_categories = {\"Western Proto-Malayo-Polynesian\"},\n\tlanguage = \"poz-pro\",\n}\n\nlabels[\"Western Pomeranian Low German\"] = {\n\tdisplay = \"Western Pomeranian\",\n\tplain_categories\
      \ = {\"Western Pomeranian Low German\"},\n\tlanguage = \"nds-de\",\n}\naliases[\"West Pomeranian Low German\"] = \"Western Pomeranian Low German\"\naliases[\"Western Pomeranian LG\"] = \"Western Pomeranian Low German\"\naliases[\"West Pomeranian LG\"]\
      \ = \"Western Pomeranian Low German\"\n\nlabels[\"Western Samic\"] = {\n\tplain_categories = {\"Western Proto-Samic\"},\n\tlanguage = \"smi-pro\",\n}\n\nlabels[\"Wood Frisian\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Wood Frisian\"},\n\tlanguage\
      \ = \"fy\",\n}\n\nlabels[\"Wu\"] = {\n\tdisplay = \"[[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Xiang\"] = {\n\tdisplay = \"[[Xiang]]\",\n\tplain_categories = {\"Xiang Chinese\"},\n\tlanguage = \"zh\",\n}\n\n\
      labels[\"Ye'kwana\"] = {\n\tdisplay = \"Ye'kwana dialect\",\n\tplain_categories = {\"Ye'kwana Maquiritari\"},\n\tlanguage = \"mch\",\n}\naliases[\"Ye'kwana dialect\"] = \"Ye'kwana\"\n\nlabels[\"Yerragudi\"] = {\n\tdisplay = \"Yerragudi\",\n\tplain_categories\
      \ = {\"Yerragudi Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Young\"] = {\n    display = \"[[w:Young Avestan|Young Avestan]]\",\n    language = \"ae\",\n}\naliases[\"Young Avestan\"] = \"Young\"\naliases[\"Younger\"] = \"Young\"\naliases[\"\
      Younger Avestan\"] = \"Young\"\n\nlabels[\"Zhongshan Min\"] = {\n\tdisplay = \"Zhongshan Min\",\n\tWikipedia = true,\n\tplain_categories = {\"Zhongshan Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\n--[[\tAdds a \"languages\" field containing [\"&lt;language\
      \ code&gt;\"] = true,\n\t\tif there is a \"language\" field with a non-empty value.\t\t]]\nm_functions.handle_languages(labels)\n\nreturn {\n\t[\"labels\"] = labels,\n\t[\"aliases\"] = aliases,\n\t[\"deprecated\"] = deprecated,\n}</rev></revisions></page></pages></query></api>"
