!tape
name: inh
interactions:
- recorded: 2017-08-24T22:06:43.426Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=User%3AJberkel%2Fbliki-testcases%2Finh&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41448 t=1503612403295266
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:43 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1287.eqiad.wmnet
      Set-Cookie: WMF-Last-Access=24-Aug-2017;Path=/;HttpOnly;secure;Expires=Mon, 25 Sep 2017 12:00:00 GMT, WMF-Last-Access-Global=24-Aug-2017;Path=/;Domain=.wiktionary.org;HttpOnly;secure;Expires=Mon, 25 Sep 2017 12:00:00 GMT, GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; Path=/; secure; Domain=.wiktionary.org
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;https=1;nocookies=1
      X-Cache: cp1053 pass, cp3030 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 256445013, 988190241, 260273783
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="6358203" pageid="6358203" ns="2" title="User:Jberkel/bliki-testcases/inh"><revisions><rev user="Jberkel" timestamp="2017-08-24T21:14:31Z" comment="Created page with &quot;{{inh|de|goh|hūs}}&quot;" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{inh|de|goh|hūs}}</rev></revisions></page></pages></query></api>
- recorded: 2017-08-24T22:06:43.644Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ainh&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=35508 t=1503612403530716
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:43 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1055 pass, cp3043 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 92888071, 605368108, 274726988
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="4992617" pageid="4992617" ns="10" title="Template:inh"><revisions><rev user="CodeCat" timestamp="2015-09-22T16:48:56Z" comment="Redirected page to [[Template:inherited]]" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">#REDIRECT [[Template:inherited]]</rev></revisions></page></pages></query></api>
- recorded: 2017-08-24T22:06:43.826Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ainherited&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=36088 t=1503612403712151
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Length: '440'
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:43 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1223.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1054 pass, cp3031 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 398345561, 157345152, 267636620
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="4992605" pageid="4992605" ns="10" title="Template:inherited"><revisions><rev user="Daniel Carrero" timestamp="2016-07-05T11:05:41Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:etymology/templates|inherited}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2017-08-24T22:06:44.214Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58331 t=1503612404070118
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:44 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1203.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1067 pass, cp3032 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 13369782, 231585488, 269723997
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4998801\" pageid=\"4998801\" ns=\"828\" title=\"Module:etymology/templates\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-07-21T18:31:08Z\" comment=\"track alts, to make\
      \ it easier to find examples of the problem mentioned on the talk page\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nlocal m_languages = require(&quot;Module:languages&quot;)\n\nfunction fetch_lang(lang,\
      \ parameter)\n\treturn m_languages.getByCode(lang) or m_languages.err(lang, parameter)\nend\n\nfunction fetch_source(code, disallow_family)\n\tlocal source =\n\t\tm_languages.getByCode(code)\n\t\tor require(&quot;Module:etymology languages&quot;).getByCode(code)\n\
      \t\tor not disallow_family and require(&quot;Module:families&quot;).getByCode(code)\n\t\n\tif source then\n\t\treturn source\n\telse\n\t\terror(&quot;The language&quot; .. (not disallow_family and &quot;, family&quot; or &quot;&quot;) .. &quot; or etymology\
      \ language code \\&quot;&quot; .. code .. &quot;\\&quot; is not valid.&quot;)\n\tend\nend\n\nfunction fetch_script(sc)\t\n\tif sc then\n\t\treturn require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc ..\
      \ &quot;\\&quot; is not valid.&quot;)\n\telse\n\t\treturn nil\n\tend\nend\n\nfunction export.etyl(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = &quot;und&quot;},\n\t\t[2] = {},\n\t\t[&quot;sort&quot;] = {},\n\t}\n\t\n\tlocal args =\
      \ require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal source = fetch_source(args[1])\n\tlocal lang = args[2]\n\tlocal sort_key = args[&quot;sort&quot;]\n\t\n\t-- Empty language means English, but &quot;-&quot; means\
      \ no language. Yes, confusing...\n\tif not lang then\n\t\tlang = &quot;en&quot;\n\telseif lang == &quot;-&quot; then\n\t\tlang = nil\n\tend\n\tif lang then\n\t\tlang = fetch_lang(lang, 2)\n\tend\n\tif lang and (lang:getCode() == &quot;la&quot; or lang:getCode()\
      \ == &quot;nl&quot;) then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;etyl/&quot; .. lang:getCode())\n\t\trequire(&quot;Module:debug&quot;).track(&quot;etyl/&quot; .. lang:getCode() .. &quot;/&quot; .. source:getCode())\n\tend\n\t\n\treturn require(&quot;Module:etymology&quot;).format_etyl(lang,\
      \ source, sort_key)\nend\n\nfunction export.cognate(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = &quot;und&quot;},\n\t\t[2] = {},\n\t\t[3] = {alias_of = &quot;alt&quot;},\n\t\t[4] = {alias_of = &quot;t&quot;},\n\t\t\n\t\t[&quot;alt&quot;]\
      \ = {},\n\t\t[&quot;g&quot;] = {},\n\t\t[&quot;gloss&quot;] = { alias_of = &quot;t&quot; },\n\t\t[&quot;id&quot;] = {},\n\t\t[&quot;lit&quot;] = {},\n\t\t[&quot;pos&quot;] = {},\n\t\t[&quot;t&quot;] = {},\n\t\t[&quot;tr&quot;] = {},\n\t\t[&quot;sc&quot;]\
      \ = {},\n\t\t\n\t\t[&quot;sort&quot;] = {},\n\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal source = fetch_source(args[1])\n\tlocal sc = fetch_script(args[&quot;sc&quot;])\n\n\treturn\
      \ require(&quot;Module:etymology&quot;).format_cognate(\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[2],\n\t\t\talt = args[&quot;alt&quot;],\n\t\t\tid = args[&quot;id&quot;],\n\t\t\tgenders = { args[&quot;g&quot;] },\n\t\t\ttr = args[&quot;tr&quot;],\n\
      \t\t\tgloss = args[&quot;t&quot;],\n\t\t\tpos = args[&quot;pos&quot;],\n\t\t\tlit = args[&quot;lit&quot;]\n\t\t},\n\t\targs[&quot;sort&quot;])\nend\n\nfunction export.noncognate(frame)\n\treturn export.cognate(frame)\nend\n\nfunction export.derived(frame)\n\
      \tlocal params = {\n\t\t[1] = {required = true, default = &quot;und&quot;},\n\t\t[2] = {required = true, default = &quot;und&quot;},\n\t\t[3] = {},\n\t\t[4] = {alias_of = &quot;alt&quot;},\n\t\t[5] = {alias_of = &quot;t&quot;},\n\t\t\n\t\t[&quot;alt&quot;]\
      \ = {},\n\t\t[&quot;g&quot;] = {},\n\t\t[&quot;gloss&quot;] = {alias_of = &quot;t&quot;},\n\t\t[&quot;id&quot;] = {},\n\t\t[&quot;lit&quot;] = {},\n\t\t[&quot;pos&quot;] = {},\n\t\t[&quot;t&quot;] = {},\n\t\t[&quot;tr&quot;] = {},\n\t\t[&quot;sc&quot;]\
      \ = {},\n\t\t\n\t\t[&quot;sort&quot;] = {},\n\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[&quot;sc&quot;])\n\
      \t\n\treturn require(&quot;Module:etymology&quot;).format_derived(\n\t\tlang, \n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[&quot;alt&quot;],\n\t\t\tid = args[&quot;id&quot;],\n\t\t\tgenders = { args[&quot;g&quot;]\
      \ },\n\t\t\ttr = args[&quot;tr&quot;],\n\t\t\tgloss = args[&quot;t&quot;],\n\t\t\tpos = args[&quot;pos&quot;],\n\t\t\tlit = args[&quot;lit&quot;]\n\t\t},\n\t\targs[&quot;sort&quot;])\nend\n\nfunction export.inherited(frame)\n\tlocal params = {\n\t\t[1]\
      \ = {required = true, default = &quot;und&quot;},\n\t\t[2] = {required = true, default = &quot;und&quot;},\n\t\t[3] = {},\n\t\t[4] = {alias_of = &quot;alt&quot;},\n\t\t[5] = {alias_of = &quot;t&quot;},\n\t\t\n\t\t[&quot;alt&quot;] = {},\n\t\t[&quot;g&quot;]\
      \ = {},\n\t\t[&quot;gloss&quot;] = {alias_of = &quot;t&quot;},\n\t\t[&quot;id&quot;] = {},\n\t\t[&quot;lit&quot;] = {},\n\t\t[&quot;pos&quot;] = {},\n\t\t[&quot;t&quot;] = {},\n\t\t[&quot;tr&quot;] = {},\n\t\t[&quot;sc&quot;] = {},\n\t\t\n\t\t[&quot;sort&quot;]\
      \ = {},\n\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2], &quot;no family&quot;)\n\tlocal sc = fetch_script(args[&quot;sc&quot;])\n\
      \n\treturn require(&quot;Module:etymology&quot;).format_inherited(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[&quot;alt&quot;],\n\t\t\tid = args[&quot;id&quot;],\n\t\t\tgenders = {args[&quot;g&quot;]},\n\
      \t\t\ttr = args[&quot;tr&quot;],\n\t\t\tgloss = args[&quot;t&quot;],\n\t\t\tpos = args[&quot;pos&quot;],\n\t\t\tlit = args[&quot;lit&quot;]\n\t\t},\n\t\targs[&quot;sort&quot;])\nend\n\nfunction export.borrowed(frame)\n\tlocal learned = frame.args[&quot;learned&quot;];\
      \ if not learned or learned == &quot;&quot; then learned = false else learned = true end\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = &quot;und&quot;},\n\t\t[2] = {required = true, default = &quot;und&quot;},\n\t\t[3] = {},\n\t\t[4] =\
      \ {alias_of = &quot;alt&quot;},\n\t\t[5] = {alias_of = &quot;t&quot;},\n\t\t\n\t\t[&quot;alt&quot;] = {},\n\t\t[&quot;g&quot;] = {},\n\t\t[&quot;gloss&quot;] = {alias_of = &quot;t&quot;},\n\t\t[&quot;id&quot;] = {},\n\t\t[&quot;lit&quot;] = {},\n\t\t[&quot;pos&quot;]\
      \ = {},\n\t\t[&quot;t&quot;] = {},\n\t\t[&quot;tr&quot;] = {},\n\t\t[&quot;sc&quot;] = {},\n\t\t\n\t\t[&quot;nocap&quot;] = {type = &quot;boolean&quot;},\n\t\t[&quot;notext&quot;] = {type = &quot;boolean&quot;},\n\t\t[&quot;sort&quot;] = {},\n\t\t[&quot;ger&quot;]\
      \ = {type = &quot;boolean&quot;},\n\t}\n\t\n\tlocal compat = false\n\t\n\tif frame:getParent().args[&quot;lang&quot;] then\n\t\tcompat = true\n\tend\n\t\n\tif compat then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;borrowing/lang&quot;)\n\t\tparams[&quot;lang&quot;]\
      \ = table.remove(params, 1)\n\tend\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[compat and &quot;lang&quot; or 1], compat and &quot;lang&quot; or 1)\n\tlocal source\
      \ = fetch_source(args[compat and 1 or 2])\n\tlocal sc = fetch_script(args[&quot;sc&quot;])\n\n\treturn require(&quot;Module:etymology&quot;).format_borrowed(\n\t\tlang,\n\t\t{lang = source, sc = sc, term = args[compat and 2 or 3], alt = args[&quot;alt&quot;],\
      \ id = args[&quot;id&quot;], genders = {args[&quot;g&quot;]}, tr = args[&quot;tr&quot;], gloss = args[&quot;t&quot;], pos = args[&quot;pos&quot;], lit = args[&quot;lit&quot;]},\n\t\targs[&quot;sort&quot;], args[&quot;nocap&quot;], args[&quot;notext&quot;],\
      \ learned)\nend\n\nfunction export.calque(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = &quot;und&quot;},\n\t\t[2] = {required = true, default = &quot;und&quot;},\n\t\t[3] = {},\n\t\t[4] = {alias_of = &quot;alt&quot;},\n\t\t[5] = {alias_of\
      \ = &quot;t&quot;},\n\t\t\n\t\t[&quot;alt&quot;] = {},\n\t\t[&quot;g&quot;] = {},\n\t\t[&quot;gloss&quot;] = {alias_of = &quot;t&quot;},\n\t\t[&quot;id&quot;] = {},\n\t\t[&quot;lit&quot;] = {},\n\t\t[&quot;pos&quot;] = {},\n\t\t[&quot;t&quot;] = {},\n\t\
      \t[&quot;tr&quot;] = {},\n\t\t\n\t\t[&quot;sort&quot;] = {},\n\t\t[&quot;nocap&quot;] = {type = &quot;boolean&quot;},\n\t\t[&quot;notext&quot;] = {type = &quot;boolean&quot;},\n\t}\n\t\n\tlocal compat_etyl = false\n\t\n\tif frame:getParent().args[&quot;etyl\
      \ lang&quot;] then\n\t\tcompat_etyl = true\n\tend\n\t\n\tif compat_etyl then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;calque/etyl&quot;)\n\t\t\n\t\tparams[&quot;etyl lang&quot;] = {required = true, default = &quot;und&quot;}\n\t\tparams[&quot;etyl\
      \ term&quot;] = {}\n\t\tparams[&quot;etyl t&quot;] = {}\n\t\tparams[&quot;etyl tr&quot;] = {}\n\t\t\n\t\tparams[2] = {list = true, allow_holes = true}\n\t\tparams[3] = nil\n\t\tparams[4] = nil\n\t\tparams[5] = nil\n\t\t\n\t\tparams[&quot;alt&quot;] = {list\
      \ = true, allow_holes = true}\n\t\tparams[&quot;g&quot;] = nil\n\t\tparams[&quot;gloss&quot;] = {alias_of = &quot;t&quot;, list = true, allow_holes = true}\n\t\tparams[&quot;id&quot;] = nil\n\t\tparams[&quot;lit&quot;] = nil\n\t\tparams[&quot;pos&quot;]\
      \ = {list = true, allow_holes = true}\n\t\tparams[&quot;t&quot;] = {list = true, allow_holes = true}\n\t\tparams[&quot;tr&quot;] = {list = true, allow_holes = true}\n\tend\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args,\
      \ params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[compat_etyl and &quot;etyl lang&quot; or 2])\n\n\tlocal parts = {}\n\t\n\tif compat_etyl then\n\t\tlocal numParts = math.max(args[2].maxindex, args[&quot;alt&quot;].maxindex,\
      \ args[&quot;t&quot;].maxindex, args[&quot;tr&quot;].maxindex);\n\t\tfor i = 1, numParts do\n\t\t\ttable.insert(parts, {\n\t\t\t\tterm = args[2][i],\n\t\t\t\talt = args[&quot;alt&quot;][i],\n\t\t\t\ttr = args[&quot;tr&quot;][i],\n\t\t\t\tgloss = args[&quot;t&quot;][i],\n\
      \t\t\t\tpos = args[&quot;pos&quot;][i],\n\t\t\t})\n\t\tend\n\t\tif numParts &gt; 1 then \n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;calque/parts&quot;)\n\t\tend\n\tend\n\t\n\treturn require(&quot;Module:etymology&quot;).calque(\n\t\tlang,\n\t\
      \t{\n\t\t\tlang = source,\n\t\t\tterm = args[compat_etyl and &quot;etyl term&quot; or 3],\n\t\t\talt = not compat_etyl and args[4] or nil,\n\t\t\ttr = args[compat_etyl and &quot;etyl tr&quot; or &quot;tr&quot;],\n\t\t\tgloss = args[compat_etyl and &quot;etyl\
      \ t&quot; or &quot;t&quot; or 5]\n\t\t},\n\t\tparts,\n\t\targs[&quot;sort&quot;],\n\t\targs[&quot;nocap&quot;],\n\t\targs[&quot;notext&quot;])\nend\n\nfunction export.semantic_loan(frame)\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = &quot;und&quot;},\n\
      \t\t[2] = {required = true, default = &quot;und&quot;},\n\t\t[3] = {},\n\t\t[4] = {alias_of = &quot;alt&quot;},\n\t\t[5] = {alias_of = &quot;t&quot;},\n\t\t\n\t\t[&quot;alt&quot;] = {},\n\t\t[&quot;g&quot;] = {},\n\t\t[&quot;gloss&quot;] = {alias_of =\
      \ &quot;t&quot;},\n\t\t[&quot;id&quot;] = {},\n\t\t[&quot;lit&quot;] = {},\n\t\t[&quot;pos&quot;] = {},\n\t\t[&quot;t&quot;] = {},\n\t\t[&quot;tr&quot;] = {},\n\t\t[&quot;sc&quot;] = {},\n\t\t\n\t\t[&quot;nocap&quot;] = {type = &quot;boolean&quot;},\n\t\
      \t[&quot;notext&quot;] = {type = &quot;boolean&quot;},\n\t\t[&quot;sort&quot;] = {},\n\t\t[&quot;ger&quot;] = {type = &quot;boolean&quot;},\n\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\t\
      local lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[&quot;sc&quot;])\n\n\treturn require(&quot;Module:etymology&quot;).format_semantic_loan(\n\t\tlang,\n\t\t{lang = source, sc = sc, term = args[3],\
      \ alt = args[&quot;alt&quot;], id = args[&quot;id&quot;], genders = {args[&quot;g&quot;]}, tr = args[&quot;tr&quot;], gloss = args[&quot;t&quot;], pos = args[&quot;pos&quot;], lit = args[&quot;lit&quot;]},\n\t\targs[&quot;sort&quot;], args[&quot;nocap&quot;],\
      \ args[&quot;notext&quot;])\nend\n\nlocal function qualifier(content)\n\tif content then\n\t\treturn table.concat{\n\t\t\t'&lt;span class=&quot;ib-brac qualifier-brac&quot;&gt;(&lt;/span&gt;',\n\t\t\t'&lt;span class=&quot;ib-content qualifier-content&quot;&gt;',\n\
      \t\t\tcontent,\n\t\t\t'&lt;/span&gt;',\n\t\t\t'&lt;span class=&quot;ib-brac qualifier-brac&quot;&gt;)&lt;/span&gt;'\n\t\t}\n\tend\nend\n\n\nfunction export.descendant(frame)\n\tlocal namespace = mw.title.getCurrentTitle().nsText\n\t\n\tlocal params = {\n\
      \t\t[1] = { required = true },\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = { alias_of = &quot;gloss&quot; },\n\t\t[&quot;g&quot;] = { list = true },\n\t\t[&quot;gloss&quot;] = {},\n\t\t[&quot;id&quot;] = {},\n\t\t[&quot;lit&quot;] = {},\n\t\t[&quot;pos&quot;]\
      \ = {},\n\t\t[&quot;t&quot;] = { alias_of = &quot;gloss&quot; },\n\t\t[&quot;tr&quot;] = {},\n\t\t[&quot;sc&quot;] = {},\n\t\t[&quot;bor&quot;] = { type = &quot;boolean&quot; },\n\t\t[&quot;der&quot;] = { type = &quot;boolean&quot; },\n\t\t[&quot;calq&quot;]\
      \ = { type = &quot;boolean&quot; },\n\t\t[&quot;calque&quot;] = { alias_of = &quot;calq&quot; },\n\t\t[&quot;alts&quot;] = { type = &quot;boolean&quot; },\n\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\
      \t\n\tlocal lang = args[1]\n\tlocal term = args[2]\n\tlocal alt = args[3]\n\tlocal tr = args[&quot;tr&quot;]\n\tlocal sc = args[&quot;sc&quot;]\n\t\n\tif namespace == &quot;Template&quot; then\n\t\tif not ( sc or lang ) then\n\t\t\tsc = &quot;Latn&quot;\n\
      \t\tend\n\t\tif not lang then\n\t\t\tlang = &quot;en&quot;\n\t\tend\n\t\tif not term then\n\t\t\tterm = &quot;word&quot;\n\t\tend\n\tend\n\t\n\tlang = m_languages.getByCode(lang)\n\t\tor require(&quot;Module:etymology languages&quot;).getByCode(lang)\n\
      \t\tor m_languages.err(lang, 1)\n\t\t\n\tlocal entryLang = require(&quot;Module:etymology&quot;).getNonEtymological(lang)\n\t\n\tif lang:getCode() ~= entryLang:getCode() then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/descendant/etymological]]\n\
      \t\trequire(&quot;Module:debug&quot;).track(&quot;descendant/etymological&quot;)\n\t\trequire(&quot;Module:debug&quot;).track(&quot;descendant/etymological/&quot; .. lang:getCode())\n\tend\n\t\n\tif sc then\n\t\tsc = require(&quot;Module:scripts&quot;).getByCode(sc)\
      \ or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)\n\tend\n\t\n\tlocal languageName = lang:getCanonicalName()\n\tlanguageName = mw.ustring.gsub(languageName, &quot;^Proto%-&quot;, &quot;&quot;)\n\t\n\tlocal link\
      \ = &quot;&quot;\n\t\n\tif term ~= &quot;-&quot; then\n\t\tlink = require(&quot;Module:links&quot;).full_link(\n\t\t\t{\n\t\t\t\tlang = entryLang,\n\t\t\t\tsc = sc,\n\t\t\t\tterm = term,\n\t\t\t\talt = alt,\n\t\t\t\tid = args[&quot;id&quot;],\n\t\t\t\t\
      tr = tr,\n\t\t\t\tgenders = args[&quot;g&quot;],\n\t\t\t\tgloss = args[&quot;gloss&quot;],\n\t\t\t\tpos = args[&quot;pos&quot;],\n\t\t\t\tlit = args[&quot;lit&quot;],\n\t\t\t},\n\t\t\tnil,\n\t\t\ttrue\n\t\t)\n\tend\n\t\n\tlocal arrow, alts, calque\n\t\n\
      \tif args[&quot;bor&quot;] or args[&quot;calq&quot;] then\n\t\tarrow = &quot;→ &quot;\n\telseif args[&quot;der&quot;] then\n\t\tarrow = &quot;⇒ &quot;\n\telse\n\t\tarrow = &quot;&quot;\n\tend\n\t\n\tif args[&quot;alts&quot;] then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/desc/alts]]\n\
      \t\trequire(&quot;Module:debug&quot;).track(&quot;desc/alts&quot;)\n\t\talts = require(&quot;Module:descendants tree&quot;).getAlternativeForms(entryLang, term)\n\telse\n\t\talts = &quot;&quot;\n\tend\n\t\n\tif args[&quot;calq&quot;] then\n\t\tcalque =\
      \ &quot; &quot; .. qualifier(&quot;calque&quot;)\n\telse\n\t\tcalque = &quot;&quot;\n\tend\n\t\n\treturn table.concat{arrow, languageName, &quot;: &quot;, link, alts, calque}\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2017-08-24T22:06:44.416Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41969 t=1503612404289124
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:44 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1208.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1053 pass, cp3041 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 250674627, 65250468, 271465128
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4453474\" pageid=\"4453474\" ns=\"828\" title=\"Module:languages\"><revisions><rev user=\"JohnC5\" timestamp=\"2017-08-14T03:29:43Z\" comment=\"Autoformat\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nlocal find = mw.ustring.find\n\n--[=[\tThis function checks for things that could plausibly be a language code:\n\t\ttwo or three lowercase letters, two or three groups\
      \ of three lowercase\n\t\tletters with hyphens between them. If such a pattern is not found,\n\t\tit is likely the editor simply forgot to enter a language code. ]=]\n\nfunction export.err(langCode, param, text)\n\tlocal ordinals = { &quot;first&quot;,\
      \ &quot;second&quot;, &quot;third&quot;, &quot;fourth&quot; }\n\t\n\tif type(param) == &quot;number&quot; then\n\t\tordinal = ordinals[param]\n\t\tparam = ordinal .. ' parameter'\n\telseif type(param) == &quot;string&quot; then\n\t\tparam = 'parameter\
      \ &quot;' .. param .. '&quot;'\n\telse\n\t\terror(&quot;The parameter name is &quot;\n\t\t\t\t.. (type(param) == &quot;table&quot; and &quot;a table&quot; or tostring(param))\n\t\t\t\t.. &quot;, but it should be a number or a string.&quot;)\n\tend\n\t\n\
      \t--[[\tCan't use &quot;%l&quot; because that would include all Unicode\n\t\t\tlowercase letters; language codes only use ASCII.\t]]\n\tlocal lower = &quot;[a-z]&quot;\n\t\n\tif not langCode or langCode == &quot;&quot; then\n\t\terror(&quot;The &quot;\
      \ .. param .. &quot; (&quot; .. (text or &quot;language code&quot;) .. &quot;) is missing.&quot;, 2)\n\telseif find(langCode, &quot;^&quot; .. lower .. lower .. lower .. &quot;?$&quot;)\n\t\t\tor find(langCode, &quot;^&quot; .. lower .. lower .. lower\n\
      \t\t\t.. &quot;%-&quot; .. lower .. lower .. lower .. &quot;$&quot;)\n\t\t\tor find(langCode, &quot;^&quot; .. lower .. lower .. lower\n\t\t\t.. &quot;%-&quot; .. lower .. lower .. lower\n\t\t\t.. &quot;%-&quot; .. lower .. lower .. lower .. &quot;$&quot;)\
      \ then\n\t\terror(&quot;The language code \\&quot;&quot; .. langCode .. &quot;\\&quot; is not valid.&quot;, 2)\n\telse\n\t\terror(&quot;Please enter a &quot; .. (text or &quot;language code&quot;) .. &quot; in the &quot; .. param .. &quot;.&quot;, 2)\n\
      \tend\nend\n\nlocal Language = {}\n\nfunction Language:getCode()\n\treturn self._code\nend\n\n\nfunction Language:getCanonicalName()\n\treturn self._rawData.canonicalName\nend\n\n\n-- Commented out; I don't think anything uses this, the presence/absence\
      \ of script errors should confirm\n--function Language:getAllNames()\n--\treturn self._rawData.names\n--end\n\n\nfunction Language:getOtherNames()\n\treturn self._rawData.otherNames or {}\nend\n\n\nfunction Language:getType()\n\treturn self._rawData.type\
      \ or &quot;regular&quot;\nend\n\n\nfunction Language:getWikimediaLanguages()\n\tif not self._wikimediaLanguageObjects then\n\t\tlocal m_wikimedia_languages = require(&quot;Module:wikimedia languages&quot;)\n\t\tself._wikimediaLanguageObjects = {}\n\t\t\
      local wikimedia_codes = self._rawData.wikimedia_codes or { self._code }\n\t\t\n\t\tfor _, wlangcode in ipairs(wikimedia_codes) do\n\t\t\ttable.insert(self._wikimediaLanguageObjects, m_wikimedia_languages.getByCode(wlangcode))\n\t\tend\n\tend\n\t\n\treturn\
      \ self._wikimediaLanguageObjects\nend\n\n\nfunction Language:getWikipediaArticle()\n\treturn self._rawData.wikipedia_article or mw.ustring.gsub(self:getCategoryName(), &quot;Creole language&quot;, &quot;Creole&quot;)\nend\n\n\n\nfunction Language:makeWikipediaLink()\n\
      \treturn &quot;[[w:&quot; .. self:getWikipediaArticle() .. &quot;|&quot; .. self:getCanonicalName() .. &quot;]]&quot;\nend\n\n\nfunction Language:getScripts()\n\tif not self._scriptObjects then\n\t\tlocal m_scripts = require(&quot;Module:scripts&quot;)\n\
      \t\tself._scriptObjects = {}\n\t\t\n\t\tfor _, sc in ipairs(self._rawData.scripts or { &quot;None&quot; }) do\n\t\t\ttable.insert(self._scriptObjects, m_scripts.getByCode(sc))\n\t\tend\n\tend\n\t\n\treturn self._scriptObjects\nend\n\nfunction Language:getScriptCodes()\n\
      \treturn self._rawData.scripts or { &quot;None&quot; }\nend\n\nfunction Language:getFamily()\n\tif self._rawData.family and not self._familyObject then\n\t\tself._familyObject = require(&quot;Module:families&quot;).getByCode(self._rawData.family)\n\tend\n\
      \t\n\treturn self._familyObject\nend\n\n\nfunction Language:getAncestors()\n\tif not self._ancestorObjects then\n\t\tself._ancestorObjects = {}\n\t\t\n\t\tif self._rawData.ancestors then\n\t\t\tfor _, ancestor in ipairs(self._rawData.ancestors) do\n\t\t\
      \t\ttable.insert(self._ancestorObjects, export.getByCode(ancestor) or require(&quot;Module:etymology languages&quot;).getByCode(ancestor))\n\t\t\tend\n\t\telse\n\t\t\tlocal fam = self:getFamily()\n\t\t\tlocal protoLang = fam and fam:getProtoLanguage()\
      \ or nil\n\t\t\t\n\t\t\t-- For the case where the current language is the proto-language\n\t\t\t-- of its family, we need to step up a level higher right from the start.\n\t\t\tif protoLang and protoLang:getCode() == self:getCode() then\n\t\t\t\tfam =\
      \ fam:getFamily()\n\t\t\t\tprotoLang = fam and fam:getProtoLanguage() or nil\n\t\t\tend\n\t\t\t\n\t\t\twhile not protoLang and not (not fam or fam:getCode() == &quot;qfa-not&quot;) do\n\t\t\t\tfam = fam:getFamily()\n\t\t\t\tprotoLang = fam and fam:getProtoLanguage()\
      \ or nil\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(self._ancestorObjects, protoLang)\n\t\tend\n\tend\n\t\n\treturn self._ancestorObjects\nend\n\nlocal function iterateOverAncestorTree(node, func)\n\tfor _, ancestor in ipairs(node:getAncestors()) do\n\t\t\
      if ancestor then\n\t\t\tlocal ret = func(ancestor) or iterateOverAncestorTree(ancestor, func)\n\t\t\tif ret then\n\t\t\t\treturn ret\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction Language:getAncestorChain()\n\tif not self._ancestorChain then\n\t\tself._ancestorChain\
      \ = {}\n\t\tlocal step = #self:getAncestors() == 1 and self:getAncestors()[1] or nil\n\t\t\n\t\twhile step do\n\t\t\ttable.insert(self._ancestorChain, 1, step)\n\t\t\tstep = #step:getAncestors() == 1 and step:getAncestors()[1] or nil\n\t\tend\n\tend\n\t\
      \n\treturn self._ancestorChain\nend\n\n\nfunction Language:hasAncestor(otherlang)\n\tlocal function compare(ancestor)\n\t\treturn ancestor:getCode() == otherlang:getCode()\n\tend\n\t\n\treturn iterateOverAncestorTree(self, compare) or false\nend\n\n\n\
      function Language:getCategoryName()\n\tlocal name = self._rawData.canonicalName\n\t\n\t-- If the name already has &quot;language&quot; in it, don't add it.\n\tif name:find(&quot;[Ll]anguage$&quot;) then\n\t\treturn name\n\telse\n\t\treturn name .. &quot;\
      \ language&quot;\n\tend\nend\n\n\nfunction Language:getStandardCharacters()\n\treturn self._rawData.standardChars\nend\n\n\nfunction Language:makeEntryName(text)\n\ttext = mw.ustring.gsub(text, &quot;^[¿¡]&quot;, &quot;&quot;)\n\ttext = mw.ustring.gsub(text,\
      \ &quot;(.)[؟?!;՛՜ ՞ ՟？！︖︕।॥။၊་།]$&quot;, &quot;%1&quot;)\n\t\n\tif self:getCode() == &quot;ar&quot; then\n\t\tlocal U = mw.ustring.char\n\t\tlocal taTwiil = U(0x640)\n\t\tlocal waSla = U(0x671)\n\t\t-- diacritics ordinarily removed by entry_name replacements\n\
      \t\tlocal Arabic_diacritics = U(0x64B, 0x64C, 0x64D, 0x64E, 0x64F, 0x650, 0x651, 0x652, 0x670)\n\t\t\n\t\tif text == waSla or mw.ustring.find(text, &quot;^&quot; .. taTwiil .. &quot;?[&quot; .. Arabic_diacritics .. &quot;]&quot; .. &quot;$&quot;) then\n\
      \t\t\treturn text\n\t\tend\n\tend\n\t\n\tif type(self._rawData.entry_name) == &quot;table&quot; then\n\t\tfor i, from in ipairs(self._rawData.entry_name.from) do\n\t\t\tlocal to = self._rawData.entry_name.to[i] or &quot;&quot;\n\t\t\ttext = mw.ustring.gsub(text,\
      \ from, to)\n\t\tend\n\tend\n\t\n\t--[=[ For instance, ᾰ (alpha-breve) + combining smooth breathing is converted\n\t\tto alpha + combining smooth breathing by the entry_name replacements.\n\t\tIt must be re-combined to alpha-smooth breathing (ἀ) so that\n\
      \t\tallowSelfLink in [[Module:links]] will work properly. ]=]\n\tif self:getCode() == &quot;grc&quot; then\n\t\ttext = mw.ustring.toNFC(text)\n\tend\n\t\n\treturn text\nend\n\n\n-- Add to data tables?\nlocal has_dotted_undotted_i = {\n\t[&quot;az&quot;]\
      \ = true,\n\t[&quot;crh&quot;] = true,\n\t[&quot;gag&quot;] = true,\n\t[&quot;kaa&quot;] = true,\n\t[&quot;tt&quot;] = true,\n\t[&quot;tr&quot;] = true,\n\t[&quot;zza&quot;] = true,\n}\n\nfunction Language:makeSortKey(name, sc)\n\tif has_dotted_undotted_i[self:getCode()]\
      \ then\n\t\tname = mw.ustring.gsub(name, &quot;I&quot;, &quot;ı&quot;)\n\tend\n\t\n\tname = mw.ustring.lower(name)\n\t\n\t-- Remove initial hyphens and *\n\tlocal hyphens_regex = &quot;^[-־ـ*]+(.)&quot;\n\tname = mw.ustring.gsub(name, hyphens_regex, &quot;%1&quot;)\n\
      \t\n\t-- Remove parentheses, as long as they are either preceded or followed by something\n\tname = mw.ustring.gsub(name, &quot;(.)[()]+&quot;, &quot;%1&quot;)\n\tname = mw.ustring.gsub(name, &quot;[()]+(.)&quot;, &quot;%1&quot;)\n\t\n\t-- If there are\
      \ language-specific rules to generate the key, use those\n\tif type(self._rawData.sort_key) == &quot;table&quot; then\n\t\tfor i, from in ipairs(self._rawData.sort_key.from) do\n\t\t\tlocal to = self._rawData.sort_key.to[i] or &quot;&quot;\n\t\t\tname\
      \ = mw.ustring.gsub(name, from, to)\n\t\tend\n\telseif type(self._rawData.sort_key) == &quot;string&quot; then\n\t\tname = require(&quot;Module:&quot; .. self._rawData.sort_key).makeSortKey(name, self:getCode(), sc and sc:getCode())\n\tend\n\t\n\tif has_dotted_undotted_i[self:getCode()]\
      \ then\n\t\tname = mw.ustring.gsub(name, &quot;i&quot;, &quot;İ&quot;)\n\tend\n\t\n\treturn mw.ustring.upper(name)\nend\n\nfunction Language:overrideManualTranslit()\n\tif self._rawData.override_translit then\n\t\treturn true\n\telse\n\t\treturn false\n\
      \tend\nend\n\n\nfunction Language:transliterate(text, sc, module_override)\n\tif not ((module_override or self._rawData.translit_module) and text) then\n\t\treturn nil\n\tend\n\t\n\tif module_override then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;module_override&quot;)\n\
      \tend\n\t\n\treturn require(&quot;Module:&quot; .. (module_override or self._rawData.translit_module)).tr(text, self:getCode(), sc and sc:getCode() or nil)\nend\n\nfunction Language:hasTranslit()\n\treturn self._rawData.translit_module and true or false\n\
      end\n\n\nfunction Language:link_tr()\n\treturn self._rawData.link_tr and true or false\nend\n\n\nfunction Language:toJSON()\n\tlocal entryNamePatterns = nil\n\t\n\tif self._rawData.entry_name then\n\t\tentryNamePatterns = {}\n\t\t\n\t\tfor i, from in ipairs(self._rawData.entry_name.from)\
      \ do\n\t\t\tlocal to = self._rawData.entry_name.to[i] or &quot;&quot;\n\t\t\ttable.insert(entryNamePatterns, { from = from, to = to })\n\t\tend\n\tend\n\t\n\tlocal ret = {\n\t\tancestors = self._rawData.ancestors,\n\t\tcanonicalName = self:getCanonicalName(),\n\
      \t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\tentryNamePatterns = entryNamePatterns,\n\t\tfamily = self._rawData.family,\n\t\totherNames = self:getOtherNames(),\n\t\tscripts = self._rawData.scripts,\n\t\ttype = self:getType(),\n\
      \t\twikimediaLanguages = self._rawData.wikimedia_codes,\n\t}\n\t\n\treturn require(&quot;Module:JSON&quot;).toJSON(ret)\nend\n\n\n-- Do NOT use this method!\n-- All uses should be pre-approved on the talk page!\nfunction Language:getRawData()\n\treturn\
      \ self._rawData\nend\n\nLanguage.__index = Language\n\n\nfunction export.getDataModuleName(code)\n\tif code:find(&quot;^[a-z][a-z]$&quot;) then\n\t\treturn &quot;languages/data2&quot;\n\telseif code:find(&quot;^[a-z][a-z][a-z]$&quot;) then\n\t\tlocal prefix\
      \ = code:sub(1, 1)\n\t\treturn &quot;languages/data3/&quot; .. prefix\n\telseif code:find(&quot;^[a-z-]+$&quot;) then\n\t\treturn &quot;languages/datax&quot;\n\telse\n\t\treturn nil\n\tend\nend\n\n\nlocal function getRawLanguageData(code)\n\tlocal modulename\
      \ = export.getDataModuleName(code)\n\treturn modulename and mw.loadData(&quot;Module:&quot; .. modulename)[code] or nil\nend\n\n\nfunction export.makeObject(code, data)\n\tif data and data.deprecated then\n\t\trequire(&quot;Module:debug&quot;).track {\n\
      \t\t\t&quot;languages/deprecated&quot;,\n\t\t\t&quot;languages/deprecated/&quot; .. code\n\t\t}\n\tend\n\t\n\treturn data and setmetatable({ _rawData = data, _code = code }, Language) or nil\nend\n\n\nfunction export.getByCode(code)\n\tif type(code) ~=\
      \ &quot;string&quot; then\n\t\terror(&quot;The function getByCode expects a string as its first argument, but received &quot; .. (code == nil and &quot;nil&quot; or &quot;a &quot; .. type(code)) .. &quot;.&quot;)\n\tend\n\t\n\treturn export.makeObject(code,\
      \ getRawLanguageData(code))\nend\n\n\nfunction export.getByName(name)\n\tlocal byName = mw.loadData(&quot;Module:languages/by name&quot;)\n\tlocal code = byName.all and byName.all[name] or byName[name]\n\t\n\tif not code then\n\t\treturn nil\n\tend\n\t\
      \n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.getByCanonicalName(name)\n\tlocal byName = mw.loadData(&quot;Module:languages/canonical names&quot;)\n\tlocal code = byName and byName[name]\n\t\n\tif not code then\n\
      \t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.iterateAll()\n\tmw.incrementExpensiveFunctionCount()\n\tlocal m_data = mw.loadData(&quot;Module:languages/alldata&quot;)\n\tlocal func, t, var\
      \ = pairs(m_data)\n\t\n\treturn function()\n\t\tlocal code, data = func(t, var)\n\t\treturn export.makeObject(code, data)\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2017-08-24T22:06:44.615Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aparameters&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44073 t=1503612404489873
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:44 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1282.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1055 pass, cp3032 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 105229819, 234029434, 257747389
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4797340\" pageid=\"4797340\" ns=\"828\" title=\"Module:parameters\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-07-19T18:45:15Z\" comment=\"tracking for aliases that are\
      \ required, which should be disallowed now\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\n-- A helper function to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nlocal plain\
      \ = require(&quot;Module:string&quot;).pattern_escape\n\n-- A helper function that removes empty numeric indexes in a table,\n-- so that the values are tightly packed like in a normal Lua table.\nlocal remove_holes = require(&quot;Module:table&quot;).compressSparseArray\n\
      \nfunction export.process(args, params, return_unknown)\n\tlocal args_new = {}\n\t\n\t-- Process parameters for specific properties\n\tlocal required = {}\n\tlocal patterns = {}\n\tlocal list_from_index = nil\n\t\n\tfor name, param in pairs(params) do\n\
      \t\tif param.required then\n\t\t\tif param.alias_of then\n\t\t\t\trequire(&quot;Module:debug&quot;).track(&quot;parameters/required alias&quot;)\n\t\t\tend\n\t\t\trequired[name] = true\n\t\tend\n\t\t\n\t\tif param.list then\n\t\t\tif param.default ~= nil\
      \ then\n\t\t\t\targs_new[type(name) == &quot;string&quot; and mw.ustring.gsub(name, &quot;=&quot;, &quot;&quot;) or name] = {param.default, maxindex = 1}\n\t\t\telse\n\t\t\t\targs_new[type(name) == &quot;string&quot; and mw.ustring.gsub(name, &quot;=&quot;,\
      \ &quot;&quot;) or name] = {maxindex = 0}\n\t\t\tend\n\t\t\t\n\t\t\tif type(param.list) == &quot;string&quot; then\n\t\t\t\t-- If the list property is a string, then it represents the name\n\t\t\t\t-- to be used as the prefix for list items. This is for\
      \ use with lists\n\t\t\t\t-- where the first item is a numbered parameter and the\n\t\t\t\t-- subsequent ones are named, such as 1, pl2, pl3.\n\t\t\t\tif mw.ustring.match(param.list, &quot;=&quot;) then\n\t\t\t\t\tpatterns[&quot;^&quot; .. mw.ustring.gsub(plain(param.list),\
      \ &quot;=&quot;, &quot;(%%d+)&quot;) .. &quot;$&quot;] = name\n\t\t\t\telse\n\t\t\t\t\tpatterns[&quot;^&quot; .. plain(param.list) .. &quot;(%d+)$&quot;] = name\n\t\t\t\tend\n\t\t\telseif type(name) == &quot;number&quot; then\n\t\t\t\t-- If the name is\
      \ a number, then all indexed parameters from\n\t\t\t\t-- this number onwards go in the list.\n\t\t\t\tlist_from_index = name\n\t\t\telse\n\t\t\t\tif mw.ustring.match(name, &quot;=&quot;) then\n\t\t\t\t\tpatterns[&quot;^&quot; .. mw.ustring.gsub(plain(name),\
      \ &quot;=&quot;, &quot;(%%d+)&quot;) .. &quot;$&quot;] = mw.ustring.gsub(name, &quot;=&quot;, &quot;&quot;)\n\t\t\t\telse\n\t\t\t\t\tpatterns[&quot;^&quot; .. plain(name) .. &quot;(%d+)$&quot;] = mw.ustring.gsub(name, &quot;=&quot;, &quot;&quot;)\n\t\t\
      \t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif mw.ustring.match(name, &quot;=&quot;) then\n\t\t\t\tparams[mw.ustring.gsub(name, &quot;=&quot;, &quot;&quot;)] = params[name]\n\t\t\t\tparams[name] = nil\n\t\t\tend\n\t\telseif param.default ~= nil then\n\t\t\targs_new[name]\
      \ = param.default\n\t\tend\n\tend\n\t\n\t-- Process the arguments\n\tlocal args_unknown = {}\n\t\n\tfor name, val in pairs(args) do\n\t\tlocal index = nil\n\t\t\n\t\tif type(name) == &quot;number&quot; then\n\t\t\tif list_from_index ~= nil and name &gt;=\
      \ list_from_index then\n\t\t\t\tindex = name - list_from_index + 1\n\t\t\t\tname = list_from_index\n\t\t\tend\n\t\telse\n\t\t\t-- Does this argument name match a pattern?\n\t\t\tfor pattern, pname in pairs(patterns) do\n\t\t\t\tindex = mw.ustring.match(name,\
      \ pattern)\n\t\t\t\t\n\t\t\t\t-- It matches, so store the parameter name and the\n\t\t\t\t-- numeric index extracted from the argument name.\n\t\t\t\tif index then\n\t\t\t\t\tindex = tonumber(index)\n\t\t\t\t\tname = pname\n\t\t\t\t\tbreak\n\t\t\t\tend\n\
      \t\t\tend\n\t\tend\n\t\t\n\t\t-- If no index was found, use 1 as the default index.\n\t\t-- This makes list parameters like g, g2, g3 put g at index 1.\n\t\tindex = index or 1\n\t\t\n\t\tlocal param = params[name]\n\t\t\n\t\t-- If the argument is not in\
      \ the list of parameters, trigger an error.\n\t\t-- return_unknown suppresses the error, and stores it in a separate list instead.\n\t\tif not param then\n\t\t\tif return_unknown then\n\t\t\t\targs_unknown[name] = val\n\t\t\telse\n\t\t\t\terror(&quot;The\
      \ parameter \\&quot;&quot; .. name .. &quot;\\&quot; is not used by this template.&quot;)\n\t\t\tend\n\t\telse\n\t\t\t-- Remove leading and trailing whitespace\n\t\t\tval = mw.text.trim(val)\n\t\t\t\n\t\t\t-- Empty string is equivalent to nil unless allow_empty\
      \ is true.\n\t\t\tif val == &quot;&quot; and not param.allow_empty then\n\t\t\t\tval = nil\n\t\t\tend\n\t\t\t\n\t\t\t-- Convert to proper type if necessary.\n\t\t\tif param.type == &quot;boolean&quot; then\n\t\t\t\tval = not (not val or val == &quot;&quot;\
      \ or val == &quot;0&quot; or val == &quot;no&quot; or val == &quot;n&quot; or val == &quot;false&quot;)\n\t\t\telseif param.type == &quot;number&quot; and val ~= nil then\n\t\t\t\tval = tonumber(val)\n\t\t\tend\n\t\t\t\n\t\t\t-- Can't use &quot;if val&quot;\
      \ alone, because val may be a boolean false.\n\t\t\tif val ~= nil then\n\t\t\t\t-- Mark it as no longer required, as it is present.\n\t\t\t\trequired[param.alias_of or name] = nil\n\t\t\t\t\n\t\t\t\t-- Store the argument value.\n\t\t\t\tif param.list then\n\
      \t\t\t\t\t-- If the parameter is an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\t\targs_new[name][index] = val\n\t\t\t\t\t\t\n\t\t\t\t\
      \t\t-- Store the highest index we find.\n\t\t\t\t\t\targs_new[name].maxindex = math.max(index, args_new[name].maxindex)\n\t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\
      \t\t\t\t\targs_new[param.alias_of][index] = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest index we find.\n\t\t\t\t\t\t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of]\
      \ = val\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\t-- If the parameter is an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\
      \t\targs_new[name] = val\n\t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\t\t\t\t\targs_new[param.alias_of][1] = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest\
      \ index we find.\n\t\t\t\t\t\t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of] = val\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\
      \t\n\t-- The required table should now be empty.\n\t-- If any entry remains, trigger an error, unless we're in the template namespace.\n\tif mw.title.getCurrentTitle().nsText ~= &quot;Template&quot; then\n\t\tlocal list = {}\n\t\tfor name, param in pairs(required)\
      \ do\n\t\t\ttable.insert(list, name)\n\t\tend\n\t\t\n\t\tlocal count = #list\n\t\tif count == 1 then\n\t\t\terror('The parameter &quot;' .. list[1] .. '&quot; is required.', 2)\n\t\telseif count == 2 then\n\t\t\terror('The parameters &quot;' .. table.concat(list,\
      \ '&quot; and &quot;') .. '&quot; are required.', 2)\n\t\telseif count &gt; 2 then\n\t\t\terror('The parameters &quot;' .. mw.text.listToText(list, '&quot;, &quot;', '&quot;, and &quot;') .. '&quot; are required.', 2)\n\t\tend\n\tend\n\t\n\t-- Remove holes\
      \ in any list parameters if needed.\n\tfor name, val in pairs(args_new) do\n\t\tif type(val) == &quot;table&quot; and not params[name].allow_holes then\n\t\t\targs_new[name] = remove_holes(val)\n\t\tend\n\tend\n\t\n\tif return_unknown then\n\t\treturn\
      \ args_new, args_unknown\n\telse\n\t\treturn args_new\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2017-08-24T22:06:44.838Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Astring&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=61864 t=1503612404684533
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:44 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1203.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1055 pass, cp3040 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 109288986, 516308568, 272734463
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4099547\" pageid=\"4099547\" ns=\"828\" title=\"Module:string\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-08-08T19:29:00Z\" comment=\"description\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local str = {}\n\n--[[\nlen\n\nThis function returns the length of the target string.\n\nUsage:\n{{#invoke:string|len|target_string|}}\nOR\n{{#invoke:string|len|s=target_string}}\n\nParameters\n\
      \    s: The string whose length to report\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from the target string.  \n]]\nfunction str.len( frame )\n    local new_args = str._getParameters( frame.args,\
      \ {'s'} );\n    local s = new_args['s'] or '';\n    return mw.ustring.len( s )\nend\n\n--[[\nsub\n\nThis function returns a substring of the target string at specified indices.\n\nUsage:\n{{#invoke:string|sub|target_string|start_index|end_index}}\nOR\n\
      {{#invoke:string|sub|s=target_string|i=start_index|j=end_index}}\n\nParameters\n    s: The string to return a subset of\n    i: The fist index of the substring to return, defaults to 1.\n    j: The last index of the string to return, defaults to the last\
      \ character.\n    \nThe first character of the string is assigned an index of 1.  If either i or j\nis a negative value, it is interpreted the same as selecting a character by \ncounting from the end of the string.  Hence, a value of -1 is the same as\
      \ \nselecting the last character of the string.\n\nIf the requested indices are out of range for the given string, an error is \nreported.\n]]\nfunction str.sub( frame )\n    local new_args = str._getParameters( frame.args, { 's', 'i', 'j' } );\n    local\
      \ s = new_args['s'] or '';\n    local i = tonumber( new_args['i'] ) or 1;\n    local j = tonumber( new_args['j'] ) or -1;\n    \n    local len = mw.ustring.len( s );\n\n    -- Convert negatives for range checking\n    if i &lt; 0 then\n        i = len\
      \ + i + 1;\n    end\n    if j &lt; 0 then\n        j = len + j + 1;\n    end\n    \n    if i &gt; len or j &gt; len or i &lt; 1 or j &lt; 1 then\n        return str._error( 'String subset index out of range' );\n    end\n    if j &lt; i then\n        return\
      \ str._error( 'String subset indices out of order' );\n    end\n    \n    return mw.ustring.sub( s, i, j )\nend\n\n--[[\nThis function implements that features of {{str sub old}} and is kept in order\nto maintain these older templates.\n]]\nfunction str.sublength(\
      \ frame )\n    local i = tonumber( frame.args.i ) or 0\n    local len = tonumber( frame.args.len )\n    return mw.ustring.sub( frame.args.s, i + 1, len and ( i + len ) )\nend\n\n--[[\nmatch\n\nThis function returns a substring from the source string that\
      \ matches a \nspecified pattern.\n\nUsage:\n{{#invoke:string|match|source_string|pattern_string|start_index|match_number|plain_flag|nomatch_output}}\nOR\n{{#invoke:string|pos|s=source_string|pattern=pattern_string|start=start_index\n    |match=match_number|plain=plain_flag|nomatch=nomatch_output}}\n\
      \nParameters\n    s: The string to search\n    pattern: The pattern or string to find within the string\n    start: The index within the source string to start the search.  The first\n        character of the string has index 1.  Defaults to 1.\n    match:\
      \ In some cases it may be possible to make multiple matches on a single \n        string.  This specifies which match to return, where the first match is \n        match= 1.  If a negative number is specified then a match is returned \n        counting\
      \ from the last match.  Hence match = -1 is the same as requesting\n        the last match.  Defaults to 1.\n    plain: A flag indicating that the pattern should be understood as plain\n        text.  Defaults to false.\n    nomatch: If no match is found,\
      \ output the &quot;nomatch&quot; value rather than an error.\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from each string.  In some circumstances this is desirable, in \nother cases one\
      \ may want to preserve the whitespace.\n\nIf the match_number or start_index are out of range for the string being queried, then\nthis function generates an error.  An error is also generated if no match is found.\nIf one adds the parameter ignore_errors=true,\
      \ then the error will be suppressed and \nan empty string will be returned on any failure.\n\nFor information on constructing Lua patterns, a form of [regular expression], see:\n\n* http://www.lua.org/manual/5.1/manual.html#5.4.1\n* http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Patterns\n\
      * http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Ustring_patterns\n\n]]\nfunction str.match( frame )\n    local new_args = str._getParameters( frame.args, {'s', 'pattern', 'start', 'match', 'plain', 'nomatch'} );\n    local s =\
      \ new_args['s'] or '';\n    local start = tonumber( new_args['start'] ) or 1;\n    local plain_flag = str._getBoolean( new_args['plain'] or false );\n    local pattern = new_args['pattern'] or '';\n    local match_index = math.floor( tonumber(new_args['match'])\
      \ or 1 );\n    local nomatch = new_args['nomatch'];\n    \n    if s == '' then\n        return str._error( 'Target string is empty' );\n    end\n    if pattern == '' then\n        return str._error( 'Pattern string is empty' );\n    end\n    if math.abs(start)\
      \ &lt; 1 or math.abs(start) &gt; mw.ustring.len( s ) then\n        return str._error( 'Requested start is out of range' );\n    end\n    if match_index == 0 then\n        return str._error( 'Match index is out of range' );\n    end\n    if plain_flag then\n\
      \        pattern = str.pattern_escape( pattern );\n    end\n    \n    local result\n    if match_index == 1 then\n        -- Find first match is simple case\n        result = mw.ustring.match( s, pattern, start )\n    else\n        if start &gt; 1 then\n\
      \            s = mw.ustring.sub( s, start );\n        end\n        \n        local iterator = mw.ustring.gmatch(s, pattern);\n        if match_index &gt; 0 then\n            -- Forward search\n            for w in iterator do\n                match_index\
      \ = match_index - 1;\n                if match_index == 0 then\n                    result = w;\n                    break;\n                end\n            end    \n        else\n            -- Reverse search\n            local result_table = {};\n \
      \           local count = 1;\n            for w in iterator do\n                result_table[count] = w;\n                count = count + 1;\n            end\n            \n            result = result_table[ count + match_index ];            \n       \
      \ end\n    end        \n    \n    if result == nil then\n        if nomatch == nil then\n            return str._error( 'Match not found' );\n        else\n            return nomatch;\n        end\n    else\n        return result;\n    end\nend\n\n--[[\n\
      pos\n\nThis function returns a single character from the target string at position pos.\n\nUsage:\n{{#invoke:string|pos|target_string|index_value}}\nOR\n{{#invoke:string|pos|target=target_string|pos=index_value}}\n\nParameters\n    target: The string to\
      \ search\n    pos: The index for the character to return\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from the target string.  In some circumstances this is desirable, in \nother cases one\
      \ may want to preserve the whitespace.\n\nThe first character has an index value of 1.\n\nIf one requests a negative value, this function will select a character by counting backwards \nfrom the end of the string.  In other words pos = -1 is the same as\
      \ asking for the last character.\n\nA requested value of zero, or a value greater than the length of the string returns an error.\n]]\nfunction str.pos( frame )\n    local new_args = str._getParameters( frame.args, {'target', 'pos'} );\n    local target_str\
      \ = new_args['target'] or '';\n    local pos = tonumber( new_args['pos'] ) or 0;\n\n    if pos == 0 or math.abs(pos) &gt; mw.ustring.len( target_str ) then\n        return str._error( 'String index out of range' );\n    end    \n    \n    return mw.ustring.sub(\
      \ target_str, pos, pos );\nend\n\n--[[\nstr_find\n\nThis function duplicates the behavior of {{str_find}}, including all of its quirks.\nThis is provided in order to support existing templates, but is NOT RECOMMENDED for \nnew code and templates.  New\
      \ code is recommended to use the &quot;find&quot; function instead.\n\nReturns the first index in &quot;source&quot; that is a match to &quot;target&quot;.  Indexing is 1-based,\nand the function returns -1 if the &quot;target&quot; string is not present\
      \ in &quot;source&quot;.\n\nImportant Note: If the &quot;target&quot; string is empty / missing, this function returns a\nvalue of &quot;1&quot;, which is generally unexpected behavior, and must be accounted for\nseparatetly.\n]]\nfunction str.str_find(\
      \ frame )\n    local new_args = str._getParameters( frame.args, {'source', 'target'} );\n    local source_str = new_args['source'] or '';\n    local target_str = new_args['target'] or '';\n\n    if target_str == '' then\n        return 1;\n    end    \n\
      \    \n    local start = mw.ustring.find( source_str, target_str, 1, true )\n    if start == nil then\n        start = -1\n    end\n    \n    return start\nend\n\n--[[\nfind\n\nThis function allows one to search for a target string or pattern within another\n\
      string.\n\nUsage:\n{{#invoke:string|find|source_str|target_string|start_index|plain_flag}}\nOR\n{{#invoke:string|find|source=source_str|target=target_str|start=start_index|plain=plain_flag}}\n\nParameters\n    source: The string to search\n    target:\
      \ The string or pattern to find within source\n    start: The index within the source string to start the search, defaults to 1\n    plain: Boolean flag indicating that target should be understood as plain\n        text and not as a Lua style regular expression,\
      \ defaults to true\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from the parameter.  In some circumstances this is desirable, in \nother cases one may want to preserve the whitespace.\n\n\
      This function returns the first index &gt;= &quot;start&quot; where &quot;target&quot; can be found \nwithin &quot;source&quot;.  Indices are 1-based.  If &quot;target&quot; is not found, then this \nfunction returns an empty string.  If either &quot;source&quot;\
      \ or &quot;target&quot; are missing / empty, this\nfunction also returns an empty string.\n\nThis function should be safe for UTF-8 strings.\n]]\nfunction str.find(frame)\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {required = true},\n\
      \t\t[3] = {type = &quot;number&quot;},\n\t\t[4] = {type = &quot;boolean&quot;},\n\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame.args, params)\n\t\n\treturn mw.ustring.find(args[1], args[2], args[3], args[4])\nend\n\n--[[\n\
      replace\n\nThis function allows one to replace a target string or pattern within another\nstring.\n\nUsage:\n{{#invoke:string|replace|source_str|pattern_string|replace_string|replacement_count|plain_flag}}\nOR\n{{#invoke:string|replace|source=source_string|pattern=pattern_string|replace=replace_string|\n\
      \   count=replacement_count|plain=plain_flag}}\n\nParameters\n    source: The string to search\n    pattern: The string or pattern to find within source\n    replace: The replacement text\n    count: The number of occurences to replace, defaults to all.\n\
      \    plain: Boolean flag indicating that pattern should be understood as plain\n        text and not as a Lua style regular expression, defaults to true \n]]\nfunction str.replace( frame )\n    local new_args = str._getParameters( frame.args, {'source',\
      \ 'pattern', 'replace', 'count', 'plain' } ); \n    local source_str = new_args['source'] or '';\n    local pattern = new_args['pattern'] or '';\n    local replace = new_args['replace'] or '';\n    local count = tonumber( new_args['count'] );\n    local\
      \ plain = new_args['plain'] or true;\n        \n    if source_str == '' or pattern == '' then\n        return source_str;\n    end    \n    plain = str._getBoolean( plain );\n\n    if plain then\n        pattern = str.pattern_escape( pattern );\n     \
      \   replace = mw.ustring.gsub( replace, &quot;%%&quot;, &quot;%%%%&quot; ); --Only need to escape replacement sequences.\n    end\n    \n    local result;\n\n    if count ~= nil then\n        result = mw.ustring.gsub( source_str, pattern, replace, count\
      \ );\n    else\n        result = mw.ustring.gsub( source_str, pattern, replace );\n    end        \n\n    return result;\nend\n\n\nfunction str.gsub(frame)\n\tlocal params = {\n\t\t[1] = {required = true, allow_empty = true},\n\t\t[2] = {required = true,\
      \ allow_empty = true},\n\t\t[3] = {required = true, allow_empty = true},\n\t\t[4] = {type = &quot;number&quot;},\n\t\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame.args, params)\n\t\n\treturn (mw.ustring.gsub(args[1], args[2],\
      \ args[3], args[4]))\nend\n\n\n--[[ \n    simple function to pipe string.rep to templates.\n]]\n\nfunction str.rep( frame )\n    local repetitions = tonumber( frame.args[2] )\n    if not repetitions then \n        return str._error( 'function rep expects\
      \ a number as second parameter, received &quot;' .. ( frame.args[2] or '' ) .. '&quot;' )\n    end\n    return string.rep( frame.args[1] or '', repetitions )\nend\n\nfunction str.lower( frame )\n\tlocal text = frame.args[1] or ''\n\treturn mw.ustring.lower(\
      \ text )\nend\nstr.lc = str.lower\n\n--[[\nHelper function that populates the argument list given that user may need to use a mix of\nnamed and unnamed parameters.  This is relevant because named parameters are not\nidentical to unnamed parameters due\
      \ to string trimming, and when dealing with strings\nwe sometimes want to either preserve or remove that whitespace depending on the application.\n]]\nfunction str._getParameters( frame_args, arg_list )\n    local new_args = {};\n    local index = 1;\n\
      \    local value;\n    \n    for i,arg in ipairs( arg_list ) do\n        value = frame_args[arg]\n        if value == nil then\n            value = frame_args[index];\n            index = index + 1;\n        end\n        new_args[arg] = value;\n    end\n\
      \    \n    return new_args;\nend        \n\n--[[\nHelper function to handle error messages.\n]]\nfunction str._error( error_str )\n    local frame = mw.getCurrentFrame();\n    local error_category = frame.args.error_category or 'Errors reported by Module\
      \ String';\n    local ignore_errors = frame.args.ignore_errors or false;\n    local no_category = frame.args.no_category or false;\n    \n    if str._getBoolean(ignore_errors) then\n        return '';\n    end\n    \n    local error_str = '&lt;strong class=&quot;error&quot;&gt;String\
      \ Module Error: ' .. error_str .. '&lt;/strong&gt;';\n    if error_category ~= '' and not str._getBoolean( no_category ) then\n        error_str = '[[Category:' .. error_category .. ']]' .. error_str;\n    end        \n    \n    return error_str;\nend\n\
      \n--[[\nHelper Function to interpret boolean strings\n]]\nfunction str._getBoolean( boolean_str )\n    local boolean_value;\n    \n    if type( boolean_str ) == 'string' then\n        boolean_str = boolean_str:lower();\n        if boolean_str == 'false'\
      \ or boolean_str == 'no' or boolean_str == '0' \n                or boolean_str == '' then\n            boolean_value = false;\n        else\n            boolean_value = true;\n        end    \n    elseif type( boolean_str ) == 'boolean' then\n       \
      \ boolean_value = boolean_str;\n    else\n        error( 'No boolean value found' );\n    end    \n    return boolean_value\nend\n\n--[[\nHelper function that escapes all pattern characters – ().%+-*?[^$] – so that they will be treated \nas plain text.\n\
      ]]\nfunction str.pattern_escape( pattern_str )\n    local invoked = false\n    \n    if type(pattern_str) == &quot;table&quot; then\n    \tif pattern_str.args then\n    \t\tlocal frame = pattern_str\n    \t\tinvoked = true\n    \t\t\n    \t\tif frame.args[1]\
      \ then\n    \t\t\tpattern_str = frame.args[1]\n    \t\telse\n    \t\t\tpattern_str = frame:getParent().args[1]\n    \t\tend\n    \telse\n    \t\terror(&quot;First argument to pattern_escape should be a string, a number, or a frame object.&quot;)\n    \t\
      end\n    elseif not ( type(pattern_str) == &quot;string&quot; or type(pattern_str) == &quot;number&quot; ) then\n    \terror(&quot;First argument to pattern_escape should be a string or a number.&quot;)\n    end\n    \n    if invoked then\n    \tlocal\
      \ escaped = mw.ustring.gsub( pattern_str, &quot;([%(%)%.%%%+%-%*%?%[%^%$%]])&quot;, &quot;%%%1&quot; )\n    \treturn escaped\n    else\n    \treturn mw.ustring.gsub( pattern_str, &quot;([%(%)%.%%%+%-%*%?%[%^%$%]])&quot;, &quot;%%%1&quot; );\n    end\n\
      end\n\nfunction str.count(text, pattern, plain)\n\tif not ( type(text) == &quot;string&quot; or type(text) == &quot;number&quot; ) then\n\t\terror('The first argument to the function &quot;count&quot; must be a string or a number, not a ' .. type(text)\
      \ .. '.')\n\tend\n\t\n\tif not ( type(pattern) == &quot;string&quot; or type(pattern) == &quot;number&quot; ) then\n\t\terror('The first argument to the function &quot;count&quot; must be a string or a number, not a ' .. type(text) .. '.')\n\tend\n\t\n\
      \tif plain then\n\t\tpattern = str.pattern_escape(pattern)\n\tend\n\t\n\tlocal _, count = mw.ustring.gsub(text, pattern, &quot;&quot;)\n\t\n\treturn count\nend\n\nfunction str.plain_gsub(text, pattern, replacement)\n\tlocal invoked = false\n\t\n\tif type(text)\
      \ == &quot;table&quot; then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = {},\n\t\t\t\t[2] = {},\n\t\t\t\t[3] = { allow_empty = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(&quot;Module:parameters&quot;).process(frame.args,\
      \ params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\t\t\treplacement = args[3]\n\t\telse\n\t\t\terror(&quot;If the first argument to plain_gsub is a table, it should be a frame object.&quot;)\n\t\tend\n\telse\n\t\tif not ( type(pattern)\
      \ == &quot;string&quot; or type(pattern) == &quot;number&quot; ) then\n\t\t\terror(&quot;The second argument to plain_gsub should be a string or a number.&quot;)\n\t\tend\n\t\t\n\t\tif not ( type(replacement) == &quot;string&quot; or type(replacement)\
      \ == &quot;number&quot; ) then\n\t\t\terror(&quot;The third argument to plain_gsub should be a string or a number.&quot;)\n\t\tend\n\tend\n\t\n\tpattern = str.pattern_escape(pattern)\n\t\n\tif invoked then\n\t\ttext = mw.ustring.gsub(text, pattern, replacement)\n\
      \t\treturn text\n\telse\n\t\treturn mw.ustring.gsub(text, pattern, replacement)\n\tend\nend\n\nfunction str.matchToArray(text, pattern)\n\tlocal matches = {}\n\t\n\tlocal invoked = false\n\t\n\tif type(text) == &quot;table&quot; then\n\t\tinvoked = true\n\
      \t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = { required = true },\n\t\t\t\t[2] = { required = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(&quot;Module:parameters&quot;).process(frame.args,\
      \ params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\t\telse\n\t\t\terror(&quot;If the first argument to plain_gsub is a table, it should be a frame object.&quot;)\n\t\tend\n\telse\n\t\tif not ( type(pattern) == &quot;string&quot; or type(pattern)\
      \ == &quot;number&quot; ) then\n\t\t\terror(&quot;The second argument to plain_gsub should be a string or a number.&quot;)\n\t\tend\n\tend\n\t\n\tfor match in mw.ustring.gmatch(text, pattern) do\n\t\ttable.insert(matches, match)\n\tend\n\t\n\tif #matches\
      \ &gt; 0 then\n\t\tif invoked then\n\t\t\treturn table.concat(matches, &quot;, &quot;)\n\t\telse\n\t\t\treturn matches\n\t\tend\n\telse\n\t\tif invoked then\n\t\t\treturn &quot;&quot;\n\t\telse\n\t\t\treturn nil\n\t\tend\n\tend\nend\n\n--[[\n\tA function\
      \ to iterate through the matches found in a string.\n\tSimilar to mw.ustring.gmatch(), but its first return value is the number\n\tindicating the match's position in the list of all matches in the string,\n\tsomething like ipairs(), and it can't handle\
      \ multiple captures.\n\t\n\tInvoke thus:\n\t\n\tfor i, match in require(&quot;Module:string&quot;).imatch(text, pattern) do\n\t\t[ do something with i and capture ]\n\tend\n]]\nfunction str.imatch(text, pattern, start, plain)\n\tlocal i = 0\n\tlocal pos\
      \ = start or 0\n\treturn function()\n\t\ti = i + 1\n\t\tlocal _, j, match = mw.ustring.find(text, &quot;(&quot; .. pattern .. &quot;)&quot;, pos, plain)\n\t\tif match then\n\t\t\tpos = j + 1\n\t\t\treturn i, match\n\t\telse\n\t\t\treturn nil, nil\n\t\t\
      end\n\tend\nend\n\nreturn str</rev></revisions></page></pages></query></api>"
- recorded: 2017-08-24T22:06:45.023Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Atable&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=32887 t=1503612404908078
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:44 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1278.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1055 pass, cp3042 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 100213650, 571372680, 256765160
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"5122966\" pageid=\"5122966\" ns=\"828\" title=\"Module:table\"><revisions><rev user=\"JohnC5\" timestamp=\"2017-07-26T06:57:18Z\" comment=\"\" contentformat=\"text/plain\" contentmodel=\"\
      Scribunto\" xml:space=\"preserve\">--[[\n------------------------------------------------------------------------------------\n--                      table (formerly TableTools)                               --\n--                                    \
      \                                            --\n-- This module includes a number of functions for dealing with Lua tables.        --\n-- It is a meta-module, meant to be called from other Lua modules, and should     --\n-- not be called directly from\
      \ #invoke.                                           --\n------------------------------------------------------------------------------------\n--]]\n\nlocal libraryUtil = require('libraryUtil')\n\nlocal export = {}\n\n-- Define often-used variables and\
      \ functions.\nlocal floor = math.floor\nlocal infinity = math.huge\nlocal checkType = libraryUtil.checkType\n\n--[[\n------------------------------------------------------------------------------------\n-- isPositiveInteger\n--\n-- This function returns\
      \ true if the given value is a positive integer, and false\n-- if not. Although it doesn't operate on tables, it is included here as it is\n-- useful for determining whether a given table key is in the array part or the\n-- hash part of a table.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.isPositiveInteger(v)\n\tif type(v) == 'number' and v &gt;= 1 and floor(v) == v and v &lt; infinity then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- isNan\n--\n-- This function returns true if the given number is a NaN value, and false\n-- if not. Although it doesn't operate on tables, it is included here as it is\n-- useful for determining whether a value can be a valid table key. Lua will\n--\
      \ generate an error if a NaN is used as a table key.\n------------------------------------------------------------------------------------\n--]]\nfunction export.isNan(v)\n\tif type(v) == 'number' and tostring(v) == '-nan' then\n\t\treturn true\n\telse\n\
      \t\treturn false\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- shallowClone\n--\n-- This returns a clone of a table. The value returned is a new table, but all\n-- subtables and functions\
      \ are shared. Metamethods are respected, but the returned\n-- table will have no metatable of its own.\n------------------------------------------------------------------------------------\n--]]\nfunction export.shallowClone(t)\n\tlocal ret = {}\n\tfor\
      \ k, v in pairs(t) do\n\t\tret[k] = v\n\tend\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- removeDuplicates\n--\n-- This removes duplicate values from an array. Non-positive-integer\
      \ keys are\n-- ignored. The earliest value is kept, and all subsequent duplicate values are\n-- removed, but otherwise the array order is unchanged.\n------------------------------------------------------------------------------------\n--]]\nfunction export.removeDuplicates(t)\n\
      \tcheckType('removeDuplicates', 1, t, 'table')\n\tlocal isNan = export.isNan\n\tlocal ret, exists = {}, {}\n\tfor i, v in ipairs(t) do\n\t\tif isNan(v) then\n\t\t\t-- NaNs can't be table keys, and they are also unique, so we don't need to check existence.\n\
      \t\t\tret[#ret + 1] = v\n\t\telse\n\t\t\tif not exists[v] then\n\t\t\t\tret[#ret + 1] = v\n\t\t\t\texists[v] = true\n\t\t\tend\n\t\tend\t\n\tend\n\treturn ret\nend\t\t\t\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- numKeys\n--\n-- This takes a table and returns an array containing the numbers of any numerical\n-- keys that have non-nil values, sorted in numerical order.\n------------------------------------------------------------------------------------\n--]]\n\
      function export.numKeys(t)\n\tcheckType('numKeys', 1, t, 'table')\n\tlocal isPositiveInteger = export.isPositiveInteger\n\tlocal nums = {}\n\tfor k, v in pairs(t) do\n\t\tif isPositiveInteger(k) then\n\t\t\tnums[#nums + 1] = k\n\t\tend\n\tend\n\ttable.sort(nums)\n\
      \treturn nums\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- affixNums\n--\n-- This takes a table and returns an array containing the numbers of keys with the\n-- specified prefix and suffix. For\
      \ example, for the table\n-- {a1 = 'foo', a3 = 'bar', a6 = 'baz'} and the prefix &quot;a&quot;, affixNums will\n-- return {1, 3, 6}.\n------------------------------------------------------------------------------------\n--]]\nfunction export.affixNums(t,\
      \ prefix, suffix)\n\tcheckType('affixNums', 1, t, 'table')\n\tcheckType('affixNums', 2, prefix, 'string', true)\n\tcheckType('affixNums', 3, suffix, 'string', true)\n\n\tlocal function cleanPattern(s)\n\t\t-- Cleans a pattern so that the magic characters\
      \ ()%.[]*+-?^$ are interpreted literally.\n\t\ts = s:gsub('([%(%)%%%.%[%]%*%+%-%?%^%$])', '%%%1')\n\t\treturn s\n\tend\n\n\tprefix = prefix or ''\n\tsuffix = suffix or ''\n\tprefix = cleanPattern(prefix)\n\tsuffix = cleanPattern(suffix)\n\tlocal pattern\
      \ = '^' .. prefix .. '([1-9]%d*)' .. suffix .. '$'\n\n\tlocal nums = {}\n\tfor k, v in pairs(t) do\n\t\tif type(k) == 'string' then\t\t\t\n\t\t\tlocal num = mw.ustring.match(k, pattern)\n\t\t\tif num then\n\t\t\t\tnums[#nums + 1] = tonumber(num)\n\t\t\t\
      end\n\t\tend\n\tend\n\ttable.sort(nums)\n\treturn nums\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- numData\n--\n-- Given a table with keys like (&quot;foo1&quot;, &quot;bar1&quot;, &quot;foo2&quot;,\
      \ &quot;baz2&quot;), returns a table\n-- of subtables in the format \n-- { [1] = {foo = 'text', bar = 'text'}, [2] = {foo = 'text', baz = 'text'} }\n-- Keys that don't end with an integer are stored in a subtable named &quot;other&quot;.\n-- The compress\
      \ option compresses the table so that it can be iterated over with\n-- ipairs.\n------------------------------------------------------------------------------------\n--]]\nfunction export.numData(t, compress)\n\tcheckType('numData', 1, t, 'table')\n\t\
      checkType('numData', 2, compress, 'boolean', true)\n\tlocal ret = {}\n\tfor k, v in pairs(t) do\n\t\tlocal prefix, num = mw.ustring.match(tostring(k), '^([^0-9]*)([1-9][0-9]*)$')\n\t\tif num then\n\t\t\tnum = tonumber(num)\n\t\t\tlocal subtable = ret[num]\
      \ or {}\n\t\t\tif prefix == '' then\n\t\t\t\t-- Positional parameters match the blank string; put them at the start of the subtable instead.\n\t\t\t\tprefix = 1\n\t\t\tend\n\t\t\tsubtable[prefix] = v\n\t\t\tret[num] = subtable\n\t\telse\n\t\t\tlocal subtable\
      \ = ret.other or {}\n\t\t\tsubtable[k] = v\n\t\t\tret.other = subtable\n\t\tend\n\tend\n\tif compress then\n\t\tlocal other = ret.other\n\t\tret = export.compressSparseArray(ret)\n\t\tret.other = other\n\tend\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- compressSparseArray\n--\n-- This takes an array with one or more nil values, and removes the nil values\n-- while preserving the order, so that the array can be safely traversed with\n-- ipairs.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.compressSparseArray(t)\n\tcheckType('compressSparseArray', 1, t, 'table')\n\tlocal ret = {}\n\tlocal nums = export.numKeys(t)\n\tfor _, num in ipairs(nums) do\n\t\tret[#ret + 1] = t[num]\n\tend\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- sparseIpairs\n--\n-- This is an iterator for sparse arrays. It can be used like ipairs, but can\n-- handle nil values.\n------------------------------------------------------------------------------------\n--]]\nfunction export.sparseIpairs(t)\n\tcheckType('sparseIpairs',\
      \ 1, t, 'table')\n\tlocal nums = export.numKeys(t)\n\tlocal i = 0\n\tlocal lim = #nums\n\treturn function ()\n\t\ti = i + 1\n\t\tif i &lt;= lim then\n\t\t\tlocal key = nums[i]\n\t\t\treturn key, t[key]\n\t\telse\n\t\t\treturn nil, nil\n\t\tend\n\tend\n\
      end\n\n--[[\n------------------------------------------------------------------------------------\n-- size\n--\n-- This returns the size of a key/value pair table. It will also work on arrays,\n-- but for arrays it is more efficient to use the # operator.\n\
      ------------------------------------------------------------------------------------\n--]]\nfunction export.size(t)\n\tcheckType('size', 1, t, 'table')\n\tlocal i = 0\n\tfor k in pairs(t) do\n\t\ti = i + 1\n\tend\n\treturn i\nend\n\n--[[\nTakes table and\
      \ a value to be found.\nIf the value is in the array portion of the table, return true.\nIf the value is in the hashmap or not in the table, return false.\n]]\nfunction export.contains(list, x)\n\tfor _, v in ipairs(list) do\n\t\tif v == x then return\
      \ true end\n\tend\n\treturn false\nend\n\n--[[\nShallow copy\n]]\nfunction export.shallowcopy(orig)\n    local orig_type = type(orig)\n    local copy\n    if orig_type == 'table' then\n        copy = {}\n        for orig_key, orig_value in pairs(orig)\
      \ do\n            copy[orig_key] = orig_value\n        end\n    else -- number, string, boolean, etc\n        copy = orig\n    end\n    return copy\nend\n\n--[[\nRecursive deep copy function\n]]\nfunction export.deepcopy(orig)\n    local orig_type = type(orig)\n\
      \    local copy\n    if orig_type == 'table' then\n        copy = {}\n        for orig_key, orig_value in next, orig, nil do\n            copy[export.deepcopy(orig_key)] = export.deepcopy(orig_value)\n        end\n        setmetatable(copy, export.deepcopy(getmetatable(orig)))\n\
      \    else -- number, string, boolean, etc\n        copy = orig\n    end\n    return copy\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2017-08-24T22:06:45.298Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata2&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=35211 t=1503612405134470
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:45 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1052 pass, cp3031 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 291514465, 179483117, 265046853
    body: !!binary |-
      
- recorded: 2017-08-24T22:06:45.559Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata3%2Fg&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=29641 t=1503612405414327
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:45 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1234.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1068 pass, cp3031 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 800103961, 179483121, 273096799
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4206198\" pageid=\"4206198\" ns=\"828\" title=\"Module:languages/data3/g\"><revisions><rev user=\"Octahedron80\" timestamp=\"2017-08-20T02:26:40Z\" comment=\"\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local u = mw.ustring.char\n\n-- UTF-8 encoded strings for some commonly-used diacritics\nlocal GRAVE     = u(0x0300)\nlocal ACUTE     = u(0x0301)\nlocal CIRC      = u(0x0302)\nlocal TILDE \
      \    = u(0x0303)\nlocal MACRON    = u(0x0304)\nlocal BREVE     = u(0x0306)\nlocal DOTABOVE  = u(0x0307)\nlocal DIAER     = u(0x0308)\nlocal CARON     = u(0x030C)\nlocal DGRAVE    = u(0x030F)\nlocal INVBREVE  = u(0x0311)\nlocal DOTBELOW  = u(0x0323)\nlocal\
      \ RINGBELOW = u(0x0325)\nlocal CEDILLA   = u(0x0327)\nlocal RSQUO     = u(0x2019)\nlocal PSILI     = u(0x1FBD)\nlocal CORONIS   = u(0x1FBF)\n\n-- Puncuation to be used for standardChars field\nlocal PUNCTUATION = ' \\!\\#\\$\\%\\&amp;\\*\\+\\,\\-\\.\\\
      /\\:\\;\\&lt;\\=\\&gt;\\?\\@\\^\\_\\`\\|\\~\\'\\(\\)'\n\nlocal m = {}\n\nm[&quot;gaa&quot;] = { \n\tcanonicalName = &quot;Ga&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-kwa&quot;,\n}\n\nm[&quot;gab&quot;] = {\n\tcanonicalName = &quot;Gabri&quot;,\n\
      \totherNames = {&quot;Gabri&quot;, &quot;Southern Gabri&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cdc&quot;,\n}\n\nm[&quot;gac&quot;] = { \n\tcanonicalName = &quot;Mixed Great Andamanese&quot;,\n\totherNames = {&quot;Great Andamanese creole&quot;,\
      \ &quot;Great Andamanese&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;qfa-adm&quot;,\n}\n\nm[&quot;gad&quot;] = { -- not to be confused with gdk, gdg\n\tcanonicalName = &quot;Gaddang&quot;,\n\totherNames = {&quot;Cagayan&quot;},\n\tscripts\
      \ = {&quot;Latn&quot;},\n\tfamily = &quot;phi&quot;,\n}\n\nm[&quot;gae&quot;] = {\n\tcanonicalName = &quot;Warekena&quot;,\n\totherNames = {&quot;Guarequena&quot;, &quot;Arekena&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;awd-nwk&quot;,\n\
      }\n\nm[&quot;gaf&quot;] = {\n\tcanonicalName = &quot;Gende&quot;,\n\totherNames = {&quot;Gendeka&quot;, &quot;Gene&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;ngf&quot;,\n}\n\nm[&quot;gag&quot;] = {\n\tcanonicalName = &quot;Gagauz&quot;,\n\
      \tscripts = {&quot;Latn&quot;, &quot;Cyrl&quot;},\n\tfamily = &quot;trk-ogz&quot;,\n}\n\nm[&quot;gah&quot;] = {\n\tcanonicalName = &quot;Alekano&quot;,\n\totherNames = {&quot;Gahuku&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;paa-kag&quot;,\n\
      }\n\nm[&quot;gai&quot;] = {\n\tcanonicalName = &quot;Borei&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;paa&quot;,\n}\n\nm[&quot;gaj&quot;] = {\n\tcanonicalName = &quot;Gadsup&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;paa-kag&quot;,\n\
      }\n\nm[&quot;gak&quot;] = {\n\tcanonicalName = &quot;Gamkonora&quot;,\n}\n\nm[&quot;gal&quot;] = {\n\tcanonicalName = &quot;Galoli&quot;,\n\totherNames = {&quot;Galolen&quot;, &quot;Talur&quot;},\n}\n\nm[&quot;gam&quot;] = {\n\tcanonicalName = &quot;Kandawo&quot;,\n\
      }\n\nm[&quot;gan&quot;] = {\n\tcanonicalName = &quot;Gan&quot;,\n\tscripts = {&quot;Hani&quot;},\n\tfamily = &quot;zhx&quot;,\n\tancestors = {&quot;ltc&quot;},\n}\n\nm[&quot;gao&quot;] = {\n\tcanonicalName = &quot;Gants&quot;,\n}\n\nm[&quot;gap&quot;]\
      \ = {\n\tcanonicalName = &quot;Gal&quot;,\n}\n\nm[&quot;gaq&quot;] = {\n\tcanonicalName = &quot;Gata'&quot;,\n\tfamily = &quot;mun&quot;,\n}\n\nm[&quot;gar&quot;] = {\n\tcanonicalName = &quot;Galeya&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-ocw&quot;,\n\
      }\n\nm[&quot;gas&quot;] = {\n\tcanonicalName = &quot;Adiwasi Garasia&quot;,\n\tfamily = &quot;inc&quot;,\n}\n\nm[&quot;gat&quot;] = {\n\tcanonicalName = &quot;Kenati&quot;,\n}\n\nm[&quot;gau&quot;] = {\n\tcanonicalName = &quot;Kondekor&quot;,\n\totherNames\
      \ = {&quot;Gadaba&quot;, &quot;San Gadaba&quot;, &quot;Gadba&quot;, &quot;Sano&quot;, &quot;Kondekar&quot;, &quot;Kondkor&quot;, &quot;Konḍekor Gadaba&quot;, &quot;Mudhili Gadaba&quot;},\n\tfamily = &quot;dra&quot;,\n}\n\nm[&quot;gaw&quot;] = {\n\tcanonicalName\
      \ = &quot;Nobonob&quot;,\n\totherNames = {&quot;Garuh&quot;, &quot;Nobanob&quot;, &quot;Nobnob&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;paa&quot;,\n}\n\nm[&quot;gay&quot;] = {\n\tcanonicalName = &quot;Gayo&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;poz-nws&quot;,\n}\n\nm[&quot;gba&quot;] = {\n\tcanonicalName = &quot;Gbaya&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-sav&quot;,\n}\n\nm[&quot;gbb&quot;] = {\n\tcanonicalName = &quot;Kaytetye&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;aus-rnd&quot;,\n}\n\nm[&quot;gbd&quot;] = {\n\tcanonicalName = &quot;Karadjeri&quot;,\n\totherNames = {&quot;Garadjari&quot;, &quot;Karajarri&quot;},\n\tfamily = &quot;aus-pam&quot;,\n}\n\nm[&quot;gbe&quot;] = {\n\tcanonicalName = &quot;Niksek&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;paa&quot;,\n}\n\nm[&quot;gbf&quot;] = {\n\tcanonicalName = &quot;Gaikundi&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;paa&quot;,\n}\n\nm[&quot;gbg&quot;] = {\n\tcanonicalName = &quot;Gbanziri&quot;,\n\
      \totherNames = {&quot;Banziri&quot;, &quot;Gbandere&quot;, &quot;Gbanzili&quot;},\n\tfamily = &quot;nic-ubg&quot;,\n}\n\nm[&quot;gbh&quot;] = {\n\tcanonicalName = &quot;Defi Gbe&quot;,\n}\n\nm[&quot;gbi&quot;] = {\n\tcanonicalName = &quot;Galela&quot;,\n\
      }\n\nm[&quot;gbj&quot;] = {\n\tcanonicalName = &quot;Bodo Gadaba&quot;,\n\totherNames = {&quot;Gutob&quot;},\n\tfamily = &quot;mun&quot;,\n}\n\nm[&quot;gbk&quot;] = {\n\tcanonicalName = &quot;Gaddi&quot;,\n}\n\nm[&quot;gbl&quot;] = {\n\tcanonicalName =\
      \ &quot;Gamit&quot;,\n\tfamily = &quot;inc&quot;,\n}\n\nm[&quot;gbm&quot;] = {\n\tcanonicalName = &quot;Garhwali&quot;,\n\tscripts = {&quot;Deva&quot;},\n\tfamily = &quot;inc&quot;,\n\ttranslit_module = &quot;hi-translit&quot;,\n}\n\nm[&quot;gbn&quot;]\
      \ = {\n\tcanonicalName = &quot;Mo'da&quot;,\n}\n\nm[&quot;gbo&quot;] = {\n\tcanonicalName = &quot;Northern Grebo&quot;,\n}\n\nm[&quot;gbp&quot;] = {\n\tcanonicalName = &quot;Gbaya-Bossangoa&quot;,\n\totherNames = {&quot;Bossangoa&quot;, &quot;Gbaya of\
      \ Bossangoa&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-sav&quot;,\n}\n\nm[&quot;gbq&quot;] = {\n\tcanonicalName = &quot;Gbaya-Bozoum&quot;,\n\totherNames = {&quot;Bozom&quot;, &quot;Gbaya of Bozom&quot;, &quot;Gbaya-Bozom&quot;},\n\t\
      scripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-sav&quot;,\n}\n\nm[&quot;gbr&quot;] = {\n\tcanonicalName = &quot;Gbagyi&quot;,\n}\n\nm[&quot;gbs&quot;] = {\n\tcanonicalName = &quot;Gbesi Gbe&quot;,\n\tscripts = {&quot;Latn&quot;},\n}\n\nm[&quot;gbu&quot;]\
      \ = {\n\tcanonicalName = &quot;Gagadu&quot;,\n}\n\nm[&quot;gbv&quot;] = {\n\tcanonicalName = &quot;Gbanu&quot;,\n}\n\nm[&quot;gbw&quot;] = {\n\tcanonicalName = &quot;Gabi&quot;,\n\totherNames = {&quot;Gabi-Gabi&quot;, &quot;Gabi Gabi&quot;, &quot;Gubbi-Gubbi&quot;,\
      \ &quot;Gubbi Gubbi&quot;}, -- contrast xby\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;aus-pam&quot;,\n}\n\nm[&quot;gbx&quot;] = {\n\tcanonicalName = &quot;Eastern Xwla Gbe&quot;,\n}\n\nm[&quot;gby&quot;] = {\n\tcanonicalName = &quot;Gbari&quot;,\n\
      }\n\nm[&quot;gbz&quot;] = {\n\tcanonicalName = &quot;Zoroastrian Dari&quot;,\n\totherNames = {&quot;Behdināni&quot;, &quot;Gabri&quot;, &quot;Gavrŭni&quot;, &quot;Gabrōni&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;ira&quot;,\n}\n\nm[&quot;gcc&quot;]\
      \ = {\n\tcanonicalName = &quot;Mali&quot;,\n}\n\nm[&quot;gcd&quot;] = {\n\tcanonicalName = &quot;Ganggalida&quot;,\n}\n\nm[&quot;gce&quot;] = {\n\tcanonicalName = &quot;Galice&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;ath-pco&quot;,\n}\n\
      \nm[&quot;gcf&quot;] = {\n\tcanonicalName = &quot;Antillean Creole&quot;,\n\totherNames = {&quot;Antillean Creole French&quot;, &quot;Guadeloupean Creole&quot;, &quot;Guadeloupean Creole French&quot;, &quot;Saint Lucian Creole&quot;, &quot;Saint Lucian\
      \ Creole French&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;crp&quot;,\n\tancestors = {&quot;fr&quot;},\n}\n\nm[&quot;gcl&quot;] = {\n\tcanonicalName = &quot;Grenadian Creole English&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;crp&quot;,\n\
      }\n\nm[&quot;gcn&quot;] = {\n\tcanonicalName = &quot;Gaina&quot;,\n}\n\nm[&quot;gcr&quot;] = {\n\tcanonicalName = &quot;Guianese Creole&quot;,\n}\n\nm[&quot;gct&quot;] = {\n\tcanonicalName = &quot;Colonia Tovar German&quot;,\n\totherNames = {&quot;Alemá\
      n Coloniero&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;gsw&quot;},\n}\n\nm[&quot;gdb&quot;] = {\n\tcanonicalName = &quot;Ollari&quot;,\n\totherNames = {&quot;Pottangi Ollar Gadaba&quot;, &quot;Ollar Gadaba&quot;,\
      \ &quot;Ollaro&quot;, &quot;Hallari&quot;, &quot;Allar&quot;, &quot;Hollar Gadbas&quot;},\n\tfamily = &quot;dra&quot;,\n}\n\nm[&quot;gdc&quot;] = {\n\tcanonicalName = &quot;Gugu Badhun&quot;,\n}\n\nm[&quot;gdd&quot;] = {\n\tcanonicalName = &quot;Gedaged&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-ocw&quot;,\n}\n\nm[&quot;gde&quot;] = {\n\tcanonicalName = &quot;Gude&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cdc-cbm&quot;,\n}\n\nm[&quot;gdf&quot;] = {\n\tcanonicalName = &quot;Guduf-Gava&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cdc-cbm&quot;,\n}\n\nm[&quot;gdg&quot;] = { -- not to be confused with gad, gdk\n\tcanonicalName = &quot;Ga'dang&quot;,\n\tfamily = &quot;phi&quot;,\n}\n\nm[&quot;gdh&quot;] = {\n\tcanonicalName = &quot;Gadjerawang&quot;,\n\
      }\n\nm[&quot;gdi&quot;] = {\n\tcanonicalName = &quot;Gundi&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;nic-ubg&quot;,\n}\n\nm[&quot;gdj&quot;] = {\n\tcanonicalName = &quot;Kurtjar&quot;,\n\totherNames = {&quot;Gurdjar&quot;, &quot;Kunggara&quot;},\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;aus-pmn&quot;,\n}\n\nm[&quot;gdk&quot;] = { -- not to be confused with gad, gdg\n\tcanonicalName = &quot;Gadang&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cdc-est&quot;,\n}\n\nm[&quot;gdl&quot;]\
      \ = {\n\tcanonicalName = &quot;Dirasha&quot;,\n\tfamily = &quot;cus&quot;,\n}\n\nm[&quot;gdm&quot;] = {\n\tcanonicalName = &quot;Laal&quot;,\n\tscripts = {&quot;Latn&quot;},\n}\n\nm[&quot;gdn&quot;] = {\n\tcanonicalName = &quot;Umanakaina&quot;,\n}\n\n\
      m[&quot;gdo&quot;] = {\n\tcanonicalName = &quot;Godoberi&quot;,\n\totherNames = {&quot;Ghodoberi&quot;},\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;cau-ava&quot;,\n}\n\nm[&quot;gdq&quot;] = {\n\tcanonicalName = &quot;Mehri&quot;,\n\totherNames\
      \ = {&quot;Mahri&quot;},\n\tscripts = {&quot;Arab&quot;},\n\tfamily = &quot;sem-sar&quot;,\n}\n\nm[&quot;gdr&quot;] = {\n\tcanonicalName = &quot;Wipi&quot;,\n}\n\nm[&quot;gds&quot;] = {\n\tcanonicalName = &quot;Ghandruk Sign Language&quot;,\n\tfamily =\
      \ &quot;sgn&quot;,\n}\n\nm[&quot;gdt&quot;] = {\n\tcanonicalName = &quot;Kungardutyi&quot;,\n}\n\nm[&quot;gdu&quot;] = {\n\tcanonicalName = &quot;Gudu&quot;,\n}\n\nm[&quot;gdx&quot;] = {\n\tcanonicalName = &quot;Godwari&quot;,\n}\n\nm[&quot;gea&quot;]\
      \ = {\n\tcanonicalName = &quot;Geruma&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cdc-wst&quot;,\n}\n\nm[&quot;geb&quot;] = {\n\tcanonicalName = &quot;Kire&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;paa&quot;,\n}\n\nm[&quot;gec&quot;]\
      \ = {\n\tcanonicalName = &quot;Gboloo Grebo&quot;,\n}\n\nm[&quot;ged&quot;] = {\n\tcanonicalName = &quot;Gade&quot;,\n}\n\nm[&quot;geg&quot;] = {\n\tcanonicalName = &quot;Gengle&quot;,\n}\n\nm[&quot;geh&quot;] = {\n\tcanonicalName = &quot;Hutterisch&quot;,\n\
      \totherNames = {&quot;Hutterite German&quot;, &quot;Tirolean&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;bar&quot;},\n}\n\nm[&quot;gei&quot;] = {\n\tcanonicalName = &quot;Gebe&quot;,\n\tfamily = &quot;poz-hce&quot;,\n\
      }\n\nm[&quot;gej&quot;] = {\n\tcanonicalName = &quot;Gen&quot;,\n}\n\nm[&quot;gek&quot;] = {\n\tcanonicalName = &quot;Gerka&quot;,\n\totherNames = {&quot;Yiwom&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cdc-wst&quot;,\n}\n\nm[&quot;gel&quot;]\
      \ = {\n\tcanonicalName = &quot;Fakkanci&quot;,\n\totherNames = {&quot;Kag-Fer-Jiir-Koor-Ror-Us-Zuksun&quot;, &quot;ut-Ma'in&quot;, &quot;Fakai&quot;, &quot;Kag&quot;, &quot;Puku&quot;, &quot;Fakanchi&quot;, &quot;Et-Kag&quot;, &quot;Jiir&quot;, &quot;Gelanchi&quot;,\
      \ &quot;Et-Jiir&quot;, &quot;Kur&quot;, &quot;Kere&quot;, &quot;Kar&quot;, &quot;Keri-Ni&quot;, &quot;Kelli-Ni&quot;, &quot;Kelanchi&quot;, &quot;Kelinci&quot;, &quot;Zuksun&quot;, &quot;Zussun&quot;, &quot;Et-Zuksun&quot;, &quot;Ror&quot;, &quot;Et-Maror&quot;,\
      \ &quot;Tudanchi&quot;, &quot;Er-Gwar&quot;, &quot;Fer&quot;, &quot;Fere&quot;, &quot;Et-Fer&quot;, &quot;Wipsi-Ni&quot;, &quot;Kukum&quot;, &quot;Us&quot;, &quot;Et-Us&quot;, &quot;Koor&quot;, &quot;Kulu&quot;},\n\tfamily = &quot;nic-knj&quot;,\n}\n\n\
      m[&quot;geq&quot;] = {\n\tcanonicalName = &quot;Geme&quot;,\n\tfamily = &quot;znd&quot;,\n}\n\nm[&quot;ges&quot;] = {\n\tcanonicalName = &quot;Geser-Gorom&quot;,\n\tfamily = &quot;plf&quot;,\n}\n\nm[&quot;gev&quot;] = {\n\tcanonicalName = &quot;Viya&quot;,\n\
      \totherNames = {&quot;Eviya&quot;},\n}\n\nm[&quot;gew&quot;] = {\n\tcanonicalName = &quot;Gera&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cdc-wst&quot;,\n}\n\nm[&quot;gex&quot;] = {\n\tcanonicalName = &quot;Garre&quot;,\n\tfamily = &quot;cus&quot;,\n\
      }\n\nm[&quot;gey&quot;] = {\n\tcanonicalName = &quot;Enya&quot;,\n}\n\nm[&quot;gez&quot;] = {\n\tcanonicalName = &quot;Ge'ez&quot;,\n\totherNames = {&quot;Ethiopic&quot;, &quot;Gi'iz&quot;},\n\tscripts = {&quot;Ethi&quot;},\n\tfamily = &quot;sem-eth&quot;,\n\
      \ttranslit_module = &quot;Ethi-translit&quot;,\n}\n\nm[&quot;gfk&quot;] = {\n\tcanonicalName = &quot;Patpatar&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-ocw&quot;,\n}\n\nm[&quot;gft&quot;] = {\n\tcanonicalName = &quot;Gafat&quot;,\n\t\
      family = &quot;sem-eth&quot;,\n}\n\nm[&quot;gga&quot;] = {\n\tcanonicalName = &quot;Gao&quot;,\n\tfamily = &quot;poz-ocw&quot;,\n}\n\nm[&quot;ggb&quot;] = {\n\tcanonicalName = &quot;Gbii&quot;,\n}\n\nm[&quot;ggd&quot;] = {\n\tcanonicalName = &quot;Gugadj&quot;,\n\
      }\n\nm[&quot;gge&quot;] = {\n\tcanonicalName = &quot;Guragone&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;aus-arn&quot;,\n}\n\nm[&quot;ggg&quot;] = {\n\tcanonicalName = &quot;Gurgula&quot;,\n\tscripts = {&quot;Arab&quot;},\n\tfamily = &quot;inc&quot;,\n\
      \tancestors = {&quot;mwr&quot;},\n}\n\nm[&quot;ggk&quot;] = {\n\tcanonicalName = &quot;Kungarakany&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;aus-arn&quot;,\n}\n\nm[&quot;ggl&quot;] = {\n\tcanonicalName = &quot;Ganglau&quot;,\n}\n\nm[&quot;ggn&quot;]\
      \ = {\n\tcanonicalName = &quot;Eastern Gurung&quot;,\n}\n\nm[&quot;ggt&quot;] = {\n\tcanonicalName = &quot;Gitua&quot;,\n\tfamily = &quot;poz-ocw&quot;,\n}\n\nm[&quot;ggu&quot;] = {\n\tcanonicalName = &quot;Gban&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;dmn&quot;,\n}\n\nm[&quot;ggw&quot;] = {\n\tcanonicalName = &quot;Gogodala&quot;,\n}\n\nm[&quot;gha&quot;] = {\n\tcanonicalName = &quot;Ghadames&quot;,\n\totherNames = {&quot;Ghadamès&quot;},\n\tfamily = &quot;ber&quot;,\n}\n\nm[&quot;ghe&quot;]\
      \ = {\n\tcanonicalName = &quot;Southern Ghale&quot;,\n}\n\nm[&quot;ghh&quot;] = {\n\tcanonicalName = &quot;Northern Ghale&quot;,\n}\n\nm[&quot;ghk&quot;] = {\n\tcanonicalName = &quot;Geko Karen&quot;,\n}\n\nm[&quot;ghl&quot;] = {\n\tcanonicalName = &quot;Ghulfan&quot;,\n\
      }\n\nm[&quot;ghn&quot;] = {\n\tcanonicalName = &quot;Ghanongga&quot;,\n\tfamily = &quot;poz-ocw&quot;,\n}\n\nm[&quot;gho&quot;] = {\n\tcanonicalName = &quot;Ghomara&quot;,\n\tfamily = &quot;ber&quot;,\n}\n\nm[&quot;ghr&quot;] = {\n\tcanonicalName = &quot;Ghera&quot;,\n\
      }\n\nm[&quot;ghs&quot;] = {\n\tcanonicalName = &quot;Guhu-Samane&quot;,\n}\n\nm[&quot;ght&quot;] = {\n\tcanonicalName = &quot;Kutang Ghale&quot;,\n}\n\nm[&quot;gia&quot;] = {\n\tcanonicalName = &quot;Kitja&quot;,\n}\n\nm[&quot;gib&quot;] = {\n\tcanonicalName\
      \ = &quot;Gibanawa&quot;,\n}\n\nm[&quot;gid&quot;] = {\n\tcanonicalName = &quot;Gidar&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cdc-cbm&quot;,\n}\n\nm[&quot;gie&quot;] = {\n\tcanonicalName = &quot;Guébie&quot;,\n\totherNames = {&quot;Gaɓ\
      ogbo&quot;, &quot;Gabogbo&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;kro&quot;,\n}\n\nm[&quot;gig&quot;] = {\n\tcanonicalName = &quot;Goaria&quot;,\n\tscripts = {&quot;Arab&quot;},\n\tfamily = &quot;inc&quot;,\n\tancestors = {&quot;mwr&quot;},\n\
      }\n\nm[&quot;gih&quot;] = {\n\tcanonicalName = &quot;Githabul&quot;,\n}\n\nm[&quot;gil&quot;] = {\n\tcanonicalName = &quot;Gilbertese&quot;,\n\totherNames = {&quot;Kiribati&quot;, &quot;Kiribatese&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-mic&quot;,\n\
      }\n\nm[&quot;gim&quot;] = {\n\tcanonicalName = &quot;Papuan Gimi&quot;,\n\totherNames = {&quot;Gimi&quot;},\n\tfamily = &quot;paa&quot;,\n}\n\nm[&quot;gin&quot;] = {\n\tcanonicalName = &quot;Hinukh&quot;,\n\totherNames = {&quot;Hinuq&quot;, &quot;Hinux&quot;,\
      \ &quot;Ginukh&quot;, &quot;Ginux&quot;},\n\tfamily = &quot;cau-tsz&quot;,\n}\n\nm[&quot;gio&quot;] = {\n\tcanonicalName = &quot;Gelao&quot;,\n\tfamily = &quot;qfa-tak&quot;,\n}\n\nm[&quot;gip&quot;] = {\n\tcanonicalName = &quot;Austronesian Gimi&quot;,\n\
      \totherNames = {&quot;Gimi&quot;},\n\tfamily = &quot;poz-ocw&quot;,\n}\n\nm[&quot;giq&quot;] = {\n\tcanonicalName = &quot;Green Gelao&quot;,\n\totherNames = {&quot;Hagei&quot;, &quot;Hakhi&quot;},\n\tfamily = &quot;qfa-tak&quot;,\n}\n\nm[&quot;gir&quot;]\
      \ = {\n\tcanonicalName = &quot;Red Gelao&quot;,\n\totherNames = {&quot;Vandu&quot;},\n\tfamily = &quot;qfa-tak&quot;,\n}\n\nm[&quot;gis&quot;] = {\n\tcanonicalName = &quot;North Giziga&quot;,\n}\n\nm[&quot;git&quot;] = {\n\tcanonicalName = &quot;Gitxsan&quot;,\n\
      }\n\nm[&quot;giu&quot;] = {\n\tcanonicalName = &quot;Mulao&quot;, -- a variety of Gelao\n\tfamily = &quot;qfa-tak&quot;,\n}\n\nm[&quot;giw&quot;] = {\n\tcanonicalName = &quot;White Gelao&quot;,\n\totherNames = {&quot;Telue&quot;, &quot;Doulou&quot;, &quot;Tolo&quot;},\n\
      \tfamily = &quot;qfa-tak&quot;,\n}\n\nm[&quot;gix&quot;] = {\n\tcanonicalName = &quot;Gilima&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;nic-ubg&quot;,\n}\n\nm[&quot;giy&quot;] = {\n\tcanonicalName = &quot;Giyug&quot;,\n}\n\nm[&quot;giz&quot;]\
      \ = {\n\tcanonicalName = &quot;South Giziga&quot;,\n}\n\nm[&quot;gji&quot;] = {\n\tcanonicalName = &quot;Geji&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cdc-wst&quot;,\n}\n\nm[&quot;gjk&quot;] = {\n\tcanonicalName = &quot;Kachi Koli&quot;,\n\
      }\n\nm[&quot;gjm&quot;] = {\n\tcanonicalName = &quot;Gunditjmara&quot;,\n}\n\nm[&quot;gjn&quot;] = {\n\tcanonicalName = &quot;Gonja&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-kwa&quot;,\n}\n\nm[&quot;gju&quot;] = {\n\tcanonicalName =\
      \ &quot;Gojri&quot;,\n\tfamily = &quot;inc&quot;,\n\tancestors = {&quot;raj&quot;},\n}\n\nm[&quot;gka&quot;] = {\n\tcanonicalName = &quot;Guya&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;ngf-fin&quot;,\n}\n\nm[&quot;gke&quot;] = {\n\tcanonicalName\
      \ = &quot;Ndai&quot;,\n}\n\nm[&quot;gkn&quot;] = {\n\tcanonicalName = &quot;Gokana&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;nic-bco&quot;,\n}\n\nm[&quot;gko&quot;] = {\n\tcanonicalName = &quot;Kok-Nar&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;aus-pmn&quot;,\n}\n\nm[&quot;gkp&quot;] = {\n\tcanonicalName = &quot;Guinea Kpelle&quot;,\n}\n\nm[&quot;glc&quot;] = {\n\tcanonicalName = &quot;Bon Gula&quot;,\n}\n\nm[&quot;gld&quot;] = {\n\tcanonicalName = &quot;Nanai&quot;,\n\totherNames\
      \ = {&quot;Goldi&quot;, &quot;Hezhen&quot;},\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;tuw&quot;,\n\tentry_name = {\n\t\tfrom = {&quot;[Ӣ]&quot;, &quot;[ӣ]&quot;, &quot;[Ӯ]&quot;, &quot;[ӯ]&quot;, MACRON},\n\t\tto   = { &quot;И&quot;,   &quot;и\
      &quot;,   &quot;У&quot;,   &quot;у&quot; }},\n}\n\nm[&quot;glh&quot;] = {\n\tcanonicalName = &quot;Northwest Pashayi&quot;,\n\tfamily = &quot;inc-dar&quot;,\n}\n\nm[&quot;gli&quot;] = {\n\tcanonicalName = &quot;Guliguli&quot;,\n\tfamily = &quot;poz-ocw&quot;,\n\
      }\n\nm[&quot;glj&quot;] = {\n\tcanonicalName = &quot;Kulaal&quot;,\n}\n\nm[&quot;glk&quot;] = {\n\tcanonicalName = &quot;Gilaki&quot;,\n\tscripts = {&quot;fa-Arab&quot;},\n\tfamily = &quot;ira-wes&quot;,\n}\n\nm[&quot;glo&quot;] = {\n\tcanonicalName =\
      \ &quot;Galambu&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cdc-wst&quot;,\n}\n\nm[&quot;glr&quot;] = {\n\tcanonicalName = &quot;Glaro-Twabo&quot;,\n}\n\nm[&quot;glu&quot;] = {\n\tcanonicalName = &quot;Gula&quot;,\n\totherNames = {&quot;Sara\
      \ Gula&quot;},\n\tfamily = &quot;csu&quot;,\n}\n\nm[&quot;glw&quot;] = {\n\tcanonicalName = &quot;Glavda&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cdc-cbm&quot;,\n}\n\nm[&quot;gly&quot;] = {\n\tcanonicalName = &quot;Gule&quot;,\n}\n\nm[&quot;gma&quot;]\
      \ = {\n\tcanonicalName = &quot;Gambera&quot;,\n}\n\nm[&quot;gmb&quot;] = {\n\tcanonicalName = &quot;Gula'alaa&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-sls&quot;,\n}\n\nm[&quot;gmd&quot;] = {\n\tcanonicalName = &quot;Mághdì&quot;,\n\
      }\n\nm[&quot;gmg&quot;] = {\n\tcanonicalName = &quot;Magiyi&quot;,\n\totherNames = {&quot;Magɨyi&quot;}, -- also Magɨ? another Madang prov. Sogeram lang., see Don Daniels\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;paa&quot;,\n}\n\nm[&quot;gmh&quot;]\
      \ = {\n\tcanonicalName = &quot;Middle High German&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;goh&quot;},\n\tentry_name = {\n\t\tfrom = {&quot;[ĀÂ]&quot;, &quot;[āâ]&quot;, &quot;[ĒÊË]&quot;, &quot;[ēêë]&quot;,\
      \ &quot;[ĪÎ]&quot;, &quot;[īî]&quot;, &quot;[ŌÔ]&quot;, &quot;[ōô]&quot;, &quot;[ŪÛ]&quot;, &quot;[ūû]&quot;},\n\t\tto   = {&quot;A&quot;   , &quot;a&quot;   , &quot;E&quot;\t   , &quot;e&quot;    , &quot;I&quot;   , &quot;i&quot;   , &quot;O&quot;   ,\
      \ &quot;o&quot;   , &quot;U&quot;   , &quot;u&quot;   },\n\t},\n}\n\nm[&quot;gml&quot;] = {\n\tcanonicalName = &quot;Middle Low German&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;osx&quot;},\n\tentry_name\
      \ = {\n\t\tfrom = {&quot;[ĀÂÄǞ]&quot;, &quot;[āâäǟ]&quot;, &quot;[ĒÊ]&quot;, &quot;[ēê]&quot;, &quot;[ĪÎ]&quot;, &quot;[īî]&quot;, &quot;[ŌÔÖȪ]&quot;, &quot;[ōôöȫ]&quot;, &quot;[ŪÛÜǕ]&quot;, &quot;[ūûüǖ]&quot;, &quot;[̂]&quot;},\n\t\tto   = {&quot;A&quot;\
      \     , &quot;a&quot;     , &quot;E&quot;   , &quot;e&quot;   , &quot;I&quot;   , &quot;i&quot;   , &quot;O&quot;     , &quot;o&quot;     , &quot;U&quot;     , &quot;u&quot;     , &quot;&quot;  },\n\t},\n}\n\nm[&quot;gmm&quot;] = {\n\tcanonicalName = &quot;Gbaya-Mbodomo&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-sav&quot;,\n}\n\nm[&quot;gmn&quot;] = {\n\tcanonicalName = &quot;Gimnime&quot;,\n}\n\nm[&quot;gmu&quot;] = {\n\tcanonicalName = &quot;Gumalu&quot;,\n}\n\nm[&quot;gmv&quot;] = {\n\tcanonicalName = &quot;Gamo&quot;,\n\
      }\n\nm[&quot;gmx&quot;] = {\n\tcanonicalName = &quot;Magoma&quot;,\n}\n\nm[&quot;gmy&quot;] = {\n\tcanonicalName = &quot;Mycenaean Greek&quot;,\n\tscripts = {&quot;Linb&quot;},\n\tfamily = &quot;grk&quot;,\n\ttranslit_module = &quot;Linb-translit&quot;,\n\
      \toverride_translit = true,\t\n}\n\nm[&quot;gmz&quot;] = {\n\tcanonicalName = &quot;Mgbo&quot;,\n\totherNames = {&quot;Mgbolizhia&quot;},\n\tfamily = &quot;alv-von&quot;,\n}\n\nm[&quot;gna&quot;] = {\n\tcanonicalName = &quot;Kaansa&quot;,\n}\n\nm[&quot;gnb&quot;]\
      \ = {\n\tcanonicalName = &quot;Gangte&quot;,\n\tfamily = &quot;tbq-kuk&quot;,\n}\n\nm[&quot;gnc&quot;] = {\n\tcanonicalName = &quot;Guanche&quot;,\n\tfamily = &quot;ber&quot;,\n}\n\nm[&quot;gnd&quot;] = {\n\tcanonicalName = &quot;Zulgo-Gemzek&quot;,\n\t\
      otherNames = {&quot;Zulgo&quot;, &quot;Gemzek&quot;, &quot;Mineo&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cdc-cbm&quot;,\n}\n\nm[&quot;gne&quot;] = {\n\tcanonicalName = &quot;Ganang&quot;,\n}\n\nm[&quot;gng&quot;] = {\n\tcanonicalName\
      \ = &quot;Ngangam&quot;,\n}\n\nm[&quot;gnh&quot;] = {\n\tcanonicalName = &quot;Lere&quot;,\n}\n\nm[&quot;gni&quot;] = {\n\tcanonicalName = &quot;Gooniyandi&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;aus-bub&quot;,\n}\n\nm[&quot;gnk&quot;]\
      \ = {\n\tcanonicalName = &quot;ǁGana&quot;,\n\totherNames = {&quot;Gana&quot;},\n}\n\nm[&quot;gnl&quot;] = {\n\tcanonicalName = &quot;Gangulu&quot;,\n}\n\nm[&quot;gnm&quot;] = {\n\tcanonicalName = &quot;Ginuman&quot;,\n}\n\nm[&quot;gnn&quot;] = {\n\tcanonicalName\
      \ = &quot;Gumatj&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;aus-yol&quot;,\n}\n\nm[&quot;gnq&quot;] = {\n\tcanonicalName = &quot;Gana&quot;,\n}\n\nm[&quot;gnr&quot;] = {\n\tcanonicalName = &quot;Gureng Gureng&quot;,\n}\n\nm[&quot;gnt&quot;]\
      \ = {\n\tcanonicalName = &quot;Guntai&quot;,\n}\n\nm[&quot;gnu&quot;] = {\n\tcanonicalName = &quot;Gnau&quot;,\n\tfamily = &quot;qfa-tor&quot;,\n}\n\nm[&quot;gnw&quot;] = {\n\tcanonicalName = &quot;Western Bolivian Guaraní&quot;,\n\totherNames = {&quot;Simba&quot;,\
      \ &quot;Simba Guarani&quot;},\n\tancestors = {&quot;gn&quot;},\n\tfamily = &quot;tup-gua&quot;,\n}\n\nm[&quot;gnz&quot;] = {\n\tcanonicalName = &quot;Ganzi&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;nic-ubg&quot;,\n}\n\nm[&quot;goa&quot;]\
      \ = {\n\tcanonicalName = &quot;Guro&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;dmn&quot;,\n}\n\nm[&quot;gob&quot;] = {\n\tcanonicalName = &quot;Playero&quot;,\n}\n\nm[&quot;goc&quot;] = {\n\tcanonicalName = &quot;Gorakor&quot;,\n\tfamily\
      \ = &quot;poz-ocw&quot;,\n}\n\nm[&quot;god&quot;] = {\n\tcanonicalName = &quot;Godié&quot;,\n}\n\nm[&quot;goe&quot;] = {\n\tcanonicalName = &quot;Gongduk&quot;,\n}\n\nm[&quot;gof&quot;] = {\n\tcanonicalName = &quot;Gofa&quot;,\n\tscripts = {&quot;Latn&quot;,\
      \ &quot;Ethi&quot;},\n\tfamily = &quot;omv&quot;,\n}\n\nm[&quot;gog&quot;] = {\n\tcanonicalName = &quot;Gogo&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;goh&quot;] = {\n\tcanonicalName = &quot;Old High German&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmw&quot;,\n\tentry_name = {\n\t\tfrom = {&quot;[ĀÂ]&quot;, &quot;[āâ]&quot;, &quot;[ĒÊË]&quot;, &quot;[ēêë]&quot;, &quot;[ĪÎ]&quot;, &quot;[īî]&quot;, &quot;[ŌÔ]&quot;, &quot;[ōô]&quot;, &quot;[ŪÛ]&quot;,\
      \ &quot;[ūû]&quot;, &quot;ʒ&quot;},\n\t\tto   = {&quot;A&quot;   , &quot;a&quot;   , &quot;E&quot;\t,    &quot;e&quot;\t, &quot;I&quot;   , &quot;i&quot;   , &quot;O&quot;   , &quot;o&quot;   , &quot;U&quot;   , &quot;u&quot;   , &quot;z&quot; }} ,\n}\n\
      \nm[&quot;goi&quot;] = {\n\tcanonicalName = &quot;Gobasi&quot;,\n\totherNames = {&quot;Gobosi&quot;, &quot;Gebusi&quot;, &quot;Bibo&quot;},\n\tscripts = {&quot;Latn&quot;},\n}\n\nm[&quot;goj&quot;] = {\n\tcanonicalName = &quot;Gowlan&quot;,\n}\n\nm[&quot;gok&quot;]\
      \ = {\n\tcanonicalName = &quot;Gowli&quot;,\n}\n\nm[&quot;gol&quot;] = {\n\tcanonicalName = &quot;Gola&quot;,\n}\n\nm[&quot;gon&quot;] = {\n\tcanonicalName = &quot;Gondi&quot;,\n\totherNames = {&quot;Southern Gondi&quot;, &quot;Northern Gondi&quot;, &quot;Aheri\
      \ Gondi&quot;, &quot;Adilabad Gondi&quot;, &quot;Dorla Gondi&quot;, &quot;Koya Gondi&quot;, &quot;Maria Gondi&quot;, &quot;Muria Gondi&quot;, &quot;Raj Gondi&quot;},\n\tscripts = {&quot;Telu&quot;, &quot;Gonm&quot;},\n\tfamily = &quot;dra&quot;,\n}\n\n\
      m[&quot;goo&quot;] = {\n\tcanonicalName = &quot;Gone Dau&quot;,\n\tfamily = &quot;poz-occ&quot;,\n}\n\nm[&quot;gop&quot;] = {\n\tcanonicalName = &quot;Yeretuar&quot;,\n\tfamily = &quot;poz-hce&quot;,\n}\n\nm[&quot;goq&quot;] = {\n\tcanonicalName = &quot;Gorap&quot;,\n\
      }\n\nm[&quot;gor&quot;] = {\n\tcanonicalName = &quot;Gorontalo&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;phi&quot;,\n}\n\nm[&quot;got&quot;] = {\n\tcanonicalName = &quot;Gothic&quot;,\n\tscripts = {&quot;Goth&quot;, &quot;Runr&quot;},\n\
      \tfamily = &quot;gme&quot;,\n\ttranslit_module = &quot;Goth-translit&quot;,\n\tlink_tr = true,\n\tentry_name = {\n\t\tfrom = {&quot;Ā&quot;, &quot;ā&quot;, &quot;Ē&quot;, &quot;ē&quot;, &quot;Ī&quot;, &quot;ī&quot;, &quot;Ō&quot;, &quot;ō&quot;, &quot;Ū\
      &quot;, &quot;ū&quot;},\n\t\tto   = {&quot;A&quot;, &quot;a&quot;, &quot;E&quot;, &quot;e&quot;, &quot;I&quot;, &quot;i&quot;, &quot;O&quot;, &quot;o&quot;, &quot;U&quot;, &quot;u&quot;}} ,\n}\n\nm[&quot;gou&quot;] = {\n\tcanonicalName = &quot;Gavar&quot;,\n\
      \totherNames = {&quot;Gawar&quot;},\n\tfamily = &quot;cdc-cbm&quot;,\n}\n\nm[&quot;gow&quot;] = {\n\tcanonicalName = &quot;Gorowa&quot;,\n\tfamily = &quot;cus&quot;,\n}\n\nm[&quot;gox&quot;] = {\n\tcanonicalName = &quot;Gobu&quot;,\n}\n\nm[&quot;goy&quot;]\
      \ = {\n\tcanonicalName = &quot;Goundo&quot;,\n}\n\nm[&quot;goz&quot;] = {\n\tcanonicalName = &quot;Gozarkhani&quot;,\n\tancestors = {&quot;ira-azr&quot;},\n}\n\nm[&quot;gpa&quot;] = {\n\tcanonicalName = &quot;Gupa-Abawa&quot;,\n}\n\nm[&quot;gpn&quot;]\
      \ = {\n\tcanonicalName = &quot;Taiap&quot;,\n}\n\nm[&quot;gqa&quot;] = {\n\tcanonicalName = &quot;Ga'anda&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cdc-cbm&quot;,\n}\n\nm[&quot;gqi&quot;] = {\n\tcanonicalName = &quot;Guiqiong&quot;,\n\t\
      otherNames = {&quot;Guìqióng&quot;, &quot;Guichong&quot;},\n\tfamily = &quot;sit-qia&quot;,\n}\n\nm[&quot;gqn&quot;] = { -- a variety of 'ter'\n\tcanonicalName = &quot;Kinikinao&quot;,\n\totherNames = {&quot;Guana&quot;, &quot;Guaná&quot;, &quot;Guana\
      \ (Brazil)&quot;, &quot;Arawakan Guana&quot;},\n\tfamily = &quot;awd&quot;,\n}\n\nm[&quot;gqr&quot;] = {\n\tcanonicalName = &quot;Gor&quot;,\n\tfamily = &quot;csu-sar&quot;,\n}\n\nm[&quot;gqu&quot;] = {\n\tcanonicalName = &quot;Qau&quot;,\n\totherNames\
      \ = {&quot;Gao&quot;, &quot;Aqao&quot;, &quot;Qau Gelao&quot;},\n\tfamily = &quot;qfa-tak&quot;,\n}\n\nm[&quot;gra&quot;] = {\n\tcanonicalName = &quot;Rajput Garasia&quot;,\n\tfamily = &quot;inc&quot;,\n}\n\nm[&quot;grb&quot;] = {\n\tcanonicalName = &quot;Grebo&quot;,\n\
      }\n\nm[&quot;grc&quot;] = {\n\tcanonicalName = &quot;Ancient Greek&quot;,\n\tscripts = {&quot;polytonic&quot;, &quot;Cprt&quot;},\n\tfamily = &quot;grk&quot;,\n\ttranslit_module = &quot;translit-redirect&quot;,\n\toverride_translit = true,\n\tsort_key\
      \ = {  -- Keep this synchronized with el, cpg, pnt; compare ine-pae\n\t\tfrom = {&quot;[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇᾱᾍ]&quot;, &quot;[έὲἐἔἒἑἕἓ]&quot;, &quot;[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗ]&quot;, &quot;[ίὶῖἰἴἲἶἱἵἳἷϊΐῒῗῑ]&quot;, &quot;[όὸὀὄὂὁὅὃ]&quot;, &quot;[ύὺῦὐ\
      ὔὒὖὑὕὓὗϋΰῢῧῡ]&quot;, &quot;[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧᾨ]&quot;, &quot;ῥ&quot;, &quot;ς&quot;},\n\t\tto   = {&quot;α&quot;\t\t\t\t\t\t\t , &quot;ε&quot;\t\t   , &quot;η&quot;\t\t\t\t\t\t, &quot;ι&quot;\t\t\t\t, &quot;ο&quot;\t\t , &quot;υ&quot;\t\t\t\t\t \
      \ , &quot;ω&quot;\t\t\t\t\t\t\t, &quot;ρ&quot;, &quot;σ&quot;}},\n\tentry_name = {\n\t\tfrom = {&quot;[ᾸᾹ]&quot;, &quot;[ᾰᾱ]&quot;, &quot;[ῘῙ]&quot;, &quot;[ῐῑ]&quot;, &quot;[ῨῩ]&quot;, &quot;[ῠῡ]&quot;, &quot;µ&quot;, &quot;[&quot;..RSQUO..PSILI..CORONIS..&quot;]&quot;,\
      \ &quot;[&quot;..MACRON..BREVE..&quot;]&quot; },\n\t\tto   = {&quot;Α&quot;, &quot;α&quot;, &quot;Ι&quot;, &quot;ι&quot;, &quot;Υ&quot;, &quot;υ&quot;, &quot;μ&quot;, &quot;'&quot;, &quot;&quot;}},\n\tstandardChars = &quot;ͺ;΄-ώϜϝ&quot; .. PUNCTUATION\
      \ .. &quot;ἀ-῾&quot;\n}\n\nm[&quot;grd&quot;] = {\n\tcanonicalName = &quot;Guruntum&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cdc-wst&quot;,\n}\n\nm[&quot;grg&quot;] = {\n\tcanonicalName = &quot;Madi&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;ngf-fin&quot;,\n}\n\nm[&quot;grh&quot;] = {\n\tcanonicalName = &quot;Gbiri-Niragu&quot;,\n}\n\nm[&quot;gri&quot;] = {\n\tcanonicalName = &quot;Ghari&quot;,\n\totherNames = {&quot;Gari&quot;, &quot;Tangarare&quot;, &quot;Sughu&quot;, &quot;West\
      \ Guadalcanal&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-sls&quot;,\n}\n\nm[&quot;grj&quot;] = {\n\tcanonicalName = &quot;Southern Grebo&quot;,\n}\n\nm[&quot;grm&quot;] = {\n\tcanonicalName = &quot;Kota Marudu Talantang&quot;,\n}\n\n\
      m[&quot;gro&quot;] = {\n\tcanonicalName = &quot;Groma&quot;,\n}\n\nm[&quot;grq&quot;] = {\n\tcanonicalName = &quot;Gorovu&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;paa&quot;,\n}\n\nm[&quot;grr&quot;] = {\n\tcanonicalName = &quot;Taznatit&quot;,\n\
      \tfamily = &quot;ber&quot;,\n}\n\nm[&quot;grs&quot;] = {\n\tcanonicalName = &quot;Gresi&quot;,\n}\n\nm[&quot;grt&quot;] = {\n\tcanonicalName = &quot;Garo&quot;,\n}\n\nm[&quot;gru&quot;] = {\n\tcanonicalName = &quot;Kistane&quot;,\n\totherNames = {&quot;Soddo&quot;,\
      \ &quot;Aymälläl&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;sem-eth&quot;,\n}\n\nm[&quot;grv&quot;] = {\n\tcanonicalName = &quot;Central Grebo&quot;,\n}\n\nm[&quot;grw&quot;] = {\n\tcanonicalName = &quot;Gweda&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;poz-ocw&quot;,\n}\n\nm[&quot;grx&quot;] = {\n\tcanonicalName = &quot;Guriaso&quot;,\n}\n\nm[&quot;gry&quot;] = {\n\tcanonicalName = &quot;Barclayville Grebo&quot;,\n\tscripts = {&quot;Latn&quot;},\n}\n\nm[&quot;grz&quot;] = {\n\tcanonicalName\
      \ = &quot;Guramalum&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-ocw&quot;,\n}\n\nm[&quot;gse&quot;] = {\n\tcanonicalName = &quot;Ghanaian Sign Language&quot;,\n\tfamily = &quot;sgn&quot;,\n}\n\nm[&quot;gsg&quot;] = {\n\tcanonicalName\
      \ = &quot;German Sign Language&quot;,\n\totherNames = {&quot;Deutsche Gebärdensprache&quot;},\n\tscripts = {&quot;Sgnw&quot;},\n\tfamily = &quot;sgn-gsl&quot;,\n}\n\nm[&quot;gsl&quot;] = {\n\tcanonicalName = &quot;Gusilay&quot;,\n}\n\nm[&quot;gsm&quot;]\
      \ = {\n\tcanonicalName = &quot;Guatemalan Sign Language&quot;,\n\tfamily = &quot;sgn&quot;,\n}\n\nm[&quot;gsn&quot;] = {\n\tcanonicalName = &quot;Gusan&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;ngf-fin&quot;,\n}\n\nm[&quot;gso&quot;] =\
      \ {\n\tcanonicalName = &quot;Southwest Gbaya&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-sav&quot;,\n}\n\nm[&quot;gsp&quot;] = {\n\tcanonicalName = &quot;Wasembo&quot;,\n}\n\nm[&quot;gss&quot;] = {\n\tcanonicalName = &quot;Greek Sign\
      \ Language&quot;,\n\tfamily = &quot;sgn&quot;,\n}\n\nm[&quot;gsw&quot;] = {\n\tcanonicalName = &quot;Alemannic German&quot;,\n\totherNames = {&quot;Swiss German&quot;, &quot;Walser German&quot;, &quot;Walserdeutsch&quot;, &quot;Walser&quot;, &quot;Wallisertiitsch&quot;,\
      \ &quot;Italian Walser&quot;, &quot;Pomattertitsch&quot;, &quot;Formazza&quot;, &quot;Kampel&quot;, &quot;Remmaljertittschu&quot;, &quot;Rimella&quot;, &quot;Chalchoufe&quot;, &quot;Titzschu&quot;, &quot;Alagna&quot;, &quot;Greschóneytitsch&quot;, &quot;Greschó\
      ney&quot;, &quot;Greschoney&quot;, &quot;Gressoney&quot;, &quot;Éischemtöitschu&quot;, &quot;Issime&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;gmh&quot;},\n\twikimedia_codes = {&quot;als&quot;},\n}\n\nm[&quot;gta&quot;]\
      \ = {\n\tcanonicalName = &quot;Guató&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;qfa-iso&quot;,\n}\n\nm[&quot;gti&quot;] = {\n\tcanonicalName = &quot;Gbati-ri&quot;,\n}\n\nm[&quot;gtu&quot;] = {\n\tcanonicalName = &quot;Aghu Tharrnggala&quot;,\n\
      \totherNames = {&quot;Aghu Tharnggala&quot;, &quot;Aghu Tharnggalu&quot;, &quot;Tharrnggala&quot;, &quot;Gogo Mini&quot;, &quot;Kuku Mini&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;aus-pmn&quot;,\n}\n\nm[&quot;gua&quot;] = {\n\tcanonicalName\
      \ = &quot;Shiki&quot;,\n}\n\nm[&quot;gub&quot;] = {\n\tcanonicalName = &quot;Guajajára&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;tup-gua&quot;,\n}\n\nm[&quot;guc&quot;] = {\n\tcanonicalName = &quot;Wayuu&quot;,\n\totherNames = {&quot;Guajiro&quot;,\
      \ &quot;Goajiro&quot;, &quot;Uagiro&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;awd&quot;,\n}\n\nm[&quot;gud&quot;] = {\n\tcanonicalName = &quot;Yocoboué Dida&quot;,\n}\n\nm[&quot;gue&quot;] = {\n\tcanonicalName = &quot;Gurindji&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;aus-pam&quot;,\n}\n\nm[&quot;guf&quot;] = {\n\tcanonicalName = &quot;Gupapuyngu&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;aus-yol&quot;,\n}\n\nm[&quot;gug&quot;] = {\n\tcanonicalName = &quot;Paraguayan\
      \ Guaraní&quot;,\n\totherNames = {&quot;Jopará&quot;, &quot;Yopará&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;tup-gua&quot;,\n\tancestors = {&quot;gn&quot;},\n}\n\nm[&quot;guh&quot;] = {\n\tcanonicalName = &quot;Guahibo&quot;,\n\tscripts\
      \ = {&quot;Latn&quot;},\n}\n\nm[&quot;gui&quot;] = {\n\tcanonicalName = &quot;Eastern Bolivian Guaraní&quot;,\n\totherNames = {&quot;Ava Guaraní&quot;, &quot;Chiriguanos&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;tup-gua&quot;,\n\tancestors\
      \ = {&quot;gn&quot;},\n}\n\nm[&quot;guk&quot;] = {\n\tcanonicalName = &quot;Gumuz&quot;,\n}\n\nm[&quot;gul&quot;] = {\n\tcanonicalName = &quot;Gullah&quot;,\n\totherNames = {&quot;Geechee&quot;, &quot;Sea Island Creole English&quot;},\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;crp&quot;,\n\tancestors = {&quot;en&quot;},\n}\n\nm[&quot;gum&quot;] = {\n\tcanonicalName = &quot;Guambiano&quot;,\n}\n\nm[&quot;gun&quot;] = {\n\tcanonicalName = &quot;Mbyá Guaraní&quot;,\n\totherNames = {&quot;Mbyá&quot;, &quot;Mbya&quot;,\
      \ &quot;Mbyhá&quot;, &quot;Mbiá&quot;, &quot;Mbua&quot;, &quot;Mbüá&quot;, &quot;Mbü'a&quot;, &quot;Mbü'a Guaraní&quot;, &quot;Jeguaká Tenondé&quot;, &quot;Bwihá&quot;, &quot;Caiua&quot;, &quot;Kaiwá&quot;, &quot;Kayová&quot;, &quot;Cahygua&quot;, &quot;Caingua&quot;},\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;tup-gua&quot;,\n\tancestors = {&quot;gn&quot;},\n}\n\nm[&quot;guo&quot;] = {\n\tcanonicalName = &quot;Guayabero&quot;,\n}\n\nm[&quot;gup&quot;] = {\n\tcanonicalName = &quot;Gunwinggu&quot;,\n\tscripts =\
      \ {&quot;Latn&quot;},\n\tfamily = &quot;aus-gun&quot;,\n}\n\nm[&quot;guq&quot;] = {\n\tcanonicalName = &quot;Aché&quot;,\n\totherNames = {&quot;Guayaki&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;tup&quot;,\n}\n\nm[&quot;gur&quot;] = {\n\
      \tcanonicalName = &quot;Farefare&quot;,\n\totherNames = {&quot;Frafra&quot;, &quot;Gurene&quot;, &quot;Gurenɛ&quot;, &quot;Gurenne&quot;, &quot;Gudenne&quot;, &quot;Gudeni&quot;, &quot;Zuadeni&quot;, &quot;Nankani&quot;, &quot;Naani&quot;, &quot;Nankanse&quot;,\
      \ &quot;Ninkare&quot;, &quot;Booni&quot;},\n\tscripts = {&quot;Latn&quot;},\n}\n\nm[&quot;gus&quot;] = {\n\tcanonicalName = &quot;Guinean Sign Language&quot;,\n\tfamily = &quot;sgn&quot;,\n}\n\nm[&quot;gut&quot;] = {\n\tcanonicalName = &quot;Maléku Jaí\
      ka&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cba&quot;,\n}\n\nm[&quot;guu&quot;] = {\n\tcanonicalName = &quot;Yanomamö&quot;,\n}\n\nm[&quot;guv&quot;] = {\n\tcanonicalName = &quot;Gey&quot;,\n}\n\nm[&quot;guw&quot;] = {\n\tcanonicalName\
      \ = &quot;Gun&quot;,\n\totherNames = {&quot;Gun-Gbe&quot;, &quot;Gungbe&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-von&quot;,\n}\n\nm[&quot;gux&quot;] = {\n\tcanonicalName = &quot;Gourmanchéma&quot;,\n}\n\nm[&quot;guz&quot;] = {\n\t\
      canonicalName = &quot;Gusii&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;gva&quot;] = {\n\tcanonicalName = &quot;Kaskihá&quot;,\n\totherNames = {&quot;Guana&quot;, &quot;Guaná&quot;, &quot;Guana (Paraguay)&quot;, &quot;Mascoian\
      \ Guana&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;sai-mas&quot;,\n}\n\nm[&quot;gvc&quot;] = {\n\tcanonicalName = &quot;Guanano&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;sai-tuc&quot;,\n}\n\nm[&quot;gve&quot;] = {\n\tcanonicalName\
      \ = &quot;Duwet&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-ocw&quot;,\n}\n\nm[&quot;gvf&quot;] = {\n\tcanonicalName = &quot;Golin&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;ngf&quot;,\n}\n\nm[&quot;gvj&quot;] = {\n\tcanonicalName\
      \ = &quot;Guajá&quot;,\n\totherNames = {&quot;Awá&quot;, &quot;Ayaya&quot;, &quot;Guaxare&quot;, &quot;Wazaizara&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;tup&quot;,\n}\n\nm[&quot;gvl&quot;] = {\n\tcanonicalName = &quot;Gulay&quot;,\n\t\
      family = &quot;csu-sar&quot;,\n}\n\nm[&quot;gvm&quot;] = {\n\tcanonicalName = &quot;Gurmana&quot;,\n}\n\nm[&quot;gvn&quot;] = {\n\tcanonicalName = &quot;Kuku-Yalanji&quot;,\n}\n\nm[&quot;gvo&quot;] = {\n\tcanonicalName = &quot;Gavião do Jiparaná&quot;,\n\
      \totherNames = {&quot;Gavião of Jiparaná&quot;, &quot;Digüt&quot;, &quot;Ikolen&quot;, &quot;Gavião do Rondônia&quot;, &quot;Zoró&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;tup&quot;,\n}\n\nm[&quot;gvp&quot;] = {\n\tcanonicalName = &quot;Pará\
      \ Gavião&quot;,\n}\n\nm[&quot;gvr&quot;] = {\n\tcanonicalName = &quot;Western Gurung&quot;,\n}\n\nm[&quot;gvs&quot;] = {\n\tcanonicalName = &quot;Gumawana&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-ocw&quot;,\n}\n\nm[&quot;gvy&quot;]\
      \ = {\n\tcanonicalName = &quot;Guyani&quot;,\n}\n\nm[&quot;gwa&quot;] = {\n\tcanonicalName = &quot;Mbato&quot;,\n}\n\nm[&quot;gwb&quot;] = {\n\tcanonicalName = &quot;Gwa&quot;,\n}\n\nm[&quot;gwc&quot;] = {\n\tcanonicalName = &quot;Kalami&quot;,\n\tscripts\
      \ = {&quot;Arab&quot;},\n\tfamily = &quot;inc-dar&quot;,\n}\n\nm[&quot;gwd&quot;] = {\n\tcanonicalName = &quot;Gawwada&quot;,\n\tfamily = &quot;cus&quot;,\n}\n\nm[&quot;gwe&quot;] = {\n\tcanonicalName = &quot;Gweno&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;gwf&quot;] = {\n\tcanonicalName = &quot;Gowro&quot;,\n}\n\nm[&quot;gwg&quot;] = {\n\tcanonicalName = &quot;Moo&quot;,\n}\n\nm[&quot;gwi&quot;] = {\n\tcanonicalName = &quot;Gwich'in&quot;,\n\totherNames = {&quot;Gwich’\
      in&quot;, &quot;Kutchin&quot;, &quot;Takudh&quot;, &quot;Tukudh&quot;, &quot;Loucheux&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;ath&quot;,\n}\n\nm[&quot;gwj&quot;] = {\n\tcanonicalName = &quot;Gcwi&quot;,\n\totherNames = {&quot;Gǀwi&quot;,\
      \ &quot;Gǀui&quot;},\n}\n\nm[&quot;gwm&quot;] = {\n\tcanonicalName = &quot;Awngthim&quot;,\n}\n\nm[&quot;gwn&quot;] = {\n\tcanonicalName = &quot;Gwandara&quot;,\n}\n\nm[&quot;gwr&quot;] = {\n\tcanonicalName = &quot;Gwere&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;gwt&quot;] = {\n\tcanonicalName = &quot;Gawar-Bati&quot;,\n}\n\nm[&quot;gwu&quot;] = {\n\tcanonicalName = &quot;Guwamu&quot;,\n}\n\nm[&quot;gww&quot;] = {\n\tcanonicalName = &quot;Kwini&quot;,\n}\n\nm[&quot;gwx&quot;]\
      \ = {\n\tcanonicalName = &quot;Gua&quot;,\n}\n\nm[&quot;gxx&quot;] = {\n\tcanonicalName = &quot;Wè Southern&quot;,\n}\n\nm[&quot;gya&quot;] = {\n\tcanonicalName = &quot;Northwest Gbaya&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-sav&quot;,\n\
      }\n\nm[&quot;gyb&quot;] = {\n\tcanonicalName = &quot;Garus&quot;,\n}\n\nm[&quot;gyd&quot;] = {\n\tcanonicalName = &quot;Kayardild&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;aus-tnk&quot;,\n}\n\nm[&quot;gye&quot;] = {\n\tcanonicalName = &quot;Gyem&quot;,\n\
      }\n\nm[&quot;gyf&quot;] = {\n\tcanonicalName = &quot;Gungabula&quot;,\n}\n\nm[&quot;gyg&quot;] = {\n\tcanonicalName = &quot;Gbayi&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;nic-ubg&quot;,\n}\n\nm[&quot;gyi&quot;] = {\n\tcanonicalName = &quot;Gyele&quot;,\n\
      }\n\nm[&quot;gyl&quot;] = {\n\tcanonicalName = &quot;Gayil&quot;,\n}\n\nm[&quot;gym&quot;] = {\n\tcanonicalName = &quot;Ngäbere&quot;,\n}\n\nm[&quot;gyn&quot;] = {\n\tcanonicalName = &quot;Guyanese Creole English&quot;,\n}\n\nm[&quot;gyr&quot;] = {\n\t\
      canonicalName = &quot;Guarayu&quot;,\n\totherNames = {&quot;Gwarayú&quot;},\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;tup&quot;,\n}\n\nm[&quot;gyy&quot;] = {\n\tcanonicalName = &quot;Gunya&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;aus-pam&quot;,\n\
      }\n\nm[&quot;gza&quot;] = {\n\tcanonicalName = &quot;Ganza&quot;,\n}\n\nm[&quot;gzi&quot;] = {\n\tcanonicalName = &quot;Gazi&quot;,\n\tscripts = {&quot;fa-Arab&quot;},\n\tfamily = &quot;ira-wes&quot;,\n}\n\nm[&quot;gzn&quot;] = {\n\tcanonicalName = &quot;Gane&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-hce&quot;,\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2017-08-24T22:06:45.760Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=37115 t=1503612405642443
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Length: '9108'
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:45 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1190.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1068 pass, cp3033 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 809156746, 897676636, 272621716
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4998763\" pageid=\"4998763\" ns=\"828\" title=\"Module:etymology\"><revisions><rev user=\"Daniel Carrero\" timestamp=\"2017-07-23T11:14:01Z\" comment=\"Undo revision 47038621\
      \ by [[Special:Contributions/Daniel Carrero|Daniel Carrero]] ([[User talk:Daniel Carrero|talk]])\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\n--[[\tIf language is an etymology language, iterates\
      \ through parent languages\n\t\tuntil it finds a non-etymology language. ]]\nfunction export.getNonEtymological(lang)\n\twhile lang:getType() == &quot;etymology language&quot; do\n\t\tlocal parentCode = lang:getParentCode()\n\t\tlocal parent = require(&quot;Module:languages&quot;).getByCode(parentCode)\n\
      \t\t\tor require(&quot;Module:etymology languages&quot;).getByCode(parentCode)\n\t\t\tor require(&quot;Module:families&quot;).getByCode(parentCode)\n\t\t\n\t\tlang = parent\n--\t\tmw.log(terminfo.lang:getCode() .. &quot; &quot; .. terminfo.lang:getType())\n\
      \tend\n\t\n\treturn lang\nend\n\nlocal function termError(terminfo)\n\tif terminfo.lang:getType() == &quot;family&quot; then\n\t\tif terminfo.term then\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;etymology/family/has-term&quot;)\n\t\tend\n\t\t\
      terminfo.term = &quot;-&quot;\n\telseif not (terminfo.lang:getType() == &quot;regular&quot; or terminfo.lang:getType() == &quot;reconstructed&quot; or terminfo.lang:getType() == &quot;etymology language&quot;) then\n\t\tif terminfo.term then\n\t\t\terror(&quot;A\
      \ term was provided but the given code \\&quot;&quot; .. terminfo.lang:getCode() .. &quot;\\&quot; is not a language, and therefore cannot have terms or dictionary entries.&quot;)\n\t\tend\n\tend\n\treturn terminfo\nend\n\nlocal function createLink(terminfo,\
      \ templateName)\n\tlocal link = &quot;&quot;\n\t\n\tif terminfo.term == &quot;-&quot; then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/cognate/no-term]]\n\t\t[[Special:WhatLinksHere/Template:tracking/derived/no-term]]\n\t\t[[Special:WhatLinksHere/Template:tracking/borrowed/no-term]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/calque/no-term]]\n\t\t]=]\n\t\trequire(&quot;Module:debug&quot;).track(templateName .. &quot;/no-term&quot;)\n\telse\n--\t\tmw.log(terminfo.term)\n\t\tlink = &quot; &quot; .. require(&quot;Module:links&quot;).full_link(terminfo,\
      \ &quot;term&quot;, true)\n\tend\n\t\n\treturn link\nend\n\nfunction export.format_etyl(lang, source, sort_key, categories)\n\tlocal info = {}\n\t\n\t\n\t-- [[Special:WhatLinksHere/Template:tracking/etymology/sortkey]]\n\tif sort_key then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;etymology/sortkey&quot;)\n\
      \tend\n\t\n\tif not categories then\n\t\tcategories = {}\n\tend\n\t\n\tif source:getCode() == &quot;und&quot; then\n\t\tinfo = {\n\t\t\tdisplay = &quot;undetermined&quot;,\n\t\t\tcat_name = &quot;other languages&quot;,\n\t\t}\n\telseif source:getCode()\
      \ == &quot;mul-tax&quot; then\n\t\tinfo = {\n\t\t\tdisplay = &quot;[[w:taxonomic name|taxonomic name]]&quot;,\n\t\t\tcat_name = &quot;taxonomic names&quot;,\n\t\t}\n\telse\n\t\tinfo.display = source:makeWikipediaLink()\n\t\t\n\t\tif source:getType() ==\
      \ &quot;family&quot; then\n\t\t\tinfo.cat_name = source:getCategoryName()\n\t\telse\n\t\t\tinfo.cat_name = source:getCanonicalName()\n\t\tend\n\tend\n\t\n\t-- Add the categories, but only if there is a current language\n\t\n\tif lang then\n\t\tlocal m_utilities\
      \ = require(&quot;Module:utilities&quot;)\n\t\t\n\t\tif lang:getCode() == source:getCode() then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; twice-borrowed terms&quot;)\n\t\telse\n\t\t\ttable.insert(categories, lang:getCanonicalName()\
      \ .. &quot; terms derived from &quot; .. info.cat_name)\n\t\tend\n\t\t\n\t\tcategories = m_utilities.format_categories(categories, lang, sort_key)\n\telse\n\t\tcategories = &quot;&quot;\n\tend\n\t\n\treturn &quot;&lt;span class=\\&quot;etyl\\&quot;&gt;&quot;\
      \ .. info.display .. categories .. &quot;&lt;/span&gt;&quot;\nend\n\n-- Internal implementation of {{cognate|...}} and {{cog|...}} templates\nfunction export.format_cognate(terminfo, sort_key)\n\treturn export.format_derived(nil, terminfo, sort_key, &quot;cognate&quot;)\n\
      end\n\n-- Internal implementation of {{derived|...}} and {{der|...}} templates\nfunction export.format_derived(lang, terminfo, sort_key, templateName)\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\t\
      terminfo = termError(terminfo)\n\t\n\tlocal link = createLink(terminfo, templateName or &quot;derived&quot;)\n\t\n\treturn export.format_etyl(lang, source, sort_key) .. link\nend\n\n-- Internal implementation of {{inherited|...}} and {{inh|...}} templates\n\
      function export.format_inherited(lang, terminfo, sort_key)\n\tlocal source = terminfo.lang\n\n\tterminfo = termError(terminfo)\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tif not lang:hasAncestor(terminfo.lang) and mw.title.getCurrentTitle().nsText\
      \ ~= &quot;Template&quot; then\n\t\terror(terminfo.lang:getCanonicalName() .. &quot; is not an ancestor of &quot; .. lang:getCanonicalName() .. &quot;.&quot;)\n\tend\n\t\n\tlocal categories = {}\n\t\n\tlocal link = createLink(terminfo, &quot;inherited&quot;)\n\
      \t\n\ttable.insert(categories, lang:getCanonicalName() .. &quot; terms inherited from &quot; .. source:getCanonicalName())\n\t\n\treturn export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\n-- Internal implementation of {{borrowed|...}}\
      \ and {{bor|...}} templates\nfunction export.format_borrowed(lang, terminfo, sort_key, nocap, notext, learned)\n\tif nocap then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;bor/nocap&quot;)\n\tend\n\t\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang\
      \ = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\n\tlocal text = &quot;&quot;\n\tlocal categories = {}\n\n\tif lang:getCode() == source:getCode() then\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; twice-borrowed\
      \ terms&quot;)\n\telseif source:getType() == &quot;family&quot; then\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; terms borrowed from &quot; .. source:getCategoryName())\n\telse\n\t\ttable.insert(categories, lang:getCanonicalName() ..\
      \ &quot; terms borrowed from &quot; .. source:getCanonicalName())\n\tend\n\t\n\tif not notext then\n\t\tif learned then\n\t\t\ttext = &quot;[[learned borrowing|&quot; .. (nocap and &quot;l&quot; or &quot;L&quot;) .. &quot;earned borrowing]] from &quot;\n\
      \t\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; learnedly borrowed terms&quot;)\n\t\telse\n\t\t\ttext = &quot;[[Appendix:Glossary#loanword|&quot; .. (nocap and &quot;b&quot; or &quot;B&quot;) .. &quot;orrowing]] from &quot;\n\t\tend\n\t\
      end\n\t\n\tlocal link = createLink(terminfo, &quot;borrowed&quot;)\n\t\n\treturn text .. export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\n-- Internal implementation of {{calque|...}} template\nfunction export.calque(lang, terminfo,\
      \ parts, sort_key, nocap, notext)\n\tlocal result = &quot;&quot;\n\t\n\tif parts and #parts ~= 0 then\n\t\tresult = result .. require(&quot;Module:compound&quot;).show_compound(lang, nil, parts)\n\t\tresult = result .. &quot;, [[Appendix:Glossary#calque|calque]]\
      \ of&quot;\n\t\tresult = result .. &quot;[[Category:calque with terms]] &quot;\n\telseif not notext then\n\t\tresult = result .. &quot;[[Appendix:Glossary#calque|&quot; .. (nocap and &quot;c&quot; or &quot;C&quot;) .. &quot;alque]] of &quot;\n\tend\n\t\
      \n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\n\tlocal categories = {}\n\n\tif lang:getCode() == source:getCode() then\n\t\ttable.insert(categories, lang:getCanonicalName()\
      \ .. &quot; twice-borrowed terms&quot;)\n\telseif source:getType() == &quot;family&quot; then\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; terms calqued from &quot; .. source:getCategoryName())\n\telse\n\t\ttable.insert(categories, lang:getCanonicalName()\
      \ .. &quot; terms calqued from &quot; .. source:getCanonicalName())\n\tend\n\t\n\tlocal link = createLink(terminfo, &quot;calque&quot;)\n\t\n\tresult = result .. &quot; &quot; ..  export.format_etyl(lang, source, sort_key, categories) .. link\n\t\n\treturn\
      \ result\nend\n\n-- Internal implementation of {{semantic loan|...}} template\nfunction export.format_semantic_loan(lang, terminfo, sort_key, nocap, notext)\n\tif nocap then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;semantic_loan/nocap&quot;)\n\
      \tend\n\t\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\n\tlocal text = &quot;&quot;\n\tlocal categories = {}\n\n\tif lang:getCode() == source:getCode() then\n\t\t\
      table.insert(categories, lang:getCanonicalName() .. &quot; twice-borrowed terms&quot;)\n\telseif source:getType() == &quot;family&quot; then\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; semantic loans from &quot; .. source:getCategoryName())\n\
      \telse\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; semantic loans from &quot; .. source:getCanonicalName())\n\tend\n\t\n\tif not notext then\n\t\ttext = &quot;[[w:Semantic loan|&quot; .. (nocap and &quot;s&quot; or &quot;S&quot;) ..\
      \ &quot;emantic loan]] from &quot;\n\tend\n\t\n\tlocal link = createLink(terminfo, &quot;semantic_loan&quot;)\n\t\n\treturn text .. export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2017-08-24T22:06:45.979Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56315 t=1503612405827334
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:45 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1203.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1065 pass, cp3041 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 587719250, 61689011, 272013736
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"3935515\" pageid=\"3935515\" ns=\"828\" title=\"Module:links\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-08-20T20:01:38Z\" comment=\"Undo revision 47305579 by [[Special:Contributions/Erutuon|Erutuon]]\
      \ ([[User talk:Erutuon|talk]]): more complicated than that\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\t[[Unsupported titles]] and pages with high\n\tmemory usage are listed at [[Module:links/data]].\n\
      \t\n\tOther modules used:\n\t\t[[Module:scripts]]\n\t\t[[Module:gender and number]]\n\t\t[[Module:utilities]]\n\t\t[[Module:string]]\n\t\t[[Module:debug]]\n]=]\n\nlocal m_scriptutils = require(&quot;Module:script utilities&quot;)\n\nlocal ignore_cap =\
      \ {\n\t[&quot;ko&quot;] = true,\n}\n\nlocal phonetic_extraction = {\n\t[&quot;th&quot;] = &quot;Module:th&quot;\n}\n\nlocal pos_tags = {\n\t[&quot;a&quot;] = &quot;adjective&quot;,\n\t[&quot;adv&quot;] = &quot;adverb&quot;,\n\t[&quot;int&quot;] = &quot;interjection&quot;,\n\
      \t[&quot;n&quot;] = &quot;noun&quot;,\n\t[&quot;pron&quot;] = &quot;pronoun&quot;,\n\t[&quot;v&quot;] = &quot;verb&quot;,\n\t[&quot;vi&quot;] = &quot;intransitive verb&quot;,\n\t[&quot;vt&quot;] = &quot;transitive verb&quot;,\n\t[&quot;vti&quot;] = &quot;transitive\
      \ and intransitive verb&quot;,\n}\n\nfunction export.getLinkPage(target, lang)\n\tif mw.loadData(&quot;Module:links/data&quot;).unsupported_titles[target] then\n\t\treturn &quot;Unsupported titles/&quot; .. mw.loadData(&quot;Module:links/data&quot;).unsupported_titles[target]\n\
      \tend\n\t\n\t-- If the link contains unexpanded template parameters, then don't create a link.\n\tif target:find(&quot;{{{&quot;, nil, true) then\n\t\treturn nil\n\tend\n\t\n\tif target:find(&quot;^:&quot;) or target:find(&quot;^w:&quot;) or target:find(&quot;^wikipedia:&quot;)\
      \ then\n\t\treturn target\n\tend\n\t\n\t-- Remove diacritics from the page name\n\ttarget = lang:makeEntryName(target)\n\t\n\t-- Link to appendix for reconstructed terms and terms in appendix-only languages\n\tif target:find(&quot;^*.&quot;) then\n\t\t\
      if lang:getCode() == &quot;und&quot; then\n\t\t\treturn nil\n\t\tend\n\t\t\n\t\ttarget = &quot;Reconstruction:&quot; .. lang:getCanonicalName() .. &quot;/&quot; .. mw.ustring.sub(target, 2)\n\telseif lang:getType() == &quot;reconstructed&quot; then\n\t\
      \terror(&quot;The specified language &quot; .. lang:getCanonicalName() .. &quot; is unattested, while the given word is not marked with '*' to indicate that it is reconstructed&quot;)\n\telseif lang:getType() == &quot;appendix-constructed&quot; then\n\t\
      \ttarget = &quot;Appendix:&quot; .. lang:getCanonicalName() .. &quot;/&quot; .. target\n\tend\n\t\n\treturn target\nend\n\n-- Make a language-specific link from given link's parts\nlocal function makeLangLink(link, lang, id, allowSelfLink)\n\t-- If there\
      \ is no display form, then create a default one\n\tif not link.display then\n\t\tlink.display = link.target\n\t\t\n\t\t-- Strip the prefix from the displayed form\n\t\t-- TODO: other interwiki links?\n\t\tif link.display:find(&quot;^:&quot;) and not mw.loadData(&quot;Module:links/data&quot;).unsupported_titles[link.display]\
      \ then\n\t\t\tlink.display = link.display:gsub(&quot;^:&quot;, &quot;&quot;)\n\t\telse\n\t\t\tlocal prefix = link.display:match(&quot;^([^:]+):&quot;)\n\t\t\tlocal prefixes = {\n\t\t\t\tw = true,\n\t\t\t\twikipedia = true,\n\t\t\t}\n\t\t\t\n\t\t\tif prefixes[prefix]\
      \ then\n\t\t\t\tlink.display = link.display:gsub(&quot;^&quot; .. prefix .. &quot;:&quot;, &quot;&quot;)\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Process the target\n\tlink.target = export.getLinkPage(link.target, lang)\n\t\n\tif not link.target then\n\t\t\
      return link.display\n\tend\n\t\n\t-- If the target is the same as the current page, then return a &quot;self-link&quot; like the software does\n\tif not allowSelfLink and not id and (link.target == mw.title.getCurrentTitle().prefixedText or link.target\
      \ == &quot;:&quot; .. mw.title.getCurrentTitle().prefixedText) then\n\t\treturn &quot;&lt;strong class=\\&quot;selflink\\&quot;&gt;&quot; .. link.display .. &quot;&lt;/strong&gt;&quot;\n\tend\n\t\n\t--[[\n\t\tAdd fragment\n\t\tDo not add a section link\
      \ to &quot;Undetermined&quot;, as such sections do not exist and are invalid.\n\t\tTabbedLanguages handles links without a section by linking to the &quot;last visited&quot; section,\n\t\tbut adding &quot;Undetermined&quot; would break that feature.\n\t\
      ]]\n\tlocal prefix = link.target:match(&quot;^:?([^:]+):&quot;)\n\tlocal prefixes = {\n\t\tw = true,\n\t\twikipedia = true,\n\t\tCategory = true,\n\t}\n\t\n\tif not (prefix and prefixes[prefix]) then\n\t\tif link.fragment or mw.ustring.find(link.target,\
      \ &quot;#$&quot;) then\n\t\t\trequire(&quot;Module:debug&quot;).track{\n\t\t\t\t&quot;links/fragment&quot;,\n\t\t\t\t&quot;links/fragment/&quot; .. lang:getCode()\n\t\t\t}\n\t\tend\n\t\t\n\t\tif not link.fragment and lang:getCode() ~= &quot;und&quot; then\n\
      \t\t\tif id then\n\t\t\t\tlink.fragment = require(&quot;Module:utilities&quot;).make_id(lang, id)\n\t\t\telseif not link.target:find(&quot;^Appendix:&quot;) and not link.target:find(&quot;^Reconstruction:&quot;) then\n\t\t\t\tlink.fragment = lang:getCanonicalName()\n\
      \t\t\tend\n\t\tend\n\t\n\t\t-- This allows linking to pages like [[sms:a]] without it being treated weirdly.\n\t\tlink.target = mw.ustring.gsub(link.target, &quot;:&quot;, &quot;&amp;#x3a;&quot;)\n\tend\n\t\n\treturn &quot;[[&quot; .. link.target .. (link.fragment\
      \ and &quot;#&quot; .. link.fragment or &quot;&quot;) .. &quot;|&quot; .. link.display .. &quot;]]&quot;\nend\n\n\n-- Split a link into its parts\nlocal function parseLink(linktext)\n\tlocal link = {target = linktext}\n\tlocal found, _, first, second\n\
      \t\n\tfound, _, first, second = mw.ustring.find(link.target, &quot;^([^|]+)|(.+)$&quot;)\n\t\n\tif found then\n\t\tlink.target = first\n\t\tlink.display = second\n\telse\n\t\tlink.display = link.target\n\tend\n\t\n\tfound, _, first, second = mw.ustring.find(link.target,\
      \ &quot;^(.+)#(.+)$&quot;)\n\t\n\tif found then\n\t\tlink.target = first\n\t\tlink.fragment = second\n\tend\n\t\n\treturn link\nend\n\n\n-- Creates a basic wikilink to the given term. If the text already contains\n-- links, these are replaced with links\
      \ to the correct section.\nfunction export.language_link(data, allowSelfLink, dontLinkRecons)\n\tif type(data) ~= &quot;table&quot; then\n\t\terror(&quot;The first argument to the function language_link must be a table. See Module:links/documentation for\
      \ more information.&quot;)\n\tend\n\t\n\tlocal text = data.term\n\t\n\tif ignore_cap[data.lang:getCode()] and text then\n\t\ttext = mw.ustring.gsub(text, &quot;%^&quot;, &quot;&quot;)\n\tend\n\t\n\t-- If the text begins with * and another character,\n\t\
      -- then act as if each link begins with *\n\tlocal allReconstructed = false\n\t\n\tif text:find(&quot;^*.&quot;) then\n\t\tallReconstructed = true\n\tend\n\t\n\t-- Do we have embedded wikilinks?\n\tif text:find(&quot;[[&quot;, nil, true) then\n\t\t--[=[\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/links/alt-ignored]]\n\t\t[[Special:WhatLinksHere/Template:tracking/links/id-ignored]]\n\t\t]=]\n\t\t\n\t\tif data.alt then\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;links/alt-ignored&quot;)\n\t\t\
      end\n\t\t\n\t\tif data.id then\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;links/id-ignored&quot;)\n\t\tend\n\t\t\n\t\t-- Begins and ends with a wikilink tag\n\t\tif mw.ustring.find(text, &quot;^%[%[(.+)%]%]$&quot;) then\n\t\t\t-- There are no\
      \ [ ] in between.\n\t\t\t-- This makes the wikilink tag redundant.\n\t\t\tif mw.ustring.find(text, &quot;^%[%[[^%[%]]+%]%]$&quot;) then\n\t\t\t\trequire(&quot;Module:debug&quot;).track(&quot;links/redundant wikilink&quot;)\n\t\t\telse\n\t\t\t\tlocal temp\
      \ = mw.ustring.gsub(text, &quot;^%[%[(.+)%]%]$&quot;, &quot;%1&quot;)\n\t\t\t\ttemp = mw.ustring.gsub(temp, &quot;%]%], %[%[&quot;, &quot;|&quot;)\n\t\t\t\t\n\t\t\t\tif not mw.ustring.find(temp, &quot;[%[%]]&quot;) then\n\t\t\t\t\trequire(&quot;Module:debug&quot;).track(&quot;links/list&quot;)\n\
      \t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\ttext = mw.ustring.gsub(text, &quot;%[%[([^%]]+)%]%]&quot;,\n\t\t\tfunction(linktext)\n\t\t\t\tlocal link = parseLink(linktext)\n\t\t\t\t\n\t\t\t\tif allReconstructed then\n\t\t\t\t\tlink.target = &quot;*&quot;\
      \ .. link.target\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\treturn makeLangLink(link, data.lang, data.id, allowSelfLink, dontLinkRecons)\n\t\t\tend\n\t\t\t)\n\t\t\n\t\t-- Remove the extra * at the beginning if it's immediately followed\n\t\t-- by a link whose display\
      \ begins with * too\n\t\tif allReconstructed then\n\t\t\ttext = mw.ustring.gsub(text, &quot;^%*%[%[([^|%]]+)|%*&quot;, &quot;[[%1|*&quot;)\n\t\tend\n\telse\n\t\t-- There is no embedded wikilink, make a link using the parameters.\n\t\ttext = makeLangLink({target\
      \ = text, display = data.alt}, data.lang, data.id, allowSelfLink, dontLinkRecons)\n\tend\n\t\n\treturn text\nend\n\t\nfunction export.mark(text, itemType, face, lang)\n\tlocal tag = { &quot;&quot;, &quot;&quot; }\n\t\n\tif itemType == &quot;gloss&quot;\
      \ then\n\t\ttag = { '&lt;span class=&quot;mention-gloss-double-quote&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;mention-gloss&quot;&gt;', '&lt;/span&gt;&lt;span class=&quot;mention-gloss-double-quote&quot;&gt;”&lt;/span&gt;' }\n\telseif itemType == &quot;tr&quot;\
      \ then\n\t\tif face == &quot;term&quot; then\n\t\t\ttag = { '&lt;span lang=&quot;' .. lang:getCode() .. '&quot; class=&quot;tr mention-tr Latn&quot;&gt;', '&lt;/span&gt;' }\n\t\telse\n\t\t\ttag = { '&lt;span lang=&quot;' .. lang:getCode() .. '&quot; class=&quot;tr\
      \ Latn&quot;&gt;', '&lt;/span&gt;' }\n\t\tend\n\telseif itemType == &quot;annotations&quot; then\n\t\ttag = { '&lt;span class=&quot;mention-gloss-paren annotation-paren&quot;&gt;(&lt;/span&gt;', '&lt;span class=&quot;mention-gloss-paren annotation-paren&quot;&gt;)&lt;/span&gt;'\
      \ }\n\tend\n\t\n\tif type(text) == &quot;string&quot; then\n\t\treturn tag[1] .. text .. tag[2]\n\telse\n\t\treturn &quot;&quot;\n\tend\nend\n\n-- Format the annotations (things following the linked term)\nfunction export.format_link_annotations(data,\
      \ face)\n\tlocal output = {}\n\t\n\t-- Interwiki link\n\tif data.interwiki then\n\t\ttable.insert(output, data.interwiki)\n\tend\n\t\n\t-- Genders\n\tif type(data.genders) ~= &quot;table&quot; then\n\t\tdata.genders = { data.genders }\n\tend\n\t\n\tif\
      \ data.genders and #data.genders &gt; 0 then\n\t\tlocal m_gen = require(&quot;Module:gender and number&quot;)\n\t\ttable.insert(output, &quot;&amp;nbsp;&quot; .. m_gen.format_list(data.genders, data.lang))\n\tend\n\t\n\tlocal annotations = {}\n\t\n\t--\
      \ Transliteration\n\tif data.tr then\n\t\tlocal kind\n\t\tif face == &quot;term&quot; then\n\t\t\tkind = face\n\t\telse\n\t\t\tkind = &quot;default&quot;\n\t\tend\n\t\t\n\t\ttable.insert(annotations, m_scriptutils.tag_translit(data.tr, data.lang, kind))\n\
      \tend\n\t\n\t-- Gloss/translation\n\tif data.gloss then\n\t\ttable.insert(annotations, export.mark(data.gloss, &quot;gloss&quot;))\n\tend\n\t\n\t-- Part of speech\n\tif data.pos then\n\t\ttable.insert(annotations, pos_tags[data.pos] or data.pos)\n\tend\n\
      \t\n\t-- Literal/sum-of-parts meaning\n\tif data.lit then\n\t\ttable.insert(annotations, &quot;literally &quot; .. export.mark(data.lit, &quot;gloss&quot;))\n\tend\n\t\n\tif #annotations &gt; 0 then\n\t\ttable.insert(output, &quot; &quot; .. export.mark(table.concat(annotations,\
      \ &quot;, &quot;), &quot;annotations&quot;))\n\tend\n\t\n\treturn table.concat(output)\nend\n\n-- A version of {{l}} or {{m}} that can be called from other modules too\nfunction export.full_link(data, face, allowSelfLink, dontLinkRecons)\n\tif type(data)\
      \ ~= &quot;table&quot; then\n\t\terror(&quot;The first argument to the function full_link must be a table. See Module:links/documentation for more information.&quot;)\n\tend\n\t\n\t-- Create the link\n\tlocal output = {}\n\tlocal categories = {}\n\tlocal\
      \ link = &quot;&quot;\n\tlocal annotations\n\t\n\t--local m_utilities = require(&quot;Module:utilities&quot;)\n\t\n\t-- Is there any text to show?\n\tif (data.term or data.alt) then\n\t\t-- Try to detect the script if it was not provided\n\t\tif not data.sc\
      \ then\n\t\t\tdata.sc = require(&quot;Module:scripts&quot;).findBestScript(data.alt or data.term, data.lang)\n\t\tend\n\t\t\n\t\tlocal class = &quot;&quot;\n\t\t\n\t\tif data.accel then\n\t\t\tclass = &quot;form-of lang-&quot; .. data.lang:getCode() ..\
      \ &quot; &quot; .. data.accel\n\t\tend\n\t\t\n\t\t-- Only make a link if the term has been given, otherwise just show the alt text without a link\n\t\tlink = m_scriptutils.tag_text(data.term and export.language_link(data, allowSelfLink, dontLinkRecons)\
      \ or data.alt, data.lang, data.sc, face, class)\n\telse\n\t\t--[[\tNo term to show.\n\t\t\t\tIs there at least a transliteration we can work from?\t]]\n\t\tlink = m_scriptutils.request_script(data.lang, data.sc)\n\t\t\n\t\tif link == &quot;&quot; or not\
      \ data.tr or data.tr == &quot;-&quot; then\n\t\t\t-- No link to show, and no transliteration either. Show a term request.\n\t\t\tlocal category = &quot;&quot;\n\t\t\t\n\t\t\tif mw.title.getCurrentTitle().nsText ~= &quot;Template&quot; then\n\t\t\t\ttable.insert(categories,\
      \ &quot;[[Category:&quot; .. data.lang:getCanonicalName() .. &quot; term requests]]&quot;)\n\t\t\tend\n\t\t\t\n\t\t\tlink = &quot;&lt;small&gt;[Term?]&lt;/small&gt;&quot;\n\t\tend\n\tend\n\t\n\ttable.insert(output, link)\n\t\n\tif data.tr == &quot;&quot;\
      \ or data.tr == &quot;-&quot; then\n\t\tdata.tr = nil\n\t\n\telseif phonetic_extraction[data.lang:getCode()] then\n\t\tlocal m_phonetic = require(phonetic_extraction[data.lang:getCode()])\n\t\tdata.tr = data.tr or m_phonetic.getTranslit(export.remove_links(data.term))\n\
      \t\n\telseif (data.term or data.alt)\n\t\tand not ((data.sc:getCode():find(&quot;Latn&quot;, nil, true)) or data.sc:getCode() == &quot;Latinx&quot;) then\n\t\t\n\t\tif not mw.loadData(&quot;Module:links/data&quot;).high_memory_entries[mw.title.getCurrentTitle().text]\
      \ or not data.tr then\n\t\t\t-- Try to generate a transliteration if necessary\n\t\t\tlocal automated_tr = data.lang:transliterate(export.remove_links(data.alt or data.term), data.sc)\n\t\t\t\n\t\t\tif automated_tr then\n\t\t\t\tlocal manual_tr = data.tr\n\
      \t\t\t\t\n\t\t\t\tif manual_tr then\n\t\t\t\t\tif manual_tr == automated_tr then\n\t\t\t\t\t\ttable.insert(\n\t\t\t\t\t\t\tcategories,\n\t\t\t\t\t\t\t&quot;[[Category:Terms with redundant transliterations]]&quot;\n\t\t\t\t\t\t\t.. &quot;[[Category:Terms\
      \ with redundant transliterations/&quot; .. data.lang:getCode() .. &quot;]]&quot;\n\t\t\t\t\t\t)\n\t\t\t\t\telse\n\t\t\t\t\t\t-- Prevents Arabic root categories from flooding the tracking categories.\n\t\t\t\t\t\tif mw.title.getCurrentTitle().nsText ~=\
      \ &quot;Category&quot; then\n\t\t\t\t\t\t\ttable.insert(\n\t\t\t\t\t\t\t\tcategories,\n\t\t\t\t\t\t\t\t&quot;[[Category:Terms with manual transliterations different from the automated ones]]&quot;\n\t\t\t\t\t\t\t\t.. &quot;[[Category:Terms with manual\
      \ transliterations different from the automated ones/&quot; .. data.lang:getCode() .. &quot;]]&quot;\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\n\t\t\t\tif (not manual_tr) or data.lang:overrideManualTranslit() then\n\t\t\t\t\t\
      data.tr = automated_tr\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Link to the transliteration entry for languages that require this\n\tif data.tr and data.lang:link_tr() then\n\t\tdata.tr = export.language_link{ lang = data.lang, term = data.tr\
      \ }\n\tend\n\t\n\tannotations = export.format_link_annotations(data, face)\n\t\n\ttable.insert(output, annotations)\n\t\n\treturn table.concat(output) .. table.concat(categories)\nend\n\n\n--[[\tStrips links: deletes category links,\n\t\tthe targets of\
      \ piped links,\n\t\tand all double square brackets.\t\t\t]]\nfunction export.remove_links(text)\n\tif type(text) == &quot;table&quot; then\n\t\ttext = text.args[1]\n\tend\n\t\n\tif not text or text == &quot;&quot; then\n\t\treturn &quot;&quot;\n\tend\n\
      \t\n\ttext = text:gsub(&quot;%[%[Category:[^|%]]-|?[^|%]]-%]%]&quot;, &quot;&quot;)\n\ttext = text:gsub(&quot;%[%[[^|%]]-|&quot;, &quot;&quot;)\n\ttext = text:gsub(&quot;%[%[&quot;, &quot;&quot;)\n\ttext = text:gsub(&quot;%]%]&quot;, &quot;&quot;)\n\n\t\
      return text\nend\n\nfunction export.english_links(text)\n\tlocal lang = require(&quot;Module:languages&quot;).getByCode(&quot;en&quot;)\n\t\n\ttext = mw.ustring.gsub(text, &quot;%[%[([^%]]+)%]%]&quot;,\n\t\tfunction(linktext)\n\t\t\tlocal link = parseLink(linktext)\n\
      \t\t\treturn makeLangLink(link, lang, nil, true, false)\n\t\tend\n\t)\n\t\n\treturn text\nend\n\nfunction export.light_link(data)\n\tlocal language_names = mw.loadData(&quot;Module:languages/code to canonical name&quot;)\n\tlocal script_codes = mw.loadData(&quot;Module:scripts/codes&quot;)\n\
      \t\n\tif data.langCode then\n\t\tdata.langName = language_names[data.langCode] or error('The language code &quot;' .. data.langCode .. '&quot; is not recognized.')\n\telse\n\t\terror('Language code is required.')\n\tend\n\t\n\tif not data.term then\n\t\
      \terror('Term to link to is required.')\n\tend\n\t\n\tif data.scCode then\n\t\tif not script_codes[data.scCode] then\n\t\t\terror('The script code &quot;' .. data.sc .. '&quot; is not recognized.')\n\t\tend\n\telse\n\t\terror(&quot;The function light_link\
      \ requires a script code.&quot;)\n\tend\n\t\n\tlocal fragment\n\tif data.id then\n\t\tfragment = data.langName .. &quot;-&quot; .. mw.uri.encode(data.id, &quot;WIKI&quot;)\n\telse\n\t\tfragment = data.langName\n\tend\n\t\n\treturn '&lt;span class=&quot;'\
      \ .. data.scCode .. '&quot; lang=&quot;' .. data.langCode .. '&quot;&gt;[[' .. data.term .. &quot;#&quot; .. fragment .. &quot;|&quot; .. ( data.alt or data.term ) .. &quot;]]&lt;/span&gt;&quot;\nend\n\nfunction export.section_link(link)\n\tif type(link)\
      \ ~= &quot;string&quot; then\n\t\terror(&quot;The first argument to section_link was a &quot; .. type(link) .. &quot;, but it should be a string.&quot;)\n\tend\n\t\n\tlink = mw.ustring.gsub(link, &quot;_&quot;, &quot; &quot;)\n\t\n\tlocal numberSigns =\
      \ require(&quot;Module:string&quot;).count(link, &quot;#&quot;)\n\t\n\tif numberSigns &gt; 1 then\n\t\terror(&quot;The section link should only contain one number sign (#).&quot;)\n\tend\n\t\n\tlocal page, section = mw.ustring.match(link, &quot;^([^#]+)#(.+)$&quot;)\n\
      \t\n\tif page and section then\n\t\treturn table.concat{ &quot;[[&quot; , page, &quot;#&quot;, section, &quot;|&quot;, page, &quot; § &quot;, section, &quot;]]&quot; }\n\telse\n\t\terror('The function &quot;' .. section_link .. '&quot; could not find a\
      \ number sign marking a section name.')\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2017-08-24T22:06:46.161Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=30094 t=1503612406047753
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:46 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1066 pass, cp3032 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 116039977, 231585503, 274400217
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4099100\" pageid=\"4099100\" ns=\"828\" title=\"Module:script utilities\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-08-20T19:16:47Z\" comment=\"Undo revision 47300978\
      \ by [[Special:Contributions/Erutuon|Erutuon]] ([[User talk:Erutuon|talk]]): apparently this uses a bit more memory, and is causing errors in lots of pages\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export =\
      \ {}\n\nlocal m_data = mw.loadData(&quot;Module:script utilities/data&quot;)\n--[=[\nOther modules used:\n\t[[Module:scripts]]\n\t[[Module:languages]]\n\t[[Module:parameters]]\n\t[[Module:utilities]]\n\t[[Module:debug]]\n]=]\n\nfunction export.is_Latin_script(sc)\n\
      \treturn (sc:getCode():find(&quot;Latn&quot;)) or sc:getCode() == &quot;Latinx&quot;\nend\n\n-- Used by [[Template:lang]]\nfunction export.lang_t(frame)\n\tparams = {\n\t\t[1] = {},\n\t\t[2] = { allow_empty = true, default = &quot;&quot; },\n\t\t[&quot;sc&quot;]\
      \ = {},\n\t\t[&quot;face&quot;] = {},\n\t\t[&quot;class&quot;] = {},\n\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\t\n\tlocal lang = args[1]\
      \ or (NAMESPACE == &quot;Template&quot; and &quot;und&quot;) or error(&quot;Language code has not been specified. Please pass parameter 1 to the template.&quot;)\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or require(&quot;Module:languages&quot;).err(lang,\
      \ 1)\n\t\n\tlocal text = args[2]\n\t\n\tlocal sc = args[&quot;sc&quot;]\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\tlocal\
      \ face = args[&quot;face&quot;]\n\t\n\treturn export.tag_text(text, lang, sc, face, class)\nend\n\nlocal function trackChar(text, character, tracking)\n\tif character and mw.ustring.find(text, character) then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;script/&quot;\
      \ .. tracking)\n\tend\nend\n\nlocal function track(text, lang, sc)\n\tlocal U = mw.ustring.char\n\t\n\tif lang and text then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/ang/acute]]\n\t\tif lang:getCode() == &quot;ang&quot; then\n\t\t\tlocal\
      \ decomposed = mw.ustring.toNFD(text)\n\t\t\tlocal acute = U(0x301)\n\t\t\t\n\t\t\ttrackChar(decomposed, acute, &quot;ang/acute&quot;)\n\t\tend\n\t\t\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-phi]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-theta]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-kappa]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-rho]]\n\t\t\tϑ, ϰ, ϱ, ϕ should generally be replaced with θ, κ, ρ, φ.\n\t\t]=]\n\t\tif lang:getCode() == &quot;el&quot;\
      \ or lang:getCode() == &quot;grc&quot; then\n\t\t\ttrackChar(text, &quot;ϑ&quot;, &quot;Greek/wrong-theta&quot;)\n\t\t\ttrackChar(text, &quot;ϰ&quot;, &quot;Greek/wrong-kappa&quot;)\n\t\t\ttrackChar(text, &quot;ϱ&quot;, &quot;Greek/wrong-rho&quot;)\n\t\
      \t\ttrackChar(text, &quot;ϕ&quot;, &quot;Greek/wrong-phi&quot;)\n\t\tend\n\t\t\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/spacing-coronis]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/spacing-smooth-breathing]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/wrong-apostrophe]]\n\t\t\tWhen spacing coronis and spacing smooth breathing are used as apostrophes, \n\t\t\tthey should be replaced with right single quotation marks (’).\n\t\t]=]\n\t\t\
      if lang:getCode() == &quot;grc&quot; then\n\t\t\ttrackChar(text, U(0x1FBD), &quot;Ancient Greek/spacing-coronis&quot;)\n\t\t\ttrackChar(text, U(0x1FBF), &quot;Ancient Greek/spacing-smooth-breathing&quot;)\n\t\t\ttrackChar(text, &quot;[&quot; .. U(0x1FBD)\
      \ .. U(0x1FBF) .. &quot;]&quot;, &quot;Ancient Greek/wrong-apostrophe&quot;)\n\t\tend\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/Russian/grave-accent]]\n\t\tif lang:getCode() == &quot;ru&quot; then\n\t\t\tlocal decomposed = mw.ustring.toNFD(text)\n\
      \t\t\tlocal grave = U(0x300)\n\t\t\t\n\t\t\ttrackChar(decomposed, grave, &quot;Russian/grave-accent&quot;)\n\t\tend\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/Tibetan/trailing-punctuation]]\n\t\tif lang:getCode() == &quot;bo&quot; then\t\
      \t\n\t\t\ttrackChar(text, &quot;[་།]$&quot;, &quot;Tibetan/trailing-punctuation&quot;)\n\t\t\ttrackChar(text, &quot;[་།]%]%]$&quot;, &quot;Tibetan/trailing-punctuation&quot;)\n\t\tend\n\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/broken-ae]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/broken-am]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/wrong-rue-lue]]\n\t\t]=]\n\t\tif lang:getCode() == &quot;th&quot; then\n\t\t\ttrackChar(text, &quot;เ&quot;..&quot;เ&quot;,\
      \ &quot;Thai/broken-ae&quot;)\n\t\t\ttrackChar(text, &quot;ํ[่้๊๋]?า&quot;, &quot;Thai/broken-am&quot;)\n\t\t\ttrackChar(text, &quot;[ฤฦ]า&quot;, &quot;Thai/wrong-rue-lue&quot;)\n\t\tend\n\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Lao/broken-ae]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Lao/broken-am]]\n\t\t]=]\n\t\tif lang:getCode() == &quot;lo&quot; then\n\t\t\ttrackChar(text, &quot;ເ&quot;..&quot;ເ&quot;, &quot;Lao/broken-ae&quot;)\n\t\t\ttrackChar(text, &quot;ໍ[່້໊໋]?າ&quot;, &quot;Lao/broken-am&quot;)\n\
      \t\tend\n\tend\nend\n\n-- Wrap text in the appropriate HTML tags with language and script class.\nfunction export.tag_text(text, lang, sc, face, class, id)\n\tif not sc then\n\t\tsc = require(&quot;Module:scripts&quot;).findBestScript(text, lang)\n\tend\n\
      \t\n\ttrack(text, lang, sc)\n\t\t\n\t-- Replace space characters with newlines in Mongolian-script text, which is written top-to-bottom.\n\tif sc and sc:getDirection() == &quot;down&quot; then\n\t\t--[[\tFirst, escape targets of wikilinks and HTML tags,\n\
      \t\t\t\twhich should not have their spaces\n\t\t\t\treplaced with line breaks. ]]\n\t\tlocal escaped = {}\n\t\t\n\t\tlocal i = 1\n\t\tfor link_target in mw.ustring.gmatch(text, &quot;%[%[([^|]+|)&quot;) do\n\t\t\tescaped[i] = link_target\n\t\t\ttext =\
      \ mw.ustring.gsub(text, link_target, &quot;$&quot; .. i)\n\t\t\ti = i + 1\n\t\tend\n\t\t\n\t\tfor HTML_tag in mw.ustring.gmatch(text, &quot;&lt;[^&gt;]+&gt;&quot;) do\n\t\t\tescaped[i] = HTML_tag\n\t\t\ttext = mw.ustring.gsub(text, HTML_tag, &quot;$&quot;\
      \ .. i)\n\t\t\ti = i + 1\n\t\tend\n\t\t\n\t\ttext = mw.ustring.gsub(\n\t\t\ttext,\n\t\t\t&quot; +&quot;,\n\t\t\t&quot;&lt;br&gt;&quot;\n\t\t)\n\t\t\n\t\t-- Unescape whatever was escaped.\n\t\ttext = mw.ustring.gsub(\n\t\t\ttext,\n\t\t\t&quot;$(%d)&quot;,\n\
      \t\t\tfunction(a)\n\t\t\t\ta = tonumber(a)\n\t\t\t\treturn escaped[a]\n\t\t\tend\n\t\t)\n\tend\n\n\tif sc:getCode() == &quot;Imag&quot; then\n\t\tface = nil\n\tend\n\n\tlocal function class_attr(classes)\n\t\ttable.insert(classes, 1, sc:getCode())\n\t\t\
      if class and class ~= '' then\n\t\t\ttable.insert(classes, class)\n\t\tend\n\t\treturn 'class=&quot;' .. table.concat(classes, ' ') .. '&quot;'\n\tend\n\t\n\tlocal function tag_attr(...)\n\t\tlocal output = {}\n\t\tif id then\n\t\t\ttable.insert(output,\
      \ 'id=&quot;' .. require(&quot;Module:utilities&quot;).make_id(lang, id) .. '&quot;')\n\t\tend\n\t\t\n\t\ttable.insert(output, class_attr({...}) )\n\t\t\n\t\tif lang then\n\t\t\ttable.insert(output, 'lang=&quot;' .. lang:getCode() .. '&quot;')\n\t\tend\n\
      \t\t\n\t\treturn table.concat(output, &quot; &quot;)\n\tend\n\t\n\tif face == &quot;hypothetical&quot; then\n\t-- [[Special:WhatLinksHere/Template:tracking/script-utilities/face/hypothetical]]\n\t\trequire(&quot;Module:debug&quot;).track(&quot;script-utilities/face/hypothetical&quot;)\n\
      \tend\n\t\n\tlocal data = m_data.faces[face or &quot;nil&quot;]\n\t\n\tif sc:getDirection() == &quot;rtl&quot; then\n\t\ttext = mw.ustring.gsub(text, &quot;%p$&quot;, &quot;%0&amp;rlm;&quot;)\n\tend\n\t\n\tlocal post = &quot;&quot;\n\tif face == &quot;translation&quot;\
      \ and sc:getDirection() == &quot;rtl&quot; then\n\t\tpost = &quot;&amp;lrm;&quot;\n\tend\n\t\n\t-- Add a script wrapper\n\tif data then\n\t\treturn ( data.prefix or &quot;&quot; ) .. '&lt;' .. data.tag .. ' ' .. tag_attr(data.class) .. '&gt;' .. text ..\
      \ '&lt;/' .. data.tag .. '&gt;' .. post\n\telse\n\t\terror('Invalid script face &quot;' .. face .. '&quot;.')\n\tend\nend\n\nfunction export.tag_translit(translit, lang, kind, attributes)\n\tif type(lang) == &quot;table&quot; then\n\t\tlang = lang.getCode\
      \ and lang:getCode()\n\t\t\tor error(&quot;Third argument to tag_translit should be a language code or language object.&quot;)\n\tend\n\t\n\tlocal data = m_data.translit[kind or &quot;default&quot;]\n\t\n\tlocal opening_tag = {}\n\t\n\ttable.insert(opening_tag,\
      \ data.tag)\n\tif lang == &quot;ja&quot; then\n\t\ttable.insert(opening_tag, 'class=&quot;' .. (data.classes and data.classes .. &quot; &quot; or &quot;&quot;) .. 'tr&quot;')\n\telse\n\t\ttable.insert(opening_tag, 'lang=&quot;' .. lang .. '-Latn&quot;')\n\
      \t\ttable.insert(opening_tag, 'class=&quot;' .. (data.classes and data.classes .. &quot; &quot; or &quot;&quot;) .. 'tr Latn&quot;')\n\tend\n\t\n\tif data.dir then\n\t\ttable.insert(opening_tag, 'dir=&quot;' .. data.dir .. '&quot;')\n\tend\n\t\n\ttable.insert(opening_tag,\
      \ attributes)\n\t\n\treturn &quot;&lt;&quot; .. table.concat(opening_tag, &quot; &quot;) .. &quot;&gt;&quot; .. translit .. &quot;&lt;/&quot; .. data.tag .. &quot;&gt;&quot;\nend\n\n-- Add a notice to request the native script of a word\nfunction export.request_script(lang,\
      \ sc)\n\tlocal scripts = lang.getScripts and lang:getScripts() or error('The language &quot;' .. lang:getCode() .. '&quot; does not have the method getScripts. It may be unwritten.')\n\t\n\t-- By default, request for &quot;native&quot; script\n\tlocal\
      \ cat_script = &quot;native&quot;\n\tlocal disp_script = &quot;script&quot;\n\t\n\t-- If the script was not specified, and the language has only one script, use that.\n\tif not sc and #scripts == 1 then\n\t\tsc = scripts[1]\n\tend\n\t\n\t-- Is the script\
      \ known?\n\tif sc then\n\t\t-- If the script is Latin, return nothing.\n\t\tif export.is_Latin_script(sc) then\n\t\t\treturn &quot;&quot;\n\t\tend\n\t\t\n\t\tif sc:getCode() ~= scripts[1]:getCode() then\n\t\t\tdisp_script = sc:getCanonicalName()\n\t\t\
      end\n\t\t\n\t\t-- The category needs to be specific to script only if there is chance\n\t\t-- of ambiguity. This occurs when lang=und, or when the language has\n\t\t-- multiple scripts.\n\t\tif lang:getCode() == &quot;und&quot; or scripts[2] then\n\t\t\
      \tcat_script = sc:getCanonicalName()\n\t\tend\n\telse\n\t\t-- The script is not known.\n\t\t-- Does the language have at least one non-Latin script in its list?\n\t\tlocal has_nonlatin = false\n\t\t\n\t\tfor i, val in ipairs(scripts) do\n\t\t\tif not export.is_Latin_script(val)\
      \ then\n\t\t\t\thas_nonlatin = true\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- If there are non-Latin scripts, return nothing.\n\t\tif not has_nonlatin then\n\t\t\treturn &quot;&quot;\n\t\tend\n\tend\n\t\n\tlocal category = &quot;&quot;\n\t\n\tif\
      \ mw.title.getCurrentTitle().nsText ~= &quot;Template&quot; then\n\t\tcategory = &quot;[[Category:&quot; .. lang:getCanonicalName() .. &quot; terms needing &quot; .. cat_script .. &quot; script]]&quot;\n\tend\n\t\n\treturn &quot;&lt;small&gt;[&quot; ..\
      \ disp_script .. &quot; needed]&lt;/small&gt;&quot; .. category\nend\n\nfunction export.template_rfscript(frame)\n\tlocal args = frame.args\n\tlocal lang = args[1] or error(&quot;The first parameter (language code) has not been given&quot;)\n\tlocal sc\
      \ = args[&quot;sc&quot;]; if sc == &quot;&quot; then sc = nil end\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc)\
      \ or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\tlocal ret = export.request_script(lang, sc)\n\t\n\tif ret == &quot;&quot; then\n\t\terror(&quot;This language is written in the Latin alphabet.\
      \ It does not need a native script.&quot;)\n\telse\n\t\treturn ret\n\tend\nend\n\nfunction export.checkScript(text, scriptCode, result)\n\tlocal scriptObject = require(&quot;Module:scripts&quot;).getByCode(scriptCode)\n\t\n\tif not scriptObject then\n\t\
      \terror('The script code &quot;' .. scriptCode .. '&quot; is not recognized.')\n\tend\n\t\n\tlocal originalText = text\n\t\n\t-- Remove non-letter characters.\n\ttext = mw.ustring.gsub(text, &quot;[%A]&quot;, &quot;&quot;)\n\t\n\t-- Remove all characters\
      \ of the script in question.\n\ttext = mw.ustring.gsub(text, &quot;[&quot; .. scriptObject:getCharacters() .. &quot;]&quot;, &quot;&quot;)\n\t\n\tif text ~= &quot;&quot; then\n\t\tif type(result) == &quot;string&quot; then\n\t\t\terror(result)\n\t\telse\n\
      \t\t\terror('The text &quot;' .. originalText .. '&quot; contains the letters &quot;' .. text .. '&quot; that do not belong to the ' .. scriptObject:getCategoryName() .. '.', 2)\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2017-08-24T22:06:46.325Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=28219 t=1503612406221769
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Length: '1493'
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:46 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1067 pass, cp3031 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 1068055521, 185554547, 270476413
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"6149597\" pageid=\"6149597\" ns=\"828\" title=\"Module:script utilities/data\"><revisions><rev user=\"DTLHS\" timestamp=\"2017-07-04T23:34:28Z\" comment=\"\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local data = {}\n\ndata.translit = {\n\t[&quot;term&quot;] = {\n--[=[\tcan't be done until Kana transliterations are correctly parsed by [[Module:links]]\n\t\t[&quot;tag&quot;] = &quot;i&quot;,\n\
      \t\t]=]\n\t\t[&quot;classes&quot;] = &quot;mention-tr&quot;,\n\t},\n\t[&quot;usex&quot;] = {\n\t\t[&quot;tag&quot;] = &quot;i&quot;,\n\t\t[&quot;classes&quot;] = &quot;e-transliteration&quot;,\n\t},\n\t[&quot;head&quot;] = {\n\t\t[&quot;classes&quot;]\
      \ = &quot;headword-tr&quot;,\n\t\t[&quot;dir&quot;] = &quot;ltr&quot;,\n\t},\n\t[&quot;default&quot;] = {},\n}\n\nfor key, value in pairs(data.translit) do\n\tif not value.tag then\n\t\tvalue.tag = &quot;span&quot;\n\tend\nend\n\ndata.faces = {\n\t[&quot;term&quot;]\
      \ = {\n\t\ttag = &quot;i&quot;,\n\t\tclass = &quot;mention&quot;,\n\t},\n\t[&quot;head&quot;] = {\n\t\ttag = &quot;strong&quot;,\n\t\tclass = &quot;headword&quot;,\n\t},\n\t[&quot;hypothetical&quot;] = {\n\t\tprefix = '&lt;span class=&quot;hypothetical-star&quot;&gt;*&lt;/span&gt;',\n\
      \t\ttag = &quot;i&quot;,\n\t\tclass = &quot;hypothetical&quot;,\n\t},\n\t[&quot;bold&quot;] = {\n\t\ttag = &quot;b&quot;,\n\t},\n\t[&quot;translation&quot;] = {\n\t\ttag = &quot;span&quot;,\n\t},\n\t[&quot;nil&quot;] = {\n\t\ttag = &quot;span&quot;,\n\t\
      },\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2017-08-24T22:06:46.498Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=34629 t=1503612406383052
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:46 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1055 pass, cp3033 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 100213658, 896087054, 256536530
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4216643\" pageid=\"4216643\" ns=\"828\" title=\"Module:scripts\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-07-27T01:29:08Z\" comment=\"add getWikipediaArticle to access\
      \ wikipedia_article\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\nlocal Script = {}\n\nfunction Script:getCode()\n\treturn self._code\nend\n\nfunction Script:getCanonicalName()\n\treturn self._rawData.canonicalName\n\
      end\n\nfunction Script:getOtherNames()\n\treturn self._rawData.otherNames or {}\nend\n\nfunction Script:getParent()\n\treturn self._rawData.parent\nend\n\nfunction Script:getSystems()\n\tif not self._systemObjects then\n\t\tlocal m_systems = require(&quot;Module:writing\
      \ systems&quot;)\n\t\tself._systemObjects = {}\n\t\t\n\t\tfor _, sys in ipairs(self._rawData.systems or {}) do\n\t\t\ttable.insert(self._systemObjects, m_systems.getByCode(sys))\n\t\tend\n\tend\n\t\n\treturn self._systemObjects\nend\n\n--function Script:getAllNames()\n\
      --\treturn self._rawData.names\n--end\n\n\nfunction Script:getType()\n\treturn &quot;script&quot;\nend\n\n\nfunction Script:getCategoryName()\n\tlocal name = self._rawData.canonicalName\n\t\n\t-- If the name already has &quot;script&quot;, &quot;code&quot;\
      \ or &quot;semaphore&quot; in it, don't add it.\n\tif name:find(&quot;[Ss]script$&quot;) or name:find(&quot;[Cc]ode$&quot;) or name:find(&quot;[Ss]emaphore$&quot;) then\n\t\treturn name\n\telse\n\t\treturn name .. &quot; script&quot;\n\tend\nend\n\n\n\
      function Script:getWikipediaArticle()\n\treturn self._rawData.wikipedia_article or self:getCategoryName()\nend\n\n\nfunction Script:getCharacters()\n\tif self._rawData.characters then\n\t\treturn self._rawData.characters\n\telse\n\t\treturn nil\n\tend\n\
      end\n\n\nfunction Script:countCharacters(text)\n\tif not self._rawData.characters then\n\t\treturn 0\n\telse\n\t\tlocal _, num = mw.ustring.gsub(text, &quot;[&quot; .. self._rawData.characters .. &quot;]&quot;, &quot;&quot;)\n\t\treturn num\n\tend\nend\n\
      \nfunction Script:getDirection()\n\tlocal direction = self._rawData.direction\n\tif not direction then\n\t\treturn nil\n\telse\n\t\treturn direction\n\tend\nend\n\n\nfunction Script:getRawData()\n\treturn self._rawData\nend\n\n\nfunction Script:toJSON()\n\
      \tlocal ret = {\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\totherNames = self:getOtherNames(),\n\t\ttype = self:getType(),\n\t\t}\n\t\n\treturn require(&quot;Module:JSON&quot;).toJSON(ret)\n\
      end\n\n\nScript.__index = Script\n\n\nfunction export.makeObject(code, data)\n\treturn data and setmetatable({ _rawData = data, _code = code }, Script) or nil\nend\n\n\nfunction export.getByCode(code)\n\tif code == &quot;IPAchar&quot; then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;IPAchar&quot;)\n\
      \tend\n\treturn export.makeObject(code, mw.loadData(&quot;Module:scripts/data&quot;)[code])\nend\n\nfunction export.getByCanonicalName(name)\n\tlocal code = mw.loadData(&quot;Module:scripts/by name&quot;)[name]\n\t\n\tif not code then\n\t\treturn nil\n\
      \tend\n\t\n\treturn export.makeObject(code, mw.loadData(&quot;Module:scripts/data&quot;)[code])\nend\n\n-- Find the best script to use, based on the characters of a string.\nfunction export.findBestScript(text, lang)\n\tif not text or not lang or not lang.getScripts\
      \ then\n\t\treturn export.getByCode(&quot;None&quot;)\n\tend\n\t\n\t--[=[\n\t\tRemove any HTML entities; catfix function in [[Module:utilities]]\n\t\tadds tagging to a no-break space (&amp;nbsp;), which contains Latin characters;\n\t\thence Latin was returned\
      \ as the script if &quot;Latn&quot; is one of the language's scripts.\n\t]=]\n\ttext = mw.ustring.gsub(text, &quot;&amp;[a-zA-Z0-9]+;&quot;, &quot;&quot;)\n\t\n\tlocal scripts = lang:getScripts()\n\t\n\tif #scripts == 1 then\n\t\treturn scripts[1]\n\t\
      end\n\t\n\t-- Try to match every script against the text,\n\t-- and return the one with the most matching characters.\n\tlocal bestcount = 0\n\tlocal bestscript = nil\n\t\n\t-- Get length of text minus any spacing or punctuation characters.\n\tlocal length\
      \ = mw.ustring.len(mw.ustring.gsub(text, &quot;[%s%p]+&quot;, &quot;&quot;))\n\t\n\tif length == 0 then\n\t\treturn export.getByCode(&quot;None&quot;)\n\tend\n\t\n\tfor i, script in ipairs(scripts) do\n\t\tlocal count = script:countCharacters(text)\n\t\
      \t\n\t\tif count &gt;= length then\n\t\t\treturn script\n\t\tend\n\t\t\n\t\tif count &gt; bestcount then\n\t\t\tbestcount = count\n\t\t\tbestscript = script\n\t\tend\n\tend\n\t\n\tif bestscript then\n\t\treturn bestscript\n\tend\n\t\n\t-- No matching script\
      \ was found. Return &quot;None&quot;.\n\treturn export.getByCode(&quot;None&quot;)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2017-08-24T22:06:46.702Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46854 t=1503612406558051
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:46 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1227.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1055 pass, cp3040 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 69331690, 511846221, 264332692
    body: !!binary |-
      
- recorded: 2017-08-24T22:06:46.913Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=59474 t=1503612406774484
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:46 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1053 pass, cp3033 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 253731969, 904796414, 267479592
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"6246525\" pageid=\"6246525\" ns=\"828\" title=\"Module:links/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-06-16T01:12:22Z\" comment=\"adding unsupported titles...\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local data = {}\n\ndata.high_memory_entries = {\n\twater,\n\te,\n\tlanguage,\n}\n\n\nlocal U = mw.ustring.char\n--[[\tThe &quot;actual title&quot; is the page name with the\
      \ prefix &quot;Unsupported titles/&quot; removed.\n\t\t[&quot;displayed_title&quot;] = &quot;actual title&quot;\t]]\ndata.unsupported_titles = {\n\t[&quot;{&quot;] = &quot;Left curly bracket&quot;,\n\t[&quot;}&quot;] = &quot;Right curly bracket&quot;,\n\
      \t[&quot;[&quot;] = &quot;Left square bracket&quot;,\n\t[&quot;]&quot;] = &quot;Right square bracket&quot;,\n\t[&quot;&lt;&quot;] = &quot;Less than&quot;,\n\t[&quot;&gt;&quot;] = &quot;Greater than&quot;,\n\t[&quot;=&lt;&quot;] = &quot;Equal greater than&quot;,\n\
      \t[&quot;=&gt;&quot;] = &quot;Greater than equal&quot;,\n\t[&quot;&gt;=&quot;] = &quot;Greater than equal&quot;,\n\t[&quot;&lt;=&quot;] = &quot;Less than equal&quot;,\n\t[&quot;-&gt;&quot;] = &quot;Hyphen greater than&quot;,\n\t[&quot;&lt;-&quot;] = &quot;Less\
      \ than hyphen&quot;,\n\t[&quot;&gt;_&lt;&quot;] = &quot;Greater than low line less than&quot;,\n\t[&quot;::&quot;] = &quot;Double colon&quot;,\n\t[&quot;: :&quot;] = &quot;Enclosing colons&quot;,\n\t[&quot;:=&quot;] = &quot;Colon equals&quot;,\n\t[&quot;:Þ\
      &quot;] = &quot;Colon capital thorn&quot;,\n\t[&quot;://&quot;] = &quot;Colon slash slash&quot;,\n\t[&quot;:(&quot;] = &quot;Colon left paren&quot;,\n\t[&quot;:)&quot;] = &quot;Colon right paren&quot;,\n\t[&quot;&lt;&gt;&quot;] = &quot;Less than greater\
      \ than&quot;,\n\t[&quot;&lt;3&quot;] = &quot;Less than three&quot;,\n\t[&quot;&lt; &gt;&quot;] = &quot;Enclosing less than greater than&quot;,\n\t[&quot;&lt; /&gt;&quot;] = &quot;Less than trailing slash greater than&quot;,\n\t[&quot;&lt; &gt; &lt;/ &gt;&quot;]\
      \ = &quot;HTML start tag end tag&quot;,\n\t[&quot;&lt;!-- --&gt;&quot;] = &quot;HTML comment&quot;,\n\t[&quot;&lt;g&gt;&quot;] = &quot;g tag&quot;,\n\t[&quot;:-(&quot;] = &quot;Colon hyphen left paren&quot;,\n\t[&quot;:-)&quot;] = &quot;Colon hyphen right\
      \ paren&quot;,\n\t[&quot;|&quot;] = &quot;Vertical line&quot;,\n\t[&quot;||&quot;] = &quot;Vertical line vertical line&quot;,\n\t[&quot;| |&quot;] = &quot;Enclosing vertical lines&quot;,\n\t[&quot;C#&quot;] = &quot;C sharp&quot;,\n\t[&quot;#&quot;] = &quot;Number\
      \ sign&quot;,\n\t[&quot;# #&quot;] = &quot;Enclosing number signs&quot;,\n\t[&quot;:&quot;] = &quot;Colon&quot;,\n\t[&quot;..&quot;] = &quot;Double period&quot;,\n\t[&quot;.&quot;] = &quot;Full stop&quot;,\n\t[&quot;_&quot;] = &quot;Low line&quot;,\n\t\
      [&quot;-_-&quot;] = &quot;Low line interfix&quot;,\n\t[U(0xFFFD)] = &quot;Replacement character&quot;,\n\t[&quot;[ ]&quot;] = &quot;Square brackets&quot;,\n\t[&quot;{ }&quot;] = &quot;Curly brackets&quot;,\n\t[&quot;[…]&quot;] = &quot;Square bracketed\
      \ ellipsis&quot;,\n\t[&quot;_ _&quot;] = &quot;Enclosing low lines&quot;,\n\t[&quot;C|N&gt;K&quot;] = &quot;C through N to K&quot;,\n\t[&quot;о/.&quot;] = &quot;о slash dot&quot;,\n\t[&quot;กรุงเทพมหานคร อมรรัตนโกสินทร์ มหินทรายุธยามหาดิลกภพ นพรัตน์ราช\
      ธานีบุรีรมย์ อุดมราชนิเวศน์มหาสถาน อมรพิมานอวตารสถิต สักกะทัตติยะวิษณุกรรมประสิทธิ์&quot;] = &quot;Thai name of Bangkok&quot;,\n\t[&quot;λοπαδοτεμαχοσελαχογαλεοκρανιολειψανοδριμυποτριμματοσιλφιοκαραβομελιτοκατακεχυμενοκιχλ&quot; .. U(0xAD) .. &quot;επι\
      κοσσυφοφαττοπεριστεραλεκτρυονοπτοκεφαλλιοκιγκλοπελειολαγῳοσιραιοβαφητραγανοπτερύγων&quot;] = &quot;Ancient Greek dish&quot;,\n\t[&quot;:≠&quot;] = &quot;:≠&quot;,\n\t[&quot;S:t&quot;] = &quot;S:t&quot;,\n\t[&quot;S:ta&quot;] = &quot;S:ta&quot;,\n\t[&quot;c:a&quot;]\
      \ = &quot;c:a&quot;,\n\t[&quot;n:a&quot;] = &quot;n:a&quot;,\n\t[&quot;n:o&quot;] = &quot;n:o&quot;,\n\t[&quot;n:r&quot;] = &quot;n:r&quot;,\n\t[&quot;s:a&quot;] = &quot;s:a&quot;,\n\t[&quot;st:a&quot;] = &quot;st:a&quot;,\n\t[&quot;v:a&quot;] = &quot;v:a&quot;,\n\
      }\n\nfor i, item in ipairs(data.high_memory_entries) do\n\tlist[i] = nil\n\tlist[item] = true\nend\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2017-08-24T22:06:47.092Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=25842 t=1503612406984304
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:47 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1281.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1054 pass, cp3040 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 410258228, 505649701, 271754238
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4073440\" pageid=\"4073440\" ns=\"828\" title=\"Module:utilities\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-08-13T01:46:21Z\" comment=\"fix script in catfix template\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nlocal data = mw.loadData(&quot;Module:utilities/data&quot;)\nlocal notneeded = data.notneeded\nlocal neededhassubpage = data.neededhassubpage\n\n-- A\
      \ helper function to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nfunction export.pattern_escape(text)\n\tif type(text) == &quot;table&quot; then\n\t\ttext = text.args[1]\n\tend\n\t\n\ttext = mw.ustring.gsub(text, &quot;([%^$()%%.%[%]*+%-?|])&quot;,\
      \ &quot;%%%1&quot;)\n\treturn text\nend\n\nfunction export.plain_gsub(text, pattern, replacement)\n\tlocal invoked = false\n\t\n\tif type(text) == &quot;table&quot; then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\t\t\t\
      \n\t\t\tlocal params = {\n\t\t\t\t[1] = {},\n\t\t\t\t[2] = {},\n\t\t\t\t[3] = { allow_empty = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(&quot;Module:parameters&quot;).process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern =\
      \ args[2]\n\t\t\treplacement = args[3]\n\t\telse\n\t\t\terror(&quot;If the first argument to plain_gsub is a table, it should be a frame object.&quot;)\n\t\tend\n\telse\n\t\tif not ( type(pattern) == &quot;string&quot; or type(pattern) == &quot;number&quot;\
      \ ) then\n\t\t\terror(&quot;The second argument to plain_gsub should be a string or a number.&quot;)\n\t\tend\n\t\t\n\t\tif not ( type(replacement) == &quot;string&quot; or type(replacement) == &quot;number&quot; ) then\n\t\t\terror(&quot;The third argument\
      \ to plain_gsub should be a string or a number.&quot;)\n\t\tend\n\tend\n\t\n\tpattern = export.pattern_escape(pattern)\n\t\n\tif invoked then\n\t\ttext = mw.ustring.gsub(text, pattern, replacement)\n\t\treturn text\n\telse\n\t\treturn mw.ustring.gsub(text,\
      \ pattern, replacement)\n\tend\nend\n\n--[[\nFormat the categories with the appropriate sort key. CATEGORIES is a list of\ncategories.\n\t-- LANG is an object encapsulating a language; if nil, the object for\n\t   language code 'und' (undetermined) will\
      \ be used.\n\t-- SORT_KEY is placed in the category invocation, and indicates how the\n\t   page will sort in the respective category. Normally this should be nil,\n\t   and a default sort key based on the subpage name (the part after the\n\t   colon)\
      \ will be used.\n\t-- SORT_BASE lets you override the default sort key used when SORT_KEY is\n\t   nil. Normally, this should be nil, and a language-specific default sort\n\t   key is computed from the subpage name (e.g. for Russian this converts\n\t \
      \  Cyrillic ё to a string consisting of Cyrillic е followed by U+10FFFF,\n\t   so that effectively ё sorts after е instead of the default Wikimedia\n\t   sort, which (I think) is based on Unicode sort order and puts ё after я,\n\t   the last letter of\
      \ the Cyrillic alphabet.\n\t-- FORCE_OUTPUT forces normal output in all namespaces. Normally, nothing\n\t   is output if the page isn't in the main, Appendix:, Reconstruction: or\n\t   Citations: namespaces.\n]]\nfunction export.format_categories(categories,\
      \ lang, sort_key, sort_base, force_output, sc)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\t\n\tif type(lang) == &quot;table&quot; and not lang.getCode then\n\t\terror(&quot;The second argument to format_categories should be a language object.&quot;)\n\
      \tend\n\t\n\tif force_output or data.allowedNamespaces[NAMESPACE] then\n\t\tlocal PAGENAME = mw.title.getCurrentTitle().text\n\t\tlocal SUBPAGENAME = mw.title.getCurrentTitle().subpageText\n\t\t\n\t\tif not lang then\n\t\t\tlang = require(&quot;Module:languages&quot;).getByCode(&quot;und&quot;)\n\
      \t\tend\n\t\t\n\t\t-- Generate a default sort key\n\t\tsort_base = lang:makeSortKey(sort_base or SUBPAGENAME, sc)\n\t\t\n\t\tif sort_key and sort_key ~= &quot;&quot; then\n\t\t\t-- Gather some statistics regarding sort keys\n\t\t\tif mw.ustring.upper(sort_key)\
      \ == sort_base then\n\t\t\t\ttable.insert(categories, &quot;Sort key tracking/redundant&quot;)\n\t\t\tend\n\t\telse\n\t\t\tsort_key = sort_base\n\t\tend\n\t\t\n\t\t--[[\tIf the resulting key is the same as the wiki software's\n\t\t\t\tdefault, or if the\
      \ sortkey is empty, remove it\t\t\t ]]\n\t\tif sort_key == PAGENAME or sort_key == &quot;&quot; then\n\t\t\tsort_key = nil\n\t\tend\n\t\t\n\t\tlocal out_categories = {}\n\t\tfor key, cat in ipairs(categories) do\n\t\t\tout_categories[key] = &quot;[[Category:&quot;\
      \ .. cat .. (sort_key and &quot;|&quot; .. sort_key or &quot;&quot;) .. &quot;]]&quot;\n\t\tend\n\t\t\n\t\treturn table.concat(out_categories, &quot;&quot;)\n\telse\n\t\treturn &quot;&quot;\n\tend\nend\n\n-- Used by {{categorize}}\nfunction export.template_categorize(frame)\n\
      \tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\tlocal format = frame.args[&quot;format&quot;]\n\tlocal args = frame:getParent().args\n\t\n\tlocal langcode = args[1]; if langcode == &quot;&quot; then langcode = nil end\n\tlocal sort_key = args[&quot;sort&quot;];\
      \ if sort_key == &quot;&quot; then sort_key = nil end\n\tlocal categories = {}\n\t\n\tif not langcode then\n\t\tif NAMESPACE == &quot;Template&quot; then return &quot;&quot; end\n\t\terror(&quot;Language code has not been specified. Please pass parameter\
      \ 1 to the template.&quot;)\n\tend\n\t\n\tlocal lang = require(&quot;Module:languages&quot;).getByCode(langcode)\n\t\n\tif not lang then\n\t\tif NAMESPACE == &quot;Template&quot; then return &quot;&quot; end\n\t\terror(&quot;The language code \\&quot;&quot;\
      \ .. langcode .. &quot;\\&quot; is not valid.&quot;)\n\tend\n\t\n\tlocal prefix = &quot;&quot;\n\t\n\tif format == &quot;pos&quot; then\n\t\tprefix = lang:getCanonicalName() .. &quot; &quot;\n\telseif format == &quot;topic&quot; then\n\t\tprefix = lang:getCode()\
      \ .. &quot;:&quot;\n\tend\n\t\n\tlocal i = 2\n\tlocal cat = args[i]\n\t\n\twhile cat do\n\t\tif cat ~= &quot;&quot; then\n\t\t\ttable.insert(categories, prefix .. cat)\n\t\tend\n\t\t\n\t\ti = i + 1\n\t\tcat = args[i]\n\tend\n\t\n\treturn export.format_categories(categories,\
      \ lang, sort_key)\nend\n\nfunction export.catfix(lang, sc)\n\tif not lang then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;catfix/no lang&quot;)\n\t\treturn nil\n\telseif type(lang) ~= &quot;table&quot; then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;catfix/lang\
      \ not table&quot;)\n\t\treturn nil\n\tend\n\tlocal canonicalName = lang:getCanonicalName() or error('The first argument to the function &quot;catfix&quot; should be a language object from Module:languages.')\n\t\n\tif sc and not sc.getCode then\n\t\terror('The\
      \ second argument to the function &quot;catfix&quot; should be a script object from Module:scripts.')\n\tend\n\t\n\t-- To add script classes to links on pages created by category boilerplate templates.\n\tif not sc then\n\t\tsc = data.catfix_scripts[lang:getCode()]\n\
      \t\tif sc then\n\t\t\tsc = require(&quot;Module:scripts&quot;).getByCode(sc)\n\t\tend\n\tend\n\t\n\treturn &quot;&lt;span id=\\&quot;catfix\\&quot; style=\\&quot;display:none;\\&quot; class=\\&quot;CATFIX-&quot; .. mw.uri.anchorEncode(canonicalName) ..\
      \ &quot;\\&quot;&gt;&quot; ..\n\t\trequire(&quot;Module:script utilities&quot;).tag_text(&quot;&amp;nbsp;&quot;, lang, sc, nil) ..\n\t\t&quot;&lt;/span&gt;&quot;\nend\n\nfunction export.catfix_template(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t\t[2]\
      \ = { alias_of = &quot;sc&quot; },\n\t\t[&quot;sc&quot;] = {},\n\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal lang = require(&quot;Module:languages&quot;).getByCode(args[1]) or require(&quot;Module:languages&quot;).err(args[1],\
      \ 1)\n\t\n\tlocal sc = args.sc\n\tif sc then\n\t\tsc = require(&quot;Module:scripts&quot;).getByCode(sc) or error('The script code &quot;' .. sc .. '&quot;, provided in the second parameter, is not valid.')\n\tend\n\t\n\treturn export.catfix(lang, sc)\n\
      end\n\n-- Not exporting because it is not used yet.\nlocal function getDateTense(frame) \n\tlocal name_num_mapping = {[&quot;January&quot;] = 1, [&quot;February&quot;] = 2, [&quot;March&quot;] = 3, [&quot;April&quot;] = 4, [&quot;May&quot;] = 5, [&quot;June&quot;]\
      \ = 6, \n\t\t[&quot;July&quot;] = 7, [&quot;August&quot;] = 8, [&quot;September&quot;] = 9, [&quot;October&quot;] = 10, [&quot;November&quot;] = 11, [&quot;December&quot;] = 12, \n\t\t[1] = 1, [2] = 2, [3] = 3, [4] = 4, [5] = 5, [6] = 6, [7] = 7, [8] =\
      \ 8, [9] = 9, [10] = 10, [11] = 11, [12] = 12}\n\tlocal month = name_num_mapping[frame.args[2]]\n\tlocal date = os.time({year = frame.args[1], day = frame.args[3], month = month})\n\tlocal today = os.time() -- 12 AM/PM\n\tlocal diff = os.difftime(date,\
      \ today)\n\tlocal daylength = 24 * 3600\n\t\n\tif diff &lt; -daylength / 2 then return &quot;past&quot;\n\telse \n\t\tif diff &gt; daylength / 2  then return &quot;future&quot;\n\t\telse return &quot;present&quot; end\n\tend\nend\n\nfunction export.make_id(lang,\
      \ str)\n\t--[[\tIf called with invoke, first argument is a frame object.\n\t\t\tIf called by a module, first argument is a language object. ]]\n\tlocal invoked = false\n\t\n\tif type(lang) == &quot;table&quot; then\n\t\tif lang.args then\n\t\t\tinvoked\
      \ = true\n\t\t\t\n\t\t\tlocal frame = lang\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = {},\n\t\t\t\t[2] = {},\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\t\t\n\t\t\tlocal langCode\
      \ = args[1]\n\t\t\tstr = args[2]\n\t\t\t\n\t\t\tlocal m_languages = require(&quot;Module:languages&quot;)\n\t\t\t\n\t\t\tlang = m_languages.getByCode(langCode) or m_languages.err(langCode, 1)\n\t\telseif not lang.getCanonicalName then\n\t\t\terror(&quot;The\
      \ first argument to make_id should be a language object.&quot;)\n\t\tend\n\tend\n\n\tif not ( type(str) == &quot;string&quot; or type(str) == &quot;number&quot; ) then\n\t\terror(&quot;The second argument to make_id should be a string or a number.&quot;)\n\
      \tend\n\t\n\tlocal canonicalName = lang:getCanonicalName()\n\t\n\tstr = mw.uri.encode(str, &quot;WIKI&quot;)\n\t\n\tlocal id = canonicalName .. &quot;-&quot; .. str\n\t\n\tif invoked then\n\t\treturn '&lt;li class=&quot;senseid&quot; id=&quot;' .. id ..\
      \ '&quot;&gt;'\n\telse\n\t\treturn id\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2017-08-24T22:06:47.273Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Zell_im_Wiesental:47.70:7.85:v4; WMF-Last-Access=24-Aug-2017; WMF-Last-Access-Global=24-Aug-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42502 t=1503612407154211
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename="api-result.xml"
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 24 Aug 2017 22:06:47 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1230.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=24-Aug-2017;WMF-Last-Access-Global=24-Aug-2017;https=1
      X-Cache: cp1055 pass, cp3031 pass, cp3041 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.24.11
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.2
      X-Varnish: 96827571, 191466187, 267608607
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"6279245\" pageid=\"6279245\" ns=\"828\" title=\"Module:utilities/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-08-15T18:11:18Z\" comment=\"I think Syloti Nagari is\
      \ the default script for Sylheti\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local data = {}\n\ndata.notneeded = {\n\t[&quot;und&quot;] = true,\n\t[&quot;cmn&quot;] = true,\n\t[&quot;ja&quot;] = true,\n\t[&quot;zu&quot;]\
      \ = true,\n\t[&quot;nan&quot;] = true,\n\t[&quot;yue&quot;] = true,\n\t[&quot;ko&quot;] = true,\n}\n\ndata.neededhassubpage = {\n\t[&quot;ga&quot;] = true,\n\t[&quot;gv&quot;] = true,\n\t[&quot;nv&quot;] = true,\n\t[&quot;roa-jer&quot;] = true,\n\t[&quot;fr&quot;]\
      \ = true,\n\t[&quot;rm&quot;] = true,\n\t[&quot;prg&quot;] = true,\n\t[&quot;gd&quot;] = true,\n\t[&quot;twf&quot;] = true,\n\t[&quot;en&quot;] = true,\n\t[&quot;ro&quot;] = true,\n\t[&quot;egl&quot;] = true,\n\t[&quot;roa-tar&quot;] = true,\n\t[&quot;gl&quot;]\
      \ = true,\n\t[&quot;ast&quot;] = true,\n\t[&quot;br&quot;] = true,\n}\n\n--[[\n\tScript that should be applied to links in categories.\n]]\ndata.catfix_scripts = {\n\t[&quot;ab&quot;] = &quot;Cyrl&quot;,\n\t[&quot;ae&quot;] = &quot;Avst&quot;,\n\t[&quot;ar&quot;]\
      \ = &quot;Arab&quot;,\n\t[&quot;ary&quot;] = &quot;Arab&quot;,\n\t[&quot;be&quot;] = &quot;Cyrl&quot;,\n\t[&quot;cu&quot;] = &quot;Cyrs&quot;,\n\t[&quot;grc&quot;] = &quot;polytonic&quot;,\n\t[&quot;he&quot;] = &quot;Hebr&quot;,\n\t[&quot;ka&quot;] = &quot;Geor&quot;,\n\
      \t[&quot;orv&quot;] = &quot;Cyrs&quot;,\n\t[&quot;ru&quot;] = &quot;Cyrl&quot;,\n\t[&quot;sa&quot;] = &quot;Deva&quot;,\n\t[&quot;syl&quot;] = &quot;Sylo&quot;,\n\t[&quot;zle-ono&quot;] = &quot;Cyrs&quot;,\n--[[\n\t[&quot;&quot;] = &quot;&quot;,\n]]\n\
      }\n\n-- Namespaces in which format_categories will add categories.\ndata.allowedNamespaces = {\n\t[&quot;&quot;] = true,\n\t[&quot;Appendix&quot;] = true,\n\t[&quot;Reconstruction&quot;] = true,\n\t[&quot;Citations&quot;] = true,\n\t[&quot;Talk&quot;]\
      \ = true,\n\t[&quot;Appendix talk&quot;] = true,\n\t[&quot;Reconstruction talk&quot;] = true,\n\t[&quot;Category talk&quot;] = true,\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
