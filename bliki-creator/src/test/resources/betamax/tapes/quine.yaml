!tape
name: quine
interactions:
- recorded: 2019-04-15T21:05:52.176Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=quine&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45404 t=1555362352072915
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:52 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Set-Cookie: WMF-Last-Access=15-Apr-2019;Path=/;HttpOnly;secure;Expires=Fri, 17 May 2019 12:00:00 GMT, WMF-Last-Access-Global=15-Apr-2019;Path=/;Domain=.wiktionary.org;HttpOnly;secure;Expires=Fri, 17 May 2019 12:00:00 GMT, GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; Path=/; secure; Domain=.wiktionary.org
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;https=1;nocookies=1
      X-Cache: cp1085 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 570415092, 494710774, 677182290
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="3862" pageid="3862" ns="0" title="quine"><revisions><rev user="DCDuring" timestamp="2018-08-26T17:13:42Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="/* Verb */" xml:space="preserve">==English==

      ===Etymology===
      {{named-after|occ=philosopher and logician|Willard Van Orman Quine|wplink==|lang=en}}. Senses related to self-reference are derived from [[w:Douglas Hofstadter|Douglas Hofstadter]]'s ''[[w:Gödel, Escher, Bach|Gödel, Escher, Bach]]'' (referencing the [[w:Quine's paradox|paradox named after him]]), while the verb sense of "to deny the importance or significance of something" was independently coined by [[w:Daniel Dennett|Daniel Dennett]] in ''[[w:The Philosophical Lexicon|The Philosophical Lexicon]]''.

      ===Pronunciation===
      * {{a|US}} {{IPA|/kwaɪn/|lang=en}}

      ===Noun===
      {{wikipedia|Quine (computing)}}
      {{en-noun}}

      # {{lb|en|computing}} A program that produces its own [[source code]] as output.
      #* '''1994''', John David Regehr, ''[//groups.google.com/d/msg/comp.lang.misc/-dR-TMoB3S4/CMfGrs1MzwQJ a quine in C++?]'', comp.lang.misc, Usenet
      #*: This has been bugging me recently. Any '''quines''' or pointers to relevant articles or web pages is appreciated. Thanks!
      #* '''1999''', Gergo Barany, ''[//groups.google.com/d/msg/comp.lang.c/EHioEFXMN_A/4BtmxcV_dlAJ Re: CC hack?]'', comp.lang.c, Usenet
      #*: There was also a quine thread here in comp.lang.c just days ago, search deja.com (the thread's title was something about self-printing programs, I think).
      #* '''2002''', Clinton Pierce, ''Perl Developer's Dictionary'', Sams Publishing {{ISBN|9780672320675}}, page 269
      #*: Most '''quines''' are notoriously difficult (and fiendish) to write. Perl can cheat, though. :)
      #* '''2003''', Arthur J. O'Dwyer, ''[//groups.google.com/d/msg/comp.lang.c/mERds_qS6wg/vYrezr0rWqoJ Re: "A to Z of C"]'', comp.lang.c, Usenet
      #*: Why have a one-page chapter that doesn't say anything? At the least, you should present a quine program written in pure ISO C (I can send you one if you like); {{...}}
      #* '''2004''', David Darling, ''The Universal Book of Mathematics: From Abracadabra to Zeno's Paradoxes'', John Wiley &amp; Sons {{ISBN|9780471667001}}, page 264
      #*: Although writing a '''quine''' is not always easy, and in fact may seem impossible, it can always be done in any programming language that is Turing complete (see Turing machine), which includes every programming language actually in use.
      #* '''2005''', Simon Cozens, ''Advanced Perl Programming'', O'Reilly Media {{ISBN|9781449378912}}, page 260
      #*: SelfGOL can reproduce itself; it can turn other programs into a '''quine'''; it can display a scrolling banner; it plays the Game of Life; and it contains no (ordinary) loops, goto statements, or if statements. Control flow is done, well, interestingly.
      #* '''2008''', Uwe Seifert, Jin-hyun Kim, Anthony Moore, ''Paradoxes of Interactivity: Perspectives for Media Theory, Human-computer Interaction, and Artistic Investigations'', transcript Verlag {{ISBN|9783899428421}}, page 179
      #*: Yet from a different perspective, it describes the process of producing this very code; in other words, it is because object- and meta-language interrelate that makes a '''quine''' difficult; in less reflective programs, where means and ends are more separate, this difficulty is not so obvious.
      #* '''2009''', Mike Ash, [//groups.google.com/d/msg/rec.arts.sf.written/tN-qCzPjCAE/7Uowd0MXCmUJ Re: 406 Not Acceptable (was Re: "--All You Zombies--" title)], rec.arts.sf.written, Usenet
      #*: Gee, last time I wrote a '''quine''' in Lisp it ended up being kind of difficult...
      #* '''2011''', Antoine Amarilli et al., "Can Code Polymorphism Limit Information Leakage?", ''Information Security Theory and Practice: Security and Privacy of Mobile Devices in Wireless Communication'' (edited by Claudio Agostino Ardagna, Jianying Zhou), Springer {{ISBN|9783642210396}}, page 14 [https://eprint.iacr.org/2011/099.pdf]
      #*: The solution is to make a '''quine''' that is also a λ-expression (instead of a list of statements). This is possible, thanks to S-expressions. The way the '''quine''' works relies on the fact that its code is a list of statements and that the last one can take a list of the previous ones as arguments.
      #* '''2012''', Pietro Liò, Dinesh Verma, ''Biologically Inspired Networking and Sensing: Algorithms and Architectures'', IGI Global Snippet {{ISBN|9781613500934}}
      #*: '''Quines''' exist for any programming language that is Turing complete and it is a common challenge for students to come up with a '''Quine''' in their language of choice. The '''Quine''' Page provides a comprehensive list of such programs in various languages.
      #* '''2013''', Brian, ''[//groups.google.com/d/msg/talk.religion.buddhism/Denn9TZywdo/edWL0Sat5cwJ Re: "Mountains will be Mountains"]'', talk.religion.buddhism, Usenet
      #*: Upon receiving a "QUINE" request by the client, the server will first send a 01 OK response, and will then provide the client with a '''quine''' in the programming language used to implement the server.

      ====Translations====
      {{trans-top|program that outputs its own source code}}
      {{trans-mid}}
      {{trans-bottom}}

      ====Further reading====
      * {{R:Jargon File}}

      ===Verb===
      {{en-verb|quin}}

      # {{lb|en|philosophy}} To deny the existence or significance of something obviously real or important.
      #* '''1993''', Howard Margolis, ''Paradigms and Barriers: How Habits of Mind Govern Scientific Beliefs'', University of Chicago Press {{ISBN|9780226505237}}, page 62
      #*: As with the puzzle of what happens during the combustion of a metal in pure oxygen (the "steel wool" experiment), this result can of course be '''quined'''. Taking the phlogistic view, we could say that the calx requires the same phlogiston content as the metal, so of course the amount of water absorbed must be in accord with that.
      #* '''1999''', Denis Fisette, ''Consciousness and Intentionality: Models and Modalities of Attribution'', Springer {{ISBN|9780792359074}}, page 119
      #*: They deny that mental states and events actually possess the qualitative properties attributed to them by qualia friends and, as a consequence, they advocate '''quining''' qualia.
      #* '''2000''', Don Ross, ''Introduction: The Dennettian Stance'' in 2000, Don Ross, Andrew Brook and David Thompson, ''Dennett’s Philosophy: A Comprehensive Assessment'', Massachusetts Institute of Technology, [http://books.google.com/books?id=jDwFYqcMEScC&amp;pg=PA14&amp;dq=%22quined%22#v=onepage page 14]:
      #*: Qualia are '''quined''' not because Dennett imagines that there is nothing it is like to be conscious, but because no clear demarcation can be drawn between representations of qualitative properties and representations of other sorts of states.
      #* '''2001''', Nenad Miscevic, "'''Quining''' the apriori", ''Knowledge, Language and Logic: Questions for Quine'' (edited by A. Orenstein, P. Kotatko), Springer {{ISBN|9781402002533}}, page 95
      #* '''2003''', W. Martin Davies, ''The Philosophy of Sir William Mitchell (1861-1962): A Mind's Own Place'', Edwin Mellen Press Limited, [http://books.google.com/books?id=0d_WAAAAMAAJ&amp;pg=PA182&amp;dq=%22quined%22#search_anchor page 182]:
      #*: Structure in the phenomenological realm is not something to be “'''quined'''”, but fostered.
      #* '''2003''', Roy Sorensen, ''A Brief History of the Paradox: Philosophy and the Labyrinths of the Mind: Philosophy and the Labyrinths of the Mind'', Oxford University Press {{ISBN|9780199728572}}, page 357
      #*: Daniel Dennett's ''The Philosophical Lexicon'' defines "quine" as a verb: "to deny the existence or significance of something real or significant". Quine has '''quined''' names, intentions, and the distinction between psychology and epistemology. In 1951 Quine '''quined''' the distinction between analytic and synthetic statements.
      #* '''2008''', Daniel Barnett, ''Movement as Meaning: In Experimental Film'', Rodopi {{ISBN|9789042023857}}, page 114
      #*: The private language machine and the evolution of a medium: One of the things that Wittgenstein is most famous for is '''quining''' "private language". By saying that private languages can't exist Wittgenstein wanted us to recognize the inescapable function of the social fabric in language's work.
      #* '''2009''', Andrew Pessin, ''Mental Transparency, Direct Sensaition, and the Unity of the Cartesian Mind'' in 2009, Jon Miller, ''Topics in Early Modern Philosophy of Mind'', Springer, [http://books.google.com/books?id=HDEyqVo_RdAC&amp;pg=PA34&amp;dq=%22quined%22#v=onepage page 34]:
      #*: One might object that in this section I’ve not exactly '''quined''' Cartesian qualia, {{...}}
      # To [[append]] something to a quotation of itself.
      #* '''1984''', Douglas R. Hofstadter, "Analogies and Metaphors to Explain Gödel's Theorem", ''Mathematics: People, Problems, Results'' (edited by Douglas M. Campbell, John C. Higgins), Taylor &amp; Francis {{ISBN|9780534032036}}, page 274
      #*: "Quining" is what I called it in my book. (He certainly didn't call it that!) '''Quining''' is an operation that I define on any string of English. {{...}} Here is an example of a '''quined''' phrase: "is a sentence with no subject" is a sentence with no subject.
      #* '''1997''', Nathaniel S. Hellerstein, ''Diamond: A Paradox Logic'', World Scientific {{ISBN|9789810228507}}, page 183
      #*: Diamond arises in Gödelian meta-mathematics. In meta-math, sentences can refer to each other's provability, and to '''quining'''. This yields self-reference: T = "is provable when quined" is provable when quined.
      #* '''2001''', Howard Mirowitz, ''[//groups.google.com/d/msg/rec.music.dylan/-glZphUrLHc/ef-3ORmR7oYJ Re: Why is L&amp;amp;T in quotation marks?]'', rec.music.dylan, Usenet
      #*: In "Love And Theft", Dylan '''quined''' the love and theft in his songs in the album's title, "Love And Theft". So the subtext, the meaning of the entire album, when preceded by its quotation, its symbol, yields a paradox.
      #* '''2001''', Jim Evans, ''[//groups.google.com/d/msg/rec.humor.oracle.d/RcSlDstxB6M/rTY4DUufepYJ Re: Quining for the fjords]'', rec.humor.oracle.d, Usenet
      #*: And, of course, the existence of various sigmonsters guarantees entire '''quined'''-posts.

      ----

      ==Scots==

      ===Etymology===
      Variant of {{m|sco|quean}}, cognate with English {{m|en|quean}}. More at {{m|en|queen}}.

      ===Pronunciation===
      * {{IPA|/kwəin/|lang=sco}}

      ===Noun===
      {{sco-noun}}

      # {{lb|sco|Doric Scots}} young [[woman]], [[girl]], [[daughter]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:05:52.344Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Anamed-after&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48462 t=1555362352245182
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '2634'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:52 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1226.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 587785476, 565874379, 694532184
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3630646\" pageid=\"3630646\" ns=\"10\" title=\"Template:named-after\"><revisions><rev user=\"Rua\" timestamp=\"2019-03-31T20:41:52Z\" contentformat=\"\
      text/x-wiki\" contentmodel=\"wikitext\" comment=\"\" xml:space=\"preserve\">{{{alt|&lt;!--\n  --&gt;{{#if:{{{nocap|}}}|n|N}}amed after &lt;!--\n  \n  --&gt;{{#if:{{{nationality|{{{nat|}}}}}}&lt;!--\n  --&gt;|&lt;!--\n    --&gt;{{{nationality|{{{nat|}}}}}}&lt;!--\n\
      \    --&gt;&amp;#32;&lt;!--\n  --&gt;}}&lt;!--\n  \n  --&gt;{{#if:{{{occupation|{{{occ|}}}}}}&lt;!--\n  --&gt;|&lt;!--\n    --&gt;{{named-after/list&lt;!--\n    --&gt;|{{{occupation|{{{occ|}}}}}}&lt;!--\n    --&gt;|{{{occupation2|{{{occ2|}}}}}}&lt;!--\n\
      \    --&gt;|{{{occupation3|{{{occ3|}}}}}}&lt;!--\n    --&gt;|{{{occupation4|{{{occ4|}}}}}}&lt;!--\n    --&gt;|{{{occupation5|{{{occ5|}}}}}}&lt;!--\n    --&gt;}}&lt;!--\n    \n    --&gt;&amp;#32;&lt;!--\n  --&gt;}}&lt;!--\n--&gt;}}}&lt;!--\n\n--&gt;{{#if:{{{wplink|}}}&lt;!--\n\
      --&gt;|&lt;!--\n  --&gt;[[w:{{#ifeq: {{{wplink|}}} | = | {{#if:{{{lang|}}}|{{{1|}}}|{{{2|}}}}} | {{{wplink}}}}}{{!}}&lt;!--\n  --&gt;{{#if:{{{lang|}}}|{{lang|{{{lang}}}|{{{1|wplink}}}}}|{{lang|{{{1|}}}|{{{2|wplink}}}}}}}]]&lt;!--\n--&gt;|&lt;!--\n  --&gt;{{#if:{{{lang|}}}|{{lang|{{{lang}}}|{{{1|an\
      \ unknown person}}}}}|{{lang|{{{1|}}}|{{{2|an unknown person}}}}}}}&lt;!--\n--&gt;}}&lt;!--\n\n--&gt;{{#if:{{{tr|}}}&lt;!--\n--&gt;|&lt;!--\n  --&gt;&amp;#32;(''{{{tr}}}'')&lt;!--\n--&gt;|&lt;!--\n  --&gt;{{#if:{{#if:{{{srclang|}}}|{{xlit|{{{srclang|}}}|{{#if:{{{lang|}}}|{{{1|}}}|{{{2|}}}}}|sc={{{sc|}}}}}}}&lt;!--\n\
      \  --&gt;|&lt;!--\n    --&gt;&amp;#32;(''{{xlit|{{{srclang|}}}|{{#if:{{{lang|}}}|{{{1|}}}|{{{2|}}}}}|sc={{{sc|}}}}}'')&lt;!--\n  --&gt;}}&lt;!--\n--&gt;}}&lt;!--\n\n--&gt;{{#if:{{{born|}}}{{{died|}}}&lt;!--\n--&gt;|&lt;!--\n  --&gt;&amp;#32;({{{born|?}}}–\
      {{{died|}}})&lt;!--\n--&gt;}}&lt;!--\n\n--&gt;&lt;includeonly&gt;&lt;!--\n--&gt;{{#if:{{{nocat|}}}||{{catlangname|{{{lang|}}}|eponyms}}}}&lt;!--\n--&gt;&lt;/includeonly&gt;&lt;!--\n\n--&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:52.503Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Anamed-after%2Flist&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41667 t=1555362352415125
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1578'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:52 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1225.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 423529200, 550107189, 693288206
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="3761895" pageid="3761895" ns="10" title="Template:named-after/list"><revisions><rev user="Ungoliant MMDCCLXIV" timestamp="2012-11-04T21:11:25Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Created page with &quot;{{#if: {{{1|}}} | {{{1}}}{{#if: {{{2|}}} | {{#if: {{{3|}}} | ,&amp;nbsp; | &amp;nbsp;and&amp;nbsp;}}}}}}&lt;!-- --&gt;{{#if: {{{2|}}} | {{{2}}}{{#if: {{{3|}}} | {{#if: {{{4|}}} | ,&amp;nbsp; | &amp;nbs...&quot;" xml:space="preserve">{{#if: {{{1|}}} | {{{1}}}{{#if: {{{2|}}} | {{#if: {{{3|}}} | ,&amp;nbsp; | &amp;nbsp;and&amp;nbsp;}}}}}}&lt;!--
      --&gt;{{#if: {{{2|}}} | {{{2}}}{{#if: {{{3|}}} | {{#if: {{{4|}}} | ,&amp;nbsp; | &amp;nbsp;and&amp;nbsp;}}}}}}&lt;!--
      --&gt;{{#if: {{{3|}}} | {{{3}}}{{#if: {{{4|}}} | {{#if: {{{5|}}} | ,&amp;nbsp; | &amp;nbsp;and&amp;nbsp;}}}}}}&lt;!--
      --&gt;{{#if: {{{4|}}} | {{{4}}}{{#if: {{{5|}}} | &amp;nbsp;and&amp;nbsp;}}}}&lt;!--
      --&gt;{{#if: {{{5|}}} | {{{5}}}}}</rev></revisions></page></pages></query></api>
- recorded: 2015-08-30T00:23:17.982Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3A%21&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=30-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 30 Aug 2015 00:23:17 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=30-Aug-2015
      X-Cache: cp1055 miss (0), cp3014 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 3930760185, 1375301317, 3743360773
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:!" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:05:54.718Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Acatlangname&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=62675 t=1555362354607677
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:54 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 908258880, 814574747, 701400463
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="2130756" pageid="2130756" ns="10" title="Template:catlangname"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T17:33:58Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:catlangname]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefi..." xml:space="preserve">{{#invoke:utilities|template_categorize|format=pos}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:05:54.902Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44425 t=1555362354796577
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:54 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 660793478, 234741515, 695708331
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4073440\" pageid=\"4073440\" ns=\"828\" title=\"Module:utilities\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-10-30T22:40:37Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"pipe doesn&#039;t have to be escaped\" xml:space=\"preserve\">local export = {}\n\nlocal data = mw.loadData(\"Module:utilities/data\")\nlocal notneeded = data.notneeded\nlocal neededhassubpage\
      \ = data.neededhassubpage\n\n-- A helper function to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nfunction export.pattern_escape(text)\n\tif type(text) == \"table\" then\n\t\ttext = text.args[1]\n\tend\n\ttext = mw.ustring.gsub(text,\
      \ \"([%^$()%%.%[%]*+%-?])\", \"%%%1\")\n\treturn text\nend\n\nfunction export.plain_gsub(text, pattern, replacement)\n\tlocal invoked = false\n\t\n\tif type(text) == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\
      \t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = {},\n\t\t\t\t[2] = {},\n\t\t\t\t[3] = { allow_empty = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\
      \t\t\treplacement = args[3]\n\t\telse\n\t\t\terror(\"If the first argument to plain_gsub is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not ( type(pattern) == \"string\" or type(pattern) == \"number\" ) then\n\t\t\terror(\"The second\
      \ argument to plain_gsub should be a string or a number.\")\n\t\tend\n\t\t\n\t\tif not ( type(replacement) == \"string\" or type(replacement) == \"number\" ) then\n\t\t\terror(\"The third argument to plain_gsub should be a string or a number.\")\n\t\t\
      end\n\tend\n\t\n\tpattern = export.pattern_escape(pattern)\n\t\n\tif invoked then\n\t\ttext = mw.ustring.gsub(text, pattern, replacement)\n\t\treturn text\n\telse\n\t\treturn mw.ustring.gsub(text, pattern, replacement)\n\tend\nend\n\n--[[\nFormat the categories\
      \ with the appropriate sort key. CATEGORIES is a list of\ncategories.\n\t-- LANG is an object encapsulating a language; if nil, the object for\n\t   language code 'und' (undetermined) will be used.\n\t-- SORT_KEY is placed in the category invocation, and\
      \ indicates how the\n\t   page will sort in the respective category. Normally this should be nil,\n\t   and a default sort key based on the subpage name (the part after the\n\t   colon) will be used.\n\t-- SORT_BASE lets you override the default sort key\
      \ used when SORT_KEY is\n\t   nil. Normally, this should be nil, and a language-specific default sort\n\t   key is computed from the subpage name (e.g. for Russian this converts\n\t   Cyrillic ё to a string consisting of Cyrillic е followed by U+10FFFF,\n\
      \t   so that effectively ё sorts after е instead of the default Wikimedia\n\t   sort, which (I think) is based on Unicode sort order and puts ё after я,\n\t   the last letter of the Cyrillic alphabet.\n\t-- FORCE_OUTPUT forces normal output in all namespaces.\
      \ Normally, nothing\n\t   is output if the page isn't in the main, Appendix:, Reconstruction: or\n\t   Citations: namespaces.\n]]\nfunction export.format_categories(categories, lang, sort_key, sort_base, force_output, sc)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\
      \t\n\tif type(lang) == \"table\" and not lang.getCode then\n\t\terror(\"The second argument to format_categories should be a language object.\")\n\tend\n\t\n\tif force_output or data.allowedNamespaces[NAMESPACE] then\n\t\tlocal PAGENAME = mw.title.getCurrentTitle().text\n\
      \t\tlocal SUBPAGENAME = mw.title.getCurrentTitle().subpageText\n\t\t\n\t\tif not lang then\n\t\t\tlang = require(\"Module:languages\").getByCode(\"und\")\n\t\tend\n\t\t\n\t\t-- Generate a default sort key\n\t\tsort_base = lang:makeSortKey(sort_base or\
      \ SUBPAGENAME, sc)\n\t\t\n\t\tif sort_key and sort_key ~= \"\" then\n\t\t\t-- Gather some statistics regarding sort keys\n\t\t\tif mw.ustring.upper(sort_key) == sort_base then\n\t\t\t\ttable.insert(categories, \"Sort key tracking/redundant\")\n\t\t\tend\n\
      \t\telse\n\t\t\tsort_key = sort_base\n\t\tend\n\t\t\n\t\t--[[\tIf the resulting key is the same as the wiki software's\n\t\t\t\tdefault, or if the sortkey is empty, remove it\t\t\t ]]\n\t\tif sort_key == PAGENAME or sort_key == \"\" then\n\t\t\tsort_key\
      \ = nil\n\t\tend\n\t\t\n\t\tlocal out_categories = {}\n\t\tfor key, cat in ipairs(categories) do\n\t\t\tout_categories[key] = \"[[Category:\" .. cat .. (sort_key and \"|\" .. sort_key or \"\") .. \"]]\"\n\t\tend\n\t\t\n\t\treturn table.concat(out_categories,\
      \ \"\")\n\telse\n\t\treturn \"\"\n\tend\nend\n\n-- Used by {{categorize}}\nfunction export.template_categorize(frame)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\tlocal format = frame.args[\"format\"]\n\tlocal args = frame:getParent().args\n\
      \t\n\tlocal langcode = args[1]; if langcode == \"\" then langcode = nil end\n\tlocal sort_key = args[\"sort\"]; if sort_key == \"\" then sort_key = nil end\n\tlocal categories = {}\n\t\n\tif not langcode then\n\t\tif NAMESPACE == \"Template\" then return\
      \ \"\" end\n\t\terror(\"Language code has not been specified. Please pass parameter 1 to the template.\")\n\tend\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(langcode)\n\t\n\tif not lang then\n\t\tif NAMESPACE == \"Template\" then return\
      \ \"\" end\n\t\terror(\"The language code \\\"\" .. langcode .. \"\\\" is not valid.\")\n\tend\n\t\n\tlocal prefix = \"\"\n\t\n\tif format == \"pos\" then\n\t\tprefix = lang:getCanonicalName() .. \" \"\n\telseif format == \"topic\" then\n\t\tprefix = lang:getCode()\
      \ .. \":\"\n\tend\n\t\n\tlocal i = 2\n\tlocal cat = args[i]\n\t\n\twhile cat do\n\t\tif cat ~= \"\" then\n\t\t\ttable.insert(categories, prefix .. cat)\n\t\tend\n\t\t\n\t\ti = i + 1\n\t\tcat = args[i]\n\tend\n\t\n\treturn export.format_categories(categories,\
      \ lang, sort_key)\nend\n\nfunction export.catfix(lang, sc)\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"catfix/no lang\")\n\t\treturn nil\n\telseif type(lang) ~= \"table\" then\n\t\trequire(\"Module:debug\").track(\"catfix/lang not table\"\
      )\n\t\treturn nil\n\tend\n\tlocal canonicalName = lang:getCanonicalName() or error('The first argument to the function \"catfix\" should be a language object from Module:languages.')\n\t\n\tif sc and not sc.getCode then\n\t\terror('The second argument\
      \ to the function \"catfix\" should be a script object from Module:scripts.')\n\tend\n\t\n\t-- To add script classes to links on pages created by category boilerplate templates.\n\tif not sc then\n\t\tsc = data.catfix_scripts[lang:getCode()]\n\t\tif sc\
      \ then\n\t\t\tsc = require(\"Module:scripts\").getByCode(sc)\n\t\tend\n\tend\n\t\n\treturn \"&lt;span id=\\\"catfix\\\" style=\\\"display:none;\\\" class=\\\"CATFIX-\" .. mw.uri.anchorEncode(canonicalName) .. \"\\\"&gt;\" ..\n\t\trequire(\"Module:script\
      \ utilities\").tag_text(\"&amp;nbsp;\", lang, sc, nil) ..\n\t\t\"&lt;/span&gt;\"\nend\n\nfunction export.catfix_template(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t\t[2] = { alias_of = \"sc\" },\n\t\t[\"sc\"] = {},\n\t}\n\t\n\tlocal args = require(\"\
      Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal sc = args.sc\n\tif sc then\n\t\tsc = require(\"Module:scripts\"\
      ).getByCode(sc) or error('The script code \"' .. sc .. '\", provided in the second parameter, is not valid.')\n\tend\n\t\n\treturn export.catfix(lang, sc)\nend\n\n-- Not exporting because it is not used yet.\nlocal function getDateTense(frame) \n\tlocal\
      \ name_num_mapping = {[\"January\"] = 1, [\"February\"] = 2, [\"March\"] = 3, [\"April\"] = 4, [\"May\"] = 5, [\"June\"] = 6, \n\t\t[\"July\"] = 7, [\"August\"] = 8, [\"September\"] = 9, [\"October\"] = 10, [\"November\"] = 11, [\"December\"] = 12, \n\t\
      \t[1] = 1, [2] = 2, [3] = 3, [4] = 4, [5] = 5, [6] = 6, [7] = 7, [8] = 8, [9] = 9, [10] = 10, [11] = 11, [12] = 12}\n\tlocal month = name_num_mapping[frame.args[2]]\n\tlocal date = os.time({year = frame.args[1], day = frame.args[3], month = month})\n\t\
      local today = os.time() -- 12 AM/PM\n\tlocal diff = os.difftime(date, today)\n\tlocal daylength = 24 * 3600\n\t\n\tif diff &lt; -daylength / 2 then return \"past\"\n\telse \n\t\tif diff &gt; daylength / 2  then return \"future\"\n\t\telse return \"present\"\
      \ end\n\tend\nend\n\nfunction export.make_id(lang, str)\n\t--[[\tIf called with invoke, first argument is a frame object.\n\t\t\tIf called by a module, first argument is a language object. ]]\n\tlocal invoked = false\n\t\n\tif type(lang) == \"table\" then\n\
      \t\tif lang.args then\n\t\t\tinvoked = true\n\t\t\t\n\t\t\tlocal frame = lang\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = {},\n\t\t\t\t[2] = {},\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\
      \t\t\t\n\t\t\tlocal langCode = args[1]\n\t\t\tstr = args[2]\n\t\t\t\n\t\t\tlocal m_languages = require(\"Module:languages\")\n\t\t\t\n\t\t\tlang = m_languages.getByCode(langCode) or m_languages.err(langCode, 1)\n\t\telseif not lang.getCanonicalName then\n\
      \t\t\terror(\"The first argument to make_id should be a language object.\")\n\t\tend\n\tend\n\n\tif not ( type(str) == \"string\" or type(str) == \"number\" ) then\n\t\terror(\"The second argument to make_id should be a string or a number.\")\n\tend\n\t\
      \n\tlocal canonicalName = lang:getCanonicalName()\n\t\n\tstr = mw.uri.encode(str, \"WIKI\")\n\t\n\tlocal id = canonicalName .. \"-\" .. str\n\t\n\tif invoked then\n\t\treturn '&lt;li class=\"senseid\" id=\"' .. id .. '\"&gt;'\n\telse\n\t\treturn id\n\t\
      end\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:53.677Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=59678 t=1555362353553868
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:53 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 592430247, 563453565, 687988505
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4453474\" pageid=\"4453474\" ns=\"828\" title=\"Module:languages\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-13T02:06:03Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add getNonEtymological\" xml:space=\"preserve\">local export = {}\n\n--[=[\tThis function checks for things that could plausibly be a language code:\n\t\ttwo or three lowercase letters,\
      \ two or three groups of three lowercase\n\t\tletters with hyphens between them. If such a pattern is not found,\n\t\tit is likely the editor simply forgot to enter a language code. ]=]\n\nfunction export.err(langCode, param, text, template_tag)\n\tlocal\
      \ ordinals = {\n\t\t\"first\", \"second\", \"third\", \"fourth\", \"fifth\", \"sixth\",\n\t\t\"seventh\", \"eighth\", \"ninth\", \"tenth\", \"eleventh\", \"twelfth\",\n\t\t\"thirteenth\", \"fourteenth\", \"fifteenth\", \"sixteenth\", \"seventeenth\",\n\
      \t\t\"eighteenth\", \"nineteenth\", \"twentieth\"\n\t}\n\t\n\tif not template_tag then\n\t\ttemplate_tag = \"\"\n\telse\n\t\tif type(template_tag) ~= \"string\" then\n\t\t\ttemplate_tag = template_tag()\n\t\tend\n\t\ttemplate_tag = \" (Original template:\
      \ \" .. template_tag .. \")\"\n\tend\n\tlocal paramType = type(param)\n\tif paramType == \"number\" then\n\t\tordinal = ordinals[param]\n\t\tparam = ordinal .. ' parameter'\n\telseif paramType == \"string\" then\n\t\tparam = 'parameter \"' .. param ..\
      \ '\"'\n\telse\n\t\terror(\"The parameter name is \"\n\t\t\t\t.. (paramType == \"table\" and \"a table\" or tostring(param))\n\t\t\t\t.. \", but it should be a number or a string.\" .. template_tag, 2)\n\tend\n\t\n\t-- Can use string.find because language\
      \ codes only contain ASCII.\n\tif not langCode or langCode == \"\" then\n\t\terror(\"The \" .. param .. \" (\" .. (text or \"language code\") .. \") is missing.\" .. template_tag, 2)\n\telseif langCode:find(\"^%l%l%l?$\")\n\t\t\tor langCode:find(\"^%l%l%l%-%l%l%l$\"\
      )\n\t\t\tor langCode:find(\"^%l%l%l%-%l%l%l%-%l%l%l$\") then\n\t\terror(\"The language code \\\"\" .. langCode .. \"\\\" is not valid.\" .. template_tag, 2)\n\telse\n\t\terror(\"Please enter a \" .. (text or \"language code\") .. \" in the \" .. param\
      \ .. \".\" .. template_tag, 2)\n\tend\nend\n\nlocal function do_entry_name_or_sort_key_replacements(text, replacements)\n\tif replacements.from then\n\t\tfor i, from in ipairs(replacements.from) do\n\t\t\tlocal to = replacements.to[i] or \"\"\n\t\t\ttext\
      \ = mw.ustring.gsub(text, from, to)\n\t\tend\n\tend\n\t\n\tif replacements.remove_diacritics then\n\t\ttext = mw.ustring.toNFD(text)\n\t\ttext = mw.ustring.gsub(text,\n\t\t\t'[' .. replacements.remove_diacritics .. ']',\n\t\t\t'')\n\t\ttext = mw.ustring.toNFC(text)\n\
      \tend\n\t\n\treturn text\nend\n\nlocal Language = {}\n\nfunction Language:getCode()\n\treturn self._code\nend\n\n\nfunction Language:getCanonicalName()\n\treturn self._rawData[1] or self._rawData.canonicalName\nend\n\n\nfunction Language:getOtherNames()\n\
      \treturn self._rawData.otherNames or {}\nend\n\n\nfunction Language:getType()\n\treturn self._rawData.type or \"regular\"\nend\n\n\nfunction Language:getWikimediaLanguages()\n\tif not self._wikimediaLanguageObjects then\n\t\tlocal m_wikimedia_languages\
      \ = require(\"Module:wikimedia languages\")\n\t\tself._wikimediaLanguageObjects = {}\n\t\tlocal wikimedia_codes = self._rawData.wikimedia_codes or { self._code }\n\t\t\n\t\tfor _, wlangcode in ipairs(wikimedia_codes) do\n\t\t\ttable.insert(self._wikimediaLanguageObjects,\
      \ m_wikimedia_languages.getByCode(wlangcode))\n\t\tend\n\tend\n\t\n\treturn self._wikimediaLanguageObjects\nend\n\nfunction Language:getWikipediaArticle()\n\tif self._rawData.wikipedia_article then\n\t\treturn self._rawData.wikipedia_article \n\telseif\
      \ self._wikipedia_article then\n\t\treturn self._wikipedia_article\n\telseif self:getWikidataItem() and mw.wikibase then\n\t\tself._wikipedia_article = mw.wikibase.sitelink(self:getWikidataItem(), 'enwiki')\n\tend\n\tif not self._wikipedia_article then\n\
      \t\tself._wikipedia_article = mw.ustring.gsub(self:getCategoryName(), \"Creole language\", \"Creole\")\n\tend\n\treturn self._wikipedia_article\nend\n\nfunction Language:makeWikipediaLink()\n\treturn \"[[w:\" .. self:getWikipediaArticle() .. \"|\" .. self:getCanonicalName()\
      \ .. \"]]\"\nend\n\nfunction Language:getWikidataItem()\n\treturn self._rawData[2] or self._rawData.wikidata_item\nend\n\nfunction Language:getScripts()\n\tif not self._scriptObjects then\n\t\tlocal m_scripts = require(\"Module:scripts\")\n\t\tself._scriptObjects\
      \ = {}\n\t\t\n\t\tfor _, sc in ipairs(self._rawData.scripts or { \"None\" }) do\n\t\t\ttable.insert(self._scriptObjects, m_scripts.getByCode(sc))\n\t\tend\n\tend\n\t\n\treturn self._scriptObjects\nend\n\nfunction Language:getScriptCodes()\n\treturn self._rawData.scripts\
      \ or { \"None\" }\nend\n\nfunction Language:getFamily()\n\tif self._familyObject then\n\t\treturn self._familyObject\n\tend\n\t\t\n\tlocal family = self._rawData[3] or self._rawData.family \n\tif family then\n\t\tself._familyObject = require(\"Module:families\"\
      ).getByCode(family)\n\tend\n\t\n\treturn self._familyObject\nend\n\n\nfunction Language:getAncestors()\n\tif not self._ancestorObjects then\n\t\tself._ancestorObjects = {}\n\t\t\n\t\tif self._rawData.ancestors then\n\t\t\tfor _, ancestor in ipairs(self._rawData.ancestors)\
      \ do\n\t\t\t\ttable.insert(self._ancestorObjects, export.getByCode(ancestor) or require(\"Module:etymology languages\").getByCode(ancestor))\n\t\t\tend\n\t\telse\n\t\t\tlocal fam = self:getFamily()\n\t\t\tlocal protoLang = fam and fam:getProtoLanguage()\
      \ or nil\n\t\t\t\n\t\t\t-- For the case where the current language is the proto-language\n\t\t\t-- of its family, we need to step up a level higher right from the start.\n\t\t\tif protoLang and protoLang:getCode() == self:getCode() then\n\t\t\t\tfam =\
      \ fam:getFamily()\n\t\t\t\tprotoLang = fam and fam:getProtoLanguage() or nil\n\t\t\tend\n\t\t\t\n\t\t\twhile not protoLang and not (not fam or fam:getCode() == \"qfa-not\") do\n\t\t\t\tfam = fam:getFamily()\n\t\t\t\tprotoLang = fam and fam:getProtoLanguage()\
      \ or nil\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(self._ancestorObjects, protoLang)\n\t\tend\n\tend\n\t\n\treturn self._ancestorObjects\nend\n\nlocal function iterateOverAncestorTree(node, func)\n\tfor _, ancestor in ipairs(node:getAncestors()) do\n\t\t\
      if ancestor then\n\t\t\tlocal ret = func(ancestor) or iterateOverAncestorTree(ancestor, func)\n\t\t\tif ret then\n\t\t\t\treturn ret\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction Language:getAncestorChain()\n\tif not self._ancestorChain then\n\t\tself._ancestorChain\
      \ = {}\n\t\tlocal step = #self:getAncestors() == 1 and self:getAncestors()[1] or nil\n\t\t\n\t\twhile step do\n\t\t\ttable.insert(self._ancestorChain, 1, step)\n\t\t\tstep = #step:getAncestors() == 1 and step:getAncestors()[1] or nil\n\t\tend\n\tend\n\t\
      \n\treturn self._ancestorChain\nend\n\n\nfunction Language:hasAncestor(otherlang)\n\tlocal function compare(ancestor)\n\t\treturn ancestor:getCode() == otherlang:getCode()\n\tend\n\t\n\treturn iterateOverAncestorTree(self, compare) or false\nend\n\n\n\
      function Language:getCategoryName()\n\tlocal name = self:getCanonicalName()\n\t\n\t-- If the name already has \"language\" in it, don't add it.\n\tif name:find(\"[Ll]anguage$\") then\n\t\treturn name\n\telse\n\t\treturn name .. \" language\"\n\tend\nend\n\
      \n\nfunction Language:getStandardCharacters()\n\treturn self._rawData.standardChars\nend\n\n\nfunction Language:makeEntryName(text)\n\ttext = mw.ustring.gsub(text, \"^[¿¡]\", \"\")\n\ttext = mw.ustring.gsub(text, \"(.)[؟?!;՛՜ ՞ ՟？！︖︕।॥။၊་།]$\", \"%1\"\
      )\n\t\n\tif self:getCode() == \"ar\" then\n\t\tlocal U = mw.ustring.char\n\t\tlocal taTwiil = U(0x640)\n\t\tlocal waSla = U(0x671)\n\t\t-- diacritics ordinarily removed by entry_name replacements\n\t\tlocal Arabic_diacritics = U(0x64B, 0x64C, 0x64D, 0x64E,\
      \ 0x64F, 0x650, 0x651, 0x652, 0x670)\n\t\t\n\t\tif text == waSla or mw.ustring.find(text, \"^\" .. taTwiil .. \"?[\" .. Arabic_diacritics .. \"]\" .. \"$\") then\n\t\t\treturn text\n\t\tend\n\tend\n\t\n\tif type(self._rawData.entry_name) == \"table\" then\n\
      \t\ttext = do_entry_name_or_sort_key_replacements(text, self._rawData.entry_name)\n\tend\n\t\n\treturn text\nend\n\n\n-- Add to data tables?\nlocal has_dotted_undotted_i = {\n\t[\"az\"] = true,\n\t[\"crh\"] = true,\n\t[\"gag\"] = true,\n\t[\"kaa\"] = true,\n\
      \t[\"tt\"] = true,\n\t[\"tr\"] = true,\n\t[\"zza\"] = true,\n}\n\nfunction Language:makeSortKey(name, sc)\n\tif has_dotted_undotted_i[self:getCode()] then\n\t\tname = name:gsub(\"I\", \"ı\")\n\tend\n\t\n\tname = mw.ustring.lower(name)\n\t\n\t-- Remove\
      \ initial hyphens and *\n\tlocal hyphens_regex = \"^[-־ـ*]+(.)\"\n\tname = mw.ustring.gsub(name, hyphens_regex, \"%1\")\n\t\n\t-- If there are language-specific rules to generate the key, use those\n\tif type(self._rawData.sort_key) == \"table\" then\n\
      \t\tname = do_entry_name_or_sort_key_replacements(name, self._rawData.sort_key)\n\telseif type(self._rawData.sort_key) == \"string\" then\n\t\tname = require(\"Module:\" .. self._rawData.sort_key).makeSortKey(name, self:getCode(), sc and sc:getCode())\n\
      \tend\n\t\n\t-- Remove parentheses, as long as they are either preceded or followed by something\n\tname = mw.ustring.gsub(name, \"(.)[()]+\", \"%1\")\n\tname = mw.ustring.gsub(name, \"[()]+(.)\", \"%1\")\n\t\n\tif has_dotted_undotted_i[self:getCode()]\
      \ then\n\t\tname = name:gsub(\"i\", \"İ\")\n\tend\n\t\n\treturn mw.ustring.upper(name)\nend\n\nfunction Language:overrideManualTranslit()\n\tif self._rawData.override_translit then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\n\nfunction Language:transliterate(text,\
      \ sc, module_override)\n\tif not ((module_override or self._rawData.translit_module) and text) then\n\t\treturn nil\n\tend\n\t\n\tif module_override then\n\t\trequire(\"Module:debug\").track(\"module_override\")\n\tend\n\t\n\treturn require(\"Module:\"\
      \ .. (module_override or self._rawData.translit_module)).tr(text, self:getCode(), sc and sc:getCode() or nil)\nend\n\nfunction Language:hasTranslit()\n\treturn self._rawData.translit_module and true or false\nend\n\n\nfunction Language:link_tr()\n\treturn\
      \ self._rawData.link_tr and true or false\nend\n\n\nfunction Language:toJSON()\n\tlocal entryNamePatterns = nil\n\tlocal entryNameRemoveDiacritics = nil\n\t\n\tif self._rawData.entry_name then\n\t\tentryNameRemoveDiacritics = self._rawData.entry_name.remove_diacritics\n\
      \t\tif self._rawData.entry_name.from then\n\t\t\tentryNamePatterns = {}\n\t\t\tfor i, from in ipairs(self._rawData.entry_name.from) do\n\t\t\t\tlocal to = self._rawData.entry_name.to[i] or \"\"\n\t\t\t\ttable.insert(entryNamePatterns, { from = from, to\
      \ = to })\n\t\t\tend\n\t\tend\n\tend\n\t\n\tlocal ret = {\n\t\tancestors = self._rawData.ancestors,\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\tentryNamePatterns = entryNamePatterns,\n\
      \t\tfamily = self._rawData[3] or self._rawData.family,\n\t\totherNames = self:getOtherNames(),\n\t\tscripts = self._rawData.scripts,\n\t\ttype = self:getType(),\n\t\twikimediaLanguages = self._rawData.wikimedia_codes,\n\t\twikidataItem = self:getWikidataItem(),\n\
      \t}\n\t\n\treturn require(\"Module:JSON\").toJSON(ret)\nend\n\n\n-- Do NOT use this method!\n-- All uses should be pre-approved on the talk page!\nfunction Language:getRawData()\n\treturn self._rawData\nend\n\nLanguage.__index = Language\n\n\nfunction\
      \ export.getDataModuleName(code)\n\tif code:find(\"^%l%l$\") then\n\t\treturn \"languages/data2\"\n\telseif code:find(\"^%l%l%l$\") then\n\t\tlocal prefix = code:sub(1, 1)\n\t\treturn \"languages/data3/\" .. prefix\n\telseif code:find(\"^[%l-]+$\") then\n\
      \t\treturn \"languages/datax\"\n\telse\n\t\treturn nil\n\tend\nend\n\n\nlocal function getRawLanguageData(code)\n\tlocal modulename = export.getDataModuleName(code)\n\treturn modulename and mw.loadData(\"Module:\" .. modulename)[code] or nil\nend\n\n\n\
      function export.makeObject(code, data)\n\tif data and data.deprecated then\n\t\trequire(\"Module:debug\").track {\n\t\t\t\"languages/deprecated\",\n\t\t\t\"languages/deprecated/\" .. code\n\t\t}\n\tend\n\t\n\treturn data and setmetatable({ _rawData = data,\
      \ _code = code }, Language) or nil\nend\n\n\nfunction export.getByCode(code)\n\tif type(code) ~= \"string\" then\n\t\terror(\"The function getByCode expects a string as its first argument, but received \" .. (code == nil and \"nil\" or \"a \" .. type(code))\
      \ .. \".\")\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.getByName(name)\n\tlocal byName = mw.loadData(\"Module:languages/by name\")\n\tlocal code = byName.all and byName.all[name] or byName[name]\n\t\
      \n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.getByCanonicalName(name)\n\tlocal byName = mw.loadData(\"Module:languages/canonical names\")\n\tlocal code = byName and\
      \ byName[name]\n\t\n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.iterateAll()\n\tmw.incrementExpensiveFunctionCount()\n\tlocal m_data = mw.loadData(\"Module:languages/alldata\"\
      )\n\tlocal func, t, var = pairs(m_data)\n\t\n\treturn function()\n\t\tlocal code, data = func(t, var)\n\t\treturn export.makeObject(code, data)\n\tend\nend\n\n--[[\tIf language is an etymology language, iterates through parent languages\n\t\tuntil it finds\
      \ a non-etymology language. ]]\nfunction export.getNonEtymological(lang)\n\twhile lang:getType() == \"etymology language\" do\n\t\tlocal parentCode = lang:getParentCode()\n\t\tlocal parent = export.getByCode(parentCode)\n\t\t\tor require(\"Module:etymology\
      \ languages\").getByCode(parentCode)\n\t\t\tor require(\"Module:families\").getByCode(parentCode)\n\t\t\n\t\tlang = parent\n--\t\tmw.log(terminfo.lang:getCode() .. \" \" .. terminfo.lang:getType())\n\tend\n\t\n\treturn lang\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:53.917Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata2&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44929 t=1555362353755825
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:53 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1235.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 589005904, 809334603, 697639286
    body: !!binary |-
      
- recorded: 2019-04-15T21:05:55.260Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aa&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45907 t=1555362355166688
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:55 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 745618056, 252552162, 686610993
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5658976" pageid="5658976" ns="10" title="Template:a"><revisions><rev user="-sche" timestamp="2016-07-02T23:45:24Z" contentformat="text/x-wiki" contentmodel="wikitext"
      comment="-sche moved page [[Template:a]] to [[Template:accent]]: per RFM" xml:space="preserve">#REDIRECT [[Template:accent]]</rev></revisions></page></pages></query></api>'
- recorded: 2015-08-30T00:23:19.715Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aa&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=30-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 30 Aug 2015 00:23:19 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=30-Aug-2015
      X-Cache: cp1065 miss (0), cp3005 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 1142594966, 3744643787, 3743361259
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4830341\" pageid=\"4830341\" ns=\"828\" title=\"Module:a\"><revisions><rev user=\"Kc kennylau\" timestamp=\"2015-06-21T07:11:15Z\" comment=\"Protected &quot;[[Module:a]]&quot;:\
      \ Highly visible template/module ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nfunction export.show(frame)\n\
      \tdata = require(&quot;Module:a/data&quot;)\n\tlocal args = frame:getParent().args\n\tif not args[1] or args[1] == &quot;&quot; then\n\t\tif mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\t\treturn '&lt;span class=&quot;ib-brac&quot;&gt;&lt;span\
      \ class=&quot;qualifier-brac&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-content&quot;&gt;&lt;span class=&quot;qualifier-content&quot;&gt;{{{1}}}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-brac&quot;&gt;&lt;span class=&quot;qualifier-brac&quot;&gt;)&lt;/span&gt;&lt;/span&gt;'\n\
      \t\telse\n\t\t\terror(&quot;No accents specified.&quot;, 2)\n\t\t\treturn\n\t\tend\n\tend\n\t\n\tlocal accents = {}\n\t\n\tfor i,j in ipairs(args) do\n\t\tif j then \n\t\t\tlocal accent = mw.text.trim(j)\n\t\t\tif accent == &quot;&quot; then\n\t\t\t\t\
      --ignore\n\t\t\telseif data[accent] then\n\t\t\t\tif data[accent].link then\n\t\t\t\t\ttable.insert(accents, &quot;[[w:&quot; .. data[accent].link .. &quot;|&quot; .. (data[accent].display or data[accent].link) .. &quot;]]&quot;)\n\t\t\t\telseif data[accent].display\
      \ then\n\t\t\t\t\ttable.insert(accents, data[accent].display)\n\t\t\t\tend\n\t\t\telse\n\t\t\t\ttable.insert(accents, accent)\n\t\t\tend\n\t\tend\n\tend\n\t\n\tlocal output = table.concat(accents, &quot;, &quot;)\n\tif output == &quot;&quot; then\n\t\t\
      error(&quot;No accents specified.&quot;, 2)\n\t\treturn\n\telse\n\t\treturn\n\t\t\t'&lt;span class=&quot;ib-brac&quot;&gt;&lt;span class=&quot;qualifier-brac&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-content&quot;&gt;&lt;span class=&quot;qualifier-content&quot;&gt;'\
      \ ..\n\t\t\toutput .. '&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-brac&quot;&gt;&lt;span class=&quot;qualifier-brac&quot;&gt;)&lt;/span&gt;&lt;/span&gt;'\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-08-30T00:23:19.920Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aa%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=30-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 30 Aug 2015 00:23:19 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=30-Aug-2015
      X-Cache: cp1068 miss (0), cp3008 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2977781038, 3301692279, 3743361328
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4830339\" pageid=\"4830339\" ns=\"828\" title=\"Module:a/data\"><revisions><rev user=\"Espreon\" timestamp=\"2015-08-28T01:08:42Z\" comment=\"Put yeísmo under Y now that it&#039;s\
      \ been properly distinguished from lleísmo\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local m = {}\n\n-- A\n\nm[&quot;AAVE&quot;] = {\n\tlink = &quot;African American Vernacular English&quot;,\n\tdisplay = &quot;AAVE&quot;\n\
      }\n\nm[&quot;æ-tensing&quot;] = {\n\tlink = &quot;æ-tensing&quot;\n}\nm[&quot;ae-tensing&quot;] = m[&quot;æ-tensing&quot;]\n\nm[&quot;Anglicised&quot;] = {\n\tlink = &quot;Anglicisation#Anglicisation_of_non-English-language_vocabulary_and_names&quot;,\n\
      \tdisplay = &quot;Anglicised&quot;\n}\nm[&quot;Anglicized&quot;] = m[&quot;Anglicised&quot;]\n\nm[&quot;ar-Cairene&quot;] = {\n\tlink = &quot;Egyptian Arabic&quot;,\n\tdisplay = &quot;Cairene&quot;\n}\nm[&quot;Cairene&quot;] = m[&quot;ar-Cairene&quot;]\n\
      \nm[&quot;Arvanite&quot;] = {\n\tlink = &quot;Arvanitika&quot;,\n\tdisplay = &quot;Arvanite&quot;\n}\n\nm[&quot;Ashkenazi Hebrew&quot;] = {\n\tlink = &quot;Ashkenazi Hebrew&quot;,\n\tdisplay = &quot;Ashkenazi Hebrew&quot;\n}\nm[&quot;Ashkenazi&quot;] =\
      \ m[&quot;Ashkenazi Hebrew&quot;]\n\nm[&quot;Australia&quot;] = {\n\tlink = &quot;Australian English phonology&quot;,\n\tdisplay = &quot;Australia&quot;\n}\nm[&quot;AU&quot;] = m[&quot;Australia&quot;]\nm[&quot;Aus&quot;] = m[&quot;Australia&quot;]\nm[&quot;AusE&quot;]\
      \ = m[&quot;Australia&quot;]\n\n-- B\n\nm[&quot;BE-nl&quot;] = {\n\tlink = &quot;Belgian Dutch&quot;,\n\tdisplay = &quot;Belgium&quot;\n}\nm[&quot;BE&quot;] = m[&quot;BE-nl&quot;]\n\nm[&quot;Beijing&quot;] = {\n\tlink = &quot;Beijing dialect&quot;,\n\t\
      display = &quot;Beijing&quot;\n}\n\nm[&quot;Boston&quot;] = {\n\tlink = &quot;Boston English&quot;,\n\tdisplay = &quot;Boston&quot;\n}\nm[&quot;Bos&quot;] = m[&quot;Boston&quot;]\n\nm[&quot;Brazil&quot;] = {\n\tlink = &quot;Brazilian Portuguese&quot;,\n\
      \tdisplay = &quot;Brazil&quot;\n}\nm[&quot;BP&quot;] = m[&quot;Brazil&quot;]\nm[&quot;BR&quot;] = m[&quot;Brazil&quot;]\nm[&quot;Brazilian Portuguese&quot;] = m[&quot;Brazil&quot;]\n\n-- C\n\nm[&quot;Canada&quot;] = {\n\tlink = &quot;Canadian English&quot;,\n\
      \tdisplay = &quot;Canada&quot;\n}\nm[&quot;CA&quot;] = m[&quot;Canada&quot;]\nm[&quot;Canadian&quot;] = m[&quot;Canada&quot;]\n\nm[&quot;Canadian Shift&quot;] = {\n\tlink = &quot;Canadian Shift&quot;,\n\tdisplay = &quot;Canadian Vowel Shift&quot;\n}\n\
      m[&quot;Canadian shift&quot;] = m[&quot;Canadian Shift&quot;]\nm[&quot;Canadian Vowel Shift&quot;] = m[&quot;Canadian Shift&quot;]\nm[&quot;Canadian vowel shift&quot;] = m[&quot;Canadian Shift&quot;]\n\nm[&quot;Carioca&quot;] = {\n\tlink = &quot;Carioca#Carioca\
      \ Dialect&quot;,\n\tdisplay = &quot;Carioca&quot;\n}\nm[&quot;RJ&quot;] = m[&quot;Carioca&quot;]\n\nm[&quot;Castilian&quot;] = {\n\tlink = &quot;Castilian Spanish&quot;,\n\tdisplay = &quot;Castilian&quot;\n}\nm[&quot;Spain&quot;] = m[&quot;Castilian&quot;]\n\
      \nm[&quot;ceceo&quot;] = {\n\tlink = &quot;Phonological history of Spanish coronal fricatives#Ceceo&quot;,\n\tdisplay = &quot;''ceceo'' merger&quot;\n}\n\nm[&quot;Central Scotland&quot;] = {\n\tlink = &quot;Central Scots&quot;,\n\tdisplay = &quot;Central\
      \ Scotland&quot;\n}\n\nm[&quot;ceseo&quot;] = {\n\tlink = &quot;Phonological history of Spanish coronal fricatives#Ceseo_or_seceo&quot;,\n\tdisplay = &quot;''ceseo''-''seceo'' mixing&quot;\n}\nm[&quot;seceo&quot;] = m[&quot;ceseo&quot;]\n\nm[&quot;Classical&quot;]\
      \ = {\n\tlink = &quot;Classical Latin&quot;,\n\tdisplay = &quot;Classical&quot;\n}\n\nm[&quot;Connacht&quot;] = {\n\tlink = &quot;Connacht Irish&quot;,\n\tdisplay = &quot;Connacht&quot;\n}\n\nm[&quot;cot-caught&quot;] = {\n\tlink = &quot;Phonological history\
      \ of English low back vowels#Cot–caught merger&quot;,\n\tdisplay = &quot;''cot''–''caught'' merger&quot;\n}\nm[&quot;caught-cot&quot;] = m[&quot;cot-caught&quot;]\n\nm[&quot;cy-N&quot;] = {\n\tlink = &quot;Welsh language#Dialects&quot;,\n\tdisplay = &quot;North\
      \ Wales&quot;\n}\nm[&quot;cy-g&quot;] = m[&quot;cy-N&quot;]\n\nm[&quot;cy-S&quot;] = {\n\tlink = &quot;Welsh language#Dialects&quot;,\n\tdisplay = &quot;South Wales&quot;\n}\nm[&quot;cy-h&quot;] = m[&quot;cy-S&quot;]\n\n-- D\n\nm[&quot;Dari&quot;] = {\n\
      \tlink = &quot;Dari Persian&quot;,\n\tdisplay = &quot;Dari&quot;\n}\n\nm[&quot;distinción&quot;] = {\n\tlink = &quot;Phonological_history_of_Spanish_coronal_fricatives#Distinction&quot;,\n\tdisplay = &quot;''z''-''s'' distinction&quot;\n}\n\n-- E\n\nm[&quot;Ecclesiastical&quot;]\
      \ = {\n\tlink = &quot;Ecclesiastical Latin&quot;,\n\tdisplay = &quot;Ecclesiastical&quot;\n}\n\nm[&quot;Egyptological&quot;] = {\n\tlink = &quot;Egyptian language#Egyptological pronunciation&quot;,\n\tdisplay = &quot;Egyptological&quot;\n}\n\nm[&quot;Estuary\
      \ English&quot;] = {\n\tlink = &quot;Estuary English&quot;\n}\n\n-- F\n\nm[&quot;father-bother&quot;] = {\n\tlink = &quot;Phonological history of English low back vowels#Father–bother merger&quot;,\n\tdisplay = &quot;''father''-''bother'' merger&quot;\n\
      }\n\nm[&quot;FS&quot;] = {\n\tlink = &quot;Standard French&quot;,\n\tdisplay = &quot;FS&quot;\n}\n\nm[&quot;FV&quot;] = {\n\tlink = &quot;French Flemish&quot;,\n\tdisplay = &quot;French Flanders&quot;\n}\n\n-- G\n\nm[&quot;GenAm&quot;] = {\n\tlink = &quot;General\
      \ American&quot;\n}\n\nm[&quot;Geordie&quot;] = {\n\tlink = &quot;Geordie&quot;\n}\n\nm[&quot;Gheg&quot;] = {\n\tlink = &quot;Gheg Albanian&quot;,\n\tdisplay = &quot;Gheg&quot;\n}\n\nm[&quot;Givi&quot;] = {\n\tlink = &quot;Giv, South Khorasan&quot;,\n\t\
      display = &quot;Givi&quot;\n}\n\n-- H\n\nm[&quot;hbo&quot;] = {\n\tlink = &quot;Biblical_Hebrew#Phonology&quot;,\n\tdisplay = &quot;Biblical Hebrew&quot;\n}\n\nm[&quot;Biblical Hebrew&quot;] = m[&quot;hbo&quot;]\n\nm[&quot;horse-hoarse&quot;] = {\n   \
      \ link = &quot;English-language_vowel_changes_before_historic_/r/#Horse.E2.80.93hoarse_merger&quot;,\n    display = &quot;without the horse–hoarse merger&quot;\n}\n\nm[&quot;hy-E&quot;] = {\n\tlink = &quot;Eastern Armenian language&quot;,\n\tdisplay =\
      \ &quot;Eastern Armenian&quot;\n}\n\nm[&quot;hy-IR&quot;] = {\n\tlink = &quot;Armenian Iranians#Culture_and_language&quot;,\n\tdisplay = &quot;Eastern Armenian - Iran&quot;\n}\n\nm[&quot;hy-W&quot;] = {\n\tlink = &quot;Western Armenian language&quot;,\n\
      \tdisplay = &quot;Western Armenian&quot;\n}\n\nm[&quot;hy-Y&quot;] = {\n\tlink = &quot;Yerevan&quot;,\n\tdisplay = &quot;Eastern Armenian - Yerevan&quot;\n}\n\n-- I\n\nm[&quot;IL&quot;] = {\n\tlink = &quot;Modern Hebrew phonology&quot;,\n\tdisplay = &quot;Modern/Israeli\
      \ Hebrew&quot;\n}\nm[&quot;Israeli Hebrew&quot;] = m[&quot;IL&quot;]\nm[&quot;Modern Hebrew&quot;] = m[&quot;IL&quot;]\nm[&quot;Modern Israeli&quot;] = m[&quot;IL&quot;]\nm[&quot;Modern/Israeli Hebrew&quot;] = m[&quot;IL&quot;]\n\nm[&quot;InE&quot;] =\
      \ {\n\tlink = &quot;Indian English&quot;,\n\tdisplay = &quot;InE&quot;\n}\n\nm[&quot;IR&quot;] = {\n\tlink = &quot;Western Persian&quot;,\n\tdisplay = &quot;Iranian Persian&quot;\n}\n\nm[&quot;Ireland&quot;] = {\n\tlink = &quot;Hiberno-English&quot;,\n\
      \tdisplay = &quot;Ireland&quot;\n}\nm[&quot;HE&quot;] = m[&quot;Ireland&quot;]\nm[&quot;IE&quot;] = m[&quot;Ireland&quot;]\n\nm[&quot;Italian Hebrew&quot;] = {\n\tlink = &quot;Italian Hebrew&quot;,\n\tdisplay = &quot;Italian Hebrew&quot;\n}\n\n-- J\n\n\
      m[&quot;Johor-Selangor&quot;] = {\n\tlink = &quot;Malayan languages&quot;,\n\tdisplay = &quot;Johor-Selangor&quot;\n}\n\n-- K\n\nm[&quot;Kabul, Peshawar&quot;] = {\n\tlink = &quot;Pashto dialects&quot;,\n\tdisplay = &quot;Kabul, Peshawar&quot;\n}\n\nm[&quot;Kandahar&quot;]\
      \ = {\n\tlink = &quot;Kandahari Pashto&quot;,\n\tdisplay = &quot;Kandahar&quot;\n}\nm[&quot;ps-Kandahar&quot;] = m[&quot;Kandahar&quot;]\n\n-- L\n\nm[&quot;Latinate&quot;] = {\n\tlink = &quot;Latin#Phonology&quot;,\n\tdisplay = &quot;Latinate&quot;\n}\n\
      \nm[&quot;lleísmo&quot;] = {\n\tlink = &quot;Yeísmo&quot;,\n\tdisplay = &quot;''ll''-''y'' distinction&quot;\n}\n\n-- M\n\nm[&quot;Mary-marry-merry&quot;] = {\n\tlink = &quot;English-language vowel changes before historic /r/#Mary.E2.80.93marry.E2.80.93merry_merger&quot;,\n\
      \tdisplay = &quot;''Mary''-''marry''-''merry'' merger&quot;\n}\nm[&quot;Mmmm&quot;] = m[&quot;Mary-marry-merry&quot;]\n\nm[&quot;Midwestern US&quot;] = {\n\tlink = &quot;Midwestern United States#Linguistic_characteristics&quot;,\n\tdisplay = &quot;Midwestern\
      \ US&quot;\n}\nm[&quot;Midwest US&quot;] = m[&quot;Midwestern US&quot;]\nm[&quot;Midwest US English&quot;] = m[&quot;Midwestern US&quot;]\nm[&quot;Midwestern US English&quot;] = m[&quot;Midwestern US&quot;]\n\nm[&quot;Mizrahi Hebrew&quot;] = {\n\tlink\
      \ = &quot;Mizrahi Hebrew&quot;,\n\tdisplay = &quot;Mizrahi Hebrew&quot;\n}\nm[&quot;Mizrahi&quot;] = m[&quot;Mizrahi Hebrew&quot;]\nm[&quot;Mizrakhi&quot;] = m[&quot;Mizrahi Hebrew&quot;]\nm[&quot;Mizrachi&quot;] = m[&quot;Mizrahi Hebrew&quot;]\nm[&quot;Mizrakhi\
      \ Hebrew&quot;] = m[&quot;Mizrahi Hebrew&quot;]\nm[&quot;Mizrachi Hebrew&quot;] = m[&quot;Mizrahi Hebrew&quot;]\n\nm[&quot;Munster&quot;] = {\n\tlink = &quot;Munster Irish&quot;,\n\tdisplay = &quot;Munster&quot;\n}\n\n-- N\n\nm[&quot;Netherlands&quot;]\
      \ = {\n\tlink = &quot;Dutch phonology&quot;,\n\tdisplay = &quot;Netherlands&quot;\n}\nm[&quot;NL&quot;] = m[&quot;Netherlands&quot;]\n\nm[&quot;New Latin&quot;] = {\n\tlink = &quot;New Latin&quot;\n}\n\nm[&quot;New York&quot;] = {\n\tlink = &quot;New York\
      \ dialect#Linguistic_features&quot;,\n\tdisplay = &quot;NYC&quot;\n}\nm[&quot;NY&quot;] = m[&quot;New York&quot;]\nm[&quot;NYC&quot;] = m[&quot;New York&quot;]\n\nm[&quot;New Zealand&quot;] = {\n\tlink = &quot;New Zealand English&quot;,\n\tdisplay = &quot;New\
      \ Zealand&quot;\n}\nm[&quot;NZ&quot;] = m[&quot;New Zealand&quot;]\n\nm[&quot;non-Mary-marry-merry&quot;] = {\n\tlink = &quot;English-language vowel changes before historic /r/#Mary.E2.80.93marry.E2.80.93merry_merger&quot;,\n\tdisplay = &quot;''Mary''-''marry''-''merry''\
      \ distinction&quot;\n}\nm[&quot;nMmmm&quot;] = m[&quot;non-Mary-marry-merry&quot;]\n\nm[&quot;non-rhotic&quot;] = {\n\tlink = &quot;Rhoticity in English&quot;,\n\tdisplay = &quot;non-rhotic&quot;\n}\nm[&quot;nonrhotic&quot;] = m[&quot;non-rhotic&quot;]\n\
      \nm[&quot;Northern England&quot;] = {\n\tlink = &quot;Northern England&quot;\n}\nm[&quot;North England&quot;] = m[&quot;Northern England&quot;]\n\nm[&quot;Northern Scotland&quot;] = {\n\tlink = &quot;Northern Scots&quot;,\n\tdisplay = &quot;Northern Scotland&quot;\n\
      }\n\n-- O\n\n-- P\n\nm[&quot;Palestinian Hebrew&quot;] = {\n\tlink = &quot;Palestinian vocalization&quot;,\n\tdisplay = &quot;Palestinian Hebrew&quot;\n}\n\nm[&quot;pin-pen&quot;] = {\n\tlink = &quot;Phonological history of English high front vowels#Pin–\
      pen merger&quot;,\n\tdisplay = &quot;''pin''–''pen'' merger&quot;\n}\nm[&quot;pen-pin&quot;] = m[&quot;pin-pen&quot;]\n\nm[&quot;Philippine&quot;] = {\n\tlink = &quot;Philippine English&quot;,\n\tdisplay = &quot;Philippine&quot;\n}\nm[&quot;Philippines&quot;]\
      \ = m[&quot;Philippine&quot;]\n\nm[&quot;Portugal&quot;] = {\n\tlink = &quot;European Portuguese&quot;,\n\tdisplay = &quot;Portugal&quot;\n}\nm[&quot;EP&quot;] = m[&quot;Portugal&quot;]\nm[&quot;PT&quot;] = m[&quot;Portugal&quot;]\n\nm[&quot;ps-Kabul&quot;]\
      \ = {\n\tlink = &quot;Pashto dialects&quot;,\n\tdisplay = &quot;Kabuli&quot;\n}\n\n-- Q\n\nm[&quot;Quanzhou&quot;] = {\n\tlink = &quot;Quanzhou&quot;\n}\n\nm[&quot;Quetta&quot;] = {\n\tlink = &quot;Pashto dialects&quot;,\n\tdisplay = &quot;Quetta&quot;\n\
      }\n\n-- R\n\nm[&quot;rhotic&quot;] = {\n\tlink = &quot;Rhotic and non-rhotic accents&quot;,\n\tdisplay = &quot;rhotic&quot;\n}\n\nm[&quot;Riau-Lingga&quot;] = {\n\tlink = &quot;Riau-Lingga Sultanate&quot;,\n\tdisplay = &quot;Riau-Lingga&quot;\n}\n\nm[&quot;RP&quot;]\
      \ = {\n\tlink = &quot;Received Pronunciation&quot;\n}\n\n-- S\n\nm[&quot;São Paulo&quot;] = {\n\tlink = &quot;Brazilian Portuguese&quot;,\n\tdisplay = &quot;São Paulo&quot;\n}\n\nm[&quot;Scotland&quot;] = {\n\tlink = &quot;Scottish English&quot;,\n\tdisplay\
      \ = &quot;Scotland&quot;\n}\n\nm[&quot;Sephardi Hebrew&quot;] = {\n\tlink = &quot;Sephardi Hebrew&quot;,\n\tdisplay = &quot;Sephardi Hebrew&quot;\n}\nm[&quot;Sephardi&quot;] = m[&quot;Sephardi Hebrew&quot;]\n\nm[&quot;seseo&quot;] = {\n\tlink = &quot;Phonological\
      \ history of Spanish coronal fricatives#Seseo&quot;,\n\tdisplay = &quot;''seseo'' merger&quot;\n}\n\nm[&quot;Sistani&quot;] = {\n\tlink = &quot;Sistani dialect&quot;,\n\tdisplay = &quot;Sistani&quot;\n}\n\nm[&quot;South Africa&quot;] = {\n\tlink = &quot;South\
      \ African English&quot;,\n\tdisplay = &quot;South Africa&quot;\n}\nm[&quot;SAE&quot;] = m[&quot;South Africa&quot;]\n\nm[&quot;Southern American English&quot;] = {\n\tlink = &quot;Southern American English&quot;\n}\nm[&quot;Southern US&quot;] = m[&quot;Southern\
      \ American English&quot;]\nm[&quot;Southern US English&quot;] = m[&quot;Southern American English&quot;]\nm[&quot;Southern U.S. English&quot;] = m[&quot;Southern American English&quot;]\n\nm[&quot;South Brazil&quot;] = {\n\tlink = &quot;Brazilian Portuguese&quot;,\n\
      \tdisplay = &quot;South Brazil&quot;\n}\n\nm[&quot;Southern Scotland&quot;] = {\n\tlink = &quot;Southern Scots&quot;,\n\tdisplay = &quot;Southern Scotland&quot;\n}\n\nm[&quot;St. Louis&quot;] = {\n\tlink = &quot;North American regional phonology#St._Louis_and_vicinity&quot;,\n\
      \tdisplay = &quot;St. Louis (Missouri)&quot;\n}\nm[&quot;STL&quot;] = m[&quot;St. Louis&quot;]\n\nm[&quot;standard&quot;] = {\n\tdisplay = &quot;standard&quot;\n}\nm[&quot;Standard&quot;] = m[&quot;standard&quot;]\n\nm[&quot;Swedish&quot;] = {\n\tlink\
      \ = &quot;Swedish pronunciation&quot;,\n\tdisplay = &quot;Swedish&quot;\n}\n\nm[&quot;Syrian Hebrew&quot;] = {\n\tlink = &quot;Syrian_Jews#Pronunciation_of_Hebrew&quot;,\n\tdisplay = &quot;Syrian Hebrew&quot;\n}\n\n-- T\n\nm[&quot;Tajik&quot;] = {\n\t\
      link = &quot;Tajik language&quot;,\n\tdisplay = &quot;Tajik&quot;\n}\nm[&quot;Tajiki&quot;] = m[&quot;Tajik&quot;]\n\nm[&quot;Tehrani&quot;] = {\n\tlink = &quot;Tehrani accent&quot;,\n\tdisplay = &quot;Tehrani&quot;\n}\n\nm[&quot;Tiberian Hebrew&quot;]\
      \ = {\n\tlink = &quot;Tiberian Hebrew&quot;,\n\tdisplay = &quot;Tiberian Hebrew&quot;\n}\nm[&quot;Tiberian&quot;] = m[&quot;Tiberian Hebrew&quot;]\n\nm[&quot;Tosk&quot;] = {\n\tlink = &quot;Tosk Albanian&quot;,\n\tdisplay = &quot;Tosk&quot;\n}\n\n-- U\n\
      \nm[&quot;UK&quot;] = {\n\tlink = &quot;British English&quot;,\n\tdisplay = &quot;UK&quot;\n}\nm[&quot;British&quot;] = m[&quot;UK&quot;]\n\nm[&quot;Ulster&quot;] = {\n\tlink = &quot;Ulster Irish&quot;,\n\tdisplay = &quot;Ulster&quot;\n}\n\nm[&quot;US&quot;]\
      \ = {\n\tlink = &quot;American English&quot;,\n\tdisplay = &quot;US&quot;\n}\n\n-- V\n\nm[&quot;Valencia&quot;] = {\n\tlink = &quot;Valencian&quot;\n}\nm[&quot;Valencian&quot;] = m[&quot;Valencia&quot;]\n\n-- W\n\nm[&quot;Wales&quot;] = {\n\tlink = &quot;Welsh\
      \ English&quot;,\n\tdisplay = &quot;Wales&quot;\n}\nm[&quot;Welsh&quot;] = m[&quot;Wales&quot;]\n\nm[&quot;Wardak&quot;] = {\n\tlink = &quot;Pashto dialects&quot;,\n\tdisplay = &quot;Wardak&quot;\n}\n\nm[&quot;Wazirwola&quot;] = {\n\tlink = &quot;Wazirwola\
      \ dialect&quot;,\n\tdisplay = &quot;Wazirwola&quot;\n}\n\n-- X\n\nm[&quot;Xiamen&quot;] = {\n\tlink = &quot;Xiamen&quot;\n}\n\n-- Y\n\nm[&quot;yeísmo&quot;] = {\n\tlink = &quot;Yeísmo&quot;,\n\tdisplay = &quot;''ll''-''y'' neutralization&quot;\n}\n\nm[&quot;Yemenite\
      \ Hebrew&quot;] = {\n\tlink = &quot;Yemenite Hebrew&quot;,\n\tdisplay = &quot;Yemenite Hebrew&quot;\n}\n\nm[&quot;YIVO&quot;] = {\n\tlink = &quot;YIVO&quot;\n}\n\n-- Z\n\nm[&quot;Zhangzhou&quot;] = {\n\tlink = &quot;Zhangzhou&quot;\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:56.151Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AIPA&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48503 t=1555362356056046
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:56 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1339.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 202846022, 648219415, 702186550
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="82468" pageid="82468" ns="10" title="Template:IPA"><revisions><rev user="Rua" timestamp="2019-03-31T20:37:23Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:IPA/templates|IPA}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:05:56.339Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46505 t=1555362356240271
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:56 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1280.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 488076351, 823640772, 700942389
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4463906\" pageid=\"4463906\" ns=\"828\" title=\"Module:IPA/templates\"><revisions><rev user=\"Rua\" timestamp=\"2019-03-31T20:38:27Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal m_IPA = require(\"Module:IPA\")\n\nlocal U = mw.ustring.char\nlocal syllabic = U(0x0329)\n\n-- Used for [[Template:IPA]].\nfunction\
      \ export.IPA(frame)\n\tlocal parent_args = frame.getParent and frame:getParent().args or frame\n\tlocal compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default =\
      \ \"\"},\n\t\t[1 + offset] = {list = true, allow_holes = true},\n\t\t[\"n\"] = {list = true, allow_holes = true},\n\t\t[\"qual\"] = {list = true, allow_holes = true},\n\t\t[\"nocount\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args\
      \ = require(\"Module:parameters\").process(parent_args, params)\n\tlocal langarg = args[compat and \"lang\" or 1]\n\tlocal lang = mw.title.getCurrentTitle().nsText == \"Template\" and \"en\" or langarg\n\tlang = require(\"Module:languages\").getByCode(lang)\n\
      \n\t-- [[Special:WhatLinksHere/Template:tracking/IPA/grc]]\n\tif lang and lang:getCode() == \"grc\" then\n\t\trequire(\"Module:debug\").track(\"IPA/grc\")\n\tend\n\t\n\tlocal items = {}\n\t\n\tfor i = 1, math.max(args[1 + offset].maxindex, args[\"n\"].maxindex)\
      \ do\n\t\tlocal pron = args[1 + offset][i]\n\t\tlocal note = args[\"n\"][i]\n\t\tlocal qual = args[\"qual\"][i]\n\t\t\n\t\tif lang then\n\t\t\trequire(\"Module:IPA/tracking\").run_tracking(pron, lang)\n\t\tend\n\t\t\n\t\tif pron or note or qual then\n\t\
      \t\ttable.insert(items, {pron = pron, note = note, qualifiers = {qual}})\n\t\tend\n\tend\n\t\n\treturn m_IPA.format_IPA_full(lang, items, nil, nil, args.sort, args.nocount)\nend\n\n-- Used for [[Template:IPAchar]].\nfunction export.IPAchar(frame)\n\tlocal\
      \ params = {\n\t\t[1] = {list = true, allow_holes = true},\n\t\t[\"n\"] = {list = true, allow_holes = true},\n\t\t[\"lang\"] = {}, -- This parameter is not used and does nothing, but is allowed for futureproofing.\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame.getParent and frame:getParent().args or frame, params)\n\t\n\tlocal items = {}\n\t\n\tfor i = 1, math.max(args[1].maxindex, args[\"n\"].maxindex) do\n\t\tlocal pron = args[1][i]\n\t\tlocal note = args[\"n\"][i]\n\t\t\n\t\tif pron or note\
      \ then\n\t\t\ttable.insert(items, {pron = pron, note = note})\n\t\tend\n\tend\n\t\n\t-- Format\n\treturn m_IPA.format_IPA_multiple(nil, items)\nend\n\nfunction export.XSAMPA(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t}\n\tlocal args\
      \ = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn m_IPA.XSAMPA_to_IPA(args[1] or \"[Eg'zA:mp5=]\")\nend\n\n-- Used by [[Template:X2IPA]]\nfunction export.X2IPAtemplate(frame)\n\tlocal parent_args = frame.getParent\
      \ and frame:getParent().args or frame\n\tlocal compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default = \"und\"},\n\t\t[1 + offset] = {list = true, allow_holes\
      \ = true},\n\t\t[\"n\"] = { list = true, allow_holes = true },\n\t\t[\"qual\"] = { list = true, allow_holes = true },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(parent_args, params)\n\t\n\tlocal m_XSAMPA = require(\"Module:IPA/X-SAMPA\"\
      )\n\t\n\tpronunciations, notes, qualifiers, lang = args[1 + offset], args[\"n\"], args[\"qual\"], args[compat and \"lang\" or 1]\n\t\n\tlocal output = {}\n\ttable.insert(output, \"{{IPA\")\n\t\n\ttable.insert(output, \"|\" .. lang)\n\n\tfor i = 1, math.max(pronunciations.maxindex,\
      \ notes.maxindex, qualifiers.maxindex) do\n\t\tif pronunciations[i] then\n\t\t\ttable.insert(output, \"|\"..m_XSAMPA.XSAMPA_to_IPA(pronunciations[i]))\n\t\tend\n\t\tif notes[i] then\n\t\t\ttable.insert(output, \"|n\"..i..\"=\"..notes[i])\n\t\tend\n\t\t\
      if qualifiers[i] then\n\t\t\ttable.insert(output, \"|qual\"..i..\"=\"..qualifiers[i])\n\t\tend\n\tend\n\t\n\ttable.insert(output, \"}}\")\n\n\treturn table.concat(output)\nend\n\n-- Used by [[Template:X2IPAchar]]\nfunction export.X2IPAchar(frame)\n\tlocal\
      \ params = {\n\t\t[1] = { list = true, allow_holes = true },\n\t\t[\"n\"] = { list = true, allow_holes = true },\n\t\t[\"lang\"] = { },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal m_XSAMPA\
      \ = require(\"Module:IPA/X-SAMPA\")\n\t\n\tpronunciations, notes, lang = args[1], args[\"n\"], args[\"lang\"]\n\t\n\tlocal output = {}\n\ttable.insert(output, \"{{IPAchar\")\n\t\n\tfor i = 1, math.max(pronunciations.maxindex, notes.maxindex) do\n\t\tif\
      \ pronunciations[i] then\n\t\t\ttable.insert(output, \"|\"..m_XSAMPA.XSAMPA_to_IPA(pronunciations[i]))\n\t\tend\n\t\tif notes[i] then\n\t\t\ttable.insert(output, \"|n\"..i..\"=\"..notes[i])\n\t\tend\n\tend\n\t\n\tif lang then\n\t\ttable.insert(output,\
      \ \"|lang=\"..lang)\n\tend\n\t\n\ttable.insert(output, \"}}\")\n\t\n\treturn table.concat(output)\nend\n\n-- Used by [[Template:x2rhymes]]\nfunction export.X2rhymes(frame)\n\tlocal parent_args = frame.getParent and frame:getParent().args or frame\n\tlocal\
      \ compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default = \"und\"},\n\t\t[1 + offset] = {required = true, list = true, allow_holes = true},\n\t}\n\t\n\tlocal\
      \ args = require(\"Module:parameters\").process(parent_args, params)\n\t\n\tlocal m_XSAMPA = require(\"Module:IPA/X-SAMPA\")\n\t\n\tpronunciations, lang = args[1 + offset], args[compat and \"lang\" or 1]\n\t\n\tlocal output =  {}\n\ttable.insert(output,\
      \ \"{{rhymes\")\n\t\n\ttable.insert(output, \"|\" .. lang)\n\n\tfor i = 1, pronunciations.maxindex do\n\t\tif pronunciations[i] then\n\t\t\ttable.insert(output, \"|\"..m_XSAMPA.XSAMPA_to_IPA(pronunciations[i]))\n\t\tend\n\tend\n\t\n\ttable.insert(output,\
      \ \"}}\")\n\t\n\treturn table.concat(output)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:56.537Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=59685 t=1555362356417570
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:56 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1233.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 425231045, 641772814, 682260708
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3923940\" pageid=\"3923940\" ns=\"828\" title=\"Module:IPA\"><revisions><rev user=\"Suzukaze-c\" timestamp=\"2019-02-27T02:22:09Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"move leading space inside .previewonly.error\" xml:space=\"preserve\">local export = {}\n-- [[Module:IPA/data]]\n\nlocal m_data = mw.loadData('Module:IPA/data') -- [[Module:IPA/data]]\nlocal m_symbols =\
      \ mw.loadData('Module:IPA/data/symbols') -- [[Module:IPA/data/symbols]]\nlocal m_syllables -- [[Module:syllables]]; loaded below if needed\n\nlocal sub = mw.ustring.sub\nlocal find = mw.ustring.find\nlocal gsub = mw.ustring.gsub\nlocal match = mw.ustring.match\n\
      local gmatch = mw.ustring.gmatch\nlocal U = mw.ustring.char\n\nfunction export.format_IPA_full(lang, items, err, separator, sortKey, no_count)\n\tlocal IPA_key, key_link, err_text, prefix, IPAs, category\n\tlocal hasKey = m_data.langs_with_infopages\n\t\
      local namespace = mw.title.getCurrentTitle().nsText\n\t\n\tif err then\n\t\terr_text = '&lt;span class=\"error\"&gt;' .. err .. '&lt;/span&gt;'\n\telse\n\t\tif hasKey[lang:getCode()] then\n\t\t\tIPA_key = \"Appendix:\" .. lang:getCanonicalName() .. \"\
      \ pronunciation\"\n\t\telse\n\t\t\tIPA_key = \"wikipedia:\" .. lang:getCanonicalName() .. \" phonology\"\n\t\tend\n\t\t\n\t\tkey_link = \"[[\" .. IPA_key .. \"|key]]\"\n\tend\n\n\t\n\tlocal prefix = \"[[Wiktionary:International Phonetic Alphabet|IPA]]&lt;sup&gt;(\"\
      \ .. ( key_link or err_text ) .. \")&lt;/sup&gt;:&amp;#32;\"\n\t\n\tIPAs = export.format_IPA_multiple(lang, items, separator, no_count)\n\t\n\tif lang and (namespace == \"\" or namespace == \"Reconstruction\") then\n\t\tsortKey = sortKey or lang:makeSortKey(mw.title.getCurrentTitle().text)\n\
      \t\tsortKey = sortKey and (\"|\" .. sortKey) or \"\"\n\t\tcategory = \"[[Category:\" .. lang:getCanonicalName() .. \" terms with IPA pronunciation\" .. sortKey .. \"]]\"\n\telse\n\t\tcategory = \"\"\n\tend\n\n\treturn prefix .. IPAs .. category\nend\n\n\
      local function determine_repr(pron)\n\tlocal repr_mark = {}\n\tlocal repr, reconstructed\n\t\n\t-- remove initial asterisk before representation marks, used on some Reconstruction pages\n\tif find(pron, \"^%*\") then\n\t\treconstructed = true\n\t\tpron\
      \ = sub(pron, 2)\n\tend\n\t\n\tlocal representation_types = {\n\t\t['/'] = { right = '/', type = 'phonemic', },\n\t\t['['] = { right = ']', type = 'phonetic', },\n\t\t['⟨'] = { right = '⟩', type = 'orthographic', },\n\t\t['-'] = { type = 'rhyme' },\n\t\
      }\n\t\n\trepr_mark.i, repr_mark.f, repr_mark.left, repr_mark.right = find(pron, '^(.).-(.)$')\n\t\n\tlocal representation_type = representation_types[repr_mark.left]\n\t\n\tif representation_type then\n\t\tif representation_type.right then\n\t\t\tif repr_mark.right\
      \ == representation_type.right then\n\t\t\t\trepr = representation_type.type\n\t\t\tend\n\t\telse\n\t\t\trepr = representation_type.type\n\t\tend\n\telse\n\t\trepr = nil\n\tend\n\t\n\treturn repr, reconstructed\nend\n\nlocal function hasInvalidSeparators(transcription)\n\
      \tif find(transcription, \"%.[ˈˌ]\") then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\nfunction export.format_IPA_multiple(lang, items, separator, no_count)\n\tlocal notes = {}\n\tlocal categories = {}\n\tseparator = separator or ', '\n\t\n\
      \t-- Format\n\tif not items[1] then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\ttable.insert(items, {pron = \"/aɪ piː ˈeɪ/\"})\n\t\telse\n\t\t\ttable.insert(categories, \"[[Category:Pronunciation templates without a pronunciation]]\"\
      )\n\t\tend\n\tend\n\t\n\tlocal bits = {}\n\t\n\tfor _, item in ipairs(items) do\n\t\tlocal bit = export.format_IPA(lang, item.pron)\n\t\t\n\t\tif item.qualifiers and item.qualifiers[1] then\n\t\t\tbit = require(\"Module:qualifier\").format_qualifier(item.qualifiers)\
      \ .. \" \" .. bit\n\t\tend\n\t\t\n\t\tif item.note then\n\t\t\tbit = bit .. mw.getCurrentFrame():extensionTag(\"ref\", item.note)\n\t\tend\n\t\t\n\t\ttable.insert(bits, bit)\n\t\t\n\t\t--[=[\t[[Special:WhatLinksHere/Template:tracking/IPA/syntax-error]]\n\
      \t\t\t\tThe length or gemination symbol should not appear after a syllable break or stress symbol.\t]=]\n\t\t\n\t\tif find(item.pron, \"[ˈˌ%.][ːˑ]\") then\n\t\t\trequire(\"Module:debug\").track(\"IPA/syntax-error\")\n\t\tend\n\t\t\n\t\tif lang then\n\t\
      \t\t-- Add syllable count if the language's diphthongs are listed in [[Module:syllables]].\n\t\t\tif not no_count and mw.title.getCurrentTitle().namespace == 0 then\n\t\t\t\tm_syllables = m_syllables or require('Module:syllables')\n\t\t\t\tif m_syllables.hasDiphthongs(lang)\
      \ then\n\t\t\t\t\tif determine_repr(item.pron) == \"phonemic\" or lang:getCode() == \"ru\" then\n\t\t\t\t\t\tlocal syllable_count = m_syllables.getVowels(item.pron, lang)\n\t\t\t\t\t\tif syllable_count then\n\t\t\t\t\t\t\ttable.insert(categories, \"[[Category:\"\
      \ .. lang:getCanonicalName() .. \" \" .. syllable_count .. \"-syllable words]]\")\n\t\t\t\t\t\tend\t\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tif lang:getCode() == \"en\" then\n\t\t\t\tif hasInvalidSeparators(item.pron) then\n\t\t\t\t\ttable.insert(categories,\
      \ \"[[Category:IPA for English using .ˈ or .ˌ]]\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\n\treturn table.concat(bits, separator) .. table.concat(categories)\nend\n\n-- Takes an IPA pronunciation and formats it and adds cleanup categories.\nfunction\
      \ export.format_IPA(lang, pron, split_output)\n\tlocal err = {}\n\tlocal categories = {}\n\t\n\t-- Remove wikilinks, so that wikilink brackets are not misinterpreted as\n\t-- indicating phonemic transcription\n\tlocal str_gsub = string.gsub\n\tlocal without_links\
      \ = str_gsub(pron, '%[%[[^|%]]+|([^%]]+)%]%]', '%1')\n\twithout_links = str_gsub(without_links, '%[%[[^%]]+%]%]', '%1')\n\t\n\t-- Detect whether this is a phonemic or phonetic transcription\n\tlocal repr, reconstructed = determine_repr(without_links)\n\
      \t\n\tif reconstructed then\n\t\tpron = sub(pron, 2)\n\tend\n\t\n\t-- If valid, strip the representation marks\n\tif repr == \"phonemic\" then\n\t\tpron = sub(pron, 2, -2)\n\t\twithout_links = sub(without_links, 2, -2)\n\telseif repr == \"phonetic\" then\n\
      \t\tpron = sub(pron, 2, -2)\n\t\twithout_links = sub(without_links, 2, -2)\n\telseif repr == \"orthographic\" then\n\t\tpron = sub(pron, 2, -2)\n\t\twithout_links = sub(without_links, 2, -2)\n\telseif repr == \"rhyme\" then\n\t\tpron = sub(pron, 2)\n\t\
      \twithout_links = sub(without_links, 2)\n\telse\n\t\ttable.insert(categories, \"[[Category:IPA pronunciations with invalid representation marks]]\")\n\t\t-- table.insert(err, \"invalid representation marks\")\n\t\t-- Removed because it's annoying when\
      \ previewing pronunciation pages.\n\tend\n\t\n\t-- Check for obsolete and nonstandard symbols\n\tfor i, symbol in ipairs(m_data.nonstandard) do\n\t\tlocal result\n\t\tfor nonstandard in gmatch(pron, symbol) do\n\t\t\tif not result then\n\t\t\t\tresult\
      \ = {}\n\t\t\tend\n\t\t\ttable.insert(result, nonstandard)\n\t\t\ttable.insert(categories, \"[[Category:IPA pronunciations with obsolete or nonstandard characters|\" .. nonstandard .. \"]]\")\n\t\tend\n\t\t\n\t\tif result then\n\t\t\ttable.insert(err,\
      \ \"obsolete or nonstandard characters (\" .. table.concat(result) .. \")\")\n\t\t\tbreak\n\t\tend\n\tend\n\t\n\t--[[ Check for invalid symbols after removing the following:\n\t\t\t1. wikilinks (handled above)\n\t\t\t2. paired HTML tags\n\t\t\t3. bolding\n\
      \t\t\t4. italics\n\t\t\t5. HTML entity for space\n\t\t\t6. asterisk at beginning of transcription\n\t\t\t7. comma followed by spacing characters\n\t\t\t8. superscripts enclosed in superscript parentheses\t\t]]\n\tlocal found_HTML\n\tlocal result = str_gsub(without_links,\
      \ \"&lt;(%a+)[^&gt;]*&gt;([^&lt;]+)&lt;/%1&gt;\",\n\t\tfunction(tagName, content)\n\t\t\tfound_HTML = true\n\t\t\treturn content\n\t\tend)\n\tresult = str_gsub(result, \"'''([^']*)'''\", \"%1\")\n\tresult = str_gsub(result, \"''([^']*)''\", \"%1\")\n\t\
      result = str_gsub(result, \"&amp;[^;]+;\", \"\") -- This may catch things that are not valid character entities.\n\tresult = str_gsub(result, \"^%*\", \"\")\n\tresult = gsub(result, \",%s+\", \"\")\n\tresult = gsub(result, \"⁽[\".. m_symbols.superscripts\
      \ .. \"]+⁾\", \"\")\n\tresult = gsub(result, '[' .. m_symbols.valid .. ']', '')\n\tif result ~= '' then\n\t\tlocal suggestions = {}\n\t\tmw.log(pron, result)\n\t\tlocal namespace = mw.title.getCurrentTitle().namespace\n\t\tlocal category\n\t\tif namespace\
      \ == 0 then\n\t\t\t-- main namespace\n\t\t\tcategory = \"IPA pronunciations with invalid IPA characters\"\n\t\telseif namespace == 118 then\n\t\t\t-- reconstruction namespace\n\t\t\tcategory = \"IPA pronunciations with invalid IPA characters/reconstruction\"\
      \n\t\telse\n\t\t\tcategory = \"IPA pronunciations with invalid IPA characters/non_mainspace\"\n\t\tend\n\t\tfor character in gmatch(result, \".\") do\n\t\t\tlocal suggestion = m_symbols.suggestions[character]\n\t\t\tif suggestion then\n\t\t\t\ttable.insert(suggestions,\
      \ character .. \" with \" .. suggestion)\n\t\t\tend\n\t\t\ttable.insert(categories, \"[[Category:\" .. category .. \"|\" .. character .. \"]]\")\n\t\tend\n\t\ttable.insert(err, \"invalid IPA characters (\" .. result .. \")\")\n\t\tif suggestions[1] then\n\
      \t\t\ttable.insert(err, \"replace \" .. table.concat(suggestions, \", \"))\n\t\tend\n\tend\n\t\n\tif found_HTML then\n\t\ttable.insert(categories, \"[[Category:IPA pronunciations with paired HTML tags]]\")\n\tend\n\t\n\t-- Reference inside IPA template\
      \ usage\n\t-- FIXME: Doesn't work; you can't put HTML in module output.\n\t--if mw.ustring.find(pron, '&lt;/ref&gt;') then\n\t--\ttable.insert(categories, \"[[Category:IPA pronunciations with reference]]\")\n\t--end\n\t\n\tif repr == \"phonemic\" or repr\
      \ == \"rhyme\" then\n\t\tif lang and m_data.phonemes[lang:getCode()] then\n\t\t\tlocal valid_phonemes = m_data.phonemes[lang:getCode()]\n\t\t\tlocal rest = pron\n\t\t\tlocal phonemes = {}\n\t\t\t\n\t\t\twhile mw.ustring.len(rest) &gt; 0 do\n\t\t\t\tlocal\
      \ longestmatch = \"\"\n\t\t\t\t\n\t\t\t\tif sub(rest, 1, 1) == \"(\" or sub(rest, 1, 1) == \")\" then\n\t\t\t\t\tlongestmatch = sub(rest, 1, 1)\n\t\t\t\telse\n\t\t\t\t\tfor _, phoneme in ipairs(valid_phonemes) do\n\t\t\t\t\t\tif mw.ustring.len(phoneme)\
      \ &gt; mw.ustring.len(longestmatch) and sub(rest, 1, mw.ustring.len(phoneme)) == phoneme then\n\t\t\t\t\t\t\tlongestmatch = phoneme\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif mw.ustring.len(longestmatch) &gt; 0 then\n\t\t\t\t\t\
      table.insert(phonemes, longestmatch)\n\t\t\t\t\trest = sub(rest, mw.ustring.len(longestmatch) + 1)\n\t\t\t\telse\n\t\t\t\t\tlocal phoneme = sub(rest, 1, 1)\n\t\t\t\t\ttable.insert(phonemes, \"&lt;span style=\\\"color: red\\\"&gt;\" .. phoneme .. \"&lt;/span&gt;\"\
      )\n\t\t\t\t\trest = sub(rest, 2)\n\t\t\t\t\ttable.insert(categories, \"[[Category:IPA pronunciations with invalid phonemes/\" .. lang:getCode() .. \"]]\")\n\t\t\t\t\trequire(\"Module:debug\").track(\"IPA/invalid phonemes/\" .. phoneme)\n\t\t\t\tend\n\t\
      \t\tend\n\t\t\t\n\t\t\tpron = table.concat(phonemes)\n\t\tend\n\t\t\n\t\tif repr == \"phonemic\" then\n\t\t\tpron = \"/\" .. pron .. \"/\"\n\t\telse\n\t\t\tpron = \"-\" .. pron\n\t\tend\n\telseif repr == \"phonetic\" then\n\t\tpron = \"[\" .. pron .. \"\
      ]\"\n\telseif repr == \"orthographic\" then\n\t\tpron = \"⟨\" .. pron .. \"⟩\"\n\tend\n\t\n\tif reconstructed then\n\t\tpron = \"*\" .. pron\n\tend\n\t\n\tif err[1] then\n\t\terr = '&lt;span class=\"previewonly error\" style=\"font-size: small;&gt;&amp;#32;'\
      \ .. table.concat(err, ', ') .. '&lt;/span&gt;'\n\telse\n\t\terr = \"\"\n\tend\n\t\n\tif split_output then -- for use of IPA in links \n\t\treturn '&lt;span class=\"IPA\"&gt;' .. pron .. '&lt;/span&gt;', table.concat(categories), err\n\telse\n\t\treturn\
      \ '&lt;span class=\"IPA\"&gt;' .. pron .. '&lt;/span&gt;' .. err .. table.concat(categories)\n\tend\nend\n\nfunction export.example(frame)\n\tlocal output = {}\n\t\n\tlocal m_links = require('Module:links')\n\tlocal m_languages = require('Module:languages')\n\
      \t\n\ttable.insert(\n\t\toutput,\n[[\n{| class=\"wikitable\"\n! Term !! IPA !! Generated X-SAMPA !! Regenerated IPA !! Matched?\n]]\n\t)\n\tlocal row =\n[[\n|-\n| link || IPA || XSAMPA || regenerated_IPA || matched\n]]\n\t\n\tlocal examples = mw.text.split(frame.args[1],\
      \ \",%s*\")\n\t\n\tlocal m_XSAMPA = require(\"Module:IPA/X-SAMPA\")\n\t\n\tfor _, example in pairs(examples) do\n\t\tlocal lang, word = match(example, \"(%l%l%l?):(.+) [/%[]\")\n\t\t\n\t\tif lang then\n\t\t\tlang = m_languages.getByCode(lang) or error('\"\
      ' .. lang .. '\" is not a valid language code.')\n\t\tend\n\t\t\n\t\tlocal IPA = match(example, \"/[^/]+/\")\n\t\t\tor match(example, \"%[[^%]]+%]\")\n\t\t\tor error('No IPA transcription found in \"' .. example .. '\".')\n\t\tlocal XSAMPA = m_XSAMPA.IPA_to_XSAMPA(IPA)\n\
      \t\tlocal regenerated_IPA = m_XSAMPA.XSAMPA_to_IPA(XSAMPA)\n\t\t\n\t\tcontent = {\n\t\t\tlink = lang and word and m_links.full_link{ term = word, lang = lang },\n\t\t\tmatched = IPA == regenerated_IPA\n\t\t\t\tand '&lt;span style=\"color: green;\"&gt;yes&lt;/span&gt;'\n\
      \t\t\t\tor '&lt;span style=\"color: red;\"&gt;no&lt;/span&gt;',\n\t\t\tIPA = '&lt;span class=\"IPA\"&gt;' .. IPA .. '&lt;/span&gt;',\n\t\t\tXSAMPA = '&lt;code&gt;' .. XSAMPA .. '&lt;/span&gt;',\n\t\t\tregenerated_IPA = '&lt;span class=\"IPA\"&gt;' .. regenerated_IPA\
      \ .. '&lt;/span&gt;'\n\t\t}\n\t\t\n\t\tlocal function add_content(item)\n\t\t\treturn content[item] or \"\"\n\t\tend\n\t\tlocal row = gsub(row, \"[%a_]+\", add_content)\n\t\ttable.insert(output, row)\n\tend\n\t\n\ttable.insert(output, \"|}\")\n\t\n\treturn\
      \ table.concat(output)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:56.723Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53782 t=1555362356621440
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:56 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 575880340, 558544573, 700270551
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4118506\" pageid=\"4118506\" ns=\"828\" title=\"Module:IPA/data\"><revisions><rev user=\"Mahagaja\" timestamp=\"2019-02-27T13:31:09Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"mfe now exists\" xml:space=\"preserve\">local data = {}\n\n--[=[\tPlease add language codes for new pronunciation keys to the list below.\n\t\tThis will allow [[Template:IPA]] and the\
      \ functions in [[Module:IPA]] to\n\t\tautomatically link to the key.\t]=]\nlocal langcodes = {\n\t\"ca\",\n    \"cy\",\n\t\"de\",\n    \"dsb\",\n    \"el\",\n\t\"en\",\n    \"eo\",\n    \"es\",\n    \"fr\",\n    \"ga\",\n    \"gd\",\n    \"got\",\n   \
      \ \"hu\",\n    \"it\",\n    \"la\",\n    \"liv\",\n    \"mdf\",\n    \"mfe\",\n    \"my\",\n    \"nci\",\n\t\"nl\",\n    \"no\",\n    \"pjt\",\n    \"pl\",\n    \"pt\",\n    \"sl\",\n    \"sga\",\n    \"sv\",\n    \"ug\",\n    \"wlm\",\n    \"yi\",\n}\n\
      \ndata.langs_with_infopages = {}\n\n--[=[\tThis goes through the list of langcodes, and fills\n\t\tthe table data.langs_with_infopages with items\n\t\tsuch as [\"ca\"] = true, [\"cy\"] = true, ... ,\n\t\tso that [[Module:IPA]] can easily access them. ]=]\n\
      for _, langcode in ipairs(langcodes) do\n\tdata.langs_with_infopages[langcode] = true\nend\n\n-- Non-standard or obsolete IPA symbols.\ndata.nonstandard = {\n\t--[[\tThe following symbols consist of more than one character,\n\t\t\tso we can't put them\
      \ in the line below.\t\t]]\n\t\"ɑ̢\", \"d̂\", \"t̂\", \"n̂\", \"l̂\", \"k̫\", \"ɔ̗\", \"ɔ̖\",\n\t\n\t\"[ʦʣʧʤʨʥ?ƍσƺƪƻƾƞᶀᶁᶂᶃᶄᶅᶆᶈᶇᶉᶊᶋƫᶌᶍᶎʓʆλƛłščžǰǧǯẋᵻᵿⱻʚ\"\n\t.. \"ɷωıȹȸ∅ØƥƭƈƙʠʇʗʖʞɩɼȣяɿʅʮʯᴀᴀᴇGRŒQȡȶȵȴKPT]\"\n}\n\n-- See valid IPA characters at [[Module:IPA/data/symbols]].\n\
      \ndata.phonemes = {}\ndata.phonemes[\"nl\"] = {\n\t\"m\", \"n\", \"ŋ\",\n\t\"p\", \"b\", \"t\", \"d\", \"k\", \"ɡ\",\n\t\"f\", \"v\", \"s\", \"z\", \"ʃ\", \"ʒ\", \"x\", \"ɣ\", \"ɦ\",\n\t\"ʋ\", \"l\", \"j\", \"r\",\n\t\"ɪ\", \"ʏ\", \"ɛ\", \"ə\", \"ɔ\",\
      \ \"ɑ\",\n\t\"i\", \"iː\", \"y\", \"yː\", \"u\", \"uː\", \"eː\", \"øː\", \"oː\", \"ɛː\", \"œː\", \"ɔː\", \"aː\",\n\t\"ɛi̯\", \"œy̯\", \"ɔi̯\", \"ɑu̯\", \"ɑi̯\",\n\t\"iu̯\", \"yu̯\", \"ui̯\", \"eːu̯\", \"oːi̯\", \"aːi̯\",\n\t\"ˈ\", \"ˌ\", \".\", \" \",\n\
      \t}\ndata.phonemes[\"hy\"] = {\n\t\"ɑ\", \"b\", \"ɡ\", \"d\", \"ɛ\", \"z\", \"ɛ\", \"ə\", \"tʰ\", \"ʒ\", \"i\", \"l\", \"χ\", \"t͡s\",\n\t\"k\", \"h\", \"d͡z\", \"ʁ\", \"t͡ʃ\", \"m\", \"j\", \"n\", \"ʃ\", \"ɔ\", \"t͡ʃʰ\", \"p\", \"d͡ʒ\",\n\t\"r\", \"s\"\
      , \"v\", \"t\", \"ɾ\", \"t͡sʰ\", \"v\", \"pʰ\", \"kʰ\", \"ɔ\", \"f\", \"ŋɡ\", \"ŋk\",\n\t\"ŋχ\", \"u\", \"ˈ\", \"ˌ\", \".\", \" \", \"ː\",\n\t}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:53.056Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aparameters&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45709 t=1555362352954670
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:53 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 490010902, 826455458, 679050686
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4797340\" pageid=\"4797340\" ns=\"828\" title=\"Module:parameters\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-01T01:32:55Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"OK, resurrect the bug fix for disappearing &quot;falt&quot; and such while I figure out how to clone a table properly\" xml:space=\"preserve\">local export = {}\n\n-- A helper function\
      \ to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nlocal plain = require(\"Module:string\").pattern_escape\n\n-- A helper function that removes empty numeric indexes in a table,\n-- so that the values are tightly packed like in\
      \ a normal Lua table.\nlocal remove_holes = require(\"Module:table\").compressSparseArray\n\nfunction export.process(args, params, return_unknown)\n\tlocal args_new = {}\n\t\n\t-- Process parameters for specific properties\n\tlocal required = {}\n\tlocal\
      \ patterns = {}\n\tlocal names_with_equal_sign = {}\n\tlocal list_from_index = nil\n\t\n\tfor name, param in pairs(params) do\n\t\tif param.required then\n\t\t\tif param.alias_of then\n\t\t\t\trequire(\"Module:debug\").track(\"parameters/required alias\"\
      )\n\t\t\tend\n\t\t\trequired[name] = true\n\t\tend\n\t\t\n\t\tif param.list then\n\t\t\tlocal key = name\n\t\t\tif type(name) == \"string\" then\n\t\t\t\tkey = string.gsub(name, \"=\", \"\")\n\t\t\tend\n\t\t\tif param.default ~= nil then\n\t\t\t\targs_new[key]\
      \ = {param.default, maxindex = 1}\n\t\t\telse\n\t\t\t\targs_new[key] = {maxindex = 0}\n\t\t\tend\n\t\t\t\n\t\t\tif type(param.list) == \"string\" then\n\t\t\t\t-- If the list property is a string, then it represents the name\n\t\t\t\t-- to be used as the\
      \ prefix for list items. This is for use with lists\n\t\t\t\t-- where the first item is a numbered parameter and the\n\t\t\t\t-- subsequent ones are named, such as 1, pl2, pl3.\n\t\t\t\tif string.find(param.list, \"=\") then\n\t\t\t\t\tpatterns[\"^\" ..\
      \ string.gsub(plain(param.list), \"=\", \"(%%d+)\") .. \"$\"] = name\n\t\t\t\telse\n\t\t\t\t\tpatterns[\"^\" .. plain(param.list) .. \"(%d+)$\"] = name\n\t\t\t\tend\n\t\t\telseif type(name) == \"number\" then\n\t\t\t\t-- If the name is a number, then all\
      \ indexed parameters from\n\t\t\t\t-- this number onwards go in the list.\n\t\t\t\tlist_from_index = name\n\t\t\telse\n\t\t\t\tif string.find(name, \"=\") then\n\t\t\t\t\tpatterns[\"^\" .. string.gsub(plain(name), \"=\", \"(%%d+)\") .. \"$\"] = string.gsub(name,\
      \ \"=\", \"\")\n\t\t\t\telse\n\t\t\t\t\tpatterns[\"^\" .. plain(name) .. \"(%d+)$\"] = name\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif string.find(name, \"=\") then\n\t\t\t\t-- DO NOT SIDE-EFFECT A TABLE WHILE ITERATING OVER IT.\n\t\t\t\t-- Some elements\
      \ may be skipped or processed twice if you do.\n\t\t\t\t-- Instead, track the changes we want to make to `params`, and\n\t\t\t\t-- do them after the iteration over `params` is done.\n\t\t\t\ttable.insert(names_with_equal_sign, name)\n\t\t\tend\n\t\telseif\
      \ param.default ~= nil then\n\t\t\targs_new[name] = param.default\n\t\tend\n\tend\n\n\t--Process required changes to `params`\n\tfor _, name in ipairs(names_with_equal_sign) do\n\t\trequire(\"Module:debug\").track(\"parameters/name with equals\")\n\t\t\
      params[string.gsub(name, \"=\", \"\")] = params[name]\n\t\tparams[name] = nil\n\tend\n\n\t-- Process the arguments\n\tlocal args_unknown = {}\n\t\n\tfor name, val in pairs(args) do\n\t\tlocal index = nil\n\t\t\n\t\tif type(name) == \"number\" then\n\t\t\
      \tif list_from_index ~= nil and name &gt;= list_from_index then\n\t\t\t\tindex = name - list_from_index + 1\n\t\t\t\tname = list_from_index\n\t\t\tend\n\t\telse\n\t\t\t-- Does this argument name match a pattern?\n\t\t\tfor pattern, pname in pairs(patterns)\
      \ do\n\t\t\t\tindex = mw.ustring.match(name, pattern)\n\t\t\t\t\n\t\t\t\t-- It matches, so store the parameter name and the\n\t\t\t\t-- numeric index extracted from the argument name.\n\t\t\t\tif index then\n\t\t\t\t\tindex = tonumber(index)\n\t\t\t\t\t\
      name = pname\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal param = params[name]\n\t\t\n\t\t-- If a parameter without the trailing index was found, and\n\t\t-- require_index is set on the param, set the param to nil to treat it\n\t\t\
      -- as if it isn't recognized.\n\t\tif not index and param and param.require_index then\n\t\t\tparam = nil\n\t\tend\n\t\t\n\t\t-- If no index was found, use 1 as the default index.\n\t\t-- This makes list parameters like g, g2, g3 put g at index 1.\n\t\t\
      index = index or 1\n\t\t\n\t\t-- If the argument is not in the list of parameters, trigger an error.\n\t\t-- return_unknown suppresses the error, and stores it in a separate list instead.\n\t\tif not param then\n\t\t\tif return_unknown then\n\t\t\t\targs_unknown[name]\
      \ = val\n\t\t\telse\n\t\t\t\terror(\"The parameter \\\"\" .. name .. \"\\\" is not used by this template.\", 2)\n\t\t\tend\n\t\telse\n\t\t\t-- Remove leading and trailing whitespace unless allow_whitespace is true.\n\t\t\tif not param.allow_whitespace\
      \ then\n\t\t\t\tval = mw.text.trim(val)\n\t\t\tend\n\t\t\t\n\t\t\t-- Empty string is equivalent to nil unless allow_empty is true.\n\t\t\tif val == \"\" and not param.allow_empty then\n\t\t\t\tval = nil\n\t\t\tend\n\t\t\t\n\t\t\t-- Convert to proper type\
      \ if necessary.\n\t\t\tif param.type == \"boolean\" then\n\t\t\t\tval = not (not val or val == \"\" or val == \"0\" or val == \"no\" or val == \"n\" or val == \"false\")\n\t\t\telseif param.type == \"number\" then\n\t\t\t\tval = tonumber(val)\n\t\t\telseif\
      \ param.type then\n\t\t\t\trequire(\"Module:debug\").track {\n\t\t\t\t\t\"parameters/unrecognized type\",\n\t\t\t\t\t\"parameters/unrecognized type/\" .. tostring(param.type)\n\t\t\t\t}\n\t\t\tend\n\t\t\t\n\t\t\t-- Can't use \"if val\" alone, because val\
      \ may be a boolean false.\n\t\t\tif val ~= nil then\n\t\t\t\t-- Mark it as no longer required, as it is present.\n\t\t\t\trequired[param.alias_of or name] = nil\n\t\t\t\t\n\t\t\t\t-- Store the argument value.\n\t\t\t\tif param.list then\n\t\t\t\t\t-- If\
      \ the parameter is an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\t\targs_new[name][index] = val\n\t\t\t\t\t\t\n\t\t\t\t\t\t-- Store\
      \ the highest index we find.\n\t\t\t\t\t\targs_new[name].maxindex = math.max(index, args_new[name].maxindex)\n\t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\t\t\t\t\t\
      args_new[param.alias_of][index] = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest index we find.\n\t\t\t\t\t\t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of]\
      \ = val\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\t-- If the parameter is an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\
      \t\targs_new[name] = val\n\t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\t\t\t\t\targs_new[param.alias_of][1] = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest\
      \ index we find.\n\t\t\t\t\t\t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of] = val\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\
      \t\n\t-- The required table should now be empty.\n\t-- If any entry remains, trigger an error, unless we're in the template namespace.\n\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\tlocal list = {}\n\t\tfor name, param in pairs(required)\
      \ do\n\t\t\ttable.insert(list, name)\n\t\tend\n\t\t\n\t\tlocal count = #list\n\t\tif count == 1 then\n\t\t\terror('The parameter \"' .. list[1] .. '\" is required.', 2)\n\t\telseif count == 2 then\n\t\t\terror('The parameters \"' .. table.concat(list,\
      \ '\" and \"') .. '\" are required.', 2)\n\t\telseif count &gt; 2 then\n\t\t\terror('The parameters \"' .. mw.text.listToText(list, '\", \"', '\", and \"') .. '\" are required.', 2)\n\t\tend\n\tend\n\t\n\t-- Remove holes in any list parameters if needed.\n\
      \tfor name, val in pairs(args_new) do\n\t\tif type(val) == \"table\" and not params[name].allow_holes then\n\t\t\targs_new[name] = remove_holes(val)\n\t\tend\n\tend\n\t\n\tif return_unknown then\n\t\treturn args_new, args_unknown\n\telse\n\t\treturn args_new\n\
      \tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:57.490Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Awikipedia&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53038 t=1555362357388967
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:57 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 191195838, 731129664, 700648074
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="45052" pageid="45052" ns="10" title="Template:wikipedia"><revisions><rev user="Rua" timestamp="2016-10-13T16:13:57Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Looks like it all works" xml:space="preserve">{{#invoke:wikipedia|wikipedia_box}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2015-08-30T00:23:22.055Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Awikimedia+languages%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=30-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 30 Aug 2015 00:23:21 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=30-Aug-2015
      X-Cache: cp1065 miss (0), cp3003 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 1142597802, 2990860455, 3743361916
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4506952\" pageid=\"4506952\" ns=\"828\" title=\"Module:wikimedia languages/templates\"><revisions><rev user=\"CodeCat\" timestamp=\"2014-08-11T01:32:53Z\" comment=\"\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nfunction export.exists(frame, fallback)\n\tlocal args = frame.args\n\tlocal lang = args[1] or error(&quot;Wikimedia language code has not been specified. Please pass parameter\
      \ 1 to the module invocation.&quot;)\n\t\n\tlang = require(&quot;Module:wikimedia languages&quot;)[(fallback and &quot;getByCodeWithFallback&quot; or &quot;getByCode&quot;)](lang)\n\t\n\tif lang then\n\t\treturn &quot;1&quot;\n\telse\n\t\treturn &quot;&quot;\n\
      \tend\nend\n\nfunction export.existsWithFallback(frame)\n\treturn export.exists(frame, true)\nend\n\nfunction export.getByCode(frame, fallback)\n\tlocal args = frame.args\n\tlocal langcode = args[1] or error(&quot;Wikimedia language code has not been specified.\
      \ Please pass parameter 1 to the module invocation.&quot;)\n\tlocal itemname = args[2] or error(&quot;Type of information to look up has not been specified. Please pass parameter 2 to the module invocation.&quot;)\n\t\n\tlocal lang = require(&quot;Module:wikimedia\
      \ languages&quot;)[(fallback and &quot;getByCodeWithFallback&quot; or &quot;getByCode&quot;)](langcode)\n\t\n\tif not lang then\n\t\terror(&quot;The wikimedia language code '&quot; .. langcode .. &quot;' is not valid.&quot;)\n\tend\n\t\n\t-- The item that\
      \ the caller wanted to look up\n\tif itemname == &quot;getAllNames&quot; then\n\t\tlocal index = args[3]; if index == &quot;&quot; then index = nil end\n\t\tindex = tonumber(index or error(&quot;Please specify the numeric index of the desired name.&quot;))\n\
      \t\treturn lang:getAllNames()[index] or &quot;&quot;\n\telseif itemname == &quot;getWiktionaryLanguage&quot; then\n\t\treturn lang:getWiktionaryLanguage():getCode()\n\telseif lang[itemname] then\n\t\tlocal ret = lang[itemname](lang)\n\t\t\n\t\tif type(ret)\
      \ == &quot;string&quot; then\n\t\t\treturn ret\n\t\telse\n\t\t\terror(&quot;The function \\&quot;&quot; .. itemname .. &quot;\\&quot; did not return a string value.&quot;)\n\t\tend\n\telse\n\t\terror(&quot;Requested invalid item name \\&quot;&quot; ..\
      \ itemname .. &quot;\\&quot;.&quot;)\n\tend\nend\n\nfunction export.getByCodeWithFallback(frame)\n\treturn export.getByCode(frame, true)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:57.855Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Awikimedia+languages&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48620 t=1555362357757881
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:57 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 595548158, 627993165, 681867360
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4506944\" pageid=\"4506944\" ns=\"828\" title=\"Module:wikimedia languages\"><revisions><rev user=\"Rua\" timestamp=\"2015-01-26T16:00:55Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal WikimediaLanguage = {}\n\nfunction WikimediaLanguage:getCode()\n\treturn self._code\nend\n\nfunction WikimediaLanguage:getCanonicalName()\n\
      \treturn self._rawData.canonicalName\nend\n\n--function WikimediaLanguage:getAllNames()\n--\treturn self._rawData.names\n--end\n\nfunction WikimediaLanguage:getType()\n\treturn \"Wikimedia\"\nend\n\nfunction WikimediaLanguage:getWiktionaryLanguage()\n\t\
      if not self._wiktionaryLanguageObject then\n\t\tself._wiktionaryLanguageObject = require(\"Module:languages\").getByCode(self._rawData.wiktionary_code)\n\tend\n\t\n\treturn self._wiktionaryLanguageObject\nend\n\n-- Do NOT use this method!\n-- All uses\
      \ should be pre-approved on the talk page!\nfunction WikimediaLanguage:getRawData()\n\treturn self._rawData\nend\n\nWikimediaLanguage.__index = WikimediaLanguage\n\n\nfunction export.getByCode(code)\n\t-- Only accept codes the software recognises\n\tif\
      \ not mw.language.isKnownLanguageTag(code) then\n\t\treturn nil\n\tend\n\t\n\tlocal rawData = mw.loadData(\"Module:wikimedia languages/data\")[code]\n\t\n\t-- If there is no specific Wikimedia code, then \"borrow\" the information\n\t-- from the general\
      \ Wiktionary language code\n\tif not rawData then\n\t\tlocal lang = require(\"Module:languages\").getByCode(code)\n\t\t\n\t\tif not lang then\n\t\t\treturn nil\n\t\tend\n\t\t\n\t\trawData = {canonicalName = lang:getCanonicalName(), wiktionary_code = code}\n\
      \telseif not rawData.canonicalName then\n\t\trawData = {canonicalName = require(\"Module:languages\").getByCode(rawData.wiktionary_code):getCanonicalName(), wiktionary_code = rawData.wiktionary_code}\n\tend\n\t\n\treturn setmetatable({ _rawData = rawData,\
      \ _code = code }, WikimediaLanguage)\nend\n\nfunction export.getByCodeWithFallback(code)\n\tlocal object = export.getByCode(code)\n\t\n\tif object then\n\t\treturn object\n\tend\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(code)\n\t\n\t\
      if not lang then\n\t\treturn nil\n\tend\n\t\n\treturn lang:getWikimediaLanguages()[1]\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:58.041Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Awikimedia+languages%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58204 t=1555362357935657
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:58 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 572281297, 548437083, 681738156
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4506945\" pageid=\"4506945\" ns=\"828\" title=\"Module:wikimedia languages/data\"><revisions><rev user=\"Daniel Carrero\" timestamp=\"\
      2015-11-24T03:34:30Z\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Reverted edits by [[Special:Contributions/Daniel Carrero|Daniel Carrero]]. If you think this rollback is in error, please leave a message on my talk page.\" xml:space=\"\
      preserve\">local m = {}\n\nm[\"als\"] = {\n\twiktionary_code = \"gsw\",\n}\n\nm[\"bat-smg\"] = {\n\twiktionary_code = \"sgs\",\n}\n\nm[\"bs\"] = {\n\tcanonicalName = \"Bosnian\",\n\twiktionary_code = \"sh\",\n}\n\nm[\"bxr\"] = {\n\twiktionary_code = \"\
      bua\",\n}\n\nm[\"diq\"] = {\n\twiktionary_code = \"zza\",\n}\n\nm[\"eml\"] = {\n\tcanonicalName = \"Emiliano-Romagnolo\",\n\twiktionary_code = \"egl\",\n}\n\nm[\"fiu-vro\"] = {\n\twiktionary_code = \"vro\",\n}\n\nm[\"hr\"] = {\n\tcanonicalName = \"Croatian\"\
      ,\n\twiktionary_code = \"sh\",\n}\n\nm[\"ksh\"] = {\n\twiktionary_code = \"gmw-cfr\",\n}\n\nm[\"mhr\"] = {\n\twiktionary_code = \"chm\",\n}\n\nm[\"nrm\"] = {\n\twiktionary_code = \"nrf\",\n}\n\nm[\"roa-rup\"] = {\n\twiktionary_code = \"rup\",\n}\n\nm[\"\
      roa-tara\"] = {\n\twiktionary_code = \"roa-tar\",\n}\n\nm[\"simple\"] = {\n\tcanonicalName = \"Simple English\",\n\twiktionary_code = \"en\",\n}\n\nm[\"sr\"] = {\n\tcanonicalName = \"Serbian\",\n\twiktionary_code = \"sh\",\n}\n\nm[\"zh-classical\"] = {\n\
      \twiktionary_code = \"ltc\",\n}\n\nm[\"zh-min-nan\"] = {\n\twiktionary_code = \"nan\",\n}\n\nm[\"zh-yue\"] = {\n\twiktionary_code = \"yue\",\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:52.671Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alang&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51117 t=1555362352573910
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:52 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1221.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 589300602, 816212457, 692860367
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="2249840" pageid="2249840" ns="10" title="Template:lang"><revisions><rev user="Chuck Entz" timestamp="2018-12-25T18:31:39Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:lang]]&quot;: Highly visible template/module ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:script utilities|lang_t}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:05:52.875Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54352 t=1555362352760987
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:52 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1229.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 407402386, 715947549, 697050717
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4099100\" pageid=\"4099100\" ns=\"828\" title=\"Module:script utilities\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T16:56:29Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 52248476 by [[Special:Contributions/Rua|Rua]] ([[User talk:Rua|talk]])\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\tModules used:\n\t[[Module:script utilities/data]]\n\
      \t[[Module:scripts]]\n\t[[Module:languages]]\n\t[[Module:parameters]]\n\t[[Module:utilities]]\n\t[[Module:debug]]\n]=]\n\nfunction export.is_Latin_script(sc)\n\t-- Latn, Latf, Latinx, nv-Latn, pjt-Latn\n\treturn sc:getCode():find(\"Lat\") and true or false\n\
      end\n\n-- Used by [[Template:lang]]\nfunction export.lang_t(frame)\n\tparams = {\n\t\t[1] = {},\n\t\t[2] = { allow_empty = true, default = \"\" },\n\t\t[\"sc\"] = {},\n\t\t[\"face\"] = {},\n\t\t[\"class\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\t\n\tlocal lang = args[1] or (NAMESPACE == \"Template\" and \"und\") or error(\"Language code has not been specified. Please pass parameter 1 to the template.\"\
      )\n\tlang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, 1)\n\t\n\tlocal text = args[2]\n\t\n\tlocal sc = args[\"sc\"]\n\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\
      \" .. sc .. \"\\\" is not valid.\")) or nil)\n\t\n\tlocal face = args[\"face\"]\n\t\n\treturn export.tag_text(text, lang, sc, face, class)\nend\n\n-- Ustring turns on the codepoint-aware string matching. The basic string function\n-- should be used for\
      \ simple sequences of characters, Ustring function for\n-- sets – [].\nlocal function trackPattern(text, pattern, tracking, ustring)\n\tlocal find = ustring and mw.ustring.find or string.find\n\tif pattern and find(text, pattern) then\n\t\trequire(\"Module:debug\"\
      ).track(\"script/\" .. tracking)\n\tend\nend\n\nlocal function track(text, lang, sc)\n\tlocal U = mw.ustring.char\n\t\n\tif lang and text then\n\t\tlocal langCode = lang:getCode()\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/ang/acute]]\n\
      \t\tif langCode == \"ang\" then\n\t\t\tlocal decomposed = mw.ustring.toNFD(text)\n\t\t\tlocal acute = U(0x301)\n\t\t\t\n\t\t\ttrackPattern(decomposed, acute, \"ang/acute\")\n\t\t\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-phi]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-theta]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-kappa]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-rho]]\n\t\t\tϑ, ϰ, ϱ, ϕ should generally\
      \ be replaced with θ, κ, ρ, φ.\n\t\t]=]\n\t\telseif langCode == \"el\" or langCode == \"grc\" then\n\t\t\ttrackPattern(text, \"ϑ\", \"Greek/wrong-theta\")\n\t\t\ttrackPattern(text, \"ϰ\", \"Greek/wrong-kappa\")\n\t\t\ttrackPattern(text, \"ϱ\", \"Greek/wrong-rho\"\
      )\n\t\t\ttrackPattern(text, \"ϕ\", \"Greek/wrong-phi\")\n\t\t\n\t\t\t--[=[\n\t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/spacing-coronis]]\n\t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/spacing-smooth-breathing]]\n\
      \t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/wrong-apostrophe]]\n\t\t\t\tWhen spacing coronis and spacing smooth breathing are used as apostrophes, \n\t\t\t\tthey should be replaced with right single quotation marks (’).\n\t\t\t\
      ]=]\n\t\t\tif langCode == \"grc\" then\n\t\t\t\ttrackPattern(text, U(0x1FBD), \"Ancient Greek/spacing-coronis\")\n\t\t\t\ttrackPattern(text, U(0x1FBF), \"Ancient Greek/spacing-smooth-breathing\")\n\t\t\t\ttrackPattern(text, \"[\" .. U(0x1FBD) .. U(0x1FBF)\
      \ .. \"]\", \"Ancient Greek/wrong-apostrophe\", true)\n\t\t\tend\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/Russian/grave-accent]]\n\t\telseif langCode == \"ru\" then\n\t\t\tlocal decomposed = mw.ustring.toNFD(text)\n\t\t\t\n\t\t\t\
      trackPattern(decomposed, U(0x300), \"Russian/grave-accent\")\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/Tibetan/trailing-punctuation]]\n\t\telseif langCode == \"bo\" then\n\t\t\ttrackPattern(text, \"[་།]$\", \"Tibetan/trailing-punctuation\"\
      , true)\n\t\t\ttrackPattern(text, \"[་།]%]%]$\", \"Tibetan/trailing-punctuation\", true)\n\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/broken-ae]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/broken-am]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/wrong-rue-lue]]\n\
      \t\t]=]\n\t\telseif langCode == \"th\" then\n\t\t\ttrackPattern(text, \"เ\"..\"เ\", \"Thai/broken-ae\")\n\t\t\ttrackPattern(text, \"ํ[่้๊๋]?า\", \"Thai/broken-am\", true)\n\t\t\ttrackPattern(text, \"[ฤฦ]า\", \"Thai/wrong-rue-lue\", true)\n\n\t\t--[=[\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Lao/broken-ae]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Lao/broken-am]]\n\t\t]=]\n\t\telseif langCode == \"lo\" then\n\t\t\ttrackPattern(text, \"ເ\"..\"ເ\", \"Lao/broken-ae\")\n\t\t\ttrackPattern(text,\
      \ \"ໍ[່້໊໋]?າ\", \"Lao/broken-am\", true)\n\t\tend\n\tend\nend\n\n-- Wrap text in the appropriate HTML tags with language and script class.\nfunction export.tag_text(text, lang, sc, face, class, id)\n\tif not sc then\n\t\tsc = require(\"Module:scripts\"\
      ).findBestScript(text, lang)\n\tend\n\t\n\ttrack(text, lang, sc)\n\t\t\n\t-- Replace space characters with newlines in Mongolian-script text, which is written top-to-bottom.\n\tif sc and sc:getDirection() == \"down\" then\n\t\t--[[\tFirst, escape targets\
      \ of wikilinks and HTML tags,\n\t\t\t\twhich should not have their spaces\n\t\t\t\treplaced with line breaks. ]]\n\t\tlocal escaped = {}\n\t\tlocal i = 0\n\t\tlocal escape_format = \"$%d\"\n\t\t\n\t\tlocal function escape(text, pattern, prefix)\n\t\t\t\
      return text:gsub(\n\t\t\t\tpattern,\n\t\t\t\tfunction(item)\n\t\t\t\t\ti = i + 1\n\t\t\t\t\tescaped[i] = item\n\t\t\t\t\treturn (prefix or \"\") .. escape_format:format(i)\n\t\t\t\tend)\n\t\tend\n\t\t\n\t\ttext = escape(text, \"%[%[([^|]+|)\", \"[[\")\n\
      \t\ttext = escape(text, \"&lt;[^&gt;]+&gt;\")\n\t\t\n\t\ttext = text:gsub(\" +\", \"&lt;br&gt;\")\n\t\t\n\t\t-- Unescape whatever was escaped.\n\t\ttext = text:gsub(\n\t\t\t\"$(%d)\",\n\t\t\tfunction(a)\n\t\t\t\ta = tonumber(a)\n\t\t\t\treturn escaped[a]\n\
      \t\t\tend\n\t\t)\n\tend\n\n\tif sc:getCode() == \"Imag\" then\n\t\tface = nil\n\tend\n\n\tlocal function class_attr(classes)\n\t\ttable.insert(classes, 1, sc:getCode())\n\t\tif class and class ~= '' then\n\t\t\ttable.insert(classes, class)\n\t\tend\n\t\
      \treturn 'class=\"' .. table.concat(classes, ' ') .. '\"'\n\tend\n\t\n\tlocal function tag_attr(...)\n\t\tlocal output = {}\n\t\tif id then\n\t\t\ttable.insert(output, 'id=\"' .. require(\"Module:utilities\").make_id(lang, id) .. '\"')\n\t\tend\n\t\t\n\
      \t\ttable.insert(output, class_attr({...}) )\n\t\t\n\t\tif lang then\n\t\t\ttable.insert(output, 'lang=\"' .. lang:getCode() .. '\"')\n\t\tend\n\t\t\n\t\treturn table.concat(output, \" \")\n\tend\n\t\n\tif face == \"hypothetical\" then\n\t-- [[Special:WhatLinksHere/Template:tracking/script-utilities/face/hypothetical]]\n\
      \t\trequire(\"Module:debug\").track(\"script-utilities/face/hypothetical\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").faces[face or \"nil\"]\n\t\n\tlocal post = \"\"\n\tif sc:getDirection() == \"rtl\" and (face == \"translation\"\
      \ or mw.ustring.find(text, \"%p$\")) then\n\t\tpost = \"&amp;lrm;\"\n\tend\n\t\n\t-- Add a script wrapper\n\tif data then\n\t\treturn ( data.prefix or \"\" ) .. '&lt;' .. data.tag .. ' ' .. tag_attr(data.class) .. '&gt;' .. text .. '&lt;/' .. data.tag\
      \ .. '&gt;' .. post\n\telse\n\t\terror('Invalid script face \"' .. face .. '\".')\n\tend\nend\n\nfunction export.tag_translit(translit, lang, kind, attributes, is_manual)\n\tif type(lang) == \"table\" then\n\t\tlang = lang.getCode and lang:getCode()\n\t\
      \t\tor error(\"Third argument to tag_translit should be a language code or language object.\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").translit[kind or \"default\"]\n\t\n\tlocal opening_tag = {}\n\t\n\ttable.insert(opening_tag,\
      \ data.tag)\n\tif lang == \"ja\" then\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. (is_manual and \"manual-tr \" or \"\") .. 'tr\"')\n\telse\n\t\ttable.insert(opening_tag, 'lang=\"' .. lang .. '-Latn\"\
      ')\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. (is_manual and \"manual-tr \" or \"\") .. 'tr Latn\"')\n\tend\n\t\n\tif data.dir then\n\t\ttable.insert(opening_tag, 'dir=\"' .. data.dir .. '\"')\n\tend\n\
      \t\n\ttable.insert(opening_tag, attributes)\n\t\n\treturn \"&lt;\" .. table.concat(opening_tag, \" \") .. \"&gt;\" .. translit .. \"&lt;/\" .. data.tag .. \"&gt;\"\nend\n\nfunction export.tag_transcription(transcription, lang, kind, attributes)\n\tif type(lang)\
      \ == \"table\" then\n\t\tlang = lang.getCode and lang:getCode()\n\t\t\tor error(\"Third argument to tag_translit should be a language code or language object.\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").transcription[kind\
      \ or \"default\"]\n\t\n\tlocal opening_tag = {}\n\t\n\ttable.insert(opening_tag, data.tag)\n\tif lang == \"ja\" then\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. 'ts\"')\n\telse\n\t\ttable.insert(opening_tag,\
      \ 'lang=\"' .. lang .. '-Latn\"')\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. 'ts Latn\"')\n\tend\n\t\n\tif data.dir then\n\t\ttable.insert(opening_tag, 'dir=\"' .. data.dir .. '\"')\n\tend\n\t\n\ttable.insert(opening_tag,\
      \ attributes)\n\t\n\treturn \"&lt;\" .. table.concat(opening_tag, \" \") .. \"&gt;\" .. transcription .. \"&lt;/\" .. data.tag .. \"&gt;\"\t\nend\n\n-- Add a notice to request the native script of a word\nfunction export.request_script(lang, sc)\n\tlocal\
      \ scripts = lang.getScripts and lang:getScripts() or error('The language \"' .. lang:getCode() .. '\" does not have the method getScripts. It may be unwritten.')\n\t\n\t-- By default, request for \"native\" script\n\tlocal cat_script = \"native\"\n\tlocal\
      \ disp_script = \"script\"\n\t\n\t-- If the script was not specified, and the language has only one script, use that.\n\tif not sc and #scripts == 1 then\n\t\tsc = scripts[1]\n\tend\n\t\n\t-- Is the script known?\n\tif sc then\n\t\t-- If the script is\
      \ Latin, return nothing.\n\t\tif export.is_Latin_script(sc) then\n\t\t\treturn \"\"\n\t\tend\n\t\t\n\t\tif sc:getCode() ~= scripts[1]:getCode() then\n\t\t\tdisp_script = sc:getCanonicalName()\n\t\tend\n\t\t\n\t\t-- The category needs to be specific to\
      \ script only if there is chance\n\t\t-- of ambiguity. This occurs when lang=und, or when the language has\n\t\t-- multiple scripts.\n\t\tif lang:getCode() == \"und\" or scripts[2] then\n\t\t\tcat_script = sc:getCanonicalName()\n\t\tend\n\telse\n\t\t--\
      \ The script is not known.\n\t\t-- Does the language have at least one non-Latin script in its list?\n\t\tlocal has_nonlatin = false\n\t\t\n\t\tfor i, val in ipairs(scripts) do\n\t\t\tif not export.is_Latin_script(val) then\n\t\t\t\thas_nonlatin = true\n\
      \t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- If there are non-Latin scripts, return nothing.\n\t\tif not has_nonlatin then\n\t\t\treturn \"\"\n\t\tend\n\tend\n\t\n\tlocal category = \"\"\n\t\n\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\
      \t\tcategory = \"[[Category:\" .. lang:getCanonicalName() .. \" terms needing \" .. cat_script .. \" script]]\"\n\tend\n\t\n\treturn \"&lt;small&gt;[\" .. disp_script .. \" needed]&lt;/small&gt;\" .. category\nend\n\nfunction export.template_rfscript(frame)\n\
      \tlocal args = frame.args\n\tlocal lang = args[1] or error(\"The first parameter (language code) has not been given\")\n\tlocal sc = args[\"sc\"]; if sc == \"\" then sc = nil end\n\tlang = require(\"Module:languages\").getByCode(lang) or error(\"The language\
      \ code \\\"\" .. lang .. \"\\\" is not valid.\")\n\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil)\n\t\n\tlocal ret = export.request_script(lang, sc)\n\t\n\tif ret ==\
      \ \"\" then\n\t\terror(\"This language is written in the Latin alphabet. It does not need a native script.\")\n\telse\n\t\treturn ret\n\tend\nend\n\nfunction export.checkScript(text, scriptCode, result)\n\tlocal scriptObject = require(\"Module:scripts\"\
      ).getByCode(scriptCode)\n\t\n\tif not scriptObject then\n\t\terror('The script code \"' .. scriptCode .. '\" is not recognized.')\n\tend\n\t\n\tlocal originalText = text\n\t\n\t-- Remove non-letter characters.\n\ttext = mw.ustring.gsub(text, \"[%A]\",\
      \ \"\")\n\t\n\t-- Remove all characters of the script in question.\n\ttext = mw.ustring.gsub(text, \"[\" .. scriptObject:getCharacters() .. \"]\", \"\")\n\t\n\tif text ~= \"\" then\n\t\tif type(result) == \"string\" then\n\t\t\terror(result)\n\t\telse\n\
      \t\t\terror('The text \"' .. originalText .. '\" contains the letters \"' .. text .. '\" that do not belong to the ' .. scriptObject:getCategoryName() .. '.', 2)\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:54.106Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52740 t=1555362354001944
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:54 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1315.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 204088962, 813069568, 700156846
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4216643\" pageid=\"4216643\" ns=\"828\" title=\"Module:scripts\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-02-03T10:53:06Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"that was incorrect, but it turns out there aren&#039;t even any scripts whose canonical names contain &quot;script&quot;, so it didn&#039;t cause problems\" xml:space=\"preserve\">local export = {}\nlocal\
      \ Script = {}\n\nfunction Script:getCode()\n\treturn self._code\nend\n\nfunction Script:getCanonicalName()\n\treturn self._rawData.canonicalName\nend\n\nfunction Script:getOtherNames()\n\treturn self._rawData.otherNames or {}\nend\n\nfunction Script:getParent()\n\
      \treturn self._rawData.parent\nend\n\nfunction Script:getSystems()\n\tif not self._systemObjects then\n\t\tlocal m_systems = require(\"Module:writing systems\")\n\t\tself._systemObjects = {}\n\t\t\n\t\tfor _, sys in ipairs(self._rawData.systems or {})\
      \ do\n\t\t\ttable.insert(self._systemObjects, m_systems.getByCode(sys))\n\t\tend\n\tend\n\t\n\treturn self._systemObjects\nend\n\n--function Script:getAllNames()\n--\treturn self._rawData.names\n--end\n\n\nfunction Script:getType()\n\treturn \"script\"\
      \nend\n\n\nfunction Script:getCategoryName()\n\tlocal name = self._rawData.canonicalName\n\t\n\t-- If the name already has \"code\" or \"semaphore\" in it, don't add it.\n\t-- No names contain \"script\".\n\tif name:find(\"[Cc]ode$\") or name:find(\"[Ss]emaphore$\"\
      ) then\n\t\treturn name\n\telse\n\t\treturn name .. \" script\"\n\tend\nend\n\n\nfunction Script:getWikipediaArticle()\n\treturn self._rawData.wikipedia_article or self:getCategoryName()\nend\n\n\nfunction Script:getCharacters()\n\tif self._rawData.characters\
      \ then\n\t\treturn self._rawData.characters\n\telse\n\t\treturn nil\n\tend\nend\n\n\nfunction Script:countCharacters(text)\n\tif not self._rawData.characters then\n\t\treturn 0\n\telse\n\t\tlocal _, num = mw.ustring.gsub(text, \"[\" .. self._rawData.characters\
      \ .. \"]\", \"\")\n\t\treturn num\n\tend\nend\n\nfunction Script:getDirection()\n\tlocal direction = self._rawData.direction\n\tif not direction then\n\t\treturn nil\n\telse\n\t\treturn direction\n\tend\nend\n\n\nfunction Script:getRawData()\n\treturn\
      \ self._rawData\nend\n\n\nfunction Script:toJSON()\n\tlocal ret = {\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\totherNames = self:getOtherNames(),\n\t\ttype = self:getType(),\n\t\
      \t}\n\t\n\treturn require(\"Module:JSON\").toJSON(ret)\nend\n\n\nScript.__index = Script\n\n\nfunction export.makeObject(code, data)\n\treturn data and setmetatable({ _rawData = data, _code = code }, Script) or nil\nend\n\n\nfunction export.getByCode(code)\n\
      \tif code == \"IPAchar\" then\n\t\trequire(\"Module:debug\").track(\"IPAchar\")\n\tend\n\treturn export.makeObject(code, mw.loadData(\"Module:scripts/data\")[code])\nend\n\nfunction export.getByCanonicalName(name)\n\tlocal code = mw.loadData(\"Module:scripts/by\
      \ name\")[name]\n\t\n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, mw.loadData(\"Module:scripts/data\")[code])\nend\n\n-- Find the best script to use, based on the characters of a string.\nfunction export.findBestScript(text,\
      \ lang)\n\tif not text or not lang or not lang.getScripts then\n\t\treturn export.getByCode(\"None\")\n\tend\n\t\n\tlocal scripts = lang:getScripts()\n\t\n\tif not scripts[2] then\n\t\treturn scripts[1]\n\tend\n\t\n\t--[=[\n\t\tRemove any HTML entities;\
      \ catfix function in [[Module:utilities]]\n\t\tadds tagging to a no-break space (&amp;nbsp;), which contains Latin characters;\n\t\thence Latin was returned as the script if \"Latn\" is one of the language's scripts.\n\t]=]\n\ttext = string.gsub(text,\
      \ \"&amp;[a-zA-Z0-9]+;\", \"\")\n\t\n\t-- Try to match every script against the text,\n\t-- and return the one with the most matching characters.\n\tlocal bestcount = 0\n\tlocal bestscript = nil\n\t\n\t-- Get length of text minus any spacing or punctuation\
      \ characters.\n\t-- Counting instances of UTF-8 character pattern is faster than mw.ustring.len.\n\tlocal _, length = string.gsub(mw.ustring.gsub(text, \"[%s%p]+\", \"\"), \"[\\1-\\127\\194-\\244][\\128-\\191]*\", \"\")\n\t\n\tif length == 0 then\n\t\t\
      return export.getByCode(\"None\")\n\tend\n\t\n\tfor i, script in ipairs(scripts) do\n\t\tlocal count = script:countCharacters(text)\n\t\t\n\t\tif count &gt;= length then\n\t\t\treturn script\n\t\tend\n\t\t\n\t\tif count &gt; bestcount then\n\t\t\tbestcount\
      \ = count\n\t\t\tbestscript = script\n\t\tend\n\tend\n\t\n\tif bestscript then\n\t\treturn bestscript\n\tend\n\t\n\t-- No matching script was found. Return \"None\".\n\treturn export.getByCode(\"None\")\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:54.351Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=60906 t=1555362354185156
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:54 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1287.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 915295130, 641772720, 685069811
    body: !!binary |-
      
- recorded: 2019-04-15T21:05:58.614Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aen-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38125 t=1555362358528260
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:58 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1340.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 421208954, 239129524, 702087843
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="286438" pageid="286438" ns="10" title="Template:en-noun"><revisions><rev user="Rua" timestamp="2018-09-28T11:31:43Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Undo revision 50399302 by [[Special:Contributions/Rua|Rua]] ([[User talk:Rua|talk]])" xml:space="preserve">{{#invoke:en-headword|show|nouns}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:05:58.802Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aen-headword&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=35915 t=1555362358695823
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:58 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1339.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 661085569, 486984098, 701564256
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4091555\" pageid=\"4091555\" ns=\"828\" title=\"Module:en-headword\"><revisions><rev user=\"Quesotiotyo\" timestamp=\"2019-02-16T03:02:16Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"fixed matching pattern for Category:English words containing three consecutive instances of the same letter (entries with three consecutive numbers or punctuation marks shouldn&#039;t\
      \ be included)\" xml:space=\"preserve\">local export = {}\nlocal pos_functions = {}\n\nlocal lang = require(\"Module:languages\").getByCode(\"en\")\n\nlocal function glossary_link(entry, text)\n\ttext = text or entry\n\treturn \"[[Appendix:Glossary#\"\
      \ .. entry .. \"|\" .. text .. \"]]\"\nend\n\n-- The main entry point.\n-- This is the only function that can be invoked from a template.\nfunction export.show(frame)\n\tPAGENAME = mw.title.getCurrentTitle().text\n\t\n\tlocal poscat = frame.args[1] or\
      \ error(\"Part of speech has not been specified. Please pass parameter 1 to the module invocation.\")\n\t\n\tlocal params = {\n\t\t[\"head\"] = {list = true, default = \"\"},\n\t\t[\"suff\"] = {type = \"boolean\"},\n\t}\n\t\n\tif pos_functions[poscat]\
      \ then\n\t\tfor key, val in pairs(pos_functions[poscat].params) do\n\t\t\tparams[key] = val\n\t\tend\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\tlocal data = {lang = lang, pos_category = poscat,\
      \ categories = {}, heads = args[\"head\"], inflections = {}}\n\t\n\tif args[\"suff\"] then\n\t\tdata.pos_category = \"suffixes\"\n\t\t\n\t\tif poscat == \"adjectives\" or poscat == \"adverbs\" or poscat == \"nouns\" or poscat == \"verbs\" then\n\t\t\t\
      table.insert(data.categories, (\"%s %s-forming suffixes\")\n\t\t\t\t:format(lang:getCanonicalName(), poscat:gsub(\"s$\", \"\")))\n\t\telse\n\t\t\terror(\"No category exists for suffixes forming \" .. poscat .. \".\")\n\t\tend\n\tend\n\t\n\tif pos_functions[poscat]\
      \ then\n\t\tpos_functions[poscat].func(args, data)\n\tend\n\t\n\tlocal pagename = mw.title.getCurrentTitle().text\n\tif pagename:find(\"[Qq][^Uu]\") or pagename:find(\"[Qq]$\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" words\
      \ containing Q not followed by U\")\n\tend\n\tif pagename:find(\"([A-Za-z])%1%1\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" words containing three consecutive instances of the same letter\")\n\tend\n\tif pagename:find(\"[^c]ie\"\
      ) or pagename:find(\"cei\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" words following the I before E except after C rule\")\n\tend\n\tif pagename:find(\"[^c]ei\") or pagename:find(\"cie\") then\n\t\ttable.insert(data.categories,\
      \ lang:getCanonicalName() .. \" words not following the I before E except after C rule\")\n\tend\n\tif not mw.ustring.toNFD(pagename):lower():find(\"[aeiouy]\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" words without vowels\"\
      )\n\tend\n\tif pagename:find(\"yre$\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. ' words ending in \"-yre\"')\n\tend\n\tif not pagename:find(\" \") and pagename:len() &gt; 25 then\n\t\ttable.insert(data.categories, \"Long \" ..\
      \ lang:getCanonicalName() .. ' words')\n\tend\n\tif pagename:find(\"^[^aeiou ]*a[^aeiou ]*e[^aeiou ]*i[^aeiou ]*o[^aeiou ]*u[^aeiou ]*$\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. ' words that use all vowels in alphabetical order')\n\
      \tend\n\treturn require(\"Module:headword\").full_headword(data)\nend\n\n-- This function does the common work between adjectives and adverbs\nfunction make_comparatives(params, data)\n\tlocal comp_parts = {label = glossary_link(\"comparable\", \"comparative\"\
      ), accel = {form = \"comparative\"}}\n\tlocal sup_parts = {label = glossary_link(\"comparable\", \"superlative\"), accel = {form = \"superlative\"}}\n\t\n\tif #params == 0 then\n\t\ttable.insert(params, {\"more\"})\n\tend\n\t\n\t-- To form the stem, replace\
      \ -(e)y with -i and remove a final -e.\n\tlocal stem = PAGENAME:gsub(\"([^aeiou])e?y$\", \"%1i\"):gsub(\"e$\", \"\")\n\t\n\t-- Go over each parameter given and create a comparative and superlative form\n\tfor i, val in ipairs(params) do\n\t\tlocal comp\
      \ = val[1]\n\t\tlocal sup = val[2]\n\t\t\n\t\tif comp == \"more\" and PAGENAME ~= \"many\" and PAGENAME ~= \"much\" then\n\t\t\ttable.insert(comp_parts, \"[[more]] \" .. PAGENAME)\n\t\t\ttable.insert(sup_parts, \"[[most]] \" .. PAGENAME)\n\t\telseif comp\
      \ == \"further\" and PAGENAME ~= \"far\" then\n\t\t\ttable.insert(comp_parts, \"[[further]] \" .. PAGENAME)\n\t\t\ttable.insert(sup_parts, \"[[furthest]] \" .. PAGENAME)\n\t\telseif comp == \"er\" then\n\t\t\ttable.insert(comp_parts, stem .. \"er\")\n\t\
      \t\ttable.insert(sup_parts, stem .. \"est\")\n\t\telseif comp == \"-\" or sup == \"-\" then\n\t\t\t-- Allowing '-' makes it more flexible to not have some forms\n\t\t\tif comp ~= \"-\" then\n\t\t\t\ttable.insert(comp_parts, comp)\n\t\t\tend\n\t\t\tif sup\
      \ ~= \"-\" then\n\t\t\t\ttable.insert(sup_parts, sup)\n\t\t\tend\n\t\telse\n\t\t\t-- If the full comparative was given, but no superlative, then\n\t\t\t-- create it by replacing the ending -er with -est.\n\t\t\tif not sup then\n\t\t\t\tif comp:find(\"\
      er$\") then\n\t\t\t\t\tsup = comp:gsub(\"er$\", \"est\")\n\t\t\t\telse\n\t\t\t\t\terror(\"The superlative of \\\"\" .. comp .. \"\\\" cannot be generated automatically. Please provide it with the \\\"sup\" .. (i == 1 and \"\" or i) .. \"=\\\" parameter.\"\
      )\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(comp_parts, comp)\n\t\t\ttable.insert(sup_parts, sup)\n\t\tend\n\tend\n\t\n\ttable.insert(data.inflections, comp_parts)\n\ttable.insert(data.inflections, sup_parts)\nend\n\npos_functions[\"adjectives\"\
      ] = {\n\tparams = {\n\t\t[1] = {list = true, allow_holes = true},\n\t\t[\"sup\"] = {list = true, allow_holes = true},\n\t\t},\n\tfunc = function(args, data)\n\t\tlocal shift = 0\n\t\tlocal is_not_comparable = false\n\t\tlocal is_comparative_only = false\n\
      \t\t\n\t\t-- If the first parameter is ?, then don't show anything, just return.\n\t\tif args[1][1] == \"?\" then\n\t\t\treturn\n\t\t-- If the first parameter is -, then move all parameters up one position.\n\t\telseif args[1][1] == \"-\" then\n\t\t\t\
      shift = 1\n\t\t\tis_not_comparable = true\n\t\t-- If the only argument is +, then remember this and clear parameters\n\t\telseif args[1][1] == \"+\" and args[1].maxindex == 1 then\n\t\t\tshift = 1\n\t\t\tis_comparative_only = true\n\t\tend\n\t\t\n\t\t\
      -- Gather all the comparative and superlative parameters.\n\t\tlocal params = {}\n\t\t\n\t\tfor i = 1, args[1].maxindex - shift do\n\t\t\tlocal comp = args[1][i + shift]\n\t\t\tlocal sup = args[\"sup\"][i]\n\t\t\t\n\t\t\tif comp or sup then\n\t\t\t\ttable.insert(params,\
      \ {comp, sup})\n\t\t\tend\n\t\tend\n\t\t\n\t\tif shift == 1 then\n\t\t\t-- If the first parameter is \"-\" but there are no parameters,\n\t\t\t-- then show \"not comparable\" only and return.\n\t\t\t-- If there are parameters, then show \"not generally\
      \ comparable\"\n\t\t\t-- before the forms.\n\t\t\tif #params == 0 then\n\t\t\t\tif is_not_comparable then\n\t\t\t\t\ttable.insert(data.inflections, {label = \"not \" .. glossary_link(\"comparable\")})\n\t\t\t\t\ttable.insert(data.categories, lang:getCanonicalName()\
      \ .. \" uncomparable adjectives\")\n\t\t\t\t\treturn\n\t\t\t\tend\n\t\t\t\tif is_comparative_only then\n\t\t\t\t\ttable.insert(data.inflections, {label = glossary_link(\"comparable\", \"comparative\") .. \" form only\"})\n\t\t\t\t\ttable.insert(data.categories,\
      \ lang:getCanonicalName() .. \" comparative-only adjectives\")\n\t\t\t\t\treturn\n\t\t\t\tend\n\t\t\telse\n\t\t\t\ttable.insert(data.inflections, {label = \"not generally \" .. glossary_link(\"comparable\")})\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Process the\
      \ parameters\n\t\tmake_comparatives(params, data)\n\tend\n}\n\npos_functions[\"adverbs\"] = {\n\tparams = {\n\t\t[1] = {list = true, allow_holes = true},\n\t\t[\"sup\"] = {list = true, allow_holes = true},\n\t\t},\n\tfunc = function(args, data)\n\t\tlocal\
      \ shift = 0\n\t\t\n\t\t-- If the first parameter is ?, then don't show anything, just return.\n\t\tif args[1][1] == \"?\" then\n\t\t\treturn\n\t\t-- If the first parameter is -, then move all parameters up one position.\n\t\telseif args[1][1] == \"-\"\
      \ then\n\t\t\tshift = 1\n\t\tend\n\t\t\n\t\t-- Gather all the comparative and superlative parameters.\n\t\tlocal params = {}\n\t\t\n\t\tfor i = 1, args[1].maxindex - shift do\n\t\t\tlocal comp = args[1][i + shift]\n\t\t\tlocal sup = args[\"sup\"][i]\n\t\
      \t\t\n\t\t\tif comp or sup then\n\t\t\t\ttable.insert(params, {comp, sup})\n\t\t\tend\n\t\tend\n\t\t\n\t\tif shift == 1 then\n\t\t\t-- If the first parameter is \"-\" but there are no parameters,\n\t\t\t-- then show \"not comparable\" only and return.\
      \ If there are parameters,\n\t\t\t-- then show \"not generally comparable\" before the forms.\n\t\t\tif #params == 0 then\n\t\t\t\ttable.insert(data.inflections, {label = \"not \" .. glossary_link(\"comparable\")})\n\t\t\t\ttable.insert(data.categories,\
      \ lang:getCanonicalName() .. \" uncomparable adverbs\")\n\t\t\t\treturn\n\t\t\telse\n\t\t\t\ttable.insert(data.inflections, {label = \"not generally \" .. glossary_link(\"comparable\")})\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Process the parameters\n\t\tmake_comparatives(params,\
      \ data)\n\tend\n}\n\npos_functions[\"nouns\"] = {\n\tparams = {\n\t\t[1] = {list = true, allow_holes = true},\n\t\t\n\t\t-- TODO: This should really be a list parameter too...\n\t\t[\"plqual\"] = {},\n\t\t[\"pl2qual\"] = {},\n\t\t[\"pl3qual\"] = {},\n\t\
      \t[\"pl4qual\"] = {},\n\t\t[\"pl5qual\"] = {},\n\t\t},\n\tfunc = function(args, data)\n\t\t-- Gather all the plural parameters from the numbered parameters.\n\t\tlocal plurals = {}\n\t\t\n\t\tfor i = 1, args[1].maxindex do\n\t\t\tlocal pl = args[1][i]\n\
      \t\t\t\n\t\t\tif pl then\n\t\t\t\tlocal qual = args[\"pl\" .. (i == 1 and \"\" or i) .. \"qual\"]\n\t\t\t\t\n\t\t\t\tif qual then\n\t\t\t\t\ttable.insert(plurals, {term = pl, qualifiers = {qual}})\n\t\t\t\telse\n\t\t\t\t\ttable.insert(plurals, pl)\n\t\t\
      \t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Decide what to do next...\n\t\tlocal mode = nil\n\t\t\n\t\tif plurals[1] == \"?\" or plurals[1] == \"!\" or plurals[1] == \"-\" or plurals[1] == \"~\" then\n\t\t\tmode = plurals[1]\n\t\t\ttable.remove(plurals,\
      \ 1)  -- Remove the mode parameter\n\t\tend\n\t\t\n\t\t-- Plural is unknown\n\t\tif mode == \"?\" then\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" nouns with unknown or uncertain plurals\")\n\t\t\treturn\n\t\t-- Plural is not attested\n\
      \t\telseif mode == \"!\" then\n\t\t\ttable.insert(data.inflections, {label = \"plural not attested\"})\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" nouns with unattested plurals\")\n\t\t\treturn\n\t\t-- Uncountable noun; may occasionally\
      \ have a plural\n\t\telseif mode == \"-\" then\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" uncountable nouns\")\n\t\t\t\n\t\t\t-- If plural forms were given explicitly, then show \"usually\"\n\t\t\tif #plurals &gt; 0 then\n\t\t\t\
      \ttable.insert(data.inflections, {label = \"usually \" .. glossary_link(\"uncountable\")})\n\t\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable nouns\")\n\t\t\telse\n\t\t\t\ttable.insert(data.inflections, {label = glossary_link(\"\
      uncountable\")})\n\t\t\tend\n\t\t-- Mixed countable/uncountable noun, always has a plural\n\t\telseif mode == \"~\" then\n\t\t\ttable.insert(data.inflections, {label = glossary_link(\"countable\") .. \" and \" .. glossary_link(\"uncountable\")})\n\t\t\t\
      table.insert(data.categories, lang:getCanonicalName() .. \" uncountable nouns\")\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable nouns\")\n\t\t\t\n\t\t\t-- If no plural was given, add a default one now\n\t\t\tif #plurals ==\
      \ 0 then\n\t\t\t\tplurals = {\"s\"}\n\t\t\tend\n\t\t-- The default, always has a plural\n\t\telse\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable nouns\")\n\t\t\t\n\t\t\t-- If no plural was given, add a default one now\n\t\t\
      \tif #plurals == 0 then\n\t\t\t\tplurals = {\"s\"}\n\t\t\tend\n\t\t\tif plural and not mw.title.new(plural).exists then\n\t\t\t\ttable.insert(categories, \"English nouns with missing plurals\")\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- If there are no plurals\
      \ to show, return now\n\t\tif #plurals == 0 then\n\t\t\treturn\n\t\tend\n\t\t\n\t\t-- There are plural forms to show, so show them\n\t\tlocal pl_parts = {label = \"plural\", accel = {form = \"p\"}}\n\t\t\n\t\tlocal function check_ies(pl, stem)\n\t\t\t\
      local newplural, nummatches = stem:gsub(\"([^aeiou])y$\",\"%1ies\")\n\t\t\treturn nummatches &gt; 0 and pl == newplural\n\t\tend\n\t\tlocal stem = PAGENAME\n\t\tlocal irregular = false\n\t\tfor i, pl in ipairs(plurals) do\n\t\t\tif pl == \"s\" then\n\t\
      \t\t\ttable.insert(pl_parts, stem .. \"s\")\n\t\t\telseif pl == \"es\" then\n\t\t\t\ttable.insert(pl_parts, stem .. \"es\")\n\t\t\telse\n\t\t\t\ttable.insert(pl_parts, pl)\n\t\t\t\tif type(pl) == \"table\" then\n\t\t\t\t\tpl = pl.term\n\t\t\t\tend\n\t\t\
      \t\tif not stem:find(\" \") and not (pl == stem .. \"s\" or pl == stem .. \"es\" or check_ies(pl, stem)) then\n\t\t\t\t\tirregular = true\n\t\t\t\t\tif pl == stem then\n\t\t\t\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" invariant nouns\"\
      )\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\tif irregular then\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" nouns with irregular plurals\")\n\t\tend\n\t\t\n\t\ttable.insert(data.inflections, pl_parts)\n\tend\n}\n\npos_functions[\"\
      proper nouns\"] = {\n\tparams = {\n\t\t[1] = {list = true},\n\t\t},\n\tfunc = function(args, data)\n\t\tlocal plurals = args[1]\n\t\t\n\t\t-- Decide what to do next...\n\t\tlocal mode = nil\n\t\t\n\t\tif plurals[1] == \"?\" or plurals[1] == \"!\" or plurals[1]\
      \ == \"-\" or plurals[1] == \"~\" then\n\t\t\tmode = plurals[1]\n\t\t\ttable.remove(plurals, 1)  -- Remove the mode parameter\n\t\tend\n\t\t\n\t\t-- Plural is unknown\n\t\tif mode == \"?\" then\n\t\t\ttable.insert(data.categories, lang:getCanonicalName()\
      \ .. \" proper nouns with unknown or uncertain plurals\")\n\t\t\treturn\n\t\t-- Plural is not attested\n\t\telseif mode == \"!\" then\n\t\t\ttable.insert(data.inflections, {label = \"plural not attested\"})\n\t\t\ttable.insert(data.categories, lang:getCanonicalName()\
      \ .. \" proper nouns with unattested plurals\")\n\t\t\treturn\n\t\t-- Uncountable noun; may occasionally have a plural\n\t\telseif mode == \"-\" then\n\t\t\t-- If plural forms were given explicitly, then show \"usually\"\n\t\t\tif #plurals &gt; 0 then\n\
      \t\t\t\ttable.insert(data.inflections, {label = \"usually \" .. glossary_link(\"uncountable\")})\n\t\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable proper nouns\")\n\t\t\telse\n\t\t\t\ttable.insert(data.inflections, {label =\
      \ glossary_link(\"uncountable\")})\n\t\t\tend\n\t\t-- Mixed countable/uncountable noun, always has a plural\n\t\telseif mode == \"~\" then\n\t\t\ttable.insert(data.inflections, {label = glossary_link(\"countable\") .. \" and \" .. glossary_link(\"uncountable\"\
      )})\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable proper nouns\")\n\t\t\t\n\t\t\t-- If no plural was given, add a default one now\n\t\t\tif #plurals == 0 then\n\t\t\t\tplurals = {\"s\"}\n\t\t\tend\n\t\telseif #plurals &gt;\
      \ 0 then\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable proper nouns\")\n\t\tend\n\t\t\n\t\t-- If there are no plurals to show, return now\n\t\tif #plurals == 0 then\n\t\t\treturn\n\t\tend\n\t\t\n\t\t-- There are plural forms\
      \ to show, so show them\n\t\tlocal pl_parts = {label = \"plural\", accel = {form = \"p\"}}\n\t\t\n\t\tlocal stem = PAGENAME\n\t\t\n\t\tfor i, pl in ipairs(plurals) do\n\t\t\tif pl == \"s\" then\n\t\t\t\ttable.insert(pl_parts, stem .. \"s\")\n\t\t\telseif\
      \ pl == \"es\" then\n\t\t\t\ttable.insert(pl_parts, stem .. \"es\")\n\t\t\telse\n\t\t\t\ttable.insert(pl_parts, pl)\n\t\t\tend\n\t\n\t\tend\n\t\t\n\t\ttable.insert(data.inflections, pl_parts)\n\tend\n}\n\npos_functions[\"verbs\"] = {\n\tparams = {\n\t\t\
      [1] = {list = \"pres_3sg\", allow_holes = true},\n\t\t\n\t\t[\"pres_3sg_qual\"] = {},\n\t\t[\"pres_3sg2_qual\"] = {},\n\t\t[\"pres_3sg3_qual\"] = {},\n\t\t[\"pres_3sg4_qual\"] = {},\n\t\t[\"pres_3sg5_qual\"] = {},\n\t\t\n\t\t[2] = {list = \"pres_ptc\"\
      , allow_holes = true},\n\t\t\n\t\t[\"pres_ptc_qual\"] = {},\n\t\t[\"pres_ptc2_qual\"] = {},\n\t\t[\"pres_ptc3_qual\"] = {},\n\t\t[\"pres_ptc4_qual\"] = {},\n\t\t[\"pres_ptc5_qual\"] = {},\n\t\t\n\t\t[3] = {list = \"past\", allow_holes = true},\n\t\t\n\t\
      \t[\"past_qual\"] = {},\n\t\t[\"past2_qual\"] = {},\n\t\t[\"past3_qual\"] = {},\n\t\t[\"past4_qual\"] = {},\n\t\t[\"past5_qual\"] = {},\n\t\t\n\t\t[4] = {list = \"past_ptc\", allow_holes = true},\n\t\t\n\t\t[\"past_ptc_qual\"] = {},\n\t\t[\"past_ptc2_qual\"\
      ] = {},\n\t\t[\"past_ptc3_qual\"] = {},\n\t\t[\"past_ptc4_qual\"] = {},\n\t\t[\"past_ptc5_qual\"] = {},\n\t\t},\n\tfunc = function(args, data)\n\t\t-- Get parameters\n\t\tlocal par1 = args[1][1]\n\t\tlocal par2 = args[2][1]\n\t\tlocal par3 = args[3][1]\n\
      \t\tlocal par4 = args[4][1]\n\t\t\n\t\tlocal pres_3sg_forms = {label = \"third-person singular simple present\", accel = {form = \"3|s|pres\"}}\n\t\tlocal pres_ptc_forms = {label = \"present participle\", accel = {form = \"pres|ptcp\"}}\n\t\tlocal past_forms\
      \ = {label = \"simple past\", accel = {form = \"past\"}}\n\t\tlocal pres_3sg_form = par1 or PAGENAME .. \"s\"\n\t\tlocal pres_ptc_form = par2 or PAGENAME .. \"ing\"\n\t\tlocal past_form = par3 or PAGENAME .. \"ed\"\n\t\t\n\t\tif par1 and not par2 and not\
      \ par3 then\n\t\t\t-- This is the \"new\" format, which uses only the first parameter.\n\t\t\tif par1 == \"es\" then\n\t\t\t\tpres_3sg_form = PAGENAME .. \"es\"\n\t\t\t\tpres_ptc_form = PAGENAME .. \"ing\"\n\t\t\t\tpast_form = PAGENAME .. \"ed\"\n\t\t\t\
      elseif par1 == \"ies\" then\n\t\t\t\tif not mw.ustring.find(PAGENAME, \"y$\") then\n\t\t\t\t\terror(\"The first parameter is \\\"ies\\\" but the verb does not end in -y.\")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tlocal stem = mw.ustring.gsub(PAGENAME, \"y$\",\
      \ \"\")\n\t\t\t\tpres_3sg_form = stem .. \"ies\"\n\t\t\t\tpres_ptc_form = stem .. \"ying\"\n\t\t\t\tpast_form = stem .. \"ied\"\n\t\t\telseif par1 == \"d\" then\n\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\tpres_ptc_form = PAGENAME .. \"ing\"\n\t\
      \t\t\tpast_form = PAGENAME .. \"d\"\n\t\t\telse\n\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\tpres_ptc_form = par1 .. \"ing\"\n\t\t\t\tpast_form = par1 .. \"ed\"\n\t\t\tend\n\t\telse\n\t\t\t-- This is the \"legacy\" format, using the second and third\
      \ parameters as well.\n\t\t\t-- It is included here for backwards compatibility and to ease the transition.\n\t\t\tif par3 then\n\t\t\t\tif par3 == \"es\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/es3\")\n\t\t\t\t\tpres_3sg_form = par1\
      \ .. par2 .. \"es\"\n\t\t\t\t\tpres_ptc_form = par1 .. par2 .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. par2 .. \"ed\"\n\t\t\t\telseif par3 == \"ing\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ing3\")\n\t\t\t\t\tpres_3sg_form = PAGENAME\
      \ .. \"s\"\n\t\t\t\t\tpres_ptc_form = par1 .. par2 .. \"ing\"\n\t\t\t\t\t\n\t\t\t\t\tif par2 == \"y\" then\n\t\t\t\t\t\tpast_form = PAGENAME .. \"d\"\n\t\t\t\t\telse\n\t\t\t\t\t\tpast_form = par1 .. par2 .. \"ed\"\n\t\t\t\t\tend\n\t\t\t\telseif par3 ==\
      \ \"ed\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ed3\")\n\t\t\t\t\t\n\t\t\t\t\tif par2 == \"i\" then\n\t\t\t\t\t\tpres_3sg_form = par1 .. par2 .. \"es\"\n\t\t\t\t\t\tpres_ptc_form = PAGENAME .. \"ing\"\n\t\t\t\t\telse\n\t\t\t\t\t\t\
      pres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\t\t\tpres_ptc_form = par1 .. par2 .. \"ing\"\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tpast_form = par1 .. par2 .. \"ed\"\n\t\t\t\telseif par3 == \"d\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/d3\"\
      )\n\t\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\t\tpres_ptc_form = par1 .. par2 .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. par2 .. \"d\"\n\t\t\t\telse\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/xxx3\")\n\t\t\t\tend\n\t\t\telse\n\t\t\
      \t\tif par2 == \"es\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/es2\")\n\t\t\t\t\tpres_3sg_form = par1 .. \"es\"\n\t\t\t\t\tpres_ptc_form = par1 .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. \"ed\"\n\t\t\t\telseif par2 == \"ies\" then\n\
      \t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ies2\")\n\t\t\t\t\t\n\t\t\t\t\tif par1 .. \"y\" ~= PAGENAME then\n\t\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ies2/par1 not pagename\")\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tpres_3sg_form\
      \ = par1 .. \"ies\"\n\t\t\t\t\tpres_ptc_form = par1 .. \"ying\"\n\t\t\t\t\tpast_form = par1 .. \"ied\"\n\t\t\t\telseif par2 == \"ing\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ing2\")\n\t\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\
      \t\t\t\tpres_ptc_form = par1 .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. \"ed\"\n\t\t\t\telseif par2 == \"ed\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ed2\")\n\t\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\t\tpres_ptc_form = par1\
      \ .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. \"ed\"\n\t\t\t\telseif par2 == \"d\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/d2\")\n\t\t\t\t\t\n\t\t\t\t\tif par1 ~= PAGENAME then\n\t\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/d2/par1\
      \ not pagename\")\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\t\tpres_ptc_form = par1 .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. \"d\"\n\t\t\t\telse\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/xxx2\")\n\t\
      \t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal pres_3sg_qual = args[\"pres_3sg_qual\"]\n\t\tlocal pres_ptc_qual = args[\"pres_ptc_qual\"]\n\t\tlocal past_qual = args[\"past_qual\"]\n\t\t\n\t\ttable.insert(pres_ptc_forms, {term = pres_ptc_form, qualifiers\
      \ = {pres_ptc_qual}})\n\t\ttable.insert(pres_3sg_forms, {term = pres_3sg_form, qualifiers = {pres_3sg_qual}})\n\t\ttable.insert(past_forms, {term = past_form, qualifiers = {past_qual}})\n\t\t\n\t\t-- Present 3rd singular\n\t\tfor i = 2, args[1].maxindex\
      \ do\n\t\t\tlocal form = args[1][i]\n\t\t\tlocal qual = args[\"pres_3sg\" .. i .. \"_qual\"]\n\t\t\t\n\t\t\tif form then\n\t\t\t\ttable.insert(pres_3sg_forms, {term = form, qualifiers = {qual}})\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Present participle\n\t\t\
      for i = 2, args[2].maxindex do\n\t\t\tlocal form = args[2][i]\n\t\t\tlocal qual = args[\"pres_ptc\" .. i .. \"_qual\"]\n\t\t\t\n\t\t\tif form then\n\t\t\t\ttable.insert(pres_ptc_forms, {term = form, qualifiers = {qual}})\n\t\t\tend\n\t\tend\n\t\t\n\t\t\
      -- Past\n\t\tfor i = 2, args[3].maxindex do\n\t\t\tlocal form = args[3][i]\n\t\t\tlocal qual = args[\"past\" .. i .. \"_qual\"]\n\t\t\t\n\t\t\tif form then\n\t\t\t\ttable.insert(past_forms, {term = form, qualifiers = {qual}})\n\t\t\tend\n\t\tend\n\t\t\n\
      \t\t-- Past participle\n\t\tlocal found_past_ptc = false\n\t\tlocal past_ptc_forms = {label = \"past participle\", accel = {form = \"past|ptcp\"}}\n\t\tlocal qual = args[\"past_ptc_qual\"]; if qual == \"\" then qual = nil end\n\t\ttable.insert(past_ptc_forms,\
      \ {term = par4 or past_form, qualifiers = {qual}})\n\t\tif par4 or qual then\n\t\t\tfound_past_ptc = true\n\t\tend\n\t\tfor i = 2, args[4].maxindex do\n\t\t\tlocal form = args[4][i]\n\t\t\tlocal qual = args[\"past_ptc\" .. i .. \"_qual\"]\n\t\t\tif form\
      \ then\n\t\t\t\ttable.insert(past_ptc_forms, {term = form, qualifiers = {qual}})\n\t\t\t\tfound_past_ptc = true\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Are the past forms identical to the past participle forms?\n\t\tlocal identical = true\n\t\t\n\t\tif #past_forms\
      \ ~= #past_ptc_forms then\n\t\t\tidentical = false\n\t\telse\n\t\t\tfor key, val in ipairs(past_forms) do\n\t\t\t\tif past_ptc_forms[key].term ~= val.term or past_ptc_forms[key].qual ~= val.qual then\n\t\t\t\t\tidentical = false\n\t\t\t\t\tbreak\n\t\t\t\
      \tend\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Insert the forms\n\t\ttable.insert(data.inflections, pres_3sg_forms)\n\t\ttable.insert(data.inflections, pres_ptc_forms)\n\t\t\n\t\tif not found_past_ptc or identical then\n\t\t\tpast_forms.label = \"simple past\
      \ and past participle\"\n\t\t\tpast_forms.accel = {form = \"past|and|past|ptcp\"}\n\t\t\ttable.insert(data.inflections, past_forms)\n\t\telse\n\t\t\ttable.insert(data.inflections, past_forms)\n\t\t\ttable.insert(data.inflections, past_ptc_forms)\n\t\t\
      end\n\tend\n}\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:59.010Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45383 t=1555362358892551
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:58 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 504434349, 483019429, 694266267
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3989053\" pageid=\"3989053\" ns=\"828\" title=\"Module:headword\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-04T11:34:46Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal m_data = mw.loadData(\"Module:headword/data\")\n\nlocal title = mw.title.getCurrentTitle()\n\nlocal isLemma = m_data.lemmas\nlocal isNonLemma = m_data.nonlemmas\n\
      local notranslit = m_data.notranslit\nlocal toBeTagged = m_data.toBeTagged\n\nlocal parameters = {\n\tlang = { type = \"object\" },\n\tscript = { type = \"object\" },\n\theads = { type = \"table\" },\n\ttranslits = { type = \"table\" },\n\ttranscriptions\
      \ = { type = \"table\" },\n\tinflections = { type = \"table\" },\n\tgenders = { type = \"table\" },\n\tcategories = { type = \"table\" },\n\tpos_category = { type = \"string\" },\n\tsort_key = { type = \"string\" },\n\tid = { type = \"string\" },\n}\n\n\
      local function test_script(text, script_code)\n\tif type(text) == \"string\" and type(script_code) == \"string\" then\n\t\tlocal sc = require(\"Module:scripts\").getByCode(script_code)\n\t\tlocal characters\n\t\tif sc then\n\t\t\tcharacters = sc:getCharacters()\n\
      \t\tend\n\t\t\n\t\tlocal out\n\t\tif characters then\n\t\t\ttext = mw.ustring.gsub(text, \"%W\", \"\")\n\t\t\tout = mw.ustring.find(text, \"[\" .. characters .. \"]\")\n\t\tend\n\t\t\n\t\tif out then\n\t\t\treturn true\n\t\telse\n\t\t\treturn false\n\t\
      \tend\n\telse\n\t\tmw.log(\"Parameters to test_script were incorrect.\")\n\t\treturn nil\n\tend\nend\n\n\nlocal function preprocess(data)\n\t--[=[\n\t[[Special:WhatLinksHere/Template:tracking/headword/heads-not-table]]\n\t[[Special:WhatLinksHere/Template:tracking/headword/translits-not-table]]\n\
      \t]=]\n\tif type(data.heads) ~= \"table\" then\n\t\tif data.heads then\n\t\t\trequire(\"Module:debug\").track(\"headword/heads-not-table\")\n\t\tend\n\t\t\n\t\tdata.heads = { data.heads }\n\tend\n\t\n\tif type(data.translits) ~= \"table\" then\n\t\tif\
      \ data.translits then\n\t\t\trequire(\"Module:debug\").track(\"headword/translits-not-table\")\n\t\tend\n\t\t\n\t\tdata.translits = { data.translits }\n\tend\n\t\n\tif type(data.transcriptions) ~= \"table\" then\n\t\tif data.transcriptions then\n\t\t\t\
      require(\"Module:debug\").track(\"headword/transcriptions-not-table\")\n\t\tend\n\t\t\n\t\tdata.transcriptions = { data.transcriptions }\n\tend\n\t\n\tif not data.heads or #data.heads == 0 then\n\t\tdata.heads = {\"\"}\n\tend\n\t\n\t-- Determine if term\
      \ is reconstructed\n\tlocal is_reconstructed = data.lang:getType() == \"reconstructed\"\n\t\tor title.nsText == \"Reconstruction\"\n\t\n\t-- Create a default headword.\n\tlocal subpagename = title.subpageText\n\tlocal pagename = title.text\n\tlocal default_head\n\
      \tif is_reconstructed then\n\t\tdefault_head = require(\"Module:utilities\").plain_gsub(pagename, data.lang:getCanonicalName() .. \"/\", \"\")\n\telse\n\t\tdefault_head = subpagename\n\tend\n\t\n\t-- Add links to multi-word page names when appropriate\n\
      \tif data.lang:getCode() ~= \"zh\" then\n\t\tlocal spacingPunctuation = \"([%s%p]+)\"\n\t\t--[[ \tVariable containing anything that is\n\t\t\t\tnot a punctuation character found inside of words.\n\t\t\t\tUsed to exclude characters from the above regex.\t\
      ]]\n\t\tlocal notWordPunc = \"([^-־׳״'.·*’]+)\"\n\t\tlocal contains_words = false\n\t\t\n\t\tfor possibleWordBreak in mw.ustring.gmatch(default_head, spacingPunctuation) do\n\t\t\tif mw.ustring.find(possibleWordBreak, notWordPunc) then\n\t\t\t\tcontains_words\
      \ = true\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\n\t\tif (not is_reconstructed) and contains_words then\n\t\t\tlocal function workaround_to_exclude_chars(s)\n\t\t\t\treturn mw.ustring.gsub(s, notWordPunc, \"]]%1[[\")\n\t\t\tend\n\t\t\t\n\t\t\tdefault_head\
      \ = \"[[\"\n\t\t\t\t.. mw.ustring.gsub(\n\t\t\t\t\tdefault_head,\n\t\t\t\t\tspacingPunctuation,\n\t\t\t\t\tworkaround_to_exclude_chars\n\t\t\t\t\t)\n\t\t\t\t.. \"]]\"\n\t\t\t--[=[\n\t\t\tuse this when workaround is no longer needed:\n\t\t\tdefault_head\
      \ = \"[[\"\n\t\t\t\t.. mw.ustring.gsub(default_head, WORDBREAKCHARS, \"]]%1[[\")\n\t\t\t\t.. \"]]\"\n\t\t\t\n\t\t\tRemove any empty links, which could have been created above\n\t\t\tat the beginning or end of the string.\n\t\t\t]=]\n\t\t\tdefault_head\
      \ = mw.ustring.gsub(default_head, \"%[%[%]%]\", \"\")\n\t\tend\n\tend\n\t\n\tif is_reconstructed then\n\t\tdefault_head = \"*\" .. default_head\n\tend\n\t\n\t-- If a head is the empty string \"\", then replace it with the default\n\tfor i, head in ipairs(data.heads)\
      \ do\n\t\tif head == \"\" then\n\t\t\thead = default_head\n\t\telse\n\t\t\tif head == default_head and data.lang:getCanonicalName() == \"English\" then\n\t\t\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" terms with redundant head\
      \ parameter\")\n\t\t\tend\t\t\t\n\t\tend\n\t\tdata.heads[i] = head\n\tend\n\t\n\t--[[\tTry to detect the script if it was not provided\n\t\t\tWe use the first headword for this, and assume\n\t\t\tthat all of them have the same script\n\t\t\tThis *should*\
      \ always be true, right?\t\t]]\n\tif not data.sc then\n\t\tdata.sc = require(\"Module:scripts\").findBestScript(data.heads[1], data.lang)\n\tend\n\t\n\tfor i, val in pairs(data.translits) do\n\t\tdata.translits[i] = {display = val, is_manual = true}\n\t\
      end\n\t\n\t-- Make transliterations\n\tfor i, head in ipairs(data.heads) do\n\t\tlocal translit = data.translits[i]\n\t\t\n\t\t-- Try to generate a transliteration if necessary\n\t\t-- Generate it if the script is not Latn or similar, and if no transliteration\
      \ was provided\n\t\tif translit and translit.display == \"-\" then\n\t\t\ttranslit = nil\n\t\telseif not translit and not (data.sc:getCode():find(\"Latn\", nil, true) or data.sc:getCode() == \"Latinx\" or data.sc:getCode() == \"None\") and (not data.sc\
      \ or data.sc:getCode() ~= \"Imag\") then\n\t\t\ttranslit = data.lang:transliterate(require(\"Module:links\").remove_links(head), data.sc)\n\t\t\t\n\t\t\t-- There is still no transliteration?\n\t\t\t-- Add the entry to a cleanup category.\n\t\t\tif not\
      \ translit and not notranslit[data.lang:getCode()] then\n\t\t\t\ttranslit = \"&lt;small&gt;transliteration needed&lt;/small&gt;\"\n\t\t\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" terms needing transliteration\")\n\t\t\tend\n\t\t\
      \t\n\t\t\tif translit then\n\t\t\t\ttranslit = {display = translit, is_manual = false}\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Link to the transliteration entry for languages that require this\n\t\tif translit and data.lang:link_tr() then\n\t\t\ttranslit.display\
      \ = require(\"Module:links\").full_link{\n\t\t\t\tterm = translit.display,\n\t\t\t\tlang = data.lang,\n\t\t\t\tsc = require(\"Module:scripts\").getByCode(\"Latn\"),\n\t\t\t\ttr = \"-\"\n\t\t\t\t}\n\t\tend\n\t\t\n\t\tdata.translits[i] = translit\n\tend\n\
      \t\n\tif data.id and type(data.id) ~= \"string\" then\n\t\terror(\"The id in the data table should be a string.\")\n\tend\nend\n\n\n-- Format a headword with transliterations\nlocal function format_headword(data)\n\tlocal m_links = require(\"Module:links\"\
      )\n\tlocal m_scriptutils = require(\"Module:script utilities\")\n\t\n\t-- Are there non-empty transliterations?\n\t-- Need to do it this way because translit[1] might be nil while translit[2] is not\n\tlocal has_translits = false\n\t\n\t-- Format the headwords\n\
      \tfor i, head in ipairs(data.heads) do\n\t\tif data.translits[i] or data.transcriptions[i] then\n\t\t\thas_translits = true\n\t\tend\n\t\t\n\t\t-- Apply processing to the headword, for formatting links and such\n\t\tif head:find(\"[[\", nil, true) and\
      \ (not data.sc or data.sc:getCode() ~= \"Imag\") then\n\t\t\thead = m_links.language_link({term = head, lang = data.lang}, false)\n\t\tend\n\t\t\n\t\t-- Add language and script wrapper\n\t\tif i == 1 then\n\t\t\thead = m_scriptutils.tag_text(head, data.lang,\
      \ data.sc, \"head\", nil, data.id)\n\t\telse\n\t\t\thead = m_scriptutils.tag_text(head, data.lang, data.sc, \"head\", nil)\n\t\tend\n\t\t\n\t\tdata.heads[i] = head\n\tend\n\t\n\tlocal translits_formatted = \"\"\n\t\n\tif has_translits then\n\t\t-- Format\
      \ the transliterations\n\t\tlocal translits = data.translits\n\t\tlocal transcriptions = data.transcriptions\n\t\t\n\t\tif translits then\n\t\t\t-- using pairs() instead of ipairs() in case there is a gap\n\t\t\tfor i, _ in pairs(translits) do\n\t\t\t\t\
      if type(i) == \"number\" then\n\t\t\t\t\ttranslits[i] = m_scriptutils.tag_translit(translits[i].display, data.lang:getCode(), \"head\", nil, translits[i].is_manual)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\tif transcriptions then\n\t\t\tfor i, _ in pairs(transcriptions)\
      \ do\n\t\t\t\tif type(i) == \"number\" then\n\t\t\t\t\ttranscriptions[i] = m_scriptutils.tag_transcription(transcriptions[i], data.lang:getCode(), \"head\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\tfor i = 1, math.max(#translits, #transcriptions) do\n\t\
      \t\tlocal translits_formatted = {}\n\t\t\ttable.insert(translits_formatted, translits[i] and translits[i] or \"\")\n\t\t\ttable.insert(translits_formatted, (translits[i] and transcriptions[i]) and \" \" or \"\")\n\t\t\ttable.insert(translits_formatted,\
      \ transcriptions[i] and \"/\" .. transcriptions[i] .. \"/\" or \"\")\n\t\t\tdata.translits[i] = table.concat(translits_formatted)\n\t\tend\n\t\t\n\t\ttranslits_formatted = \" (\" .. table.concat(data.translits, \" &lt;i&gt;or&lt;/i&gt; \") .. \")\"\n\t\
      \t\n\t\tlocal transliteration_page = mw.title.new(data.lang:getCanonicalName() .. \" transliteration\", \"Wiktionary\")\n\t\t\n\t\tif transliteration_page then\n\t\t\tlocal success, exists = pcall(function () return transliteration_page.exists end)\n\t\
      \t\tif success and exists then\n\t\t\t\ttranslits_formatted = \" [[Wiktionary:\" .. data.lang:getCanonicalName() .. \" transliteration|•]]\" .. translits_formatted\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn table.concat(data.heads, \" &lt;i&gt;or&lt;/i&gt;\
      \ \") .. translits_formatted\nend\n\n\nlocal function format_genders(data)\n\tif data.genders and #data.genders &gt; 0 then\n\t\tlocal gen = require(\"Module:gender and number\")\n\t\treturn \"&amp;nbsp;\" .. gen.format_list(data.genders, data.lang)\n\t\
      else\n\t\treturn \"\"\n\tend\nend\n\n\nlocal function format_inflection_parts(data, parts)\n\tlocal m_links = require(\"Module:links\")\n\t\n\tfor key, part in ipairs(parts) do\n\t\tif type(part) ~= \"table\" then\n\t\t\tpart = {term = part}\n\t\tend\n\
      \t\t\n\t\tlocal qualifiers = \"\"\n\t\t\n\t\tif part.qualifiers and #part.qualifiers &gt; 0 then\n\t\t\tqualifiers = require(\"Module:qualifier\").format_qualifier(part.qualifiers) .. \" \"\n\t\t\t\n\t\t\t-- [[Special:WhatLinksHere/Template:tracking/headword/qualifier]]\n\
      \t\t\trequire(\"Module:debug\").track(\"headword/qualifier\")\n\t\tend\n\t\t\n\t\tlocal partaccel = part.accel\n\t\tlocal face = part.hypothetical and \"hypothetical\" or \"bold\"\n\t\tlocal nolink = part.hypothetical or part.nolink\n\t\t\n\t\t-- Convert\
      \ the term into a full link\n\t\t-- Don't show a transliteration here, the consensus seems to be not to\n\t\t-- show them in headword lines to avoid clutter.\n\t\tpart = m_links.full_link(\n\t\t\t{\n\t\t\t\tterm = not nolink and part.term or nil,\n\t\t\
      \t\talt = part.alt or (nolink and part.term or nil),\n\t\t\t\tlang = part.lang or data.lang,\n\t\t\t\tsc = part.sc or parts.sc or (not part.lang and data.sc),\n\t\t\t\tid = part.id,\n\t\t\t\tgenders = part.genders,\n\t\t\t\ttr = part.translit or (not (parts.enable_auto_translit\
      \ or data.inflections.enable_auto_translit) and \"-\" or nil),\n\t\t\t\tts = part.transcription,\n\t\t\t\taccel = parts.accel or partaccel,\n\t\t\t},\n\t\t\tface,\n\t\t\tfalse\n\t\t\t)\n\t\t\n\t\tpart = qualifiers .. part\n\t\t\n\t\tparts[key] = part\n\
      \tend\n\t\n\tlocal parts_output = \"\"\n\t\n\tif #parts &gt; 0 then\n\t\tparts_output = \" \" .. table.concat(parts, \" &lt;i&gt;or&lt;/i&gt; \")\n\telseif parts.request then\n\t\tparts_output = \" &lt;small&gt;[please provide]&lt;/small&gt;\"\n\t\t\t\
      .. require(\"Module:utilities\").format_categories(\n\t\t\t\t{data.lang:getCanonicalName() .. \" entries needing inflection\"},\n\t\t\t\tlang,\n\t\t\t\tnil,\n\t\t\t\tnil,\n\t\t\t\tdata.force_cat_output,\n\t\t\t\tdata.sc\n\t\t\t\t)\n\tend\n\t\n\treturn\
      \ \"&lt;i&gt;\" .. parts.label .. \"&lt;/i&gt;\" .. parts_output\nend\n\n-- Format the inflections following the headword\nlocal function format_inflections(data)\n\tif data.inflections and #data.inflections &gt; 0 then\n\t\t-- Format each inflection individually\n\
      \t\tfor key, infl in ipairs(data.inflections) do\n\t\t\tdata.inflections[key] = format_inflection_parts(data, infl)\n\t\tend\n\t\t\n\t\treturn \" (\" .. table.concat(data.inflections, \", \") .. \")\"\n\telse\n\t\treturn \"\"\n\tend\nend\n\nlocal function\
      \ show_headword_line(data)\n\tlocal namespace = title.nsText\n\n\t-- Check the namespace against the language type\n\tif namespace == \"\" then\n\t\tif data.lang:getType() == \"reconstructed\" then\n\t\t\terror(\"Entries for this language must be placed\
      \ in the Reconstruction: namespace.\")\n\t\telseif data.lang:getType() == \"appendix-constructed\" then\n\t\t\terror(\"Entries for this language must be placed in the Appendix: namespace.\")\n\t\tend\n\tend\n\t\n\tlocal tracking_categories = {}\n\n\tif\
      \ not data.noposcat then\t\n\t\tlocal pos_category = data.lang:getCanonicalName() .. \" \" .. data.pos_category\n\t\tif pos_category ~= \"Translingual Han characters\" then\n\t\t\ttable.insert(data.categories, 1, pos_category)\n\t\tend\n\tend\n\t\n\t--\
      \ Is it a lemma category?\n\tif isLemma[data.pos_category] or isLemma[data.pos_category:gsub(\"^reconstructed \", \"\")] then\n\t\tif not data.noposcat then\n\t\t\ttable.insert(data.categories, 1, data.lang:getCanonicalName() .. \" lemmas\")\n\t\tend\n\
      \t-- Is it a nonlemma category?\n\telseif isNonLemma[data.pos_category]\n\t\tor isNonLemma[data.pos_category:gsub(\"^reconstructed \", \"\")]\n\t\tor isLemma[data.pos_category:gsub(\"^mutated \", \"\")]\n\t\tor isNonLemma[data.pos_category:gsub(\"^mutated\
      \ \", \"\")] then\n\t\t\n\t\tif not data.noposcat then\n\t\t\ttable.insert(data.categories, 1, data.lang:getCanonicalName() .. \" non-lemma forms\")\n\t\tend\n\t-- It's neither; we don't know what this category is, so tag it with a tracking category.\n\
      \telse\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/headword/unrecognized pos]]\n\t\t]=]\n\t\ttable.insert(tracking_categories, \"head tracking/unrecognized pos\")\n\t\trequire(\"Module:debug\").track{\n\t\t\t\"headword/unrecognized pos\"\
      ,\n\t\t\t\"headword/unrecognized pos/lang/\" .. data.lang:getCode(),\n\t\t\t\"headword/unrecognized pos/pos/\" .. data.pos_category\n\t\t}\n\tend\n\t\n\t-- Preprocess\n\tpreprocess(data)\n\t\n\tlocal m_links = require(\"Module:links\")\n\t\n\tif namespace\
      \ == \"\" and data.lang:getType() ~= \"reconstructed\" then\n\t\tfor _, head in ipairs(data.heads) do\n\t\t\tif title.prefixedText ~= m_links.getLinkPage(m_links.remove_links(head), data.lang) then\n\t\t\t\t--[=[\n\t\t\t\t[[Special:WhatLinksHere/Template:tracking/headword/pagename\
      \ spelling mismatch]]\n\t\t\t\t]=]\n\t\t\t\trequire(\"Module:debug\").track{\n\t\t\t\t\t\"headword/pagename spelling mismatch\",\n\t\t\t\t\t\"headword/pagename spelling mismatch/\" .. data.lang:getCode()\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\
      end\n\t\n\t-- Format and return all the gathered information\n\treturn\n\t\tformat_headword(data) ..\n\t\tformat_genders(data) ..\n\t\tformat_inflections(data) ..\n\t\trequire(\"Module:utilities\").format_categories(\n\t\t\ttracking_categories, data.lang,\
      \ data.sort_key, nil, data.force_cat_output, data.sc\n\t\t\t)\nend\n\nfunction export.full_headword(data)\n\tlocal tracking_categories = {}\n\t\n\t-- Script-tags the topmost header.\n\tlocal pagename = title.text\n\tlocal fullPagename = title.fullText\n\
      \tlocal namespace = title.nsText\n\t\n\tif not data.lang or type(data.lang) ~= \"table\" or not data.lang.getCode then\n\t\terror(\"In data, the first argument to full_headword, data.lang should be a language object.\")\n\tend\n\t\n\tif not data.sc then\n\
      \t\tdata.sc = require(\"Module:scripts\").findBestScript(data.heads and data.heads[1] ~= \"\" and data.heads[1] or pagename, data.lang)\n\telse\n\t\t-- Track uses of sc parameter\n\t\tlocal best = require(\"Module:scripts\").findBestScript(pagename, data.lang)\n\
      \t\trequire(\"Module:debug\").track(\"headword/sc\")\n\t\t\n\t\tif data.sc:getCode() == best:getCode() then\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/redundant\")\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/redundant/\" .. data.sc:getCode())\n\
      \t\telse\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/needed\")\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/needed/\" .. data.sc:getCode())\n\t\tend\n\tend\n\t\n\tlocal displayTitle\n\t-- Assumes that the scripts in \"toBeTagged\" will\
      \ never occur in the Reconstruction namespace.\n\tif namespace == \"\" and data.sc and toBeTagged[data.sc:getCode()] or\n\t\t\tdata.sc:getCode() == \"Jpan\" and (test_script(pagename, \"Hira\") or test_script(pagename, \"Kana\")) then\n\t\tdisplayTitle\
      \ = '&lt;span class=\"' .. data.sc:getCode() .. '\"&gt;' .. pagename .. '&lt;/span&gt;'\n\telseif namespace == \"Reconstruction\" then\n\t\tdisplayTitle, matched = mw.ustring.gsub(\n\t\t\tfullPagename,\n\t\t\t\"^(Reconstruction:[^/]+/)(.+)$\",\n\t\t\t\
      function(before, term)\n\t\t\t\treturn before ..\n\t\t\t\t\trequire(\"Module:script utilities\").tag_text(\n\t\t\t\t\t\tterm,\n\t\t\t\t\t\tdata.lang,\n\t\t\t\t\t\tdata.sc\n\t\t\t\t\t)\n\t\t\tend\n\t\t)\n\t\t\n\t\tif matched == 0 then\n\t\t\tdisplayTitle\
      \ = nil\n\t\tend\n\tend\n\t\n\tif displayTitle then\n\t\tlocal frame = mw.getCurrentFrame()\n\t\tframe:callParserFunction(\n\t\t\t\"DISPLAYTITLE\",\n\t\t\tdisplayTitle\n\t\t)\n\tend\n\t\n\tif data.force_cat_output then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/headword/force\
      \ cat output]]\n\t\t]=]\n\t\trequire(\"Module:debug\").track(\"headword/force cat output\")\n\tend\n\t\n\tif data.getCanonicalName then\n\t\terror('The \"data\" variable supplied to \"full_headword\" should not be a language object.')\n\tend\n\t\t\n\t\
      -- Were any categories specified?\n\tif data.categories and #data.categories &gt; 0 then\n\t\tlocal lang_name = require(\"Module:string\").pattern_escape(data.lang:getCanonicalName())\n\t\tfor _, cat in ipairs(data.categories) do\n\t\t\t-- Does the category\
      \ begin with the language name? If not, tag it with a tracking category.\n\t\t\tif not mw.ustring.find(cat, \"^\" .. lang_name) then\n\t\t\t\tmw.log(cat, data.lang:getCanonicalName())\n\t\t\t\ttable.insert(tracking_categories, \"head tracking/no lang category\"\
      )\n\t\t\t\t\n\t\t\t\t--[=[\n\t\t\t\t[[Special:WhatLinksHere/Template:tracking/head tracking/no lang category]]\n\t\t\t\t]=]\n\t\t\t\trequire(\"Module:debug\").track{\n\t\t\t\t\t\"headword/no lang category\",\n\t\t\t\t\t\"headword/no lang category/lang/\"\
      \ .. data.lang:getCode()\n\t\t\t\t}\n\t\t\tend\n\t\tend\n\t\t\n\t\tif not data.pos_category\n\t\t\tand mw.ustring.find(data.categories[1], \"^\" .. data.lang:getCanonicalName())\n\t\t\t\tthen\n\t\t\tdata.pos_category = mw.ustring.gsub(data.categories[1],\
      \ \"^\" .. data.lang:getCanonicalName() .. \" \", \"\")\n\t\t\ttable.remove(data.categories, 1)\n\t\tend\n\tend\n\t\n\tif not data.pos_category then\n\t\terror(\n\t\t\t'No valid part-of-speech categories were found in the list '\n\t\t\t.. 'of categories\
      \ passed to the function \"full_headword\". '\n\t\t\t.. 'The part-of-speech category should consist of a language\\'s '\n\t\t\t.. 'canonical name plus a part of speech.'\n\t\t\t)\n\tend\n\t\n\t-- Categorise for unusual characters\n\tlocal standard = data.lang:getStandardCharacters()\n\
      \t\n\tif standard then\n\t\tif mw.ustring.len(title.subpageText) ~= 1 and not mw.ustring.match(title.text, \"^Unsupported titles/\") then\n\t\t\tfor character in mw.ustring.gmatch(title.subpageText, \"([^\" .. standard .. \"])\") do\n\t\t\t\tlocal upper\
      \ = mw.ustring.upper(character)\n\t\t\t\tif not mw.ustring.find(upper, \"[\" .. standard .. \"]\") then\n\t\t\t\t\tcharacter = upper\n\t\t\t\tend\n\t\t\t\ttable.insert(\n\t\t\t\t\tdata.categories,\n\t\t\t\t\tdata.lang:getCanonicalName() .. \" terms spelled\
      \ with \" .. character\n\t\t\t\t)\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Categorise for palindromes\n\tif title.nsText ~= \"Reconstruction\"\n\t\tand require('Module:palindromes').is_palindrome(\n\t\t\ttitle.subpageText, data.lang, data.sc\n\t\t\t) then\n\
      \t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" palindromes\")\n\tend\n\t\n\treturn\n\t\tshow_headword_line(data) ..\n\t\trequire(\"Module:utilities\").format_categories(\n\t\t\tdata.categories, data.lang, data.sort_key, nil, data.force_cat_output,\
      \ data.sc\n\t\t\t) ..\n\t\trequire(\"Module:utilities\").format_categories(\n\t\t\ttracking_categories, data.lang, data.sort_key, nil, data.force_cat_output, data.sc\n\t\t\t)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:58.263Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56804 t=1555362358125088
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:58 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 401004034, 638466867, 701859174
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3935515\" pageid=\"3935515\" ns=\"828\" title=\"Module:links\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T18:59:00Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\t[[Unsupported titles]] and pages with high\n\tmemory usage are listed at [[Module:links/data]].\n\t\n\tOther modules used:\n\t\t[[Module:script utilities]]\n\
      \t\t[[Module:scripts]]\n\t\t[[Module:languages]] and its submodules\n\t\t[[Module:gender and number]]\n\t\t[[Module:utilities]]\n\t\t[[Module:string]]\n\t\t[[Module:debug]]\n]=]\n\n-- These are prefixed with u to avoid confusion with the default string\
      \ methods\n-- of the same name.\nlocal usub = mw.ustring.sub\n\nlocal table_insert = table.insert\nlocal table_concat = table.concat\n\nlocal ignore_cap = {\n\t[\"ko\"] = true,\n}\n\nlocal phonetic_extraction = {\n\t[\"th\"] = \"Module:th\",\n\t[\"km\"\
      ] = \"Module:km\",\n}\n\nlocal pos_tags = {\n\t[\"a\"] = \"adjective\",\n\t[\"adv\"] = \"adverb\",\n\t[\"int\"] = \"interjection\",\n\t[\"n\"] = \"noun\",\n\t[\"pron\"] = \"pronoun\",\n\t[\"v\"] = \"verb\",\n\t[\"vi\"] = \"intransitive verb\",\n\t[\"vt\"\
      ] = \"transitive verb\",\n\t[\"vti\"] = \"transitive and intransitive verb\",\n}\n\nlocal unsupported_titles\nfunction export.getLinkPage(target, lang)\n\tunsupported_titles = unsupported_titles or mw.loadData(\"Module:links/data\").unsupported_titles\n\
      \tif unsupported_titles[target] then\n\t\treturn \"Unsupported titles/\" .. unsupported_titles[target]\n\tend\n\t\n\t-- If the link contains unexpanded template parameters, then don't create a link.\n\tif target:find(\"{{{\") then\n\t\treturn nil\n\tend\n\
      \t\n\tif target:sub(1, 1) == \":\" or target:sub(1, 2) == \"w:\" or target:sub(1, 10) == \"wikipedia:\" then\n\t\treturn target\n\tend\n\t\n\t-- Remove diacritics from the page name\n\ttarget = lang:makeEntryName(target)\n\t\n\tif target:sub(1, 1) == \"\
      /\" then\n\t\treturn \":\" .. target\n\t\n\t-- Link to appendix for reconstructed terms and terms in appendix-only languages\n\telseif target:sub(1, 1) == \"*\" and #target &gt; 1 then\n\t\tif lang:getCode() == \"und\" then\n\t\t\treturn nil\n\t\tend\n\
      \t\t\n\t\ttarget = \"Reconstruction:\" .. lang:getCanonicalName() .. \"/\" .. usub(target, 2)\n\telseif lang:getType() == \"reconstructed\" then\n\t\terror(\"The specified language \" .. lang:getCanonicalName()\n\t\t\t.. \" is unattested, while the given\
      \ word is not marked with '*' to indicate that it is reconstructed\")\n\telseif lang:getType() == \"appendix-constructed\" then\n\t\ttarget = \"Appendix:\" .. lang:getCanonicalName() .. \"/\" .. target\n\tend\n\t\n\treturn target\nend\n\n-- Make a language-specific\
      \ link from given link's parts\nlocal function makeLangLink(link, lang, id, allowSelfLink)\n\t-- Temporary tracking code\n\tlocal langCode = lang:getCode()\n\tif langCode == \"se\" or langCode == \"sia\" or langCode:find(\"^sm[ajns]$\")\n\t\t\tor langCode:find(\"\
      ^sj[dektu]$\") then\n\t\tif link.display and link.display:find(\"'\") then\n\t\t\trequire(\"Module:debug\").track(\"links/Sami apostrophe display\")\n\t\telseif link.target and link.target:find(\"'\") then\n\t\t\trequire(\"Module:debug\").track(\"links/Sami\
      \ apostrophe target\")\n\t\tend\n\tend\n\t\n\t-- Find fragments (when link didn't come from parseLink).\n\t-- Prevents {{l|en|word#Etymology 2|word}} from linking to [[word#Etymology 2#English]].\n\tif link.fragment == nil then\n\t\t-- Replace numeric\
      \ character references with the corresponding character (&amp;#29; → '),\n\t\t-- as they contain #, which causes the numeric character reference to be\n\t\t-- misparsed (wa'a → wa&amp;#29;a → pagename wa&amp;, fragment 29;a).\n\t\tlink.target = link.target:gsub(\"\
      &amp;#(%d+);\",\n\t\t\tfunction(number) return mw.ustring.char(tonumber(number)) end)\n\t\tlocal first, second = link.target:match(\"^([^#]+)#(.+)$\")\n\t\tif first then\n\t\t\tlink.target, link.fragment = first, second\n\t\tend\n\tend\n\t\n\t-- If there\
      \ is no display form, then create a default one\n\tif not link.display then\n\t\tlink.display = link.target\n\t\t\n\t\t-- Strip the prefix from the displayed form\n\t\t-- TODO: other interwiki links?\n\t\tif link.display:sub(1, 1) == \":\" and not mw.loadData(\"\
      Module:links/data\").unsupported_titles[link.display] then\n\t\t\tlink.display = link.display:sub(2) -- remove colon from beginning\n\t\telse\n\t\t\tlocal prefix = link.display:match(\"^([^:]+):\")\n\t\t\tlocal prefixes = {\n\t\t\t\tw = true,\n\t\t\t\t\
      wikipedia = true,\n\t\t\t}\n\t\t\t\n\t\t\tif prefixes[prefix] then\n\t\t\t\tlink.display = link.display:sub(#prefix + 2) -- remove prefix plus colon\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Process the target\n\tlink.target = export.getLinkPage(link.target,\
      \ lang)\n\t\n\tif not link.target then\n\t\treturn link.display\n\tend\n\t\n\t-- If the target is the same as the current page and there is no sense id\n\t-- and linking to the same page hasn't been turned on, then return a \"self-link\"\n\t-- like the\
      \ software does.\n\tif not (allowSelfLink or id) and link.target:gsub(\"^:\", \"\") == mw.title.getCurrentTitle().prefixedText then\n\t\treturn \"&lt;strong class=\\\"selflink\\\"&gt;\" .. link.display .. \"&lt;/strong&gt;\"\n\tend\n\t\n\t--[[\n\t\tAdd\
      \ fragment\n\t\tDo not add a section link to \"Undetermined\", as such sections do not exist and are invalid.\n\t\tTabbedLanguages handles links without a section by linking to the \"last visited\" section,\n\t\tbut adding \"Undetermined\" would break\
      \ that feature.\n\t\tFor localized prefixes that make syntax error, please use the format: [\"xyz\"] = true,\n\t]]\n\tlocal prefix = link.target:match(\"^:?([^:]+):\")\n\tlocal prefixes = {\n\t\tw = true,\n\t\twikipedia = true,\n\t\tCategory = true,\n\t\
      }\n\t\n\tif not prefixes[prefix] then\n\t\tif link.fragment or link.target:find(\"#$\") then\n\t\t\trequire(\"Module:debug\").track {\n\t\t\t\t\"links/fragment\",\n\t\t\t\t\"links/fragment/\" .. lang:getCode()\n\t\t\t}\n\t\tend\n\t\t\n\t\tif not link.fragment\
      \ and lang:getCode() ~= \"und\" then\n\t\t\tif id then\n\t\t\t\tlink.fragment = require(\"Module:utilities\").make_id(lang, id)\n\t\t\telseif not mw.ustring.find(link.target, \"^Appendix:\")\n\t\t\t\t\tand not mw.ustring.find(link.target, \"^Reconstruction:\"\
      ) then\n\t\t\t\tlink.fragment = lang:getCanonicalName()\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- This allows linking to pages like [[sms:a]] without it being treated weirdly.\n\t\tlink.target = link.target:gsub(\":\", \"&amp;#x3a;\")\n\tend\n\t\n\treturn \"[[\"\
      \ .. link.target .. (link.fragment and \"#\" .. link.fragment or \"\") .. \"|\" .. link.display .. \"]]\"\nend\n\n\n-- Split a link into its parts\nlocal function parseLink(linktext)\n\tlocal link = { target = linktext }\n\tlocal first, second = link.target:match(\"\
      ^([^|]+)|(.+)$\")\n\t\n\tif first then\n\t\tlink.target = first\n\t\tlink.display = second\n\telse\n\t\tlink.display = link.target\n\tend\n\t\n\tfirst, second = link.target:match(\"^(.+)#(.+)$\")\n\t\n\tif first then\n\t\tlink.target = first\n\t\tlink.fragment\
      \ = second\n\telse\n\t\t-- So that makeLangLink does not look for a fragment again\n\t\tlink.fragment = false\n\tend\n\t\n\treturn link\nend\n\n\n-- Creates a basic wikilink to the given term. If the text already contains\n-- links, these are replaced\
      \ with links to the correct section.\nfunction export.language_link(data, allowSelfLink, dontLinkRecons)\n\tif type(data) ~= \"table\" then\n\t\terror(\"The first argument to the function language_link must be a table. See Module:links/documentation for\
      \ more information.\")\n\tend\n\t\n\tlocal text = data.term\n\t\n\tif ignore_cap[data.lang:getCode()] and text then\n\t\ttext = text:gsub(\"%^\", \"\")\n\tend\n\t\n\t-- If the text begins with * and another character,\n\t-- then act as if each link begins\
      \ with *\n\tlocal allReconstructed = false\n\t\n\tif text:find(\"^*.\") then\n\t\tallReconstructed = true\n\tend\n\t\n\t-- Do we have embedded wikilinks?\n\tif text:find(\"[[\", nil, true) then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/links/alt-ignored]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/links/id-ignored]]\n\t\t]=]\n\t\t\n\t\tif data.alt then\n\t\t\trequire(\"Module:debug\").track(\"links/alt-ignored\")\n\t\t\tmw.log(\"(from Module:links)\", \"text with embedded wikilinks:\", text,\n\t\t\t\t\
      \"ignored alt:\", data.alt, \"lang:\", data.lang:getCode())\n\t\tend\n\t\t\n\t\tif data.id then\n\t\t\trequire(\"Module:debug\").track(\"links/id-ignored\")\n\t\t\tmw.log(\"(from Module:links)\", \"text with embedded wikilinks:\", text,\n\t\t\t\t\"ignored\
      \ id:\", data.id, \"lang:\", data.lang:getCode())\n\t\tend\n\t\t\n\t\t-- Begins and ends with a wikilink tag\n\t\tif text:find(\"^%[%[(.+)%]%]$\") then\n\t\t\t-- There are no [ ] in between.\n\t\t\t-- This makes the wikilink tag redundant.\n\t\t\tif text:find(\"\
      ^%[%[[^%[%]]+%]%]$\") then\n\t\t\t\trequire(\"Module:debug\").track(\"links/redundant wikilink\")\n\t\t\telse\n\t\t\t\tlocal temp = text:gsub(\"^%[%[(.+)%]%]$\", \"%1\")\n\t\t\t\ttemp = temp:gsub(\"%]%], %[%[\", \"|\")\n\t\t\t\t\n\t\t\t\tif not temp:find(\"\
      [%[%]]\") then\n\t\t\t\t\trequire(\"Module:debug\").track(\"links/list\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\ttext = text:gsub(\"%[%[([^%]]+)%]%]\",\n\t\t\tfunction(linktext)\n\t\t\t\tlocal link = parseLink(linktext)\n\t\t\t\t\n\t\t\t\tif allReconstructed\
      \ then\n\t\t\t\t\tlink.target = \"*\" .. link.target\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\treturn makeLangLink(link, data.lang, data.id, allowSelfLink, dontLinkRecons)\n\t\t\tend)\n\t\t\n\t\t-- Remove the extra * at the beginning if it's immediately followed\n\
      \t\t-- by a link whose display begins with * too\n\t\tif allReconstructed then\n\t\t\ttext = text:gsub(\"^%*%[%[([^|%]]+)|%*\", \"[[%1|*\")\n\t\tend\n\telse\n\t\t-- There is no embedded wikilink, make a link using the parameters.\n\t\ttext = makeLangLink({\
      \ target = text, display = data.alt }, data.lang, data.id, allowSelfLink, dontLinkRecons)\n\tend\n\t\n\treturn text\nend\n\nfunction export.mark(text, itemType, face, lang)\n\tlocal tag = { \"\", \"\" }\n\t\n\tif itemType == \"gloss\" then\n\t\ttag = {\
      \ '&lt;span class=\"mention-gloss-double-quote\"&gt;“&lt;/span&gt;&lt;span class=\"mention-gloss\"&gt;',\n\t\t\t'&lt;/span&gt;&lt;span class=\"mention-gloss-double-quote\"&gt;”&lt;/span&gt;' }\n\telseif itemType == \"tr\" then\n\t\tif face == \"term\"\
      \ then\n\t\t\ttag = { '&lt;span lang=\"' .. lang:getCode() .. '\" class=\"tr mention-tr Latn\"&gt;',\n\t\t\t\t'&lt;/span&gt;' }\n\t\telse\n\t\t\ttag = { '&lt;span lang=\"' .. lang:getCode() .. '\" class=\"tr Latn\"&gt;', '&lt;/span&gt;' }\n\t\tend\n\t\
      elseif itemType == \"ts\" then\n\t\ttag = { '&lt;span class=\"ts mention-ts Latn\"&gt;/', '/&lt;/span&gt;' }\n\telseif itemType == \"pos\" then\n\t\ttag = { '&lt;span class=\"ann-pos\"&gt;', '&lt;/span&gt;' }\n\telseif itemType == \"annotations\" then\n\
      \t\ttag = { '&lt;span class=\"mention-gloss-paren annotation-paren\"&gt;(&lt;/span&gt;',\n\t\t\t'&lt;span class=\"mention-gloss-paren annotation-paren\"&gt;)&lt;/span&gt;' }\n\tend\n\t\n\tif type(text) == \"string\" then\n\t\treturn tag[1] .. text .. tag[2]\n\
      \telse\n\t\treturn \"\"\n\tend\nend\n\n-- Format the annotations (things following the linked term)\nfunction export.format_link_annotations(data, face)\n\tlocal output = {}\n\t\n\t-- Interwiki link\n\tif data.interwiki then\n\t\ttable_insert(output, data.interwiki)\n\
      \tend\n\t\n\t-- Genders\n\tif type(data.genders) ~= \"table\" then\n\t\tdata.genders = { data.genders }\n\tend\n\t\n\tif data.genders and #data.genders &gt; 0 then\n\t\tlocal m_gen = require(\"Module:gender and number\")\n\t\ttable_insert(output, \"&amp;nbsp;\"\
      \ .. m_gen.format_list(data.genders, data.lang))\n\tend\n\t\n\tlocal annotations = {}\n\t\n\t-- Transliteration and transcription\n\tif data.tr or data.ts then\n\t\tlocal kind\n\t\tif face == \"term\" then\n\t\t\tkind = face\n\t\telse\n\t\t\tkind = \"\
      default\"\n\t\tend\n\t\t\n\t\tif data.tr and data.ts then\n\t\t\ttable_insert(annotations,\n\t\t\t\trequire(\"Module:script utilities\").tag_translit(data.tr, data.lang, kind)\n\t\t\t\t.. \" \" .. export.mark(data.ts, \"ts\"))\n\t\telseif data.ts then\n\
      \t\t\ttable_insert(annotations, export.mark(data.ts, \"ts\"))\n\t\telse\n\t\t\ttable_insert(annotations,\n\t\t\t\trequire(\"Module:script utilities\").tag_translit(data.tr, data.lang, kind))\n\t\tend\n\tend\n\t\n\t-- Gloss/translation\n\tif data.gloss\
      \ then\n\t\ttable_insert(annotations, export.mark(data.gloss, \"gloss\"))\n\tend\n\t\n\t-- Part of speech\n\tif data.pos then\n\t\t-- debug category for pos= containing transcriptions\n\t\tif data.pos:find(\"/[^&gt;&lt;]*/\") then\n\t\t\tdata.pos = data.pos\
      \ .. \"[[Category:links likely containing transcriptions in pos]]\"\n\t\tend\n\n\t\ttable_insert(annotations, export.mark(pos_tags[data.pos] or data.pos, \"pos\"))\n\tend\n\t\n\t-- Literal/sum-of-parts meaning\n\tif data.lit then\n\t\ttable_insert(annotations,\
      \ \"literally \" .. export.mark(data.lit, \"gloss\"))\n\tend\n\t\n\tif #annotations &gt; 0 then\n\t\ttable_insert(output, \" \" .. export.mark(table_concat(annotations, \", \"), \"annotations\"))\n\tend\n\t\n\treturn table_concat(output)\nend\n\n-- A version\
      \ of {{l}} or {{m}} that can be called from other modules too\nfunction export.full_link(data, face, allowSelfLink, dontLinkRecons)\n\tif type(data) ~= \"table\" then\n\t\terror(\"The first argument to the function full_link must be a table. \"\n\t\t\t\
      .. \"See Module:links/documentation for more information.\")\n\tend\n\t\n\t-- Create the link\n\tlocal output = {}\n\tlocal categories = {}\n\tlocal link = \"\"\n\tlocal annotations\n\t\n\t--local m_utilities = require(\"Module:utilities\")\n\t\n\t-- Is\
      \ there any text to show?\n\tif (data.term or data.alt) then\n\t\t-- Try to detect the script if it was not provided\n\t\tif not data.sc then\n\t\t\tdata.sc = require(\"Module:scripts\").findBestScript(data.alt or data.term, data.lang)\n\t\telse\n\t\t\t\
      -- Track uses of sc parameter\n\t\t\tlocal best = require(\"Module:scripts\").findBestScript(data.alt or data.term, data.lang)\n\t\t\trequire(\"Module:debug\").track(\"links/sc\")\n\t\t\t\n\t\t\tif data.sc:getCode() == best:getCode() then\n\t\t\t\trequire(\"\
      Module:debug\").track(\"links/sc/redundant\")\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/redundant/\" .. data.sc:getCode())\n\t\t\telse\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/needed\")\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/needed/\"\
      \ .. data.sc:getCode())\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal class = \"\"\n\t\t\n\t\tif data.accel then\n\t\t\tlocal form = data.accel.form and data.accel.form .. \"-form-of\" or \"\"\n\t\t\tlocal gender = data.accel.gender and \"gender-\" .. data.accel.gender\
      \ or \"\"\n\t\t\tlocal translit = data.accel.translit and \"transliteration-\" .. data.accel.translit or \"\"\n\t\t\t-- This is decoded again by [[WT:ACCEL]].\n\t\t\tlocal lemma = data.accel.lemma and \"origin-\" .. data.accel.lemma:gsub(\"%%\", \".\"\
      ):gsub(\" \", \"_\") or \"\" \n\t\t\tlocal lemma_translit = data.accel.lemma_translit and \"origin-transliteration-\" .. data.accel.lemma_translit or \"\"\n\t\t\tlocal no_store = data.accel.no_store and \"form-of-nostore\" or \"\"\n\t\t\t\n\t\t\taccel\
      \ =\n\t\t\t\tform .. \" \" ..\n\t\t\t\tgender .. \" \" ..\n\t\t\t\ttranslit .. \" \" ..\n\t\t\t\tlemma .. \" \" ..\n\t\t\t\tlemma_translit .. \" \" ..\n\t\t\t\tno_store .. \" \"\n\t\t\t\n\t\t\tclass = \"form-of lang-\" .. data.lang:getCode() .. \" \" ..\
      \ accel\n\t\tend\n\t\t\n\t\t-- Only make a link if the term has been given, otherwise just show the alt text without a link\n\t\tlink = require(\"Module:script utilities\").tag_text(\n\t\t\tdata.term and export.language_link(data, allowSelfLink, dontLinkRecons)\n\
      \t\t\tor data.alt, data.lang, data.sc, face, class)\n\telse\n\t\t--[[\tNo term to show.\n\t\t\t\tIs there at least a transliteration we can work from?\t]]\n\t\tlink = require(\"Module:script utilities\").request_script(data.lang, data.sc)\n\t\t\n\t\tif\
      \ link == \"\" or not data.tr or data.tr == \"-\" then\n\t\t\t-- No link to show, and no transliteration either. Show a term request.\n\t\t\tlocal category = \"\"\n\t\t\t\n\t\t\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\t\t\ttable_insert(categories,\
      \ \"[[Category:\" .. data.lang:getCanonicalName() .. \" term requests]]\")\n\t\t\tend\n\t\t\t\n\t\t\tlink = \"&lt;small&gt;[Term?]&lt;/small&gt;\"\n\t\tend\n\tend\n\t\n\ttable_insert(output, link)\n\t\n\tif data.tr == \"\" or data.tr == \"-\" then\n\t\t\
      data.tr = nil\n\t\n\telseif phonetic_extraction[data.lang:getCode()] then\n\t\tlocal m_phonetic = require(phonetic_extraction[data.lang:getCode()])\n\t\tdata.tr = data.tr or m_phonetic.getTranslit(export.remove_links(data.term))\n\t\n\telseif (data.term\
      \ or data.alt) and not data.sc:getCode():find(\"Lati?n\") then\n\t\t\n\t\t-- Try to generate a transliteration, unless transliteration has been\n\t\t-- supplied and we are in a high-memory entry.\n\t\tif not (data.tr and mw.loadData(\"Module:links/data\"\
      ).high_memory_entries[mw.title.getCurrentTitle().text]) then\n\t\t\tlocal automated_tr = data.lang:transliterate(export.remove_links(data.alt or data.term), data.sc)\n\t\t\t\n\t\t\tif automated_tr then\n\t\t\t\tlocal manual_tr = data.tr\n\t\t\t\t\n\t\t\
      \t\tif manual_tr then\n\t\t\t\t\tif manual_tr == automated_tr then\n\t\t\t\t\t\ttable_insert(categories,\n\t\t\t\t\t\t\t\"[[Category:Terms with redundant transliterations]]\"\n\t\t\t\t\t\t\t\t\t.. \"[[Category:Terms with redundant transliterations/\" ..\
      \ data.lang:getCode() .. \"]]\")\n\t\t\t\t\telse\n\t\t\t\t\t\t-- Prevents Arabic root categories from flooding the tracking categories.\n\t\t\t\t\t\tif mw.title.getCurrentTitle().nsText ~= \"Category\" then\n\t\t\t\t\t\t\ttable_insert(categories,\n\t\t\
      \t\t\t\t\t\t\"[[Category:Terms with manual transliterations different from the automated ones]]\"\n\t\t\t\t\t\t\t\t\t\t.. \"[[Category:Terms with manual transliterations different from the automated ones/\" .. data.lang:getCode() .. \"]]\")\n\t\t\t\t\t\
      \tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif (not manual_tr) or data.lang:overrideManualTranslit() then\n\t\t\t\t\tdata.tr = automated_tr\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Link to the transliteration entry for languages that\
      \ require this\n\tif data.tr and data.lang:link_tr() then\n\t\tdata.tr = export.language_link { lang = data.lang, term = data.tr }\n\tend\n\t\n\ttable_insert(output, export.format_link_annotations(data, face))\n\t\n\treturn table_concat(output) .. table_concat(categories)\n\
      end\n\n\n--[[\tStrips links: deletes category links,\n\t\tthe targets of piped links,\n\t\tand all double square brackets.\t\t\t]]\nfunction export.remove_links(text)\n\tif type(text) == \"table\" then\n\t\ttext = text.args[1]\n\tend\n\t\n\tif not text\
      \ or text == \"\" then\n\t\treturn \"\"\n\tend\n\t\n\ttext = mw.ustring.gsub(text, \"%[%[Category:[^|%]]-|?[^|%]]-%]%]\", \"\")\n\ttext = text:gsub(\"%[%[[^|%]]-|\", \"\")\n\ttext = text:gsub(\"%[%[\", \"\")\n\ttext = text:gsub(\"%]%]\", \"\")\n\t\n\t\
      return text\nend\n\nfunction export.english_links(text)\n\tlocal lang = require(\"Module:languages\").getByCode(\"en\")\n\t\n\t-- Parentheses around function call to remove second return value, the\n\t-- number of replacements.\n\treturn (text:gsub(\"\
      %[%[([^%]]+)%]%]\",\n\t\tfunction(linktext)\n\t\t\tlocal link = parseLink(linktext)\n\t\t\treturn makeLangLink(link, lang, nil, true, false)\n\t\tend))\nend\n\nfunction export.light_link(data)\n\tlocal language_names = mw.loadData(\"Module:languages/code\
      \ to canonical name\")\n\tlocal script_codes = mw.loadData(\"Module:scripts/codes\")\n\t\n\tif data.langCode then\n\t\tdata.langName = language_names[data.langCode] or error('The language code \"' .. data.langCode .. '\" is not recognized.')\n\telse\n\t\
      \terror('Language code is required.')\n\tend\n\t\n\tif not data.term then\n\t\terror('Term to link to is required.')\n\tend\n\t\n\tif data.scCode then\n\t\tif not script_codes[data.scCode] then\n\t\t\terror('The script code \"' .. data.sc .. '\" is not\
      \ recognized.')\n\t\tend\n\telse\n\t\terror(\"The function light_link requires a script code.\")\n\tend\n\t\n\tlocal fragment\n\tif data.id then\n\t\tfragment = data.langName .. \"-\" .. mw.uri.encode(data.id, \"WIKI\")\n\telse\n\t\tfragment = data.langName\n\
      \tend\n\t\n\treturn table_concat {\n\t\t'&lt;span class=\"', data.scCode, '\" lang=\"', data.langCode,\n\t\t'\"&gt;[[', data.term, \"#\", fragment, \"|\", (data.alt or data.term), \"]]&lt;/span&gt;\"\n\t}\nend\n\n--[=[\n\tFor example, Norwegian_Bokm.C3.A5l\
      \ → Norwegian_Bokmål. 0xC3 and 0xA5 are the\n\thexadecimal-base representation of the two bytes used to encode the character\n\tå in the UTF-8 encoding:\n\t\t11000011 10100101\n\t\n\tNote that the bytes used to represent a character are actually different\
      \ from\n\tthe Unicode codepoint. For å, the codepoint is 0xE5. The bits (digits) that\n\tactually spell the codepoint are found in the brackets: 110[00011] 10[100101].\n\tFor further explanation, see [[w:UTF-8#Description]].\n]=]\n\n-- The character class\
      \ %x should not be used, as it includes the characters a-f,\n-- which do not occur in these anchor encodings.\nlocal capitalHex = \"[0-9A-F]\"\n\nlocal function decodeAnchor(anchor)\n\treturn (anchor:gsub(\"%.(\" .. capitalHex .. capitalHex .. \")\",\n\
      \t\tfunction(hexByte)\n\t\t\treturn string.char(tonumber(hexByte, 16))\n\t\tend))\nend\n\nfunction export.section_link(link)\n\tif type(link) ~= \"string\" then\n\t\terror(\"The first argument to section_link was a \" .. type(link) .. \", but it should\
      \ be a string.\")\n\tend\n\t\n\tlink = link:gsub(\"_\", \" \")\n\t\n\tlocal numberSigns = require(\"Module:string\").count(link, \"#\")\n\t\n\tif numberSigns &gt; 1 then\n\t\terror(\"The section link should only contain one number sign (#).\")\n\tend\n\
      \t\n\tlocal page, section = link:match(\"^([^#]+)#(.+)$\")\n\t\n\tif page and section then\n\t\tsection = decodeAnchor(section)\n\t\t\n\t\t-- URI-encode (percent-encode) section to allow square brackets, [],\n\t\t-- in section name. If not percent-encoded,\
      \ they prevent the parser from\n\t\t-- recognizing the link.\n\t\treturn table_concat { \"[[\", page, \"#\", mw.uri.encode(section, \"WIKI\"), \"|\", page, \" § \", section, \"]]\" }\n\telse\n\t\terror('The function \"' .. section_link .. '\" could not\
      \ find a number sign marking a section name.')\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-08-30T00:23:24.704Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Acontext&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=30-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 30 Aug 2015 00:23:24 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=30-Aug-2015
      X-Cache: cp1065 miss (0), cp3005 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 1142600957, 3744646120, 3743362790
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="279373" pageid="279373" ns="10" title="Template:context"><revisions><rev user="CodeCat" timestamp="2014-04-08T13:36:35Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:labels/templates|show|compat=1}}&lt;!--

      --&gt;&lt;includeonly&gt;&lt;!--
      --&gt;{{#if:{{{lang|}}}||[[Category:Language code missing/context]]}}&lt;!--
      --&gt;&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:00.906Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55241 t=1555362360800841
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:00 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1282.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 928319188, 561949727, 702316826
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4393059\" pageid=\"4393059\" ns=\"828\" title=\"Module:labels/templates\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-31T04:12:12Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"when compat=1 in show(), allow language code in either lang= or 1=; otherwise only in lang=\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\tModules used:\n\t[[Module:labels]]\n\t\
      [[Module:parameters]]\n\t[[Module:utilities]]\n\t[[Module:languages]]\n\t[[Module:template_link]]\n]=]\n\nfunction export.show(frame)\n\tlocal parent_args = frame:getParent().args\n\tlocal compat = (frame.args[\"compat\"] or \"\") ~= \"\" and parent_args[\"\
      lang\"]\n\tlocal term_mode = (frame.args[\"term\"] or \"\") ~= \"\"\n\t\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {list = true},\n\t\t[\"nocat\"] = {type = \"boolean\"},\n\t\t[\"script\"] = {},\n\t\t[\"script2\"] = {},\n\t\t[\"sort\"\
      ] = {},\n\t\t[\"sort2\"] = {},\n\t}\n\t\n\tif compat then\n\t\tparams[1] = params[2]\n\t\tparams[2] = nil\n\t\tparams[\"lang\"] = {required = true}\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(parent_args, params)\n\t\n\t-- Gather\
      \ parameters\n\tlocal lang = args[compat and \"lang\" or 1]\n\tlocal labels = args[compat and 1 or 2]\n\tlocal nocat = args[\"nocat\"]\n\tlocal script = args[\"script\"]\n\tlocal script2 = args[\"script2\"]\n\tlocal sort_key = args[\"sort\"]\n\tlocal sort_key2\
      \ = args[\"sort2\"]\n\n\tif not lang then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tlang = \"und\"\n\t\telse\n\t\t\terror(\"Language code has not been specified. Please provide it to the template using the first parameter.\"\
      )\n\t\tend\n\tend\n\t\n\tlang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, compat and \"lang\" or 1)\n\t\n\treturn require(\"Module:labels\").show_labels(labels, lang, script, script2, sort_key, sort_key2,\
      \ nocat, term_mode)\nend\n\n--[[\ttemporary. intentionally undocumented.\n\t\tthis function is only to be used in\n\t\t{{alternative spelling of}},\n\t\t{{eye dialect of}}\n\t\tand similar templates\t\t\t\t\t]]\nfunction export.show_from(frame)\n\tlocal\
      \ m_labeldata = require('Module:labels/data')\n\t\n\tlocal froms = {}\n\tlocal categories = {}\n\tlocal args = frame:getParent().args\n\tlocal nocat = args[\"nocat\"]\n\tlocal lang = frame.args[\"lang\"] or args[\"lang\"] or args[1] or \"en\"\n\tlocal\
      \ limit = frame.args.limit and tonumber(frame.args.limit) or 99999\n\t\n\tlocal m_languages = require(\"Module:languages\")\n\tlang = m_languages.getByCode(lang) or m_languages.err(lang, \"lang\")\n\n\tlocal key, i = 'from', 1\n\twhile args[key] do\n\t\
      \tlocal k = args[key]\n\t\tk = m_labeldata.aliases[k] or k\n\t\tlocal data = m_labeldata.labels[k]\n\t\tlocal label = data and data.display or k\n\t\tlocal category1, category2\n\t\t\n\t\tif not nocat and data then\n\t\t\tif data.regional_categories then\n\
      \t\t\t\tfor j, cat in ipairs(data.regional_categories) do\n\t\t\t\t\tcategory1 = cat .. ' ' .. lang:getCanonicalName()\n\t\t\t\tend\n\t\t\tend\n\t\t\n\t\t\tif data.plain_categories then\n\t\t\t\tfor j, cat in ipairs(data.plain_categories) do\n\t\t\t\t\t\
      category2 = cat\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\ttable.insert(froms, label)\n\t\ttable.insert(categories, category1)\n\t\ttable.insert(categories, category2)\n\t\ti = i + 1\n\t\tif i &gt; limit then\n\t\t\tbreak\t\n\t\tend\n\t\tkey = 'from' .. i\n\
      \tend\n\t\n\tcategories = require(\"Module:utilities\").format_categories(categories, lang)\n\t\n\tif #froms == 0 then\n\t\treturn frame.args.default\n\tend\n\t\n\tif #froms == 2 then\n\t\treturn froms[1] .. \" and \" .. froms[2] .. categories\n\tend\n\
      \t\n\tlocal results = {}\n\tfor i, item in ipairs(froms) do\n\t\tif i == 1 then\n\t\t\t-- nothing\n\t\telseif i == #froms then\n\t\t\ttable.insert(results, '&lt;span class=\"serial-comma\"&gt;,&lt;/span&gt; &lt;span class=\"serial-and\"&gt; and&lt;/span&gt;\
      \ ')\n\t\telse\n\t\t\ttable.insert(results, ', ')\n\t\tend\n\t\t\n\t\ttable.insert(results, item)\n\tend\n\treturn table.concat(results) .. categories\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:01.085Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=36172 t=1555362360994040
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:01 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 595341651, 722754461, 699109354
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4073701\" pageid=\"4073701\" ns=\"828\" title=\"Module:labels\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-12-13T07:19:15Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"perhaps better: hide duplicate label only if it has categories; that will exclude the previously mentioned &quot;labels&quot;\" xml:space=\"preserve\">local m_labeldata = mw.loadData(\"Module:labels/data\"\
      )\nlocal m_utilities = require(\"Module:utilities\")\nlocal m_links = require(\"Module:links\")\n\nlocal export = {}\n\nlocal function show_categories(data, lang, script, sort_key, script2, sort_key2, term_mode)\n\tlocal categories = {}\n\tlocal categories2\
      \ = {}\n\t\n\tlocal lang_code = lang:getCode()\n\tlocal canonical_name = lang:getCanonicalName()\n\t\n\tlocal topical_categories = data.topical_categories or {}\n\tlocal sense_categories = data.sense_categories or {}\n\tlocal pos_categories = data.pos_categories\
      \ or {}\n\tlocal regional_categories = data.regional_categories or {}\n\tlocal plain_categories = data.plain_categories or {}\n\t\n\tfor i, cat in ipairs(topical_categories) do\n\t\ttable.insert(categories, lang_code .. \":\" .. cat)\n\t\t\n\t\tif script\
      \ then\n\t\t\ttable.insert(categories, lang_code .. \":\" .. cat .. \" in \" .. script .. \" script\")\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, lang_code .. \":\" .. cat .. \" in \" .. script2 .. \" script\")\n\t\tend\n\tend\n\
      \t\n\tfor i, cat in ipairs(sense_categories) do\n\t\tcat = (term_mode and cat .. \" terms\" ) or \"terms with \" .. cat .. \" senses\"\n\t\ttable.insert(categories, canonical_name .. \" \" .. cat)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories,\
      \ canonical_name .. \" \" .. cat .. \" in \" .. script .. \" script\")\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, canonical_name .. \" \" .. cat .. \" in \" .. script2 .. \" script\")\n\t\tend\n\tend\n\n\tfor i, cat in ipairs(pos_categories)\
      \ do\n\t\ttable.insert(categories, canonical_name .. \" \" .. cat)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories, canonical_name .. \" \" .. cat .. \" in \" .. script .. \" script\")\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2,\
      \ canonical_name .. \" \" .. cat .. \" in \" .. script2 .. \" script\")\n\t\tend\n\tend\n\t\n\tfor i, cat in ipairs(regional_categories) do\n\t\ttable.insert(categories, cat .. \" \" .. canonical_name)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories,\
      \ cat .. \" \" .. canonical_name .. \" in \" .. script .. \" script\")\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, cat .. \" \" .. canonical_name .. \" in \" .. script2 .. \" script\")\n\t\tend\n\tend\n\t\n\tfor i, cat in ipairs(plain_categories)\
      \ do\n\t\ttable.insert(categories, cat)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories, cat .. \" in \" .. script .. \" script\")\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, cat .. \" in \" .. script2 .. \" script\")\n\
      \t\tend\n\tend\n\t\n\treturn\tm_utilities.format_categories(categories, lang, sort_key) ..\n\t\t\tm_utilities.format_categories(categories2, lang, sort_key2)\nend\n\nfunction export.show_labels(labels, lang, script, script2, sort_key, sort_key2, nocat,\
      \ term_mode)\n\tif not labels[1] then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tlabels = {\"example\"}\n\t\telse\n\t\t\terror(\"You must specify at least one label.\")\n\t\tend\n\tend\n\t\n\t-- Show the labels\n\tlocal omit_preComma\
      \ = false\n\tlocal omit_postComma = true\n\tlocal omit_preSpace = false\n\tlocal omit_postSpace = true\n\t\n\tlocal lang_code = lang:getCode()\n\tlocal canonical_name = lang:getCanonicalName()\n\t\n\tlocal alias\n\tlocal already_seen = {}\n\t\n\tfor i,\
      \ label in ipairs(labels) do\n\t\tomit_preComma = omit_postComma\n\t\tomit_postComma = false\n\t\tomit_preSpace = omit_postSpace\n\t\tomit_postSpace = false\n\t\t\n\t\tlocal deprecated = false\n\t\tif m_labeldata.deprecated[label] then\n\t\t\tdeprecated\
      \ = true\n\t\tend\n\t\tif m_labeldata.aliases[label] then\n\t\t\talias = label\n\t\t\tlabel = m_labeldata.aliases[label]\n\t\tend\n\t\tif m_labeldata.deprecated[label] then\n\t\t\tdeprecated = true\n\t\tend\n\t\t\n\t\tlocal data = m_labeldata.labels[label]\
      \ or {}\n\t\t\n\t\tif data.track then\n\t\t\trequire(\"Module:debug\").track(\"labels/label/\" .. label)\n\t\tend\n\t\t\n\t\t--[=[\n\t\t\tDo not use the data in the table if the current language\n\t\t\tis not in the \"languages\" list.\n\t\t\t\n\t\t\t\
      If the original label was an alias, and was redirected to a label\n\t\t\twith a data file, go back to the original label.\n\t\t\t\n\t\t\tFor example, suppose the label \"Rome\" is used with the language code \"en\" (English).\n\t\t\t\"Rome\" redirects\
      \ to \"Romanesco\" in [[Module:labels/data/regional]].\n\t\t\tThe only language in the \"languages\" list is \"it\" (Italian).\n\t\t\tBecause the language code provided to the template was not \"it\",\n\t\t\tthe label's data file will not be used,\n\t\t\
      \tand the label will display as \"Rome\".\n\t\t\t\n\t\t\ttracking:\t[[Special:WhatLinksHere/Template:tracking/labels/incorrect-language]]\n\t\t\t\t\t\t[[Special:WhatLinksHere/Template:tracking/labels/redirect-undone]]\n\t\t]=]\n\t\tlocal languages = data.languages\n\
      \t\tif languages and not languages[lang_code] then\n\t\t\trequire(\"Module:debug\").track(\"labels/incorrect-language\")\n\t\t\tmw.log(\"incorrect language in label template \" .. lang_code .. \":\" .. label)\n\t\t\t\n\t\t\tif alias and label ~= alias\
      \ then\n\t\t\t\trequire(\"Module:debug\").track(\"labels/redirect-undone\")\n\t\t\t\tmw.log(\"redirect undone in label template \" .. lang_code .. \":\" .. label .. \" &gt; \" .. alias)\n\t\t\t\tlabel = alias\n\t\t\tend\n\t\t\t\n\t\t\tdata = {}\n\t\tend\n\
      \t\t\n\t\tif data.special_display then\n\t\t\tlocal function add_language_name(str)\n\t\t\t\tif str == \"canonical_name\" then\n\t\t\t\t\treturn canonical_name\n\t\t\t\telse\n\t\t\t\t\treturn \"\"\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tlabel = mw.ustring.gsub(data.special_display,\
      \ \"&lt;([^&gt;]+)&gt;\", add_language_name)\n\t\telse\n\t\t\t--[[\n\t\t\t\tIf data.glossary or data.Wikipedia are set to true, there is a glossary definition\n\t\t\t\twith an anchor identical to the label, or a Wikipedia article with a title\n\t\t\t\t\
      identical to the label.\n\t\t\t\t\tFor example, the code\n\t\t\t\t\t\tlabels[\"formal\"] = {\n\t\t\t\t\t\t\tglossary = true,\n\t\t\t\t\t\t}\n\t\t\t\t\tindicates that there is a glossary entry for \"formal\".\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\tOtherwise, data.glossary\
      \ and data.Wikipedia specify the title or the anchor.\n\t\t\t]]\n\t\t\tif data.glossary then\n\t\t\t\tlocal glossary_entry = type(data.glossary) == \"string\" and data.glossary or label\n\t\t\t\tlabel = \"[[Appendix:Glossary#\" .. glossary_entry .. \"\
      |\" .. ( data.display or label ) .. \"]]\"\n\t\t\telseif data.Wikipedia then\n\t\t\t\tWikipedia_entry = type(data.Wikipedia) == \"string\" and data.Wikipedia or label\n\t\t\t\tlabel = \"[[w:\" .. Wikipedia_entry .. \"|\" .. ( data.display or label ) ..\
      \ \"]]\"\n\t\t\telse\n\t\t\t\tlabel = data.display or label\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal omit_comma = omit_preComma or data.omit_preComma\n\t\tomit_postComma = data.omit_postComma\n\t\tlocal omit_space = omit_preSpace or data.omit_preSpace\n\t\t\
      omit_postSpace = data.omit_postSpace\n\t\t\n\t\tif deprecated then\n\t\t\tlabel = '&lt;span class=\"deprecated-label\"&gt;' .. label .. '&lt;/span&gt;'\n\t\t\tif not nocat then\n\t\t\t\tlabel = label .. m_utilities.format_categories({ \"Entries with deprecated\
      \ labels\" }, lang)\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal label_without_comma_or_space =\n\t\t\t(data.topical_categories or data.regional_categories\n\t\t\tor data.plain_categories or data.pos_categories\n\t\t\tor data.sense_categories) and label\n\t\t\t\
      or nil\n\t\t\n\t\tlabel = (omit_comma and \"\" or '&lt;span class=\"ib-comma\"&gt;,&lt;/span&gt;') ..\n\t\t\t\t(omit_space and \"\" or \"&amp;#32;\") ..\n\t\t\t\tlabel\n\t\t\n\t\t-- Track label text. If label text was previously used, don't show it,\n\t\
      \t-- but include the categories.\n\t\t-- For an example, see [[hypocretin]].\n\t\tif already_seen[label_without_comma_or_space] then\n\t\t\tlabels[i] = nocat and \"\" or\n\t\t\t\tshow_categories(data, lang, script, sort_key, script2, sort_key2, term_mode)\n\
      \t\telse\n\t\t\tlabels[i] = label .. (\n\t\t\t\tnocat and \"\" or\n\t\t\t\tshow_categories(data, lang, script, sort_key, script2, sort_key2, term_mode)\n\t\t\t)\n\t\tend\n\t\t\n\t\tif label_without_comma_or_space then\n\t\t\talready_seen[label_without_comma_or_space]\
      \ = true\n\t\tend\n\tend\n\t\n\treturn\n\t\t\"&lt;span class=\\\"ib-brac\\\"&gt;(&lt;/span&gt;&lt;span class=\\\"ib-content\\\"&gt;\" ..\n\t\ttable.concat(labels, \"\") ..\n\t\t\"&lt;/span&gt;&lt;span class=\\\"ib-brac\\\"&gt;)&lt;/span&gt;\"\nend\n\n\
      return export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:01.277Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38284 t=1555362361161821
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:01 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1228.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 917656116, 552820074, 683798801
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4077514\" pageid=\"4077514\" ns=\"828\" title=\"Module:labels/data\"><revisions><rev user=\"Mnemosientje\" timestamp=\"2019-04-10T19:23:30Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Reverted edits by [[Special:Contributions/User123o987name|User123o987name]]. If you think this rollback is in error, please leave a message on my talk page.\" xml:space=\"preserve\">local\
      \ labels = {}\nlocal aliases = {}\nlocal deprecated = {}\nlocal replacements = {\n\tlabels = {},\n\taliases = {},\n\tdeprecated = {},\n}\n\n\n--  Helper labels\n\nlabels['_'] = {\n\tdisplay = '',\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\n\n\
      labels['also'] = {\n\tomit_postComma = true,\n}\n\nlabels['and'] = {\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\naliases['&amp;'] = 'and'\n\nlabels['or'] = {\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\n\nlabels[';'] = {\n\tomit_preComma\
      \ = true,\n\tomit_postComma = true,\n\tomit_preSpace = true,\n}\n\n-- combine with 'except in', 'outside'? or retain for entries like \"wnuczę\"?\nlabels['except'] = {\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\n\nlabels['outside'] = {\n\tomit_preComma\
      \ = true,\n\tomit_postComma = true,\n}\naliases['except in'] = 'outside'\n\n-- Qualifier labels\n\nlabels['chiefly'] = {\n\tomit_postComma = true,\n}\naliases['mainly'] = 'chiefly'\naliases['mostly'] = 'chiefly'\naliases['primarily'] = 'chiefly'\n\nlabels['especially']\
      \ = {\n\tomit_postComma = true,\n}\n\nlabels['particularly'] = {\n\tomit_postComma = true,\n}\n\nlabels['excluding'] = {\n\tomit_postComma = true,\n}\n\nlabels['extremely'] = {\n\tomit_postComma = true,\n}\n\nlabels['frequently'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['humorously'] = { omit_postComma = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"jocular terms\" },\n}\n\nlabels['including'] = {\n\tomit_postComma = true,\n\
      }\n\nlabels['many'] = {\n\tomit_postComma = true,\n} -- e.g. \"many dialects\"\n\nlabels['markedly'] = {\n\tomit_postComma = true,\n}\n\nlabels['mildly'] = {\n\tomit_postComma = true,\n}\n\nlabels['now'] = {\n\tomit_postComma = true,\n}\naliases['nowadays']\
      \ = 'now'\n\nlabels['of'] = {\n\tomit_postComma = true,\n}\n\nlabels['of a'] = {\n\tomit_postComma = true,\n}\n\nlabels['of an'] = {\n\tomit_postComma = true,\n}\n\nlabels['often'] = {\n\tomit_postComma = true,\n}\n\nlabels['originally'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['possibly'] = {\n\tomit_postComma = true,\n}\n-- aliases['perhaps'] = 'possibly'\n\nlabels['rarely'] = {\n\tomit_postComma = true,\n}\n\nlabels['slightly'] = {\n\tomit_postComma = true,\n}\n\nlabels['sometimes'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['somewhat'] = {\n\tomit_postComma = true,\n}\n\nlabels['strongly'] = {\n\tomit_postComma = true,\n}\n\nlabels['then'] = {\n\tomit_postComma = true,\n} -- e.g. \"then colloquial, now dated\"\n\nlabels['typically'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['usually'] = {\n\tomit_postComma = true,\n}\n\nlabels['very'] = {\n\tomit_postComma = true,\n}\n\n\n-- Grammatical labels\n\nlabels[\"abbreviation\"] = {\n\tdisplay = \"[[abbreviation]]\",\n\tpos_categories = { \"abbreviations\"\
      \ },\n}\n\nlabels[\"acronym\"] = {\n\tdisplay = \"[[acronym]]\",\n\tpos_categories = { \"acronyms\" },\n}\n\nlabels[\"active\"] = {\n\tWikipedia = \"Active voice\",\n}\naliases[\"active voice\"] = \"active\"\naliases[\"in the active\"] = \"active\"\n\n\
      labels[\"ambitransitive\"] = {\n\tdisplay = \"[[transitive]], [[intransitive]]\",\n\tpos_categories = { \"transitive verbs\", \"intransitive verbs\" },\n}\n\nlabels[\"archaic-verb-form\"] = {\n\tglossary = \"archaic\",\n\tpos_categories = { \"archaic verb\
      \ forms\" },\n}\n\nlabels[\"attributive\"] = {\n\tdisplay = \"[[Appendix:English nouns#Attributive|attributive]]\",\n}\n\nlabels[\"attributively\"] = {\n\tdisplay = \"[[Appendix:English nouns#Attributive|attributively]]\",\n}\n\nlabels[\"auxiliary\"] =\
      \ {\n\tglossary = true,\n\tpos_categories = { \"auxiliary verbs\" }\n}\n\nlabels[\"by ellipsis\"] = {\n\tdisplay = \"by [[ellipsis]]\",\n\tpos_categories = { \"ellipses\" },\n}\n\nlabels[\"by extension\"] = {}\n\nlabels[\"cardinal\"] = {\n\tdisplay = \"\
      [[cardinal number|cardinal]]\",\n\tpos_categories = { \"cardinal numbers\" },\n}\ndeprecated[\"cardinal\"] = true\n\nlabels[\"causative\"] = {\n\tdisplay = \"[[causative]]\" }\n\nlabels[\"cognate object\"] = {\n\tdisplay = \"with [[w:Cognate object|cognate\
      \ object]]\",\n\tpos_categories = { \"verbs used with cognate objects\" },\n}\naliases[\"with cognate object\"] = \"cognate object\"\n\nlabels[\"collective\"] = {\n\tglossary = true,\n\tdisplay = \"collective\",\n\tpos_categories = { \"collective nouns\"\
      \ },\n}\n\nlabels[\"collectively\"] = {\n\tdisplay = \"collectively\",\n\tpos_categories = { \"collective nouns\" },\n}\n\nlabels[\"control verb\"] = {\n\tWikipedia = true,\n\tpos_categories = { \"control verbs\" },\n}\naliases[\"control\"] = \"control\
      \ verb\"\n\nlabels[\"common\"] = {\n\tglossary = true\n}\n\nlabels[\"comparable\"] = {\n\tglossary = true\n}\n\nlabels[\"copulative\"] = {\n\tdisplay = \"[[copular verb|copulative]]\",\n\tpos_categories = { \"copulative verbs\" },\n}\naliases[\"copular\"\
      ] = \"copulative\"\n\nlabels[\"countable\"] = {\n\tglossary = true,\n\tpos_categories = { \"countable nouns\" },\n}\n\nlabels[\"ditransitive\"] = {\n\tglossary = true,\n\tpos_categories = { \"ditransitive verbs\" },\n}\n\nlabels[\"dysphemistic\"] = {\n\
      \twikipedia = \"Dysphemism\",\n\tpos_categories = { \"dysphemisms\" },\n}\naliases[\"dysphemism\"] = \"dysphemistic\"\n\nlabels[\"emphatic\"] = {\n\tglossary = true\n}\n\nlabels[\"ergative\"] = {\n\tglossary = true,\n\tpos_categories = { \"ergative verbs\"\
      \ },\n}\n\nlabels[\"feminine\"] = {\n\tglossary = true\n}\n\nlabels[\"focus\"] = {\n\tglossary = true,\n\tpos_categories = { \"focus adverbs\" },\n}\n\nlabels[\"fractional\"] = {\n\tpos_categories = { \"fractional numbers\" },\n}\n\nlabels[\"hedge\"] =\
      \ {\n\tglossary = true,\n\tpos_categories = { \"hedges\" },\n}\naliases[\"hedges\"] = \"hedge\"\n\nlabels[\"ideophonic\"] = {\n\tglossary = true,\n}\naliases[\"ideophone\"] = \"ideophonic\"\n\nlabels[\"idiomatic\"] = {\n\tglossary = true,\n\tpos_categories\
      \ = { \"idioms\" },\n}\naliases[\"idiom\"] = \"idiomatic\"\n\nlabels[\"impersonal\"] = {\n\tglossary = true,\n\tpos_categories = { \"impersonal verbs\" },\n}\n\nlabels[\"in the singular\"] = {\n\tdisplay = \"in the [[singular]]\",\n}\naliases[\"in singular\"\
      ] = \"in the singular\"\n\nlabels[\"in the dual\"] = {\n\tdisplay = \"in the [[dual]]\",\n}\naliases[\"in dual\"] = \"in the dual\"\n\nlabels[\"in the plural\"] = {\n\tdisplay = \"in the [[Appendix:Glossary#plural|plural]]\",\n}\naliases[\"in plural\"\
      ] = \"in the plural\"\n\nlabels[\"in the mediopassive\"] = {\n\tdisplay = \"in the [[mediopassive]]\" }\naliases[\"in mediopassive\"] = \"in the mediopassive\"\naliases[\"mediopassive\"] = \"in the mediopassive\"\n\nlabels[\"inanimate\"] = {\n\tglossary\
      \ = true\n}\n\naliases[\"indef\"] = \"indefinite\"\n\nlabels[\"initialism\"] = {\n\tdisplay = \"[[initialism]]\",\n\tpos_categories = { \"initialisms\" },\n}\n\nlabels[\"intransitive\"] = {\n\tglossary = true,\n\tpos_categories = { \"intransitive verbs\"\
      \ },\n}\n\n-- Japanese inflecting suffixes\nlabels[\"jodōshi\"] = {\n\tdisplay = \"[[助動詞#Japanese|jodōshi]]\",\n\tpos_categories = { \"auxiliary verbs in traditional grammar\" },\n}\n\naliases[\"jodoshi\"] = \"jodōshi\"\naliases[\"jodoushi\"] = \"jodō\
      shi\"\n\nlabels[\"not comparable\"] = {\n\tdisplay = \"[[Appendix:Glossary#uncomparable|not comparable]]\"\n}\naliases[\"notcomp\"] = \"not comparable\"\naliases[\"uncomparable\"] = \"not comparable\"\n\nlabels[\"masculine\"] = {\n\tglossary = true\n}\n\
      \nlabels[\"middle\"] = {\n\tWikipedia = \"Voice (grammar)#Middle\",\n}\naliases[\"middle voice\"] = \"middle\"\naliases[\"in the middle\"] = \"middle\"\naliases[\"in the middle voice\"] = \"middle\"\n\nlabels[\"mnemonic\"] = {\n\tdisplay = '[[mnemonic]]',\n\
      \tpos_categories = { \"mnemonics\" },\n}\n\nlabels[\"neuter\"] = {\n\tglossary = true\n}\n\nlabels[\"onomatopoeia\"] = {\n\tdisplay = \"[[onomatopoeia]]\",\n\tpos_categories = { \"onomatopoeias\" },\n}\n\nlabels[\"ordinal\"] = {\n\tpos_categories = { \"\
      ordinal numbers\" },\n}\ndeprecated[\"ordinal\"] = true\n\ndeprecated[\"plural\"] = true\n\nlabels[\"passive\"] = {\n\tWikipedia = \"Passive voice\",\n}\naliases[\"passive voice\"] = \"passive\"\naliases[\"in the passive\"] = \"passive\"\n\nlabels[\"plural\
      \ only\"] = {\n\tpos_categories = { \"pluralia tantum\" },\n}\naliases[\"pluralonly\"] = \"plural only\"\naliases[\"plurale tantum\"] = \"plural only\"\n\nlabels[\"possessive pronoun\"] = {\n\tdisplay = \"possessive\",\n\tpos_categories = { \"possessive\
      \ pronouns\" },\n}\n\nlabels[\"postpositive\"] = {\n\tglossary = true\n}\n\nlabels[\"productive\"] = {\n\tdisplay = \"[[productive]]\" }\n\n-- TODO: This label is probably inappropriate for many languages\nlabels[\"pronominal\"] = {\n\tdisplay = \"takes\
      \ a [[Appendix:Glossary#reflexive|reflexive pronoun]]\",\n}\n\nlabels[\"pro-verb\"] = {\n\tWikipedia = true\n}\n\nlabels[\"reciprocal\"] = {\n\tdisplay = \"[[Appendix:Glossary#reciprocal|reciprocal]]\",\n\tpos_categories = { \"reciprocal verbs\" },\n}\n\
      \nlabels[\"reflexive\"] = {\n\tdisplay = \"[[Appendix:Glossary#reflexive|reflexive]]\",\n\tpos_categories = { \"reflexive verbs\" },\n}\n\nlabels[\"reflexive pronoun\"] = {\n\tdisplay = \"[[Appendix:Glossary#reflexive|reflexive]]\",\n\tpos_categories =\
      \ { \"reflexive pronouns\" }\n}\n\nlabels[\"relational\"] = {\n\tdisplay = \"[[Appendix:Glossary#relational|relational]]\",\n\tpos_categories = { \"relational adjectives\" },\n}\n\nlabels[\"rhetorical question\"] = {\n\tglossary = true,\n\tpos_categories\
      \ = { \"rhetorical questions\" },\n}\n\nlabels[\"set phrase\"] = {\n\tdisplay = \"[[set phrase]]\" }\n\nlabels[\"simile\"] = {\n\tglossary = true,\n\tpos_categories = { \"similes\" },\n}\n\ndeprecated[\"singular\"] = true\n\nlabels[\"singular only\"] =\
      \ {\n\tdisplay = \"singular only\",\n\tpos_categories = { \"singularia tantum\" },\n}\naliases[\"singulare tantum\"] = \"singular only\"\naliases[\"no plural\"] = \"singular only\"\n\nlabels[\"snowclone\"] = {\n\tglossary = true,\n\tpos_categories = {\
      \ \"snowclones\" },\n}\n\nlabels[\"stative\"] = {\n\tWikipedia = \"stative verb\",\n\tpos_categories = { \"stative verbs\" },\n}\naliases[\"stative verb\"] = \"stative\"\n\nlabels[\"substantive\"] = {\n\ttrack = true\n}\n\nlabels[\"transitive\"] = {\n\t\
      glossary = true,\n\tpos_categories = { \"transitive verbs\" },\n}\n\nlabels[\"unaccusative\"] = {\n\tWikipedia = \"Unaccusative verb\",\n}\n\nlabels[\"uncountable\"] = {\n\tglossary = true,\n\tpos_categories = { \"uncountable nouns\" },\n}\n\nlabels[\"\
      unergative\"] = {\n\tWikipedia = \"Unergative verb\",\n}\n\nlabels[\"usually plural\"] = {\n\tdisplay = \"usually in the [[plural]]\",\n}\naliases[\"usually in the plural\"] = \"usually plural\"\naliases[\"usually in plural\"] = \"usually plural\"\n\n\n\
      -- Usage labels\n\nlabels[\"ACG\"] = {\n\tdisplay = \"[[ACG]]\",\n\t-- see also \"fandom slang\"\n\tpos_categories = { \"fandom slang\" },\n}\n\nlabels[\"advertising slang\"] = {\n\tpos_categories = { \"advertising slang\" },\n}\naliases[\"ad slang\"]\
      \ = \"advertising slang\"\naliases[\"cosmo\"] = \"advertising slang\"\n\nlabels[\"affectionate\"] = {\n\tdisplay = \"[[affectionate]]\",\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"affectionate\
      \ terms\" },\n}\naliases[\"endearing\"] = \"affectionate\"\n\nlabels[\"pre-classical\"] = {\n\tdisplay = \"pre-classical\",\n\tregional_categories = { \"Pre-classical\" },\n}\naliases[\"ante-classical\"] = \"pre-classical\"\n\nlabels[\"archaic\"] = {\n\
      \tglossary = true,\n\tsense_categories = { \"archaic\" },\n}\n\nlabels[\"Australian slang\"] = {\n\tregional_categories = { \"Australian\" },\n\tplain_categories = { \"Australian slang\" },\n}\n\nlabels[\"avoidance\"] = {\n\tglossary = true\n}\n\nlabels[\"\
      back slang\"] = {\n\tdisplay = \"[[Appendix:Glossary#backslang|back slang]]\",\n\tpos_categories = { \"back slang\" },\n}\naliases[\"backslang\"] = \"back slang\"\naliases[\"back-slang\"] = \"back slang\"\n\nlabels[\"Bargoens\"] = {\n\tWikipedia = true,\n\
      \tplain_categories = { \"Bargoens\" },\n}\n\nlabels[\"Braille\"] = {\n\tWikipedia = true,\n}\n\nlabels[\"British slang\"] = {\n\tplain_categories = { \"British slang\" },\n}\naliases[\"UK slang\"] = \"British slang\"\n\nlabels[\"buzzword\"] = {\n\tdisplay\
      \ = \"[[buzzword]]\",\n\tpos_categories = { \"buzzwords\" },\n}\n\nlabels[\"Cambridge University slang\"] = {\n\tplain_categories = { \"Cambridge University slang\" },\n}\naliases[\"Cambridge University\"] = \"Cambridge University slang\"\n\nlabels[\"\
      cant\"] = {\n\tdisplay = \"[[cant]]\",\n\tpos_categories = { \"cant\" },\n}\naliases[\"argot\"] = \"cant\"\naliases[\"cryptolect\"] = \"cant\"\n\nlabels[\"capitalized\"] = {\n\tdisplay = \"[[capitalisation|capitalized]]\" }\n\nlabels[\"childish\"] = {\n\
      \tdisplay = \"[[childish]]\",\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"childish terms\" },\n}\naliases[\"baby talk\"] = \"childish\"\naliases[\"child language\"] = \"childish\"\n\nlabels[\"\
      chu Nom\"] = {\n\tdisplay = \"[[Vietnamese]] [[chữ Nôm]]\",\n\tplain_categories = { \"Vietnamese Han tu\" },\n}\n\nlabels[\"Classic 1811 Dictionary of the i Tongue\"] = {\n\tdisplay = \"[[Appendix:Glossary#archaic|archaic]], [[Appendix:Glossary#slang|slang]]\"\
      ,\n\tplain_categories = { \"Classic 1811 Dictionary of the Vulgar Tongue\" },\n}\naliases[\"1811\"] = \"Classic 1811 Dictionary of the Vulgar Tongue\"\n\nlabels[\"Cockney rhyming slang\"] = {\n\tdisplay = \"[[Cockney rhyming slang]]\",\n\tplain_categories\
      \ = { \"Cockney rhyming slang\" },\n}\n\nlabels[\"colloquial\"] = {\n\tglossary = true,\n\tpos_categories = { \"colloquialisms\" },\n}\naliases[\"colloquially\"] = \"colloquial\"\n\nlabels[\"colloquial-um\"] = {\n\tglossary = \"colloquial\",\n\tpos_categories\
      \ = { \"colloquialisms containing sequence um\" },\n}\n\nlabels[\"colloquial-un\"] = {\n\tglossary = \"colloquial\",\n\tpos_categories = { \"colloquialisms containing sequence un\" },\n}\n\nlabels[\"costermongers\"] = {\n\tdisplay = \"[[Appendix:Costermongers'\
      \ back slang|costermongers]]\",\n\tplain_categories = { \"Costermongers' back slang\" },\n}\naliases[\"coster\"] = \"costermongers\"\naliases[\"costers\"] = \"costermongers\"\naliases[\"costermonger\"] = \"costermongers\"\naliases[\"costermongers back\
      \ slang\"] = \"costermongers\"\naliases[\"costermongers' back slang\"] = \"costermongers\"\n\nlabels[\"dated\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"dated\
      \ terms\" },\n}\n\nlabels[\"dated form\"] = {\n\tglossary = \"dated\",\n\tpos_categories = { \"dated forms\" },\n}\n\nlabels[\"dated sense\"] = {\n\tglossary = \"dated\",\n\tsense_categories = { \"dated\" },\n} -- combine with previous\n\n\nlabels[\"derogatory\"\
      ] = {\n\tdisplay = \"[[derogatory]]\",\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"derogatory terms\" },\n}\naliases[\"pejorative\"] = \"derogatory\"\naliases[\"disparaging\"] = \"derogatory\"\
      \n\nlabels[\"dialectal\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"dialectal terms\" },\n}\naliases[\"dialect\"] = \"dialectal\"\naliases[\"dialects\"] = \"dialectal\"\
      \n\nlabels[\"dismissal\"] = {\n\tdisplay = \"[[dismissal]]\",\n\tpos_categories = { \"dismissals\" },\n}\n\nlabels[\"ethnic slur\"] = {\n\tdisplay = \"[[ethnic]] [[slur]]\",\n\tpos_categories = { \"ethnic slurs\" },\n}\naliases[\"racial slur\"] = \"ethnic\
      \ slur\"\n\nlabels[\"euphemistic\"] = {\n\tglossary = \"euphemism\",\n\tpos_categories = { \"euphemisms\" },\n}\naliases[\"euphemism\"] = \"euphemistic\"\n\nlabels[\"eye dialect\"] = {\n\tpos_categories = { \"eye dialect\" },\n}\n\nlabels[\"familiar\"\
      ] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"familiar terms\" },\n}\n\nlabels[\"fandom slang\"] = {\n\tpos_categories = { \"fandom slang\" },\n}\naliases[\"fandom\"\
      ] = \"fandom slang\"\n\nlabels[\"figuratively\"] = {\n\tglossary = \"figurative\" }\naliases[\"figurative\"] = \"figuratively\"\naliases[\"metaphorically\"] = \"figuratively\"\naliases[\"metaphorical\"] = \"figuratively\"\naliases[\"metaphor\"] = \"figuratively\"\
      \n\nlabels[\"folk poetic\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"folk poetic terms\", \"poetic terms\" },\n}\n\nlabels[\"formal\"] = {\n\tglossary = true,\n\t-- should be \"terms\
      \ with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"formal terms\" },\n}\n\nlabels[\"gay slang\"] = {\n\tpos_categories = { \"gay slang\" },\n}\n\nlabels['hapax legomenon'] = {\n\tdisplay = \"hapax legomenon\",\n\t\
      pos_categories = { \"hapax legomena\" },\n\tglossary = true,\n}\n\nlabels[\"historical\"] = {\n\tglossary = true,\n\tsense_categories = { \"historical\" },\n}\naliases[\"historic\"] = \"historical\"\naliases[\"history\"] = \"historical\"\n\nlabels[\"non-native\
      \ speakers\"] = {\n\tdisplay = \"[[non-native speaker]]s\", -- so it can be preceded by \"used by\", \"an error by children and\", etc\n\tregional_categories = { \"Non-native speakers'\" },\n}\naliases[\"NNES\"] = \"non-native speakers\"\naliases[\"NNS\"\
      ] = \"non-native speakers\"\n\n-- used exclusively by languages that use the “Jpan” script code\nlabels[\"historical hiragana\"] = {\n\tpos_categories = { \"historical hiragana\" },\n}\n\n-- used exclusively by languages that use the “Jpan” script code\n\
      labels[\"historical katakana\"] = {\n\tpos_categories = { \"historical katakana\" },\n}\n\n-- applies to Japanese and Korean, etc., please do not confuse with \"polite\"\nlabels[\"honorific\"] = {\n\tWikipedia = \"Honorifics (linguistics)\",\n\t-- should\
      \ be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"honorific terms\" },\n}\n\n-- for Ancient Greek\nlabels['Homeric epithet'] = {\n  display = \"[[Homeric Greek|Homeric]] [[w:Homeric epithets|epithet]]\"\
      ,\n  plain_categories = { \"Epic Ancient Greek\" },\n  omit_postComma = true,\n}\n\n-- applies to Japanese and Korean, etc.\nlabels[\"humble\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tdisplay = \"[[humble]]\"\
      ,\n\tpos_categories = { \"humble terms\" },\n}\n\nlabels[\"humorous\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp; NB and cf a similar \"jocular\" label further up on this page\n\tdisplay = \"[[humorous]]\"\
      ,\n\tpos_categories = { \"jocular terms\" },\n}\naliases[\"jocular\"] = \"humorous\"\n\nlabels[\"hyperbolic\"] = {\n\tpos_categories = { \"hyperboles\" },\n}\naliases[\"hyperbole\"] = \"hyperbolic\"\n\nlabels[\"hypercorrect\"] = {\n\tglossary = true,\n\
      \tpos_categories = { \"hypercorrections\" },\n}\n\nlabels[\"hyperforeign\"] = {\n\tglossary = true,\n\tpos_categories = { \"hyperforeign terms\" },\n}\n\nlabels[\"informal\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X\
      \ terms\" to the term-context temp\n\tpos_categories = { \"informal terms\" },\n}\naliases[\"informally\"] = \"informal\"\n\nlabels[\"Internet slang\"] = {\n\tdisplay = \"[[Internet]] [[slang]]\",\n\tpos_categories = { \"internet slang\" },\n}\n\naliases[\"\
      internet slang\"] = \"Internet slang\"\n\nlabels[\"IRC\"] = {\n\tdisplay = \"[[IRC]]\",\n\tpos_categories = { \"internet slang\" },\n}\n\nlabels[\"ironic\"] = {}\n\nlabels[\"leet\"] = {\n\tdisplay = \"[[leetspeak]]\",\n\tpos_categories = { \"leet\" },\n\
      }\naliases[\"leetspeak\"] = \"leet\"\n\nlabels['literally'] = {\n\tglossary = \"literally\" }\naliases['literal'] = 'literally'\n\nlabels[\"literary\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tglossary\
      \ = true,\n\tpos_categories = { \"literary terms\" },\n}\naliases[\"bookish\"] = \"literary\"\n\nlabels[\"loosely\"] = {\n\tglossary = true\n}\n\nlabels[\"Lubunyaca\"] = {\n\tdisplay = \"[[Lubunyaca]]\",\n\tpos_categories = { \"Lubunyaca\" },\n}\n\nlabels[\"\
      medical slang\"] = {\n\tdisplay = \"[[medical]] [[slang]]\",\n\tpos_categories = { \"medical slang\" },\n}\n\n-- for Awetí, Karajá, etc., where men and women use different words\nlabels[\"men's speech\"] = {\n\tglossary = \"men's speech\",\n\tpos_categories\
      \ = { \"men's speech terms\" },\n}\naliases[\"male speech\"] = \"men's speech\"\n\nlabels[\"metonymically\"] = {\n\tglossary = true,\n\tpos_categories = { \"metonyms\" },\n}\naliases[\"metonymic\"] = \"metonymically\"\naliases[\"metonymy\"] = \"metonymically\"\
      \naliases[\"metonym\"] = \"metonymically\"\n\nlabels[\"military slang\"] = {\n\tpos_categories = { \"military slang\" },\n}\n\nlabels[\"minced oath\"] = {\n\tdisplay = \"[[minced oath]]\",\n\tpos_categories = { \"euphemisms\" },\n}\n\nlabels[\"neologism\"\
      ] = {\n\tglossary = true,\n\tpos_categories = { \"neologisms\" },\n}\naliases[\"neologistic\"] = \"neologism\"\n\nlabels[\"New Julfa\"] = {\n\tregional_categories = { \"New Julfa\" },\n}\naliases[\"Jugha\"] = \"New Julfa\"\n\nlabels[\"no longer productive\"\
      ] = {\n\tdisplay = \"no longer [[Appendix:Glossary#productive|productive]]\",\n}\n\nlabels[\"nonce word\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tdisplay = \"[[Appendix:Glossary#nonce word|nonce word]]\"\
      ,\n\tpos_categories = { \"nonce terms\" },\n}\naliases[\"nonce\"] = \"nonce word\"\n\nlabels[\"nonstandard\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"nonstandard\
      \ terms\" },\n}\naliases[\"non-standard\"] = \"nonstandard\"\n\nlabels[\"nonstandard form\"] = {\n\tglossary = \"nonstandard\",\n\tpos_categories = { \"nonstandard forms\" },\n}\n\nlabels[\"obsolete\"] = {\n\tglossary = true,\n\tsense_categories = { \"\
      obsolete\" },\n}\n\nlabels[\"obsolete term\"] = {\n\tglossary = \"obsolete\",\n\t-- combine with previous two, q.v.\n\tpos_categories = { \"obsolete terms\" },\n}\n\nlabels[\"offensive\"] = {\n\tdisplay = \"[[offensive]]\",\n\t-- should be \"terms with\
      \ X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"offensive terms\" },\n}\n\nlabels[\"officialese\"] = {\n\tdisplay = \"[[officialese]]\",\n\tpos_categories = { \"officialese terms\" },\n}\n\nlabels[\"Oxbridge slang\"]\
      \ = {\n\tdisplay = \"[[Oxbridge]] slang\",\n\tplain_categories = { \"Cambridge University slang\", \"Oxford University slang\" },\n}\naliases[\"Oxbridge\"] = \"Oxbridge slang\"\n\nlabels[\"Oxford University slang\"] = {\n\tplain_categories = { \"Oxford\
      \ University slang\" },\n}\naliases[\"Oxford University\"] = \"Oxford University slang\"\n\nlabels[\"poetic\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tdisplay = \"[[poetic]]\",\n\tpos_categories = {\
      \ \"poetic terms\" },\n}\n\nlabels[\"Polari\"] = {\n\tdisplay = \"[[Polari]]\",\n\tpos_categories = { \"Polari slang\" },\n}\n\nlabels[\"polite\"] = {\n\tpos_categories = { \"polite terms\" },\n}\n\nlabels[\"post-classical\"] = {\n\tdisplay = \"post-classical\"\
      ,\n\tregional_categories = { \"Post-classical\" },\n}\naliases[\"Post-classical\"] = \"post-classical\"\naliases[\"post-Classical\"] = \"post-classical\"\naliases[\"Post-Classical\"] = \"post-classical\"\naliases[\"Postclassical\"] = \"post-classical\"\
      \naliases[\"postclassical\"] = \"post-classical\"\n\nlabels[\"proscribed\"] = {\n\tglossary = true,\n\tpos_categories = { \"disputed terms\" },\n}\n\nlabels[\"radio slang\"] = {\n\tpos_categories = { \"radio slang\" },\n}\n\nlabels[\"rare\"] = {\n\tsense_categories\
      \ = { \"rare\" },\n}\naliases[\"rare sense\"] = \"rare\"\n\nlabels[\"rare term\"] = {\n\tdisplay = \"rare\",\n\t-- see comments about \"obsolete\"\n\tpos_categories = { \"rare terms\" },\n}\n\nlabels[\"religious slur\"] = {\n\tdisplay = \"[[religious]]\
      \ [[slur]]\",\n\tpos_categories = { \"religious slurs\" },\n}\naliases[\"sectarian slur\"] = \"religious slur\"\n\nlabels[\"retronym\"] = {\n\tdisplay = \"[[retronym]]\",\n\tpos_categories = { \"retronyms\" },\n}\n\nlabels[\"sarcastic\"] = {\n\tdisplay\
      \ = \"[[sarcastic]]\",\n\tpos_categories = { \"sarcastic terms\" },\n}\n\nlabels[\"school slang\"] = {\n\tpos_categories = { \"school slang\" },\n}\naliases[\"public school slang\"] = \"school slang\"\n\nlabels[\"slang\"] = {\n\tglossary = true,\n\tpos_categories\
      \ = { \"slang\" },\n}\n\nlabels[\"college slang\"] = {\n\tpos_categories = { \"student slang\" },\n}\naliases[\"university slang\"] = \"college slang\"\naliases[\"student slang\"] = \"college slang\"\n\nlabels[\"swear word\"] = {\n\tpos_categories = {\
      \ \"swear words\" },\n}\naliases[\"profanity\"] = \"swear word\"\naliases[\"expletive\"] = \"swear word\"\n\nlabels[\"text messaging\"] = {\n\tdisplay = \"[[text messaging]]\",\n\tpos_categories = { \"text messaging slang\" },\n}\naliases[\"texting\"]\
      \ = \"text messaging\"\n\nlabels[\"thieves' cant\"] = {\n\tWikipedia = true,\n\tplain_categories = { \"Thieves' cant\" },\n}\naliases[\"thieves cant\"] = \"thieves' cant\"\naliases[\"thieves'\"] = \"thieves' cant\"\naliases[\"thieves\"] = \"thieves' cant\"\
      \n\nlabels[\"trademark\"] = {\n\tdisplay = \"[[trademark]]\",\n\tpos_categories = { \"trademarks\" },\n}\n\nlabels[\"transferred sense\"] = {\n\tglossary = true,\n\tpos_categories = { \"terms with transferred senses\" },\n}\n\nlabels[\"transferred senses\"\
      ] = {\n\tdisplay = \"[[transferred sense#English|transferred senses]]\",\n\tpos_categories = { \"terms with transferred senses\" },\n}\n\nlabels[\"uds.\"] = {\n\tdisplay = \"[[Appendix:Spanish pronouns#Ustedes and vosotros|used formally in Spain]]\" }\n\
      \nlabels[\"uncommon\"] = {\n\tpos_categories = { \"rare forms\" },\n}\n\nlabels[\"verlan\"] = {\n\tdisplay = \"[[Appendix:Glossary#verlan|verlan]]\",\n\tplain_categories = { \"Verlan\" },\n}\n\nlabels[\"very rare\"] = {\n\tpos_categories = { \"rare forms\"\
      \ },\n}\n\nlabels[\"vulgar\"] = {\n\tglossary = true,\n\tpos_categories = { \"vulgarities\" },\n}\naliases[\"coarse\"] = \"vulgar\"\naliases[\"obscene\"] = \"vulgar\"\naliases[\"profane\"] = \"vulgar\"\n\nlabels[\"vesre\"] = {\n\tplain_categories = { \"\
      Vesre\" },\n}\n\n-- for Awetí, Karajá, etc., where men &amp; women use different words\nlabels[\"women's speech\"] = {\n\tglossary = \"women's speech\",\n\tpos_categories = { \"women's speech terms\" },\n}\naliases[\"female speech\"] = \"women's speech\"\
      \n\nlabels[\"example1\"] = {\n\tWikipedia = \"Wu Chinese\"\n}\n\nlabels[\"example2\"] = {\n\tglossary = \"palatalization\"\n}\n\n\n-- Regional labels\nlocal m_regional = require(\"Module:labels/data/regional\")\n\nfor key, val in pairs(m_regional.labels)\
      \ do\n\tlabels[key] = val\nend\n\nfor key, val in pairs(m_regional.aliases) do\n\taliases[key] = val\nend\n\nfor key, val in pairs(m_regional.deprecated) do\n\tdeprecated[key] = val\nend\n\n\n-- Topical labels\n\nlocal m_topical = require(\"Module:labels/data/topical\"\
      )\n\nfor key, val in pairs(m_topical.labels) do\n\tlabels[key] = val\nend\n\nfor key, val in pairs(m_topical.aliases) do\n\taliases[key] = val\nend\n\nfor key, val in pairs(m_topical.deprecated) do\n\tdeprecated[key] = val\nend\n\n--[[\tAdd subvariety\
      \ labels and the corresponding aliases\n\t\tand deprecated labels if they have a language code\n\t\tin the \"languages\" field.\t\t\t\t\t\t\t\t]]\nlocal m_subvarieties = require(\"Module:labels/data/subvarieties\")\n\nfor key, val in pairs(m_subvarieties.labels)\
      \ do\n\tif labels[key] then\n\t\treplacements.labels[key] = labels[key]\n\tend\n\t\n\tif val.languages then\n\t\tlabels[key] = val\n\tend\nend\n\nfor key, val in pairs(m_subvarieties.aliases) do\n\tif aliases[key] then\n\t\treplacements.aliases[key] =\
      \ aliases[key]\n\tend\n\t\n\tif labels[val] then\n\t\taliases[key] = val\n\tend\nend\n\nfor key, val in pairs(m_subvarieties.deprecated) do\n\tif deprecated[key] then\n\t\treplacements.deprecated[key] = deprecated[key]\n\tend\n\t\n\tif labels[key] then\n\
      \t\tdeprecated[key] = val\n\tend\nend\n\nreturn {\n\t[\"labels\"] = labels,\n\t[\"aliases\"] = aliases,\n\t[\"deprecated\"] = deprecated,\n\t[\"replacements\"] = replacements,\n}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:01.689Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Fregional&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=72664 t=1555362361358546
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:01 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 419242794, 648382920, 701171937
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4952140\" pageid=\"4952140\" ns=\"828\" title=\"Module:labels/data/regional\"><revisions><rev user=\"Fay Freak\" timestamp=\"2019-04-08T01:27:43Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Add Chad, Mali, Mauritania.\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\nlocal deprecated = {}\n\nlocal m_data_functions = require(\"Module:labels/data/functions\")\n\
      \n-- Generic\n\n--not sure where to put this\nlabels[\"Classical\"] = {\n\tspecial_display = \"[[Classical &lt;canonical_name&gt;]]\",\n\tregional_categories = {\"Classical\"},\n}\naliases[\"classical\"] = \"Classical\"\n\nlabels[\"regional\"] = {\n\t\
      regional_categories = {\"Regional\"},\n}\n\n\n-- Africa\n\nlabels[\"Africa\"] = {\n\tregional_categories = {\"African\"},\n}\naliases[\"African\"] = \"Africa\"\n\nlabels[\"Algeria\"] = {\n\tdisplay = \"Algeria\",\n\tregional_categories = {\"Algerian\"\
      },\n}\naliases[\"Algerian\"] = \"Algeria\"\n\nlabels[\"Angola\"] = {\n\tregional_categories = {\"Angolan\"},\n}\naliases[\"Angolan\"] = \"Angola\"\n\nlabels[\"Botswana\"] = {\n\tregional_categories = {\"Botswanan\"},\n}\n\nlabels[\"Cape Verde\"] = {\n\t\
      regional_categories = {\"Cape Verdean\"},\n}\naliases[\"Cape Verdean\"] = \"Cape Verde\"\n\nlabels[\"Chad\"] = {\n\tdisplay = \"Chad\",\n\tregional_categories = {\"Chadian\"},\n}\naliases[\"Chadian\"] = \"Chad\"\n\nlabels[\"Congo\"] = {\n\tdisplay = \"\
      Congo\",\n\tregional_categories = {\"Congolese\"},\n} -- these could be split if need be\naliases[\"Democratic Republic of the Congo\"] = \"Congo\"\naliases[\"Democratic Republic of Congo\"] = \"Congo\"\naliases[\"DR Congo\"] = \"Congo\"\naliases[\"Congo-Kinshasa\"\
      ] = \"Congo\"\naliases[\"Republic of the Congo\"] = \"Congo\"\naliases[\"Republic of Congo\"] = \"Congo\"\naliases[\"Congo-Brazzaville\"] = \"Congo\"\naliases[\"Congolese\"] = \"Congolese\"\n\nlabels[\"Durban\"] = {\n\tdisplay = \"[[Durban]]\",\n\tregional_categories\
      \ = {\"Durban\"},\n}\n\nlabels[\"East Africa\"] = {\n\tregional_categories = {\"East African\"},\n}\naliases[\"East African\"] = \"East Africa\"\n\nlabels[\"Egypt\"] = {\n\tregional_categories = {\"Egyptian\"},\n}\naliases[\"Egyptian\"] = \"Egypt\"\n\n\
      labels[\"Equatorial Guinea\"] = {\n    display = \"[[w:Equatorial Guinea|Equatorial Guinea]]\",\n\tregional_categories = {\"Equatorial Guinean\"},\n}\naliases[\"Equatorial Guinean\"] = \"Equatorial Guinea\"\naliases[\"Equatoguinean\"] = \"Equatorial Guinea\"\
      \n\nlabels[\"Ghana\"] = {\n\tregional_categories = {\"Ghanaian\"},\n}\n\nlabels[\"Haketia\"] = {\n    display = \"[[w:Haketia|Haketia]]\",\n    plain_categories = {\"Haketia\"},\n}\naliases[\"Hakitia\"] = \"Haketia\"\naliases[\"Haquitía\"] = \"Haketia\"\
      \n\nlabels[\"Kenya\"] = {\n\tregional_categories = {\"Kenyan\"},\n}\naliases[\"Kenyan\"] = \"Kenya\"\n\nlabels[\"Liberia\"] = {\n\tregional_categories = {\"Liberian\"},\n}\naliases[\"Liberian\"] = \"Liberia\"\n\nlabels[\"Mali\"] = {\n\tdisplay = \"Mali\"\
      ,\n\tregional_categories = {\"Malian\"},\n}\naliases[\"Malian\"] = \"Mali\"\n\nlabels[\"Mauritania\"] = {\n\tdisplay = \"Mauritania\",\n\tregional_categories = {\"Mauritanian\"},\n}\naliases[\"Mauritanian\"] = \"Mauritania\"\n\nlabels[\"Morocco\"] = {\n\
      \tregional_categories = {\"Moroccan\"},\n}\naliases[\"Moroccan\"] = \"Morocco\"\n\nlabels[\"Mozambique\"] = {\n\tregional_categories = {\"Mozambican\"},\n}\naliases[\"Mozambican\"] = \"Mozambique\"\n\nlabels[\"Namibia\"] = {\n\tregional_categories = {\"\
      Namibian\"},\n}\naliases[\"Namibian\"] = \"Namibia\"\n\nlabels[\"Natal\"] = {\n\tdisplay = \"[[Natal]]\",\n\tregional_categories = {\"Natal\"},\n}\n\nlabels[\"Niger\"] = {\n\tregional_categories = {\"Nigerien\"},\n}\naliases[\"Nigerien\"] = \"Niger\"\n\
      \nlabels[\"Nigeria\"] = {\n\tregional_categories = {\"Nigerian\"},\n}\naliases[\"Nigerian\"] = \"Nigeria\"\n\nlabels[\"Rhodesia\"] = {\n\tdisplay = \"[[w:Rhodesia|Rhodesia]]\",\n\tregional_categories = {\"Rhodesian\"},\n}\naliases[\"Rhodesian\"] = \"Rhodesia\"\
      \n\nlabels[\"Rwanda\"] = {\n\tdisplay = \"Rwanda\",\n\tregional_categories = {\"Rwandan\"},\n}\n\nlabels[\"Réunion\"] = {\n\tregional_categories = {\"Réunion\"},\n}\n\nlabels[\"South Africa\"] = {\n\tdisplay = \"[[w:South Africa|South Africa]]\",\n\tregional_categories\
      \ = {\"South African\"},\n}\naliases[\"South African\"] = \"South Africa\"\n\nlabels[\"Sudan\"] = {\n\tdisplay = \"[[w:Sudan|Sudan]]\",\n\tregional_categories = {\"Sudanese\"},\n}\naliases[\"Sudanese\"] = \"Sudan\"\n\nlabels[\"Tanzania\"] = {\n\tregional_categories\
      \ = {\"Tanzanian\"},\n}\n\nlabels[\"Tunisian\"] = {\n\tdisplay = \"Tunisia\",\n\tregional_categories = {\"Tunisian\"} }\naliases[\"Tunisia\"] = \"Tunisian\"\n\nlabels[\"Uganda\"] = {\n\tregional_categories = {\"Ugandan\"}\n}\n\nlabels[\"West Africa\"]\
      \ = {\n\tregional_categories = {\"West African\"},\n}\naliases[\"West African\"] = \"West Africa\"\n\nlabels[\"Zimbabwe\"] = {\n\tdisplay = \"[[Zimbabwe]]\",\n\tregional_categories = {\"Zimbabwe\"},\n}\n\nlabels[\"Zululand\"] = {\n\tdisplay = \"[[Zululand]]\"\
      ,\n\tregional_categories = {\"Zululand\"},\n}\n\n\n-- North America\n\nlabels[\"Acadia\"] = {\n\tdisplay = \"Acadian\",\n\tregional_categories = {\"Acadian\"},\n}\n\nlabels[\"Alberta\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Appalachia\"\
      ] = {\n\tdisplay = \"[[Appalachia]]\",\n\tregional_categories = {\"Appalachian\"},\n}\naliases[\"Appalachian\"] = \"Appalachia\"\n\nlabels[\"Atlantic Canada\"] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"British Columbia\"] = {\n\
      \tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Cajun\"] = {\n\tdisplay = \"[[w:Cajun|Louisiana]]\",\n\tregional_categories = {\"Louisiana\"},\n}\n\nlabels[\"Canada\"] = {\n\tdisplay = \"[[w:Canada|Canada]]\",\n\tregional_categories = {\"Canadian\"\
      },\n}\naliases[\"Canadian\"] = \"Canada\"\n\nlabels[\"Canadian Prairies\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Georgia\"] = {\n\tdisplay = \"[[w:Georgia (U.S. state)|Georgia]]\",\n\tregional_categories = {\"Georgian\"},\n}\n\nlabels[\"\
      Indiana\"] = {\n\tdisplay = \"[[w:Indiana|Indiana]]\",\n\tregional_categories = {\"Indiana\"},\n}\naliases[\"Indianan\"] = \"Indiana\"\naliases[\"Indianian\"] = \"Indiana\"\n\nlabels[\"Labrador\"] = {\n\tdisplay = \"[[Labrador]]\",\n\tregional_categories\
      \ = {\"Labrador\"},\n}\n\nlabels[\"Louisiana\"] = {\n\tregional_categories = {\"Louisiana\"},\n}\naliases[\"New Orleans\"] = \"Louisiana\"\n\nlabels[\"Manitoba\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Maryland\"] = {\n\tdisplay =\
      \ \"[[w:Maryland|Maryland]]\",\n\tregional_categories = {\"Maryland\"},\n}\n\nlabels[\"Mecayapan\"] = {\n\tregional_categories = {\"Mecayapan\"},\n}\n\nlabels[\"Mexico\"] = {\n\tregional_categories = {\"Mexican\"},\n}\naliases[\"Mexican\"] = \"Mexico\"\
      \n\nlabels[\"Midland US\"] = {\n\tdisplay = \"[[w:Midland American English|Midland US]]\", -- for lack of a better link target\n\tregional_categories = {\"Midland US\"},\n}\naliases[\"North Midland US\"] = \"Midland US\" -- split North and South off?\n\
      aliases[\"Northern Midland US\"] = \"Midland US\"\naliases[\"South Midland US\"] = \"Midland US\"\naliases[\"Southern Midland US\"] = \"Midland US\"\n\nlabels[\"Midwest US\"] = {\n\tdisplay = \"[[w:Midwestern United States|Midwestern US]]\",\n\tregional_categories\
      \ = {\"Midwest US\"},\n}\naliases[\"Midwestern US\"] = \"Midwest US\"\n\nlabels[\"Missouri\"] = {\n\tdisplay = \"[[w:Missouri|Missouri]]\",\n\tregional_categories = {\"Missourian\"},\n}\naliases[\"St Louis, Missouri\"] = \"Missouri\"\naliases[\"St. Louis,\
      \ Missouri\"] = \"Missouri\"\n\nlabels[\"New Brunswick\"] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"New England\"] = {\n\tdisplay = \"[[w:New England|New England]]\",\n\tregional_categories = {\"New England\"},\n}\n\nlabels[\"\
      New Jersey\"] = {\n\tdisplay = \"[[w:New Jersey|New Jersey]]\",\n\tregional_categories = {\"New Jersey\"},\n}\n\nlabels[\"New York\"] = {\n\tdisplay = \"[[w:New York|New York]]\",\n\tregional_categories = {\"New York\"},\n}\naliases[\"NY\"] = \"New York\"\
      \n\nlabels[\"New York City\"] = {\n\tdisplay = \"[[w:New York City|New York City]]\",\n\tregional_categories = {\"New York City\"},\n}\naliases[\"NYC\"] = \"New York City\"\naliases[\"New York city\"] = \"New York City\"\n\nlabels[\"Newfoundland\"] = {\n\
      \tdisplay = \"[[Newfoundland English|Newfoundland]]\",\n\tregional_categories = {\"Newfoundland\"},\n}\n\nlabels[\"North America\"] = {\n\tdisplay = \"[[Canada]], [[American English|US]]\",\n\tregional_categories = {\"Canadian\", \"American\"},\n}\naliases[\"\
      North American\"] = \"North America\"\n\nlabels[\"North Carolina\"] = {\n\tdisplay = \"[[w:North Carolina|North Carolina]]\",\n\tregional_categories = {\"North Carolinian\"},\n}\n\nlabels[\"North India\"] = {\n\tdisplay = \"[[w:North India|North India]]\"\
      ,\n\tregional_categories = {\"North Indian\"},\n}\n\nlabels[\"Northwest Territories\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Northwestern US\"] = {\n\tdisplay = \"[[w:Northwestern United States|Northwestern US]]\",\n\tregional_categories\
      \ = {\"Northwestern US\"},\n}\naliases[\"northwestern US\"] = \"Northwestern US\"\n\nlabels[\"Nova Scotia\"] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"Nunavut\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Ohio\"\
      ] = {\n\tdisplay = \"[[Ohio]]\",\n\tregional_categories = {\"Ohioan\"},\n}\n\nlabels[\"Ontario\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Pennsylvania\"] = {\n\tdisplay = \"[[w:Pennsylvania|Pennsylvania]]\",\n\tregional_categories =\
      \ {\"Pennsylvanian\"},\n}\n\nlabels[\"Pittsburgh\"] = {\n\tdisplay = \"[[w:Pittsburgh|Pittsburgh]]\",\n\tregional_categories = {\"Pennsylvanian\"},\n} -- can be split off if enough entries in it arise; group with PA for now\n\nlabels[\"Prince Edward Island\"\
      ] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"Quebec\"] = {\n\tregional_categories = {\"Quebec\"},\n}\naliases[\"Québec\"] = \"Quebec\"\n\nlabels[\"Saskatchewan\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Southern\
      \ US\"] = {\n\tdisplay = \"[[w:Southern United States|Southern US]]\",\n\tregional_categories = {\"Southern US\"},\n}\naliases[\"southern US\"] = \"Southern US\"\naliases[\"US South\"] = \"Southern US\"\naliases[\"US Southern\"] = \"Southern US\"\n\nlabels[\"\
      Southwestern US\"] = {\n\tdisplay = \"[[w:Southwestern United States|Southwestern US]]\",\n\tregional_categories = {\"Southwestern US\"},\n}\naliases[\"Southwest US\"] = \"Southwestern US\"\naliases[\"southwest US\"] = \"Southwestern US\"\naliases[\"southwestern\
      \ US\"] = \"Southwestern US\"\n\nlabels[\"Texas\"] = {\n\tdisplay = \"[[w:Texas|Texas]]\",\n\tregional_categories = {\"Texan\"},\n}\naliases[\"TX\"] = \"Texas\"\n\nlabels[\"Upper Midwest US\"] = {\n\tdisplay = \"[[w:Upper Midwest|Upper Midwestern US]]\"\
      ,\n\tregional_categories = {\"Upper Midwest US\"},\n}\naliases[\"Upper Midwestern US\"] = \"Upper Midwest US\"\n\nlabels[\"US\"] = {\n\tdisplay = \"[[w:United States|US]]\",\n\tregional_categories = {\"American\"},\n}\naliases[\"U.S.\"] = \"US\"\naliases[\"\
      United States\"] = \"US\"\naliases[\"United States of America\"] = \"US\"\naliases[\"USA\"] = \"US\"\naliases[\"America\"] = \"US\" -- or should these be aliases of 'North America'?\naliases[\"American\"] = \"US\"\n\nlabels[\"Virginia\"] = {\n\tdisplay\
      \ = \"[[w:Virginia|Virginia]]\",\n\tregional_categories = {\"Virginian\"},\n}\n\nlabels[\"Yukon\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\n-- Yokuts tribal varieties\n\nlabels[\"Chawchila\"] = {\n\tregional_categories = {\"Chawchila\"},\n}\n\
      \nlabels[\"Choinimni\"] = {\n\tregional_categories = {\"Choinimni\"},\n}\naliases[\"Choynimni\"] = \"Choinimni\"\n\nlabels[\"Choinok\"] = {\n\tregional_categories = {\"Choinok\"},\n}\naliases[\"Choynok\"] = \"Choinok\"\n\n\nlabels[\"Chukaimina\"] = {\n\
      \tregional_categories = {\"Chukaimina\"},\n}\naliases[\"Chukaymina\"] = \"Chukaimina\"\n\nlabels[\"Chukchansi\"] = {\n\tregional_categories = {\"Chukchansi\"},\n}\n\nlabels[\"Chulamni\"] = {\n\tregional_categories = {\"Chulamni\"},\n}\naliases[\"Yachikumne\"\
      ] = \"Chulamni\"\naliases[\"Yachikumni\"] = \"Chulamni\"\n\nlabels[\"Dumna\"] = {\n\tregional_categories = {\"Dumna\"},\n}\n\nlabels[\"Hometwoli\"] = {\n\tregional_categories = {\"Hometwoli\"},\n}\n\nlabels[\"Kechayi\"] = {\n\tregional_categories = {\"\
      Kechayi\"},\n}\n\nlabels[\"Kocheyali\"] = {\n\tregional_categories = {\"Kocheyali\"},\n}\naliases[\"Ayitcha\"] = \"Kocheyali\"\naliases[\"Ayticha\"] = \"Kocheyali\"\n\nlabels[\"Koyeti\"] = {\n\tregional_categories = {\"Koyeti\"},\n}\n\nlabels[\"Lakisamni\"\
      ] = {\n\tregional_categories = {\"Lakisamni\"},\n}\n\nlabels[\"Michahay\"] = {\n\tregional_categories = {\"Michahay\"},\n}\n\nlabels[\"Noptinte\"] = {\n\tregional_categories = {\"Noptinte\"},\n}\naliases[\"Nopṭinṭe\"] = \"Noptinte\"\naliases[\"Nopthrinthre\"\
      ] = \"Noptinte\"\naliases[\"Nopchinchi\"] = \"Noptinte\"\n\nlabels[\"Tachi\"] = {\n\tregional_categories = {\"Tachi\"},\n}\n\nlabels[\"Tawalimni\"] = {\n\tregional_categories = {\"Tawalimni\"},\n}\n\nlabels[\"Tulamni\"] = {\n\tregional_categories = {\"\
      Tulamni\"},\n}\naliases[\"Tulamne\"] = \"Tulamni\"\n\nlabels[\"Wechihit\"] = {\n\tregional_categories = {\"Wechihit\"},\n}\n\nlabels[\"Wo'lasi\"] = {\n\tregional_categories = {\"Wo'lasi\"},\n}\n\nlabels[\"Wukchumni\"] = {\n\tregional_categories = {\"Wukchumni\"\
      },\n}\naliases[\"Wukchamni\"] = \"Wukchumni\"\naliases[\"Wikchamni\"] = \"Wukchumni\"\n\nlabels[\"Yawdanchi\"] = {\n\tregional_categories = {\"Yawdanchi\"},\n}\n\nlabels[\"Yawelmani\"] = {\n\tregional_categories = {\"Yawelmani\"},\n}\n\n\n-- Central America\
      \ and Caribbean\n\nlabels[\"Barbados\"] = {\n\tregional_categories = {\"Barbadian\"},\n}\naliases[\"Barbadian\"] = \"Barbados\"\n\nlabels[\"Belize\"] = {\n\tdisplay = \"[[w:Belize|Belize]]\",\n\tregional_categories = {\"Belizean\"},\n}\naliases[\"Belizean\"\
      ] = \"Belize\"\n\nlabels[\"Caribbean\"] = {\n\tdisplay = \"[[Caribbean]]\",\n\tregional_categories = {\"Caribbean\"},\n}\n\nlabels[\"Central America\"] = {\n\tregional_categories = {\"Central American\"},\n}\n\nlabels[\"Cincinnati\"] = {\n\tdisplay = \"\
      [[Cincinnati]]\",\n\tregional_categories = {\"Cincinnati\"},\n}\n\nlabels[\"Cirebon\"] = {\n\tplain_categories = {\"Cirebon Javanese\"},\n}\n\nlabels[\"Costa Rica\"] = {\n\tregional_categories = {\"Costa Rican\"},\n}\n\nlabels[\"Cuba\"] = {\n\tregional_categories\
      \ = {\"Cuban\"},\n}\n\nlabels[\"Dominican Republic\"] = {\n\tregional_categories = {\"Dominican\"},\n}\n\nlabels[\"El Salvador\"] = {\n\tregional_categories = {\"Salvadorian\"},\n}\n\nlabels[\"Guatemala\"] = {\n\tregional_categories = {\"Guatemalan\"},\n\
      }\n\nlabels[\"Honduras\"] = {\n\tregional_categories = {\"Honduran\"},\n}\n\nlabels[\"Jamaica\"] = {\n\tdisplay = \"[[w:Jamaica|Jamaica]]\",\n\tregional_categories = {\"Jamaican\"},\n}\naliases[\"Jamaican\"] = \"Jamaica\"\n\nlabels[\"Nicaragua\"] = {\n\
      \tregional_categories = {\"Nicaraguan\"},\n}\n\nlabels[\"Panama\"] = {\n\tregional_categories = {\"Panamanian\"},\n}\n\n\n-- South America\n\nlabels[\"Argentina\"] = {\n\tregional_categories = {\"Argentinian\"},\n}\n\nlabels[\"Bolivia\"] = {\n\tregional_categories\
      \ = {\"Bolivian\"},\n}\n\nlabels[\"Brazil\"] = {\n\tdisplay = \"[[w:Brazil|Brazil]]\",\n\tregional_categories = {\"Brazilian\"},\n}\n\nlabels[\"Chile\"] = {\n\tregional_categories = {\"Chilean\"},\n}\n\nlabels[\"Colombia\"] = {\n\tregional_categories =\
      \ {\"Colombian\"},\n}\n\nlabels[\"Ecuador\"] = {\n\tregional_categories = {\"Ecuadorian\"},\n}\n\nlabels[\"Guyana\"] = {\n\tregional_categories = {\"Guyanese\"},\n}\n\nlabels[\"Northeast Brazil\"] = {\n\tregional_categories = {\"Northeastern Brazilian\"\
      } \n}\naliases[\"Nordestino\"] = \"Northeast Brazil\"\naliases[\"Nordeste\"] = \"Northeast Brazil\"\naliases[\"Northeastern Brazilian\"] = \"South Brazil\"\naliases[\"Northeast Brazilian\"] = \"South Brazil\"\n\nlabels[\"Paraguay\"] = {\n\tregional_categories\
      \ = {\"Paraguayan\"},\n}\n\nlabels[\"Paraná\"] = {\n\tdisplay = \"[[w:Paraná (state)|Paraná]]\",\n\tregional_categories = {\"Paranaense\"},\n}\naliases[\"Paranaense\"] = \"Paraná\"\n\nlabels[\"Peru\"] = {\n\tregional_categories = {\"Peruvian\"},\n}\n\n\
      labels[\"Rio de Janeiro\"] = {\n\tdisplay = \"[[w:Rio de Janeiro|Rio de Janeiro]]\",\n\tregional_categories = {\"Carioca\"},\n}\naliases[\"Fluminense\"] = \"Rio de Janeiro\"\naliases[\"Carioca\"] = \"Rio de Janeiro\"\n\nlabels[\"Rio Grande do Sul\"] =\
      \ {\n\tregional_categories = {\"Gaúcho\"} \n}\naliases[\"Gaúcho\"] = \"Rio Grande do Sul\"\naliases[\"Gaucho\"] = \"Rio Grande do Sul\"\n\nlabels[\"São Paulo\"] = {\n\tdisplay = \"[[w:São Paulo (state)|São Paulo]]\",\n\tregional_categories = {\"Paulista\"\
      },\n}\naliases[\"Sao Paulo\"] = \"São Paulo\"\naliases[\"Paulista\"] = \"São Paulo\"\n\nlabels[\"South Brazil\"] = {\n\tregional_categories = {\"Southern Brazilian\"} \n}\naliases[\"Southern Brazilian\"] = \"South Brazil\"\naliases[\"South Brazilian\"\
      ] = \"South Brazil\"\n\nlabels[\"Trinidad and Tobago\"] = {\n\tdisplay = \"[[Trinidad and Tobago]]\",\n\tregional_categories = {\"Trinidad and Tobago\"},\n}\n\nlabels[\"Uruguay\"] = {\n\tregional_categories = {\"Uruguayan\"},\n}\n\nlabels[\"Suriname\"\
      ] = {\n\tdisplay = \"[[w:Suriname|Suriname]]\",\n\tregional_categories = {\"Surinamese\"},\n}\n\nlabels[\"Venezuela\"] = {\n\tregional_categories = {\"Venezuelan\"},\n}\naliases[\"Venezuelan\"] = \"Venezuela\"\n\n\n-- Asia\n\nlabels[\"Adana\"] = {\n\t\
      display = \"[[w:Adana|Adana]]\",\n\tregional_categories = {\"Adana\"},\n}\naliases[\"Atana\"] = \"Adana\"\n\nlabels[\"Afyonkarahisar\"] = {\n\tdisplay = \"[[w:Afyonkarahisar|Afyonkarahisar]]\",\n\tregional_categories = {\"Afyonkarahisar\"},\n}\naliases[\"\
      Afyon\"] = \"Afyonkarahisar\"\n\nlabels[\"Ağın\"] = {\n\tdisplay = \"[[w:Ağın|Ağın]]\",\t\n\tregional_categories = {\"Ağın\"},\n}\naliases[\"Aghin\"] = \"Ağın\"\naliases[\"Vaghaver\"] = \"Ağın\"\n\nlabels[\"Ağrı\"] = {\n\tdisplay = \"[[w:Ağrı|Ağrı]]\"\
      ,\n\tregional_categories = {\"Ağrı\"},\n}\naliases[\"Aghri\"] = \"Ağrı\"\naliases[\"Karaköse\"] = \"Ağrı\"\n\nlabels[\"Ahlat\"] = {\n\tdisplay = \"[[w:Ahlat|Ahlat]]\",\n\tregional_categories = {\"Ahlat\"},\n}\naliases[\"Khlat\"] = \"Ahlat\"\naliases[\"\
      Xlat\"] = \"Ahlat\"\n\nlabels[\"Akhalkalaki\"] = {\n\tdisplay = \"[[w:Akhalkalaki|Akhalkalaki]]\",\n\tregional_categories = {\"Akhalkalaki\"},\n}\naliases[\"Akhalkalak\"] = \"Akhalkalaki\"\naliases[\"Akhlkalak\"] = \"Akhalkalaki\"\n\nlabels[\"Akn\"] =\
      \ {\n\tdisplay = \"[[w:Kemaliye|Akn]]\",\n\tregional_categories = {\"Akn\"},\n}\naliases[\"Egin\"] = \"Akn\"\naliases[\"Eğin\"] = \"Akn\"\n\nlabels[\"Alashkert\"] = {\n\tdisplay = \"[[w:Eleşkirt|Alashkert]]\",\n\tregional_categories = {\"Alashkert\"},\n\
      }\naliases[\"Eleşkirt\"] = \"Alashkert\"\naliases[\"Alaškert\"] = \"Alashkert\"\n\nlabels[\"Amur\"] = {\n\tdisplay = \"[[w:Amur|Amur]]\",\n\tregional_categories = {\"Amur\"},\n}\n\nlabels[\"Angkorian\"] = {\n\tdisplay = \"[[w:Khmer language#Historical\
      \ periods|Angkorian]]\",\n\tregional_categories = {\"Angkorian\"},\n}\n\nlabels[\"Ankara\"] = {\n\tdisplay = \"[[w:Ankara|Ankara]]\",\n\tregional_categories = {\"Ankara\"},\n}\n\nlabels[\"Antalya\"] = {\n\tdisplay = \"[[w:Antalya|Antalya]]\",\n\tregional_categories\
      \ = {\"Antalya\"},\n}\n\nlabels[\"Arapgir\"] = {\n\tdisplay = \"[[w:Arapgir|Arapgir]]\",\n\tregional_categories = {\"Arapgir\"},\n}\naliases[\"Arapkir\"] = \"Arapgir\"\naliases[\"Arabkir\"] = \"Arapgir\"\n\nlabels[\"Ardanuç\"] = {\n\tdisplay = \"[[w:Ardanuç\
      |Ardanuç]]\",\n\tregional_categories = {\"Ardanuç\"},\n}\naliases[\"Artanuj\"] = \"Ardanuç\"\naliases[\"Ardanuji\"] = \"Ardanuç\"\n\nlabels[\"Artvin\"] = {\n\tdisplay = \"[[w:Artvin|Artvin]]\",\n\tregional_categories = {\"Artvin\"},\n}\naliases[\"Ardvin\"\
      ] = \"Artvin\"\naliases[\"Ardvini\"] = \"Artvin\"\n\nlabels[\"Banten\"] = {\n\tdisplay = \"[[w:Bantenese|Banten]]\",\n\tregional_categories = {\"Banten\"},\n}\naliases[\"Bantenese\"] = \"Banten\"\n\nlabels[\"Beijing\"] = {\n\tdisplay = \"[[w:Beijing dialect|Beijing]]\"\
      ,\n\tregional_categories = {\"Beijing\"},\n}\naliases[\"Peking\"] = \"Beijing\"\naliases[\"Pekingese\"] = \"Beijing\"\naliases[\"Beijing Mandarin\"] = \"Beijing\"\n\nlabels[\"Balıkesir\"] = {\n\tdisplay = \"[[w:Balıkesir|Balıkesir]]\",\n\tregional_categories\
      \ = {\"Balıkesir\"},\n}\n\nlabels[\"Bình Định\"] = {\n\tdisplay = \"[[w:Bình Định|Bình Định dialect]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Binh Dinh\"] = \"Bình Định\"\naliases[\"Bình Định dialect\"] = \"Bình Định\"\naliases[\"Binh\
      \ Dinh dialect\"] = \"Bình Định\"\n\nlabels[\"Bitlis\"] = {\n\tdisplay = \"[[w:Bitlis|Bitlis]]\",\n\tregional_categories = {\"Bitlis\"},\n}\naliases[\"Baghesh\"] = \"Bitlis\"\n\nlabels[\"hbo\"] = {\n    display = \"[[w:Biblical Hebrew|Biblical Hebrew]]\"\
      ,\n    plain_categories = {\"Biblical Hebrew\"},\n}\naliases[\"Biblical Hebrew\"] = \"hbo\"\naliases[\"Classical Hebrew\"] = \"hbo\"\naliases[\"Ancient Hebrew\"] = \"hbo\"\naliases[\"Old Hebrew\"] = \"hbo\"\n\nlabels[\"Bogor\"] = {\n\tregional_categories\
      \ = {\"Bogor\"},\n}\n\nlabels[\"Brebes\"] = {\n\tregional_categories = {\"Brebes\"},\n}\naliases[\"Brebian\"] = \"Brebes\"\n\nlabels[\"Brunei\"] = {\n\tdisplay = \"[[w:Brunei|Brunei]]\",\n\tregional_categories = {\"Bruneian\"},\n}\n\nlabels[\"Burdur\"\
      ] = {\n\tdisplay = \"[[w:Burdur|Burdur]]\",\n\tregional_categories = {\"Burdur\"},\n}\n\nlabels[\"Bursa\"] = {\n\tdisplay = \"[[w:Bursa|Bursa]]\",\n\tregional_categories = {\"Bursa\"},\n}\n\nlabels[\"Çanakkale\"] = {\n\tdisplay = \"[[w:Çanakkale|Çanakkale]]\"\
      ,\n\tregional_categories = {\"Çanakkale\"},\n}\n\nlabels[\"Çemişgezek\"] = {\n\tdisplay = \"[[w:Çemişgezek|Çemişgezek]]\",\n\tregional_categories = {\"Çemişgezek\"},\n}\naliases[\"Chmshkatsag\"] = \"Çemişgezek\"\naliases[\"Çemişkezek\"] = \"Çemişgezek\"\
      \naliases[\"Čmškacag\"] = \"Çemişgezek\"\n\nlabels[\"central Assam\"] = {\n\tdisplay = \"Central Assam\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Central Assam\"] = \"central Assam\"\naliases[\"Central Assamese\"] = \"central Assam\"\naliases[\"\
      central Assamese\"] = \"central Assam\"\n\nlabels[\"central Vietnam\"] = {\n\tdisplay = \"[[w:Central Vietnam|Central Vietnam]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Central Vietnam\"] = \"central Vietnam\"\naliases[\"central Vietnamese\"\
      ] = \"central Vietnam\"\naliases[\"Central Vietnamese\"] = \"central Vietnam\"\n\nlabels[\"China\"] = {\n\tdisplay = \"[[w:China|China]]\",\n\tregional_categories = {\"Chinese\"},\n}\n\nlabels[\"Cirebon\"] = {\n\tregional_categories = {\"Cirebon\"},\n\
      }\naliases[\"Cirebonese\"] = \"Cirebon\"\n\nlabels[\"Cypriot\"] = {\n\tdisplay = \"[[w:Cyprus|Cyprus]]\",\n\tregional_categories = {\"Cypriot\"},\n}\naliases['cypriot'] = 'Cypriot'\n\nlabels[\"Delhi\"] = {\n\tdisplay = \"[[w:Delhi|Delhi]]\",\n\tregional_categories\
      \ = {\"Delhi\"},\n}\n\nlabels[\"Divriği\"] = {\n\tdisplay = \"[[w:Divriği|Divriği]]\",\n\tregional_categories = {\"Divriği\"},\n}\naliases[\"Tevrik\"] = \"Divriği\"\naliases[\"Tewrik\"] = \"Divriği\"\naliases[\"Dewrik\"] = \"Divriği\"\naliases[\"Devrik\"\
      ] = \"Divriği\"\naliases[\"Devrike\"] = \"Divriği\"\naliases[\"Dewrike\"] = \"Divriği\"\n\nlabels[\"Denizli\"] = {\n\tdisplay = \"[[w:Denizli|Denizli]]\",\n\tregional_categories = {\"Denizli\"},\n}\n\nlabels[\"Diyarbakır\"] = {\n\tdisplay = \"[[w:Diyarbakı\
      r|Diyarbakır]]\",\n\tregional_categories = {\"Diyarbakır\"},\n}\naliases[\"Diyarbakir\"] = \"Diyarbakır\"\naliases[\"Diyarbekir\"] = \"Diyarbakır\"\naliases[\"Tigranakert\"] = \"Diyarbakır\"\n\nlabels[\"East Sakhalin\"] = {\n\tdisplay = \"East [[w:Sakhalin|Sakhalin]]\"\
      , \n\tregional_categories = {\"East Sakhalin\"},\n}\n\nlabels[\"Elazığ\"] = {\n\tdisplay = \"[[w:Elazığ|Elazığ]]\",\n\tregional_categories = {\"Elazığ\"},\n}\naliases[\"Elazig\"] = \"Elazığ\"\naliases[\"Elazigh\"] = \"Elazığ\"\n\nlabels[\"Erciş\"] = {\n\
      \tdisplay = \"[[w:Erciş|Erciş]]\",\n\tregional_categories = {\"Erciş\"},\n}\naliases[\"Ercis\"] = \"Erciş\"\naliases[\"Archesh\"] = \"Erciş\"\naliases[\"Artchesh\"] = \"Erciş\"\naliases[\"Erdîş\"] = \"Erciş\"\n\nlabels[\"Erzurum\"] = {\n\tdisplay = \"\
      [[w:Erzurum|Erzurum]]\",\n\tregional_categories = {\"Erzurum\"},\n}\naliases[\"Karin\"] = \"Erzurum\"\naliases[\"Erzrum\"] = \"Erzurum\"\n\nlabels[\"Eskişehir\"] = {\n\tdisplay = \"[[w:Eskişehir|Eskişehir]]\",\n\tregional_categories = {\"Eskişehir\"},\n\
      }\n\nlabels[\"Fengkai\"] = {\n\tdisplay = \"[[w:Fengkai County|Fengkai]]\",\n\tregional_categories = {\"Fengkai\"},\n}\n\nlabels[\"Fuzuli\"] = {\n\tdisplay = \"[[w:Fuzuli District|Fuzuli]]\",\n\tregional_categories = {\"Fuzuli\"},\n}\naliases[\"Füzuli\"\
      ] = \"Fuzuli\"\naliases[\"Fizuli\"] = \"Fuzuli\"\n\nlabels[\"Gadabay\"] = {\n\tdisplay = \"[[w:Gadabay District|Gadabay]]\",\n\tregional_categories = {\"Gadabay\"},\n}\naliases[\"Gədəbəy\"] = \"Gadabay\"\naliases[\"Getabek\"] = \"Gadabay\"\n\nlabels[\"\
      Ganja\"] = {\n\tdisplay = \"[[w:Ganja, Azerbaijan|Ganja]]\",\n\tregional_categories = {\"Ganja\"},\n}\naliases[\"Gandzak\"] = \"Ganja\"\n\nlabels[\"Gansu\"] = {\n\tdisplay = \"[[w:Gansu, China|Gansu]]\",\n\tregional_categories = {\"Gansu\"},\n}\n\nlabels[\"\
      Giresun\"] = {\n\tdisplay = \"[[w:Giresun|Giresun]]\",\n\tregional_categories = {\"Giresun\"},\n}\n\nlabels[\"Goris\"] = {\n\tdisplay = \"[[w:Goris|Goris]]\",\n\tregional_categories = {\"Goris\"},\n}\n\nlabels[\"Hải Phòng\"] = {\n\tdisplay = \"[[w:Haiphong|Hả\
      i Phòng dialect]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"Hai Phong\"] = \"Hải Phòng\"\naliases[\"Haiphong\"] = \"Hải Phòng\"\naliases[\"Hải Phòng dialect\"] = \"Hải Phòng\"\naliases[\"Hai Phong dialect\"] = \"Hải Phòng\"\n\nlabels[\"\
      Haiti\"] = {\n\tdisplay = \"[[w:Haiti|Haiti]]\",\n\tregional_categories = {\"Haitian\"},\n}\n\nlabels[\"Hakkari\"] = {\n\tdisplay = \"[[w:Hakkari|Hakkari]]\",\t\n\tregional_categories = {\"Hakkari\"},\n}\naliases[\"Hakkiari\"] = \"Hakkari\"\naliases[\"\
      Hakari\"] = \"Hakkari\"\naliases[\"Hakiari\"] = \"Hakkari\"\naliases[\"Hakkâri\"] = \"Hakkari\"\n\nlabels[\"Hà Tĩnh\"] = {\n\tdisplay = \"[[w:Hà Tĩnh|Hà Tĩnh dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Ha Tinh\"] = \"Hà Tĩnh\"\n\
      aliases[\"Hà Tĩnh dialect\"] = \"Hà Tĩnh\"\naliases[\"Ha Tinh dialect\"] = \"Hà Tĩnh\"\n\nlabels[\"Hemşin\"] = {\n\tdisplay = \"[[w:Hemşin|Hemşin]]\",\n\tregional_categories = {\"Hemşin\"},\n}\n\nlabels[\"Hong Kong\"] = {\n\tdisplay = \"[[w:Hong Kong|Hong\
      \ Kong]]\",\n\tregional_categories = {\"Hong Kong\"},\n}\n\nlabels[\"Huế\"] = {\n\tdisplay = \"[[w:Huế|Huế dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Hue\"] = \"Huế\"\naliases[\"Huế dialect\"] = \"Huế\"\naliases[\"Hue dialect\"\
      ] = \"Huế\"\n\nlabels[\"Hyderabad\"] = {\n\tdisplay = \"[[w:Hyderabad|Hyderabad]]\",\n\tregional_categories = {\"Hyderabadi\"},\n}\n\nlabels[\"İçel\"] = {\n\tdisplay = \"[[w:Mersin Province|İçel]]\",\n\tregional_categories = {\"İçel\"},\n}\naliases[\"\
      Içel\"] = \"İçel\"\n\nlabels[\"India\"] = {\n\tdisplay = \"[[w:India|India]]\",\n\tregional_categories = {\"Indian\"},\n}\naliases[\"Indian\"] = \"India\"\n\nlabels[\"Indore\"] = {\n\tdisplay = \"[[Indore|Indore]]\",\n\tregional_categories = {\"Indore\"\
      },\n}\n\nlabels[\"Indonesia\"] = {\n\tdisplay = \"[[w:Indonesia|Indonesia]]\",\n\tregional_categories = {\"Indonesian\"},\n}\n\nlabels[\"Iran\"] = {\n\tdisplay = \"[[w:Iran|Iran]]\",\n\tregional_categories = {\"Iranian\"},\n}\n\nlabels[\"Iraqi\"] = {\n\
      \tdisplay = \"Iraq\",\n\tregional_categories = {\"Iraqi\"} }\naliases[\"Iraq\"] = \"Iraqi\"\n\nlabels[\"Isparta\"] = {\n\tdisplay = \"[[w:Isparta|Isparta]]\",\n\tregional_categories = {\"Isparta\"},\n}\n\nlabels[\"Israel\"] = {\n\tdisplay = \"[[w:Israel|Israel]]\"\
      ,\n\tregional_categories = {\"Israeli\"},\n}\naliases[\"Israeli\"] = \"Israel\"\n\nlabels[\"Ivory Coast\"] = {\n\tdisplay = \"[[w:Ivory Coast|Ivory Coast]]\",\n\tregional_categories = {\"Ivorian\"},\n}\naliases[\"Côte d’Ivoire\"] = \"Ivory Coast\"\naliases[\"\
      Côte d'Ivoire\"] = \"Ivory Coast\"\naliases[\"Ivorian\"] = \"Ivory Coast\"\n\nlabels[\"İzmir\"] = {\n\tdisplay = \"[[w:İzmir|İzmir]]\",\n\tregional_categories = {\"İzmir\"},\n}\naliases[\"Izmir\"] = \"İzmir\"\n\nlabels[\"İzmit\"] = {\n\tdisplay = \"[[w:İ\
      zmit|İzmit]]\",\n\tregional_categories = {\"İzmit\"},\n}\naliases[\"Izmit\"] = \"İzmit\"\naliases[\"Nicomedia\"] = \"İzmit\"\naliases[\"Nikomedia\"] = \"İzmit\"\n\nlabels[\"Jakarta\"] = {\n\tdisplay = \"[[w:Jakarta|Jakarta]]\",\n\tregional_categories =\
      \ {\"Jakarta\"},\n}\n\nlabels[\"Java\"] = {\n\tdisplay = \"[[w:Java|Java]]\",\n\tregional_categories = {\"Javanese\"},\n}\naliases[\"Javanese\"] = \"Java\"\n\nlabels[\"Jordanian\"] = {\n\tdisplay = \"Jordan\",\n\tregional_categories = {\"Jordanian\"} }\n\
      aliases[\"Jordan\"] = \"Jordanian\"\n\nlabels[\"Kaptanpaşa\"] = {\n\tdisplay = \"[[w:tr:Kaptanpaşa, Çayeli|Kaptanpaşa]]\",\n\tregional_categories = {\"Rize\"},\n}\n\nlabels[\"Kars\"] = {\n\tdisplay = \"[[w:Kars|Kars]]\",\n\tregional_categories = {\"Kars\"\
      },\n}\naliases[\"Ghars\"] = \"Kars\"\n\nlabels[\"Kathiyawadi\"] = {\n\tdisplay = \"[[w:Kathiawar|Kathiyawadi]]\",\n\tregional_categories = {\"Kathiyawadi\"},\n}\naliases[\"Kathiawadi\"] = \"Kathiyawadi\"\naliases[\"Sorathi\"] = \"Kathiyawadi\"\naliases[\"\
      Bhawnagari\"] = \"Kathiyawadi\"\naliases[\"Gohilwadi\"] = \"Kathiyawadi\"\naliases[\"Holadi\"] = \"Kathiyawadi\"\naliases[\"Jhalawadi\"] = \"Kathiyawadi\"\n\nlabels[\"Kayseri\"] = {\n\tdisplay = \"[[w:Kayseri|Kayseri]]\",\n\tregional_categories = {\"Kayseri\"\
      },\n}\naliases[\"Kesaria\"] = \"Kayseri\"\n\nlabels[\"Kazym\"] = {\n\tregional_categories = {\"Kazym\"},\n}\n\nlabels[\"Kemaliye\"] = {\n\tdisplay = \"[[w:Kemaliye|Kemaliye]]\",\n\tregional_categories = {\"Kemaliye\"},\n}\n\nlabels[\"Kharberd\"] = {\n\t\
      display = \"[[w:Elazığ|Kharberd]]\",\n\tregional_categories = {\"Kharberd\"},\n}\naliases[\"Kharpert\"] = \"Kharberd\"\naliases[\"Kharput\"] = \"Kharberd\"\naliases[\"Harput\"] = \"Kharberd\"\n\nlabels[\"Khevsureti\"] = {\n\tdisplay = \"[[w:Khevsureti|Khevsureti]]\"\
      ,\n\tregional_categories = {\"Khevsureti\"},\n}\naliases[\"Khevsuria\"] = \"Khevsureti\"\n\nlabels[\"Khotorjur\"] = {\n\tdisplay = \"[[w:Khotorjur|Khotorjur]]\",\n\tregional_categories = {\"Khotorjur\"},\n}\naliases[\"Khodorchur\"] = \"Khotorjur\"\naliases[\"\
      Hodiçor\"] = \"Khotorjur\"\naliases[\"Xodiçur\"] = \"Khotorjur\"\naliases[\"Xodrçur\"] = \"Khotorjur\"\naliases[\"Xodorçur\"] = \"Khotorjur\"\naliases[\"Sırakonak\"] = \"Khotorjur\"\n\nlabels[\"Konya\"] = {\n\tdisplay = \"[[w:Konya|Konya]]\",\n\tregional_categories\
      \ = {\"Konya\"},\n}\n\nlabels[\"Lachin\"] = {\n\tdisplay = \"[[w:Lachin District|Lachin]]\",\n\tregional_categories = {\"Lachin\"},\n}\naliases[\"Laçın\"] = \"Lachin\"\naliases[\"Laçîn\"] = \"Lachin\"\n\nlabels[\"Lebanese\"] = {\n\tdisplay = \"Lebanon\"\
      ,\n\tregional_categories = {\"Lebanese\"} }\naliases[\"Lebanon\"] = \"Lebanese\"\n\nlabels[\"Levantine\"] = {\n\tdisplay = \"[[w:Levant|Levantine]]\",\n\tregional_categories = {\"Levantine\"},\n}\naliases[\"Levant\"] = \"Levantine\"\n\nlabels[\"Libya\"\
      ] = {\n\tdisplay = \"Libya\",\n\tregional_categories = {\"Libyan\"} }\naliases[\"Libyan\"] = \"Libya\"\n\nlabels[\"Lisan ud-Dawat\"] = {\n\tdisplay = \"[[w:Lisan ud-Dawat|LDA]]\",\n\tregional_categories = {\"Lisan ud-Dawat\"},\n}\naliases[\"LDA\"] = \"\
      Lisan ud-Dawat\"\naliases[\"Lisaan ud-Da'wat\"] = \"Lisan ud-Dawat\"\naliases[\"Lisaan ud-Da'wat il-'Alaviyah\"] = \"Lisan ud-Dawat\"\n\nlabels[\"Lucknow\"] = {\n\tregional_categories = {\"Lucknow\"},\n}\n\nlabels[\"Macau\"] = {\n\tdisplay = \"[[w:Macau|Macau]]\"\
      ,\n\tregional_categories = {\"Macanese\"},\n}\naliases[\"Macao\"] = \"Macau\"\nlabels[\"Mainland China\"] = {\n\tdisplay = \"[[w:Mainland China|Mainland China]]\",\n\tregional_categories = {\"Mainland China\"},\n}\naliases[\"Mainland\"] = \"Mainland China\"\
      \naliases[\"mainland\"] = \"Mainland China\"\naliases[\"mainland China\"] = \"Mainland China\"\n\nlabels[\"Malatya\"] = {\n\tdisplay = \"[[w:Malatya|Malatya]]\",\n\tregional_categories = {\"Malatya\"},\n}\naliases[\"Malatia\"] = \"Malatya\"\n\nlabels[\"\
      Malayeri\"] = {\n\tdisplay = \"[[w:Malayer|Malayeri]]\",\n\tregional_categories = {\"Malayeri\"},\n}\n\nlabels[\"Malaysia\"] = {\n\tdisplay = \"[[w:Malaysia|Malaysia]]\",\n\tregional_categories = {\"Malaysian\"},\n}\naliases[\"Malaysian\"] = \"Malaysia\"\
      \n\nlabels[\"Medieval Hebrew\"] = {\n    display = \"[[w:Medieval Hebrew|Medieval Hebrew]]\",\n    plain_categories = {\"Medieval Hebrew\"},\n}\n\nlabels[\"Mehsani\"] = {\n\tdisplay = \"[[w:Mehsana|Mehsani]]\",\n\tregional_categories = {\"Mehsani\"},\n\
      }\naliases[\"Mahesani\"] = \"Mehsani\"\n\nlabels[\"Mekong Delta\"] = {\n\tdisplay = \"[[w:Mekong Delta|Mekong Delta dialect]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Mekong Delta dialect\"] = \"Mekong Delta\"\n\nlabels[\"Mesudiye\"] =\
      \ {\n\tdisplay = \"[[w:Mesudiye, Ordu|Mesudiye]]\",\n\tregional_categories = {\"Mesudiye\"},\n}\n\nlabels[\"Mishnaic Hebrew\"] = {\n    display = \"[[w:Mishnaic Hebrew|Mishnaic Hebrew]]\",\n    plain_categories = {\"Mishnaic Hebrew\"},\n}\naliases[\"Mishnaic\"\
      ] = \"Mishnaic Hebrew\"\n\nlabels[\"Moks\"] = {\n\tdisplay = \"[[w:Bahçesaray (District), Van|Moks]]\",\n\tregional_categories = {\"Moks\"},\n}\naliases[\"Müküs\"] = \"Moks\"\naliases[\"Miks\"] = \"Moks\"\n\nlabels[\"Muğla\"] = {\n\tdisplay = \"[[w:Muğ\
      la|Muğla]]\",\n\tregional_categories = {\"Muğla\"},\n}\n\nlabels[\"Mumbai\"] = {\n\tregional_categories = {\"Mumbai\"},\n}\n\nlabels[\"Muş\"] = {\n\tdisplay = \"[[w:Muş|Muş]]\",\n\tregional_categories = {\"Muş\"},\n}\naliases[\"Mush\"] = \"Muş\"\n\nlabels[\"\
      Nakhchivan\"] = {\n\tdisplay = \"[[w:Nakhchivan|Nakhchivan]]\",\n\tregional_categories = {\"Nakhchivan\"},\n}\naliases[\"Naxçıvan\"] = \"Nakhchivan\"\naliases[\"Nakhichevan\"] = \"Nakhchivan\"\naliases[\"Nakhijevan\"] = \"Nakhchivan\"\naliases[\"Nahçı\
      van\"] = \"Nakhchivan\"\n\nlabels[\"Negeri Sembilan\"] = {\n\tdisplay = \"[[w:Negeri Sembilan|Negeri Sembilan]]\",\n\tregional_categories = {\"Negeri Sembilan\"},\n}\n\nlabels[\"Nepal\"] = {\n\tdisplay = \"[[w:Nepal|Nepal]]\",\n\tregional_categories =\
      \ {\"Nepali\"},\n}\n\nlabels[\"Nghệ An\"] = {\n\tdisplay = \"[[w:Nghệ An|Nghệ An dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Nghe An\"] = \"Nghệ An\"\naliases[\"Nghệ An dialect\"] = \"Nghệ An\"\naliases[\"Nghe An dialect\"] = \"\
      Nghệ An\"\n\nlabels[\"Nghệ Tĩnh\"] = {\n\tdisplay = \"[[w:Nghệ Tĩnh|Nghệ Tĩnh dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Nghe Tinh\"] = \"Nghệ Tĩnh\"\naliases[\"Nghệ Tinh dialect\"] = \"Nghệ Tĩnh\"\naliases[\"Nghe Tinh dialect\"\
      ] = \"Nghệ Tĩnh\"\n\nlabels[\"Niğde\"] = {\n\tdisplay = \"[[w:Niğde|Niğde]]\",\n\tregional_categories = {\"Niğde\"},\n}\naliases[\"Nigde\"] = \"Niğde\"\n\nlabels[\"Nor Bayazet\"] = {\n\tdisplay = \"[[w:Nor Bayazet|Nor Bayazet]]\",\n\tregional_categories\
      \ = {\"Nor Bayazet\"},\n}\naliases[\"Novo-Bayazet\"] = \"Nor Bayazet\"\naliases[\"Gavar\"] = \"Nor Bayazet\"\n\nlabels[\"Nor Nakhichevan\"] = {\n\tdisplay = \"[[w:Nakhichevan-on-Don|Nor Nakhichevan]]\",\n\tregional_categories = {\"Nor Nakhichevan\"},\n\
      }\naliases[\"New Nakhichevan\"] = \"Nor Nakhichevan\"\naliases[\"Nor Nakhijevan\"] = \"Nor Nakhichevan\"\naliases[\"Nakhichevan-on-Don\"] = \"Nor Nakhichevan\"\n\nlabels[\"North Korea\"] = {\n\tdisplay = \"[[w:North Korea|North Korea]]\",\n\tregional_categories\
      \ = {\"North\"},\n}\n\nlabels[\"North Sakhalin\"] = {\n\tdisplay = \"North [[w:Sakhalin|Sakhalin]]\", \n\tregional_categories = {\"North Sakhalin\"},\n}\n\nlabels[\"North Central Vietnam\"] = {\n\tdisplay = \"[[w:North Central Coast|North Central Vietnam]]\"\
      ,\n\tregional_categories = {\"Central\"},\n}\naliases[\"North-Central Vietnam\"] = \"North Central Vietnam\"\n\nlabels[\"northern Vietnam\"] = {\n\tdisplay = \"[[w:Northern Vietnam|Northern Vietnam]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"\
      north Vietnam\"] = \"northern Vietnam\"\naliases[\"North Vietnam\"] = \"northern Vietnam\"\naliases[\"north Vietnamese\"] = \"northern Vietnam\"\naliases[\"North Vietnamese\"] = \"northern Vietnam\"\naliases[\"Northern Vietnam\"] = \"northern Vietnam\"\
      \naliases[\"northern Vietnamese\"] = \"northern Vietnam\"\naliases[\"Northern Vietnamese\"] = \"northern Vietnam\"\n\nlabels[\"Oman\"] = {\n\tdisplay = \"Oman\",\n\tregional_categories = {\"Omani\"},\n}\naliases[\"Omani\"] = \"Oman\"\n\nlabels[\"overseas\
      \ Vietnamese\"] = {\n\tdisplay = \"[[w:Overseas Vietnamese|Overseas Vietnamese]]\",\n\tregional_categories = {\"Overseas\"},\n}\naliases[\"Overseas Vietnamese\"] = \"overseas Vietnamese\"\n\nlabels[\"Pahang\"] = {\n\tdisplay = \"[[w:Pahang|Pahang]]\",\n\
      \tregional_categories = {\"Pahang\"},\n}\n\nlabels[\"Pakistan\"] = {\n\tdisplay = \"[[w:Pakistan|Pakistan]]\",\n\tregional_categories = {\"Pakistani\"},\n}\n\nlabels[\"Palestinian\"] = {\n\tdisplay = \"Palestine\",\n\tregional_categories = {\"Palestinian\"\
      } }\naliases[\"Palestine\"] = \"Palestinian\"\n\nlabels[\"Partizak\"] = {\n\tdisplay = \"[[w:hy:Պարտիզակ (Քոջաելի)|Partizak]]\",\n\tregional_categories = {\"Partizak\"},\n}\naliases[\"Bardizag\"] = \"Partizak\"\n\nlabels[\"Perak\"] = {\n\tdisplay = \"\
      [[w:Perak|Perak]]\",\n\tregional_categories = {\"Perak\"},\n}\n\nlabels[\"Philadelphia\"] = {\n\tdisplay = \"[[w:Philadelphia|Philadelphia]]\",\n\tregional_categories = {\"Pennsylvanian\"},\n} -- can be split off if enough entries in it arise; group with\
      \ PA for now\n\nlabels[\"Philippines\"] = {\n\tdisplay = \"[[w:Philippines|Philippines]]\",\n\tregional_categories = {\"Philippine\"},\n}\n\nlabels[\"Phú Yên\"] = {\n\tdisplay = \"[[w:Phú Yên|Phú Yên dialect]]\",\n\tregional_categories = {\"Southern\"\
      },\n}\naliases[\"Phu Yen\"] = \"Phú Yên\"\naliases[\"Phú Yên dialect\"] = \"Phú Yên\"\naliases[\"Phu Yen dialect\"] = \"Phú Yên\"\n\nlabels[\"Pre-Angkorian\"] = {\n\tdisplay = \"[[w:Khmer language#Historical periods|Pre-Angkorian]]\",\n\tregional_categories\
      \ = {\"Pre-Angkorian\"},\n}\n\nlabels[\"Priangan\"] = {\n\tregional_categories = {\"Priangan\"},\n}\n\nlabels[\"Pshavi\"] = {\n\tdisplay = \"[[w:Pshavi|Pshavi]]\",\n\tregional_categories = {\"Pshavi\"},\n}\n\nlabels[\"Pulur\"] = {\n\tdisplay = \"[[w:Ovacı\
      k, Dersim|Pulur]]\",\n\tregional_categories = {\"Pulur\"},\n}\n\nlabels[\"Qakh\"] = {\n\tdisplay = \"[[w:Qakh District|Qakh]]\",\n\tregional_categories = {\"Qakh\"},\n}\naliases[\"Kakhi\"] = \"Qakh\"\naliases[\"Gakh\"] = \"Qakh\"\naliases[\"Qax\"] = \"\
      Qakh\"\n\nlabels[\"Qinghai\"] = {\n\tdisplay = \"[[w:Qinghai, China|Qinghai]]\",\n\tregional_categories = {\"Qinghai\"},\n}\n\nlabels[\"Quảng Bình\"] = {\n\tdisplay = \"[[w:Quảng Bình|Quảng Bình dialect]]\",\n\tregional_categories = {\"Central\"},\n}\n\
      aliases[\"Quang Binh\"] = \"Quảng Bình\"\naliases[\"Quảng Bình dialect\"] = \"Quảng Bình\"\naliases[\"Quang Binh dialect\"] = \"Quảng Bình\"\n\nlabels[\"Quảng Nam\"] = {\n\tdisplay = \"[[w:Quảng Nam|Quảng Nam dialect]]\",\n\tregional_categories = {\"Southern\"\
      },\n}\naliases[\"Quang Nam\"] = \"Quảng Nam\"\naliases[\"Quảng Nam dialect\"] = \"Quảng Nam\"\naliases[\"Quang Nam dialect\"] = \"Quảng Nam\"\n\nlabels[\"Quảng Ngãi\"] = {\n\tdisplay = \"[[w:Quảng Ngãi|Quảng Ngãi dialect]]\",\n\tregional_categories = {\"\
      Southern\"},\n}\naliases[\"Quang Ngai\"] = \"Quảng Ngãi\"\naliases[\"Quảng Ngãi dialect\"] = \"Quảng Ngãi\"\naliases[\"Quang Ngai dialect\"] = \"Quảng Ngãi\"\n\nlabels[\"Quảng Trị\"] = {\n\tdisplay = \"[[w:Quảng Trị|Quảng Trị dialect]]\",\n\tregional_categories\
      \ = {\"Central\"},\n}\naliases[\"Quang Tri\"] = \"Quảng Trị\"\naliases[\"Quảng Trị dialect\"] = \"Quảng Trị\"\naliases[\"Quang Tri dialect\"] = \"Quảng Trị\"\n\nlabels[\"Rize\"] = {\n\tdisplay = \"[[w:Rize|Rize]]\",\n\tregional_categories = {\"Rize\"},\n\
      }\n\nlabels[\"Sakhalin\"] = {\n\tdisplay = \"[[w:Sakhalin|Sakhalin]]\",\n\tregional_categories = {\"Sakhalin\"},\n}\n\nlabels[\"Salyan\"] = {\n\tdisplay = \"[[w:Salyan District, Azerbaijan|Salyan]]\",\n\tregional_categories = {\"Salyan\"},\n}\n\nlabels[\"\
      Sasun\"] = {\n\tdisplay = \"[[w:Sason|Sasun]]\",\n\tregional_categories = {\"Sasun\"},\n}\naliases[\"Sason\"] = \"Sasun\"\naliases[\"Sassoun\"] = \"Sasun\"\n\nlabels[\"Shamakhi\"] = {\n\tdisplay = \"[[w:Shamakhi|Shamakhi]]\",\n\tregional_categories = {\"\
      Shamakhi\"},\n}\naliases[\"Şamaxı\"] = \"Shamakhi\"\n\nlabels[\"Shanghai\"] = {\n\tdisplay = \"[[w:Shanghai|Shanghai]]\",\n\tregional_categories = {\"Shanghainese\"},\n}\naliases[\"Shanghainese\"] = \"Shanghai\"\n\nlabels[\"Sheki\"] = {\n\tdisplay = \"\
      [[w:Sheki, Azerbaijan|Sheki]]\",\n\tregional_categories = {\"Sheki\"},\n}\naliases[\"Şəki\"] = \"Sheki\"\naliases[\"Shaki\"] = \"Sheki\"\n\nlabels[\"Shidong\"] = {\n\tdisplay = \"[[w:Shidong|Shidong]]\",\n\tregional_categories = {\"Shidong\"},\n}\n\nlabels[\"\
      Shuryshkar\"] = {\n\tregional_categories = {\"Shuryshkar\"},\n}\naliases[\"Shurishkar\"] = \"Shuryshkar\"\n\nlabels[\"Singapore\"] = {\n\tdisplay = \"[[w:Singapore|Singapore]]\",\n\tregional_categories = {\"Singapore\"},\n}\naliases[\"Singaporian\"] =\
      \ \"Singapore\"\n\nlabels[\"Sivas\"] = {\n\tdisplay = \"[[w:Sivas|Sivas]]\",\n\tregional_categories = {\"Sivas\"},\n}\naliases[\"Sebastia\"] = \"Sivas\"\naliases[\"Sebastea\"] = \"Sivas\"\n\nlabels[\"South Korea\"] = {\n\tdisplay = \"[[w:South Korea|South\
      \ Korea]]\",\n\tregional_categories = {\"South\"},\n}\n\nlabels[\"South Sakhalin\"] = {\n\tdisplay = \"South [[w:Sakhalin|Sakhalin]]\", \n\tregional_categories = {\"South Sakhalin\"},\n}\n\nlabels[\"southern Vietnam\"] = {\n\tdisplay = \"[[w:Southern Vietnam|Southern\
      \ Vietnam]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"south Vietnam\"] = \"southern Vietnam\"\naliases[\"South Vietnam\"] = \"southern Vietnam\"\naliases[\"south Vietnamese\"] = \"southern Vietnam\"\naliases[\"South Vietnamese\"] = \"southern\
      \ Vietnam\"\naliases[\"Southern Vietnam\"] = \"southern Vietnam\"\naliases[\"southern Vietnamese\"] = \"southern Vietnam\"\naliases[\"Southern Vietnamese\"] = \"southern Vietnam\"\n\nlabels[\"Sri Lanka\"] = {\n\tdisplay = \"[[Sri Lanka]]\",\n\tregional_categories\
      \ = {\"Sri Lankan\"},\n}\n\nlabels[\"Surati\"] = {\n\tdisplay = \"[[w:Surat district|Surati]]\",\n\tregional_categories = {\"Surati\"},\n}\n\nlabels[\"Surgut\"] = {\n\tdisplay = \"[[w:Surgut|Surgut]]\",\n\tregional_categories = {\"Surgut\"},\n}\n\nlabels[\"\
      Suzhou\"] = {\n\tdisplay = \"[[w:Suzhou|Suzhou]]\",\n\tregional_categories = {\"Suzhounese\"},\n}\naliases[\"Suzhounese\"] = \"Suzhou\"\n\nlabels[\"Syrian\"] = {\n\tdisplay = \"Syria\",\n\tregional_categories = {\"Syrian\"} }\naliases[\"Syria\"] = \"Syrian\"\
      \n\nlabels[\"Taiwan\"] = {\n\tdisplay = \"[[w:Taiwan|Taiwan]]\",\n\tregional_categories = {\"Taiwanese\"},\n}\naliases[\"Taiwanese\"] = \"Taiwan\"\n\nlabels[\"Tbilisi\"] = {\n\tdisplay = \"[[w:Tbilisi|Tbilisi]]\",\n\tregional_categories = {\"Tbilisi\"\
      },\n}\naliases[\"Tiflis\"] = \"Tbilisi\"\n\nlabels[\"Thailand\"] = {\n\tdisplay = \"[[w:Thailand|Thailand]]\",\n\tregional_categories = {\"Thai\"},\n}\n\nlabels[\"Thanh Hoá\"] = {\n\tdisplay = \"[[w:Thanh Hoá|Thanh Hoá dialect]]\",\n\tregional_categories\
      \ = {\"Central\"},\n}\naliases[\"Thanh Hoa\"] = \"Thanh Hoá\"\naliases[\"Thanh Hoá dialect\"] = \"Thanh Hoá\"\naliases[\"Thanh Hoa dialect\"] = \"Thanh Hoá\"\n\nlabels[\"Tianjin\"] = {\n\tdisplay = \"[[w:Tianjin dialect|Tianjin]]\",\n\tplain_categories\
      \ = {\"Mandarin Chinese\"},\n}\naliases[\"Tianjin dialect\"] = \"Tianjin\"\naliases[\"Tianjin Mandarin\"] = \"Tianjin\"\naliases[\"Tianjinese\"] = \"Tianjin\"\n\nlabels[\"Tokat\"] = {\n\tdisplay = \"[[w:Tokat|Tokat]]\",\n\tregional_categories = {\"Tokat\"\
      },\n}\naliases[\"Evdokia\"] = \"Tokat\"\n\nlabels[\"Trabzon\"] = {\n\tdisplay = \"[[w:Trabzon|Trabzon]]\",\n\tregional_categories = {\"Trabzon\"},\n}\naliases[\"Trapizon\"] = \"Trabzon\"\n\nlabels[\"Urfa\"] = {\n\tdisplay = \"[[w:Şanlıurfa|Urfa]]\",\n\t\
      regional_categories = {\"Urfa\"},\n}\naliases[\"Urha\"] = \"Urfa\"\naliases[\"Şanlıurfa\"] = \"Urfa\"\n\nlabels[\"Uşak\"] = {\n\tdisplay = \"[[w:Uşak|Uşak]]\",\n\tregional_categories = {\"Uşak\"},\n}\n\nlabels[\"Van\"] = {\n\tdisplay = \"[[w:Van, Turkey|Van]]\"\
      ,\n\tregional_categories = {\"Van\"},\n}\n\nlabels[\"Vietnam\"] = {\n\tdisplay = \"[[w:Vietnam|Vietnam]]\",\n\tregional_categories = {\"Vietnamese\"},\n}\n\nlabels[\"Wuhan\"] = {\n\tdisplay = \"[[w:Wuhan dialect|Wuhan]]\",\n\tregional_categories = {\"\
      Wuhan\"},\n}\naliases[\"Hankou\"] = \"Wuhan\"\naliases[\"Hankow\"] = \"Wuhan\"\naliases[\"Wuhan dialect\"] = \"Wuhan\"\n\nlabels[\"Yanbian\"] = {\n\tdisplay = \"[[w:Korean language in China|Yanbian dialect]]\",\n\tregional_categories = {\"Yanbian\"},\n\
      }\n\nlabels[\"Yemen\"] = {\n\tdisplay = \"Yemen\",\n\tregional_categories = {\"Yemeni\"},\n}\naliases[\"Yemeni\"] = \"Yemen\"\naliases[\"Yemenite\"] = \"Yemen\"\n\nlabels[\"Yerevan\"] = {\n\tdisplay = \"[[w:Yerevan|Yerevan]]\",\n\tregional_categories =\
      \ {\"Yerevan\"},\n}\naliases[\"İrəvan\"] = \"Yerevan\"\n\nlabels[\"Yonggu\"] = {\n\tdisplay = \"[[w:Yonggu, Guangdong|Yonggu]]\",\n\tregional_categories = {\"Yonggu\"},\n}\n\nlabels[\"Zangilan\"] = {\n\tdisplay = \"[[w:Zəngilan|Zangilan]]\",\n\tregional_categories\
      \ = {\"Zangilan\"},\n}\naliases[\"Zəngilan\"] = \"Zangilan\"\naliases[\"Zangelan\"] = \"Zangilan\"\n\nlabels[\"Zanjan\"] = {\n\tdisplay = \"[[w:Zanjan, Iran|Zanjan]]\",\n\tregional_categories = {\"Zanjan\"},\n}\naliases[\"Zәncan\"] = \"Zanjan\"\naliases[\"\
      Zәngan\"] = \"Zanjan\"\n\nlabels[\"Zaqatala\"] = {\n\tdisplay = \"[[w:Zaqatala District|Zaqatala]]\",\n\tregional_categories = {\"Zaqatala\"},\n}\naliases[\"Zakatala\"] = \"Zaqatala\"\naliases[\"Zagatala\"] = \"Zaqatala\"\n\n\n-- Europe\n\nlabels[\"Aachen\"\
      ] = {\n\tdisplay = \"[[w:Aachen dialect|Aachen]]\",\n\tregional_categories = {\"Aachen\"},\n}\n\nlabels[\"Alghero\"] = {\n\tdisplay = \"[[w:Alghero|Alghero]]\",\n\tregional_categories = {\"Algherese\"},\n}\n\nlabels[\"Alsatian\"] = {\n\tdisplay = \"[[w:Alsatian\
      \ dialect|Alsatian]]\",\n\tregional_categories = {\"Alsatian\"},\n}\naliases[\"Alsace\"] = \"Alsatian\"\naliases[\"Alsacien\"] = \"Alsatian\"\naliases[\"Alsatian German\"] = \"Alsatian\"\naliases[\"Elsässisch\"] = \"Alsatian\"\n\nlabels[\"Al-Andalus\"\
      ] = {\n\tdisplay = \"[[w:al-Andalus|al-Andalus]]\",\n\tregional_categories = {\"Andalusian\"},\n}\naliases[\"al-Andalus\"] = \"Al-Andalus\"\n\nlabels[\"Andalusia\"] = {\n\tdisplay = \"[[w:Andalusia|Andalusia]]\",\n\tregional_categories = {\"Andalusian\"\
      },\n}\nlabels[\"Antrim\"] = {\n\tdisplay = \"[[w:County Antrim|Antrim]]\",\n\tregional_categories = {\"Ulster\"},\n}\n\nlabels[\"Aragón\"] = {\n\tregional_categories = {\"Aragonese\"},\n}\n\nlabels[\"Aran\"] = {\n\tdisplay = \"[[w:Aran Islands|Aran]]\"\
      ,\n\tregional_categories = {\"Connacht\"},\n}\n\nlabels[\"Arran\"] = {\n\tdisplay = \"[[w:Isle of Arran|Arran]]\",\n\tregional_categories = {\"Arran\"},\n}\n\nlabels[\"Arvanitika\"] = {\n\tdisplay = \"[[w:Arvanitika|Arvanitika]]\",\n\tregional_categories\
      \ = {\"Arvanitika\"},\n}\n\nlabels[\"Asturias\"] = {\n\tregional_categories = {\"Asturian\"},\n}\n\nlabels[\"Austria\"] = {\n\tdisplay = \"[[w:Austria|Austria]]\",\n\tregional_categories = {\"Austrian\"},\n}\naliases[\"Austrian\"] = \"Austria\"\n\nlabels[\"\
      Auvergne\"] = {\n\tdisplay = \"[[w:Auvergnat (language)|Auvergne]]\",\n\tregional_categories = {\"Auvergnese\"},\n}\n\nlabels[\"Bedfordshire\"] = {\n\tdisplay = \"[[w:Bedfordshire|Bedfordshire]]\",\n\tregional_categories = {\"Bedfordshire\"},\n}\naliases[\"\
      Bedfordshire dialect\"] = \"Bedfordshire\"\n\nlabels[\"Berkshire\"] = {\n\tdisplay = \"[[w:Berkshire|Berkshire]]\",\n\tregional_categories = {\"Berkshire\"},\n}\naliases[\"Berkshire dialect\"] = \"Berkshire\"\n\nlabels[\"Balearics\"] = {\n\tdisplay = \"\
      [[w:Balearic Islands|Balearics]]\",\n\tregional_categories = {\"Balearic\"},\n}\n\nlabels[\"Banat\"] = {\n\tdisplay = \"[[w:Banat|Banat]]\",\n\tregional_categories = {\"Banat\"},\n}\n\nlabels[\"Batavia\"] = {\n\tdisplay = \"[[w:Betawi language|Batavian\
      \ Malay]]\",\n\tplain_categories = {\"Batavian Malay\"},\n}\naliases[\"Batavian\"] = \"Batavia\"\naliases[\"Betawi\"] = \"Batavia\"\n\nlabels[\"Belgium\"] = {\n\tdisplay = \"[[w:Belgium|Belgium]]\",\n\tregional_categories = {\"Belgian\"},\n}\naliases[\"\
      Belgian\"] = \"Belgium\"\n\naliases[\"Bologna\"] = \"Bolognese\"\nlabels[\"Bolognese\"] = {\n\tdisplay = \"[[Bolognese]]\",\n\tregional_categories = {\"Bolognese\"},\n}\n\nlabels[\"Bosnia\"] = {\n\tdisplay = \"[[w:Bosnia|Bosnia]]\",\n\tregional_categories\
      \ = {\"Bosnian\"},\n}\naliases[\"Bosnian\"] = \"Bosnia\"\n\nlabels[\"Brabant\"] = {\n\tdisplay = \"[[w:Brabant|Brabant]]\",\n\tregional_categories = {\"Brabantian\"},\n}\n\nlabels[\"Bristol\"] = {\n\tdisplay = \"[[w:Bristol|Bristol]]\",\n\tregional_categories\
      \ = {\"Bristolian\"},\n}\naliases[\"Bristolian\"] = \"Bristol\"\n\nlabels[\"Britain\"] = {\n\tdisplay = \"[[w:Britain|Britain]]\",\n\tregional_categories = {\"British\"},\n}\naliases[\"Brit\"] = \"Britain\"\naliases[\"British\"] = \"Britain\"\naliases[\"\
      Great Britain\"] = \"Britain\"\naliases[\"UK\"] = \"Britain\"\naliases[\"United Kingdom\"] = \"Britain\"\n\nlabels[\"Bukovina\"] = {\n\tdisplay = \"[[w:Bukovina|Bukovina]]\",\n\tregional_categories = {\"Bukovinian\"},\n}\naliases[\"Bucovina\"] = \"Bukovina\"\
      \naliases[\"Bukovinian\"] = \"Bukovina\"\n\nlabels[\"Burgos\"] = {\n\tregional_categories = {\"Burgos\"},\n}\n\nlabels[\"Campello Monti\"] = {\n\tdisplay = \"[[:it:w:Campello Monti|Campello Monti]]\",\n\tplain_categories = {\"Campello Monti Walser\"},\n\
      }\n\nlabels[\"Carcoforo\"] = {\n\tdisplay = \"[[w:Carcoforo|Carcoforo]]\",\n\tplain_categories = {\"Carcoforo Walser\"},\n}\n\naliases[\"Carpi\"] = \"Carpigiano\"\nlabels[\"Carpigiano\"] = {\n\tdisplay = \"[[w:Carpi, Emilia-Romagna|Carpigiano]]\",\n\t\
      regional_categories = {\"Carpigiano\"},\n}\n\nlabels[\"Central Germany\"] = {\n\tdisplay = \"central Germany\",\n\tregional_categories = {\"Central German\"},\n}\naliases[\"Central German\"] = \"Central Germany\"\naliases[\"central Germany\"] = \"Central\
      \ Germany\"\naliases[\"central German\"] = \"Central Germany\"\n\nlabels[\"Central Italy\"] = {\n\tdisplay = \"[[w:Central Italian|central Italy]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Central Italian\"] = \"Central Italy\"\naliases[\"\
      central Italy\"] = \"Central Italy\"\naliases[\"central Italian\"] = \"Central Italy\"\n\nlabels[\"Channel Islands\"] = {\n\tdisplay = \"[[w:Channel Islands|Channel Islands]]\",\n\tregional_categories = {\"Channel Islands\"},\n}\n\nlabels[\"Chungcheong\"\
      ] = {\n\tdisplay = \"[[w:Chungcheong dialect|Chungcheong dialect]]\",\n\tregional_categories = {\"Chungcheong\"},\n}\n\nlabels[\"Chungnam\"] = {\n\tdisplay = \"[[w:Chungcheong dialect|Chungnam dialect]]\",\n\tregional_categories = {\"Chungcheong\"},\n\
      }\n\nlabels[\"Connacht\"] = {\n\tdisplay = \"[[w:Connacht|Connacht]]\",\n\tregional_categories = {\"Connacht\"},\n}\n\nlabels[\"Connemara\"] = {\n\tdisplay = \"[[w:Connemara|Connemara]]\",\n\tregional_categories = {\"Connacht\"},\n}\n\nlabels[\"Cornwall\"\
      ] = {\n\tdisplay = \"[[w:Cornwall|Cornwall]]\",\n\tregional_categories = {\"Cornish\"},\n}\naliases[\"Cornish\"] = \"Cornwall\"\naliases[\"Cornish dialect\"] = \"Cornwall\"\n\nlabels[\"Crimea\"] = {\n\tdisplay = \"[[w:Crimea|Crimea]]\",\n\tregional_categories\
      \ = {\"Crimean\"},\n}\naliases[\"Crimean\"] = \"Crimea\"\n\nlabels[\"Croatia\"] = {\n\tdisplay = \"[[w:Croatia|Croatia]]\",\n\tregional_categories = {\"Croatian\"},\n}\naliases[\"Croatian\"] = \"Croatia\"\n\nlabels[\"Cumbria\"] = {\n\tdisplay = \"[[w:Cumbria|Cumbria]]\"\
      ,\n\tregional_categories = {\"Cumbrian\"},\n}\naliases[\"Cumbrian\"] = \"Cumbria\"\n\nlabels[\"DDR\"] = {\n\tdisplay = \"[[w:German Democratic Republic|East Germany]]\",\n\tregional_categories = {\"DDR\"},\n}\naliases[\"GDR\"] = \"DDR\"\naliases[\"East\
      \ German\"] = \"DDR\"\naliases[\"East Germany\"] = \"DDR\"\n\nlabels[\"Dalmatia\"] = {\n\tdisplay = \"[[w:Dalmatia|Dalmatia]]\",\n\tregional_categories = {\"Dalmatian\"},\n}\n\nlabels[\"Derbyshire\"] = {\n\tdisplay = \"[[w:Derbyshire|Derbyshire]]\",\n\t\
      regional_categories = {\"Derbyshire\"},\n}\naliases[\"Derbyshire dialect\"] = \"Derbyshire\"\n\nlabels[\"Devon\"] = {\n\tdisplay = \"[[w:Devon|Devon]]\",\n\tregional_categories = {\"Devonian\"},\n}\naliases[\"Devonian\"] = \"Devon\"\naliases[\"Devonian\
      \ dialect\"] = \"Devon\"\naliases[\"Devonshire\"] = \"Devon\"\naliases[\"Devonshire dialect\"] = \"Devon\"\n\nlabels[\"Dobruja\"] = {\n\tdisplay = \"[[w:Dobruja|Dobruja]]\",\n\tregional_categories = {\"Dobrujan\"},\n}\naliases[\"Dobrogea\"] = \"Dobruja\"\
      \naliases[\"Dobrujan\"] = \"Dobruja\"\n\nlabels[\"Dorset\"] = {\n\tdisplay = \"[[w:Dorset|Dorset]]\",\n\tregional_categories = {\"Dorset\"},\n}\naliases[\"Dorset dialect\"] = \"Dorset\"\n\nlabels[\"Dublin\"] = {\n\tdisplay = \"[[w:Dublin|Dublin]]\",\n\t\
      regional_categories = {\"Dublin\"},\n}\n\nlabels[\"Durham\"] = {\n\tdisplay = \"[[w:County Durham|Durham]]\",\n\tregional_categories = {\"Durham\"},\n}\n\nlabels[\"East Anglia\"] = {\n\tdisplay = \"[[w:East Anglia|East Anglia]]\",\n\tregional_categories\
      \ = {\"East Anglian\"},\n}\naliases[\"East Anglian\"] = \"East Anglia\"\naliases[\"East Anglian dialect\"] = \"East Anglia\"\n\nlabels[\"East Midlands\"] = {\n\tdisplay = \"[[w:East Midlands|East Midlands]]\",\n\tregional_categories = {\"East Midlands\"\
      },\n}\naliases[\"East Midlands dialect\"] = \"East Midlands\"\n\nlabels[\"East Palatine\"] = {\n\tdisplay = \"[[w:Palatine German language|Vorderpfälzisch]]\",\n\tregional_categories = {\"East Palatine\"},\n}\naliases[\"Vorderpfälzisch\"] = \"East Palatine\"\
      \n\nlabels[\"Edirne\"] = {\n\tdisplay = \"[[w:Edirne|Edirne]]\",\n\tregional_categories = {\"Edirne\"},\n}\naliases[\"Adrianople\"] = \"Edirne\"\naliases[\"Odrin\"] = \"Edirne\"\n\nlabels[\"England\"] = {\n\tdisplay = \"[[w:England|England]]\",\n\tregional_categories\
      \ = {\"English\"},\n}\n\nlabels[\"Essex\"] = {\n\tdisplay = \"[[w:Essex|Essex]]\",\n\tregional_categories = {\"Essex\"},\n}\naliases[\"Essex dialect\"] = \"Essex\"\n\nlabels[\"Europe\"] = {\n\tdisplay = \"[[w:Europe|Europe]]\",\n\tregional_categories =\
      \ {\"European\"},\n}\n\nlabels[\"Exmoor\"] = {\n\tdisplay = \"[[w:Exmoor|Exmoor]]\",\n\tregional_categories = {\"Devonian\", \"Somerset\"},\n}\n\nlabels[\"Finland\"] = {\n\tdisplay = \"[[w:Finland|Finland]]\",\n\tregional_categories = {\"Finland\"},\n\
      }\naliases[\"Finnish\"] = \"Finland\"\n\nlabels[\"France\"] = {\n\tdisplay = \"[[w:France|France]]\",\n\tregional_categories = {\"French\"},\n}\n\nlabels[\"Föhr-Amrum\"] = {\n\tdisplay = \"[[w:Föhr-Amrum|Föhr-Amrum]]\",\n\tregional_categories = {\"Föhr-Amrum\"\
      },\n}\naliases[\"Föhr-Amrum dialect\"] = \"Föhr-Amrum\"\naliases[\"Feer\"] = \"Föhr-Amrum\"\naliases[\"Fering\"] = \"Föhr-Amrum\"\naliases[\"Oomram\"] = \"Föhr-Amrum\"\naliases[\"Öömrang\"] = \"Föhr-Amrum\"\n\nlabels[\"Formazza\"] = {\n\tdisplay = \"[[w:Formazza|Formazza]]\"\
      ,\n\tplain_categories = {\"Formazza Walser\"},\n}\n\nlabels[\"Galicia\"] = {\n\tregional_categories = {\"Galician\"},\n}\nlabels[\"Galway\"] = {\n\tdisplay = \"[[w:County Galway|Galway]]\",\n\tregional_categories = {\"Galway\"},\n}\n\nlabels[\"Gangwon\"\
      ] = {\n\tdisplay = \"[[w:Gangwon dialect|Gangwon dialect]]\",\n\tregional_categories = {\"Gangwon\"},\n}\naliases[\"Kangwon\"] = \"Gangwon\"\naliases[\"Kangwŏn\"] = \"Gangwon\"\n\nlabels[\"Gascony\"] = {\n\tdisplay = \"[[w:Gascon language|Gascony]]\",\n\
      \tregional_categories = {\"Gascon\"},\n}\n\nlabels[\"Germany\"] = {\n\tregional_categories = {\"German\"},\n}\naliases[\"German\"] = \"Germany\" -- comment this alias out if it causes problems\n\nlabels[\"Gloucestershire\"] = {\n\tdisplay = \"[[w:Gloucestershire|Gloucestershire]]\"\
      ,\n\tregional_categories = {\"Gloucestershire\"},\n}\naliases[\"Gloucestershire dialect\"] = \"Gloucestershire\"\naliases[\"Glos\"] = \"Gloucestershire\"\n\nlabels[\"Granada\"] = {\n\tregional_categories = {\"Granada\"},\n}\nlabels[\"Gressoney\"] = {\n\
      \tdisplay = \"[[w:Gressoney|Gressoney]]\", -- disambig page :-/\n\tplain_categories = {\"Gressoney Walser\"},\n}\n\nlabels[\"Guernsey\"] = {\n\tdisplay = \"[[w:Guernsey|Guernsey]]\",\n\tregional_categories = {\"Guernsey\"},\n}\n\nlabels[\"Gyeonggi\"] =\
      \ {\n\tdisplay = \"[[w:Gyeonggi dialect|Gyeonggi dialect]]\",\n\tregional_categories = {\"Gyeonggi\"},\n}\n\nlabels[\"Gyeongsang\"] = {\n\tdisplay = \"[[w:Gyeongsang dialect|Gyeongsang dialect]]\",\n\tregional_categories = {\"Gyeongsang\"},\n}\n\nlabels[\"\
      The Hague\"] = {\n\tdisplay = \"[[w:The Hague|The Hague]]\",\n\tregional_categories = {\"Hague\"},\n}\naliases[\"Hague\"] = \"The Hague\"\naliases[\"Den Haag\"] = \"The Hague\"\n\nlabels[\"Hamgyŏng\"] = {\n\tdisplay = \"[[w:Hamgyŏng dialect|Hamgyŏng dialect]]\"\
      ,\n\tregional_categories = {\"Hamgyŏng\"},\n}\naliases[\"Hamgyong\"] = \"Hamgyŏng\"\naliases[\"Hamgyeong\"] = \"Hamgyŏng\"\n\nlabels[\"Hartlepool\"] = {\n\tdisplay = \"[[w:Hartlepool|Hartlepool]]\",\n\tregional_categories = {\"Teesside\"},\n}\n\nlabels[\"\
      Heligoland\"] = {\n\tdisplay = \"[[w:Heligoland|Heligoland]]\",\n\tregional_categories = {\"Heligolandic\"},\n}\naliases[\"Heligoland dialect\"] = \"Heligoland\"\naliases[\"Halunder\"] = \"Heligoland\"\naliases[\"Heligolandic\"] = \"Heligoland\"\naliases[\"\
      Helgoland\"] = \"Heligoland\"\naliases[\"Helgoland dialect\"] = \"Heligoland\"\n\nlabels[\"Herefordshire\"] = {\n\tdisplay = \"[[w:Herefordshire|Herefordshire]]\",\n\tregional_categories = {\"Herefordshire\"},\n}\naliases[\"Herefordshire dialect\"] = \"\
      Herefordshire\"\n\nlabels[\"Hessian\"] = {\n\tdisplay = \"[[w:Hessian dialects|Hessian]]\",\n\tregional_categories = {\"Hessian\"},\n}\naliases[\"Hesse\"] = \"Hessian\"\naliases[\"Hessen\"] = \"Hessian\"\naliases[\"Hessisch\"] = \"Hessian\"\n\nlabels[\"\
      Holland\"] = {\n\tdisplay = \"[[w:Holland|Holland]]\",\n\tregional_categories = {\"Hollandic\"},\n}\naliases[\"Hollandic\"] = \"Holland\"\n\nlabels[\"Hwanghae\"] = {\n\tdisplay = \"[[w:Hwanghae dialect|Hwanghae dialect]]\",\n\tregional_categories = {\"\
      Hwanghae\"},\n}\n\nlabels[\"Ireland\"] = {\n\tdisplay = \"[[w:Ireland|Ireland]]\",\n\tregional_categories = {\"Irish\"},\n}\naliases[\"Irish\"] = \"Ireland\"\n\nlabels[\"Isle of Man\"] = {\n\tdisplay = \"[[w:Isle of Man|Isle of Man]]\",\n\tregional_categories\
      \ = {\"Manx\"},\n}\naliases[\"Manx\"] = \"Isle of Man\"\naliases[\"Isle of Mann\"] = \"Isle of Man\"\n\nlabels[\"Isle of Wight\"] = {\n\tdisplay = \"[[w:Isle of Wight|Isle of Wight]]\",\n\tregional_categories = {\"Isle of Wight\"},\n}\n\nlabels[\"Issime\"\
      ] = {\n\tdisplay = \"[[w:Issime|Issime]]\",\n\tplain_categories = {\"Issime Walser\"},\n}\n\nlabels[\"Istanbul\"] = {\n\tdisplay = \"[[w:Istanbul|Istanbul]]\",\n\tregional_categories = {\"Istanbul\"},\n}\naliases[\"İstanbul\"] = \"Istanbul\"\naliases[\"\
      Polis\"] = \"Istanbul\"\n\nlabels[\"Jeju\"] = {\n\tdisplay = \"[[w:Jeju dialect|Jeju dialect]]\",\n\tregional_categories = {\"Jeju\"},\n}\n\nlabels[\"Jeolla\"] = {\n\tdisplay = \"[[w:Jeolla dialect|Jeolla dialect]]\",\n\tregional_categories = {\"Jeolla\"\
      },\n}\n\nlabels[\"Jersey\"] = {\n\tdisplay = \"[[w:Jersey|Jersey]]\",\n\tregional_categories = {\"Jersey\"},\n}\n\nlabels[\"Kazan\"] = {\n\tdisplay = \"[[w:Kazan|Kazan]]\",\n\tregional_categories = {\"Kazan\"},\n}\n\nlabels[\"Kent\"] = {\n\tdisplay = \"\
      [[w:Kent|Kent]]\",\n\tregional_categories = {\"Kentish\"},\n}\naliases[\"Kentish\"] = \"Kent\"\naliases[\"Kentish dialect\"] = \"Kent\"\naliases[\"Kent dialect\"] = \"Kent\"\n\nlabels[\"Kerry\"] = {\n\tdisplay = \"[[w:Gaeltacht#Kerry Gaeltacht|Kerry]]\"\
      ,\n\tregional_categories = {\"Munster\"},\n}\n\nlabels[\"Kırklareli\"] = {\n\tdisplay = \"[[w:Kırklareli|Kırklareli]]\",\n\tregional_categories = {\"Kırklareli\"},\n}\naliases[\"Kirklareli\"] = \"Kırklareli\"\n\nlabels[\"Kölsch\"] = {\n\tdisplay = \"[[w:Colognian\
      \ language|Kölsch]]\",\n\tregional_categories = {\"Kölsch\"},\n}\naliases[\"Colognian\"] = \"Kölsch\"\naliases[\"Cologne\"] = \"Kölsch\"\naliases[\"Köln\"] = \"Kölsch\"\n\nlabels[\"Kukkuzi\"] = {\n\tdisplay = \"[[w:Kukkuzi|Kukkuzi]]\",\n\tregional_categories\
      \ = {\"Kukkuzi\"},\n}\n\nlabels[\"Lancashire\"] = {\n\tdisplay = \"[[w:Lancashire|Lancashire]]\",\n\tregional_categories = {\"Lancashire\"},\n}\n\nlabels[\"Languedoc\"] = {\n\tdisplay = \"[[w:Languedocien dialect|Languedoc]]\",\n\tregional_categories =\
      \ {\"Languedocian\"},\n}\n\nlabels[\"Liechtenstein\"] = {\n\tdisplay = \"[[w:Liechenstein|Liechtenstein]]\",\n\tregional_categories = {\"Liechtenstein\"},\n}\n\nlabels[\"Limousin\"] = {\n\tdisplay = \"[[w:Limousin dialect|Limousin]]\",\n\tregional_categories\
      \ = {\"Limousin\"},\n}\n\nlabels[\"Lincolnshire\"] = {\n\tdisplay = \"[[w:Lincolnshire|Lincolnshire]]\",\n\tregional_categories = {\"Lincolnshire\"},\n}\n\nlabels[\"Liverpool\"] = {\n\tdisplay = \"[[w:Liverpool|Liverpudlian]]\",\n\tregional_categories\
      \ = {\"Liverpudlian\"},\n}\naliases[\"Scouse\"] = \"Liverpool\"\n\nlabels[\"Lombardic\"] = {\n\tdisplay = \"[[w:Lombardic language|Lombardic]]\",\n\tplain_categories = {\"Lombardic\"},\n}\n\nlabels[\"London\"] = {\n\tdisplay = \"[[w:London|London]]\",\n\
      \tregional_categories = {\"London\"},\n}\n\nlabels[\"Lorraine\"] = {\n\tdisplay = \"[[w:Lorraine|Lorraine]]\",\n\tregional_categories = {\"Lorraine\"},\n}\n\nlabels[\"Luserna\"] = {\n\tdisplay = \"[[w:Luserna|Luserna]]\",\n\tregional_categories = {\"Luserna\"\
      },\n}\n\nlabels[\"Luxembourg\"] = {\n\tdisplay = \"[[w:Luxembourg|Luxembourg]]\",\n\tregional_categories = {\"Luxembourgish\"},\n}\naliases[\"Luxembourgish\"] = \"Luxembourg\"\naliases[\"Luxemburg\"] = \"Luxembourg\"\naliases[\"Luxemburgish\"] = \"Luxembourg\"\
      \n\nlabels[\"Lviv\"] = {\n\tdisplay = \"[[w:Lviv|Lviv]]\",\n\tregional_categories = {\"Lviv\"},\n}\naliases[\"Lvov\"] = \"Lviv\"\n\nlabels[\"Maastrichtian\"] = {\n\tdisplay = \"[[w:Maastrichtian dialect|Maastrichtian]]\",\n\tplain_categories = {\"Maastrichtian\
      \ Limburgish\"},\n}\n\nlabels[\"Mallorca\"] = {\n\tdisplay = \"[[w:Mallorca|Mallorca]]\",\n\tregional_categories = {\"Mallorcan\"},\n}\n\nlabels[\"Malta\"] = {\n\tregional_categories = {\"Maltese\"},\n}\n\nlabels[\"Mancunian\"] = {\n\tdisplay = \"[[w:Manchester|Mancunian]]\"\
      ,\n\tregional_categories = {\"Mancunian\"},\n}\naliases[\"Manchester\"] = \"Mancunian\"\naliases[\"Manc\"] = \"Mancunian\"\n\naliases[\"Mantua\"] = \"Mantovano\"\nlabels[\"Mantovano\"] = {\n\tdisplay = \"[[w:Mantua|Mantovano]]\",\n\tregional_categories\
      \ = {\"Mantovano\"},\n}\n\nlabels[\"Maramureș\"] = {\n\tdisplay = \"[[w:Maramureș|Maramureș]]\",\n\tregional_categories = {\"Maramureș\"},\n}\naliases[\"Maramures\"] = \"Maramureș\"\n\nlabels[\"Marseille\"] = {\n\tdisplay = \"[[w:Marseille|Marseille]]\"\
      ,\n\tregional_categories = {\"Marseille\"},\n}\n\nlabels[\"Midlands\"] = {\n\tdisplay = \"[[w:The Midlands|Midlands]]\",\n\tregional_categories = {\"Midlands\"},\n}\naliases[\"Midlands dialect\"] = \"Midlands\"\naliases[\"South Midlands\"] = \"Midlands\"\
      \ -- OK as alias? or a subvariety worth distinguishing?\n\nlabels[\"Minangkabau\"] = {\n\tdisplay = \"[[w:Minangkabau language|Minangkabau Malay]]\",\n\tplain_categories = {\"Minangkabau Malay\"},\n}\n\naliases[\"Mirandola\"] = \"Mirandolese\"\nlabels[\"\
      Mirandolese\"] = {\n\tdisplay = \"[[w:Mirandola|Mirandolese]]\",\n\tregional_categories = {\"Mirandolese\"},\n}\n\naliases[\"Modena\"] = \"Modenese\"\nlabels[\"Modenese\"] = {\n\tdisplay = \"[[w:Modena|Modenese]]\",\n\tregional_categories = {\"Modenese\"\
      },\n}\n\nlabels[\"Moldavia\"] = {\n\tdisplay = \"[[w:Moldavia|Moldavia]]\",\n\tregional_categories = {\"Moldavian\"},\n}\naliases[\"Moldavian\"] = \"Moldavia\"\naliases[\"Moldova\"] = \"Moldavia\"\naliases[\"Moldovan\"] = \"Moldavia\"\n\n\nlabels[\"Montenegro\"\
      ] = {\n\tdisplay = \"[[w:Montenegro|Montenegro]]\",\n\tregional_categories = {\"Montenegrin\"},\n}\naliases[\"Montenegrin\"] = \"Montenegro\"\n\nlabels[\"Moscow\"] = {\n\tdisplay = \"[[w:Moscow|Moscow]]\",\n\tregional_categories = {\"Moscow\"},\n}\n\n\
      labels[\"Moselle Franconian\"] = {\n\tdisplay = \"[[w:Moselle Franconian dialects|Moselle Franconian]]\",\n\tregional_categories = {\"Moselle\"},\n}\naliases[\"Moselfränkisch\"] = \"Moselle Franconian\"\n\nlabels[\"Munster\"] = {\n\tdisplay = \"[[w:Munster|Munster]]\"\
      ,\n\tregional_categories = {\"Munster\"},\n}\n\nlabels[\"Muntenia\"] = {\n\tdisplay = \"[[w:Muntenia|Muntenia]]\",\n\tregional_categories = {\"Muntenian\"},\n}\naliases[\"Muntenian\"] = \"Muntenia\"\n\nlabels[\"Murcia\"] = {\n\tregional_categories = {\"\
      Murcian\"},\n}\n\nlabels[\"Naples\"] = {\n\tdisplay = \"[[w:Naples|Naples]]\",\n\tregional_categories = {\"Neapolitan\"},\n}\naliases[\"Neapolitan\"] = \"Naples\"\n\nlabels[\"Navarre\"] = {\n\tregional_categories = {\"Navarre\"},\n}\nlabels[\"Netherlands\"\
      ] = {\n\tdisplay = \"[[w:Netherlands|Netherlands]]\",\n\tregional_categories = {\"Netherlands\"},\n}\n\nlabels[\"Norfolk\"] = {\n\tdisplay = \"[[w:Norfolk|Norfolk]]\",\n\tregional_categories = {\"Norfolk\"},\n}\n\nlabels[\"North Wales\"] = {\n\tdisplay\
      \ = \"[[w:North Wales|North Wales]]\",\n\tregional_categories = {\"North Wales\"},\n}\n\nlabels[\"Northern and Central Germany\"] = {\n\tdisplay = \"[[w:Northern Germany|northern]] and central Germany\",\n\tregional_categories = {\"Northern\", \"Central\"\
      },\n}\naliases[\"northern and central Germany\"] = \"Northern and Central Germany\"\naliases[\"Northern and Central German\"] = \"Northern and Central Germany\"\naliases[\"northern and central German\"] = \"Northern and Central Germany\"\naliases[\"North\
      \ and Central Germany\"] = \"Northern and Central Germany\"\naliases[\"north and central Germany\"] = \"Northern and Central Germany\"\naliases[\"North and Central German\"] = \"Northern and Central Germany\"\naliases[\"north and central German\"] = \"\
      Northern and Central Germany\"\n\nlabels[\"Northern Crimea\"] = {\n\tdisplay = \"Northern [[w:Crimea|Crimea]]\",\n\tregional_categories = {\"Northern\"},\n}\n\nlabels[\"Northern England\"] = {\n\tdisplay = \"[[w:Northern England|Northern England]]\",\n\
      \tregional_categories = {\"Northern England\"},\n}\naliases[\"northern England\"] = \"Northern England\"\naliases[\"North England\"] = \"Northern England\"\naliases[\"north England\"] = \"Northern England\"\n\nlabels[\"Northern Germany\"] = {\n\tdisplay\
      \ = \"[[w:Northern Germany|Northern Germany]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"northern Germany\"] = \"Northern Germany\"\naliases[\"Northern German\"] = \"Northern Germany\"\naliases[\"northern German\"] = \"Northern Germany\"\
      \naliases[\"North Germany\"] = \"Northern Germany\"\naliases[\"north Germany\"] = \"Northern Germany\"\naliases[\"North German\"] = \"Northern Germany\"\naliases[\"north German\"] = \"Northern Germany\"\n\nlabels[\"Northern Ireland\"] = {\n\tdisplay =\
      \ \"[[w:Northern Ireland|Northern Ireland]]\",\n\tregional_categories = {\"Ulster\"},\n}\naliases[\"Northern Irish\"] = \"Northern Ireland\"\n\nlabels[\"Northern Isles\"] = {\n\tdisplay = \"[[w:Orkney|Orkney]], [[w:Shetland|Shetland]]\",\n\tregional_categories\
      \ = {\"Orkney\", \"Shetland\"},\n}\naliases[\"Insular Scots\"] = \"Northern Isles\"\n\nlabels[\"Northern Italy\"] = {\n\tdisplay = \"[[w:Northern Italy|northern Italy]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"Northern Italian\"] = \"\
      Northern Italy\"\naliases[\"northern Italy\"] = \"Northern Italy\"\naliases[\"northern Italian\"] = \"Northern Italy\"\n\nlabels[\"Northumbria\"] = {\n\tdisplay = \"[[w:Northumbria|Northumbria]]\",\n\tregional_categories = {\"Northumbrian\"},\n}\naliases[\"\
      Northumbrian\"] = \"Northumbria\"\naliases[\"Northumberland\"] = \"Northumbria\"\naliases[\"Northeast England\"] = \"Northumbria\"\naliases[\"North-East England\"] = \"Northumbria\"\naliases[\"North East England\"] = \"Northumbria\"\n\nlabels[\"Nottinghamshire\"\
      ] = {\n\tdisplay = \"[[w:Nottinghamshire|Nottinghamshire]]\",\n\tregional_categories = {\"Nottinghamshire\"},\n}\naliases[\"Nottinghamshire dialect\"] = \"Nottinghamshire\"\n\nlabels[\"Oltenia\"] = {\n\tdisplay = \"[[w:Oltenia|Oltenia]]\",\n\tregional_categories\
      \ = {\"Oltenian\"},\n}\naliases[\"Oltenian\"] = \"Oltenia\"\n\nlabels[\"Orenburg\"] = {\n\tdisplay = \"[[w:Orenburg|Orenburg]]\",\n\tregional_categories = {\"Orenburg\"},\n}\n\nlabels[\"Orkney\"] = {\n\tdisplay = \"[[w:Orkney|Orkney]]\",\n\tregional_categories\
      \ = {\"Orkney\"},\n}\naliases[\"Orcadian\"] = \"Orkney\"\n\nlabels[\"Oxfordshire\"] = {\n\tdisplay = \"[[w:Oxfordshire|Oxfordshire]]\",\n\tregional_categories = {\"Oxfordshire\"},\n}\naliases[\"Oxfordshire dialect\"] = \"Oxfordshire\"\n\nlabels[\"Pahang\"\
      ] = {\n\tdisplay = \"[[w:Pahang Malay|Pahang Malay]]\",\n\tplain_categories = {\"Pahang Malay\"},\n}\n\nlabels[\"Palatine German\"] = {\n\tdisplay = \"[[w:Palatine German language|Palatine]]\",\n\tregional_categories = {\"Palatine\"},\n}\naliases[\"Palatinate\
      \ German\"] = \"Palatine German\"\naliases[\"Palatinate\"] = \"Palatine German\"\naliases[\"Palatine\"] = \"Palatine German\" -- remove if other languages have 'palatine' varieties\naliases[\"Pälzisch\"] = \"Palatine German\"\naliases[\"Pfälzisch\"] =\
      \ \"Palatine German\"\n\naliases[\"Parma\"] = \"Parmigiano\"\nlabels[\"Parmigiano\"] = {\n\tdisplay = \"[[w:Parma|Parmigiano]]\",\n\tregional_categories = {\"Parmigiano\"},\n}\n\naliases[\"Piacenza\"] = \"Piacentino\"\nlabels[\"Piacentino\"] = {\n\tdisplay\
      \ = \"[[w:Piacenza|Piacentino]]\",\n\tregional_categories = {\"Piacentino\"},\n}\n\nlabels[\"Picardy\"] = {\n\tdisplay = \"[[w:Picardy|Picardy]]\",\n\tregional_categories = {\"Picard\"},\n}\n\nlabels[\"Portugal\"] = {\n\tdisplay = \"[[w:Portugal|Portugal]]\"\
      ,\n\tregional_categories = {\"Portuguese\"},\n}\n\nlabels[\"Provence\"] = {\n\tdisplay = \"[[w:Provençal dialect|Provence]]\",\n\tregional_categories = {\"Provençal\"},\n}\n\nlabels[\"Prussia\"] = {\n\tdisplay = \"[[w:Prussia (region)|Prussia]]\",\n\t\
      regional_categories = {\"Prussian\"},\n}\naliases[\"Prussian\"] = \"Prussia\"\naliases[\"East Prussia\"] = \"Prussia\" -- aliased for now; if many entries use it, it can be separated\naliases[\"East Prussian\"] = \"Prussia\"\naliases[\"West Prussia\"]\
      \ = \"Prussia\"\naliases[\"West Prussian\"] = \"Prussia\"\n\nlabels[\"Pskov\"] = {\n\tdisplay = \"[[w:Pskov|Pskov]]\",\n\tregional_categories = {\"Pskov\"},\n}\naliases[\"Reggio Emilia\"] = \"Reggiano\"\n\nlabels[\"P'yŏng'an\"] = {\n\tdisplay = \"[[w:Pyongan\
      \ dialect|P'yŏng'an dialect]]\",\n\tregional_categories = {\"P'yŏng'an\"},\n}\naliases[\"Pyongan\"] = \"P'yŏng'an\"\naliases[\"Pyong'an\"] = \"P'yŏng'an\"\naliases[\"Pyŏngan\"] = \"P'yŏng'an\"\naliases[\"P'yŏngan\"] = \"P'yŏng'an\"\naliases[\"Pyeongan\"\
      ] = \"P'yŏng'an\"\naliases[\"Pyeong'an\"] = \"P'yŏng'an\"\naliases[\"Pyeong-an\"] = \"P'yŏng'an\"\n\nlabels[\"Reggiano\"] = {\n\tdisplay = \"[[w:Reggio Emilia|Reggiano]]\",\n\tregional_categories = {\"Reggiano\"},\n}\n\nlabels[\"Rimella\"] = {\n\tdisplay\
      \ = \"[[w:Rimella|Rimella]]\",\n\tplain_categories = {\"Rimella Walser\"},\n}\n\nlabels[\"Ripuarian\"] = {\n\tdisplay = \"[[w:Ripuarian language|Ripuarian]]\",\n\tregional_categories = {\"Ripuarian\"},\n}\naliases[\"Ripuarian Franconian\"] = \"Ripuarian\"\
      \naliases[\"Ripuarisch\"] = \"Ripuarian\"\n\nlabels[\"Romanesco\"] = {\n\tdisplay = \"[[w:Romanesco dialect|Rome]]\",\n\tregional_categories = {\"Romanesco\"},\n\tlanguages = { \"it\" },\n}\naliases[\"Roman Italian\"] = \"Romanesco\"\naliases[\"Romanesco\
      \ Italian\"] = \"Romanesco\"\naliases[\"Roman\"] = \"Romanesco\"\naliases[\"Rome\"] = \"Romanesco\"\n\nlabels[\"Rotterdam\"] = {\n\tdisplay = \"[[w:Rotterdam|Rotterdam]]\",\n\tregional_categories = {\"Rotterdam\"},\n}\naliases[\"Rotterdams\"] = \"Rotterdam\"\
      \n\nlabels[\"Saint Ouen\"] = {\n\tdisplay = \"[[w:Saint Ouen, Jersey|Saint Ouën]]\",\n\tregional_categories = {\"Saint Ouënnais\"},\n}\n\nlabels[\"Saint Petersburg\"] = {\n\tdisplay = \"[[w:Saint Petersburg|Saint Petersburg]]\",\n\tregional_categories\
      \ = {\"Saint Petersburg\"},\n}\naliases[\"St Petersburg\"] = \"Saint Petersburg\"\naliases[\"St. Petersburg\"] = \"Saint Petersburg\"\n\nlabels[\"Sappada\"] = {\n\tdisplay = \"[[w:Sappada|Sappada]]\",\n\tregional_categories = {\"Sappada\"},\n}\n\nlabels[\"\
      Sark\"] = {\n\tdisplay = \"[[w:Sercquiais|Sark]]\",\n\tregional_categories = {\"Sarkese\"},\n}\n\nlabels[\"Sauris\"] = {\n\tdisplay = \"[[w:Sauris|Sauris]]\",\n\tregional_categories = {\"Sauris\"},\n}\n\nlabels[\"Scania\"] = {\n\tdisplay = \"[[w:Scania|Scania]]\"\
      ,\n\tregional_categories = {\"Scanian\"},\n}\naliases[\"Skanian\"] = \"Scania\"\naliases[\"Skåne\"] = \"Scania\"\n\nlabels[\"Scotland\"] = {\n\tdisplay = \"[[w:Scotland|Scotland]]\",\n\tregional_categories = {\"Scottish\"},\n}\naliases[\"Scottish\"] =\
      \ \"Scotland\"\n\nlabels[\"Sense\"] = {\n\tdisplay = \"[[w:Sense District|Sense]]\",\n\tregional_categories = {\"Sensler\"},\n}\naliases[\"Sensler\"] = \"Sense\"\naliases[\"Sense District\"] = \"Sense\"\naliases[\"Senslerdeutsch\"] = \"Sense\"\n\nlabels[\"\
      Serbia\"] = {\n\tdisplay = \"[[w:Serbia|Serbia]]\",\n\tregional_categories = {\"Serbian\"},\n}\naliases[\"Serbian\"] = \"Serbia\"\n\nlabels[\"Sette Comuni\"] = {\n\tdisplay = \"[[w:Sette Comuni|Sette Comuni]]\",\n\tplain_categories = {\"Sette Comuni Cimbrian\"\
      },\n}\naliases[\"7\"] = \"Sette Comuni\"\naliases[\"Seven Comunes\"] = \"Sette Comuni\"\n\nlabels[\"Shetland\"] = {\n\tdisplay = \"[[w:Shetland|Shetland]]\",\n\tregional_categories = {\"Shetland\"},\n}\naliases[\"Shetland islands\"] = \"Shetland\"\naliases[\"\
      Shetland Islands\"] = \"Shetland\"\naliases[\"Shetlandic\"] = \"Shetland\"\naliases[\"Shetlands\"] = \"Shetland\"\n\nlabels[\"Silesia\"] = {\n\tdisplay = \"[[w:Silesia|Silesia]]\",\n\tregional_categories = {\"Silesian\"},\n}\naliases[\"Silesian\"] = \"\
      Silesia\"\naliases[\"Silesian German\"] = \"Silesia\" -- might be appropriate to split German/Polish? but why?\naliases[\"Lower Silesian\"] = \"Silesia\" -- ... would any entries be categorized different?\naliases[\"Upper Silesian\"] = \"Silesia\"\n\n\
      labels[\"Somerset\"] = {\n\tdisplay = \"[[w:Somerset|Somerset]]\",\n\tregional_categories = {\"Somerset\"},\n}\naliases[\"Somerset dialect\"] = \"Somerset\"\n\nlabels[\"South Asia\"] = {\n\tdisplay = \"[[w:South Asia|South Asia]]\",\n\tregional_categories\
      \ = {\"South Asian\"},\n}\n\nlabels[\"South Hessian\"] = {\n\tdisplay = \"South Hessian\",\n\tregional_categories = {\"South Hessian\"},\n}\naliases[\"South Hesse\"] = \"South Hessian\"\naliases[\"south Hesse\"] = \"South Hessian\"\naliases[\"South Hessen\"\
      ] = \"South Hessian\"\naliases[\"south Hessen\"] = \"South Hessian\"\naliases[\"south Hessian\"] = \"South Hessian\"\naliases[\"Südhessisch\"] = \"South Hessian\"\n\nlabels[\"South Wales\"] = {\n\tdisplay = \"[[w:South Wales|South Wales]]\",\n\tregional_categories\
      \ = {\"South Wales\"},\n}\n\nlabels[\"Southern England\"] = {\n\tdisplay = \"[[w:Southern England|Southern England]]\",\n\tregional_categories = {\"Southern England\"},\n}\naliases[\"southern England\"] = \"Southern England\"\naliases[\"South England\"\
      ] = \"Southern England\"\naliases[\"south England\"] = \"Southern England\"\n\nlabels[\"Southern Italy\"] = {\n\tdisplay = \"[[w:Southern Italy|southern Italy]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Southern Italian\"] = \"Southern\
      \ Italy\"\naliases[\"southern Italy\"] = \"Southern Italy\"\naliases[\"southern Italian\"] = \"Southern Italy\"\n\nlabels[\"Southern Russia\"] = {\n\tdisplay = \"[[w:Southern Russia|Southern Russia]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"\
      South of Russia\"] = \"Southern Russia\"\naliases[\"south of Russia\"] = \"Southern Russia\"\naliases[\"South Russia\"] = \"Southern Russia\"\naliases[\"Southern Russian\"] = \"Southern Russia\"\naliases[\"southern Russia\"] = \"Southern Russia\"\naliases[\"\
      southern Russian\"] = \"Southern Russia\"\n\nlabels[\"South Tyrol\"] = {\n\tdisplay = \"[[w:South Tyrol|South Tyrol]]\",\n\tregional_categories = {\"South Tyrolean\"},\n}\naliases[\"Alto Adige\"] = \"South Tyrol\"\naliases[\"South Tirol\"] = \"South Tyrol\"\
      \naliases[\"South Tirolean\"] = \"South Tyrol\"\naliases[\"South Tirolese\"] = \"South Tyrol\"\naliases[\"South Tyrolean\"] = \"South Tyrol\"\naliases[\"South Tyrolese\"] = \"South Tyrol\"\n\nlabels[\"Spain\"] = {\n\tdisplay = \"[[w:Spain|Spain]]\",\n\t\
      regional_categories = {\"Spanish\"},\n}\n\nlabels[\"Suffolk\"] = {\n\tdisplay = \"[[w:Suffolk|Suffolk]]\",\n\tregional_categories = {\"Suffolk\"},\n}\naliases[\"Suffolk dialect\"] = \"Suffolk\"\n\nlabels[\"Suðuroy\"] = {\n\tdisplay = \"[[w:Suðuroy|Suð\
      uroy]]\",\n\tregional_categories = {\"Suðuroy\"},\n}\n\nlabels[\"Sweden\"] = {\n\tdisplay = \"[[w:Sweden|Sweden]]\",\n\tregional_categories = {\"Swedish\"},\n}\n\nlabels[\"Switzerland\"] = {\n\tdisplay = \"[[w:Switzerland|Switzerland]]\",\n\tregional_categories\
      \ = {\"Switzerland\"},\n}\naliases[\"Swiss\"] = \"Switzerland\"\naliases[\"Swiss German\"] = \"Switzerland\" -- some German entries use this alias; let -sche know if it causes problems\n\nlabels[\"Sylt\"] = {\n\tdisplay = \"[[w:Sylt|Sylt]]\",\n\tregional_categories\
      \ = {\"Sylt\"},\n}\naliases[\"Söl\"] = \"Sylt\"\naliases[\"Sölring\"] = \"Sylt\"\naliases[\"Söl'\"] = \"Sylt\"\naliases[\"Söl'ring\"] = \"Sylt\"\n\nlabels[\"Teesside\"] = {\n\tdisplay = \"[[w:Teesside|Teesside]]\",\n\tregional_categories = {\"Teesside\"\
      },\n}\n\nlabels[\"Terengganu\"] = {\n\tdisplay = \"[[w:Terengganu Malay|Terengganu Malay]]\",\n\tplain_categories = {\"Terengganu Malay\"},\n}\n\nlabels[\"Thirteen Communities\"] = {\n\tdisplay = \"[[w:Thirteen Communities|Thirteen Communities]]\",\n\t\
      plain_categories = {\"Thirteen Communities Cimbrian\"},\n}\naliases[\"13\"] = \"Thirteen Communities\"\naliases[\"13 Communities\"] = \"Thirteen Communities\"\n\nlabels[\"Timau\"] = {\n\tdisplay = \"[[w:Paluzza|Timau]]\",\n\tregional_categories = {\"Timau\"\
      },\n}\n\nlabels[\"Torlakian\"] = {\n        display = \"[[w:Torlakian dialect|Torlakian]]\",\n        plain_categories = {\"Torlakian Serbo-Croatian\"},\n}\n\nlabels[\"Transylvania\"] = {\n\tdisplay = \"[[w:Transylvania|Transylvania]]\",\n\tregional_categories\
      \ = {\"Transylvanian\"},\n}\naliases[\"Transilvania\"] = \"Transylvania\"\naliases[\"Transylvanian\"] = \"Transylvania\"\n\nlabels[\"Tuscany\"] = {\n\tdisplay = \"[[w:Tuscan dialect|Tuscany]]\",\n\tregional_categories = {\"Tuscan\"},\n}\naliases[\"Tuscan\"\
      ] = \"Tuscany\"\n\nlabels[\"Ukraine\"] = {\n\tdisplay = \"[[w:Ukraine|Ukraine]]\",\n\tregional_categories = {\"Ukrainian\"},\n}\n\nlabels[\"Ulster\"] = {\n\tdisplay = \"[[w:Ulster|Ulster]]\",\n\tregional_categories = {\"Ulster\"},\n}\n\nlabels[\"Upper\
      \ Saxony\"] = {\n\tdisplay = \"[[w:Upper Saxony|Upper Saxony]]\",\n\tregional_categories = {\"Upper Saxon\"},\n}\naliases[\"Upper Saxon\"] = \"Upper Saxony\"\naliases[\"Upper Saxon German\"] = \"Upper Saxony\" -- gmw-ecg dialect; cf Silesian; move to data/subvarieties?\n\
      \nlabels[\"Uri\"] = {\n\tdisplay = \"[[w:Canton of Uri|Uri]]\",\n\tregional_categories = {\"Urner\"},\n}\naliases[\"Urseren\"] = \"Uri\"\naliases[\"Urner\"] = \"Uri\"\naliases[\"Urnerdeutsch\"] = \"Uri\"\n\nlabels[\"Valencia\"] = {\n\tdisplay = \"[[w:Valencia|Valencia]]\"\
      ,\n\tregional_categories = {\"Valencian\"},\n}\naliases[\"Valencian\"] = \"Valencia\"\n\nlabels[\"Venice\"] = {\n\tdisplay = \"[[w:Venice|Venice]]\",\n\tregional_categories = {\"Venetian\"},\n}\naliases[\"Venetian\"] = \"Venice\"\n\nlabels[\"Vienna\"]\
      \ = {\n\tdisplay = \"[[w:Vienna|Vienna]]\",\n\tregional_categories = {\"Viennese\"},\n}\naliases[\"Viennese\"] = \"Vienna\"\n\nlabels[\"Vojvodina\"] = {\n\tdisplay = \"[[w:Vojvodina|Vojvodina]]\",\n\tregional_categories = {\"Vojvodina\"},\n}\n\nlabels[\"\
      Wales\"] = {\n\tdisplay = \"[[w:Wales|Wales]]\",\n\tregional_categories = {\"Welsh\"},\n}\naliases[\"Welsh\"] = \"Wales\"\n\nlabels[\"Wallonia\"] = {\n\tdisplay = \"[[w:Wallonia|Wallonia]]\",\n\tregional_categories = {\"Wallonian\"},\n}\n\nlabels[\"Waterford\"\
      ] = {\n\tdisplay = \"[[w:Gaeltacht na nDéise|Waterford]]\",\n\tregional_categories = {\"Munster\"},\n}\n\nlabels[\"Wearside\"] = {\n\tdisplay = \"[[w:Wearside|Wearside]]\",\n\tregional_categories = {\"Wearside\"},\n}\n\nlabels[\"Wenzhou\"] = {\n\tdisplay\
      \ = \"[[w:Wenzhounese|Wenzhou]]\",\n\tregional_categories = {\"Wenzhounese\"},\n}\naliases[\"Wenzhounese\"] = \"Wenzhou\"\naliases[\"Wenzhou Wu\"] = \"Wenzhou\"\naliases[\"Oujiang\"] = \"Wenzhou\"\n\nlabels[\"West Country\"] = {\n\tdisplay = \"[[w:West\
      \ Country|West Country]]\",\n\tregional_categories = {\"West Country\"},\n}\naliases[\"West England\"] = \"West Country\"\naliases[\"west England\"] = \"West Country\"\naliases[\"Western England\"] = \"West Country\"\naliases[\"western England\"] = \"\
      West Country\"\naliases[\"West of England\"] = \"West Country\"\n\nlabels[\"West Midlands\"] = {\n\tdisplay = \"[[w:West Midlands|West Midlands]]\",\n\tregional_categories = {\"West Midlands\"},\n}\n\nlabels[\"West Palatine\"] = {\n\tdisplay = \"[[w:Palatine\
      \ German language|Westpfälzisch]]\",\n\tregional_categories = {\"West Palatine\"},\n}\naliases[\"Westpfälzisch\"] = \"West Palatine\"\n\nlabels[\"Western Ukraine\"] = {\n\tdisplay = \"[[w:Western Ukraine|Western Ukraine]]\",\n\tregional_categories = {\"\
      Western\"},\n}\n\nlabels[\"Wiltshire\"] = {\n\tdisplay = \"[[w:Wiltshire|Wiltshire]]\",\n\tregional_categories = {\"Wiltshire\"},\n}\naliases[\"Wiltshire dialect\"] = \"Wiltshire\"\naliases[\"Wilts\"] = \"Wiltshire\"\naliases[\"Wilts dialect\"] = \"Wiltshire\"\
      \n\nlabels[\"Yorkshire\"] = {\n\tdisplay = \"[[w:Yorkshire|Yorkshire]]\",\n\tregional_categories = {\"Yorkshire\"},\n}\n\n\n-- Australia and Oceania\n\nlabels[\"Australia\"] = {\n\tdisplay = \"[[w:Australia|Australia]]\",\n\tregional_categories = {\"Australian\"\
      },\n}\naliases[\"AU\"] = \"Australia\"\naliases[\"Australian\"] = \"Australia\"\n\nlabels[\"Hawaii\"] = {\n\tdisplay = \"[[w:Hawaii|Hawaii]]\",\n\tregional_categories = {\"Hawaiian\"},\n}\n\nlabels[\"Kauaʻi\"] = {\n\tdisplay = \"[[w:Kauai|Kauaʻi]]\",\n\
      \tregional_categories = {\"Kauaʻi\"},\n}\naliases[\"Kauai\"] = \"Kauaʻi\"\naliases[\"Kaua'i\"] = \"Kauaʻi\"\n\nlabels[\"Lānaʻi\"] = {\n\tdisplay = \"[[w:Lanai|Lānaʻi]]\",\n\tregional_categories = {\"Lānaʻi\"},\n}\naliases[\"Lanaʻi\"] = \"Lānaʻi\"\naliases[\"\
      Lanai\"] = \"Lānaʻi\"\naliases[\"Lāna'i\"] = \"Lānaʻi\"\naliases[\"Lana'i\"] = \"Lānaʻi\"\n\nlabels[\"Maui\"] = {\n\tdisplay = \"[[w:Maui|Maui]]\",\n\tregional_categories = {\"Maui\"},\n}\n\nlabels[\"Mekong Delta\"] = {\n\tdisplay = \"[[w:Mekong Delta|Mekong\
      \ Delta dialect]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Mekong Delta dialect\"] = \"Mekong Delta\"\n\nlabels[\"Molokaʻi\"] = {\n\tdisplay = \"[[w:Molokai|Molokaʻi]]\",\n\tregional_categories = {\"Molokaʻi\"},\n}\naliases[\"Molokai\"\
      ] = \"Molokaʻi\"\naliases[\"Moloka'i\"] = \"Molokaʻi\"\n\nlabels[\"New Zealand\"] = {\n\tdisplay = \"[[w:New Zealand|New Zealand]]\",\n\tregional_categories = {\"New Zealand\"},\n}\naliases[\"NZ\"] = \"New Zealand\"\n\nlabels[\"Niʻihau\"] = {\n\tdisplay\
      \ = \"[[w:Niihau|Niʻihau]]\",\n\tregional_categories = {\"Niʻihau\"},\n}\naliases[\"Ni'ihau\"] = \"Niʻihau\"\naliases[\"Niihau\"] = \"Niʻihau\"\n\n\n-- Other/unclear\n\nlabels[\"Antarctica\"] = {\n\tdisplay = \"[[w:Antarctica|Antarctica]]\",\n\tregional_categories\
      \ = {\"Antarctic\"},\n}\naliases[\"Antarctic\"] = \"Antarctica\"\naliases[\"South Pole\"] = \"Antarctica\"\n\nlabels[\"Antilles\"] = {\n\tregional_categories = {\"Antilles\"},\n}\n\nlabels[\"Commonwealth\"] = {\n\tdisplay = \"[[Commonwealth of Nations]]\"\
      ,\n\tregional_categories = {\"Commonwealth\"},\n}\n\nlabels[\"Kitti\"] = {\n\tregional_categories = {\"Kitti\"},\n}\n\n\n-- Language specific\n\nlabels[\"African American Vernacular English\"] = {\n\tdisplay = \"[[w:African American Vernacular English|African\
      \ American Vernacular]]\",\n\tregional_categories = {\"African American Vernacular\"},\n}\naliases[\"AAVE\"] = \"African American Vernacular English\"\naliases[\"ebonics\"] = \"African American Vernacular English\"\n\nlabels[\"Anglo-Norman\"] = {\n\tdisplay\
      \ = \"[[w:Anglo-Norman language|Anglo-Norman]]\",\n\tplain_categories = {\"Anglo-Norman Old French\"},\n}\n\nlabels[\"Australian English\"] = {\n\tdisplay = \"[[w:Australian English|Australia]]\",\n\tplain_categories = {\"Australian English\"},\n}\n\n\
      labels[\"Akhmimic\"] = {\n\tdisplay = \"[[w:Coptic language#Akhmimic|Akhmimic]]\",\n\tplain_categories = {\"Akhmimic Coptic\"},\n}\n\nlabels[\"Ararat\"] = {\n\tdisplay = \"[[w:Araratian dialect|Ararat]]\",\n\tplain_categories = {\"Ararat Armenian\"},\n\
      }\n\nlabels[\"Balhae\"] = {\n\tplain_categories = {\"Balhae Old Korean\"},\n}\n\nlabels[\"Balkar\"] = {\n\tplain_categories = {\"Balkar\"},\n}\n\nlabels[\"Birmingham\"] = {\n\tdisplay = \"[[wikipedia:Brummie|Birmingham]]\",\n\tplain_categories = {\"Birmingham\
      \ English\"},\n}\naliases[\"Brummie\"] = \"Birmingham\"\naliases[\"Brummy\"] = \"Birmingham\"\n\nlabels[\"Bohairic\"] = {\n\tdisplay = \"[[w:Coptic language#Bohairic|Bohairic]]\",\n\tplain_categories = {\"Bohairic Coptic\"},\n}\naliases[\"Memphitic\"]\
      \ = \"Bohairic\"\n\nlabels[\"Bokmål\"] = {\n\tdisplay = \"[[w:Bokmål|Bokmål]]\",\n\tplain_categories = {\"Norwegian Bokmål\"},\n}\n\nlabels[\"Border Scots\"] = {\n\tplain_categories = {\"Border Scots\"},\n}\n\nlabels[\"British Contemporary Latin\"] = {\n\
      \tdisplay = \"British [[w:Contemporary Latin|Contemporary Latin]]\",\n\tplain_categories = {\"British Contemporary Latin\"},\n}\naliases[\"Contemporary Anglo-Latin\"] = \"British Contemporary Latin\"\naliases[\"Contemporary British\"] = \"British Contemporary\
      \ Latin\"\n\nlabels[\"British Late Latin\"] = {\n\tdisplay = \"British [[w:Late Latin|Late Latin]]\",\n\tplain_categories = {\"British Late Latin\"},\n}\naliases[\"Late Anglo-Latin\"] = \"British Late Latin\"\naliases[\"Late British\"] = \"British Late\
      \ Latin\"\n\nlabels[\"British Medieval Latin\"] = {\n\tdisplay = \"British [[w:Medieval Latin|Medieval Latin]]\",\n\tplain_categories = {\"British Medieval Latin\"},\n}\naliases[\"British Mediaeval Latin\"] = \"British Medieval Latin\"\naliases[\"Mediaeval\
      \ Anglo-Latin\"] = \"British Medieval Latin\"\naliases[\"Mediaeval British\"] = \"British Medieval Latin\"\naliases[\"Medieval Anglo-Latin\"] = \"British Medieval Latin\"\naliases[\"Medieval British\"] = \"British Medieval Latin\"\n\nlabels[\"British New\
      \ Latin\"] = {\n\tdisplay = \"British [[w:New Latin|New Latin]]\",\n\tplain_categories = {\"British New Latin\"},\n}\naliases[\"New Anglo-Latin\"] = \"British New Latin\"\naliases[\"New British\"] = \"British New Latin\"\n\nlabels[\"British Renaissance\
      \ Latin\"] = {\n\tdisplay = \"British [[w:Renaissance Latin|Renaissance Latin]]\",\n\tplain_categories = {\"British Renaissance Latin\"},\n}\naliases[\"Renaissance Anglo-Latin\"] = \"British Renaissance Latin\"\naliases[\"Renaissance British\"] = \"British\
      \ Renaissance Latin\"\n\nlabels[\"British Vulgar Latin\"] = {\n\tdisplay = \"[[w:British Vulgar Latin|British Vulgar Latin]]\",\n\tplain_categories = {\"British Vulgar Latin\"},\n}\naliases[\"Vulgar Anglo-Latin\"] = \"British Vulgar Latin\"\naliases[\"\
      Vulgar British\"] = \"British Vulgar Latin\"\n\nlabels[\"Canadian English\"] = {\n\tdisplay = \"[[w:Canadian English|Canada]]\",\n\tplain_categories = {\"Canadian English\"},\n}\n\nlabels[\"Canadian spelling\"] = {\n\tdisplay = \"[[w:Canadian spelling|Canadian]]\"\
      ,\n\tplain_categories = {\"Canadian English forms\"},\n}\n\nlabels[\"Cantonese\"] = {\n\tdisplay = \"[[w:Cantonese|Cantonese]]\",\n\tplain_categories = {\"Cantonese Chinese\"},\n}\n\nlabels[\"Central Plains Mandarin\"] = {\n\tdisplay = \"[[w:Central Plains\
      \ Mandarin|Central Plains Mandarin]]\",\n\tplain_categories = {\"Central Plains Mandarin\"},\n}\naliases[\"Zhongyuan Mandarin\"] = \"Central Plains Mandarin\"\n\nlabels[\"Chakavian\"] = {\n\tdisplay = \"[[Chakavian]]\",\n\tplain_categories = {\"Chakavian\
      \ Serbo-Croatian\"},\n}\naliases[\"Čakavian\"] = \"Chakavian\"\n\nlabels[\"Cham Albanian\"] = {\n\tdisplay = \"[[w:Cham Albanian dialect|Cham]]\",\n\tplain_categories = {\"Cham Albanian\"},\n}\n\nlabels[\"Chinglish\"] = {\n\tdisplay = \"[[w:Chinglish|Chinglish]]\"\
      ,\n\tplain_categories = {\"Chinglish\"},\n}\n\nlabels[\"Cockney\"] = {\n\tdisplay = \"[[w:Cockney#Speech|Cockney]]\",\n\tplain_categories = {\"Cockney English\"},\n}\n\nlabels[\"Cois Fharraige\"] = {\n\tdisplay = \"[[w:Gaeltacht Cois Fharraige|Cois Fharraige]]\"\
      ,\n\tplain_categories = {\"Cois Fharraige Irish\"},\n}\naliases[\"Cois Fhairrge\"] = \"Cois Fharraige\"\n\nlabels[\"Dari\"] = {\n\tdisplay = \"[[w:Dari (Persian)|Dari (Afghanistan)]]\",\n\tplain_categories = {\"Dari Persian\"},\n}\n\nlabels[\"De'kwana\"\
      ] = {\n\tdisplay = \"De'kwana dialect\",\n\tplain_categories = {\"De'kwana Maquiritari\"},\n}\naliases[\"De'kwana dialect\"] = \"De'kwana\"\n\nlabels[\"dialectal Mandarin\"] = {\n\tdisplay = \"dialectal [[Mandarin]]\",\n\tplain_categories = {\"Mandarin\
      \ Chinese\"},\n}\nlabels[\"dialectal Cantonese\"] = {\n\tdisplay = \"dialectal [[Cantonese]]\",\n\tplain_categories = {\"Cantonese Chinese\"},\n}\nlabels[\"dialectal Hakka\"] = {\n\tdisplay = \"dialectal [[Hakka]]\",\n\tplain_categories = {\"Hakka Chinese\"\
      },\n}\nlabels[\"dialectal Gan\"] = {\n\tdisplay = \"dialectal [[Gan]]\",\n\tplain_categories = {\"Gan Chinese\"},\n}\nlabels[\"dialectal Jin\"] = {\n\tdisplay = \"dialectal [[Jin]]\",\n\tplain_categories = {\"Jin Chinese\"},\n}\nlabels[\"dialectal Min\
      \ Dong\"] = {\n\tdisplay = \"dialectal [[Min Dong]]\",\n\tplain_categories = {\"Min Dong Chinese\"},\n}\nlabels[\"dialectal Min Nan\"] = {\n\tdisplay = \"dialectal [[Min Nan]]\",\n\tplain_categories = {\"Min Nan Chinese\"},\n}\nlabels[\"dialectal Wu\"\
      ] = {\n\tdisplay = \"dialectal [[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n}\nlabels[\"dialectal Xiang\"] = {\n\tdisplay = \"dialectal [[Xiang]]\",\n\tplain_categories = {\"Xiang Chinese\"},\n}\n\nlabels[\"Digor\"] = {\n\tdisplay = \"Digor dialect\"\
      ,\n\tplain_categories = {\"Digor Ossetian\"},\n}\naliases[\"Digor dialect\"] = \"Digor\"\n\nlabels[\"Doric Scots\"] = {\n\tdisplay = \"[[w:Doric dialect (Scotland)|Doric]]\",\n\tplain_categories = {\"Doric Scots\"},\n}\n\nlabels[\"East Anglian English\"\
      ] = {\n\tdisplay = \"[[w:East Anglian English|East Anglia]]\",\n\tplain_categories = {\"East Anglian English\"},\n}\n\nlabels[\"East Frisian\"] = {\n\tdisplay = \"[[w:East Frisian Low Saxon|East Frisian]]\",\n\tplain_categories = {\"East Frisian Low German\"\
      },\n} -- for East Frisian dialectal German Low German, not the Frisianic language\n\nlabels[\"East Germanic\"] = {\n\tdisplay = \"[[w:East Germanic languages|East Germanic]]\",\n\tplain_categories = {\"East Proto-Germanic\"},\n}\n\nlabels[\"East Midlands\
      \ English\"] = {\n\tdisplay = \"[[w:East Midlands English|East Midlands]]\",\n\tplain_categories = {\"East Midlands English\"},\n}\n\nlabels[\"Eastern Armenian\"] = {\n\tdisplay = \"[[w:Eastern Armenian|Eastern Armenian]]\",\n\tplain_categories = {\"Eastern\
      \ Armenian\"},\n}\n\nlabels[\"Eastern Catalan\"] = {\n\tdisplay = \"[[w:Catalan dialects|Eastern Catalan]]\",\n\tplain_categories = {\"Eastern Catalan\"},\n}\n\nlabels[\"Ecclesiastical Latin\"] = {\n\tdisplay = \"[[w:Ecclesiastical Latin|Ecclesiastical\
      \ Latin]]\",\n\tplain_categories = {\"Ecclesiastical Latin\"},\n}\naliases[\"Church Latin\"] = \"Ecclesiastical Latin\"\n\nlabels[\"Dungan\"] = {\n\tdisplay = \"[[w:Dungan language|Dungan]]\",\n\tplain_categories = {\"Dungan Chinese\"},\n}\n\nlabels[\"\
      Ekavian\"] = {\n\tdisplay = \"[[Ekavian]]\",\n}\n\nlabels[\"European French\"] = {\n\tdisplay = \"[[w:European French|Europe]]\",\n\tplain_categories = {\"European French\"},\n}\n\nlabels[\"Fayyumic\"] = {\n\tdisplay = \"[[w:Coptic language#Fayyumic|Fayyumic]]\"\
      ,\n\tplain_categories = {\"Fayyumic Coptic\"},\n}\naliases[\"Faiyumic\"] = \"Fayyumic\"\naliases[\"Bashmuric\"] = \"Fayyumic\"\n\nlabels[\"East and West Flanders\"] = {\n\tdisplay = \"[[w:East Flanders|East]] and [[w:West Flanders|West Flanders]]\",\n\t\
      plain_categories = {\"East and West Flemish Dutch\"},\n}\naliases[\"Flanders\"] = \"East and West Flanders\"\naliases[\"Flemish\"] = \"East and West Flanders\"\n\nlabels[\"Gan\"] = {\n\tdisplay = \"[[w:Gan Chinese|Gan]]\",\n\tplain_categories = {\"Gan\
      \ Chinese\"},\n}\n\nlabels[\"Geordie\"] = {\n\tdisplay = \"[[w:Geordie|Geordie]]\",\n\tplain_categories = {\"Geordie English\"},\n}\n\nlabels[\"Gheg\"] = {\n\tdisplay = \"[[w:Gheg Albanian|Gheg]]\",\n\tplain_categories = {\"Gheg Albanian\"},\n}\n\nlabels[\"\
      Guardiol\"] = {\n\tdisplay = \"[[w:Guardia Piemontese|Guardiol]]\",\n\tplain_categories = {\"Guardiol Occitan\"},\n}\n\nlabels[\"Hakka\"] = {\n\tdisplay = \"[[w:Hakka Chinese|Hakka]]\",\n\tplain_categories = {\"Hakka Chinese\"},\n}\n\nlabels[\"Hamburgisch\"\
      ] = {\n\tdisplay = \"[[w:Hamburgisch dialect|Hamburgisch]]\",\n\tplain_categories = {\"Hamburgisch Low German\"},\n}\n\nlabels[\"Hamshen\"] = {\n\tdisplay = \"[[w:Homshetsi dialect|Hamshen]]\",\n\tplain_categories = {\"Hamshen Armenian\"},\n}\naliases[\"\
      Homshetsi\"] = \"Hamshen\"\naliases[\"Homshetsma\"] = \"Hamshen\"\n\nlabels[\"Helsinki slang\"] = {\n\tdisplay = \"[[w:Helsinki slang|Helsinki slang]]\",\n\tplain_categories = {\"Helsinki slang\"},\n}\n\nlabels[\"Hokkien\"] = {\n\tdisplay = \"[[w:Hokkien|Hokkien]]\"\
      ,\n\tplain_categories = {\"Hokkien Chinese\"},\n}\n\nlabels[\"Hong Kong Cantonese\"] = {\n\tdisplay = \"[[w:Hong Kong Cantonese|Hong Kong Cantonese]]\",\n\tplain_categories = {\"Hong Kong Cantonese\"},\n}\n\nlabels[\"Hubei\"] = {\n\tdisplay = \"[[w:Hubei|Hubei]]\"\
      ,\n}\n\nlabels[\"Hulu Pahang\"] = {\n\tplain_categories = {\"Hulu Pahang Malay\"},\n}\n\nlabels[\"Ikavian\"] = {\n\tdisplay = \"[[Ikavian]]\",\n\tplain_categories = {\"Ikavian Serbo-Croatian\"},\n}\n\nlabels[\"Indian English\"] = {\n\tdisplay = \"[[w:Indian\
      \ English|India]]\",\n\tplain_categories = {\"Indian English\"},\n}\n\nlabels[\"Ingilo\"] = {\n\tdisplay = \"[[w:Ingiloy people|Ingilo]]\",\n\tplain_categories = {\"Ingilo Georgian\"},\n}\naliases[\"Ingiloy\"] = \"Ingilo\"\naliases[\"Saingilo\"] = \"Ingilo\"\
      \n\nlabels[\"Inner Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About Mbugu|Ma'a]]\",\n\tplain_categories = {\"Inner Mbugu\"},\n}\naliases[\"inner Mbugu\"] = \"Inner Mbugu\"\n\nlabels[\"Inuktun\"] = {\n\tplain_categories = {\"Inuktun Inuktitut\"},\n}\naliases[\"\
      Polar Eskimo\"] = \"Inuktun\"\n\nlabels[\"Inuttut\"] = {\n\tplain_categories = {\"Inuttut Inuktitut\"},\n}\naliases[\"Nunatsiavummiutut\"] = \"Inuttut\"\naliases[\"Labradorimiutut\"] = \"Inuttut\"\naliases[\"Inuttitut\"] = \"Inuttut\"\n\nlabels[\"Irish\
      \ English\"] = {\n\tdisplay = \"[[w:Irish English|Ireland]]\",\n\tplain_categories = {\"Irish English\"},\n}\n\nlabels[\"Iron\"] = {\n\tdisplay = \"Iron dialect\",\n\tplain_categories = {\"Iron Ossetian\"},\n}\naliases[\"Iron dialect\"] = \"Iron\"\n\n\
      labels[\"Itivimuit\"] = {\n\tplain_categories = {\"Itivimuit Inuktitut\"},\n}\n\nlabels[\"Jianghuai Mandarin\"] = {\n\tdisplay = \"[[w:Lower Yangtze Mandarin|Jianghuai Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"Jiang-Huai\
      \ Mandarin\"] = \"Jianghuai Mandarin\"\naliases[\"Lower Yangtze Mandarin\"] = \"Jianghuai Mandarin\"\n\nlabels[\"Jiaoliao Mandarin\"] = {\n\tdisplay = \"[[w:Jiaoliao Mandarin|Jiaoliao Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"\
      Jiao-Liao Mandarin\"] = \"Jiaoliao Mandarin\"\n\nlabels[\"Jilu Mandarin\"] = {\n\tdisplay = \"[[w:Jilu Mandarin|Jilu Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"Ji-Lu Mandarin\"] = \"Jilu Mandarin\"\n\nlabels[\"Jin\"] = {\n\
      \tdisplay = \"[[w:Jin Chinese|Jin]]\",\n\tregional_categories = {\"Jin\"},\n}\n\nlabels[\"Kajkavian\"] = {\n\tdisplay = \"[[Kajkavian]]\",\n\tplain_categories = {\"Kajkavian Serbo-Croatian\"},\n}\n\nlabels[\"Karabakh\"] = {\n\tdisplay = \"[[w:Karabakh\
      \ dialect (Armenian)|Karabakh]]\",\n\tplain_categories = {\"Karabakh Armenian\"},\n}\naliases[\"Gharabagh\"] = \"Karabakh\"\naliases[\"Artsakh\"] = \"Karabakh\"\n\nlabels[\"Kansai\"] = {\n\tdisplay = \"[[w:Kansai dialect|Kansai]]\",\n\tplain_categories\
      \ = {\"Kansai Japanese\"},\n}\n\nlabels[\"Karachay\"] = {\n\tplain_categories = {\"Karachay\"},\n}\n\nlabels[\"Kichwa\"] = {\n\tdisplay = \"[[w:Kichwa language|Standard Ecuadorian Kichwa]]\",\n\tplain_categories = {\"Standard Kichwa\"},\n}\n\nlabels[\"\
      Kromanti\"] = {\n\tdisplay = \"[[w:Jamaican Maroon spirit-possession language|Kromanti spirit possession language]]\",\n\tplain_categories = {\"Kromanti Akan\"},\n}\n\nlabels[\"Lanyin Mandarin\"] = {\n\tdisplay = \"[[w:Lanyin Mandarin|Lanyin Mandarin]]\"\
      ,\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"Lan-Yin Mandarin\"] = \"Lanyin Mandarin\"\n\nlabels[\"Late Latin\"] = {\n\tdisplay = \"[[w:Late Latin|Late Latin]]\",\n\tplain_categories = {\"Late Latin\"},\n}\n\nlabels[\"Latin America\"]\
      \ = {\n\tdisplay = \"[[w:Latin America|Latin America]]\",\n\tplain_categories = {\"Latin American Spanish\"},\n}\naliases[\"Latin American Spanish\"] = \"Latin America\"\n\nlabels[\"Louisiana French\"] = {\n\tdisplay = \"[[w:Cajun French|Louisiana]]\"\
      ,\n\tplain_categories = {\"Louisiana French\"},\n}\n\nlabels[\"Low Prussian\"] = {\n\tdisplay = \"[[w:Low Prussian dialect|Low Prussian]]\",\n\tplain_categories = {\"Low Prussian Low German\"},\n}\n\nlabels[\"Lowlands Scots\"] = {\n\tplain_categories =\
      \ {\"Lowlands Scots\"},\n}\n\nlabels[\"Lycopolitan\"] = {\n\tdisplay = \"[[w:Coptic language#Lycopolitan|Lycopolitan]]\",\n\tplain_categories = {\"Lycopolitan Coptic\"},\n}\naliases[\"Subakhmimic\"] = \"Lycopolitan\"\naliases[\"Assiutic\"] = \"Lycopolitan\"\
      \n\nlabels[\"Mecklenburgisch Low German\"] = {\n\tdisplay = \"[[w:Mecklenburgisch dialect|Mecklenburgisch]]\",\n\tplain_categories = {\"Mecklenburgisch Low German\"},\n}\naliases[\"Mecklenburgisch\"] = \"Mecklenburgisch Low German\"\naliases[\"Mecklenburg\"\
      ] = \"Mecklenburgisch Low German\"\n\nlabels[\"Medieval Latin\"] = {\n\tdisplay = \"[[w:Medieval Latin|Medieval Latin]]\",\n\tplain_categories = {\"Medieval Latin\"},\n}\n\nlabels[\"Midlands English\"] = {\n\tdisplay = \"[[w:Midlands English|Midlands]]\"\
      ,\n\tplain_categories = {\"Midlands English\"},\n}\n\nlabels[\"Min\"] = {\n\tdisplay = \"[[w:Min Chinese|Min]]\",\n\tplain_categories = {\"Min Chinese\"},\n}\n\nlabels[\"Min Bei\"] = {\n\tdisplay = \"[[w:Northern Min|Min Bei]]\",\n\tplain_categories =\
      \ {\"Min Bei Chinese\"},\n}\n\nlabels[\"Min Dong\"] = {\n\tdisplay = \"[[w:Eastern Min|Min Dong]]\",\n\tplain_categories = {\"Min Dong Chinese\"},\n}\n\nlabels[\"Min Nan\"] = {\n\tdisplay = \"[[w:Southern Min|Min Nan]]\",\n\tplain_categories = {\"Min Nan\
      \ Chinese\"},\n}\n\nlabels[\"Min Zhong\"] = {\n\tdisplay = \"[[w:Central Min|Min Zhong]]\",\n\tplain_categories = {\"Min Zhong Chinese\"},\n}\n\nlabels[\"Mistralian\"] = {\n\tdisplay = \"[[w:Occitan language#Writing system|Mistralian]]\",\n\tplain_categories\
      \ = {\"Mistralian Occitan\"},\n}\n\nlabels[\"Mooring\"] = {\n\tdisplay = \"[[w:Mooring (North Frisian dialect)|Mooring]]\",\n\tplain_categories = {\"Mooring North Frisian\"},\n}\naliases[\"Mooring dialect\"] = \"Mooring\"\n\nlabels[\"Multicultural London\
      \ English\"] = {\n\tdisplay = \"[[w:Multicultural London English|MLE]]\",\n\tplain_categories = {\"Multicultural London English\"},\n}\naliases[\"MLE\"] = \"Multicultural London English\"\n\nlabels[\"New Latin\"] = {\n\tdisplay = \"[[w:New Latin|New Latin]]\"\
      ,\n\tplain_categories = {\"New Latin\"},\n}\n\nlabels[\"New Zealand English\"] = {\n\tdisplay = \"[[w:New Zealand English|New Zealand]]\",\n\tplain_categories = {\"New Zealand English\"},\n}\n\nlabels[\"Non-Oxford British spelling\"] = {\n\tdisplay = \"\
      Non-[[w:Oxford spelling|Oxford]] [[British English]]\",\n\tplain_categories = {\"British English forms\"},\n}\naliases[\"non-Oxford British spelling\"] = \"Non-Oxford British spelling\"\naliases[\"Non-Oxford\"] = \"Non-Oxford British spelling\"\naliases[\"\
      non-Oxford\"] = \"Non-Oxford British spelling\"\n\nlabels[\"Normal Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About Mbugu|Mbugu]]\",\n\tplain_categories = {\"Normal Mbugu\"},\n}\naliases[\"normal Mbugu\"] = \"Normal Mbugu\"\n\nlabels[\"North Germanic\"]\
      \ = {\n\tdisplay = \"[[w:North Germanic languages|North Germanic]]\",\n\tplain_categories = {\"North Proto-Germanic\"},\n}\n\nlabels[\"Northeastern Mandarin\"] = {\n\tdisplay = \"[[w:Northeastern Mandarin|Northeastern Mandarin]]\",\n\tplain_categories\
      \ = {\"Mandarin Chinese\"},\n}\naliases[\"northeastern Mandarin\"] = \"Northeastern Mandarin\"\n\nlabels[\"Northern Dutch\"] = {\n\tdisplay = \"[[w:Dutch dialects|Northern]]\",\n\tplain_categories = {\"Northern Dutch\"},\n}\n\nlabels[\"Northern England\
      \ English\"] = {\n\tdisplay = \"[[w:Northern England English|Northern England]]\",\n\tplain_categories = {\"Northern England English\"},\n}\naliases[\"Northern English dialect\"] = \"Northern England English\"\naliases[\"northern English\"] = \"Northern\
      \ England English\"\naliases[\"North English\"] = \"Northern England English\"\naliases[\"north English\"] = \"Northern England English\"\n\nlabels[\"Northern Finnic\"] = {\n\tplain_categories = {\"Northern Proto-Finnic\"},\n}\n\nlabels[\"Northern Wu\"\
      ] = {\n\tdisplay = \"Northern [[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n}\n\nlabels[\"Northwest Germanic\"] = {\n\tdisplay = \"[[w:Northwest Germanic languages|Northwest Germanic]]\",\n\tplain_categories = {\"Northwest Proto-Germanic\"},\n}\n\n\
      labels[\"Nynorsk\"] = {\n\tdisplay = \"Nynorsk\",\n\tplain_categories = {\"Norwegian Nynorsk\"},\n}\n\nlabels[\"Oxford British spelling\"] = {\n\tdisplay = \"[[w:Oxford spelling|Oxford]] [[British English]]\",\n\tplain_categories = {\"Oxford spellings\"\
      },\n}\naliases[\"Oxford\"] = \"Oxford British spelling\"\n\nlabels[\"Oxyrhynchite\"] = {\n\tdisplay = \"[[w:Coptic language#Oxyrhynchite|Oxyrhynchite]]\",\n\tplain_categories = {\"Oxyrhynchite Coptic\"},\n}\naliases[\"Mesokemic\"] = \"Oxyrhynchite\"\n\n\
      labels[\"Pennsylvania Dutch English\"] = {\n\tdisplay = \"[[w:Pennsylvania Dutch English|Pennsylvania Dutch English]]\",\n\tplain_categories = {\"Pennsylvania Dutch English\"},\n}\n\nlabels[\"Pomeranian Low German\"] = {\n\tdisplay = \"[[w:Pomeranian Low\
      \ German|Pomeranian]]\",\n\tplain_categories = {\"Pomeranian Low German\"},\n}\naliases[\"Pomeranian LG\"] = \"Pomeranian Low German\"\n\nlabels[\"Potteries\"] = {\n\tdisplay = \"[[w:Potteries dialect|Potteries]]\",\n\tplain_categories = {\"Potteries English\"\
      },\n}\naliases[\"Potteries dialect\"] = \"Potteries\"\n\nlabels[\"Punjab\"] = {\n\tdisplay = \"[[w:Punjab|Punjab]]\",\n\tregional_categories = {\"Punjabi\"},\n}\n\nlabels[\"Puter\"] = {\n\tdisplay = \"[[w:Putèr|Puter]]\",\n\tplain_categories = {\"Puter\
      \ Romansch\"},\n}\n\nlabels[\"Puxian Min\"] = {\n\tdisplay = \"[[w:Pu-Xian Min|Puxian Min]]\",\n\tplain_categories = {\"Puxian Min Chinese\"},\n}\naliases[\"Puxian\"] = \"Puxian Min\"\naliases[\"Pu-Xian Min\"] = \"Puxian Min\"\naliases[\"Pu-Xian\"] = \"\
      Puxian Min\"\naliases[\"Xinghua\"] = \"Puxian Min\"\naliases[\"Hinghwa\"] = \"Puxian Min\"\n\nlabels[\"Quanzhou\"] = {\n\tdisplay = \"[[w:Quanzhou dialect|Quanzhou]]\",\n\tplain_categories = {\"Hokkien Chinese\"},\n}\naliases[\"Quanzhou dialect\"] = \"\
      Quanzhou\"\naliases[\"Chinchew\"] = \"Quanzhou\"\naliases[\"Chinchew dialect\"] = \"Quanzhou\"\naliases[\"Choanchew\"] = \"Quanzhou\"\naliases[\"Choanchew dialect\"] = \"Quanzhou\"\n\nlabels[\"Renaissance Latin\"] = {\n\tdisplay = \"[[w:Renaissance Latin|Renaissance\
      \ Latin]]\",\n\tplain_categories = {\"Renaissance Latin\"},\n}\n\nlabels[\"Royal Thai\"] = {\n\tdisplay = \"royal\",\n\tplain_categories = {\"Thai royal vocabulary\"},\n}\n\nlabels[\"Rumantsch Grischun\"] = {\n\tdisplay = \"[[w:Rumantsch Grischun|Rumantsch\
      \ Grischun]]\",\n}\n\nlabels[\"Saarland\"] = {\n\tdisplay = \"Saarland\",\n\tregional_categories = {\"Saarland\"},\n}\naliases[\"Saarländisch\"] = \"Saarland\"\naliases[\"Saarlandic\"] = \"Saarland\"\naliases[\"Saarlandish\"] = \"Saarland\"\n\nlabels[\"\
      Sahidic\"] = {\n\tdisplay = \"[[w:Coptic language#Sahidic|Sahidic]]\",\n\tplain_categories = {\"Sahidic Coptic\"},\n}\naliases[\"Thebaic\"] = \"Sahidic\"\n\nlabels[\"Saigon\"] = {\n\tdisplay = \"[[w:Saigon|Saigon]]\",\n\tregional_categories = {\"Southern\"\
      },\n}\naliases[\"Saigonese\"] = \"Saigon\"\n\nlabels[\"Scottish English\"] = {\n\tdisplay = \"[[w:Scottish English|Scotland]]\",\n\tplain_categories = {\"Scottish English\"},\n}\n\nlabels[\"Shapsug\"] = {\n\tdisplay = \"[[w:Shapsug Adyghe dialect|Shapsug\
      \ dialect]]\",\n\tplain_categories = {\"Shapsug Adyghe\"},\n}\n\nlabels[\"Shopski\"] = {\n\tdisplay = \"[[w:Shopi#Dialects|Shopski]]\",\n\tplain_categories = {\"Shopski Bulgarian\"},\n}\n\nlabels[\"Sichuan\"] = {\n\tdisplay = \"[[w:Sichuanese dialects|Sichuan]]\"\
      ,\n\tplain_categories = {\"Sichuanese Chinese\"},\n}\naliases[\"Sichuanese\"] = \"Sichuan\"\n\nlabels[\"Silla\"] = {\n\tplain_categories = {\"Silla Old Korean\"},\n}\n\nlabels[\"Sistani\"] = {\n\tdisplay = \"[[w:Sistani dialect|Sistani]]\",\n\tplain_categories\
      \ = {\"Sistani Persian\"},\n}\n\nlabels[\"Shropshire\"] = {\n\tdisplay = \"[[w:Shropshire|Shropshire]]\",\n\tregional_categories = {\"Shropshire\"},\n}\naliases[\"Shropshire dialect\"] = \"Shropshire\"\naliases[\"Shrops\"] = \"Shropshire\"\naliases[\"\
      Salop\"] = \"Shropshire\"\naliases[\"Salopian\"] = \"Shropshire\"\n\nlabels[\"Skiri Pawnee\"] = {\n\tplain_categories = {\"Skiri Pawnee\"},\n}\n\nlabels[\"South African English\"] = {\n\tdisplay = \"[[w:South African English|South Africa]]\",\n\tplain_categories\
      \ = {\"South African English\"},\n}\n\nlabels[\"South Scots\"] = {\n\tdisplay = \"[[w:Southern Scots|South Scots]]\",\n\tplain_categories = {\"South Scots\"},\n}\n\nlabels[\"Southern Dutch\"] = {\n\tdisplay = \"[[w:Dutch dialects|Southern]]\",\n\tplain_categories\
      \ = {\"Southern Dutch\"},\n}\n\nlabels[\"Southern England English\"] = {\n\tdisplay = \"[[w:English in southern England|Southern England]]\",\n\tplain_categories = {\"Southern England English\"},\n}\naliases[\"Southern English\"] = \"Southern England English\"\
      \naliases[\"Southern English dialect\"] = \"Southern England English\"\n\nlabels[\"Southern Germany\"] = {\n\tdisplay = \"[[w:Southern Germany|southern Germany]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"southern Germany\"] = \"southern\
      \ Germany\"\naliases[\"Southern German\"] = \"southern Germany\"\naliases[\"southern German\"] = \"southern Germany\"\naliases[\"South Germany\"] = \"southern Germany\"\naliases[\"south Germany\"] = \"southern Germany\"\naliases[\"South German\"] = \"\
      southern Germany\"\naliases[\"south German\"] = \"southern Germany\"\n\nlabels[\"Southern US English\"] = {\n\tdisplay = \"[[w:Southern American English|Southern US]]\",\n\tplain_categories = {\"Southern US English\"},\n}\naliases[\"Southern American English\"\
      ] = \"Southern US English\"\n\nlabels[\"Southern Wu\"] = {\n\tdisplay = \"Southern [[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n}\n\nlabels[\"Southwestern Mandarin\"] = {\n\tdisplay = \"[[w:Southwestern Mandarin|Southwestern Mandarin]]\",\n\tplain_categories\
      \ = {\"Southwestern Mandarin\"},\n}\naliases[\"southwestern Mandarin\"] = \"Southwestern Mandarin\"\naliases[\"Upper Yangtze Mandarin\"] = \"Southwestern Mandarin\"\naliases[\"Southwest Mandarin\"] = \"Southwestern Mandarin\"\n\naliases[\"Spilamberto\"\
      ] = \"Spilambertese\"\nlabels[\"Spilambertese\"] = {\n\tdisplay = \"[[w:Spilamberto|Spilambertese]]\",\n\tregional_categories = {\"Spilambertese\"},\n}\n\nlabels[\"Surmiran\"] = {\n\tdisplay = \"[[w:Surmiran dialect|Surmiran]]\",\n\tplain_categories =\
      \ {\"Surmiran Romansch\"},\n}\n\nlabels[\"Sursilvan\"] = {\n\tdisplay = \"[[w:Sursilvan dialects (Romansh)|Sursilvan]]\",\n\tplain_categories = {\"Sursilvan Romansch\"},\n}\n\nlabels[\"Sussex\"] = {\n\tdisplay = \"[[w:Sussex dialect|Sussex]]\",\n\tplain_categories\
      \ = {\"Sussex English\"},\n}\n\nlabels[\"Sutsilvan\"] = {\n\tdisplay = \"[[w:Sutsilvan dialects (Romansh)|Sutsilvan]]\",\n\tplain_categories = {\"Sutsilvan Romansch\"},\n}\n\nlabels[\"Switzerland and Liechtenstein spelling\"] = {\n\tdisplay = \"[[Switzerland]]\
      \ and [[Liechtenstein]]\",\n\tplain_categories = {\"Switzerland and Liechtenstein German forms\"},\n}\naliases[\"SLDE\"] = \"Switzerland and Liechtenstein spelling\"\n\nlabels[\"Tosk\"] = {\n\tdisplay = \"[[w:Tosk Albanian|Tosk]]\",\n\tplain_categories\
      \ = {\"Tosk Albanian\"},\n}\n\nlabels[\"Trás-os-Montes\"] = {\n\tdisplay = \"[[Trás-os-Montes]]\",\n\tplain_categories = {\"Transmontane Portuguese\"},\n}\n\nlabels[\"Tyneside\"] = {\n\tplain_categories = {\"Geordie English\"},\n}\n\nlabels[\"Ulster Scots\"\
      ] = {\n\tdisplay = \"[[w:Ulster Scots dialects|Ulster Scots]]\",\n\tplain_categories = {\"Ulster Scots\"},\n}\naliases[\"Ullans\"] = \"Ulster Scots\"\n\nlabels[\"Uttar Pradesh\"] = {\n\tdisplay = \"[[w:Uttar Pradesh|Uttar Pradesh]]\",\n\tregional_categories\
      \ = {\"Uttar Pradeshi\"},\n}\n\nlabels[\"Vallader\"] = {\n\tdisplay = \"[[w:Vallader dialect (Romansh)|Vallader]]\",\n\tplain_categories = {\"Vallader Romansch\"},\n}\n\nlabels[\"Vivaro-Alpine\"] = {\n\tdisplay = \"[[w:Vivaro-Alpine dialect|Vivaro-Alpine]]\"\
      ,\n\tplain_categories = {\"Vivaro-Alpine Occitan\"},\n}\n\nlabels[\"Vulgar Latin\"] = {\n\tdisplay = \"[[w:Vulgar Latin|Vulgar Latin]]\",\n\tplain_categories = {\"Vulgar Latin\"},\n}\n\nlabels[\"West Country English\"] = {\n\tdisplay = \"[[w:West Country\
      \ English|West Country]]\",\n\tplain_categories = {\"West Country English\"},\n}\naliases[\"West Country dialect\"] = \"West Country English\"\n\nlabels[\"West Germanic\"] = {\n\tdisplay = \"[[w:West Germanic languages|West Germanic]]\",\n\tplain_categories\
      \ = {\"West Proto-Germanic\"},\n}\n\nlabels[\"West Midlands English\"] = {\n\tdisplay = \"[[w:West Midlands English|West Midlands]]\",\n\tplain_categories = {\"West Midlands English\"},\n}\naliases[\"West Midlands dialect\"] = \"West Midlands English\"\
      \n\nlabels[\"Western Armenian\"] = {\n\tdisplay = \"[[w:Western Armenian|Western Armenian]]\",\n\tplain_categories = {\"Western Armenian\"},\n}\n\nlabels[\"Western Catalan\"] = {\n\tdisplay = \"[[w:Catalan dialects|Western Catalan]]\",\n\tplain_categories\
      \ = {\"Western Catalan\"},\n}\n\nlabels[\"Western Malayo-Polynesian\"] = {\n\tdisplay = \"[[w:Western Malayo-Polynesian languages|Western Malayo-Polynesian]]\",\n\tplain_categories = {\"Western Proto-Malayo-Polynesian\"},\n}\n\nlabels[\"Western Pomeranian\
      \ Low German\"] = {\n\tdisplay = \"Western Pomeranian\",\n\tplain_categories = {\"Western Pomeranian Low German\"},\n}\naliases[\"West Pomeranian Low German\"] = \"Western Pomeranian Low German\"\naliases[\"Western Pomeranian LG\"] = \"Western Pomeranian\
      \ Low German\"\naliases[\"West Pomeranian LG\"] = \"Western Pomeranian Low German\"\n\nlabels[\"Western Samic\"] = {\n\tplain_categories = {\"Western Proto-Samic\"},\n}\n\nlabels[\"Wu\"] = {\n\tdisplay = \"[[w:Wu Chinese|Wu]]\",\n\tplain_categories = {\"\
      Wu Chinese\"},\n}\n\nlabels[\"Xiamen\"] = {\n\tdisplay = \"[[w:Amoy dialect|Xiamen]]\",\n\tplain_categories = {\"Hokkien Chinese\"},\n}\naliases[\"Xiamen dialect\"] = \"Xiamen\"\naliases[\"Amoy\"] = \"Xiamen\"\naliases[\"Amoy dialect\"] = \"Xiamen\"\n\n\
      labels[\"Xiang\"] = {\n\tdisplay = \"[[w:Xiang Chinese|Xiang]]\",\n\tplain_categories = {\"Xiang Chinese\"},\n}\n\nlabels[\"Ye'kwana\"] = {\n\tdisplay = \"Ye'kwana dialect\",\n\tplain_categories = {\"Ye'kwana Maquiritari\"},\n}\naliases[\"Ye'kwana dialect\"\
      ] = \"Ye'kwana\"\n\nlabels[\"Zhangzhou\"] = {\n\tdisplay = \"[[w:Zhangzhou dialect|Zhangzhou]]\",\n\tplain_categories = {\"Hokkien Chinese\"},\n}\naliases[\"Zhangzhou dialect\"] = \"Zhangzhou\"\naliases[\"Changchew\"] = \"Zhangzhou\"\naliases[\"Changchew\
      \ dialect\"] = \"Zhangzhou\"\n\n-- Adds labels[label][\"languages\"][language_code] = true for members of \"languages\" field.\nm_data_functions.handle_languages(labels)\n\nreturn {labels = labels, aliases = aliases, deprecated = deprecated}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:03.498Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3A...&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=67610 t=1555362363384782
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1350'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:03 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 570322373, 229276067, 699993784
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="912074" pageid="912074" ns="10" title="Template:..."><revisions><rev user="Erutuon" timestamp="2018-12-25T22:00:31Z" contentformat="text/x-wiki" contentmodel="wikitext"
      comment="Undo revision 51143033 by [[Special:Contributions/Erutuon|Erutuon]] ([[User talk:Erutuon|talk]]): [[Module:italics]] can&#039;t easily unitalicize matching bracket character references" xml:space="preserve">&lt;span class="q-hellip-sp"&gt;&amp;#32;&lt;/span&gt;&lt;span
      class="q-hellip-b"&gt;[&lt;/span&gt;{{#if:{{{1|}}}|&lt;span title="{{{1}}}"&gt;…&lt;/span&gt;|…}}&lt;span class="q-hellip-b"&gt;]&lt;/span&gt;&lt;span class="q-hellip-b"&gt;&amp;#32;&lt;/span&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:06:03.744Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atrans-top&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56061 t=1555362363640202
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:03 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1233.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 411024725, 640496638, 681672421
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="454350" pageid="454350" ns="10" title="Template:trans-top"><revisions><rev user="Erutuon" timestamp="2017-06-13T19:37:12Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="change requested by [[User:CodeCat|CodeCat]] in [[Wiktionary:Grease pit/2017/June#Requested change to Template:trans-top]]" xml:space="preserve">{{#if:{{{1|}}}||{{#ifeq:{{NAMESPACE}}||[[Category:Translation table header lacks gloss]]}}}}&lt;div class="NavFrame" {{#ifeq:{{{1|}}}|Translations to be checked||{{#if:{{{id|{{{1|}}}}}}|id{{=}}"Translations-{{anchorencode:{{{id|{{{1}}}}}}}}"}}}}&gt;
      &lt;div class="NavHead" style="text-align:left; "&gt;{{#invoke:links|remove_links|{{{1|Translations}}}}}&lt;/div&gt;
      &lt;div class="NavContent"&gt;
      {| class="translations" role="presentation" style="width:100%;" data-gloss="{{#invoke:ugly hacks|escape_wiki|{{{1|}}}}}"
      |-
      | class="translations-cell" style="background-color:#ffffe0; vertical-align:top; width:48%; text-align:left; " |
      &lt;noinclude&gt;
      |}&lt;/div&gt;&lt;/div&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:03.907Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3A%3D&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=40093 t=1555362363820877
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:03 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 753992901, 820267372, 680226499
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5118411" pageid="5118411" ns="10" title="Template:="><revisions><rev user="Yair rand" timestamp="2016-02-04T04:30:06Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="close noinclude" xml:space="preserve">=&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:04.131Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Augly+hacks&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=68893 t=1555362364014214
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1281.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 202749400, 241094005, 696721517
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4300282\" pageid=\"4300282\" ns=\"828\" title=\"Module:ugly hacks\"><revisions><rev user=\"Rua\" timestamp=\"2018-01-04T23:40:32Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"Removed some unused functions\" xml:space=\"preserve\">local export = {}\n\nfunction export.explode(frame)\n\tlocal wanted_index = tonumber(frame.args[3])\n \n\tlocal count = 1\n\tfor item in mw.text.gsplit(frame.args[1],\
      \ frame.args[2], true) do\n\t\tif count == wanted_index then\n\t\t\treturn item\n\t\tend\n\t\tcount = count + 1\t\n\tend\n\t\n\treturn \"\"\nend\n\nfunction export.substr(frame)\n\treturn mw.ustring.sub(frame.args[1] or \"\", tonumber(frame.args[2]) or\
      \ 1, tonumber(frame.args[3]) or -1)\nend\n\nfunction export.find(frame)\n\treturn mw.ustring.find(frame.args[1] or \"\", frame.args[2] or \"\", 1, true) or \"\"\nend\n\nfunction export.find_pattern(frame)\n\treturn mw.ustring.find(frame.args[1] or \"\"\
      , frame.args[2] or \"\", 1, false) or \"\"\nend\n\nfunction export.replace(frame)\n\treturn (mw.ustring.gsub(frame.args[1] or \"\", frame.args[2] or \"\", frame.args[3] or \"\"))\nend\n\nfunction export.match(frame)\n\treturn (mw.ustring.match(frame.args[1]\
      \ or \"\", frame.args[2] or \"\"))\nend\n\nfunction export.escape_wiki(frame)\n\treturn mw.text.nowiki(frame.args[1] or \"\")\nend\n\nfunction export.escape_html(frame)\n\treturn mw.text.encode(frame.args[1] or \"\")\nend\n\nfunction export.is_valid_page_name(frame)\n\
      \tlocal res = mw.title.new(frame.args[1])\n\tif res then\n\t\treturn \"valid\"\n\telse\n\t\treturn \"\"\n\tend\nend\n\nreturn setmetatable({ }, {\n\t__index = function(self, key)\n\t\tlocal m_debug = require('Module:debug')\n\t\tlocal frame = mw.getCurrentFrame()\n\
      \t\tlocal pframe = frame:getParent()\n\t\tlocal tname = pframe and pframe:getTitle()\n\n\t\tm_debug.track('ugly hacks/' .. key)\n\t\tif pframe then\n\t\t\tm_debug.track('ugly hacks/' .. key .. '/from ' .. tname)\n\t\telse\n\t\t\tmw.log(debug.traceback('ugly\
      \ hacks: parent frame not available'))\n\t\tend\n\t\treturn export[key]\t\n\tend\n})</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:59.913Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Adebug&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=61700 t=1555362359799143
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:59 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1285.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 572938278, 554684157, 686710694
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4109235\" pageid=\"4109235\" ns=\"828\" title=\"Module:debug\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-12-25T05:19:47Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 51139735 by [[Special:Contributions/Erutuon|Erutuon]] ([[User talk:Erutuon|talk]]): restore if needed\" xml:space=\"preserve\">local export = {}\n\nlocal escape\ndo\n\tlocal escapes = {\n\t\
      \t[\"\\a\"] = \"a\", [\"\\b\"] = \"b\", [\"\\f\"] = \"f\", [\"\\n\"] = \"n\", [\"\\r\"] = \"r\",\n\t\t[\"\\t\"] = \"t\", [\"\\v\"] = \"v\", [\"\\\\\"] = \"\\\\\", [\"\\\"\"] = '\"', [\"'\"] = \"'\",\n\t}\n\t\n\tlocal function helper(char)\n\t\treturn escapes[char]\
      \ and \"\\\\\" .. escapes[char]\n\t\t\tor (\"\\\\%03d\"):format(char:byte())\n\tend\n\t\n\t-- Escape control characters, backslash, double quote, and bytes that aren't\n\t-- used in UTF-8.\n\t-- Escape stuff that can't be saved in a MediaWiki page, like\
      \ invalid UTF-8\n\t-- and NFD character sequences? Hard.\n\t-- Similar to string.format(\"%q\", str), which does not use C-like simple\n\t-- escapes and does not escape bytes that are not used in UTF-8.\n\tescape = function (str)\n\t\treturn (str:gsub(\"\
      [%z\\1-\\31\\\\\\\"\\127\\192\\193\\245-\\255]\", helper))\n\tend\nend\n\nexport.escape = escape\n\n-- Convert a value to a string\nfunction export.dump(value, prefix, tsort)\n\tlocal t = type(value)\n\t\n\tprefix = prefix or \"\"\n\t\n\tif t == \"string\"\
      \ then\n\t\treturn '\"' .. escape(value) .. '\"'\n\telseif t == \"table\" then\n\t\tlocal str_table = {}\n\t\t\n\t\ttable.insert(str_table, \" {\")\n\t\t\n\t\tfor key, val in require(\"Module:table\").sortedPairs(value, tsort) do\n\t\t\ttable.insert(str_table,\
      \ \" \" .. prefix .. \"\\t[\" .. export.dump(key, prefix .. \"\\t\") .. \"] = \" .. export.dump(val, prefix .. \"\\t\"):gsub(\"^ \", \"\") .. \",\")\n\t\tend\n\t\t\n\t\ttable.insert(str_table, \" \" .. prefix .. \"}\")\n\t\t\n\t\treturn table.concat(str_table,\
      \ \"\\n\")\n\telse\n\t\treturn tostring(value)\n\tend\nend\n\n\nfunction export.highlight_dump(value, prefix, tsort, options)\n\toptions = options or {}\n\t\n\tlocal func = options.modified and \"modified_dump\" or \"dump\"\n\t\n\tlocal dump = export[func](value,\
      \ prefix, tsort)\n\t\n\t-- Remove spaces at beginnings of lines (which are simply to force a &lt;pre&gt;&lt;/pre&gt; tag).\n\tdump = dump:gsub(\"^ \", \"\")\n\tdump = dump:gsub(\"\\n \", \"\\n\")\n\t\n\treturn export.highlight(dump)\nend\n\n\n-- Returns\
      \ true if table contains a table as one of its values\nlocal function containsTable(t)\n\tfor key, value in pairs(t) do\n\t\tif type(value) == \"table\" then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\n\n\nlocal function containsTablesWithSize(t,\
      \ size)\n\tfor key, value in pairs(t) do\n\t\tif type(value) == \"table\" and require(\"Module:table\").size(value) ~= size then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\t\n\n\n--[=[\n\tConvert a value to a string.\n\tLike dump below, but\
      \ if a table has consecutive numbered keys and does not\n\thave a table as one of its values, it will be placed on a single line.\n\tUsed by [[Module:User:Erutuon/script recognition]].\n]=]\nfunction export.modified_dump(value, prefix, tsort)\n\tlocal\
      \ t = type(value)\n\t\n\tprefix = prefix or \"\"\n\t\n\tif t == \"string\" then\n\t\treturn '\"' .. value .. '\"'\n\telseif t == \"table\" then\n\t\tlocal str_table = {}\n\t\t\n\t\tlocal containsTable = containsTable(value)\n\t\tlocal consecutive = require(\"\
      Module:table\").isArray(value)\n\t\tif consecutive and not containsTable or containsTable and containsTablesWithSize(value, 3) then\n\t\t\ttable.insert(str_table, \"{\")\n\t\t\t\n\t\t\tfor key, val in require(\"Module:table\").sortedPairs(value, tsort)\
      \ do\n\t\t\t\tif containsTable then\n\t\t\t\t\ttable.insert(str_table, \"\\n\\t\" .. prefix)\n\t\t\t\telse\n\t\t\t\t\ttable.insert(str_table, \" \")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif type(key) == \"string\" then\n\t\t\t\t\ttable.insert(str_table, \"[\"\
      \ .. export.modified_dump(key) .. \"] = \")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\ttable.insert(str_table, type(key) == \"number\" and type(val) == \"number\" and string.format(\"0x%05X\", val) or export.modified_dump(val))\n\t\t\t\t\n\t\t\t\tif not (consecutive\
      \ and #value == 3) or type(key) == \"number\" and value[key + 1] then\n\t\t\t\t\ttable.insert(str_table, \",\")\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif containsTable then\n\t\t\t\ttable.insert(str_table, \"\\n\" .. prefix)\n\t\t\telse\n\t\t\t\ttable.insert(str_table,\
      \ \" \")\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(str_table, \"}\")\n\t\t\treturn table.concat(str_table)\n\t\tend\n\t\t\n\t\ttable.insert(str_table, \" {\")\n\t\t\n\t\tfor key, val in require(\"Module:table\").sortedPairs(value, tsort) do\n\t\t\ttable.insert(str_table,\
      \ \" \" .. prefix .. \"\\t[\" .. export.modified_dump(key, prefix .. \"\\t\") .. \"] = \" .. export.modified_dump(val, prefix .. \"\\t\"):gsub(\"^ \", \"\") .. \",\")\n\t\tend\n\t\t\n\t\ttable.insert(str_table, \" \" .. prefix .. \"}\")\n\t\t\n\t\treturn\
      \ table.concat(str_table, \"\\n\")\n\telseif t == \"number\" and value &gt; 46 then\n\t\treturn string.format(\"0x%05X\", value)\n\telse\n\t\treturn tostring(value)\n\tend\nend\n\t\n\nfunction export.track(key)\n\tlocal frame = mw.getCurrentFrame()\n\t\
      if key then\n\t\tif type(key) ~= \"table\" then\n\t\t\tkey = { key }\n\t\tend\n\t\t\n\t\tfor i, value in pairs(key) do\n\t\t\tpcall(frame.expandTemplate, frame, { title = 'tracking/' .. value })\n\t\tend\n\telse\n\t\terror('No tracking key supplied to\
      \ the function \"' .. track .. '\".')\n\tend\nend\n\n\n-- Trigger a script error from a template\nfunction export.error(frame)\n\terror(frame.args[1] or \"(no message specified)\")\nend\n\n--[[\n\tConvenience function for generating syntaxhighlight tags.\n\
      \tDisplay defaults to block.\n\tOptions is a table. To display inline text with HTML highlighting:\n\t\t{ inline = true, lang = \"html\" }\n]]\nfunction export.highlight(content, options)\n\tif type(content) == \"table\" then\n\t\toptions = content\n\t\
      \toptions = {\n\t\t\tlang = options.lang or \"lua\",\n\t\t\tinline = options.inline and true\n\t\t}\n\t\treturn function(content)\n\t\t\treturn mw.getCurrentFrame():extensionTag{\n\t\t\t\tname = \"syntaxhighlight\",\n\t\t\t\tcontent = content,\n\t\t\t\t\
      args = options\n\t\t\t}\n\t\tend\n\telse\n\t\treturn mw.getCurrentFrame():extensionTag{\n\t\t\tname = \"syntaxhighlight\",\n\t\t\tcontent = content,\n\t\t\targs = {\n\t\t\t\tlang = options and options.lang or \"lua\",\n\t\t\t\tinline = options and options.inline\
      \ and true or nil\n\t\t\t}\n\t\t}\n\tend\nend\n\nfunction export.track_unrecognized_args(args, template_name)\n\tlocal function track(code)\n\t\texport.track(template_name .. \"/\" .. code)\n\tend\n\t\n    track(\"unrecognized arg\")\n\t\n\tlocal arg_list\
      \ = {}\n\tfor arg, value in pairs(args) do\n\t\ttrack(\"unrecognized arg/\" .. arg)\n\t\ttable.insert(arg_list, (\"|%s=%s\"):format(arg, value))\n\tend\n\t\n\tmw.log(\n\t\t(\"Unrecognized parameter%s in {{%s}}: %s.\"):format(\n\t\t\targ_list[2] and \"\
      s\" or \"\",\n\t\t\ttemplate_name,\n\t\t\ttable.concat(arg_list, \", \")))\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:04.308Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fescape_wiki&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=57469 t=1555362364205011
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 926125769, 723928964, 697508278
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/escape_wiki" to="Template:tracking/ugly hacks/escape wiki" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/escape wiki" missing="" /></pages></query></api>
- recorded: 2015-08-30T00:23:27.991Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fescape_wiki%2Ffrom+%3D&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=30-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 30 Aug 2015 00:23:27 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=30-Aug-2015
      X-Cache: cp1052 miss (0), cp3009 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2514835831, 3831287418, 3743363768
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/escape_wiki/from =" to="Template:tracking/ugly hacks/escape wiki/from =" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/escape wiki/from =" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:06:04.636Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atrans-mid&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58799 t=1555362364529457
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 503687747, 730052062, 680226542
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="454352" pageid="454352" ns="10" title="Template:trans-mid"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T20:02:56Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:trans-mid]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefini..." xml:space="preserve">&lt;noinclude&gt;
      [[Category:Column templates|{{PAGENAME}}]]
      &lt;/noinclude&gt;| style="width:1%; " |
      | class="translations-cell" style="background-color:#ffffe0; vertical-align:top; text-align:left; width:48%; " |
      &lt;noinclude&gt;[[Category:Translation templates|trans mid]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:04.814Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atrans-bottom&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52297 t=1555362364714963
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 586311281, 822590359, 690179191
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="454351" pageid="454351" ns="10" title="Template:trans-bottom"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T20:02:55Z" contentformat="text/x-wiki"
      contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:trans-bottom]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite)
      [Move=Allow only template editors and administrators] (indef..." xml:space="preserve">|}&lt;/div&gt;&lt;/div&gt;&lt;noinclude&gt;[[Category:Column templates|{{PAGENAME}}]]&lt;/noinclude&gt;&lt;noinclude&gt;[[Category:Translation templates|trans bottom]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:06:04.983Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AR%3AJargon+File&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42565 t=1555362364891778
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1685'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 673947472, 721578118, 692273014
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4488837" pageid="4488837" ns="10" title="Template:R:Jargon File"><revisions><rev user="Sgconlaw" timestamp="2017-03-19T14:05:01Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Updated template" xml:space="preserve">{{R:Reference-meta
      |entry           = {{{entry|{{{1|{{PAGENAME}}}}}}}}
      |url             = {{#ifeq:{{padleft:|4|{{{url|{{{2|}}}}}}}}|http
          | {{{url|{{{2|}}}}}}
          | http://catb.org/esr/jargon/html/&lt;includeonly&gt;{{#if:{{{url|}}}{{{2|}}}
              | {{{url|{{{2|}}}}}}
              | {{uc:{{#invoke:ugly hacks|substr|{{{entry|{{{1|{{PAGENAME}}}}}}}}|1|1}}}}/{{#invoke:ugly hacks|replace|{{{entry|{{{1|{{PAGENAME}}}}}}}}| |-}}.html
            }}&lt;/includeonly&gt;
        }}
      |editor          = [[w:Eric S. Raymond|Eric S[teven] Raymond]]
      |reference       = [[w:Jargon File|The Jargon File]], version 4.4.7
      |date            = 29 December 2003
      |accessdate      = {{{accessdate|{{{3|}}}}}}
      |passage         = {{{passage|{{{4|}}}}}}
      |nodot           = {{{nodot|}}}
      }}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:05.158Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fsubstr&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=34630 t=1555362365077518
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '160'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 205724683, 811005961, 687363223
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/substr" missing="" /></pages></query></api>
- recorded: 2015-08-30T00:23:29.136Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fsubstr%2Ffrom+R%3AJargon+File&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=30-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 30 Aug 2015 00:23:29 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=30-Aug-2015
      X-Cache: cp1065 miss (0), cp3006 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 1142606264, 253838464, 3743364093
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/substr/from R:Jargon File" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:06:05.480Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Freplace&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=36598 t=1555362365397328
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '161'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 926287227, 630219470, 683859982
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/replace" missing="" /></pages></query></api>
- recorded: 2015-08-30T00:23:29.547Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Freplace%2Ffrom+R%3AJargon+File&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=30-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 30 Aug 2015 00:23:29 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=30-Aug-2015
      X-Cache: cp1054 miss (0), cp3009 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2303591495, 3831288069, 3743364198
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/replace/from R:Jargon File" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:06:06.155Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aen-verb&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43879 t=1555362366063681
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1914'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:06 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 424969306, 728216349, 682852068
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="288355" pageid="288355" ns="10" title="Template:en-verb"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T17:52:04Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:en-verb]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:en-headword|show|verbs}}&lt;!--

      --&gt;{{#if:{{#invoke:ugly hacks|is_valid_page_name|{{{1|valid}}}}}||[[Category:Template with raw link/en-verb]][[Category:Template with raw link/en-verb/1]]}}&lt;!--
      --&gt;{{#if:{{#invoke:ugly hacks|is_valid_page_name|{{{2|valid}}}}}||[[Category:Template with raw link/en-verb]][[Category:Template with raw link/en-verb/2]]}}&lt;!--
      --&gt;{{#if:{{#invoke:ugly hacks|is_valid_page_name|{{{3|valid}}}}}||[[Category:Template with raw link/en-verb]][[Category:Template with raw link/en-verb/3]]}}&lt;!--
      --&gt;{{#if:{{#invoke:ugly hacks|is_valid_page_name|{{{4|valid}}}}}||[[Category:Template with raw link/en-verb]][[Category:Template with raw link/en-verb/4]]}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:07.149Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fis_valid_page_name&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=31548 t=1555362367072420
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:07 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1282.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 187988785, 479129194, 678951539
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/is_valid_page_name" to="Template:tracking/ugly hacks/is valid page name" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/is valid page name" missing="" /></pages></query></api>
- recorded: 2015-08-30T00:23:30.830Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fis_valid_page_name%2Ffrom+en-verb&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=30-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '349'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 30 Aug 2015 00:23:30 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=30-Aug-2015
      X-Cache: cp1067 miss (0), cp3013 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2886851521, 1460243055, 3743364630
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/is_valid_page_name/from en-verb" to="Template:tracking/ugly hacks/is valid page name/from en-verb" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/is valid page name/from en-verb" missing="" /></pages></query></api>
- recorded: 2015-08-30T00:23:31.125Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aterm&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=30-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 30 Aug 2015 00:23:31 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=30-Aug-2015
      X-Cache: cp1052 miss (0), cp3006 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2514840097, 253839453, 3743364723
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="724759" pageid="724759" ns="10" title="Template:term"><revisions><rev user="CodeCat" timestamp="2014-04-09T16:57:43Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:links/templates|l_term_t|face=term|compat=1}}&lt;!--

      Add categories for certain bad or missing parameters.
      --&gt;&lt;includeonly&gt;{{#invoke:term cleanup|cleanup}}&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:07.999Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48592 t=1555362367896301
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:07 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1280.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 568588400, 640234266, 701793216
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4282542\" pageid=\"4282542\" ns=\"828\" title=\"Module:links/templates\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T18:56:49Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\tModules used:\n\t[[Module:links]]\n\t[[Module:languages]]\n\t[[Module:scripts]]\n\t[[Module:parameters]]\n\t[[Module:debug]]\n]=]\n\
      \n-- Used in [[Template:l]] and [[Template:m]].\nfunction export.l_term_t(frame)\n\tlocal face = frame.args[\"face\"]\n\tlocal allowSelfLink = frame.args[\"notself\"]; allowSelfLink = not allowSelfLink or allowSelfLink == \"\"\n\t\n\tlocal params = {\n\
      \t\t[1] = {required = true},\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"gloss\"},\n\t\t[\"accel-form\"] = {},\n\t\t[\"accel-nostore\"] = {type = \"boolean\"},\n\t\t[\"accel-translit\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] =\
      \ {},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {alias_of = \"gloss\"},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t}\n\t\n\t-- Compatibility mode for {{term}}.\n\t-- If given a nonempty value, the\
      \ function uses lang= to specify the\n\t-- language, and all the positional parameters shift one number lower.\n\tlocal compat = (frame.args[\"compat\"] or \"\") ~= \"\"\n\t\n\tif compat then\n\t\tparams[\"lang\"] = {},\n\t\ttable.remove(params, 1)\n\t\
      end\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = args[compat and \"lang\" or 1]\n\t\n\t-- Tracking for missing language or und\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"\
      link/no lang\")\n\telseif lang == \"und\" then\n\t\trequire(\"Module:debug\").track(\"link/und\")\n\tend\n\t\n\tlang = lang or \"und\"\n\tlocal sc = args[\"sc\"]\n\t\n\tlocal term = args[(compat and 1 or 2)]\n\tlocal alt = args[(compat and 2 or 3)]\n\t\
      \n\t-- Check parameters\n\tlang = require(\"Module:languages\").getByCode(lang) or\n\t\trequire(\"Module:languages\").err(lang, 1)\n\t\n\tif sc then\n\t\tsc = require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is\
      \ not valid.\")\n\tend\n\t\n\tif not term and not alt and frame.args[\"demo\"] then\n\t\tterm = frame.args[\"demo\"]\n\tend\n\t\n\t-- Forward the information to full_link\n\treturn require(\"Module:links\").full_link( \n\t\t{\n\t\t\tlang = lang, \n\t\t\
      \tsc = sc, \n\t\t\tterm = term,\n\t\t\talt = alt, \n\t\t\tid = args[\"id\"], \n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgenders = args[\"g\"], \n\t\t\tgloss = args[\"gloss\"], \n\t\t\tpos = args[\"pos\"], \n\t\t\tlit = args[\"lit\"],\n\
      \t\t\taccel = args[\"accel-form\"] and {\n\t\t\t\tform = args[\"accel-form\"],\n\t\t\t\tnostore = args[\"accel-nostore\"],\n\t\t\t\ttranslit = args[\"accel-translit\"],\n\t\t\t} or nil,\n\t\t},\n\t\tface,\n\t\tallowSelfLink\n\t)\nend\n\n-- Used in [[Template:ll]].\n\
      function export.ll(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2] = { allow_empty = true },\n\t\t[3] = {},\n\t\t[\"notself\"] = { type = \"boolean\", default = false },\n\t\t[\"id\"] = {},\n\t}\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\tlocal allowSelfLink = not args[\"notself\"]\n\t\n\tlocal lang = args[1]\n\tlang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, 1)\n\t\n\tlocal text = args[2]\n\tlocal\
      \ alt = args[3]\n\tif text == \"\" then\n\t\treturn alt or \"\"\n\tend\n\t\n\tlocal id = args[\"id\"]\n\t\n\treturn require(\"Module:links\").language_link(\n\t\t{\n\t\t\tterm = text,\n\t\t\talt = alt,\n\t\t\tlang = lang,\n\t\t\tid = id\n\t\t},\n\t\tallowSelfLink\n\
      \t)\nend\n\nfunction export.def_t(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn require(\"Module:links\").english_links(args[1])\n\
      end\n\n\nfunction export.linkify_t(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\targs[1] = mw.text.trim(args[1])\n\t\n\tif\
      \ args[1] == \"\" or args[1]:find(\"[[\", nil, true) then\n\t\treturn args[1]\n\telse\n\t\treturn \"[[\" .. args[1] .. \"]]\"\n\tend\nend\n\nfunction export.section_link_t(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\t\n\treturn require(\"Module:links\").section_link(args[1])\nend\n\nfunction export.language_name_link_t(frame)\n\tlocal face = frame.args[\"face\"]\n\tlocal allowSelfLink = frame.args[\"notself\"]; allowSelfLink\
      \ = not allowSelfLink or allowSelfLink == \"\"\n\t\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"gloss\"},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"\
      ] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {alias_of = \"gloss\"},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"w\"] = { type = \"boolean\", default = false },\n\t}\n\t\n\t-- Compatibility mode for {{term}}.\n\t-- If given a nonempty\
      \ value, the function uses lang= to specify the\n\t-- language, and all the positional parameters shift one number lower.\n\tlocal compat = (frame.args[\"compat\"] or \"\") ~= \"\"\n\t\n\tif compat then\n\t\tparams[\"lang\"] = {},\n\t\ttable.remove(params,\
      \ 1)\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = args[compat and \"lang\" or 1]\n\t\n\t-- Tracking for missing language or und\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"\
      link/no lang\")\n\telseif lang == \"und\" then\n\t\trequire(\"Module:debug\").track(\"link/und\")\n\tend\n\t\n\tlang = lang or \"und\"\n\tlocal sc = args[\"sc\"]\n\t\n\tlocal term = args[(compat and 1 or 2)]\n\tlocal alt = args[(compat and 2 or 3)]\n\t\
      \n\t-- Check parameters\n\tlang = require(\"Module:languages\").getByCode(lang) or\n\t\trequire(\"Module:languages\").err(lang, 1)\n\tif sc then\n\t\tsc = require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not\
      \ valid.\")\n\tend\n\t\n\tif not term and not alt and frame.args[\"demo\"] then\n\t\tterm = frame.args[\"demo\"]\n\tend\n\t\n\t--[[\n\t\tAdd a language name, linked to Wikipedia if the Wikipedia parameter is set to true.\n\t\tForward the information to\
      \ full_link.\n\t]]\n\tlocal language_name = args.w and lang:makeWikipediaLink() or lang:getCanonicalName()\n\t\n\tif term == \"-\" then\n\t\treturn language_name\n\telse\n\t\treturn language_name .. \" \" ..\n\t\t\trequire(\"Module:links\").full_link(\
      \ \n\t\t\t\t{\n\t\t\t\t\tlang = lang, \n\t\t\t\t\tsc = sc, \n\t\t\t\t\tterm = term, \n\t\t\t\t\talt = alt, \n\t\t\t\t\tid = args[\"id\"], \n\t\t\t\t\ttr = args[\"tr\"], \n\t\t\t\t\tts = args[\"ts\"], \n\t\t\t\t\tgenders = args[\"g\"], \n\t\t\t\t\tgloss\
      \ = args[\"gloss\"], \n\t\t\t\t\tpos = args[\"pos\"], \n\t\t\t\t\tlit = args[\"lit\"]\n\t\t\t\t},\n\t\t\t\tface,\n\t\t\t\tallowSelfLink\n\t\t\t)\n\tend\nend\n\nfunction export.light_link_t(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t\
      [2] = { required = true },\n\t\t[3] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"langname\"] = { required = true },\n\t}\n\t\n\tlocal args = frame:getParent().args\n\t\n\tfor key, value in pairs (params) do\n\t\tif value.required then\n\t\t\tif not args[key] then\n\
      \t\t\t\terror('Parameter \"' .. key .. '\" is required.')\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn require(\"Module:links\").light_link{  \n\t\tlangCode = args[1], \n\t\tterm = args[2], \n\t\talt = args[3], \n\t\tscCode = args.sc or \"Latn\",  \n\t\tlangName\
      \ = args.langname\n\t}\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:08.211Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata3%2Fs&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38934 t=1555362368079840
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:08 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 495799872, 821841811, 702415383
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4206210\" pageid=\"4206210\" ns=\"828\" title=\"Module:languages/data3/s\"><revisions><rev user=\"Mahagaja\" timestamp=\"2019-04-13T13:02:48Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local u = mw.ustring.char\n\n-- UTF-8 encoded strings for some commonly used diacritics\nlocal GRAVE     = u(0x0300)\nlocal ACUTE     = u(0x0301)\nlocal CIRC\
      \      = u(0x0302)\nlocal TILDE     = u(0x0303)\nlocal MACRON    = u(0x0304)\nlocal BREVE     = u(0x0306)\nlocal DOTABOVE  = u(0x0307)\nlocal DIAER     = u(0x0308)\nlocal CARON     = u(0x030C)\nlocal DGRAVE    = u(0x030F)\nlocal INVBREVE  = u(0x0311)\n\
      local DOTBELOW  = u(0x0323)\nlocal RINGBELOW = u(0x0325)\nlocal CEDILLA   = u(0x0327)\n\nlocal Latn = {\"Latn\"}\n\nlocal m = {}\n\nm[\"saa\"] = {\n\t\"Saba\",\n\t\"Q3914885\",\n\t\"cdc-est\",\n\tscripts = Latn,\n}\n\nm[\"sab\"] = {\n\t\"Buglere\",\n\t\
      \"Q3368506\",\n\t\"cba\",\n\totherNames = {\"Bugle\", \"Murire\", \"Muoy\", \"Sabanero\", \"Bokotá\", \"Bogota\"},\n\tscripts = Latn,\n}\n\nm[\"sac\"] = {\n\t\"Fox\",\n\t\"Q12714767\",\n\t\"alg\",\n\totherNames = {\"Sac\", \"Sauk\", \"Kickapoo\", \"Mesquakie\"\
      , \"Meskwaki\"},\n\tscripts = Latn,\n}\n\nm[\"sad\"] = {\n\t\"Sandawe\",\n\t\"Q34016\",\n\t\"qfa-iso\",\n\tscripts = Latn,\n}\n\nm[\"sae\"] = {\n\t\"Sabanê\",\n\t\"Q3460478\",\n\t\"sai-nmk\",\n\tscripts = Latn,\n}\n\nm[\"saf\"] = {\n\t\"Safaliba\",\n\t\
      \"Q36432\",\n\t\"nic-gur\",\n\tscripts = Latn,\n}\n\nm[\"sah\"] = {\n\t\"Yakut\",\n\t\"Q34299\",\n\t\"trk\",\n\totherNames = {\"Sakha\"},\n\tscripts = {\"Cyrl\"},\n\ttranslit_module = \"sah-translit\",\n\toverride_translit = true,\n}\n\nm[\"saj\"] = {\n\
      \t\"Sahu\",\n\t\"Q7399757\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"sak\"] = {\n\t\"Sake\",\n\t\"Q36425\",\n\t\"nic-bod\",\n\totherNames = {\"Shake\"},\n\tscripts = Latn,\n}\n\nm[\"sam\"] = {\n\t\"Samaritan Aramaic\",\n\t\"Q56612\",\n\t\"sem-ara\",\n\
      \totherNames = {\"Samaritan\"},\n\tscripts = {\"Samr\"},\n\tentry_name = {\n\t\tfrom = {\"[\" .. u(0x0816) .. \"-\" .. u(0x082D) .. \"]\"},\n\t\tto = {}\n\t},\n\ttranslit_module = \"Samr-translit\",\n}\n\nm[\"sao\"] = {\n\t\"Sause\",\n\t\"Q4409155\",\n\
      \tscripts = Latn,\n}\n\nm[\"saq\"] = {\n\t\"Samburu\",\n\t\"Q56536\",\n\t\"sdv\",\n}\n\nm[\"sar\"] = {\n\t\"Saraveca\",\n\t\"Q3450556\",\n\t\"awd\",\n\totherNames = {\"Sarabeca\", \"Saraveka\", \"Sarave\"},\n}\n\nm[\"sas\"] = {\n\t\"Sasak\",\n\t\"Q1294047\"\
      ,\n\t\"poz-mcm\",\n\tscripts = Latn,\n}\n\nm[\"sat\"] = {\n\t\"Santali\",\n\t\"Q33965\",\n\t\"mun\",\n\tscripts = {\"Olck\"},\n\ttranslit_module = \"Olck-translit\",\n\toverride_translit = true,\n}\n\nm[\"sau\"] = {\n\t\"Saleman\",\n\t\"Q7404262\",\n\t\
      \"poz-cet\",\n}\n\nm[\"sav\"] = {\n\t\"Saafi-Saafi\",\n\t\"Q36308\",\n\t\"alv-sng\",\n\tscripts = {\"Arab\", \"Latn\"},\n}\n\nm[\"saw\"] = {\n\t\"Sawi\",\n\t\"Q677064\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"sax\"] = {\n\t\"Sa\",\n\t\"Q3460352\",\n\t\
      \"poz-vnc\",\n\totherNames = {\"Saa\"},\n\tscripts = Latn,\n}\n\nm[\"say\"] = {\n\t\"Saya\",\n\t\"Q3914431\",\n\t\"cdc-wst\",\n\tscripts = Latn,\n}\n\nm[\"saz\"] = {\n\t\"Saurashtra\",\n\t\"Q13292\",\n\t\"inc\",\n\tscripts = {\"Saur\", \"Latn\", \"Taml\"\
      , \"Deva\"},\n\ttranslit_module = \"saz-translit\",\n\tancestors = {\"inc-ogu\"},\n}\n\nm[\"sba\"] = {\n\t\"Ngambay\",\n\t\"Q2372207\",\n\t\"csu-sar\",\n}\n\nm[\"sbb\"] = {\n\t\"Simbo\",\n\t\"Q3484101\",\n\t\"poz-ocw\",\n}\n\nm[\"sbc\"] = {\n\t\"Gele'\"\
      ,\n\t\"Q3194847\",\n\t\"poz-oce\",\n\totherNames = {\"Kele (New Guinea)\", \"Kele (Papua New Guinea)\", \"Kele\"},\n}\n\nm[\"sbd\"] = {\n\t\"Southern Samo\",\n\t\"Q33122730\",\n\t\"dmn\",\n\tscripts = Latn,\n}\n\nm[\"sbe\"] = {\n\t\"Saliba (New Guinea)\"\
      ,\n\t\"Q3469737\",\n\t\"poz-ocw\",\n\totherNames = {\"Saliba\"},\n}\n\nm[\"sbf\"] = {\n\t\"Shabo\",\n\t\"Q36342\",\n\t\"ssa\",\n\totherNames = {\"Mikeyir\", \"Mekeyir\", \"Mekeyer\"},\n\tscripts = Latn,\n}\n\nm[\"sbg\"] = {\n\t\"Seget\",\n\t\"Q7446237\"\
      ,\n}\n\nm[\"sbh\"] = {\n\t\"Sori-Harengan\",\n\t\"Q36515\",\n\t\"poz-aay\",\n\totherNames = {\"Sori\", \"Harengan\"},\n\tscripts = Latn,\n}\n\nm[\"sbi\"] = {\n\t\"Seti\",\n\t\"Q7456682\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"sbj\"] = {\n\t\"Surbakhal\"\
      ,\n\t\"Q759995\",\n}\n\nm[\"sbk\"] = {\n\t\"Safwa\",\n\t\"Q4121160\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"sbl\"] = {\n\t\"Botolan Sambal\",\n\t\"Q4095195\",\n\t\"phi\",\n}\n\nm[\"sbm\"] = {\n\t\"Sagala\",\n\t\"Q11732610\",\n\t\"bnt\",\n\tscripts =\
      \ Latn,\n}\n\nm[\"sbn\"] = {\n\t\"Sindhi Bhil\",\n\t\"Q25559289\",\n\t\"inc\",\n\tscripts = {\"Arab\", \"Deva\", \"Sind\", \"Guru\"},\n\tancestors = {\"sd\"},\n}\n\nm[\"sbo\"] = {\n\t\"Sabüm\",\n\t\"Q7396535\",\n}\n\nm[\"sbp\"] = {\n\t\"Sangu\",\n\t\"\
      Q7418149\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"sbq\"] = {\n\t\"Sileibi\",\n\t\"Q7514337\",\n}\n\nm[\"sbr\"] = {\n\t\"Sembakung Murut\",\n\t\"Q7449148\",\n\t\"poz-san\",\n}\n\nm[\"sbs\"] = {\n\t\"Subiya\",\n\t\"Q6442073\",\n\t\"bnt\",\n\tscripts =\
      \ Latn,\n}\n\nm[\"sbt\"] = {\n\t\"Kimki\",\n\t\"Q6410160\",\n}\n\nm[\"sbu\"] = {\n\t\"Stod Bhoti\",\n\t\"Q15622700\",\n\t\"sit\",\n}\n\nm[\"sbv\"] = {\n\t\"Sabine\",\n\tnil,\n\t\"itc\",\n\tscripts = Latn,\n}\n\nm[\"sbw\"] = {\n\t\"Simba\",\n\t\"Q36430\"\
      ,\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"sbx\"] = {\n\t\"Seberuang\",\n\t\"Q12473470\",\n\t\"poz-mly\",\n}\n\nm[\"sby\"] = {\n\t\"Soli\",\n\t\"Q7557754\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"sbz\"] = {\n\t\"Sara Kaba\",\n\t\"Q25559318\",\n\t\"csu\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"scb\"] = {\n\t\"Chut\",\n\t\"Q2967709\",\n\t\"mkh-vie\",\n}\n\nm[\"sce\"] = {\n\t\"Dongxiang\",\n\t\"Q32947\",\n\t\"xgn\",\n\totherNames = {\"Santa\"},\n\tscripts = {\"Arab\", \"Latn\"},\n}\n\nm[\"scf\"] = {\n\t\"San Miguel\
      \ Creole French\",\n\t\"Q12953094\",\n}\n\nm[\"scg\"] = {\n\t\"Sanggau\",\n\t\"Q12473466\",\n\t\"day\",\n}\n\nm[\"sch\"] = {\n\t\"Sakachep\",\n\t\"Q37054\",\n\t\"sit\",\n\totherNames = {\"Khelma\"},\n}\n\nm[\"sci\"] = {\n\t\"Sri Lankan Creole Malay\",\n\
      \t\"Q1089151\",\n\t\"crp\",\n\tscripts = Latn,\n\tancestors = {\"ms\"},\n}\n\nm[\"sck\"] = {\n\t\"Sadri\",\n\t\"Q765922\",\n\t\"inc\",\n\tancestors = {\"bh\"},\n}\n\nm[\"scl\"] = {\n\t\"Shina\",\n\t\"Q1353320\",\n\t\"inc-dar\",\n\totherNames = {\"Gilgiti\"\
      , \"Astori\", \"Chilasi\"},\n\tscripts = {\"ur-Arab\", \"Deva\"},\n\tancestors = {\"inc-dar-pro\"},\n}\n\nm[\"scn\"] = {\n\t\"Sicilian\",\n\t\"Q33973\",\n\t\"roa-itd\",\n\tscripts = Latn,\n}\n\nm[\"sco\"] = {\n\t\"Scots\",\n\t\"Q14549\",\n\t\"gmw\",\n\t\
      otherNames = {\"Lowland Scots\"},\n\tscripts = Latn,\n\tancestors = {\"enm\"},\n}\n\nm[\"scp\"] = {\n\t\"Yolmo\",\n\t\"Q22662107\",\n\t\"sit\",\n\totherNames = {\"Hyolmo\", \"Yohlmo\", \"Helambu Sherpa\"},\n\tscripts = {\"Deva\"},\n}\n\nm[\"scq\"] = {\n\
      \t\"Sa'och\",\n\t\"Q6583617\",\n\t\"mkh-pea\",\n\totherNames = {\"Chung\"},\n}\n\nm[\"scs\"] = {\n\t\"North Slavey\",\n\t\"Q20628\",\n\t\"ath-nor\",\n\tscripts = Latn,\n}\n\nm[\"scu\"] = {\n\t\"Shumcho\",\n\t\"Q22077739\",\n\t\"sit\",\n}\n\nm[\"scv\"]\
      \ = {\n\t\"Sheni\",\n\t\"Q11015820\",\n\t\"nic-knj\",\n\tscripts = Latn,\n}\n\nm[\"scw\"] = {\n\t\"Sha\",\n\t\"Q3438816\",\n\t\"cdc-wst\",\n\tscripts = Latn,\n}\n\nm[\"scx\"] = {\n\t\"Sicel\",\n\t\"Q36667\",\n\t\"ine\",\n}\n\nm[\"sda\"] = {\n\t\"Toraja-Sa'dan\"\
      ,\n\t\"Q36673\",\n\t\"poz-ssw\",\n}\n\nm[\"sdb\"] = {\n\t\"Shabak\",\n\t\"Q3289596\",\n\t\"ira-zgr\",\n\totherNames = {\"Shabaki\"},\n\tancestors = {\"hac\"},\n}\n\nm[\"sdc\"] = {\n\t\"Sassarese\",\n\t\"Q845441\",\n\t\"roa-itd\",\n\tscripts = Latn,\n}\n\
      \nm[\"sde\"] = {\n\t\"Surubu\",\n\t\"Q3913336\",\n\t\"nic-knj\",\n\tscripts = Latn,\n}\n\nm[\"sdf\"] = {\n\t\"Sarli\",\n\t\"Q7424256\",\n\t\"ira-zgr\",\n\totherNames = {\"Sarliya\"},\n\tancestors = {\"hac\"},\n}\n\nm[\"sdg\"] = {\n\t\"Savi\",\n\t\"Q3474654\"\
      ,\n\t\"inc-dar\",\n\tancestors = {\"inc-dar-pro\"},\n}\n\nm[\"sdh\"] = {\n\t\"Southern Kurdish\",\n\t\"Q1496597\",\n\t\"ira-nwi\",\n\totherNames = {\"Kermanshani\", \"Kermanshahi\", \"Kermanshahi Kurdish\", \"Kermanshani Kurdish\"},\n\tscripts = {\"ku-Arab\"\
      },\n\tancestors = {\"ku\"},\n\ttranslit_module = \"sdh-translit\",\n\tentry_name = {\n            from = {u(0x0650), u(0x0652)},\n            to   = {}} ,\n}\n\nm[\"sdj\"] = {\n\t\"Suundi\",\n\t\"Q7650407\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"sdk\"\
      ] = {\n\t\"Sos Kundi\",\n\t\"Q7563811\",\n\t\"paa-spk\",\n\tscripts = Latn,\n}\n\nm[\"sdl\"] = {\n\t\"Saudi Arabian Sign Language\",\n\t\"Q3504160\",\n\t\"sgn\",\n}\n\nm[\"sdm\"] = {\n\t\"Semandang\",\n\t\"Q7449012\",\n\t\"day\",\n}\n\nm[\"sdn\"] = {\n\
      \t\"Gallurese\",\n\t\"Q612220\",\n\t\"roa-itd\",\n\tscripts = Latn,\n\tancestors = {\"co\"},\n}\n\nm[\"sdo\"] = {\n\t\"Bukar-Sadung Bidayuh\",\n\t\"Q2927799\",\n\t\"day\",\n}\n\nm[\"sdp\"] = {\n\t\"Sherdukpen\",\n\t\"Q7494785\",\n}\n\nm[\"sdr\"] = {\n\t\
      \"Oraon Sadri\",\n\t\"Q12953860\",\n\t\"inc\",\n\tancestors = {\"bh\"},\n}\n\nm[\"sds\"] = {\n\t\"Sened\",\n\t\"Q56570\",\n\t\"ber\",\n}\n\nm[\"sdu\"] = {\n\t\"Sarudu\",\n\t\"Q7424700\",\n\t\"poz-cet\",\n}\n\nm[\"sdx\"] = {\n\t\"Sibu Melanau\",\n\t\"Q18642842\"\
      ,\n\t\"poz-bnn\",\n}\n\nm[\"sea\"] = {\n\t\"Semai\",\n\t\"Q3135426\",\n\t\"aav\",\n}\n\nm[\"sec\"] = {\n\t\"Sechelt\",\n\t\"Q7442898\",\n\t\"sal\",\n\tscripts = Latn,\n}\n\nm[\"sed\"] = {\n\t\"Sedang\",\n\t\"Q56448\",\n\t\"mkh-nbn\",\n}\n\nm[\"see\"] =\
      \ {\n\t\"Seneca\",\n\t\"Q1185133\",\n\t\"iro\",\n\tscripts = Latn,\n}\n\nm[\"sef\"] = {\n\t\"Cebaara Senoufo\",\n\t\"Q10975121\",\n}\n\nm[\"seg\"] = {\n\t\"Segeju\",\n\t\"Q17584599\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"seh\"] = {\n\t\"Sena\",\n\t\
      \"Q2964008\",\n\t\"bnt\",\n\totherNames = {\"Malawi Sena\"}, -- code also includes Mozambique Sena\n\tscripts = Latn,\n}\n\nm[\"sei\"] = {\n\t\"Seri\",\n\t\"Q36583\",\n\t\"qfa-iso\",\n\tscripts = Latn,\n}\n\nm[\"sej\"] = {\n\t\"Sene\",\n\t\"Q7450252\"\
      ,\n}\n\nm[\"sek\"] = {\n\t\"Sekani\",\n\t\"Q28562\",\n\t\"ath-nor\",\n\totherNames = {\"Tsek'ene\", \"Kwadacha\", \"Kwadacha Sekani\", \"Kwadacha Tsek'ene\"},\n\tscripts = Latn,\n}\n\nm[\"sel\"] = {\n\t\"Selkup\",\n\t\"Q34008\",\n\t\"syd\",\n\tscripts\
      \ = {\"Cyrl\"},\n}\n\nm[\"sen\"] = {\n\t\"Nanerigé Sénoufo\",\n\t\"Q36002\",\n}\n\nm[\"seo\"] = {\n\t\"Suarmin\",\n\t\"Q7630513\",\n}\n\nm[\"sep\"] = {\n\t\"Sìcìté Sénoufo\",\n\t\"Q56787\",\n}\n\nm[\"seq\"] = {\n\t\"Senara Sénoufo\",\n\t\"Q35210\",\n}\n\
      \nm[\"ser\"] = {\n\t\"Serrano\",\n\t\"Q3479942\",\n\t\"azc-tak\",\n\totherNames = {\"Kitanemuk\"},\n\tscripts = Latn,\n}\n\nm[\"ses\"] = {\n\t\"Koyraboro Senni\",\n\t\"Q35655\",\n\t\"son\",\n\totherNames = {\"Koyraboro Senni Songhay\", \"Koyraboro Senni\
      \ Songhai\", \"Koroboro Senni\", \"Eastern Songhay\"},\n\tscripts = Latn,\n}\n\nm[\"set\"] = {\n\t\"Sentani\",\n\t\"Q3441672\",\n\tscripts = Latn,\n}\n\nm[\"seu\"] = {\n\t\"Serui-Laut\",\n\t\"Q7455503\",\n\t\"poz-hce\",\n\tscripts = Latn,\n}\n\nm[\"sev\"\
      ] = {\n\t\"Nyarafolo Senoufo\",\n\t\"Q36306\",\n}\n\nm[\"sew\"] = {\n\t\"Sewa Bay\",\n\t\"Q7458126\",\n\t\"poz-ocw\",\n}\n\nm[\"sey\"] = {\n\t\"Secoya\",\n\t\"Q3477218\",\n\t\"sai-tuc\",\n\tscripts = Latn,\n}\n\nm[\"sez\"] = {\n\t\"Senthang Chin\",\n\t\
      \"Q7451223\",\n\t\"tbq-kuk\",\n\totherNames = {\"Senthang\"},\n}\n\nm[\"sfb\"] = {\n\t\"French Belgian Sign Language\",\n\t\"Q3217332\",\n\t\"sgn\",\n}\n\nm[\"sfm\"] = {\n\t\"Small Flowery Miao\",\n\t\"Q7542773\",\n\t\"hmn\",\n}\n\nm[\"sfs\"] = {\n\t\"\
      South African Sign Language\",\n\t\"Q3322093\",\n\t\"sgn\",\n}\n\nm[\"sfw\"] = {\n\t\"Sehwi\",\n\t\"Q36593\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"sga\"] = {\n\t\"Old Irish\",\n\t\"Q35308\",\n\t\"cel-gae\",\n\tscripts = Latn,\n\tancestors = {\"\
      pgl\"},\n\tentry_name = {\n\t\tfrom = {\"ḟ\", \"ṅ\", \"ṡ\", \"Ḟ\", \"Ṅ\", \"Ṡ\", \"ä\", \"ë\", \"ï\", \"ö\", \"ü\", \"·\"},\n\t\tto   = {\"f\", \"n\", \"s\", \"F\", \"N\", \"S\", \"a\", \"e\", \"i\", \"o\", \"u\"}} ,\n\tsort_key = {\n\t\tfrom = {\"á\"\
      , \"é\", \"æ\", \"ǽ\", \"í\", \"ó\", \"ú\", \"^h\"},\n\t\tto   = {\"a\", \"e\", \"e\", \"e\", \"i\", \"o\", \"u\"}} ,\n}\n\nm[\"sgb\"] = {\n\t\"Mag-Anchi Ayta\",\n\t\"Q4356243\",\n\t\"phi\",\n}\n\nm[\"sgc\"] = {\n\t\"Kipsigis\",\n\t\"Q56339\",\n\t\"sdv\"\
      ,\n}\n\nm[\"sgd\"] = {\n\t\"Surigaonon\",\n\t\"Q34140\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"sge\"] = {\n\t\"Segai\",\n\t\"Q7446180\",\n}\n\nm[\"sgg\"] = {\n\t\"Swiss-German Sign Language\",\n\t\"Q35150\",\n\t\"sgn\",\n\totherNames = {\"Swiss German\
      \ Sign Language\"},\n}\n\nm[\"sgh\"] = {\n\t\"Shughni\",\n\t\"Q34053\",\n\t\"ira-shy\",\n\tscripts = {\"Latn\", \"Cyrl\"},\n\ttranslit_module = \"sgh-translit\",\n\toverride_translit = true,\n\tancestors = {\"ira-shr-pro\"},\n}\n\nm[\"sgi\"] = {\n\t\"\
      Suga\",\n\t\"Q36475\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"sgk\"] = {\n\t\"Sangkong\",\n\t\"Q2945610\",\n\t\"tbq-lol\",\n}\n\nm[\"sgm\"] = {\n\t\"Singa\",\n\t\"Q7522797\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"sgp\"] = {\n\t\"Singpho\",\n\t\
      \"Q7524158\",\n}\n\nm[\"sgr\"] = {\n\t\"Sangisari\",\n\t\"Q3394363\",\n\t\"ira-kms\",\n\totherNames = {\"Sangsari\"},\n}\n\nm[\"sgs\"] = {\n\t\"Samogitian\",\n\t\"Q213434\",\n\t\"bat\",\n\tscripts = Latn,\n\tancestors = {\"olt\"},\n\twikimedia_codes =\
      \ {\"bat-smg\"},\n}\n\nm[\"sgt\"] = {\n\t\"Brokpake\",\n\t\"Q56603\",\n\t\"sit\",\n\totherNames = {\"Brokpa\"},\n}\n\nm[\"sgu\"] = {\n\t\"Salas\",\n\t\"Q7403694\",\n\t\"poz-cet\",\n}\n\nm[\"sgw\"] = {\n\t\"Sebat Bet Gurage\",\n\t\"Q2707343\",\n\t\"sem-eth\"\
      ,\n\tscripts = {\"Ethi\"},\n}\n\nm[\"sgx\"] = {\n\t\"Sierra Leone Sign Language\",\n\t\"Q7511448\",\n\t\"sgn\",\n}\n\nm[\"sgy\"] = {\n\t\"Sanglechi\",\n\t\"Q3472220\",\n\t\"ira-sgi\",\n\totherNames = {\"Sanglich\", \"Warduji\"},\n\tancestors = {\"ira-sgi-pro\"\
      },\n}\n\nm[\"sgz\"] = {\n\t\"Sursurunga\",\n\t\"Q36511\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"sha\"] = {\n\t\"Shall-Zwall\",\n\t\"Q3915355\",\n}\n\nm[\"shb\"] = {\n\t\"Ninam\",\n\t\"Q3436586\",\n}\n\nm[\"shc\"] = {\n\t\"Sonde\",\n\t\"Q7560881\"\
      ,\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"shd\"] = {\n\t\"Kundal Shahi\",\n\t\"Q6444265\",\n\t\"inc-dar\",\n}\n\nm[\"she\"] = {\n\t\"Sheko\",\n\t\"Q3183355\",\n\t\"hmn\",\n\totherNames = {\"Ho Ne\", \"Ho Nte\"},\n}\n\nm[\"shg\"] = {\n\t\"Shua\",\n\t\"\
      Q3501092\",\n\t\"khi-kal\",\n\totherNames = {\"Shwa\", \"Shwakhwe\"},\n\tscripts = Latn,\n}\n\nm[\"shh\"] = {\n\t\"Shoshone\",\n\t\"Q33811\",\n\t\"azc-num\",\n\totherNames = {\"Shoshoni\", \"Gosiute\", \"Goshute\", \"Eastern Shoshone\", \"Eastern Shoshoni\"\
      , \"Western Shoshone\", \"Western Shoshoni\", \"Northern Shoshone\", \"Northern Shoshoni\"},\n\tscripts = Latn,\n}\n\nm[\"shi\"] = {\n\t\"Tashelhit\",\n\t\"Q34152\",\n\t\"ber\",\n\totherNames = {\"Tachelhit\", \"Chleuh\", \"Shilha\", \"Tashlhiyt\", \"\
      Tashelhit Berber\", \"Tachelhit Berber\", \"Tashlhiyt Berber\"},\n\tscripts = {\"Tfng\", \"Arab\", \"Latn\"},\n}\n\nm[\"shj\"] = {\n\t\"Shatt\",\n\t\"Q56344\",\n\t\"sdv\",\n}\n\nm[\"shk\"] = {\n\t\"Shilluk\",\n\t\"Q36486\",\n\t\"sdv\",\n\tscripts = Latn,\n\
      }\n\nm[\"shl\"] = {\n\t\"Shendu\",\n\t\"Q22074616\",\n\t\"tbq-kuk\",\n}\n\nm[\"shm\"] = {\n\t\"Shahrudi\",\n\t\"Q7462280\",\n\t\"xme-ttc\",\n\tancestors = {\"xme-azr\"},\n}\n\nm[\"shn\"] = {\n\t\"Shan\",\n\t\"Q56482\",\n\t\"tai-swe\",\n\totherNames = {\"\
      Kwam Tai\", \"Kam Tai\", \"Tai Yai\"},\n\tscripts = {\"Mymr\"},\n\ttranslit_module = \"shn-translit\",\n\tsort_key = {\n\t\tfrom = {\"[ၢႃ]\", \"ဵ\", \"ႅ\", \"ႇ\", \"ႈ\", \"း\", \"ႉ\", \"ႊ\"},\n\t\tto   = {\"ာ\", \"ေ\", \"ႄ\", \"႒\", \"႓\", \"႔\", \"႕\"\
      , \"႖\"}},\n}\n\nm[\"sho\"] = {\n\t\"Shanga\",\n\t\"Q3913931\",\n\t\"dmn\",\n\tscripts = Latn,\n}\n\nm[\"shp\"] = {\n\t\"Shipibo-Conibo\",\n\t\"Q2671988\",\n\t\"sai-pan\",\n\tscripts = Latn,\n}\n\nm[\"shq\"] = {\n\t\"Sala\",\n\t\"Q10961665\",\n\t\"bnt\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"shr\"] = {\n\t\"Shi\",\n\t\"Q3481999\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"shs\"] = {\n\t\"Shuswap\",\n\t\"Q3482685\",\n\t\"sal\",\n\tscripts = Latn,\n}\n\nm[\"sht\"] = {\n\t\"Shasta\",\n\t\"Q56396\",\n\t\"nai-shs\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"shu\"] = {\n\t\"Chadian Arabic\",\n\t\"Q56497\",\n\t\"sem-arb\",\n\tscripts = {\"Arab\"},\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670),\
      \ u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"shv\"] = {\n\t\"Shehri\",\n\t\"Q33445\",\n\t\"sem-sar\",\n\tancestors = {\"sem-pro\"},\n}\n\nm[\"shw\"] = {\n\t\"Shwai\",\n\t\"Q36527\",\n}\n\nm[\"shx\"] = {\n\t\"She\",\n\t\"Q2605689\",\n\t\"hmx\",\n}\n\
      \nm[\"shy\"] = {\n\t\"Tachawit\",\n\t\"Q33274\",\n\t\"ber\",\n\totherNames = {\"Shawiya Berber\", \"Chaouïa\"},\n}\n\nm[\"shz\"] = {\n\t\"Syenara Senoufo\",\n\t\"Q36316\",\n}\n\nm[\"sia\"] = {\n\t\"Akkala Sami\",\n\t\"Q35241\",\n\t\"smi\",\n\tscripts =\
      \ Latn,\n}\n\nm[\"sib\"] = {\n\t\"Sebop\",\n\t\"Q7442799\",\n\t\"poz-swa\",\n\tscripts = Latn,\n}\n\nm[\"sid\"] = {\n\t\"Sidamo\",\n\t\"Q33786\",\n\t\"cus\",\n}\n\nm[\"sie\"] = {\n\t\"Simaa\",\n\t\"Q7517329\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"\
      sif\"] = {\n\t\"Siamou\",\n\t\"Q36252\",\n}\n\nm[\"sig\"] = {\n\t\"Paasaal\",\n\t\"Q36426\",\n\t\"nic-gur\",\n\tscripts = Latn,\n}\n\nm[\"sih\"] = {\n\t\"Zire\",\n\t\"Q8072753\",\n\t\"poz-cln\",\n}\n\nm[\"sii\"] = {\n\t\"Shom Peng\",\n\t\"Q1039346\",\n\
      \t\"aav\",\n}\n\nm[\"sij\"] = {\n\t\"Numbami\",\n\t\"Q3346277\",\n\t\"poz-ocw\",\n}\n\nm[\"sik\"] = {\n\t\"Sikiana\",\n\t\"Q3443734\",\n\t\"sai-car\",\n\tscripts = Latn,\n}\n\nm[\"sil\"] = {\n\t\"Tumulung Sisaala\",\n\t\"Q25383006\",\n\t\"nic-gur\",\n\t\
      scripts = Latn,\n}\n\nm[\"sim\"] = {\n\t\"Seim\",\n\t\"Q7446815\",\n\t\"paa-spk\",\n\totherNames = {\"Mende\", \"Mende (New Guinea)\"},\n}\n\nm[\"sip\"] = {\n\t\"Sikkimese\",\n\t\"Q35285\",\n\t\"tbq\",\n\totherNames = {\"Dranjongke\", \"Dranjoke\", \"\
      Denjongka\", \"Denzongpeke\", \"Denzongke\"},\n\tscripts = {\"Tibt\"},\n\tancestors = {\"xct\"},\n\ttranslit_module = \"bo-translit\",\n}\n\nm[\"siq\"] = {\n\t\"Sonia\",\n\t\"Q7561770\",\n}\n\nm[\"sir\"] = {\n\t\"Siri\",\n\t\"Q3438729\",\n\t\"cdc-wst\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"sis\"] = {\n\t\"Siuslaw\",\n\t\"Q2315424\",\n}\n\nm[\"siu\"] = {\n\t\"Sinagen\",\n\t\"Q7521655\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"siv\"] = {\n\t\"Sumariup\",\n\t\"Q7636966\",\n\t\"paa-spk\",\n\tscripts = Latn,\n\
      }\n\nm[\"siw\"] = {\n\t\"Siwai\",\n\t\"Q7532519\",\n}\n\nm[\"six\"] = {\n\t\"Sumau\",\n\t\"Q7637021\",\n\t\"ngf-mad\",\n\totherNames = {\"Garia\", \"Kari\"},\n\tscripts = Latn,\n}\n\nm[\"siy\"] = {\n\t\"Sivandi\",\n\t\"Q13269\",\n\t\"xme\",\n\tancestors\
      \ = {\"xme-mid\"},\n}\n\nm[\"siz\"] = {\n\t\"Siwi\",\n\t\"Q36814\",\n\t\"ber\",\n\tscripts = {\"Tfng\", \"Arab\", \"Latn\"},\n\totherNames = {\"Siwa\"},\n}\n\nm[\"sja\"] = {\n\t\"Epena\",\n\t\"Q3055682\",\n\t\"sai-chc\",\n}\n\nm[\"sjb\"] = {\n\t\"Sajau\
      \ Basap\",\n\t\"Q4684353\",\n\t\"poz-bnn\",\n}\n\nm[\"sjd\"] = {\n\t\"Kildin Sami\",\n\t\"Q33656\",\n\t\"smi\",\n\tscripts = {\"Cyrl\"},\n\ttranslit_module = \"sjd-translit\",\n\tsort_key = {\n\t\tfrom = {\"ӣ\", \"ӯ\", MACRON},\n\t\tto   = {\"и\", \"у\"\
      } },\n}\n\nm[\"sje\"] = {\n\t\"Pite Sami\",\n\t\"Q56314\",\n\t\"smi\",\n\tscripts = Latn,\n\tentry_name = {\n\t\tfrom = {\"ū\", \"ˈ\", MACRON},\n\t\tto   = {\"u\"} },\n\tsort_key = {\n\t\tfrom = {\"á\" , \"đ\" , \"ŋ\" , \"ŧ\" },\n\t\tto   = {\"a²\", \"\
      d²\", \"n²\", \"t²\"} },\n}\n\nm[\"sjg\"] = {\n\t\"Assangori\",\n\t\"Q3502255\",\n\t\"sdv\",\n}\n\nm[\"sjk\"] = {\n\t\"Kemi Sami\",\n\t\"Q35871\",\n\t\"smi\",\n\tscripts = Latn,\n}\n\nm[\"sjl\"] = {\n\t\"Miji\",\n\t\"Q6845470\",\n\t\"sit\",\n}\n\nm[\"\
      sjm\"] = {\n\t\"Mapun\",\n\t\"Q3287253\",\n\t\"poz-sbj\",\n}\n\nm[\"sjn\"] = {\n\t\"Sindarin\",\n\t\"Q56437\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = {\"Latn\", \"Teng\"},\n}\n\nm[\"sjo\"] = {\n\t\"Xibe\",\n\t\"Q13223\",\n\t\"tuw\"\
      ,\n\totherNames = {\"Sibo\", \"Sibe\", \"Xibo\"},\n\tscripts = {\"Mong\"},\n}\n\nm[\"sjp\"] = {\n\t\"Surjapuri\",\n\t\"Q7645351\",\n\t\"inc\",\n\tancestors = {\"inc-mgd\"},\n}\n\nm[\"sjr\"] = {\n\t\"Siar-Lak\",\n\t\"Q3482907\",\n\t\"poz-ocw\",\n}\n\nm[\"\
      sjs\"] = {\n\t\"Senhaja De Srair\",\n\t\"Q56744\",\n\t\"ber\",\n}\n\nm[\"sjt\"] = {\n\t\"Ter Sami\",\n\t\"Q36656\",\n\t\"smi\",\n\tscripts = Latn,\n}\n\nm[\"sju\"] = {\n\t\"Ume Sami\",\n\t\"Q56415\",\n\t\"smi\",\n\tscripts = Latn,\n\tentry_name = {\n\t\
      \tfrom = {\"ē\", \"ū\", \"ǖ\", MACRON, \"ˈ\"},\n\t\tto   = {\"e\", \"u\", \"ü\"} },\n\tsort_key = {\n\t\tfrom = {\"á\" , \"đ\" , \"ï\" , \"ŋ\" , \"ŧ\" , \"ü\" },\n\t\tto   = {\"a²\", \"d²\", \"i²\", \"n²\", \"t²\", \"u²\"} },\n}\n\nm[\"sjw\"] = {\n\t\"\
      Shawnee\",\n\t\"Q2669206\",\n\t\"alg\",\n\tscripts = Latn,\n}\n\nm[\"ska\"] = {\n\t\"Skagit\",\n\t\"Q25559652\",\n\t\"sal\",\n\tscripts = Latn,\n}\n\nm[\"skb\"] = {\n\t\"Saek\",\n\t\"Q36437\",\n\t\"tai-nor\",\n\tscripts = {\"Thai\"},\n\tsort_key = {\n\t\
      \tfrom = {\"%p\", \"[็-๎̱̄̂]\", \"([เแโใไ])([ก-ฮ])\"},\n\t\tto   = {\"\", \"\", \"%2%1\"}},\n}\n\nm[\"skc\"] = {\n\t\"Ma Manda\",\n\t\"Q6720783\",\n\t\"ngf-fin\",\n\totherNames = {\"Sauk\"},\n}\n\nm[\"skd\"] = {\n\t\"Southern Sierra Miwok\",\n\t\"Q3492334\"\
      ,\n\t\"nai-utn\",\n\tscripts = Latn,\n}\n\nm[\"ske\"] = {\n\t\"Ske\",\n\t\"Q7534244\",\n\t\"poz-vnc\",\n\totherNames = {\"Seke\"},\n\tscripts = Latn,\n}\n\nm[\"skf\"] = {\n\t\"Sakirabiá\",\n\t\"Q3304806\",\n\t\"tup\",\n\totherNames = {\"Mekem\", \"Amniapé\
      \", \"Sakïrabiát\", \"Sakiráp\", \"Koaratira\", \"Guaratira\", \"Kanoé\", \"Koarategayat\", \"Guaratégaya\", \"Guarategaja\", \"Warategáya\"},\n\tscripts = Latn,\n}\n\nm[\"skh\"] = {\n\t\"Sikule\",\n\t\"Q3121081\",\n\t\"poz-nws\",\n}\n\nm[\"ski\"] = {\n\
      \t\"Sika\",\n\t\"Q33960\",\n\t\"poz-cet\",\n\totherNames = {\"Sikanese\"},\n\tscripts = Latn,\n}\n\nm[\"skj\"] = { -- compare 'ths'\n\t\"Seke\",\n\t\"Q30226846\",\n\t\"tbq\",\n}\n\nm[\"skk\"] = {\n\t\"Sok\",\n\t\"Q12953887\",\n\t\"mkh-ban\",\n}\n\nm[\"\
      skm\"] = {\n\t\"Sakam\",\n\t\"Q6448517\",\n\t\"ngf-fin\",\n\totherNames = {\"Kutong\"},\n}\n\nm[\"skn\"] = {\n\t\"Kolibugan Subanon\",\n\t\"Q18755617\",\n\t\"phi\",\n}\n\nm[\"sko\"] = {\n\t\"Seko Tengah\",\n\t\"Q15613270\",\n\t\"poz\",\n}\n\nm[\"skp\"\
      ] = {\n\t\"Sekapan\",\n\t\"Q7447132\",\n\t\"poz-bnn\",\n}\n\nm[\"skq\"] = {\n\t\"Sininkere\",\n\t\"Q3914896\",\n\t\"dmn\",\n\tscripts = Latn,\n}\n\nm[\"skr\"] = {\n\t\"Seraiki\",\n\t\"Q33902\",\n\t\"inc\",\n\totherNames = {\"Siraiki\", \"Saraiki\"},\n\t\
      scripts = {\"ur-Arab\", \"Mult\"},\n\tancestors = {\"lah\"},\n}\n\nm[\"sks\"] = {\n\t\"Maia\",\n\t\"Q12952760\",\n\t\"ngf-mad\",\n\totherNames = {\"Maya\", \"Banar\", \"Pila\", \"Saki\", \"Suaro\", \"Turutap\", \"Yakiba\"},\n\tscripts = Latn,\n}\n\nm[\"\
      skt\"] = {\n\t\"Sakata\",\n\t\"Q36691\",\n\t\"bnt\",\n\totherNames = {\"Kisakata\", \"Lesa\", \"Odual\", \"Saka\", \"Bai\", \"Kibai\", \"Bay\", \"Kibay\", \"Djia\", \"Dia\", \"Dja\", \"Kidjia\", \"Wadia\", \"Tuku\", \"Ketu\", \"Batow\"},\n\tscripts = Latn,\n\
      }\n\nm[\"sku\"] = {\n\t\"Sakao\",\n\t\"Q3298421\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"skv\"] = {\n\t\"Skou\",\n\t\"Q3915200\",\n\tscripts = Latn,\n}\n\nm[\"skw\"] = {\n\t\"Skepi Creole Dutch\",\n\t\"Q2522153\",\n\totherNames = {\"Skepi Dutch\"\
      , \"Skepi Dutch Creole\", \"Essequibo Dutch\"},\n}\n\nm[\"skx\"] = {\n\t\"Seko Padang\",\n\t\"Q15613282\",\n\t\"poz-ssw\",\n}\n\nm[\"sky\"] = {\n\t\"Sikaiana\",\n\t\"Q7439242\",\n\t\"poz-pnp\",\n\totherNames = {\"Sikayana\"},\n\tscripts = Latn,\n}\n\n\
      m[\"skz\"] = {\n\t\"Sekar\",\n\t\"Q7447136\",\n\t\"poz-cet\",\n}\n\nm[\"slc\"] = {\n\t\"Saliba (Colombia)\",\n\t\"Q3441097\",\n\totherNames = {\"Saliba\", \"Sáliba\", \"Saliva\", \"Sáliva\"},\n}\n\nm[\"sld\"] = {\n\t\"Sissala\",\n\t\"Q11020264\",\n\t\"\
      nic-gur\",\n\tscripts = Latn,\n}\n\nm[\"sle\"] = {\n\t\"Sholaga\",\n\t\"Q7500203\",\n\t\"dra\",\n}\n\nm[\"slf\"] = {\n\t\"Swiss-Italian Sign Language\",\n\t\"Q12953479\",\n\t\"sgn\",\n\totherNames = {\"Swiss Italian Sign Language\"},\n}\n\nm[\"slg\"] =\
      \ {\n\t\"Selungai Murut\",\n\t\"Q7448844\",\n\t\"poz-san\",\n}\n\nm[\"slh\"] = {\n\t\"Southern Puget Sound Salish\",\n\t\"Q12642471\",\n\t\"sal\",\n\tscripts = Latn,\n}\n\n-- \"sli\" \"Silesian German\" IS SUBSUMED INTO \"gmw-ecg\" \"East Central German\"\
      \n\nm[\"slj\"] = {\n\t\"Salumá\",\n\t\"Q7406296\",\n\t\"sai-car\",\n\tscripts = Latn,\n}\n\nm[\"sll\"] = {\n\t\"Salt-Yui\",\n\t\"Q7405785\",\n}\n\nm[\"slm\"] = {\n\t\"Pangutaran Sama\",\n\t\"Q3362086\",\n\t\"poz-sbj\",\n}\n\nm[\"sln\"] = {\n\t\"Salinan\"\
      ,\n\t\"Q1568938\",\n}\n\nm[\"slp\"] = {\n\t\"Lamaholot\",\n\t\"Q6480777\",\n\totherNames = {\"Solor\", \"Solorese\"},\n\tscripts = Latn,\n}\n\nm[\"slq\"] = {\n\t\"Salchuq\",\n\t\"Q56752\",\n\t\"trk\",\n}\n\nm[\"slr\"] = {\n\t\"Salar\",\n\t\"Q33963\",\n\
      \t\"trk\",\n\tscripts = {\"Arab\", \"Latn\"},\n}\n\nm[\"sls\"] = {\n\t\"Singapore Sign Language\",\n\t\"Q7512563\",\n\t\"sgn\",\n}\n\nm[\"slt\"] = {\n\t\"Sila\",\n\t\"Q7514021\",\n\t\"tbq-lol\",\n}\n\nm[\"slu\"] = {\n\t\"Selaru\",\n\t\"Q7447500\",\n\t\"\
      poz-cet\",\n}\n\nm[\"slw\"] = {\n\t\"Sialum\",\n\t\"Q7506694\",\n\t\"ngf\",\n}\n\nm[\"slx\"] = {\n\t\"Salampasu\",\n\t\"Q7403607\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"sly\"] = {\n\t\"Selayar\",\n\t\"Q7447520\",\n\t\"poz-ssw\",\n}\n\nm[\"slz\"] =\
      \ {\n\t\"Ma'ya\",\n\t\"Q2291492\",\n\t\"poz-hce\",\n}\n\nm[\"sma\"] = {\n\t\"Southern Sami\",\n\t\"Q13293\",\n\t\"smi\",\n\tscripts = Latn,\n\tsort_key = { -- Standardise on Norwegian orthography for sorting purposes\n\t\tfrom = {\"ï\" , \"ä\", \"ö\"},\n\
      \t\tto   = {\"i²\", \"æ\", \"ø\"} },\n}\n\nm[\"smb\"] = {\n\t\"Simbari\",\n\t\"Q7517427\",\n\t\"ngf\",\n}\n\nm[\"smc\"] = {\n\t\"Som\",\n\t\"Q7559081\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"smd\"] = {\n\t\"Sama\",\n\t\"Q6407456\",\n\t\"bnt\",\n\
      \tscripts = Latn,\n}\n\nm[\"smf\"] = {\n\t\"Auwe\",\n\t\"Q3502072\",\n}\n\nm[\"smg\"] = {\n\t\"Simbali\",\n\t\"Q56692\",\n}\n\nm[\"smh\"] = {\n\t\"Samei\",\n\t\"Q7409269\",\n\t\"tbq-lol\",\n}\n\nm[\"smj\"] = {\n\t\"Lule Sami\",\n\t\"Q56322\",\n\t\"smi\"\
      ,\n\tscripts = Latn,\n\tentry_name = {\n\t\tfrom = {\"ˈ\", MACRON},\n\t\tto   = {} },\n\tsort_key = { -- Standardise on Swedish orthography for sorting purposes\n\t\tfrom = {\"á\" , \"ŋ\" , \"æ\" },\n\t\tto   = {\"a²\", \"n²\", \"ä\"} },\n}\n\nm[\"smk\"\
      ] = {\n\t\"Bolinao\",\n\t\"Q2669235\",\n\t\"phi\",\n\totherNames = {\"Binubolinao\"},\n}\n\nm[\"sml\"] = {\n\t\"Central Sama\",\n\t\"Q3470593\",\n\t\"poz-sbj\",\n}\n\nm[\"smm\"] = {\n\t\"Musasa\",\n\t\"Q6940122\",\n\t\"inc\",\n\tancestors = {\"bh\"},\n\
      }\n\nm[\"smn\"] = {\n\t\"Inari Sami\",\n\t\"Q33462\",\n\t\"smi\",\n\tscripts = Latn,\n\tentry_name = {\n\t\tfrom = {\"ḥ\", \"ḷ\", \"ṃ\", \"ṇ\", \"ṛ\", \"ṿ\", DOTBELOW, \"ˈ\"},\n\t\tto   = {\"h\", \"l\", \"m\", \"n\", \"r\", \"v\"} },\n\tsort_key = {\n\t\
      \tfrom = {\"â\" , \"č\" , \"đ\" , \"ŋ\" , \"š\" , \"ž\" , \"á\" },\n\t\tto   = {\"a˿\", \"c˿\", \"d˿\", \"n˿\", \"s˿\", \"z˿\", \"ä˿\"} },\n}\n\nm[\"smp\"] = {\n\t\"Samaritan Hebrew\",\n\t\"Q56502\",\n\t\"sem-can\",\n\totherNames = {\"Samaritan\"},\n\t\
      scripts = {\"Samr\"},\n\tentry_name = {\n\t\tfrom = {\"[\" .. u(0x0816) .. \"-\" .. u(0x082D) .. \"]\"},\n\t\tto = {}\n\t},\n}\n\nm[\"smq\"] = {\n\t\"Samo\",\n\t\"Q7409884\",\n}\n\nm[\"smr\"] = {\n\t\"Simeulue\",\n\t\"Q2992833\",\n\t\"poz-nws\",\n\totherNames\
      \ = {\"Simalur\", \"Devayan\", \"Defayan\", \"Simolol\", \"Simulul\", \"Simeuloë\"},\n\tscripts = Latn,\n}\n\nm[\"sms\"] = {\n\t\"Skolt Sami\",\n\t\"Q13271\",\n\t\"smi\",\n\tscripts = Latn,\n\tentry_name = {\n\t\tfrom = {\"ẹ\", \"ˈ\"},\n\t\tto   = {\"\
      e\"} },\n\tsort_key = {\n\t\tfrom = {\"â\" , \"č\" , \"đ\" , \"ǧ\" , \"ǥ\" , \"ǩ\" , \"ŋ\" , \"õ\" , \"š\" , \"ž\" },\n\t\tto   = {\"a²\", \"c²\", \"d²\", \"g²\", \"g³\", \"k˿\", \"n˿\", \"o˿\", \"s˿\", \"z˿\"} },\n}\n\nm[\"smt\"] = {\n\t\"Simte\",\n\t\
      \"Q7521268\",\n\t\"tbq-kuk\",\n}\n\nm[\"smu\"] = {\n\t\"Somray\",\n\t\"Q6583612\",\n\t\"mkh-pea\",\n}\n\nm[\"smv\"] = {\n\t\"Samvedi\",\n\t\"Q6345632\",\n\t\"inc\",\n\tancestors = {\"pmh\"},\n}\n\nm[\"smw\"] = {\n\t\"Sumbawa\",\n\t\"Q3182585\",\n\t\"poz-mcm\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"smx\"] = {\n\t\"Samba\",\n\t\"Q11120157\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"smy\"] = {\n\t\"Semnani\",\n\t\"Q14531212\",\n\t\"xme\",\n\tancestors = {\"xme-old\"},\n}\n\nm[\"smz\"] = {\n\t\"Simeku\",\n\t\"Q7517534\"\
      ,\n}\n\nm[\"snb\"] = {\n\t\"Sebuyau\",\n\t\"Q7442836\",\n\t\"poz-mly\",\n}\n\nm[\"snc\"] = {\n\t\"Sinaugoro\",\n\t\"Q4170719\",\n\t\"poz-ocw\",\n}\n\nm[\"sne\"] = {\n\t\"Bau Bidayuh\",\n\t\"Q2891938\",\n\t\"day\",\n\tscripts = Latn,\n}\n\nm[\"snf\"] =\
      \ {\n\t\"Noon\",\n\t\"Q36304\",\n\t\"alv-sng\",\n\tscripts = Latn,\n}\n\nm[\"sng\"] = {\n\t\"Sanga (Congo)\",\n\t\"Q3438316\",\n\t\"bnt\",\n\totherNames = {\"Sanga\", \"Luba-Sanga\", \"Sanga (Democratic Republic of Congo)\", \"Sanga (Democratic Republic\
      \ of the Congo)\"},\n\tscripts = Latn,\n}\n\nm[\"sni\"] = {\n\t\"Sensi\",\n\t\"Q7451029\",\n\t\"sai-pan\",\n\tscripts = Latn,\n}\n\nm[\"snj\"] = {\n\t\"Riverain Sango\",\n\t\"Q25559751\",\n\t\"crp\",\n\tscripts = Latn,\n}\n\nm[\"snk\"] = {\n\t\"Soninke\"\
      ,\n\t\"Q36660\",\n\t\"dmn\",\n\tscripts = Latn,\n}\n\nm[\"snl\"] = {\n\t\"Sangil\",\n\t\"Q3472206\",\n\t\"phi\",\n}\n\nm[\"snm\"] = {\n\t\"Southern Ma'di\",\n\t\"Q15637273\",\n\t\"csu\",\n}\n\nm[\"snn\"] = {\n\t\"Siona\",\n\t\"Q3485116\",\n\t\"sai-tuc\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"sno\"] = {\n\t\"Snohomish\",\n\t\"Q25559662\",\n\t\"sal\",\n\tscripts = Latn,\n}\n\nm[\"snp\"] = {\n\t\"Siane\",\n\t\"Q7506812\",\n\t\"paa-kag\",\n\tscripts = Latn,\n}\n\nm[\"snq\"] = {\n\t\"Chango\",\n\t\"Q36609\",\n\t\"\
      bnt\",\n\totherNames = {\"Sangu\"},\n\tscripts = Latn,\n}\n\nm[\"snr\"] = {\n\t\"Sihan\",\n\t\"Q7513400\",\n\t\"ngf-mad\",\n}\n\nm[\"sns\"] = {\n\t\"Nahavaq\",\n\t\"Q2160435\",\n\t\"poz-vnc\",\n}\n\nm[\"snu\"] = {\n\t\"Senggi\",\n\t\"Q7929052\",\n}\n\n\
      m[\"snv\"] = {\n\t\"Sa'ban\",\n\t\"Q3474891\",\n\t\"poz-swa\",\n\tscripts = Latn,\n}\n\nm[\"snw\"] = {\n\t\"Selee\",\n\t\"Q36272\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"snx\"] = {\n\t\"Sam\",\n\t\"Q7408387\",\n}\n\nm[\"sny\"] = {\n\t\"Saniyo-Hiyewe\"\
      ,\n\t\"Q7418302\",\n\t\"paa-spk\",\n\tscripts = Latn,\n}\n\nm[\"snz\"] = {\n\t\"Kou\",\n\t\"Q7525035\", -- also \"Q4803639\"\n\t\"ngf-mad\",\n\totherNames = {\"Kow\", \"Sinsauru\", \"Asas\"},\n\tscripts = Latn,\n}\n\nm[\"soa\"] = {\n\t\"Thai Song\",\n\t\
      \"Q7709159\",\n\t\"tai-swe\",\n\totherNames = {\"Lao Song\", \"Song\"},\n\tscripts = {\"Tavt\", \"Thai\"},\n\t--translit_module = \"Tavt-translit\",\n \tsort_key = {\n\t\tfrom = {\"([ꪵꪶꪹꪻꪼ])([ꪀ-ꪯ])\", \"([เแโใไ])([ก-ฮ])\"},\n\t\tto   = {\"%2%1\", \"%2%1\"\
      }},\n}\n\nm[\"sob\"] = {\n\t\"Sobei\",\n\t\"Q3121035\",\n\t\"poz-ocw\",\n}\n\nm[\"soc\"] = {\n\t\"Soko\",\n\t\"Q7555138\",\n\t\"nic-bod\",\n\totherNames = {\"So\"},\n\tscripts = Latn,\n}\n\nm[\"sod\"] = {\n\t\"Songoora\",\n\t\"Q7561296\",\n\t\"bnt\",\n\
      \tscripts = Latn,\n}\n\nm[\"soe\"] = {\n\t\"Songomeno\",\n\t\"Q5713543\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"sog\"] = {\n\t\"Sogdian\",\n\t\"Q205979\",\n\t\"ira-sgc\",\n\ttranslit_module = \"translit-redirect\",\n\tscripts = {\"Sogd\", \"Mani\",\
      \ \"Syrc\"},\n}\n\nm[\"soh\"] = {\n\t\"Aka (Sudan)\",\n\t\"Q3450949\",\n\t\"sdv\",\n\totherNames = {\"Aka\", \"Sillok\"},\n\tscripts = Latn,\n}\n\nm[\"soi\"] = {\n\t\"Sonha\",\n\t\"Q12953890\",\n\t\"inc\",\n\totherNames = {\"Sonaha\", \"Sonahaa\", \"Sunah\"\
      , \"Sunha\"},\n\tancestors = {\"inc-mgd\"},\n}\n\nm[\"sok\"] = {\n\t\"Sokoro\",\n\t\"Q3441303\",\n\t\"cdc-est\",\n\tscripts = Latn,\n}\n\nm[\"sol\"] = {\n\t\"Solos\",\n\t\"Q3489591\",\n\t\"poz-ocw\",\n}\n\nm[\"soo\"] = {\n\t\"Songo\",\n\t\"Q12953148\"\
      ,\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"sop\"] = {\n\t\"Songe\",\n\t\"Q3130911\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"soq\"] = {\n\t\"Kanasi\",\n\t\"Q11732656\",\n}\n\nm[\"sor\"] = {\n\t\"Somrai\",\n\t\"Q3123566\",\n\t\"cdc-est\",\n\tscripts =\
      \ Latn,\n}\n\nm[\"sos\"] = {\n\t\"Seenku\",\n\t\"Q36274\",\n\t\"dmn\",\n\totherNames = {\"Seeku\", \"Sembla\", \"Sambla\"},\n}\n\nm[\"sou\"] = {\n\t\"Southern Thai\",\n\t\"Q56508\",\n\t\"tai-swe\",\n\totherNames = {\"Dambro\"},\n\tscripts = {\"Thai\"},\n\
      \tsort_key = {\n\t\tfrom = {\"%p\", \"[็-๎]\", \"([เแโใไ])([ก-ฮ])\"},\n\t\tto   = {\"\", \"\", \"%2%1\"}},\n}\n\nm[\"sov\"] = {\n\t\"Sonsorolese\",\n\t\"Q13281\",\n\t\"poz-mic\",\n\tscripts = Latn,\n}\n\nm[\"sow\"] = {\n\t\"Sowanda\",\n\t\"Q7571845\",\n\
      }\n\nm[\"sox\"] = {\n\t\"Swo\",\n\t\"Q36604\",\n\t\"bnt\",\n\totherNames = {\"So\", \"Sso\", \"Shwo\", \"Fo\"},\n\tscripts = Latn,\n}\n\nm[\"soy\"] = {\n\t\"Miyobe\",\n\t\"Q35913\",\n\t\"nic-gur\",\n\tscripts = Latn,\n}\n\nm[\"soz\"] = {\n\t\"Temi\",\n\
      \t\"Q13278\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"spb\"] = {\n\t\"Sepa (Indonesia)\",\n\t\"Q18603687\",\n\t\"poz\",\n\totherNames = {\"Sepa\"},\n\tscripts = Latn,\n}\n\nm[\"spc\"] = {\n\t\"Sapé\",\n\t\"Q2888158\",\n\totherNames = {\"Kaliana\", \"\
      Kariana\", \"Kaliána\", \"Sapä́\", \"Sape\"},\n\tscripts = Latn,\n}\n\nm[\"spd\"] = {\n\t\"Saep\",\n\t\"Q7398312\",\n\t\"ngf-mad\",\n}\n\nm[\"spe\"] = {\n\t\"Sepa (New Guinea)\",\n\t\"Q7451725\",\n\t\"poz-ocw\",\n\totherNames = {\"Sepa\", \"Sepa (Papua\
      \ New Guinea)\"},\n\tscripts = Latn,\n}\n\nm[\"spg\"] = {\n\t\"Sian\",\n\t\"Q7506806\",\n\t\"poz-bnn\",\n}\n\nm[\"spi\"] = {\n\t\"Saponi\",\n\t\"Q3915418\",\n}\n\nm[\"spk\"] = {\n\t\"Sengo\",\n\t\"Q7450584\",\n\t\"paa-spk\",\n\tscripts = Latn,\n}\n\nm[\"\
      spl\"] = {\n\t\"Selepet\",\n\t\"Q7447917\",\n\t\"ngf\",\n}\n\nm[\"spm\"] = {\n\t\"Sepen\",\n\t\"Q4701931\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"spn\"] = {\n\t\"Sanapaná\",\n\t\"Q3033556\",\n\t\"sai-mas\",\n\tscripts = Latn,\n}\n\nm[\"spo\"] = {\n\t\
      \"Spokane\",\n\t\"Q3493704\",\n\t\"sal\",\n\totherNames = {\"Montana Salish\", \"Salish\", \"Séliš\", \"Kalispel-Pend d'oreille\", \"Kalispel\"},\n}\n\nm[\"spp\"] = {\n\t\"Supyire\",\n\t\"Q56284\",\n\t\"alv\",\n\totherNames = {\"Suppire\", \"Supyire Senoufo\"\
      , \"Supyire Senufo\", \"Shempire Senoufo\", \"Shempire\"},\n\tscripts = Latn,\n}\n\nm[\"spr\"] = {\n\t\"Saparua\",\n\t\"Q7420921\",\n\t\"poz-cet\",\n}\n\nm[\"sps\"] = {\n\t\"Saposa\",\n\t\"Q3473187\",\n\t\"poz-ocw\",\n}\n\nm[\"spt\"] = {\n\t\"Spiti Bhoti\"\
      ,\n\t\"Q22080879\",\n\t\"sit\",\n}\n\nm[\"spu\"] = {\n\t\"Sapuan\",\n\t\"Q7421168\",\n\t\"mkh-ban\",\n}\n\nm[\"spv\"] = {\n\t\"Sambalpuri\",\n\t\"Q6433240\",\n\t\"inc\",\n\totherNames = {\"Kosali\", \"Koshali\"},\n\tscripts = {\"Orya\"},\n\ttranslit_module\
      \ = \"or-translit\",\n}\n\nm[\"spx\"] = {\n\t\"South Picene\",\n\t\"Q36688\",\n\t\"itc\",\n\totherNames = {\"Old Sabellic\", \"Old Sabellian\", \"Middle Adriatic\", \"Central Adriatic\"},\n\tscripts = {\"Ital\", \"Latn\"},\n\ttranslit_module = \"Ital-translit\"\
      ,\n}\n\nm[\"spy\"] = {\n\t\"Sabaot\",\n\t\"Q7395896\",\n\t\"sdv\",\n}\n\nm[\"sqa\"] = {\n\t\"Shama-Sambuga\",\n\t\"Q3914392\",\n\t\"nic-knj\",\n\tscripts = Latn,\n}\n\nm[\"sqh\"] = {\n\t\"Shau\",\n\t\"Q3913925\",\n\t\"nic-knj\",\n\tscripts = Latn,\n}\n\
      \nm[\"sqk\"] = {\n\t\"Albanian Sign Language\",\n\t\"Q4709168\",\n\t\"sgn\",\n}\n\nm[\"sqm\"] = {\n\t\"Suma\",\n\t\"Q11008431\",\n}\n\nm[\"sqn\"] = {\n\t\"Susquehannock\",\n\t\"Q3505736\",\n\t\"iro\",\n}\n\nm[\"sqo\"] = {\n\t\"Sorkhei\",\n\t\"Q3491964\"\
      ,\n\t\"ira-kms\",\n}\n\nm[\"sqq\"] = {\n\t\"Sou\",\n\t\"Q16979751\",\n\t\"mkh-ban\",\n}\n\nm[\"sqr\"] = {\n\t\"Siculo-Arabic\",\n\t\"Q1069489\",\n\t\"sem-arb\",\n}\n\nm[\"sqs\"] = {\n\t\"Sri Lankan Sign Language\",\n\t\"Q3915466\",\n\t\"sgn\",\n}\n\nm[\"\
      sqt\"] = {\n\t\"Soqotri\",\n\t\"Q13283\",\n\t\"sem-sar\",\n\totherNames = {\"Socotri\"},\n}\n\nm[\"squ\"] = {\n\t\"Squamish\",\n\t\"Q2484579\",\n\t\"sal\",\n\tscripts = Latn,\n}\n\nm[\"sra\"] = {\n\t\"Saruga\",\n\t\"Q7424699\",\n\t\"ngf-mad\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"srb\"] = {\n\t\"Sora\",\n\t\"Q13284\",\n\t\"mun\",\n\tscripts = {\"Sora\"},\n}\n\nm[\"sre\"] = {\n\t\"Sara\",\n\t\"Q33957\",\n\t\"day\",\n}\n\nm[\"srf\"] = {\n\t\"Nafi\",\n\t\"Q6958174\",\n\t\"poz-ocw\",\n}\n\nm[\"srg\"] = {\n\t\"Sulod\"\
      ,\n\t\"Q7636489\",\n\t\"phi\",\n}\n\nm[\"srh\"] = {\n\t\"Sarikoli\",\n\t\"Q33873\",\n\t\"ira-shy\",\n\tscripts = {\"Latn\", \"ug-Arab\", \"Cyrl\"},\n\tancestors = {\"ira-shr-pro\"},\n}\n\nm[\"sri\"] = {\n\t\"Siriano\",\n\t\"Q3485264\",\n\t\"sai-tuc\",\n\
      \tscripts = Latn,\n}\n\nm[\"srk\"] = {\n\t\"Serudung Murut\",\n\t\"Q7455497\",\n\t\"poz-san\",\n}\n\nm[\"srl\"] = {\n\t\"Isirawa\",\n\t\"Q4203802\",\n}\n\nm[\"srm\"] = {\n\t\"Saramaccan\",\n\t\"Q33779\",\n\t\"crp\",\n\tscripts = Latn,\n}\n\nm[\"srn\"]\
      \ = {\n\t\"Sranan Tongo\",\n\t\"Q33989\",\n\t\"crp\",\n\tscripts = Latn,\n}\n\nm[\"srq\"] = {\n\t\"Sirionó\",\n\t\"Q3027953\",\n\t\"tup-gua\",\n\tscripts = Latn,\n}\n\nm[\"srr\"] = {\n\t\"Serer\",\n\t\"Q36284\",\n\t\"alv-sng\",\n\tscripts = Latn,\n}\n\n\
      m[\"srs\"] = {\n\t\"Sarcee\",\n\t\"Q20825\",\n\t\"ath-nor\",\n\totherNames = {\"Sarsi\", \"Tsuu T'ina\", \"Tsuut'ina\", \"Tsu T'ina\"},\n\tscripts = Latn,\n}\n\nm[\"srt\"] = {\n\t\"Sauri\",\n\t\"Q7427547\",\n}\n\nm[\"sru\"] = {\n\t\"Suruí\",\n\t\"Q7646993\"\
      ,\n\t\"tup\",\n\totherNames = {\"Paíter\", \"Suruí-Paíter\", \"Suruí de Rondônia\", \"Suruí do Jiparaná\"},\n\tscripts = Latn,\n}\n\nm[\"srv\"] = {\n\t\"Waray Sorsogon\",\n\t\"Q18755610\",\n\t\"phi\",\n}\n\nm[\"srw\"] = {\n\t\"Serua\",\n\t\"Q14916905\"\
      ,\n\t\"poz-cet\",\n}\n\nm[\"srx\"] = {\n\t\"Sirmauri\",\n\t\"Q7530505\",\n\t\"inc-pah\",\n\tancestors = {\"psu\"},\n}\n\nm[\"sry\"] = {\n\t\"Sera\",\n\t\"Q7452602\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"srz\"] = {\n\t\"Shahmirzadi\",\n\t\"Q12953126\"\
      ,\n\t\"ira-msh\",\n\tscripts = {\"fa-Arab\"},\n}\n\nm[\"ssb\"] = {\n\t\"Southern Sama\",\n\t\"Q3470594\",\n\t\"poz-sbj\",\n\tscripts = Latn,\n}\n\nm[\"ssc\"] = {\n\t\"Suba-Simbiti\",\n\t\"Q7630687\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ssd\"] = {\n\
      \t\"Siroi\",\n\t\"Q10771067\",\n\t\"ngf-mad\",\n\tscripts = Latn,\n}\n\nm[\"sse\"] = {\n\t\"Balangingi\",\n\t\"Q2880535\",\n\t\"poz-sbj\",\n\tscripts = Latn,\n}\n\nm[\"ssf\"] = {\n\t\"Thao\",\n\t\"Q676492\",\n\t\"map\",\n\totherNames = {\"Sao\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"ssg\"] = {\n\t\"Seimat\",\n\t\"Q3182581\",\n\t\"poz-aay\",\n}\n\nm[\"ssh\"] = {\n\t\"Shihhi Arabic\",\n\t\"Q56571\",\n\t\"sem-arb\",\n\tscripts = {\"Arab\"},\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D),\
      \ u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"ssi\"] = {\n\t\"Sansi\",\n\t\"Q3309366\",\n\t\"inc\",\n\totherNames = {\"Bhilki\"},\n\tancestors = {\"psu\"},\n}\n\nm[\"ssj\"] = {\n\t\"\
      Sausi\",\n\t\"Q7427605\",\n\t\"ngf-mad\",\n\tscripts = Latn,\n}\n\nm[\"ssk\"] = {\n\t\"Sunam\",\n\t\"Q11002210\",\n\t\"sit\",\n}\n\nm[\"ssl\"] = {\n\t\"Western Sisaala\",\n\t\"Q11154776\",\n\t\"nic-gur\",\n\tscripts = Latn,\n}\n\nm[\"ssm\"] = {\n\t\"Semnam\"\
      ,\n\t\"Q7449713\",\n\t\"aav\",\n}\n\nm[\"ssn\"] = {\n\t\"Waata\",\n\t\"Q3501553\",\n\t\"cus\",\n}\n\nm[\"sso\"] = {\n\t\"Sissano\",\n\t\"Q7530937\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"ssp\"] = {\n\t\"Spanish Sign Language\",\n\t\"Q3100814\",\n\
      \t\"sgn\",\n}\n\nm[\"ssq\"] = {\n\t\"So'a\",\n\t\"Q7572120\",\n\t\"poz-cet\",\n\tscripts = Latn,\n}\n\nm[\"ssr\"] = {\n\t\"Swiss-French Sign Language\",\n\t\"Q12953483\",\n\t\"sgn\",\n\totherNames = {\"Swiss French Sign Language\"},\n}\n\nm[\"sss\"] =\
      \ {\n\t\"Sô\",\n\t\"Q3082037\",\n\t\"mkh-kat\",\n}\n\nm[\"sst\"] = {\n\t\"Sinasina\",\n\t\"Q7521813\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"ssu\"] = {\n\t\"Susuami\",\n\t\"Q7649752\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"ssv\"] = {\n\t\"Shark Bay\"\
      ,\n\t\"Q7489783\",\n\t\"poz-vnc\",\n}\n\nm[\"ssx\"] = {\n\t\"Samberigi\",\n\t\"Q7409020\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"ssy\"] = {\n\t\"Saho\",\n\t\"Q36353\",\n\t\"cus\",\n}\n\nm[\"ssz\"] = {\n\t\"Sengseng\",\n\t\"Q7450601\",\n\t\"poz-ocw\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"stb\"] = {\n\t\"Northern Subanen\",\n\t\"Q12953892\",\n\t\"phi\",\n}\n\nm[\"std\"] = {\n\t\"Sentinelese\",\n\t\"Q568377\",\n\tscripts = {\"Zyyy\"},\n}\n\nm[\"ste\"] = {\n\t\"Liana-Seti\",\n\t\"Q6539924\",\n\t\"poz-cet\",\n\
      }\n\nm[\"stf\"] = {\n\t\"Seta\",\n\t\"Q7456326\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"stg\"] = {\n\t\"Trieng\",\n\t\"Q22694648\",\n\t\"mkh-ban\",\n}\n\nm[\"sth\"] = {\n\t\"Shelta\",\n\t\"Q36705\",\n\t\"crp\",\n\totherNames = {\"Cant\"},\n\tscripts\
      \ = Latn,\n\tancestors = {\"en\"},\n}\n\nm[\"sti\"] = {\n\t\"Bulo Stieng\",\n\t\"Q15771431\",\n\t\"mkh-ban\",\n}\n\nm[\"stj\"] = {\n\t\"Matya Samo\",\n\t\"Q10974879\",\n\t\"dmn\",\n\tscripts = Latn,\n}\n\nm[\"stk\"] = {\n\t\"Arammba\",\n\t\"Q3502094\"\
      ,\n\t\"ngf\",\n}\n\nm[\"stm\"] = {\n\t\"Setaman\",\n\t\"Q7456333\",\n\t\"ngf-okk\",\n\tscripts = Latn,\n}\n\nm[\"stn\"] = {\n\t\"Owa\",\n\t\"Q1324132\",\n\t\"poz-sls\",\n\tscripts = Latn,\n}\n\nm[\"sto\"] = {\n\t\"Stoney\",\n\t\"Q3033570\",\n\t\"sio\"\
      ,\n}\n\nm[\"stp\"] = {\n\t\"Southeastern Tepehuan\",\n\t\"Q12953917\",\n\t\"azc\",\n\tscripts = Latn,\n}\n\nm[\"stq\"] = {\n\t\"Saterland Frisian\",\n\t\"Q27154\",\n\t\"gmw-fri\",\n\totherNames = {\"East Frisian\", \"Eastern Frisian\"}, -- Saterland F\
      \ is a dialect of East F; see [[WT:T:ASTQ]]\n\tscripts = Latn,\n}\n\nm[\"str\"] = {\n\t\"Saanich\",\n\t\"Q36444\",\n\t\"sal\",\n\tscripts = Latn,\n}\n\nm[\"sts\"] = {\n\t\"Shumashti\",\n\t\"Q33777\",\n\t\"inc-dar\",\n}\n\nm[\"stt\"] = {\n\t\"Budeh Stieng\"\
      ,\n\t\"Q12953891\",\n\t\"mkh-ban\",\n}\n\nm[\"stu\"] = {\n\t\"Samtao\",\n\t\"Q25559550\",\n\t\"mkh-pal\",\n}\n\nm[\"stv\"] = {\n\t\"Silt'e\",\n\tnil,\n\t\"sem-eth\",\n\tscripts = {\"Ethi\"},\n}\n\nm[\"stw\"] = {\n\t\"Satawalese\",\n\t\"Q28477\",\n\t\"\
      poz-mic\",\n}\n\nm[\"sty\"] = {\n\t\"Siberian Tatar\",\n\t\"Q4418344\",\n\t\"trk-kip\",\n\tscripts = {\"Cyrl\"},\n}\n\nm[\"sua\"] = {\n\t\"Sulka\",\n\t\"Q7636341\",\n}\n\nm[\"sub\"] = {\n\t\"Suku\",\n\t\"Q12953160\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\
      \nm[\"suc\"] = {\n\t\"Western Subanon\",\n\t\"Q16113894\",\n\t\"phi\",\n}\n\nm[\"sue\"] = {\n\t\"Suena\",\n\t\"Q7634386\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"sug\"] = {\n\t\"Suganga\",\n\t\"Q7634706\",\n\t\"ngf-okk\",\n\tscripts = Latn,\n}\n\nm[\"\
      sui\"] = {\n\t\"Suki\",\n\t\"Q2089984\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"suk\"] = {\n\t\"Sukuma\",\n\t\"Q2638144\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"suq\"] = {\n\t\"Suri\",\n\t\"Q5364172\",\n\t\"sdv\",\n}\n\nm[\"sur\"] = {\n\t\"Mwaghavul\"\
      ,\n\t\"Q3440486\",\n\t\"cdc-wst\",\n\totherNames = {\"Sura\", \"Mupun\"},\n\tscripts = Latn,\n}\n\nm[\"sus\"] = {\n\t\"Susu\",\n\t\"Q33990\",\n\t\"dmn\",\n\tscripts = Latn,\n}\n\nm[\"sut\"] = {\n\t\"Subtiaba\",\n\t\"Q3915405\",\n\t\"omq\",\n\tscripts =\
      \ Latn,\n}\n\nm[\"suv\"] = {\n\t\"Sulung\",\n\t\"Q56408\",\n}\n\nm[\"suw\"] = {\n\t\"Sumbwa\",\n\t\"Q7637055\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"sux\"] = {\n\t\"Sumerian\",\n\t\"Q36790\",\n\t\"qfa-iso\",\n\tscripts = {\"Xsux\"},\n}\n\nm[\"suy\"\
      ] = {\n\t\"Suyá\",\n\t\"Q3505859\",\n\t\"sai-jee\",\n\tscripts = Latn,\n}\n\nm[\"suz\"] = {\n\t\"Sunwar\",\n\t\"Q56549\",\n\t\"sit\",\n}\n\nm[\"sva\"] = {\n\t\"Svan\",\n\t\"Q34067\",\n\t\"ccs\",\n\tscripts = {\"Geor\", \"Cyrl\"},\n\ttranslit_module = \"\
      sva-translit\",\n\toverride_translit = true,\n\tentry_name = {\n\t\tfrom = {DIAER, MACRON},\n\t\tto   = {}} ,\n}\n\nm[\"svb\"] = {\n\t\"Ulau-Suain\",\n\t\"Q7878769\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"svc\"] = {\n\t\"Vincentian Creole English\"\
      ,\n\t\"Q3501785\",\n\t\"crp\",\n\tscripts = Latn,\n\tancestors = {\"en\"},\n}\n\nm[\"sve\"] = {\n\t\"Serili\",\n\t\"Q7454834\",\n\t\"poz-cet\",\n}\n\nm[\"svk\"] = {\n\t\"Slovakian Sign Language\",\n\t\"Q7541557\",\n\t\"sgn\",\n}\n\nm[\"svm\"] = {\n\t\"\
      Molise Croatian\",\n\t\"Q36254\",\n\t\"zls\",\n\totherNames = {\"Slavo-molisano\", \"Slavomolisano\", \"Molise Slavic\"},\n\tscripts = Latn,\n\tancestors = {\"sh\"},\n}\n\nm[\"svs\"] = {\n\t\"Savosavo\",\n\t\"Q3130296\",\n\tscripts = Latn,\n}\n\nm[\"svx\"\
      ] = {\n\t\"Skalvian\",\n\t\"Q3486125\",\n\t\"bat\",\n\tscripts = Latn,\n}\n\nm[\"swb\"] = {\n\t\"Maore Comorian\",\n\t\"Q34075\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"swf\"] = {\n\t\"Sere\",\n\t\"Q7453056\",\n\t\"nic-ubg\",\n\tscripts = Latn,\n}\n\n\
      m[\"swg\"] = {\n\t\"Swabian\",\n\t\"Q327274\",\n\t\"gmw\",\n\tscripts = Latn,\n\tancestors = {\"gsw\"},\n}\n\nm[\"swi\"] = {\n\t\"Sui\",\n\t\"Q3112388\",\n\t\"qfa-kms\",\n\tscripts = Latn,\n}\n\nm[\"swj\"] = {\n\t\"Sira\",\n\t\"Q36599\",\n\t\"bnt\",\n\t\
      scripts = Latn,\n}\n\nm[\"swl\"] = {\n\t\"Swedish Sign Language\",\n\t\"Q36558\",\n\t\"sgn\",\n}\n\nm[\"swm\"] = {\n\t\"Samosa\",\n\t\"Q7410037\",\n\t\"ngf-mad\",\n\tscripts = Latn,\n}\n\nm[\"swn\"] = {\n\t\"Sokna\",\n\t\"Q2988323\",\n\t\"ber\",\n\totherNames\
      \ = {\"Sawknah\", \"Fezzan\", \"Fogaha\"},\n}\n\nm[\"swo\"] = {\n\t\"Shanenawa\",\n\tnil,\n\t\"sai-pan\",\n\tscripts = Latn,\n}\n\nm[\"swp\"] = {\n\t\"Suau\",\n\t\"Q3502368\",\n\t\"poz-ocw\",\n}\n\nm[\"swq\"] = {\n\t\"Sharwa\",\n\t\"Q56791\",\n\t\"cdc-cbm\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"swr\"] = {\n\t\"Saweru\",\n\t\"Q3474649\",\n}\n\nm[\"sws\"] = {\n\t\"Seluwasan\",\n\t\"Q7448845\",\n\t\"poz-cet\",\n}\n\nm[\"swt\"] = {\n\t\"Sawila\",\n\t\"Q7428639\",\n}\n\nm[\"swu\"] = {\n\t\"Suwawa\",\n\t\"Q7650588\",\n\
      \t\"phi\",\n}\n\nm[\"sww\"] = {\n\t\"Sowa\",\n\t\"Q7571843\",\n\t\"poz-vnc\",\n}\n\nm[\"swx\"] = {\n\t\"Suruahá\",\n\t\"Q3114402\",\n\t\"auf\",\n\totherNames = {\"Zuruahá\", \"Suruaha\", \"Suruwaha\", \"Zuruaha\", \"Índios do Coxodoá\"},\n}\n\nm[\"swy\"\
      ] = {\n\t\"Sarua\",\n\t\"Q56261\",\n\t\"cdc-est\",\n\tscripts = Latn,\n}\n\nm[\"sxb\"] = {\n\t\"Suba\",\n\t\"Q33916\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"sxc\"] = {\n\t\"Sicanian\",\n\t\"Q36335\",\n}\n\nm[\"sxe\"] = {\n\t\"Sighu\",\n\t\"Q36431\"\
      ,\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"sxg\"] = {\n\t\"Shixing\",\n\t\"Q56337\",\n\t\"sit\",\n\totherNames = {\"Shuhi\", \"Xumi\"},\n}\n\nm[\"sxk\"] = {\n\t\"Southern Kalapuya\",\n\t\"Q3192122\",\n}\n\nm[\"sxl\"] = {\n\t\"Selonian\",\n\t\"Q36491\"\
      ,\n\t\"bat\",\n\totherNames = {\"Selian\"},\n\tscripts = Latn,\n}\n\nm[\"sxm\"] = {\n\t\"Samre\",\n\t\"Q6583615\",\n\t\"mkh-pea\",\n}\n\nm[\"sxn\"] = {\n\t\"Sangir\",\n\t\"Q25714758\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"sxo\"] = {\n\t\"Sorothaptic\"\
      ,\n\t\"Q2762254\",\n}\n\nm[\"sxr\"] = {\n\t\"Saaroa\",\n\t\"Q716599\",\n\t\"map\",\n\tscripts = Latn,\n}\n\nm[\"sxs\"] = {\n\t\"Sasaru\",\n\t\"Q3913384\",\n\t\"alv-edo\",\n\tscripts = Latn,\n}\n\n-- \"sxu\" \"Upper Saxon\" IS SUBSUMED INTO \"gmw-ecg\"\
      \ \"East Central German\"\n\nm[\"sxw\"] = {\n\t\"Saxwe Gbe\",\n\t\"Q7428892\",\n}\n\nm[\"sya\"] = {\n\t\"Siang\",\n\t\"Q3482903\",\n}\n\nm[\"syb\"] = {\n\t\"Central Subanen\",\n\t\"Q12953893\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"syc\"] = {\n\t\"\
      Classical Syriac\",\n\t\"Q33538\",\n\t\"sem-ara\",\n\tscripts = {\"Syrc\"},\n\tentry_name = {\n\t\tfrom = {\"[\" .. u(0x0304) .. u(0x0308) .. u(0x0331) .. u(0x0730) .. \"-\" .. u(0x0748) .. \"]\"},\n\t\tto   = {},\n\t},\n}\n\nm[\"syi\"] = {\n\t\"Seki\"\
      ,\n\t\"Q36547\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"syk\"] = {\n\t\"Sukur\",\n\t\"Q56292\",\n\t\"cdc-cbm\",\n\tscripts = Latn,\n}\n\nm[\"syl\"] = {\n\t\"Sylheti\",\n\t\"Q2044560\",\n\t\"inc\",\n\tscripts = {\"Sylo\", \"Beng\"},\n\tancestors = {\"\
      inc-mgd\"},\n\ttranslit_module = \"syl-translit\",\n}\n\nm[\"sym\"] = {\n\t\"Maya Samo\",\n\t\"Q10950421\",\n\t\"dmn\",\n\tscripts = Latn,\n}\n\nm[\"syn\"] = {\n\t\"Senaya\",\n\t\"Q33914\",\n\t\"sem-ara\",\n}\n\nm[\"syo\"] = {\n\t\"Suoy\",\n\t\"Q7641864\"\
      ,\n\t\"mkh-pea\",\n}\n\nm[\"sys\"] = {\n\t\"Sinyar\",\n\t\"Q56840\",\n\t\"csu\",\n\tscripts = Latn,\n}\n\nm[\"syw\"] = {\n\t\"Kagate\",\n\t\"Q12952538\",\n\t\"sit\",\n\tscripts = {\"Deva\"},\n}\n\nm[\"syx\"] = {\n\t\"Shamay\",\n\tnil,\n\t\"bnt\",\n\totherNames\
      \ = {\"Osamayi\", \"Samayi\", \"Samay\", \"Shamayi\"},\n\tscripts = Latn,\n}\n\nm[\"syy\"] = {\n\t\"Al-Sayyid Bedouin Sign Language\",\n\t\"Q2915457\",\n\t\"sgn\",\n}\n\nm[\"sza\"] = {\n\t\"Semelai\",\n\t\"Q3111827\",\n\t\"mkh\",\n}\n\nm[\"szb\"] = {\n\
      \t\"Ngalum\",\n\t\"Q11732516\",\n\t\"ngf-okk\",\n\tscripts = Latn,\n}\n\nm[\"szc\"] = {\n\t\"Semaq Beri\",\n\t\"Q7449119\",\n\t\"afa\",\n}\n\nm[\"szd\"] = {\n\t\"Seru\",\n\t\"Q7455488\",\n\t\"poz-bnn\",\n\tscripts = Latn,\n}\n\nm[\"sze\"] = {\n\t\"Seze\"\
      ,\n\t\"Q373683\",\n\t\"omv\",\n\tscripts = Latn,\n}\n\nm[\"szg\"] = {\n\t\"Sengele\",\n\t\"Q7450555\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"szl\"] = {\n\t\"Silesian\",\n\t\"Q30319\",\n\t\"zlw\",\n\totherNames = {\"Upper Silesian\", \"Silesian Polish\"\
      , \"Upper Silesian Polish\"},\n\tscripts = Latn,\n}\n\nm[\"szn\"] = {\n\t\"Sula\",\n\t\"Q3503403\",\n\t\"poz-cet\",\n\tscripts = Latn,\n}\n\nm[\"szp\"] = {\n\t\"Suabo\",\n\t\"Q7630429\",\n\t\"ngf-sbh\",\n\totherNames = {\"Inanwatan\"},\n\tscripts = Latn,\n\
      }\n\nm[\"szv\"] = {\n\t\"Isubu\",\n\t\"Q35431\",\n\t\"bnt\",\n\totherNames = {\"Isu\", \"Isu (Fako Division)\", \"Isuwu\", \"Suwu\", \"Subu\"},\n\tscripts = Latn,\n}\n\nm[\"szw\"] = {\n\t\"Sawai\",\n\t\"Q3447258\",\n\t\"poz-hce\",\n\totherNames = {\"Weda\"\
      , \"Weda-Sawai\", \"Kobe\", \"Faya-Mafa\", \"Messa-Dote\"},\n\tscripts = Latn,\n}\n\nm[\"szy\"] = {\n\t\"Sakizaya\",\n\t\"Q718269\",\n\t\"map\",\n\tscripts = Latn,\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2015-08-30T00:23:32.013Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aterm+cleanup&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=30-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 30 Aug 2015 00:23:31 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=30-Aug-2015
      X-Cache: cp1053 miss (0), cp3041 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 1372319868, 2093928338, 3743364939
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"3981465\" pageid=\"3981465\" ns=\"828\" title=\"Module:term cleanup\"><revisions><rev user=\"CodeCat\" timestamp=\"2013-05-15T19:27:30Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nfunction export.cleanup(frame)\n    local args = frame:getParent().args\n    local title = mw.title.getCurrentTitle()\n    \n    local lang = args[&quot;lang&quot;]\n    local sc\
      \ = args[&quot;sc&quot;]\n    local tr = args[&quot;tr&quot;]\n    local term = (args[1] or &quot;&quot;) .. (args[2] or &quot;&quot;)\n    \n    if lang == &quot;und&quot; then\n        return &quot;[[Category:term cleanup/lang=und]]&quot;\n    elseif\
      \ not lang or lang == &quot;&quot; then\n        if title.nsText == &quot;Template&quot; then\n            return &quot;[[Category:term cleanup/template namespace]]&quot;\n        elseif sc then\n            if sc == &quot;Arab&quot; then\n           \
      \     return &quot;[[Category:term cleanup/sc=Arab]]&quot;\n            elseif sc == &quot;fa-Arab&quot; then\n                return &quot;[[Category:term cleanup/sc=fa-Arab]]&quot;\n            elseif sc == &quot;Deva&quot; then\n                return\
      \ &quot;[[Category:term cleanup/sc=Deva]]&quot;\n            elseif sc == &quot;Grek&quot; then\n                return &quot;[[Category:term cleanup/sc=Grek]]&quot;\n            elseif sc == &quot;Hebr&quot; then\n                return &quot;[[Category:term\
      \ cleanup/sc=Hebr]]&quot;\n            elseif sc == &quot;Hani&quot; or sc == &quot;Hant&quot; or sc == &quot;Hans&quot; then\n                return &quot;[[Category:term cleanup/sc=Hani]]&quot;\n            else\n                return &quot;[[Category:term\
      \ cleanup/with sc]]&quot;\n            end\n        elseif lang == &quot;&quot; then\n            return &quot;[[Category:term cleanup/lang=]]&quot;\n        elseif title.isTalkPage then\n            return &quot;[[Category:term cleanup/talk]]&quot;\n\
      \        elseif title.nsText == &quot;User&quot; then\n            return &quot;[[Category:term cleanup/user namespace]]&quot;\n        elseif title.nsText == &quot;Wiktionary&quot; then\n            return &quot;[[Category:term cleanup/wiktionary namespace]]&quot;\n\
      \        elseif tr then\n            return &quot;[[Category:term cleanup/with tr]]&quot;\n        -- Categorise by character range\n        elseif containsRange(term, 0x0600, 0x06FF) then\n            return &quot;[[Category:term cleanup/Arabic]]&quot;\n\
      \        elseif containsRange(term, 0x0530, 0x058F) then\n            return &quot;[[Category:term cleanup/Armenian]]&quot;\n        elseif containsRange(term, 0x3400, 0x9FFF) then\n            return &quot;[[Category:term cleanup/Chinese]]&quot;\n   \
      \     elseif containsRange(term, 0x0400, 0x04FF) then\n            return &quot;[[Category:term cleanup/Cyrillic]]&quot;\n        elseif containsRange(term, 0x0900, 0x097F) then\n            return &quot;[[Category:term cleanup/Devanagari]]&quot;\n   \
      \     elseif containsRange(term, 0x10A0, 0x10FF) then\n            return &quot;[[Category:term cleanup/Georgian]]&quot;\n        elseif containsRange(term, 0x2C00, 0x2C5F) then\n            return &quot;[[Category:term cleanup/Glagolitic]]&quot;\n   \
      \     elseif containsRange(term, 0x10330, 0x1034F) then\n            return &quot;[[Category:term cleanup/Gothic]]&quot;\n        elseif containsRange(term, 0x0370, 0x03FF) then\n            return &quot;[[Category:term cleanup/Greek]]&quot;\n        elseif\
      \ containsRange(term, 0x1F00, 0x1FFF) then\n            return &quot;[[Category:term cleanup/Polytonic Greek]]&quot;\n        elseif containsRange(term, 0x0590, 0x05FF) or containsRange(term, 0xFB1D, 0xFB4F) then\n            return &quot;[[Category:term\
      \ cleanup/Hebrew]]&quot;\n        elseif containsRange(term, 0x3040, 0x30FF) then\n            return &quot;[[Category:term cleanup/Kana]]&quot;\n        elseif containsRange(term, 0xAC00, 0xD7AF) then\n            return &quot;[[Category:term cleanup/Korean]]&quot;\n\
      \        elseif containsRange(term, 0x0E00, 0x0E7F) then\n            return &quot;[[Category:term cleanup/Thai]]&quot;\n        elseif containsRange(term, 0x80, 0x024F) then\n            return &quot;[[Category:term cleanup/Latin extended]]&quot;\n  \
      \      -- Any other non-ASCII\n        elseif containsRange(term, 0x80, 0x10FFFF) then\n            return &quot;[[Category:term cleanup/containing characters]]&quot;\n        elseif term:find(&quot;@&quot;) then\n            return &quot;[[Category:term\
      \ cleanup/sign language]]&quot;\n        else\n            return &quot;[[Category:term cleanup]]&quot;\n        end\n    end\nend\n\nfunction containsRange(str, first, last)\n    for codepoint in mw.ustring.gcodepoint(str) do\n        if codepoint &gt;=\
      \ first and codepoint &lt;= last then\n            return true\n        end\n    end\n    return false\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:08.642Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Asco-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54855 t=1555362368539347
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '2155'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:08 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1221.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 590370457, 828187034, 692919302
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="332923" pageid="332923" ns="10" title="Template:sco-noun"><revisions><rev user="JohnC5" timestamp="2016-06-29T04:30:52Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#ifeq:{{{1}}}|-&lt;!--
          --&gt;|{{head|sco|noun|[[Appendix:Glossary#uncountable|uncountable]]|cat2=uncountable nouns}}&lt;!--
          --&gt;|{{head|sco|noun&lt;!--
                   --&gt;|{{#ifeq:{{{3|{{{2}}}}}}|-|[[Appendix:Glossary#countable|countable]] and [[Appendix:Glossary#uncountable|uncountable]]}}&lt;!--
                   --&gt;|&lt;!--
                   --&gt;|plural&lt;!--
                   --&gt;|{{#if:{{{pl|}}}&lt;!--
                       --&gt;|{{{pl}}}&lt;!--
                       --&gt;|{{#switch:{{{1|s}}}&lt;!--
                           --&gt;|s|es={{PAGENAME}}{{{1|s}}}&lt;!--
                           --&gt;|{{{1}}}{{#ifeq:{{{2|-}}}|-||{{{2|}}}}}&lt;!--
                           --&gt;}}&lt;!--
                       --&gt;}}&lt;!--
                   --&gt;|{{#if:{{{pl2|}}}|or}}&lt;!--
                   --&gt;|{{{pl2|}}}&lt;!--
                   --&gt;|{{#if:{{{pl3|}}}|or}}&lt;!--
                   --&gt;|{{{pl3|}}}&lt;!--
                   --&gt;|cat2={{#ifeq:{{{3|{{{2}}}}}}|-|countable nouns}}&lt;!--
                   --&gt;|cat3={{#ifeq:{{{3|{{{2}}}}}}|-|uncountable nouns}}&lt;!--
              --&gt;}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;includeonly&gt;{{#if:{{NAMESPACE}}||{{#ifexist:{{{plural|{{{2|{{PAGENAME}}}}}}}}||[[Category:Missing Scots plurals]]}}}}&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2015-08-30T00:23:32.815Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fis_valid_page_name%2Ffrom+sco-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=30-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 30 Aug 2015 00:23:32 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=30-Aug-2015
      X-Cache: cp1068 miss (0), cp3006 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2977800773, 253840179, 3743365168
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/is_valid_page_name/from sco-noun" to="Template:tracking/ugly hacks/is valid page name/from sco-noun" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/is valid page name/from sco-noun" missing="" /></pages></query></api>
- recorded: 2015-08-30T00:23:33.010Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Al-self&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:13:Coimbr_:39.3371:-9.3152:v4; WMF-Last-Access=30-Aug-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 30 Aug 2015 00:23:32 GMT
      Server: nginx/1.9.3
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=30-Aug-2015
      X-Cache: cp1054 miss (0), cp3005 miss (0), cp3003 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2303594950, 3744650025, 3743365279
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="3545166" pageid="3545166" ns="10" title="Template:l-self"><revisions><rev user="CodeCat" timestamp="2014-04-09T16:56:39Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:links/templates|l_term_t|notself=1}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:09.868Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=File%3AWikipedia-logo.png&prop=imageinfo&iiprop=url&iiurlwidth=44
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=59345 t=1555362369761652
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:09 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 570118810, 639158422, 695348933
    body: <?xml version="1.0"?><api><continue iistart="2010-05-26T15:56:42Z" continue="||" /><query><pages><page _idx="-1" ns="6" title="File:Wikipedia-logo.png" missing="" known="" imagerepository="shared"><imageinfo><ii thumburl="https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Wikipedia-logo.png/44px-Wikipedia-logo.png" thumbwidth="44" thumbheight="44" url="https://upload.wikimedia.org/wikipedia/commons/6/63/Wikipedia-logo.png" descriptionurl="https://commons.wikimedia.org/wiki/File:Wikipedia-logo.png" descriptionshorturl="https://commons.wikimedia.org/w/index.php?curid=162278" /></imageinfo></page></pages></query></api>
- recorded: 2019-04-15T21:05:53.260Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Astring&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52214 t=1555362353137135
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:53 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1281.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 573298343, 557267660, 691809241
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4099547\" pageid=\"4099547\" ns=\"828\" title=\"Module:string\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-10-18T08:33:33Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"okay for count to be nil\" xml:space=\"preserve\">local str = {}\n\n-- Cannot include null byte.\nlocal UTF8_char = \"[\\1-\\127\\194-\\244][\\128-\\191]*\"\n\n--[[\nulen\n\nCounts UTF-8 characters. Faster\
      \ than mw.ustring.len.\n\nAssumes that the encoding is correct. Unlike mw.ustring.len, does not return nil\nif encoding is invalid.\n\nDoes not count the bytes 192, 193, and 245-255. They are not used in UTF-8 and\nwill not occur if the string is valid.\
      \ They are replaced with the replacement\ncharacter (U+FFFD) on MediaWiki pages.\n--]]\nfunction str.ulen(text)\n\tlocal _, length = string.gsub(text, UTF8_char, \"\")\n\treturn length\nend\n\n--[[\nlen\n\nThis function returns the length of the target\
      \ string.\n\nUsage:\n{{#invoke:string|len|target_string|}}\nOR\n{{#invoke:string|len|s=target_string}}\n\nParameters\n    s: The string whose length to report\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing\
      \ whitespace from the target string.\n]]\nfunction str.len(frame)\n\tlocal new_args = str._getParameters(frame.args, { 's' });\n\tlocal s = new_args['s'] or '';\n\treturn mw.ustring.len(s)\nend\n\n--[[\nsub\n\nThis function returns a substring of the target\
      \ string at specified indices.\n\nUsage:\n{{#invoke:string|sub|target_string|start_index|end_index}}\nOR\n{{#invoke:string|sub|s=target_string|i=start_index|j=end_index}}\n\nParameters\n    s: The string to return a subset of\n    i: The fist index of\
      \ the substring to return, defaults to 1.\n    j: The last index of the string to return, defaults to the last character.\n    \nThe first character of the string is assigned an index of 1.  If either i or j\nis a negative value, it is interpreted the\
      \ same as selecting a character by\ncounting from the end of the string.  Hence, a value of -1 is the same as\nselecting the last character of the string.\n\nIf the requested indices are out of range for the given string, an error is\nreported.\n]]\nfunction\
      \ str.sub(frame)\n\tlocal new_args = str._getParameters(frame.args, { 's', 'i', 'j' });\n\tlocal s = new_args['s'] or '';\n\tlocal i = tonumber(new_args['i']) or 1;\n\tlocal j = tonumber(new_args['j']) or -1;\n\t\n\tlocal len = mw.ustring.len(s);\n\t\n\
      \t-- Convert negatives for range checking\n\tif i &lt; 0 then\n\t\ti = len + i + 1;\n\tend\n\tif j &lt; 0 then\n\t\tj = len + j + 1;\n\tend\n\t\n\tif i &gt; len or j &gt; len or i &lt; 1 or j &lt; 1 then\n\t\treturn str._error('String subset index out\
      \ of range');\n\tend\n\tif j &lt; i then\n\t\treturn str._error('String subset indices out of order');\n\tend\n\t\n\treturn mw.ustring.sub(s, i, j)\nend\n\n--[[\nThis function implements that features of {{str sub old}} and is kept in order\nto maintain\
      \ these older templates.\n]]\nfunction str.sublength(frame)\n\tlocal i = tonumber(frame.args.i) or 0\n\tlocal len = tonumber(frame.args.len)\n\treturn mw.ustring.sub(frame.args.s, i + 1, len and (i + len))\nend\n\n--[[\nmatch\n\nThis function returns a\
      \ substring from the source string that matches a\nspecified pattern.\n\nUsage:\n{{#invoke:string|match|source_string|pattern_string|start_index|match_number|plain_flag|nomatch_output}}\nOR\n{{#invoke:string|pos|s=source_string|pattern=pattern_string|start=start_index\n\
      \    |match=match_number|plain=plain_flag|nomatch=nomatch_output}}\n\nParameters\n    s: The string to search\n    pattern: The pattern or string to find within the string\n    start: The index within the source string to start the search.  The first\n\
      \        character of the string has index 1.  Defaults to 1.\n    match: In some cases it may be possible to make multiple matches on a single\n        string.  This specifies which match to return, where the first match is\n        match= 1.  If a negative\
      \ number is specified then a match is returned\n        counting from the last match.  Hence match = -1 is the same as requesting\n        the last match.  Defaults to 1.\n    plain: A flag indicating that the pattern should be understood as plain\n  \
      \      text.  Defaults to false.\n    nomatch: If no match is found, output the \"nomatch\" value rather than an error.\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from each string.  In\
      \ some circumstances this is desirable, in\nother cases one may want to preserve the whitespace.\n\nIf the match_number or start_index are out of range for the string being queried, then\nthis function generates an error.  An error is also generated if\
      \ no match is found.\nIf one adds the parameter ignore_errors=true, then the error will be suppressed and\nan empty string will be returned on any failure.\n\nFor information on constructing Lua patterns, a form of [regular expression], see:\n\n* http://www.lua.org/manual/5.1/manual.html#5.4.1\n\
      * http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Patterns\n* http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Ustring_patterns\n\n]]\nfunction str.match(frame)\n\tlocal new_args = str._getParameters(frame.args,\
      \ { 's', 'pattern', 'start', 'match', 'plain', 'nomatch' });\n\tlocal s = new_args['s'] or '';\n\tlocal start = tonumber(new_args['start']) or 1;\n\tlocal plain_flag = str._getBoolean(new_args['plain'] or false);\n\tlocal pattern = new_args['pattern']\
      \ or '';\n\tlocal match_index = math.floor(tonumber(new_args['match']) or 1);\n\tlocal nomatch = new_args['nomatch'];\n\t\n\tif s == '' then\n\t\treturn str._error('Target string is empty');\n\tend\n\tif pattern == '' then\n\t\treturn str._error('Pattern\
      \ string is empty');\n\tend\n\tif math.abs(start) &lt; 1 or math.abs(start) &gt; mw.ustring.len(s) then\n\t\treturn str._error('Requested start is out of range');\n\tend\n\tif match_index == 0 then\n\t\treturn str._error('Match index is out of range');\n\
      \tend\n\tif plain_flag then\n\t\tpattern = str.pattern_escape(pattern);\n\tend\n\t\n\tlocal result\n\tif match_index == 1 then\n\t\t-- Find first match is simple case\n\t\tresult = mw.ustring.match(s, pattern, start)\n\telse\n\t\tif start &gt; 1 then\n\
      \t\t\ts = mw.ustring.sub(s, start);\n\t\tend\n\t\t\n\t\tlocal iterator = mw.ustring.gmatch(s, pattern);\n\t\tif match_index &gt; 0 then\n\t\t\t-- Forward search\n\t\t\tfor w in iterator do\n\t\t\t\tmatch_index = match_index - 1;\n\t\t\t\tif match_index\
      \ == 0 then\n\t\t\t\t\tresult = w;\n\t\t\t\t\tbreak;\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\t-- Reverse search\n\t\t\tlocal result_table = {};\n\t\t\tlocal count = 1;\n\t\t\tfor w in iterator do\n\t\t\t\tresult_table[count] = w;\n\t\t\t\tcount = count\
      \ + 1;\n\t\t\tend\n\t\t\t\n\t\t\tresult = result_table[count + match_index];\n\t\tend\n\tend\n\t\n\tif result == nil then\n\t\tif nomatch == nil then\n\t\t\treturn str._error('Match not found');\n\t\telse\n\t\t\treturn nomatch;\n\t\tend\n\telse\n\t\treturn\
      \ result;\n\tend\nend\n\n--[[\npos\n\nThis function returns a single character from the target string at position pos.\n\nUsage:\n{{#invoke:string|pos|target_string|index_value}}\nOR\n{{#invoke:string|pos|target=target_string|pos=index_value}}\n\nParameters\n\
      \    target: The string to search\n    pos: The index for the character to return\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from the target string.  In some circumstances this is desirable,\
      \ in\nother cases one may want to preserve the whitespace.\n\nThe first character has an index value of 1.\n\nIf one requests a negative value, this function will select a character by counting backwards\nfrom the end of the string.  In other words pos\
      \ = -1 is the same as asking for the last character.\n\nA requested value of zero, or a value greater than the length of the string returns an error.\n]]\nfunction str.pos(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'target', 'pos' });\n\
      \tlocal target_str = new_args['target'] or '';\n\tlocal pos = tonumber(new_args['pos']) or 0;\n\t\n\tif pos == 0 or math.abs(pos) &gt; mw.ustring.len(target_str) then\n\t\treturn str._error('String index out of range');\n\tend\n\t\n\treturn mw.ustring.sub(target_str,\
      \ pos, pos);\nend\n\n--[[\nstr_find\n\nThis function duplicates the behavior of {{str_find}}, including all of its quirks.\nThis is provided in order to support existing templates, but is NOT RECOMMENDED for\nnew code and templates.  New code is recommended\
      \ to use the \"find\" function instead.\n\nReturns the first index in \"source\" that is a match to \"target\".  Indexing is 1-based,\nand the function returns -1 if the \"target\" string is not present in \"source\".\n\nImportant Note: If the \"target\"\
      \ string is empty / missing, this function returns a\nvalue of \"1\", which is generally unexpected behavior, and must be accounted for\nseparatetly.\n]]\nfunction str.str_find(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'source', 'target'\
      \ });\n\tlocal source_str = new_args['source'] or '';\n\tlocal target_str = new_args['target'] or '';\n\t\n\tif target_str == '' then\n\t\treturn 1;\n\tend\n\t\n\tlocal start = mw.ustring.find(source_str, target_str, 1, true)\n\tif start == nil then\n\t\
      \tstart = -1\n\tend\n\t\n\treturn start\nend\n\n--[[\nfind\n\nThis function allows one to search for a target string or pattern within another\nstring.\n\nUsage:\n{{#invoke:string|find|source_str|target_string|start_index|plain_flag}}\nOR\n{{#invoke:string|find|source=source_str|target=target_str|start=start_index|plain=plain_flag}}\n\
      \nParameters\n    source: The string to search\n    target: The string or pattern to find within source\n    start: The index within the source string to start the search, defaults to 1\n    plain: Boolean flag indicating that target should be understood\
      \ as plain\n        text and not as a Lua style regular expression, defaults to true\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from the parameter.  In some circumstances this is desirable,\
      \ in\nother cases one may want to preserve the whitespace.\n\nThis function returns the first index &gt;= \"start\" where \"target\" can be found\nwithin \"source\".  Indices are 1-based.  If \"target\" is not found, then this\nfunction returns an empty\
      \ string.  If either \"source\" or \"target\" are missing / empty, this\nfunction also returns an empty string.\n\nThis function should be safe for UTF-8 strings.\n]]\nfunction str.find(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2]\
      \ = { required = true },\n\t\t[3] = { type = \"number\" },\n\t\t[4] = { type = \"boolean\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\treturn mw.ustring.find(args[1], args[2], args[3], args[4])\nend\n\n\
      --[[\nreplace\n\nThis function allows one to replace a target string or pattern within another\nstring.\n\nUsage:\n{{#invoke:string|replace|source_str|pattern_string|replace_string|replacement_count|plain_flag}}\nOR\n{{#invoke:string|replace|source=source_string|pattern=pattern_string|replace=replace_string|\n\
      \   count=replacement_count|plain=plain_flag}}\n\nParameters\n    source: The string to search\n    pattern: The string or pattern to find within source\n    replace: The replacement text\n    count: The number of occurences to replace, defaults to all.\n\
      \    plain: Boolean flag indicating that pattern should be understood as plain\n        text and not as a Lua style regular expression, defaults to true\n]]\nfunction str.replace(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'source', 'pattern',\
      \ 'replace', 'count', 'plain' });\n\tlocal source_str = new_args['source'] or '';\n\tlocal pattern = new_args['pattern'] or '';\n\tlocal replace = new_args['replace'] or '';\n\tlocal count = tonumber(new_args['count']);\n\tlocal plain = new_args['plain']\
      \ or true;\n\t\n\tif source_str == '' or pattern == '' then\n\t\treturn source_str;\n\tend\n\tplain = str._getBoolean(plain);\n\t\n\tif plain then\n\t\tpattern = str.pattern_escape(pattern);\n\t\treplace = mw.ustring.gsub(replace, \"%%\", \"%%%%\"); --Only\
      \ need to escape replacement sequences.\n\tend\n\t\n\tlocal result;\n\t\n\tresult = mw.ustring.gsub(source_str, pattern, replace, count);\n\t\n\treturn result;\nend\n\n\nfunction str.gsub(frame)\n\tlocal params = {\n\t\t[1] = { required = true, allow_empty\
      \ = true },\n\t\t[2] = { required = true, allow_empty = true },\n\t\t[3] = { required = true, allow_empty = true },\n\t\t[4] = { type = \"number\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\treturn (mw.ustring.gsub(args[1],\
      \ args[2], args[3], args[4]))\nend\n\n\n--[[\n    simple function to pipe string.rep to templates.\n]]\n\nfunction str.rep(frame)\n\tlocal repetitions = tonumber(frame.args[2])\n\tif not repetitions then\n\t\treturn str._error('function rep expects a number\
      \ as second parameter, received \"' .. (frame.args[2] or '') .. '\"')\n\tend\n\treturn string.rep(frame.args[1] or '', repetitions)\nend\n\nfunction str.lower(frame)\n\tlocal text = frame.args[1] or ''\n\treturn mw.ustring.lower(text)\nend\n\nstr.lc =\
      \ str.lower\n\n--[[\nHelper function that populates the argument list given that user may need to use a mix of\nnamed and unnamed parameters.  This is relevant because named parameters are not\nidentical to unnamed parameters due to string trimming, and\
      \ when dealing with strings\nwe sometimes want to either preserve or remove that whitespace depending on the application.\n]]\nfunction str._getParameters(frame_args, arg_list)\n\tlocal new_args = {};\n\tlocal index = 1;\n\tlocal value;\n\t\n\tfor _, arg\
      \ in ipairs(arg_list) do\n\t\tvalue = frame_args[arg]\n\t\tif value == nil then\n\t\t\tvalue = frame_args[index];\n\t\t\tindex = index + 1;\n\t\tend\n\t\tnew_args[arg] = value;\n\tend\n\t\n\treturn new_args;\nend\n\n--[[\nHelper function to handle error\
      \ messages.\n]]\nfunction str._error(error_str)\n\tlocal frame = mw.getCurrentFrame();\n\tlocal error_category = frame.args.error_category or 'Errors reported by Module String';\n\tlocal ignore_errors = frame.args.ignore_errors or false;\n\tlocal no_category\
      \ = frame.args.no_category or false;\n\t\n\tif str._getBoolean(ignore_errors) then\n\t\treturn '';\n\tend\n\t\n\tlocal error_str = '&lt;strong class=\"error\"&gt;String Module Error: ' .. error_str .. '&lt;/strong&gt;';\n\tif error_category ~= '' and not\
      \ str._getBoolean(no_category) then\n\t\terror_str = '[[Category:' .. error_category .. ']]' .. error_str;\n\tend\n\t\n\treturn error_str;\nend\n\n--[[\nHelper Function to interpret boolean strings\n]]\nfunction str._getBoolean(boolean_str)\n\tlocal boolean_value;\n\
      \t\n\tif type(boolean_str) == 'string' then\n\t\tboolean_str = boolean_str:lower();\n\t\tif boolean_str == 'false' or boolean_str == 'no' or boolean_str == '0'\n\t\t\t\tor boolean_str == '' then\n\t\t\tboolean_value = false;\n\t\telse\n\t\t\tboolean_value\
      \ = true;\n\t\tend\n\telseif type(boolean_str) == 'boolean' then\n\t\tboolean_value = boolean_str;\n\telse\n\t\terror('No boolean value found');\n\tend\n\treturn boolean_value\nend\n\n--[[\nHelper function that escapes all pattern characters – ().%+-*?[^$]\
      \ – so that they will be treated\nas plain text.\n]]\nfunction str.pattern_escape(pattern_str)\n\tlocal invoked = false\n\t\n\tif type(pattern_str) == \"table\" then\n\t\tif pattern_str.args then\n\t\t\tlocal frame = pattern_str\n\t\t\tinvoked = true\n\
      \t\t\t\n\t\t\tif frame.args[1] then\n\t\t\t\tpattern_str = frame.args[1]\n\t\t\telse\n\t\t\t\tpattern_str = frame:getParent().args[1]\n\t\t\tend\n\t\telse\n\t\t\terror(\"First argument to pattern_escape should be a string, a number, or a frame object.\"\
      )\n\t\tend\n\telseif not (type(pattern_str) == \"string\" or type(pattern_str) == \"number\") then\n\t\terror(\"First argument to pattern_escape should be a string or a number.\")\n\tend\n\t\n\tif invoked then\n\t\tlocal escaped = mw.ustring.gsub(pattern_str,\
      \ \"([%(%)%.%%%+%-%*%?%[%^%$%]])\", \"%%%1\")\n\t\treturn escaped\n\telse\n\t\treturn mw.ustring.gsub(pattern_str, \"([%(%)%.%%%+%-%*%?%[%^%$%]])\", \"%%%1\");\n\tend\nend\n\nfunction str.count(text, pattern, plain)\n\tif not (type(text) == \"string\"\
      \ or type(text) == \"number\") then\n\t\terror('The first argument to the function \"count\" must be a string or a number, not a ' .. type(text) .. '.')\n\tend\n\t\n\tif not (type(pattern) == \"string\" or type(pattern) == \"number\") then\n\t\terror('The\
      \ first argument to the function \"count\" must be a string or a number, not a ' .. type(text) .. '.')\n\tend\n\t\n\tif plain then\n\t\tpattern = str.pattern_escape(pattern)\n\tend\n\t\n\tlocal _, count = mw.ustring.gsub(text, pattern, \"\")\n\t\n\treturn\
      \ count\nend\n\nfunction str.plain_gsub(text, pattern, replacement)\n\tlocal invoked = false\n\t\n\tif type(text) == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1]\
      \ = {},\n\t\t\t\t[2] = {},\n\t\t\t\t[3] = { allow_empty = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\t\t\treplacement = args[3]\n\t\t\
      else\n\t\t\terror(\"If the first argument to plain_gsub is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not (type(pattern) == \"string\" or type(pattern) == \"number\") then\n\t\t\terror(\"The second argument to plain_gsub should be\
      \ a string or a number.\")\n\t\tend\n\t\t\n\t\tif not (type(replacement) == \"string\" or type(replacement) == \"number\") then\n\t\t\terror(\"The third argument to plain_gsub should be a string or a number.\")\n\t\tend\n\tend\n\t\n\tpattern = str.pattern_escape(pattern)\n\
      \t\n\tif invoked then\n\t\ttext = mw.ustring.gsub(text, pattern, replacement)\n\t\treturn text\n\telse\n\t\treturn mw.ustring.gsub(text, pattern, replacement)\n\tend\nend\n\nfunction str.matchToArray(text, pattern)\n\tlocal invoked = false\n\t\n\tif type(text)\
      \ == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = { required = true },\n\t\t\t\t[2] = { required = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\"\
      ).process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\t\telse\n\t\t\terror(\"If the first argument to matchToArray is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not (type(pattern) == \"string\" or\
      \ type(pattern) == \"number\") then\n\t\t\terror(\"The second argument to matchToArray should be a string or a number.\")\n\t\tend\n\tend\n\t\n\tlocal matches = {}\n\tlocal i = 0\n\tfor match in mw.ustring.gmatch(text, pattern) do\n\t\ti = i + 1\n\t\t\
      matches[i] = match\n\tend\n\t\n\tif i &gt; 0 then\n\t\tif invoked then\n\t\t\treturn table.concat(matches, \", \")\n\t\telse\n\t\t\treturn matches\n\t\tend\n\telse\n\t\tif invoked then\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn nil\n\t\tend\n\tend\nend\n\
      \n--[=[\n\tSimilar to gmatch, but it returns the count of the match in addition to the\n\tlist of captures, something like ipairs().\n\t\n\tIf the pattern doesn't contain any captures, the whole match is returned.\n\t\n\tInvoke thus:\n\t\n\t\tfor i, whole_match\
      \ in require(\"Module:string\").imatch(text, pattern) do\n\t\t\t[ do something with i and whole_match ]\n\t\tend\n\t\n\tor\n\t\n\t\tfor i, capture1[, capture2[, capture3[, ...]]] in require(\"Module:string\").imatch(text, pattern) do\n\t\t\t[ do something\
      \ with i and capture1 ]\n\t\tend\n\t\n\tFor example, this code\n\t\tfor i, whole_match in require(\"Module:string\").imatch(\"a b c\", \"[a-z]\") do\n\t\t\tmw.log(i, whole_match)\n\t\tend\n\twill log\n\t\t1\ta\n\t\t2\tb\n\t\t3\tc\n]=]\nfunction str.imatch(text,\
      \ pattern, pos, plain, use_basic_Lua_function)\n\tlocal i = 0\n\tpos = pos or 0\n\tif not string.find(pattern, \"%b()\") then\n\t\tpattern = \"(\" .. pattern .. \")\"\n\tend\n\tlocal find = use_basic_Lua_function and string.find or mw.ustring.find\n\t\
      return function()\n\t\ti = i + 1\n\t\tlocal return_values = { find(text, pattern, pos, plain) }\n\t\tlocal j = return_values[2]\n\t\t\n\t\tif return_values[3] then\n\t\t\tpos = j + 1\n\t\t\t-- Skip the first two returned values, which are the indices of\
      \ the\n\t\t\t-- whole match.\n\t\t\treturn i, unpack(return_values, 3)\n\t\tend\n\tend\nend\n\nfunction str.escapebytes(s)\n\treturn (string.gsub(s,\n\t\t'.',\n\t\tfunction(char)\n\t\t\treturn ('\\\\%03d'):format(string.byte(char))\n\t\tend))\nend\n\n\
      function str.URIdecode(frame)\n\treturn mw.uri.decode(frame.args[1], frame.args[2] or \"PATH\")\nend\n\nreturn str</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:53.458Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Atable&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46252 t=1555362353338168
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:53 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1224.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 671819989, 506495038, 694072976
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5122966\" pageid=\"5122966\" ns=\"828\" title=\"Module:table\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-14T04:16:37Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"add deepEquals, deepEqualsList for deep comparisons\" xml:space=\"preserve\">--[[\n------------------------------------------------------------------------------------\n--                      table (formerly\
      \ TableTools)                               --\n--                                                                                --\n-- This module inclcudes a number of functions for dealing with Lua tables.        --\n-- It is a meta-module, meant to\
      \ be called from other Lua modules, and should     --\n-- not be called directly from #invoke.                                           --\n------------------------------------------------------------------------------------\n--]]\n\n--[[\n\tInserting\
      \ new values into a table using a local \"index\" variable, which is\n\tincremented each time, is faster than using \"table.insert(t, x)\" or\n\t\"t[#t + 1] = x\". See the talk page.\n]]\n\nlocal libraryUtil = require('libraryUtil')\n\nlocal export = {}\n\
      \n-- Define often-used variables and functions.\nlocal floor = math.floor\nlocal infinity = math.huge\nlocal checkType = libraryUtil.checkType\nlocal checkTypeMulti = libraryUtil.checkTypeMulti\n\nlocal function _check(funcName, expectType)\n\tif type(expectType)\
      \ == \"string\" then\n\t\treturn function(argIndex, arg, nilOk)\n\t\t\tcheckType(funcName, argIndex, arg, expectType, nilOk)\n\t\tend\n\telse\n\t\treturn function(argIndex, arg, expectType, nilOk)\n\t\t\tif type(expectType) == \"table\" then\n\t\t\t\t\
      checkTypeMulti(funcName, argIndex, arg, expectType, nilOk)\n\t\t\telse\n\t\t\t\tcheckType(funcName, argIndex, arg, expectType, nilOk)\n\t\t\tend\n\t\tend\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- isPositiveInteger\n--\n-- This function returns true if the given value is a positive integer, and false\n-- if not. Although it doesn't operate on tables, it is included here as it is\n-- useful for determining whether a given table key is in the array\
      \ part or the\n-- hash part of a table.\n------------------------------------------------------------------------------------\n--]]\nfunction export.isPositiveInteger(v)\n\treturn type(v) == 'number' and v &gt;= 1 and floor(v) == v and v &lt; infinity\n\
      end\n\n--[[\n------------------------------------------------------------------------------------\n-- isNan\n--\n-- This function returns true if the given number is a NaN value, and false\n-- if not. Although it doesn't operate on tables, it is included\
      \ here as it is\n-- useful for determining whether a value can be a valid table key. Lua will\n-- generate an error if a NaN is used as a table key.\n------------------------------------------------------------------------------------\n--]]\nfunction export.isNan(v)\n\
      \tif type(v) == 'number' and tostring(v) == '-nan' then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- shallowClone\n--\n-- This returns a clone of\
      \ a table. The value returned is a new table, but all\n-- subtables and functions are shared. Metamethods are respected, but the returned\n-- table will have no metatable of its own.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.shallowClone(t)\n\tlocal ret = {}\n\tfor k, v in pairs(t) do\n\t\tret[k] = v\n\tend\n\treturn ret\nend\n\n--[[\nShallow copy\n]]\nfunction export.shallowcopy(orig)\n\tlocal orig_type = type(orig)\n\tlocal copy\n\tif orig_type == 'table'\
      \ then\n\t\tcopy = {}\n\t\tfor orig_key, orig_value in pairs(orig) do\n\t\t\tcopy[orig_key] = orig_value\n\t\tend\n\telse -- number, string, boolean, etc\n\t\tcopy = orig\n\tend\n\treturn copy\nend\n\n--[[\n\tRecursive deep copy function\n\tEquivalent\
      \ to mw.clone?\n]]\nlocal function deepcopy(orig, includeMetatable, already_seen)\n\t-- Stores copies of tables indexed by the original table.\n\talready_seen = already_seen or {}\n\t\n\tlocal copy = already_seen[orig]\n\tif copy ~= nil then\n\t\treturn\
      \ copy\n\tend\n\t\n\tif type(orig) == 'table' then\n\t\tcopy = {}\n\t\tfor orig_key, orig_value in pairs(orig) do\n\t\t\tcopy[deepcopy(orig_key, includeMetatable, already_seen)] = deepcopy(orig_value, includeMetatable, already_seen)\n\t\tend\n\t\talready_seen[orig]\
      \ = copy\n\t\t\n\t\tif includeMetatable then\n\t\t\tlocal mt = getmetatable(orig)\n\t\t\tif mt ~= nil then\n\t\t\t\tlocal mt_copy = deepcopy(mt, includeMetatable, already_seen)\n\t\t\t\tsetmetatable(copy, mt_copy)\n\t\t\tend\n\t\tend\n\telse -- number,\
      \ string, boolean, etc\n\t\tcopy = orig\n\tend\n\treturn copy\nend\n\nfunction export.deepcopy(orig, noMetatable, already_seen)\n\tcheckType(\"deepcopy\", 3, already_seen, \"table\", true)\n\t\n\treturn deepcopy(orig, not noMetatable, already_seen)\nend\n\
      \n--[[\n------------------------------------------------------------------------------------\n-- removeDuplicates\n--\n-- This removes duplicate values from an array. Non-positive-integer keys are\n-- ignored. The earliest value is kept, and all subsequent\
      \ duplicate values are\n-- removed, but otherwise the array order is unchanged.\n------------------------------------------------------------------------------------\n--]]\nfunction export.removeDuplicates(t)\n\tcheckType('removeDuplicates', 1, t, 'table')\n\
      \tlocal isNan = export.isNan\n\tlocal ret, exists = {}, {}\n\tlocal index = 1\n\tfor _, v in ipairs(t) do\n\t\tif isNan(v) then\n\t\t\t-- NaNs can't be table keys, and they are also unique, so we don't need to check existence.\n\t\t\tret[index] = v\n\t\
      \t\tindex = index + 1\n\t\telse\n\t\t\tif not exists[v] then\n\t\t\t\tret[index] = v\n\t\t\t\tindex = index + 1\n\t\t\t\texists[v] = true\n\t\t\tend\n\t\tend\n\tend\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- numKeys\n--\n-- This takes a table and returns an array containing the numbers of any numerical\n-- keys that have non-nil values, sorted in numerical order.\n------------------------------------------------------------------------------------\n--]]\n\
      function export.numKeys(t, checked)\n\tif not checked then\n\t\tcheckType('numKeys', 1, t, 'table')\n\tend\n\tlocal isPositiveInteger = export.isPositiveInteger\n\tlocal nums = {}\n\tlocal index = 1\n\tfor k, _ in pairs(t) do\n\t\tif isPositiveInteger(k)\
      \ then\n\t\t\tnums[index] = k\n\t\t\tindex = index + 1\n\t\tend\n\tend\n\ttable.sort(nums)\n\treturn nums\nend\n\nfunction export.maxIndex(t)\n\tcheckType('maxIndex', 1, t, 'table')\n\tlocal positiveIntegerKeys = export.numKeys(t)\n\tif positiveIntegerKeys[1]\
      \ then\n\t\treturn math.max(unpack(positiveIntegerKeys))\n\telse\n\t\treturn 0 -- ???\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- affixNums\n--\n-- This takes a table and returns an array\
      \ containing the numbers of keys with the\n-- specified prefix and suffix.\n-- affixNums({a1 = 'foo', a3 = 'bar', a6 = 'baz'}, \"a\")\n--\t\t↓\n-- {1, 3, 6}.\n------------------------------------------------------------------------------------\n--]]\n\
      function export.affixNums(t, prefix, suffix)\n\tlocal check = _check('affixNums')\n\tcheck(1, t, 'table')\n\tcheck(2, prefix, 'string', true)\n\tcheck(3, suffix, 'string', true)\n\t\n\tlocal function cleanPattern(s)\n\t\t-- Cleans a pattern so that the\
      \ magic characters ()%.[]*+-?^$ are interpreted literally.\n\t\ts = s:gsub('([%(%)%%%.%[%]%*%+%-%?%^%$])', '%%%1')\n\t\treturn s\n\tend\n\t\n\tprefix = prefix or ''\n\tsuffix = suffix or ''\n\tprefix = cleanPattern(prefix)\n\tsuffix = cleanPattern(suffix)\n\
      \tlocal pattern = '^' .. prefix .. '([1-9]%d*)' .. suffix .. '$'\n\t\n\tlocal nums = {}\n\tlocal index = 1\n\tfor k, _ in pairs(t) do\n\t\tif type(k) == 'string' then\n\t\t\tlocal num = mw.ustring.match(k, pattern)\n\t\t\tif num then\n\t\t\t\tnums[index]\
      \ = tonumber(num)\n\t\t\t\tindex = index + 1\n\t\t\tend\n\t\tend\n\tend\n\ttable.sort(nums)\n\treturn nums\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- numData\n--\n-- Given a table with keys like\
      \ (\"foo1\", \"bar1\", \"foo2\", \"baz2\"), returns a table\n-- of subtables in the format\n-- { [1] = {foo = 'text', bar = 'text'}, [2] = {foo = 'text', baz = 'text'} }\n-- Keys that don't end with an integer are stored in a subtable named \"other\".\n\
      -- The compress option compresses the table so that it can be iterated over with\n-- ipairs.\n------------------------------------------------------------------------------------\n--]]\nfunction export.numData(t, compress)\n\tlocal check = _check('numData')\n\
      \tcheck(1, t, 'table')\n\tcheck(2, compress, 'boolean', true)\n\t\n\tlocal ret = {}\n\tfor k, v in pairs(t) do\n\t\tlocal prefix, num = tostring(k):match('^([^0-9]*)([1-9][0-9]*)$')\n\t\tif num then\n\t\t\tnum = tonumber(num)\n\t\t\tlocal subtable = ret[num]\
      \ or {}\n\t\t\tif prefix == '' then\n\t\t\t\t-- Positional parameters match the blank string; put them at the start of the subtable instead.\n\t\t\t\tprefix = 1\n\t\t\tend\n\t\t\tsubtable[prefix] = v\n\t\t\tret[num] = subtable\n\t\telse\n\t\t\tlocal subtable\
      \ = ret.other or {}\n\t\t\tsubtable[k] = v\n\t\t\tret.other = subtable\n\t\tend\n\tend\n\tif compress then\n\t\tlocal other = ret.other\n\t\tret = export.compressSparseArray(ret)\n\t\tret.other = other\n\tend\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- compressSparseArray\n--\n-- This takes an array with one or more nil values, and removes the nil values\n-- while preserving the order, so that the array can be safely traversed with\n-- ipairs.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.compressSparseArray(t)\n\tcheckType('compressSparseArray', 1, t, 'table')\n\tlocal ret = {}\n\tlocal index = 1\n\tlocal nums = export.numKeys(t)\n\tfor _, num in ipairs(nums) do\n\t\tret[index] = t[num]\n\t\tindex = index + 1\n\t\
      end\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- sparseIpairs\n--\n-- This is an iterator for sparse arrays. It can be used like ipairs, but can\n-- handle nil values.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.sparseIpairs(t)\n\tcheckType('sparseIpairs', 1, t, 'table')\n\tlocal nums = export.numKeys(t)\n\tlocal i = 0\n\treturn function()\n\t\ti = i + 1\n\t\tlocal key = nums[i]\n\t\tif key then\n\t\t\treturn key, t[key]\n\t\telse\n\t\t\t\
      return nil, nil\n\t\tend\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- size\n--\n-- This returns the size of a key/value pair table. It will also work on arrays,\n-- but for arrays it is more\
      \ efficient to use the # operator.\n------------------------------------------------------------------------------------\n--]]\nfunction export.size(t)\n\tcheckType('size', 1, t, 'table')\n\tlocal i = 0\n\tfor _ in pairs(t) do\n\t\ti = i + 1\n\tend\n\t\
      return i\nend\n\n--[[\n-- This returns the length of a table, or the first integer key n counting from\n-- 1 such that t[n + 1] is nil. It is similar to the operator #, but may return\n-- a different value when there are gaps in the array portion of the\
      \ table.\n-- Intended to be used on data loaded with mw.loadData. For other tables, use #.\n--]]\nfunction export.length(t)\n\tlocal i = 0\n\trepeat\n\t\ti = i + 1\n\tuntil t[i] == nil\n\treturn i - 1\nend\n\n--[[\nTakes table and a value to be found.\n\
      If the value is in the array portion of the table, return true.\nIf the value is in the hashmap or not in the table, return false.\n]]\nfunction export.contains(list, x)\n\tfor _, v in ipairs(list) do\n\t\tif v == x then return true end\n\tend\n\treturn\
      \ false\nend\n\n--[[\nRecursively compare two values that may be tables, including tables with\nnested tables as values. Return true if both values are structurally equal.\nNote that this handles arbitary levels of nesting. If all tables are known\nto\
      \ be lists (with only integral keys), use export.deepEqualsList, which will\nbe more efficient.\n\nNOTE: This is *NOT* smart enough to properly handle cycles; in such a case, it\nwill get into an infinite loop.\n]]\nfunction export.deepEquals(x, y)\n \
      \   if type(x) == \"table\" and type(y) == \"table\" then\n    \t-- Two tables are the same if they have the same number of elements\n    \t-- and all keys that are present in one of the tables compare equal\n    \t-- to the corresponding keys in the other\
      \ table, using structural\n    \t-- comparison.\n    \tlocal sizex = 0\n        for key, value in pairs(x) do\n            if not export.deepEquals(value, y[key]) then\n                return false\n            end\n            sizex = sizex + 1\n    \
      \    end\n        local sizey = export.size(y)\n        if sizex ~= sizey then\n            return false\n        end \n        return true\n    end\n    return x == y\nend\n\n--[[\nRecursively compare two values that may be lists (i.e. tables with integral\n\
      keys), including lists with nested lists as values. Return true if both values\nare structurally equal. Note that this handles arbitary levels of nesting.\nResults are undefined if tables with non-integral keys are present anywhere in\neither structure;\
      \ if that may be the case, use export.deepEquals, which will\nhandle such tables correctly but be less efficient on lists than\nexport.deepEqualsList.\n\nNOTE: This is *NOT* smart enough to properly handle cycles; in such a case, it\nwill get into an infinite\
      \ loop.\n]]\nfunction export.deepEqualsList(x, y)\n    if type(x) == \"table\" and type(y) == \"table\" then\n        if #x ~= #y then\n            return false\n        end \n        for key, value in ipairs(x) do\n            if not export.deepEqualsList(value,\
      \ y[key]) then\n                return false\n            end\n        end\n        return true\n    end\n    return x == y\nend\n\n--[[\n\tFinds key for specified value in a given table.\n\tRoughly equivalent to reversing the key-value pairs in the table\
      \ –\n\t\treversed_table = { [value1] = key1, [value2] = key2, ... }\n\t– and then returning reversed_table[valueToFind].\n\t\n\tThe value can only be a string or a number\n\t(not nil, a boolean, a table, or a function).\n\t\n\tOnly reliable if there is\
      \ just one key with the specified value.\n\tOtherwise, the function returns the first key found,\n\tand the output is unpredictable.\n]]\nfunction export.keyFor(t, valueToFind)\n\tlocal check = _check('keyFor')\n\tcheck(1, t, 'table')\n\tcheck(2, valueToFind,\
      \ { 'string', 'number' })\n\t\n\tfor key, value in pairs(t) do\n\t\tif value == valueToFind then\n\t\t\treturn key\n\t\tend\n\tend\n\t\n\treturn nil\nend\n\n--[[\n\tThe default sorting function used in export.keysToList if no keySort\n\tis defined.\n]]\n\
      local function defaultKeySort(key1, key2)\n\t-- \"number\" &lt; \"string\", so numbers will be sorted before strings.\n\tlocal type1, type2 = type(key1), type(key2)\n\tif type1 ~= type2 then\n\t\treturn type1 &lt; type2\n\telse\n\t\treturn key1 &lt; key2\n\
      \tend\nend\n\n--[[\n\tReturns a list of the keys in a table, sorted using either the default\n\ttable.sort function or a custom keySort function.\n\tIf there are only numerical keys, numKeys is probably more efficient.\n]]\nfunction export.keysToList(t,\
      \ keySort, checked)\n\tif not checked then\n\t\tlocal check = _check('keysToList')\n\t\tcheck(1, t, 'table')\n\t\tcheck(2, keySort, 'function', true)\n\tend\n\t\n\tlocal list = {}\n\tlocal index = 1\n\tfor key, _ in pairs(t) do\n\t\tlist[index] = key\n\
      \t\tindex = index + 1\n\tend\n\t\n\t-- Place numbers before strings, otherwise sort using &lt;.\n\tif not keySort then\n\t\tkeySort = defaultKeySort\n\tend\n\t\n\ttable.sort(list, keySort)\n\t\n\treturn list\nend\n\n--[[\n\tIterates through a table, with\
      \ the keys sorted using the keysToList function.\n\tIf there are only numerical keys, sparseIpairs is probably more efficient.\n]]\nfunction export.sortedPairs(t, keySort)\n\tlocal check = _check('keysToList')\n\tcheck(1, t, 'table')\n\tcheck(2, keySort,\
      \ 'function', true)\n\t\n\tlocal list = export.keysToList(t, keySort, true)\n\t\n\tlocal i = 0\n\treturn function()\n\t\ti = i + 1\n\t\tlocal key = list[i]\n\t\tif key ~= nil then\n\t\t\treturn key, t[key]\n\t\telse\n\t\t\treturn nil, nil\n\t\tend\n\t\
      end\nend\n\nfunction export.reverseIpairs(list)\n\tcheckType('reverse_ipairs', 1, list, 'table')\n\t\n\tlocal i = #list + 1\n\treturn function()\n\t\ti = i - 1\n\t\tif list[i] ~= nil then\n\t\t\treturn i, list[i]\n\t\telse\n\t\t\treturn nil, nil\n\t\t\
      end\n\tend\nend\n\n--[=[\n\tJoins an array with serial comma and serial conjunction, normally \"and\".\n\tAn improvement on mw.text.listToText, which doesn't properly handle serial\n\tcommas.\n\t\n\tOptions:\n\t\t- conj\n\t\t\tConjunction to use; defaults\
      \ to \"and\".\n\t\t- italicizeConj\n\t\t\tItalicize conjunction: for [[Module:Template:also]]\n\t\t- dontTag\n\t\t\tDon't tag the serial comma and serial \"and\". For error messages, in\n\t\t\twhich HTML cannot be used.\n]=]\nfunction export.serialCommaJoin(seq,\
      \ options)\n\tlocal check = _check(\"serialCommaJoin\", \"table\")\n\tcheck(1, seq)\n\tcheck(2, options, true)\n\t\n\tlocal length = #seq\n\t\n\tif not options then\n\t\toptions = {}\n\tend\n\t\n\tlocal conj\n\tif length &gt; 1 then\n\t\tconj = options.conj\
      \ or \"and\"\n\t\tif options.italicizeConj then\n\t\t\tconj = \"''\" .. conj .. \"''\"\n\t\tend\n\tend\n\t\n\tif length == 0 then\n\t\treturn \"\"\n\telseif length == 1 then\n\t\treturn seq[1] -- nothing to join\n\telseif length == 2 then\n\t\treturn seq[1]\
      \ .. \" \" .. conj .. \" \" .. seq[2]\n\telse\n\t\tlocal comma = options.dontTag and \",\" or '&lt;span class=\"serial-comma\"&gt;,&lt;/span&gt;'\n\t\tconj = options.dontTag and ' ' .. conj .. \" \" or '&lt;span class=\"serial-and\"&gt; ' .. conj .. '&lt;/span&gt;\
      \ '\n\t\treturn table.concat(seq, \", \", 1, length - 1) ..\n\t\t\t\tcomma .. conj .. seq[length]\n\tend\nend\n\n--[[\n\tConcatenates all values in the table that are indexed by a number, in order.\n\tsparseConcat{ a, nil, c, d }  =&gt;  \"acd\"\n\tsparseConcat{\
      \ nil, b, c, d }  =&gt;  \"bcd\"\n]]\nfunction export.sparseConcat(t, sep, i, j)\n\tlocal list = {}\n\t\n\tlocal list_i = 0\n\tfor _, v in export.sparseIpairs(t) do\n\t\tlist_i = list_i + 1\n\t\tlist[list_i] = v\n\tend\n\t\n\treturn table.concat(list,\
      \ sep, i, j)\nend\n\n--[[\n\tValues of numberic keys in array portion of table are reversed:\n\t{ \"a\", \"b\", \"c\" } -&gt; { \"c\", \"b\", \"a\" }\n--]]\nfunction export.reverse(t)\n\tcheckType(\"reverse\", 1, t, \"table\")\n\t\n\tlocal new_t = {}\n\
      \tlocal new_t_i = 1\n\tfor i = #t, 1, -1 do\n\t\tnew_t[new_t_i] = t[i]\n\t\tnew_t_i = new_t_i + 1\n\tend\n\treturn new_t\nend\n\nfunction export.reverseConcat(t, sep, i, j)\n\treturn table.concat(export.reverse(t), sep, i, j)\nend\n\n-- { \"a\", \"b\"\
      , \"c\" } -&gt; { a = 1, b = 2, c = 3 }\nfunction export.invert(array)\n\tcheckType(\"invert\", 1, array, \"table\")\n\t\n\tlocal map = {}\n\tfor i, v in ipairs(array) do\n\t\tmap[v] = i\n\tend\n\t\n\treturn map\nend\n\n--[[\n\t{ \"a\", \"b\", \"c\" }\
      \ -&gt; { [\"a\"] = true, [\"b\"] = true, [\"c\"] = true }\n--]]\nfunction export.listToSet(t)\n\tcheckType(\"listToSet\", 1, t, \"table\")\n\t\n\tlocal set = {}\n\tfor _, item in ipairs(t) do\n\t\tset[item] = true\n\tend\n\treturn set\nend\n\n--[[\n\t\
      Returns true if all keys in the table are consecutive integers starting at 1.\n--]]\nfunction export.isArray(t)\n\tcheckType(\"isArray\", 1, t, \"table\")\n\t\n\tlocal i = 0\n\tfor _ in pairs(t) do\n\t\ti = i + 1\n\t\tif t[i] == nil then\n\t\t\treturn\
      \ false\n\t\tend\n\tend\n\treturn true\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:54.534Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=62151 t=1555362354424193
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:54 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 495703439, 561237231, 692629816
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6149597\" pageid=\"6149597\" ns=\"828\" title=\"Module:script utilities/data\"><revisions><rev user=\"DTLHS\" timestamp=\"2018-03-12T01:54:08Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local data = {}\n\ndata.translit = {\n\t[\"term\"] = {\n--[=[\tcan't be done until Kana transliterations are correctly parsed by [[Module:links]]\n\t\t[\"tag\"\
      ] = \"i\",\n\t\t]=]\n\t\t[\"classes\"] = \"mention-tr\",\n\t},\n\t[\"usex\"] = {\n\t\t[\"tag\"] = \"i\",\n\t\t[\"classes\"] = \"e-transliteration\",\n\t},\n\t[\"head\"] = {\n\t\t[\"classes\"] = \"headword-tr\",\n\t\t[\"dir\"] = \"ltr\",\n\t},\n\t[\"default\"\
      ] = {},\n}\n\ndata.transcription = {\n\t[\"head\"] = {\n\t\t[\"tag\"] = \"span\",\n\t\t[\"classes\"] = \"headword-ts\",\n\t\t[\"dir\"] = \"ltr\",\n\t},\n\t[\"default\"] = {},\n}\n\nfor key, value in pairs(data.translit) do\n\tif not value.tag then\n\t\t\
      value.tag = \"span\"\n\tend\nend\n\ndata.faces = {\n\t[\"term\"] = {\n\t\ttag = \"i\",\n\t\tclass = \"mention\",\n\t},\n\t[\"head\"] = {\n\t\ttag = \"strong\",\n\t\tclass = \"headword\",\n\t},\n\t[\"hypothetical\"] = {\n\t\tprefix = '&lt;span class=\"\
      hypothetical-star\"&gt;*&lt;/span&gt;',\n\t\ttag = \"i\",\n\t\tclass = \"hypothetical\",\n\t},\n\t[\"bold\"] = {\n\t\ttag = \"b\",\n\t},\n\t[\"translation\"] = {\n\t\ttag = \"span\",\n\t},\n\t[\"nil\"] = {\n\t\ttag = \"span\",\n\t},\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:55.082Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52326 t=1555362354982192
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:55 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 494288199, 642688963, 696038476
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6279245\" pageid=\"6279245\" ns=\"828\" title=\"Module:utilities/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-01-04T05:57:22Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 51192985 by [[Special:Contributions/2601:CD:C101:322D:F03C:8688:907:84|2601:CD:C101:322D:F03C:8688:907:84]] ([[User talk:2601:CD:C101:322D:F03C:8688:907:84|talk]]): ???\"\
      \ xml:space=\"preserve\">local data = {}\n\ndata.notneeded = {\n\t[\"und\"] = true,\n\t[\"cmn\"] = true,\n\t[\"ja\"] = true,\n\t[\"zu\"] = true,\n\t[\"nan\"] = true,\n\t[\"yue\"] = true,\n\t[\"ko\"] = true,\n}\n\ndata.neededhassubpage = {\n\t[\"ga\"] =\
      \ true,\n\t[\"gv\"] = true,\n\t[\"nv\"] = true,\n\t[\"roa-jer\"] = true,\n\t[\"fr\"] = true,\n\t[\"rm\"] = true,\n\t[\"prg\"] = true,\n\t[\"gd\"] = true,\n\t[\"twf\"] = true,\n\t[\"en\"] = true,\n\t[\"ro\"] = true,\n\t[\"egl\"] = true,\n\t[\"roa-tar\"\
      ] = true,\n\t[\"gl\"] = true,\n\t[\"ast\"] = true,\n\t[\"br\"] = true,\n}\n\n--[[\n\tScript that should be applied to links in categories.\n]]\ndata.catfix_scripts = {\n\t[\"ab\"] = \"Cyrl\",\n\t[\"ae\"] = \"Avst\",\n\t[\"ar\"] = \"Arab\",\n\t[\"ary\"\
      ] = \"Arab\",\n\t[\"be\"] = \"Cyrl\",\n\t[\"cu\"] = \"Cyrs\",\n\t[\"el\"] = \"Grek\",\n\t[\"grc\"] = \"polytonic\",\n\t[\"he\"] = \"Hebr\",\n\t[\"ka\"] = \"Geor\",\n\t[\"orv\"] = \"Cyrs\",\n\t[\"ru\"] = \"Cyrl\",\n\t[\"sa\"] = \"Deva\",\n\t[\"syl\"] =\
      \ \"Sylo\",\n\t[\"xfa\"] = \"Ital\",\n\t[\"zle-ono\"] = \"Cyrs\",\n\t[\"hi\"] = \"Deva\",\n\t[\"mr\"] = \"Deva\",\n--[[\n\t[\"\"] = \"\",\n]]\n}\n\n-- Namespaces in which format_categories will add categories.\ndata.allowedNamespaces = {\n\t[\"\"] = true,\n\
      \t[\"Appendix\"] = true,\n\t[\"Reconstruction\"] = true,\n\t[\"Citations\"] = true,\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:55.442Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aaccent&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=57457 t=1555362355338501
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:55 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1282.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 671951172, 552557215, 699404577
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="55584" pageid="55584" ns="10" title="Template:accent"><revisions><rev user="Erutuon" timestamp="2017-04-25T20:23:34Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="renamed module" xml:space="preserve">{{#invoke:accent qualifier|show}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:05:55.623Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aaccent+qualifier&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=39844 t=1555362355532148
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:55 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1225.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 913560020, 563092395, 688868288
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4830341\" pageid=\"4830341\" ns=\"828\" title=\"Module:accent qualifier\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-07-09T19:52:04Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"convert to using aliases table\" xml:space=\"preserve\">local export = {}\nlocal m_qualifier = require(\"Module:qualifier\")\n\nfunction export.format_qualifiers(qualifiers)\n\tlocal m_data\
      \ = mw.loadData(\"Module:accent qualifier/data\")\n\t\n\tif type(qualifiers) ~= \"table\" then\n\t\tqualifiers = { qualifiers }\n\tend\n\t\n\tlocal accents = {}\n\tlocal categories = {}\n\t\n\tfor _, accent in ipairs(qualifiers) do\n\t\tlocal data\n\t\t\
      \n\t\t-- Replace an alias with the label that has a data table.\n\t\tif m_data.aliases[accent] then\n\t\t\taccent = m_data.aliases[accent]\n\t\tend\n\t\t\n\t\t-- Retrieve the label's data table.\n\t\tif m_data.labels[accent] then\n\t\t\tdata = m_data.labels[accent]\n\
      \t\tend\n\t\t\n\t\t-- Use the link and displayed text in the data table, if they exist.\n\t\tif data then\n\t\t\tif data.link then\n\t\t\t\ttable.insert(accents, \"[[w:\" .. data.link .. \"|\" ..\n\t\t\t\t\t(data.display or data.link) .. \"]]\")\n\t\t\t\
      elseif data.display then\n\t\t\t\ttable.insert(accents, data.display)\n\t\t\tend\n\t\t\t\n\t\t\t--[[\n\t\t\tif data[accent] then\n\t\t\t\tif data[accent].type == \"sound change\" then\n\t\t\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms\
      \ with pronunciations exhibiting \" .. accent)\n\t\t\t\tend\n\t\t\tend\n\t\t\t]]\n\t\telse\n\t\t\ttable.insert(accents, accent)\n\t\tend\n\tend\n\t\n\treturn m_qualifier.format_qualifier(accents)\nend\n\n-- Called by {{accent}} or {{a}}.\nfunction export.show(frame)\n\
      \tlocal args = frame.getParent and frame:getParent().args or frame\n\t\n\tif (not args[1] or args[1] == \"\") and mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\treturn m_qualifier.format_qualifier{ '{{{1}}}' }\n\tend\n\t\n\tlocal params =\
      \ {\n\t\t[1] = {required = true, list = true}\n\t}\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\treturn export.format_qualifiers(args[1])\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:55.792Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aqualifier&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49784 t=1555362355692856
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:55 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 666946921, 226849623, 698195264
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6098679\" pageid=\"6098679\" ns=\"828\" title=\"Module:qualifier\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-05-08T23:55:07Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"allow string to be supplied to format_qualifier\" xml:space=\"preserve\">local export = {}\n\nfunction export.format_qualifier(list)\n\tif type(list) ~= \"table\" then\n\t\tlist = { list\
      \ }\n\tend\n\t\n\tif #list == 0 then\n\t\treturn ''\n\tend\n\n\treturn '&lt;span class=\"ib-brac qualifier-brac\"&gt;(&lt;/span&gt;' ..\n\t       '&lt;span class=\"ib-content qualifier-content\"&gt;' ..\n\t       table.concat(list, '&lt;span class=\"ib-comma\
      \ qualifier-comma\"&gt;,&lt;/span&gt; ') ..\n\t\t   '&lt;/span&gt;&lt;span class=\"ib-brac qualifier-brac\"&gt;)&lt;/span&gt;'\nend\n\nfunction export.qualifier_t(frame)\n\tlocal params = {\n\t   [1] = {list = true, required = true},\n\t}\n\t\n\tlocal\
      \ args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal subvarieties = mw.loadData(\"Module:qualifier/subvarieties\")\n\t\n\tfor i, label in ipairs(args[1]) do\n\t\tif subvarieties[label] then\n\t\t\trequire(\"Module:debug\"\
      ).track(\"qualifier/subvarieties\")\n\t\t\t--[[\n\t\t\t\tcurrently not working:\n\t\t\tlocal lang = subvarieties[label].languages[1]\n\t\t\trequire(\"Module:debug\").track(\"qualifier/subvarieties/\" .. lang)\n\t\t\t]]\n\t\tend\n\tend\n\n\treturn export.format_qualifier(args[1])\n\
      end\n\nfunction export.sense_t(frame)\n\tlocal params = {\n\t   [1] = {list = true, required = true},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn export.format_qualifier(args[1])\n\t\t.. '&lt;span\
      \ class=\"ib-colon sense-qualifier-colon\"&gt;:&lt;/span&gt;'\nend\n\nfunction export.gloss_t(frame)\n\tlocal params = {\n\t   [1] = {required = true},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\t\
      return '&lt;span class=\"gloss-brac\"&gt;(&lt;/span&gt;&lt;span class=\"gloss-content\"&gt;' ..\n\t\t\targs[1] .. '&lt;/span&gt;&lt;span class=\"gloss-brac\"&gt;)&lt;/span&gt;'\nend\n\nfunction export.non_gloss_definition_t(frame)\n\tlocal params = {\n\
      \t   [1] = {required = true},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn '&lt;span class=\"use-with-mention\"&gt;' .. require(\"Module:links\").english_links(args[1]) .. '&lt;/span&gt;'\nend\n\
      \t\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:55.982Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aaccent+qualifier%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44496 t=1555362355864770
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:55 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1223.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 192176682, 737185973, 696659158
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4830339\" pageid=\"4830339\" ns=\"828\" title=\"Module:accent qualifier/data\"><revisions><rev user=\"Knyȝt\" timestamp=\"2019-04-06T17:47:51Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\n\nlocal CE = '&lt;small class=\"ce-date2\"&gt;CE&lt;/small&gt;'\nlocal BCE = '&lt;small class=\"ce-date2\"&gt;BCE&lt;/small&gt;'\n\
      \n-- A\n\nlabels[\"AAVE\"] = {\n\tlink = \"African American Vernacular English\",\n\tdisplay = \"AAVE\"\n}\n\nlabels[\"æ-tensing\"] = {\n\tlink = \"æ-tensing\",\n\ttype = \"sound change\"\n}\naliases[\"ae-tensing\"] = \"æ-tensing\"\n\nlabels[\"Anglicised\"\
      ] = {\n\tlink = \"Anglicisation#Anglicisation of non-English-language vocabulary and names\",\n\tdisplay = \"Anglicised\"\n}\naliases[\"Anglicized\"] = \"Anglicised\"\n\nlabels[\"Aran\"] = {\n\tlink = \"Aran Islands\",\n\tdisplay = \"Aran\"\n}\n\nlabels[\"\
      ar-Cairene\"] = {\n\tlink = \"Egyptian Arabic\",\n\tdisplay = \"Cairene\"\n}\naliases[\"Cairene\"] = \"ar-Cairene\"\n\nlabels[\"Arvanite\"] = {\n\tlink = \"Arvanitika\",\n\tdisplay = \"Arvanite\"\n}\n\nlabels[\"Ashkenazi Hebrew\"] = {\n\tlink = \"Ashkenazi\
      \ Hebrew\",\n\tdisplay = \"Ashkenazi Hebrew\"\n}\naliases[\"Ashkenazi\"] = \"Ashkenazi Hebrew\"\n\nlabels[\"Australia\"] = {\n\tlink = \"Australian English phonology\",\n\tdisplay = \"General Australian\"\n}\naliases[\"AU\"] = \"Australia\"\naliases[\"\
      AuE\"] = \"Australia\"\naliases[\"Aus\"] = \"Australia\"\naliases[\"AusE\"] = \"Australia\"\naliases[\"GenAus\"] = \"Australia\"\naliases[\"General Australian\"] = \"Australia\"\n\n-- B\n\nlabels[\"BE-nl\"] = {\n\tlink = \"Belgian Dutch\",\n\tdisplay =\
      \ \"Belgium\"\n}\naliases[\"BE\"] = \"BE-nl\"\n\nlabels[\"Beijing\"] = {\n\tlink = \"Beijing dialect\",\n\tdisplay = \"Beijing\"\n}\n\nlabels[\"Bosnia\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\",\n\
      \tdisplay = \"Bosnia\"\n}\naliases[\"Bosnian\"] = \"Bosnia\"\n\nlabels[\"Boston\"] = {\n\tlink = \"Boston English\",\n\tdisplay = \"Boston\"\n}\naliases[\"Bos\"] = \"Boston\"\n\nlabels[\"Brazil\"] = {\n\tlink = \"Brazilian Portuguese\",\n\tdisplay = \"\
      Brazil\"\n}\naliases[\"BP\"] = \"Brazil\"\naliases[\"BR\"] = \"Brazil\"\naliases[\"Brazilian Portuguese\"] = \"Brazil\"\n\nlabels[\"Burträsk\"] = {\n\tlink = \"Burträsk\",\n}\n\nlabels[\"Bygdeå\"] = {\n\tlink = \"Bygdeå\",\n}\n\n-- C\n\nlabels[\"Canada\"\
      ] = {\n\tlink = \"Canadian English\",\n\tdisplay = \"Canada\"\n}\naliases[\"CA\"] = \"Canada\"\naliases[\"Canadian\"] = \"Canada\"\n\nlabels[\"Canadian Shift\"] = {\n\tlink = \"Canadian Shift\",\n\tdisplay = \"Canadian Vowel Shift\",\n\ttype = \"sound\
      \ change\"\n}\naliases[\"Canadian shift\"] = \"Canadian Shift\"\naliases[\"Canadian Vowel Shift\"] = \"Canadian Shift\"\naliases[\"Canadian vowel shift\"] = \"Canadian Shift\"\n\nlabels[\"Carioca\"] = {\n\tlink = \"Carioca#Carioca Dialect\",\n\tdisplay\
      \ = \"Carioca\"\n}\naliases[\"RJ\"] = \"Carioca\"\n\nlabels[\"Castilian\"] = {\n\tlink = \"Castilian Spanish\",\n\tdisplay = \"Castilian\"\n}\naliases[\"Spain\"] = \"Castilian\"\n\nlabels[\"Central Catalan\"] = {\n\tlink = \"Central Catalan\",\n\tdisplay\
      \ = \"Central\",\n}\n\nlabels[\"central Germany\"] = {\n\tdisplay = \"central Germany\"\n}\naliases[\"central German\"] = \"central Germany\"\naliases[\"Central German\"] = \"central Germany\"\naliases[\"Central Germany\"] = \"central Germany\"\n\nlabels[\"\
      central Italy\"] = {\n\tlink = \"Central Italian\",\n\tdisplay = \"central Italy\"\n}\naliases[\"central Italian\"] = \"central Italy\"\naliases[\"Central Italian\"] = \"central Italy\"\naliases[\"Central Italy\"] = \"central Italy\"\n\nlabels[\"Central\
      \ Scotland\"] = {\n\tlink = \"Central Scots\",\n\tdisplay = \"Central Scotland\"\n}\n\nlabels[\"ceceo\"] = {\n\tlink = \"ceceo\",\n\tdisplay = \"''ceceo'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Classical\"] = {\n\tlink = \"Classical Latin\"\
      ,\n\tdisplay = \"Classical\"\n}\n\nlabels[\"Classical Sanskrit\"] = {\n\tlink = \"Sanskrit#Classical Sanskrit\",\n\tdisplay = \"Classical\"\n}\n\nlabels[\"Cois Fharraige\"] = {\n   link = \"Gaeltacht Cois Fharraige\",\n   display = \"Cois Fharraige\"\n\
      }\naliases[\"CF\"] = \"Cois Fharraige\"\n\nlabels[\"Connacht\"] = {\n\tlink = \"Connacht Irish\",\n\tdisplay = \"Connacht\"\n}\n\nlabels[\"Cork\"] = {\n\tlink = \"Gaeltacht#Cork Gaeltacht\",\n\tdisplay = \"Cork\"\n}\n\nlabels[\"cot-caught\"] = {\n\tlink\
      \ = \"Cot–caught merger\",\n\tdisplay = \"''cot''–''caught'' merger\",\n\ttype = \"sound change\"\n}\naliases[\"caught-cot\"] = \"cot-caught\"\n\nlabels[\"Croatia\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\"\
      ,\n\tdisplay = \"Croatia\"\n}\naliases[\"Croatian\"] = \"Croatia\"\n\nlabels[\"cure-force\"] = {\n\tlink = \"w:Cure–force merger\",\n\tdisplay = \"''cure''–''force'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"cy-N\"] = {\n\tlink = \"Welsh language#Dialects\"\
      ,\n\tdisplay = \"North Wales\"\n}\naliases[\"cy-g\"] = \"cy-N\"\n\nlabels[\"cy-S\"] = {\n\tlink = \"Welsh language#Dialects\",\n\tdisplay = \"South Wales\"\n}\naliases[\"cy-h\"] = \"cy-S\"\n\n-- D\n\nlabels[\"Dari\"] = {\n\tlink = \"Dari Persian\",\n\t\
      display = \"Dari\"\n}\n\nlabels[\"Delhi\"] = {\n    display = \"Delhi Hindi\"\n}\n\nlabels[\"distinción\"] = {\n\tlink = \"distinción\",\n\tdisplay = \"''z''-''s'' distinction\",\n\ttype = \"sound change\"\n}\naliases[\"distincion\"] = \"distinción\"\n\
      \n\n-- E\n\nlabels[\"Ecclesiastical\"] = {\n\tlink = \"Ecclesiastical Latin\",\n\tdisplay = \"Ecclesiastical\"\n}\n\nlabels[\"Egyptological\"] = {\n\tlink = \"Egyptian language#Egyptological pronunciation\",\n\tdisplay = \"modern Egyptological\"\n}\naliases[\"\
      modern Egyptological\"] = \"Egyptological\"\n\nlabels[\"Estuary English\"] = {\n\tlink = \"Estuary English\"\n}\n\n-- F\n\nlabels[\"father-bother\"] = {\n\tlink = \"Father–bother merger\",\n\tdisplay = \"''father''-''bother'' merger\",\n\ttype = \"sound\
      \ change\"\n}\n\nlabels[\"FS\"] = {\n\tlink = \"Standard French\",\n\tdisplay = \"FS\"\n}\n\nlabels[\"FV\"] = {\n\tlink = \"French Flemish\",\n\tdisplay = \"French Flanders\"\n}\n\n-- G\n\nlabels[\"GenAm\"] = {\n\tlink = \"General American\"\n}\naliases[\"\
      GA\"] = \"GenAm\"\naliases[\"General American\"] = \"GenAm\"\n\nlabels[\"Geordie\"] = {\n\tlink = \"Geordie\"\n}\n\nlabels[\"Gheg\"] = {\n\tlink = \"Gheg Albanian\",\n\tdisplay = \"Gheg\"\n}\n\nlabels[\"Givi\"] = {\n\tlink = \"Giv, South Khorasan\",\n\t\
      display = \"Givi\"\n}\n\nlabels[\"Glenties\"] = {\n\tlink = \"Glenties\",\n\tdisplay = \"The Glenties\"\n}\n\nlabels[\"grc-byz1\"] = {\n\tlink = \"Medieval Greek\",\n\tdisplay = '10&lt;sup&gt;th&lt;/sup&gt; ' .. CE .. ' Byzantine'\n}\n\nlabels[\"grc-byz2\"\
      ] = {\n\tlink = \"Medieval Greek\",\n\tdisplay = '15&lt;sup&gt;th&lt;/sup&gt; ' .. CE .. ' Constantinopolitan'\n}\n\nlabels[\"grc-cla\"] = {\n\tlink = \"Ancient Greek phonology\",\n\tdisplay = '5&lt;sup&gt;th&lt;/sup&gt; ' .. BCE .. ' Attic'\n}\n\nlabels[\"\
      grc-koi1\"] = {\n\tlink = \"Koine Greek phonology\",\n\tdisplay = '1&lt;sup&gt;st&lt;/sup&gt; ' .. CE .. ' Egyptian'\n}\n\nlabels[\"grc-koi2\"] = {\n\tlink = \"Koine Greek phonology\",\n\tdisplay = '4&lt;sup&gt;th&lt;/sup&gt; ' .. CE .. ' Koine'\n}\n\n\
      -- H\n\nlabels[\"hbo\"] = {\n\tlink = \"Biblical Hebrew#Phonology\",\n\tdisplay = \"Biblical Hebrew\"\n}\naliases[\"Biblical Hebrew\"] = \"hbo\"\n\nlabels[\"Hong Kong\"] = {\n\tlink = \"Hong Kong English\",\n\tdisplay = \"Hong Kong\"\n}\naliases[\"HK\"\
      ] = \"Hong Kong\"\n\nlabels[\"horse-hoarse\"] = {\n    link = \"horse–hoarse merger\",\n    display = \"without the ''horse''–''hoarse'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Hössjö\"] = {\n\tlink = \"sv:Hössjö\",\n}\n\nlabels[\"hy-E\"] =\
      \ {\n\tlink = \"Eastern Armenian language\",\n\tdisplay = \"Eastern Armenian\"\n}\n\nlabels[\"hy-IR\"] = {\n\tlink = \"Armenian Iranians#Culture and language\",\n\tdisplay = \"Eastern Armenian - Iran\"\n}\n\nlabels[\"hy-W\"] = {\n\tlink = \"Western Armenian\
      \ language\",\n\tdisplay = \"Western Armenian\"\n}\n\nlabels[\"hy-Y\"] = {\n\tlink = \"Yerevan\",\n\tdisplay = \"Eastern Armenian - Yerevan\"\n}\n\n-- I\n\nlabels[\"IL\"] = {\n\tlink = \"Modern Hebrew phonology\",\n\tdisplay = \"Modern Israeli Hebrew\"\
      \n}\naliases[\"Israeli Hebrew\"] = \"IL\"\naliases[\"Modern Hebrew\"] = \"IL\"\naliases[\"Modern Israeli\"] = \"IL\"\naliases[\"Modern Israeli Hebrew\"] = \"IL\"\naliases[\"Modern/Israeli Hebrew\"] = \"IL\"\n\nlabels[\"InE\"] = {\n\tlink = \"Indian English\"\
      ,\n\tdisplay = \"Indian English\"\n}\n\nlabels[\"IR\"] = {\n\tlink = \"Western Persian\",\n\tdisplay = \"Iranian Persian\"\n}\n\nlabels[\"Ireland\"] = {\n\tlink = \"Hiberno-English\",\n\tdisplay = \"Ireland\"\n}\naliases[\"HE\"] = \"Ireland\"\naliases[\"\
      IE\"] = \"Ireland\"\n\nlabels[\"Italian Hebrew\"] = {\n\tlink = \"Italian Hebrew\",\n\tdisplay = \"Italian Hebrew\"\n}\n\n-- J\n\nlabels[\"Johor-Selangor\"] = {\n\tlink = \"Malayan languages\",\n\tdisplay = \"Johor-Selangor\"\n}\n\n-- K\n\nlabels[\"Kabul,\
      \ Peshawar\"] = {\n\tlink = \"Pashto dialects\",\n\tdisplay = \"Kabul, Peshawar\"\n}\n\nlabels[\"Kalix\"] = {\n\tlink = \"Kalix\",\n}\n\nlabels[\"Kandahar\"] = {\n\tlink = \"Kandahari Pashto\",\n\tdisplay = \"Kandahar\"\n}\naliases[\"ps-Kandahar\"] = \"\
      Kandahar\"\n\nlabels[\"Kerry\"] = {\n\tlink = \"Gaeltacht#Kerry Gaeltacht\",\n\tdisplay = \"Kerry\"\n}\n\nlabels[\"xme-ham\"] = {\n\tdisplay = \"Hamadani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-mah\"] = {\n\tdisplay = \"Mahallati\",\n\t\
      link = \"Kermanic languages\",\n}\n\nlabels[\"xme-von\"] = {\n\tdisplay = \"Vonishuni\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-del\"] = {\n\tdisplay = \"Delijani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-kas\"] = {\n\tdisplay\
      \ = \"Kashani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-kes\"] = {\n\tdisplay = \"Kese'i\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-mey\"] = {\n\tdisplay = \"Meyme'i\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-abz\"\
      ] = {\n\tdisplay = \"Abuzeydabadi\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-aby\"] = {\n\tdisplay = \"Abyanehi\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-far\"] = {\n\tdisplay = \"Farizandi\",\n\tlink = \"Kermanic languages\"\
      ,\n}\n\nlabels[\"xme-jow\"] = {\n\tdisplay = \"Jowshaqani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-qoh\"] = {\n\tdisplay = \"Qohrudi\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-yar\"] = {\n\tdisplay = \"Yarandi\",\n\tlink = \"\
      Kermanic languages\",\n}\n\nlabels[\"xme-tar\"] = {\n\tdisplay = \"Tari\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-sed\"] = {\n\tdisplay = \"Sedehi\",\n\tlink = \"Kermanic languages\",\n}\n\n\nlabels[\"xme-ard\"] = {\n\tdisplay = \"Ardestani\"\
      ,\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-zef\"] = {\n\tdisplay = \"Zefre'i\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-isf\"] = {\n\tdisplay = \"Isfahani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-kaf\"] = {\n\tdisplay\
      \ = \"Kafroni\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-var\"] = {\n\tdisplay = \"Varzenei\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-nay\"] = {\n\tdisplay = \"Nayini\",\n\tlink = \"Nayini language\",\n}\n\nlabels[\"xme-vaf\"\
      ] = {\n\tdisplay = \"Vafsi\",\n\tlink = \"Vafsi dialect\",\n}\n\nlabels[\"xme-ast\"] = {\n\tdisplay = \"Ashtiani language\",\n\tlink = \"nyq\",\n}\n\nlabels[\"xme-xun\"] = {\n\tdisplay = \"Khunsari\",\n\tlink = \"Khunsari language\",\n}\n\nlabels[\"xme-nat\"\
      ] = {\n\tdisplay = \"Natanzi\",\n\tlink = \"Natanzi language\",\n}\n\nlabels[\"xme-soi\"] = {\n\tdisplay = \"Soi\",\n\tlink = \"Soi language\",\n}\n\nlabels[\"xme-gaz\"] = {\n\tdisplay = \"Gazi\",\n\tlink = \"Gazi language\",\n}\n\nlabels[\"xme-ana\"]\
      \ = {\n\tdisplay = \"Anaraki\",\n\tlink = \"Nayini language\",\n}\n\nlabels[\"xme-ker\"] = {\n\tdisplay = \"Kermani\",\n\tlink = \"Zoroastrian Dari language\",\n}\n\nlabels[\"xme-yaz\"] = {\n\tdisplay = \"Yazdi\",\n\tlink = \"Zoroastrian Dari language\"\
      ,\n}\n\n-- L\n\nlabels[\"LAm\"] = {\n\tlink = \"Spanish language in the Americas\",\n\tdisplay = \"Latin American\"\n}\n\nlabels[\"Late Egyptian\"] = {\n\tlink = \"Late Egyptian language\",\n\tdisplay = \"reconstructed Late Egyptian\"\n}\n\nlabels[\"Latinate\"\
      ] = {\n\tlink = \"Latin#Phonology\",\n\tdisplay = \"Latinate\"\n}\n\nlabels[\"lleísmo\"] = {\n\tlink = \"Yeísmo\",\n\tdisplay = \"''ll''-''y'' distinction\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Lövånger\"] = {\n\tlink = \"Lövånger\",\n}\n\nlabels[\"\
      Luleå\"] = {\n\tlink = \"Luleå\",\n}\n\n-- M\n\nlabels[\"Mary-marry-merry\"] = {\n\tlink = \"Mary–marry–merry merger\",\n\tdisplay = \"''Mary''–''marry''–''merry'' merger\",\n\ttype = \"sound change\"\n}\naliases[\"Mmmm\"] = \"Mary-marry-merry\"\n\nlabels[\"\
      Mayo\"] = {\n\tlink = \"Gaeltacht Iorrais agus Acaill\",\n\tdisplay = \"Mayo\"\n}\n\nlabels[\"Medio-Late Egyptian\"] = {\n\tlink = \"Late Egyptian language\",\n\tdisplay = \"reconstructed Medio-Late Egyptian\"\n}\n\nlabels[\"Middle Egyptian\"] = {\n\t\
      link = \"Egyptian language#Middle Egyptian\",\n\tdisplay = \"reconstructed Middle Egyptian\"\n}\n\nlabels[\"Midwestern US\"] = {\n\tlink = \"Midwestern United States#Linguistic characteristics\",\n\tdisplay = \"Midwestern US\"\n}\naliases[\"Midwest US\"\
      ] = \"Midwestern US\"\naliases[\"Midwest US English\"] = \"Midwestern US\"\naliases[\"Midwestern US English\"] = \"Midwestern US\"\n\nlabels[\"Mizrahi Hebrew\"] = {\n\tlink = \"Mizrahi Hebrew\",\n\tdisplay = \"Mizrahi Hebrew\"\n}\naliases[\"Mizrahi\"]\
      \ = \"Mizrahi Hebrew\"\naliases[\"Mizrakhi\"] = \"Mizrahi Hebrew\"\naliases[\"Mizrachi\"] = \"Mizrahi Hebrew\"\naliases[\"Mizrakhi Hebrew\"] = \"Mizrahi Hebrew\"\naliases[\"Mizrachi Hebrew\"] = \"Mizrahi Hebrew\"\n\nlabels[\"MLE\"] = {\n\tlink = \"Multicultural\
      \ London English\",\n\tdisplay = \"MLE\"\n}\n\nlabels[\"Montenegro\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\",\n\tdisplay = \"Montenegro\"\n}\naliases[\"Montenegrin\"] = \"Montenegro\"\n\nlabels[\"\
      Munster\"] = {\n\tlink = \"Munster Irish\",\n\tdisplay = \"Munster\"\n}\n\n-- N\n\nlabels[\"Netherlands\"] = {\n\tlink = \"Dutch phonology\",\n\tdisplay = \"Netherlands\"\n}\naliases[\"NL\"] = \"Netherlands\"\n\nlabels[\"New Latin\"] = {\n\tlink = \"New\
      \ Latin\"\n}\n\nlabels[\"New York\"] = {\n\tlink = \"New York dialect#Linguistic features\",\n\tdisplay = \"NYC\"\n}\naliases[\"NY\"] = \"New York\"\naliases[\"NYC\"] = \"New York\"\n\nlabels[\"New Zealand\"] = {\n\tlink = \"New Zealand English phonology\"\
      ,\n\tdisplay = \"General New Zealand\"\n}\naliases[\"NZ\"] = \"New Zealand\"\naliases[\"GNZ\"] = \"New Zealand\"\naliases[\"General New Zealand\"] = \"New Zealand\"\n\nlabels[\"non-Mary-marry-merry\"] = {\n\tlink = \"Mary–marry–merry merger\",\n\tdisplay\
      \ = \"''Mary''–''marry''–''merry'' distinction\",\n\ttype = \"sound change\"\n}\naliases[\"nMmmm\"] = \"non-Mary-marry-merry\"\n\nlabels[\"non-rhotic\"] = {\n\tlink = \"Rhoticity in English\",\n\tdisplay = \"non-rhotic\"\n}\naliases[\"nonrhotic\"] = \"\
      non-rhotic\"\n\nlabels[\"non-weak vowel\"] = {\n\tlink = \"Weak vowel merger\",\n\tdisplay = \"weak vowel distinction\",\n\ttype = \"sound change\"\n}\n\nlabels[\"northern and central Germany\"] = {\n\tdisplay = \"northern Germany, central Germany\"\n\
      }\naliases[\"north and central German\"] = \"northern and central Germany\"\naliases[\"North and Central German\"] = \"northern and central Germany\"\naliases[\"north and central Germany\"] = \"northern and central Germany\"\naliases[\"North and Central\
      \ Germany\"] = \"northern and central Germany\"\naliases[\"northern and central German\"] = \"northern and central Germany\"\naliases[\"Northern and Central German\"] = \"northern and central Germany\"\naliases[\"Northern and Central Germany\"] = \"northern\
      \ and central Germany\"\n\nlabels[\"Northern England\"] = {\n\tlink = \"English language in Northern England\",\n\tdisplay = \"Northern England\"\n}\naliases[\"North England\"] = \"Northern England\"\n\nlabels[\"northern Germany\"] = {\n\tdisplay = \"\
      northern Germany\"\n}\naliases[\"north German\"] = \"northern Germany\"\naliases[\"North German\"] = \"northern Germany\"\naliases[\"north Germany\"] = \"northern Germany\"\naliases[\"North Germany\"] = \"northern Germany\"\naliases[\"northern German\"\
      ] = \"northern Germany\"\naliases[\"Northern German\"] = \"northern Germany\"\naliases[\"Northern Germany\"] = \"northern Germany\"\n\nlabels[\"Northern Scotland\"] = {\n\tlink = \"Northern Scots\",\n\tdisplay = \"Northern Scotland\"\n}\n\n-- O\n\nlabels[\"\
      Old Egyptian\"] = {\n\tlink = \"Egyptian language#Old Egyptian\",\n\tdisplay = \"reconstructed Old Egyptian\"\n}\n\nlabels[\"Osaka\"] = {\n\tlink = \"Kansai dialect\",\n\tdisplay = \"Osaka\"\n}\n\n-- P\n\nlabels[\"Palestinian Hebrew\"] = {\n\tlink = \"\
      Palestinian vocalization\",\n\tdisplay = \"Palestinian Hebrew\"\n}\n\nlabels[\"pin-pen\"] = {\n\tlink = \"pin–pen merger\",\n\tdisplay = \"''pin''–''pen'' merger\",\n\ttype = \"sound change\"\n}\naliases[\"pen-pin\"] = \"pin-pen\"\n\nlabels[\"Philippine\"\
      ] = {\n\tlink = \"Philippine English\",\n\tdisplay = \"Philippine\"\n}\naliases[\"Philippines\"] = \"Philippine\"\n\nlabels[\"Portugal\"] = {\n\tlink = \"European Portuguese\",\n\tdisplay = \"Portugal\"\n}\naliases[\"EP\"] = \"Portugal\"\naliases[\"PT\"\
      ] = \"Portugal\"\n\nlabels[\"ps-Kabul\"] = {\n\tlink = \"Pashto dialects\",\n\tdisplay = \"Kabuli\"\n}\n\n-- Q\n\nlabels[\"Quanzhou\"] = {\n\tlink = \"Quanzhou\"\n}\n\nlabels[\"Quetta\"] = {\n\tlink = \"Pashto dialects\",\n\tdisplay = \"Quetta\"\n}\n\n\
      -- R\n\nlabels[\"r-dissimilation\"] = {\n\tlink = \"Dissimilation\",\n\tdisplay = \"''r''-dissimilation\",\n\ttype = \"sound change\"\n}\n\nlabels[\"rhotic\"] = {\n\tlink = \"Rhotic and non-rhotic accents\",\n\tdisplay = \"rhotic\",\n\ttype = \"sound change\"\
      \n}\n\nlabels[\"Riau-Lingga\"] = {\n\tlink = \"Riau-Lingga Sultanate\",\n\tdisplay = \"Riau-Lingga\"\n}\n\nlabels[\"Rioplatense\"] = {\n\tlink = \"Rioplatense Spanish\",\n\tdisplay = \"Rioplatense\"\n}\n\nlabels[\"RP\"] = {\n\tlink = \"Received Pronunciation\"\
      \n}\naliases[\"Received Pronunciation\"] = \"RP\"\n\n-- S\n\nlabels[\"São Paulo\"] = {\n\tlink = \"Brazilian Portuguese\",\n\tdisplay = \"São Paulo\"\n}\n\nlabels[\"Scotland\"] = {\n\tlink = \"Scottish English\",\n\tdisplay = \"Scotland\"\n}\n\nlabels[\"\
      Sephardi Hebrew\"] = {\n\tlink = \"Sephardi Hebrew\",\n\tdisplay = \"Sephardi Hebrew\"\n}\naliases[\"Sephardi\"] = \"Sephardi Hebrew\"\n\nlabels[\"Serbia\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\"\
      ,\n\tdisplay = \"Serbia\"\n}\naliases[\"Serbian\"] = \"Serbia\"\n\nlabels[\"seseo\"] = {\n\tlink = \"seseo\",\n\tdisplay = \"''seseo'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Sistani\"] = {\n\tlink = \"Sistani dialect\",\n\tdisplay = \"Sistani\"\
      \n}\n\nlabels[\"Skellefteå\"] = {\n\tlink = \"Skellefteå\"\n}\n\nlabels[\"South Africa\"] = {\n\tlink = \"South African English phonology\",\n\tdisplay = \"General South African\"\n}\naliases[\"SAE\"] = \"South Africa\"\naliases[\"GSAE\"] = \"South Africa\"\
      \naliases[\"GenSAE\"] = \"South Africa\"\naliases[\"General South African\"] = \"South Africa\"\n\nlabels[\"Southern American English\"] = {\n\tlink = \"Southern American English\"\n}\naliases[\"Southern US\"] = \"Southern American English\"\naliases[\"\
      Southern US English\"] = \"Southern American English\"\naliases[\"Southern U.S. English\"] = \"Southern American English\"\n\nlabels[\"South Brazil\"] = {\n\tlink = \"Brazilian Portuguese\",\n\tdisplay = \"South Brazil\"\n}\n\nlabels[\"southern Germany\"\
      ] = {\n\tdisplay = \"southern Germany\"\n}\naliases[\"south German\"] = \"southern Germany\"\naliases[\"South German\"] = \"southern Germany\"\naliases[\"south Germany\"] = \"southern Germany\"\naliases[\"South Germany\"] = \"southern Germany\"\naliases[\"\
      southern German\"] = \"southern Germany\"\naliases[\"Southern German\"] = \"southern Germany\"\naliases[\"Southern Germany\"] = \"southern Germany\"\n\nlabels[\"Southern Scotland\"] = {\n\tlink = \"Southern Scots\",\n\tdisplay = \"Southern Scotland\"\n\
      }\naliases[\"Southern Scots\"] = \"Southern Scotland\"\n\nlabels[\"St. Louis\"] = {\n\tlink = \"North American regional phonology#St. Louis and vicinity\",\n\tdisplay = \"St. Louis (Missouri)\"\n}\naliases[\"STL\"] = \"St. Louis\"\n\nlabels[\"standard\"\
      ] = {\n\tdisplay = \"standard\"\n}\naliases[\"Standard\"] = \"standard\"\n\nlabels[\"Standard Zhuang\"] = {\n\tlink = \"Standard Zhuang\",\n\tdisplay = \"Standard Zhuang\"\n}\n\nlabels[\"Swedish\"] = {\n\tlink = \"Swedish pronunciation\",\n\tdisplay =\
      \ \"Swedish\"\n}\n\nlabels[\"Syrian Hebrew\"] = {\n\tlink = \"Syrian Jews#Pronunciation of Hebrew\",\n\tdisplay = \"Syrian Hebrew\"\n}\n\n-- T\n\nlabels[\"t-glottalization\"] = {\n   link = \"T-glottalization\",\n   display = \"''t''-glottalization\",\n\
      \ttype = \"sound change\"\n}\naliases[\"t-glottaling\"] = \"t-glottalization\"\n\nlabels[\"Tajik\"] = {\n\tlink = \"Tajik language\",\n\tdisplay = \"Tajik\"\n}\naliases[\"Tajiki\"] = \"Tajik\"\n\nlabels[\"Tehrani\"] = {\n\tlink = \"Tehrani accent\",\n\t\
      display = \"Tehrani\"\n}\n\nlabels[\"Tiberian Hebrew\"] = {\n\tlink = \"Tiberian Hebrew\",\n\tdisplay = \"Tiberian Hebrew\"\n}\naliases[\"Tiberian\"] = \"Tiberian Hebrew\"\n\nlabels[\"Tosk\"] = {\n\tlink = \"Tosk Albanian\",\n\tdisplay = \"Tosk\"\n}\n\n\
      -- U\n\nlabels[\"UK\"] = {\n\tlink = \"British English\",\n\tdisplay = \"UK\"\n}\naliases[\"British\"] = \"UK\"\naliases[\"U.K.\"] = \"UK\"\n\nlabels[\"Ulaanbaatar\"] = {\n\tlink = \"Ulaanbaatar\"\n}\naliases[\"UlaanBaatar\"] = \"Ulaanbaatar\"\n\nlabels[\"\
      Ulster\"] = {\n\tlink = \"Ulster Irish\",\n\tdisplay = \"Ulster\"\n}\naliases[\"Donegal\"] = \"Ulster\"\n\nlabels[\"Umeå\"] = {\n\tlink = \"Umeå\",\n}\n\nlabels[\"US\"] = {\n\tlink = \"American English\",\n\tdisplay = \"US\"\n}\naliases[\"U.S.\"] = \"\
      US\"\n\n-- V\n\nlabels[\"Valencia\"] = {\n\tlink = \"Valencian\"\n}\naliases[\"Valencian\"] = \"Valencia\"\n\nlabels[\"Vedic Sanskrit\"] = {\n\tlink = \"Vedic Sanskrit\",\n\tdisplay = \"Vedic\"\n}\naliases[\"Vedic\"] = \"Vedic Sanskrit\"\naliases[\"Rigvedic\"\
      ] = \"Vedic Sanskrit\"\n\nlabels[\"Vulgar\"] = {\n\tlink = \"Vulgar Latin\",\n\tdisplay = \"Vulgar\"\n}\n\n-- W\n\nlabels[\"Wales\"] = {\n\tlink = \"Welsh English\",\n\tdisplay = \"Wales\"\n}\naliases[\"Welsh\"] = \"Wales\"\n\nlabels[\"Wardak\"] = {\n\t\
      link = \"Pashto dialects\",\n\tdisplay = \"Wardak\"\n}\n\nlabels[\"Waterford\"] = {\n\tlink = \"Gaeltacht na nDéise\",\n\tdisplay = \"Waterford\"\n}\n\nlabels[\"Wazirwola\"] = {\n\tlink = \"Wazirwola dialect\",\n\tdisplay = \"Wazirwola\"\n}\n\nlabels[\"\
      weak vowel\"] = {\n\tlink = \"Weak vowel merger\",\n\tdisplay = \"weak vowel merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"wine/whine\"] = {\n    link = \"wine–whine merger\",\n    display = \"without the ''wine''–''whine'' merger\",\n    type =\
      \ \"sound change\"\n}\n\n-- X\n\nlabels[\"Xiamen\"] = {\n\tlink = \"Xiamen\"\n}\n\n-- Y\n\nlabels[\"yeísmo\"] = {\n\tlink = \"Yeísmo\",\n\tdisplay = \"''ll''-''y'' neutralization\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Yemenite Hebrew\"] = {\n\tlink\
      \ = \"Yemenite Hebrew\",\n\tdisplay = \"Yemenite Hebrew\"\n}\n\nlabels[\"YIVO\"] = {\n\tlink = \"YIVO\"\n}\n\nlabels[\"yod-coalescence\"] = {\n\tlink = \"yod-coalescence\",\n\tdisplay = \"yod-coalescence\",\n\ttype = \"sound change\"\n}\n\n-- Z\n\nlabels[\"\
      Zhangzhou\"] = {\n\tlink = \"Zhangzhou\"\n}\n\nreturn { labels = labels, aliases = aliases }</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:56.926Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Fdata%2Fsymbols&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47863 t=1555362356802238
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:56 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 206804854, 500930334, 699731423
    body: !!binary |-
      
- recorded: 2019-04-15T21:05:57.102Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Ftracking&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=35426 t=1555362357018098
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:57 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 564198240, 489145991, 701368052
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6315460\" pageid=\"6315460\" ns=\"828\" title=\"Module:IPA/tracking\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-11-21T19:51:11Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"fixing module error in [[pianoforte]]\" xml:space=\"preserve\">local export = {}\n\n--[[\n\tsymb is what is tracked. It can be a literal symbol or a Lua pattern.\n\tIf it is a table, tracking\
      \ is added for any of the symbols in the list.\n\t\n\tcat is the subtemplate that is added to the default path \"IPA/\" + language code + \"/\".\n]]\n\nlocal U = mw.ustring.char\n\nlocal syllabic = U(0x329)\n\nexport.tracking = {\n\ten = {\n\t\t{\n\t\t\
      \tsymb = \"iə\",\n\t\t\tcat = \"ambig\",\n\t\t},\n\t\t{\n\t\t\tsymb = { \"ɪi\", \"ʊu\", \"ɪj\", \"ʊw\" },\n\t\t\tcat = \"eeoo\",\n\t\t},\n\t\t{\n\t\t\tsymb = { \"r\" },\n\t\t\tcat = \"plain r\",\n\t\t},\n\t},\n\tcs = {\n\t\t{\n\t\t\tsymb = \"[mnrl]\" ..\
      \ syllabic,\n\t\t\tcat = \"syllabic-consonant\",\n\t\t},\n\t},\n\tps = {\n\t\t{\n\t\t\tsymb = \"ɤ\",\n\t\t\tcat = \"Pashto\",\n\t\t},\n\t},\n\tfa = {\n\t\t{\n\t\t\tsymb = \"ʔ\",\n\t\t\tcat = \"glottal-stop\",\n\t\t},\n\t},\n\t{\n\t\t{\n\t\t\tsymb = \"\"\
      ,\n\t\t\tcat = \"\",\n\t\t},\n\t},\n}\n\nfunction export.run_tracking(IPA, lang)\n\tif not IPA or IPA == \"\" then\n\t\treturn nil\n\tend\n\t\n\tlang = lang:getCode()\n\t\n\tif not export.tracking[lang] or type(export.tracking[lang]) ~= \"table\" then\n\
      \t\treturn nil\n\tend\n\t\n\tfor i, arguments in ipairs(export.tracking[lang]) do\n\t\tif type(arguments) == \"table\" then\n\t\t\tlocal required = { \"symb\", \"cat\" }\n\t\t\t\n\t\t\thasArgs = true\n\t\t\t\n\t\t\tfor i, arg in pairs(required) do\n\t\t\
      \t\tif not arguments[arg] or arguments[arg] == \"\" then\n\t\t\t\t\thasArgs = false\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif hasArgs == true then\n\t\t\t\tlocal symbols = arguments.symb\n\t\t\t\tlocal category = arguments.cat\n\t\t\t\t\n\t\t\t\tif type(symbols)\
      \ == \"string\" then\n\t\t\t\t\tsymbols = { symbols }\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tfor _, symbol in pairs(symbols) do\n\t\t\t\t\tif type(symbol) ~= \"string\" then\n\t\t\t\t\t\treturn nil\n\t\t\t\t\tend\n\t\t\t\t\tif mw.ustring.find(IPA, symbol) then\n\
      \t\t\t\t\t\trequire(\"Module:debug\").track(\"IPA/\" .. lang .. \"/\" .. category)\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:57.275Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Asyllables&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=36707 t=1555362357181774
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:57 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1232.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 421435530, 646878254, 690765770
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5882110\" pageid=\"5882110\" ns=\"828\" title=\"Module:syllables\"><revisions><rev user=\"Hazarasp\" timestamp=\"2018-08-21T12:20:37Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal vowels = mw.loadData(\"Module:IPA/data/symbols\").vowels .. \"ᵻ\" .. \"ᵿ\"\n\nlocal U = mw.ustring.char\n\n--[[\nAdd diphthongs to\
      \ the list if they do not contain semivowel symbols: /j w ɰ ɥ/.\nDo not include non-syllabic diacritics: /au/, not /au̯/.\nThe module automatically does not count vowels with non-syllabic diacritics.\n]]--\nlocal diphthongs = {\n\t[\"de\"] = {\n\t\t\"\
      a[ɪʊ]\",\n\t\t\"ɔ[ʏɪ]\",\n\t\t},\n\t[\"ca\"] = {\t-- Catalan has diphthongs, but they are generally transcribed using\n\t\t\t\t-- /w/ and /j/, so do not need to be listed (see [[w:Catalan language#Diphthongs and triphthongs]].\n\t\t},\n\t[\"cs\"] = { --\
      \ [[w:Czech phonology#Diphthongs]]\n\t\t\"[aeo]u\",\n\t\t},\n\t[\"en\"] = { -- from [[Appendix:English pronunciation]] mostly, but /ʌɪ/ is from the OED\n\t\t\"[aɑeɛoɔʌ][ɪi]\",\n\t\t\"[ɑɒæo]e\",\n\t\t\"[əɐ]ʉ\",\n\t\t\"[aɒəoɔʌ]ʊ\",\n\t\t\"æo\",\n\t\t\"[ɛ\
      eɪiɔʊʉ]ə\",\t-- /iə/ is a diphthong in NZE, but a disyllabic sequence in GA.\n\t\t\t\t\t\t-- /ɪə/ is both a disyllabic sequence and a diphthong in old-fashioned RP.\n\t\t\"[aʌ][ʊɪ]ə\",\t-- May be a disyllabic sequence in some or all dialects?\n\t\t},\n\
      \t[\"fi\"] = {\t\t\t-- [[w:Finnish phonology#Diphthongs]]\n\t\t\"[ɑeouyæø]i\",\n\t\t\"[ɑoei]u\",\n\t\t\"[eiæø]y\",\n\t\t\"uo\",\n\t\t\"ie\",\n\t\t\"yø\",\n\t\t},\n\t[\"fr\"] = {\t\t\t-- French has diphthongs, but they are transcribed\n\t\t},\t\t\t\t--\
      \ with semivowel symbols: [[w:French phonology#Glides and diphthongs]].\n\t[\"grc\"] = {\n\t\t\"[aeyo]i\",\n\t\t\"[ae]u\",\n\t\t\"[ɛɔa]ː[iu]\",\n\t\t},\n\t[\"is\"] = {\t\t\t-- [[w:Icelandic phonology#Vowels]]\n\t\t\"[aeø][iɪy]\",\t-- Wikipedia is oddly\
      \ specific about the second element: ei and ai, but øɪ.\n\t\t\"[ao]u\",\n\t\t},\n\t[\"it\"] = {\n\t\t\"[aeɛoɔu]i\",\n\t\t\"[aeɛioɔ]u\",\n\t\t},\n\t[\"la\"] = {\n\t\t\"[eaou]i\",\n\t\t\"[eao]u\",\n\t\t\"[ao]e\",\n\t\t},\n\t[\"lb\"] = {\n\t\t\"[iu]ə\",\n\
      \t\t\"[ɜoæɑ]ɪ\",\n\t\t\"[əæɑ]ʊ\",\n\t},\n\t[\"sl\"] = {\t\t\t-- No diphthongs, properly speaking; sequences of a vowel, /j/ and /w/ though\n\t},\n\t[\"sk\"] = {\t\t\t-- Slovak has rising diphthongs, /i̯e, i̯a, i̯u, u̯o/, which are probably always spelled\
      \ with the nonsyllabic diacritic, so do not need to be listed.\n\t},\n\t[\"ru\"] = {\t\t\t-- No diphthongs, properly speaking; sequences of a vowel and /j/ though.\n\t},\n\t[\"sq\"] = {\t\t\t-- [[w:Albanian language#Vowels]] doesn't mention anything about\
      \ diphthongs.\n\t},\n\t[\"ug\"] = {\t\t\t-- No diphthongs.\n\t},\n}\n\n--[[ No use for this at the moment, though it is an interesting catalogue.\n\tIt might be usable for phonetic transcriptions.\n\tDiacritics added to vowels:\n\tinverted breve above,\
      \ inverted breve below,\n\tup tack, down tack,\n\tleft tack, right tack,\n\tdiaeresis (above), diaeresis below,\n\tright half ring, left half ring,\n\tplus sign below, minus sign below,\n\tcombining x above, rhotic hook,\n\ttilde (above), tilde below\n\
      \tligature tie (combining double breve), ligature tie below\n\t]]\nlocal diacritics = U(0x311)..U(0x32F)\n\t..U(0x31D)..U(0x31E)\n\t..U(0x318)..U(0x319)\n\t..U(0x308)..U(0x324)\n\t..U(0x339)..U(0x31C)\n\t..U(0x31F)..U(0x320)\n\t..U(0x33D)..U(0x2DE)\n\t\
      ..U(0x303)..U(0x330)\n\t..U(0x361)..U(0x35C)\n\n--[[\ncombining acute and grave tone marks, circumflex\n]]--\nlocal tone = \"[\" .. U(0x341) .. U(0x340) ..U (0x302) .. \"]\"\nlocal nonsyllabicDiacritics = U(0x311) .. U(0x32F)\nlocal syllabicDiacritics\
      \ = U(0x0329) .. U(0x030D)\nlocal ties = U(0x361) .. U(0x35C)\n\n-- long, half-long, extra short\nlocal lengthDiacritics = U(0x2D0) .. U(0x2D1) .. U(0x306)\nlocal vowel = \"[\" .. vowels .. \"]\" .. tone .. \"?\"\nlocal tie = \"[\" .. ties .. \"]\"\nlocal\
      \ nonsyllabicDiacritic = \"[\" .. nonsyllabicDiacritics .. \"]\"\nlocal syllabicDiacritic = \"[\" .. syllabicDiacritics .. \"]\"\n\nlocal UTF8Char = \"[\\1-\\127\\194-\\244][\\128-\\191]*\"\n\n\nfunction export.getVowels(remainder, lang)\n\tif string.find(remainder,\
      \ \"^[%\\[/]?%-\") or string.find(remainder, \"%-[%\\[/]?$\") then\n\t\treturn nil\n\tend\t-- If a hyphen is at the beginning or end of the transcription, do not count syllables.\n\t\n\tlocal count = 0\n\tlocal diphs = diphthongs[lang:getCode()] or {}\n\
      \t\n\tremainder = mw.ustring.toNFD(remainder)\n\tremainder = string.gsub(remainder, \"%((.*)%)\", \"%1\") -- Remove parentheses.\n\n\twhile remainder ~= \"\" do\n\t\t-- Ignore nonsyllabic vowels\n\t\tremainder = mw.ustring.gsub(remainder, \"^\" .. vowel\
      \ .. nonsyllabicDiacritic, \"\")\n\t\t\n\t\tlocal m =\n\t\t\tmw.ustring.match(remainder, \"^.\" .. syllabicDiacritic) or  -- Syllabic consonant\n\t\t\tmw.ustring.match(remainder, \"^\" .. vowel .. tie .. vowel)  -- Tie bar\n\t\t\n\t\t-- Starts with a recognised\
      \ diphthong?\n\t\tfor _, diph in ipairs(diphs) do\n\t\t\tif m then\n\t\t\t\tbreak\n\t\t\tend\n\t\t\t\n\t\t\tm = m or mw.ustring.match(remainder, \"^\" .. diph)\n\t\tend\n\t\t\n\t\t-- If we haven't found anything yet, just match on a single vowel\n\t\t\
      m = m or mw.ustring.match(remainder, \"^\" .. vowel)\n\t\t\n\t\tif m then\n\t\t\t-- Found a vowel, add it\n\t\t\tcount = count + 1\n\t\t\tremainder = string.sub(remainder, #m + 1)\n\t\telse\n\t\t\t-- Found a non-vowel, skip it\n\t\t\tremainder = string.gsub(remainder,\
      \ \"^\" .. UTF8Char, \"\")\n\t\tend\n\tend\n\t\n\tif count ~= 0 then return count end\n\t\n\treturn nil\n\t\nend\n\n\nfunction export.countVowels2Test(frame)\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {default = \"\"},\n\t}\n\t\n\tlocal\
      \ args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal count = export.getVowels(args[2], lang)\n\t\n\treturn\
      \ 'The text \"' .. args[2] .. '\" contains ' .. count .. ' vowels.'\nend\n\n\nlocal function countVowels(text)\n\ttext = mw.ustring.toNFD(text) or error(\"Invalid UTF-8\")\n\t\n\tlocal _, count = mw.ustring.gsub(text, vowel, \"\")\n\tlocal _, sequenceCount\
      \ = mw.ustring.gsub(text, vowel..\"+\", \"\")\n\tlocal _, nonsyllabicCount = mw.ustring.gsub(text, vowel .. nonsyllabicDiacritic, \"\")\n\tlocal _, tieCount = mw.ustring.gsub(text, vowel .. tie .. vowel, \"\")\n\t\n\tlocal diphthongCount = count - (nonsyllabicCount\
      \ + tieCount)\n\t\n\treturn count, sequenceCount, diphthongCount\nend\n\n\nlocal function countDiphthongs(text, lang)\n\ttext = mw.ustring.toNFD(text) or error(\"Invalid UTF-8\")\n\t\n\tlocal diphthongs = diphthongs[lang:getCode()] or {}\n\t\n\tlocal _,\
      \ count\n\tlocal total = 0\n\t\n\tif diphthongs then\n\t\tfor i, diphthong in pairs(diphthongs) do\n\t\t\t_, count = mw.ustring.gsub(text, diphthong, \"\")\n\t\t\ttotal = total + count\n\t\tend\n\tend\n\t\n\treturn total\nend\n\n-- Used by [[Module:IPA]]\n\
      function export.hasDiphthongs(lang)\n\tif  (diphthongs[lang:getCode()]) then\n\t\treturn true\n\tend\n\treturn false\nend\n\nfunction export.countVowels(frame)\n\tlocal params = {\n\t\t[1] = {default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame.args, params)\n\t\n\tlocal count, sequenceCount, diphthongCount = countVowels(args[1])\n\t\n\tlocal outputs = {}\n\ttable.insert(outputs, (count or 'an unknown number of') .. ' vowels')\n\ttable.insert(outputs, (sequenceCount or 'an unknown\
      \ number of') .. ' vowel sequences')\n\ttable.insert(outputs, (diphthongCount or 'an unknown number of') .. ' vowels or vowels and diphthongs')\n\t\n\treturn 'The text \"' .. args[1] .. '\" contains ' .. mw.text.listToText(outputs) .. \".\"\nend\n\n\n\
      function export.countVowelsDiphthongs(frame)\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\tlocal lang = require(\"Module:languages\"\
      ).getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal vowels = countVowels(args[2])\n\tlocal count = vowels - countDiphthongs(args[2], lang) or 0\n\t\n\tlocal out = 'The text \"' .. args[2] .. '\" contains ' .. (count or 'an\
      \ unknown number of')\n\t\n\tif count == 1 then\n\t\tout = out .. ' vowel or diphthong.'\n\telse\n\t\tout = out .. ' vowels or diphthongs.'\n\tend\n\t\n\treturn out\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:57.678Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Awikipedia&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42536 t=1555362357582614
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:57 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 737604746, 734926595, 690052119
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5872615\" pageid=\"5872615\" ns=\"828\" title=\"Module:wikipedia\"><revisions><rev user=\"Julia\" timestamp=\"2018-12-08T23:00:16Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"make slim version same length as other interwiki links\" xml:space=\"preserve\">local export = {}\n\n\nlocal function process_links(linkdata, prefix, name, wmlang, sc)\n\tprefix = prefix .. \":\" .. (wmlang:getCode()\
      \ == \"en\" and \"\" or wmlang:getCode() .. \":\")\n\t\n\tlocal links = {}\n\tlocal iplinks = {}\n\t\n\tlocal m_links = require(\"Module:links\")\n\tlocal lang = wmlang:getWiktionaryLanguage()\n\tlocal ipalt = name .. \" \" .. (wmlang:getCode() == \"en\"\
      \ and \"\" or \"&lt;sup&gt;\" .. wmlang:getCode() .. \"&lt;/sup&gt;\")\n\t\n\tfor i, link in ipairs(linkdata) do\n\t\tlink.lang = lang\n\t\tlink.sc = sc\n\t\tlink.term = prefix .. link.term\n\t\tlink.tr = \"-\"\n\t\ttable.insert(iplinks, \"&lt;span class=\\\
      \"interProject\\\"&gt;[[\" .. link.term .. \"|\" .. ipalt .. \"]]&lt;/span&gt;\")\n\t\ttable.insert(links, m_links.full_link(link, \"bold\"))\n\tend\n\t\n\treturn links, iplinks\nend\n\n\nfunction export.wikipedia_box(frame)\n\tlocal params = {\n\t\t[1]\
      \ = {},\n\t\t[2] = {},\n\t\t\n\t\t[\"cat\"] = {},\n\t\t[\"category\"] = {alias_of = \"cat\"},\n\t\t[\"dab\"] = {},\n\t\t[\"disambiguation\"] = {alias_of = \"dab\"},\n\t\t[\"i\"] = {type = \"boolean\"},\n\t\t[\"lang\"] = {default = \"en\"},\n\t\t[\"mul\"\
      ] = {},\n\t\t[\"mullabel\"] = {},\n\t\t[\"mulcat\"] = {},\n\t\t[\"mulcatlabel\"] = {},\n\t\t[\"portal\"] = {},\n\t\t[\"sc\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal wmlang = require(\"\
      Module:wikimedia languages\").getByCodeWithFallback(args[\"lang\"]) or error(\"The Wikimedia language code \\\"\" .. args[\"lang\"] .. \"\\\" is not valid.\")\n\tlocal sc = args[\"sc\"] and (require(\"Module:scripts\").getByCode(args[\"sc\"]) or error(\"\
      The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil\n\t\n\tlocal linkdata = {}\n\t\n\tif args[\"cat\"] then\n\t\ttable.insert(linkdata, {term = \"Category:\" .. args[\"cat\"], alt = args[1] or args[\"cat\"]})\n\telseif args[\"portal\"] then\n\
      \t\ttable.insert(linkdata, {term = \"Portal:\" .. args[\"portal\"], alt = args[1] or args[\"portal\"]})\n\telse\n\t\ttable.insert(linkdata, {term = args[\"dab\"] or args[1] or mw.title.getCurrentTitle().text, alt = args[2] or args[1] or args[\"dab\"] or\
      \ mw.title.getCurrentTitle().text})\n\tend\n\t\n\tif args[\"mul\"] or args[\"mulcat\"] then\n\t\tif args[\"mulcat\"] then\n\t\t\ttable.insert(linkdata, {term = \"Category:\" .. args[\"mulcat\"], alt = args[\"mulcatlabel\"] or args[\"mulcat\"]})\n\t\telse\n\
      \t\t\ttable.insert(linkdata, {term = args[\"mul\"], alt = args[\"mullabel\"] or args[\"mul\"]})\n\t\tend\n\tend\n\t\n\tlocal links, iplinks = process_links(linkdata, \"w\", \"Wikipedia\", wmlang, sc)\n\t\n\tif frame.args[\"slim\"] then\n\t\treturn\n\t\t\
      \t\"&lt;div class=\\\"sister-wikipedia sister-project noprint floatright\\\" style=\\\"border: solid #aaa 1px; font-size: 90%; background: #f9f9f9; width: 250px; padding: 4px; text-align: left;\\\"&gt;\" ..\n\t\t\t\"&lt;div style=\\\"float: left;\\\"&gt;[[File:Wikipedia-logo.png|14px|none|\
      \ ]]&lt;/div&gt;\" ..\n\t\t\t\"&lt;div style=\\\"margin-left: 15px;\\\"&gt;\" ..\n\t\t\t\" &amp;nbsp;\" ..\n\t\t\ttable.concat(links, \" and \") ..\n\t\t\t\" on \" ..\n\t\t\t(wmlang:getCode() == \"en\" and \"\" or wmlang:getCanonicalName() .. \"&amp;nbsp;\"\
      ) ..\n\t\t\t\"Wikipedia\" ..\n\t\t\t\"&lt;/div&gt;\" ..\n\t\t\t\"&lt;/div&gt;\"\n\telse\n\t\tlocal linktype\n\t\t\n\t\tif args[\"cat\"] then\n\t\t\tlinktype = \"a category\"\n\t\telseif args[\"mul\"] or args[\"dab\"] then\n\t\t\tlinktype = \"articles\"\
      \n\t\telseif args[\"mulcat\"] then\n\t\t\tlinktype = \"categories\"\n\t\telseif args[\"portal\"] then\n\t\t\tlinktype = \"a portal\"\n\t\telse\n\t\t\tlinktype = \"an article\"\n\t\tend\n\t\t\n\t\treturn\n\t\t\t\"&lt;div class=\\\"sister-wikipedia sister-project\
      \ noprint floatright\\\" style=\\\"border: 1px solid #aaa; font-size: 90%; background: #f9f9f9; width: 250px; padding: 4px; text-align: left;\\\"&gt;\" ..\n\t\t\t\"&lt;div style=\\\"float: left;\\\"&gt;[[File:Wikipedia-logo.png|44px|none|link=|alt=]]&lt;/div&gt;\"\
      \ ..\n\t\t\t\"&lt;div style=\\\"margin-left: 60px;\\\"&gt;\" ..\n\t\t\twmlang:getCanonicalName() .. \" [[Wikipedia]] has \" .. linktype .. \" on:\" ..\n\t\t\t\"&lt;div style=\\\"margin-left: 10px;\\\"&gt;\" .. table.concat(links, \" and \") .. \"&lt;/div&gt;\"\
      \ ..\n\t\t\t\"&lt;/div&gt;\" ..\n\t\t\ttable.concat(iplinks) .. ((args[1] == mw.title.getCurrentTitle().text and not (args[2] or args[\"dab\"])) and \"[[Category:wikipedia with redundant first parameter]]\" or \"\") ..\n\t\t\t\"&lt;/div&gt;\"\n\tend\n\
      end\n\n\nfunction export.projectlink(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t\t[2] = {},\n\t\t\n\t\t[\"dab\"] = {},\n\t\t[\"i\"] = {type = \"boolean\"},\n\t\t[\"lang\"] = {default = \"en\"},\n\t\t[\"nodot\"] = {},\n\t\t[\"sc\"] = {},\n\t}\n\t\n\t\
      local args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal wmlang = require(\"Module:wikimedia languages\").getByCodeWithFallback(args[\"lang\"]) or error(\"The Wikimedia language code \\\"\" .. args[\"lang\"] .. \"\
      \\\" is not valid.\")\n\tlocal sc = args[\"sc\"] and (require(\"Module:scripts\").getByCode(args[\"sc\"]) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil\n\t\n\tlocal linkdata = {term = args[1] or args[\"dab\"] or mw.title.getCurrentTitle().text,\
      \ alt = args[2] or args[1] or args[\"dab\"] or mw.title.getCurrentTitle().text}\n\t\n\tif args[\"i\"] then\n\t\tlinkdata.alt = \"''\" .. linkdata.alt .. \"''\"\n\tend\n\t\n\tlocal links, iplinks = process_links({linkdata}, frame.args[\"prefix\"], frame.args[\"\
      name\"], wmlang, sc)\n\t\n\treturn\n\t\t\"[[Image:\" .. frame.args[\"image\"] .. \"|15px|link=\" .. linkdata.term .. \"]] \" ..\n\t\ttable.concat(links, \" and \") ..\n\t\t\" on \" ..\n\t\t(wmlang:getCode() == \"en\" and \"\" or \"the \" .. wmlang:getCanonicalName()\
      \ .. \" \") ..\n\t\t\" \" .. frame.args[\"name\"] .. (args[\"nodot\"] and \"\" or \".\") ..\n\t\ttable.concat(iplinks)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:58.446Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45240 t=1555362358349702
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:58 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1226.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 750848424, 255432923, 689949176
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6246525\" pageid=\"6246525\" ns=\"828\" title=\"Module:links/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-03-13T02:26:26Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add [[Unsupported titles/MeToo]]\" xml:space=\"preserve\">local data = {}\n\ndata.high_memory_entries = {\n\t\"a\",\n\t\"animal\",\n\t\"book\",\n\t\"coffee\",\n\t\"do\",\n\t\"e\",\n\t\"\
      language\",\n\t\"night\",\n\t\"smoke\",\n\t\"son\",\n\t\"sun\",\n\t\"water\",\n\t\"wind\",\n}\n\n\nlocal U = mw.ustring.char\nlocal soft_hyphen = U(0xAD)\n\n--[[\tThe \"actual title\" is the page name with the prefix \"Unsupported titles/\" removed.\n\t\
      \t[\"displayed_title\"] = \"actual title\"\t]]\ndata.unsupported_titles = {\n\t[\" \"] = \"Space\",\n\t[\"{\"] = \"Left curly bracket\",\n\t[\"}\"] = \"Right curly bracket\",\n\t[\"[\"] = \"Left square bracket\",\n\t[\"]\"] = \"Right square bracket\",\n\
      \t[\"&lt;\"] = \"Less than\",\n\t[\"&gt;\"] = \"Greater than\",\n\t[\"=&lt;\"] = \"Equal less than\",\n\t[\"=&gt;\"] = \"Equal greater than\",\n\t[\"&gt;=\"] = \"Greater than equal\",\n\t[\"&lt;=\"] = \"Less than equal\",\n\t[\"-&gt;\"] = \"Hyphen greater\
      \ than\",\n\t[\"&lt;-\"] = \"Less than hyphen\",\n\t[\"&gt;_&lt;\"] = \"Greater than low line less than\",\n\t[\"::\"] = \"Double colon\",\n\t[\": :\"] = \"Enclosing colons\",\n\t[\":=\"] = \"Colon equals\",\n\t[\":Þ\"] = \"Colon capital thorn\",\n\t[\"\
      :(\"] = \"Colon left paren\",\n\t[\":)\"] = \"Colon right paren\",\n\t[\"&lt;&gt;\"] = \"Less than greater than\",\n\t[\"&lt;3\"] = \"Less than three\",\n\t[\"&lt;/3\"] = \"Less than slash three\",\n\t[\"&lt; &gt;\"] = \"Enclosing less than greater than\"\
      ,\n\t[\"&lt; /&gt;\"] = \"Less than trailing slash greater than\",\n\t[\"&lt; &gt; &lt;/ &gt;\"] = \"HTML start tag end tag\",\n\t[\"&lt;!-- --&gt;\"] = \"HTML comment\",\n\t[\"&lt;g&gt;\"] = \"g tag\",\n\t[\":-(\"] = \"Colon hyphen left paren\",\n\t[\"\
      :-)\"] = \"Colon hyphen right paren\",\n\t[\"|\"] = \"Vertical line\",\n\t[\"||\"] = \"Vertical line vertical line\",\n\t[\"| |\"] = \"Enclosing vertical lines\",\n\t[\"C#\"] = \"C sharp\",\n\t[\"#\"] = \"Number sign\",\n\t[\"# #\"] = \"Enclosing number\
      \ signs\",\n\t[\":\"] = \"Colon\",\n\t[\"..\"] = \"Double period\",\n\t[\".\"] = \"Full stop\",\n\t[\"_\"] = \"Low line\",\n\t[\"-_-\"] = \"Low line interfix\",\n\t[U(0xFFFD)] = \"Replacement character\",\n\t[U(0x1680)] = \"Ogham space\",\n\t[\"[ ]\"]\
      \ = \"Square brackets\",\n\t[\"{ }\"] = \"Curly brackets\",\n\t[\"[…]\"] = \"Square bracketed ellipsis\",\n\t[\"_ _\"] = \"Enclosing low lines\",\n\t[\"C|N&gt;K\"] = \"C through N to K\",\n\t[\"#MeToo\"] = \"MeToo\",\n\t[\"о/.\"] = \"о slash dot\",\n\t\
      [\"กรุงเทพมหานคร อมรรัตนโกสินทร์ มหินทรายุธยา มหาดิลกภพ นพรัตนราชธานีบูรีรมย์ อุดมราชนิเวศน์มหาสถาน อมรพิมานอวตารสถิต สักกะทัตติยวิษณุกรรมประสิทธิ์\"] = \"Thai name of Bangkok\",\n\t[\"λοπαδοτεμαχοσελαχογαλεοκρανιολειψανοδριμυποτριμματοσιλφιοκαραβομελι\
      τοκατακεχυμενοκιχλ\" .. soft_hyphen .. \"επικοσσυφοφαττοπεριστεραλεκτρυονοπτοκεφαλλιοκιγκλοπελειολαγῳοσιραιοβαφητραγανοπτερύγων\"] = \"Ancient Greek dish\",\n\t[\":≠\"] = \":≠\",\n\t[\"S:t\"] = \"S:t\",\n\t[\"S:ta\"] = \"S:ta\",\n\t[\"c:a\"] = \"c:a\"\
      ,\n\t[\"n:a\"] = \"n:a\",\n\t[\"n:o\"] = \"n:o\",\n\t[\"n:r\"] = \"n:r\",\n\t[\"s:a\"] = \"s:a\",\n\t[\"st:a\"] = \"st:a\",\n\t[\"v:a\"] = \"v:a\",\n}\n\nfor i, item in ipairs(data.high_memory_entries) do\n\tdata.high_memory_entries[i] = nil\n\tdata.high_memory_entries[item]\
      \ = true\nend\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:59.191Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49000 t=1555362359090789
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:59 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1230.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 593869514, 486461339, 692108636
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6074448\" pageid=\"6074448\" ns=\"828\" title=\"Module:headword/data\"><revisions><rev user=\"Surjection\" timestamp=\"2019-01-11T21:27:17Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"they are not lemmas just because you say they are\" xml:space=\"preserve\">local data = {}\n\ndata.invariable = {\n\t\"cmavo\",\n\t\"cmene\",\n\t\"fu'ivla\",\n\t\"gismu\",\n\t\"Han tu\"\
      ,\n\t\"hanzi\",\n\t\"hanja\",\n\t\"jyutping\",\n\t\"kanji\",\n\t\"lujvo\",\n\t\"phrasebook\",\n\t\"pinyin\",\n\t\"rafsi\",\n\t\"romaji\",\n}\n\ndata.lemmas = {\n\t\"abbreviations\",\n\t\"acronyms\",\n\t\"adjectives\",\n\t\"adnominals\",\n\t\"adpositions\"\
      ,\n\t\"adverbs\",\n\t\"affixes\",\n\t\"ambipositions\",\n\t\"articles\",\n\t\"circumfixes\",\n\t\"circumpositions\",\n\t\"classifiers\",\n\t\"cmavo\",\n\t\"cmavo clusters\",\n\t\"cmene\",\n\t\"combining forms\",\n\t\"conjunctions\",\n\t\"counters\",\n\t\
      \"determiners\",\n\t\"diacritical marks\",\n\t\"equative adjectives\",\n\t\"fu'ivla\",\n\t\"gismu\",\n\t\"Han characters\",\n\t\"Han tu\",\n\t\"hanzi\",\n\t\"hanja\",\n\t\"idioms\",\n\t\"infixes\",\n\t\"interfixes\",\n\t\"initialisms\",\n\t\"interjections\"\
      ,\n\t\"kanji\",\n\t\"letters\",\n\t\"ligatures\",\n\t\"lujvo\",\n\t\"morphemes\",\n\t\"non-constituents\",\n\t\"nouns\",\n\t\"numbers\",\n\t\"numeral symbols\",\n\t\"numerals\",\n\t\"particles\",\n\t\"phrases\",\n\t\"postpositions\",\n\t\"predicatives\"\
      ,\n\t\"prefixes\",\n\t\"prepositions\",\n\t\"prepositional phrases\",\n\t\"preverbs\",\n\t\"pronominal adverbs\",\n\t\"pronouns\",\n\t\"proverbs\",\n\t\"proper nouns\",\n\t\"punctuation marks\",\n\t\"relatives\",\n\t\"roots\",\n\t\"stems\",\n\t\"suffixes\"\
      ,\n\t\"syllables\",\n\t\"symbols\",\n\t\"verbs\",\n}\n\ndata.nonlemmas = {\n\t\"active participles\",\n\t\"adjectival participles\",\n\t\"adjective forms\",\n\t\"adjective comparative forms\", -- TODO: replace with \"comparative adjectives\" or \"comparative\
      \ adjective forms\", depending on which one the word is\n\t\"adjective feminine forms\",\n\t\"adjective equative forms\",\n\t\"adjective plural forms\",\n\t\"adjective superlative forms\", -- TODO: replace with \"superlative adjectives\" or \"superlative\
      \ adjective forms\", depending on which one the word is\n\t\"adverb forms\",\n\t\"adverb comparative forms\", -- TODO: replace with \"comparative adverbs\" or \"comparative adverb forms\", depending on which one the word is\n\t\"adverb superlative forms\"\
      , -- TODO: replace with \"superlative adverbs\" or \"superlative adverb forms\", depending on which one the word is\n\t\"adverbial participles\",\n\t\"agent participles\",\n\t\"article forms\",\n\t\"circumfix forms\",\n\t\"combined forms\",\n\t\"comparative\
      \ adjective forms\",\n\t\"comparative adjectives\",\n\t\"comparative adverb forms\",\n\t\"comparative adverbs\",\n\t\"contractions\",\n\t\"converbs\",\n\t\"determiner comparative forms\",\n\t\"determiner forms\",\n\t\"determiner superlative forms\",\n\t\
      \"diminutive nouns\",\n\t\"future participles\",\n\t\"gerunds\",\n\t\"infinitive forms\",\n\t\"infinitives\",\n\t\"interjection forms\",\n\t\"jyutping\",\n\t\"kanji readings\",\n\t\"misspellings\",\n\t\"negative participles\",\n\t\"nominal participles\"\
      ,\n\t\"noun case forms\",\n\t\"noun dual forms\",\n\t\"noun forms\",\n\t\"noun plural forms\",\n\t\"noun possessive forms\",\n\t\"noun singulative forms\",\n\t\"numeral forms\",\n\t\"participles\",\n\t\"participle forms\",\n\t\"particle forms\",\n\t\"\
      passive participles\",\n\t\"past active participles\",\n\t\"past participles\",\n\t\"past participle forms\",\n\t\"past passive participles\",\n\t\"perfect active participles\",\n\t\"perfect participles\",\n\t\"perfect passive participles\",\n\t\"pinyin\"\
      ,\n\t\"plurals\",\n\t\"postposition forms\",\n\t\"prefix forms\",\n\t\"preposition contractions\",\n\t\"preposition forms\",\n\t\"prepositional pronouns\",\n\t\"present active participles\",\n\t\"present participles\",\n\t\"present passive participles\"\
      ,\n\t\"pronoun forms\",\n\t\"pronoun possessive forms\",\n\t\"proper noun forms\",\n\t\"proper noun plural forms\",\n\t\"rafsi\",\n\t\"romanizations\",\n        \"root forms\",\n\t\"singulatives\",\n\t\"suffix forms\",\n\t\"superlative adjective forms\"\
      ,\n\t\"superlative adjectives\",\n\t\"superlative adverb forms\",\n\t\"superlative adverbs\",\n\t\"verb forms\",\n\t\"verbal nouns\",\n}\n\ndata.notranslit = {\n\t\"ams\",\n\t\"az\",\n\t\"bbc\",\n\t\"bug\",\n\t\"cia\",\n\t\"cjm\",\n\t\"cmn\",\n\t\"hak\"\
      ,\n\t\"ja\",\n\t\"kzg\",\n\t\"lad\",\n\t\"lzh\",\n\t\"ms\",\n\t\"mul\",\n\t\"mvi\",\n\t\"nan\",\n\t\"oj\",\n\t\"okn\",\n\t\"pi\",\n\t\"ro\",\n\t\"ryn\",\n\t\"rys\",\n\t\"ryu\",\n\t\"sh\",\n\t\"tgt\",\n\t\"th\",\n\t\"tkn\",\n\t\"tly\",\n\t\"und\",\n\t\"\
      vi\",\n\t\"xug\",\n\t\"yue\",\n\t\"yoi\",\n\t\"yox\",\n\t\"za\",\n\t\"zh\",\n}\n\n-- Script codes for which a script-tagged display title will be added.\t\ndata.toBeTagged = {\n\t\"Ahom\",\n\t\"Arab\",\n\t\"Avst\",\n\t\"Bali\",\n\t\"Cham\",\n\t\"Copt\"\
      ,\n\t\"Kali\",\n\t\"Hani\",\n\t\"Hebr\",\n\t\"Lana\",\n\t\"Linb\",\n\t\"Mand\",\n\t\"Mong\",\n\t\"polytonic\",\n\t\"Rjng\",\n\t\"Samr\",\n\t\"Sund\",\n\t\"Sylo\",\n\t\"Tang\",\n\t\"Tavt\",\n\t\"Xsux\",\n}\n\nfor key, list in pairs(data) do\n\tdata[key]\
      \ = require(\"Module:utils\").list_to_set(list)\nend\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:59.372Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autils&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51481 t=1555362359270183
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:59 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 397734553, 549706238, 692860642
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4882600\" pageid=\"4882600\" ns=\"828\" title=\"Module:utils\"><revisions><rev user=\"Metaknowledge\" timestamp=\"2017-09-23T01:00:56Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Protected &quot;[[Module:utils]]&quot;: Highly visible template/module ([Edit=Allow only autoconfirmed users] (indefinite) [Move=Allow only autoconfirmed users] (indefinite))\" xml:space=\"\
      preserve\">--[=[\n  Module:utils v0.3.1\n  Date: 2015-08-14\n\n  This module contains some common useful functions.\n  Fill free to add another universal functions here.\n]=]--\n\nlocal export = {}\n\n-- Function to clone table (sometimes it works better\
      \ then mw.clone)\nfunction export.clone(original)\n    local copy = {}\n    for key, value in pairs(original) do\n        copy[key] = value\n    end\n    return copy\nend\n\n-- Function to get current PAGENAME and related\nfunction export.get_base()\n\t\
      local PAGENAME = mw.title.getCurrentTitle().text\n\tlocal SUBPAGENAME = mw.title.getCurrentTitle().subpageText\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\t\n\tif NAMESPACE == 'User' or NAMESPACE == 'Участник' then\n\t\treturn SUBPAGENAME\n\
      \tend\n\treturn PAGENAME\nend\n\n-- Function to iterate table with sorted keys (sorting function can be different)\nfunction export.spairs(t, order)\n    -- collect the keys\n    local keys = {}\n    for k in pairs(t) do keys[#keys+1] = k end\n    -- sort\n\
      \    if order then\n        table.sort(keys, function(a,b) return order(t, a, b) end)\n    else\n        table.sort(keys)\n    end\n    -- return the iterator function\n    local i = 0\n    return function()\n        i = i + 1\n        if keys[i] then\n\
      \            return keys[i], t[keys[i]]\n        end\n    end\nend\n\n-- Functions to measure working time of scripts (start)\nfunction export.start()\n\texport.started = os.clock()\nend\n\n-- Functions to measure working time of scripts (stop)\nfunction\
      \ export.stop(desc)\n\texport.stoped = os.clock()\n\texport.delta = export.stoped - export.started\n\tif desc == nil then\n\t\tdesc = 'time delta'\n\tend\n\tmw.log('™ ' .. desc .. ' = ' .. export.delta)\nend\n\n-- Function to find common part (length)\
      \ of two strings\n-- (common part from the beginning of strings)\nfunction export.find_common(str_1, str_2)\n\tif not str_1 or not str_2 then\n\t\treturn 1\n\tend\n\tfor pos = 1, #str_1 do\n\t    local char_1 = str_1:sub(pos, pos)\n\t    local char_2 =\
      \ str_2:sub(pos, pos)\n\t    if char_1 ~= char_2 then\n\t    \treturn pos\n\t    end\n\tend\n\treturn 1\nend\n\n-- Function that allows easily add values into dict of dicts of lists\n-- Example of this structure:\n--   dict = {\n--     key1 = {\n--   \
      \    sub_key1 = {value1, value2, value3},\n--       sub_key2 = {value4, value5},\n--     },\n--     key2 = {\n--       sub_key3 = {value6},\n--       sub_key4 = {value7, value8},\n--     },\n--   }\nfunction export.put_value(dict, key, sub_key, value)\n\
      \tif not dict[key] then\n\t\tdict[key] = {}\n\tend\n\tif not dict[key][sub_key] then\n\t\tdict[key][sub_key] = {}\n\tend\n\ttable.insert(dict[key][sub_key], value)\nend\n\n-- Compare two items, recursively comparing lists.\n-- FIXME, doesn't work for tables\
      \ that aren't lists.\nfunction export.equals(x, y)\n    if type(x) == \"table\" and type(y) == \"table\" then\n        if #x ~= #y then\n            return false\n        end \n        for key, value in ipairs(x) do\n            if not export.equals(value,\
      \ y[key]) then\n                return false\n            end\n        end\n        return true\n    end\n    return x == y\nend\n\n-- true if list contains item\nfunction export.contains(tab, item)\n    for _, value in pairs(tab) do\n        if export.equals(value,\
      \ item) then\n            return true\n        end\n    end\n    return false\nend\n\n-- append to list if element not already present\nfunction export.insert_if_not(tab, item)\n    if not export.contains(tab, item) then\n        table.insert(tab, item)\n\
      \    end\nend\n\n-- convert list to set\nfunction export.list_to_set(list)\n\tlocal set = {}\n\tfor _, item in ipairs(list) do\n\t\tset[item] = true\n\tend\n\treturn set\nend\n\n-- Inhibit Regular Expression magic characters ^$()%.[]*+-?)\nfunction export.escape(value)\n\
      \    -- Prefix every non-alphanumeric character (%W) with a % escape character, \n    -- where %% is the % escape, and %1 is original character\n    return mw.ustring.gsub(value, \"(%W)\",\"%%%1\")\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:59.541Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Apalindromes&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38403 t=1555362359453013
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:59 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 674598446, 476706940, 693905046
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5783859\" pageid=\"5783859\" ns=\"828\" title=\"Module:palindromes\"><revisions><rev user=\"TheDaveRoss\" timestamp=\"2016-10-25T20:04:19Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Changed protection level for &quot;[[Module:palindromes]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors\
      \ and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefini...\" xml:space=\"preserve\">local export = {}\n\nlocal data = mw.loadData(\"Module:palindromes/data\")\n\nlocal function ignoreCharacters(term, lang, sc,\
      \ langdata)\n\tterm = mw.ustring.lower(term)\n\tterm = mw.ustring.gsub(term, \"[ ,%.%?!%%%-'\\\"]\", \"\")\n\t\n\t-- Language-specific substitutions\n\n\t-- Ignore entire scripts (e.g. romaji in Japanese)\n\tif langdata.ignore then\n\t\tsc_name = sc and\
      \ sc:getCode() or require(\"Module:scripts\").findBestScript(term, lang):getCode()\n\t\tfor _, script in ipairs(langdata.ignore) do\n\t\t\tif script == sc_name then\n\t\t\t\treturn \"\"\n\t\t\tend\n\t\tend\n\tend\n\t\n\tfor i, from in ipairs(langdata.from\
      \ or {}) do\n\t\tterm = mw.ustring.gsub(term, from, langdata.to[i] or \"\")\n\tend\n\t\n\treturn term\nend\n\nfunction export.is_palindrome(term, lang, sc)\n\tlocal langdata = data[lang:getCode()] or {}\n\n\t-- Affixes aren't palindromes\n\tif mw.ustring.find(term,\
      \ \"^%-\") or mw.ustring.find(term, \"%-$\") then\n\t\treturn false\n\tend\n\t\n\t-- Remove punctuation and casing\n\tterm = ignoreCharacters(term, lang, sc, langdata)\n\tlocal len = mw.ustring.len(term)\n\t\n\tif langdata.allow_repeated_char then\n\t\t\
      -- Ignore single-character terms\n\t\tif len &lt; 2 then\n\t\t\treturn false\n\t\tend\n\telse\n\t\t-- Ignore terms that consist of just one character repeated\n\t\t-- This also excludes terms consisting of fewer than 3 characters\n\t\tif term == mw.ustring.rep(mw.ustring.sub(term,\
      \ 1, 1), len) then\n\t\t\treturn false\n\t\tend\n\tend\n\t\n\tlocal charlist = {}\n\t\n\tfor c in mw.ustring.gmatch(term, \".\") do\n\t\ttable.insert(charlist, c)\n\tend\n\t\n\tfor i = 1, math.floor(len / 2) do\n        if charlist[i] ~= charlist[len -\
      \ i + 1] then\n        \treturn false\n        end\n    end\n    \n    return true\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:05:59.719Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Apalindromes%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47522 t=1555362359619034
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:05:59 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1284.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 203436556, 643835159, 684343788
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5786862\" pageid=\"5786862\" ns=\"828\" title=\"Module:palindromes/data\"><revisions><rev user=\"PiefPafPier\" timestamp=\"2018-08-08T16:43:32Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"from [[:fy:Module:palindromes/data]]\" xml:space=\"preserve\">local u = mw.ustring.char\n\nlocal data = {\n\t[\"ar\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"[أإآ]\"\
      ,\n\t\t\t\"ؤ\",\n\t\t\t\"[ئى]\",\n\t\t\t\"ة\",\n\t\t\t\"ء\",\n\t\t},\n\t\tto = {\n\t\t\t\"ا\",\n\t\t\t\"و\",\n\t\t\t\"ي\",\n\t\t\t\"ه\",\n\t\t},\n\t},\n\t[\"arc\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"ם\",\n\t\t\t\"ן\",\n\t\t\t\"\
      ך\",\n\t\t\t\"ף\",\n\t\t\t\"ץ\",\n\t\t\t\"ﭏ\",\n\t\t\t\"װ\",\n\t\t\t\"ױ\",\n\t\t\t\"ײ\",\n\t\t\t\"[״׳־]\",\n\t\t},\n\t\tto = {\n\t\t\t\"מ\",\n\t\t\t\"נ\",\n\t\t\t\"כ\", \n\t\t\t\"פ\",\n\t\t\t\"צ\",\n\t\t\t\"אל\",\n\t\t\t\"וו\",\n\t\t\t\"וי\",\n\t\t\t\"\
      יי\",\n\t\t}\n\t},\n\t[\"axm\"] = {\n\t\tfrom = {\"ու\"},\n\t\tto   = {\"ŭ\"},\n\t},\n\t[\"ca\"] = {\n\t\tfrom = {\"à\", \"[èé]\", \"[íï]\", \"[òó]\", \"[úü]\", \"ç\", \"l·l\"},\n\t\tto   = {\"a\", \"e\",    \"i\",    \"o\",    \"u\",    \"c\", \"ll\"\
      },\n\t},\n\t[\"cmn\"] = {ignore = {\"Latn\"}},\n\t[\"cs\"] = {\n\t\tfrom = {\"á\", \"é\", \"í\", \"ó\", \"[úů]\", \"ý\", \"ch\"},\n\t\tto   = {\"a\", \"e\", \"i\", \"o\", \"u\",    \"y\", \"χ\"},\n\t},\n\t[\"de\"] = {\n\t\tfrom = {\"ä\", \"ö\", \"ü\",\
      \ \"[ßẞ]\"},\n\t\tto   = {\"a\", \"o\", \"u\", \"ss\"},\n\t},\n\t[\"el\"] = {\n\t\tfrom = {\n\t\t\t\"[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇᾱᾰἈᾈἌᾌἊᾊἎᾎἉᾉἍᾍἋᾋἏᾏᾹᾸ]\", --uppercase characters are included due to this bug: https://bugs.php.net/bug.php?id=69267\n\t\t\t\"[έ\
      ὲἐἔἒἑἕἓἘἜἚἙἝἛ]\",\n\t\t\t\"[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗἨᾘἬᾜἪᾚἮᾞἩᾙἭᾝἫᾛἯᾟ]\",\n\t\t\t\"[ίὶῖἰἴἲἶἱἵἳἷϊΐῒῗῑῐἸἼἺἾἹἽἻἿῙῘ]\", \n\t\t\t\"[όὸὀὄὂὁὅὃὈὌὊὉὍὋ]\",\n\t\t\t\"[ύὺῦὐὔὒὖὑὕὓὗϋΰῢῧῡῠὙὝὛὟῩῨ]\",\n\t\t\t\"[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧὨᾨὬᾬὪᾪὮᾮὩᾩὭᾭὫᾫὯᾯ]\",\n\t\t\t\"[ῥῤῬ]\"\
      ,\n\t\t\t\"[ς]\",\n\t\t\t\"[́͂]\"\n\t\t},\n\t\tto = {\n\t\t\t\"α\",\n\t\t\t\"ε\",\n\t\t\t\"η\",\n\t\t\t\"ι\",\n\t\t\t\"ο\",\n\t\t\t\"υ\",\n\t\t\t\"ω\",\n\t\t\t\"ρ\",\n\t\t\t\"σ\"\n\t\t},\n\t},\n\t[\"en\"] = {\n\t\tfrom = {\"[äàáâåā]\", \"[ëèéêē]\", \"\
      [ïìíîī]\", \"[öòóôō]\", \"[üùúûū]\", \"æ\" , \"œ\" , \"[çč]\", \"ñ\", \"'\"},\n\t\tto   = {\"a\",        \"e\",       \"i\",       \"o\",       \"u\",       \"ae\", \"oe\", \"c\",    \"n\"},\n\t},\n\t[\"fr\"] = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"\
      [íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\",  \"œ\", \"'\"},\n\t\tto   = {\"a\",       \"e\",     \"i\",      \"o\",      \"u\",      \"y\",      \"c\", \"ae\", \"oe\"},\n\t},\n\t[\"fy\"] = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï\
      ]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"æ\",  \"'\"},\n\t\tto   = {\"a\",       \"e\",     \"i\",      \"o\",      \"u\",      \"y\",      \"ae\"},\n\t},\n\t[\"grc\"] = {\n\t\tfrom = {\n\t\t\t\"[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇᾱᾰἈᾈἌᾌἊᾊἎᾎἉᾉἍᾍἋᾋἏᾏᾹᾸ]\", --uppercase\
      \ characters are included due to this bug: https://bugs.php.net/bug.php?id=69267\n\t\t\t\"[έὲἐἔἒἑἕἓἘἜἚἙἝἛ]\",\n\t\t\t\"[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗἨᾘἬᾜἪᾚἮᾞἩᾙἭᾝἫᾛἯᾟ]\",\n\t\t\t\"[ίὶῖἰἴἲἶἱἵἳἷϊΐῒῗῑῐἸἼἺἾἹἽἻἿῙῘ]\", \n\t\t\t\"[όὸὀὄὂὁὅὃὈὌὊὉὍὋ]\",\n\t\t\t\"[ύὺῦὐὔὒ\
      ὖὑὕὓὗϋΰῢῧῡῠὙὝὛὟῩῨ]\",\n\t\t\t\"[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧὨᾨὬᾬὪᾪὮᾮὩᾩὭᾭὫᾫὯᾯ]\",\n\t\t\t\"[ῥῤῬ]\",\n\t\t\t\"[ς]\",\n\t\t\t\"[́͂]\"\n\t\t},\n\t\tto = {\n\t\t\t\"α\",\n\t\t\t\"ε\",\n\t\t\t\"η\",\n\t\t\t\"ι\",\n\t\t\t\"ο\",\n\t\t\t\"υ\",\n\t\t\t\"ω\",\n\t\t\t\"\
      ρ\",\n\t\t\t\"σ\"\n\t\t}\n\t},\n\t[\"he\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"ם\",\n\t\t\t\"ן\",\n\t\t\t\"ך\",\n\t\t\t\"ף\",\n\t\t\t\"ץ\",\n\t\t\t\"ﭏ\",\n\t\t\t\"װ\",\n\t\t\t\"ױ\",\n\t\t\t\"ײ\",\n\t\t\t\"[״׳־]\",\n\t\t},\n\t\t\
      to = {\n\t\t\t\"מ\",\n\t\t\t\"נ\",\n\t\t\t\"כ\", \n\t\t\t\"פ\",\n\t\t\t\"צ\",\n\t\t\t\"אל\",\n\t\t\t\"וו\",\n\t\t\t\"וי\",\n\t\t\t\"יי\",\n\t\t}\n\t},\n\t[\"hu\"] = {\n\t\tfrom = {\"á\", \"é\", \"í\", \"ó\", \"ú\", \"ő\", \"ű\", \"cs\", \"dz\", \"gy\"\
      , \"ly\", \"ny\", \"sz\", \"ty\", \"zs\", \"dzs\"},\n\t\tto   = {\"a\", \"e\", \"i\", \"o\", \"u\", \"ö\", \"ü\", \"č\",  \"ď\",  \"ǰ\",  \"ľ\",  \"ň\",  \"š\",  \"ť\",  \"ž\",  \"ǯ\"},\n\t},\n\t[\"hy\"] = {\n\t\tfrom = {\"ու\", \"եւ\"},\n\t\tto   = {\"\
      ŭ\",  \"և\"},\n\t},\n\t[\"ja\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {'が', 'ぎ', 'ぐ', 'げ', 'ご', 'ざ', 'じ', 'ず', 'ぜ', 'ぞ', 'だ', 'ぢ', 'づ', 'で', 'ど', 'ば', 'び', 'ぶ', 'べ', 'ぼ', 'ぱ', 'ぴ', 'ぷ', 'ぺ', 'ぽ', 'ゔ'},\n\t\tto   = {'か', 'き', 'く', 'け', 'こ', 'さ\
      ', 'し', 'す', 'せ', 'そ', 'た', 'ち', 'つ', 'て', 'と', 'は', 'ひ', 'ふ', 'へ', 'ほ', 'は', 'ひ', 'ふ', 'へ', 'ほ', 'う'},\n\t\tignore = {\"Latn\"},\n\t},\n\t[\"la\"] = {\n\t\tfrom = {\"v\", \"j\"},\n\t\tto   = {\"u\", \"i\"}\n\t},\n\t[\"nl\"] = {\n\t\tfrom = {\"[áàä]\"\
      , \"[éèë]\", \"[íìï]\", \"[óòö]\", \"[úùü]\"},\n\t\tto   = {\"a\",     \"e\",     \"i\",     \"o\",     \"u\"},\n\t},\n\t[\"pl\"] = {\n\t\tfrom = {\"ć\", \"ę\", \"ł\", \"ń\", \"ó\", \"ś\", \"[źż]\"},\n\t\tto   = {\"c\", \"e\", \"l\", \"n\", \"o\", \"s\"\
      , \"z\"},\n\t},\n\t[\"ru\"] = {\n\t\tfrom = {\"ё\"},\n\t\tto   = {\"е\"},\n\t},\n\t[\"xcl\"] = {\n\t\tfrom = {\"ու\"},\n\t\tto   = {\"ŭ\"},\n\t},\n\t[\"yi\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"ם\",\n\t\t\t\"ן\",\n\t\t\t\"ך\",\n\
      \t\t\t\"ף\",\n\t\t\t\"ץ\",\n\t\t\t\"ﭏ\",\n\t\t\t\"װ\",\n\t\t\t\"ױ\",\n\t\t\t\"ײ\",\n\t\t\t\"[״׳־]\",\n\t\t\t\"[ִַָּֿׁׂ]\",\n\t\t},\n\t\tto = {\n\t\t\t\"מ\",\n\t\t\t\"נ\",\n\t\t\t\"כ\", \n\t\t\t\"פ\",\n\t\t\t\"צ\",\n\t\t\t\"אל\",\n\t\t\t\"וו\",\n\t\t\t\"\
      וי\",\n\t\t\t\"יי\",\n\t\t}\n\t},\n\t[\"zh\"] = {\n\t\tignore = {\"Latn\"},\n\t},\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:09.349Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46828 t=1555362369257472
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:09 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 402577099, 635291377, 683047015
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:06:09.497Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc%2Fredundant&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=32897 t=1555362369419125
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:09 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1225.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 596556931, 557333872, 683010049
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc/redundant" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:06:09.656Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc%2Fredundant%2FLatn&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43901 t=1555362369566809
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '166'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:09 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 507156183, 625045351, 701957942
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc/redundant/Latn" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:06:00.556Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alb&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=40128 t=1555362360469254
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:00 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 669920340, 239192856, 687041300
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4376313" pageid="4376313" ns="10" title="Template:lb"><revisions><rev user="-sche" timestamp="2016-09-15T04:39:16Z" contentformat="text/x-wiki" contentmodel="wikitext"
      comment="Protected &quot;[[Template:lb]]&quot;: Highly visible template/module: if for some reason someone needs to edit this, post in the [[WT:GP]] or [[WT:BP]] ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))"
      xml:space="preserve">#REDIRECT [[Template:label]]</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:06:00.714Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alabel&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=34305 t=1555362360632939
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:00 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1282.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 586552833, 718828256, 688770412
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="3734544" pageid="3734544" ns="10" title="Template:label"><revisions><rev user="Ungoliant MMDCCLXIV" timestamp="2017-09-15T19:24:35Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Protected &quot;[[Template:label]]&quot;: Highly visible template/module ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:labels/templates|show}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:01.867Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Ffunctions&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=40354 t=1555362361778673
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:01 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 604180808, 647762118, 702087970
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6052562\" pageid=\"6052562\" ns=\"828\" title=\"Module:labels/data/functions\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-02-26T03:03:38Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"need to declare field &quot;languages&quot; as table\" xml:space=\"preserve\">export = {}\n\nfunction export.handle_languages(labels)\n\tif type(labels) ~= \"table\" then\n\t\terror('The\
      \ function \"handle_languages\" requires a table as argument.')\n\tend\n\t\n\tfor label, data in pairs(labels) do\n\t\tif data[\"languages\"] then\n\t\t\tfor key, language in ipairs(data[\"languages\"] or {}) do\n\t\t\t\tlabels[label][\"languages\"][language]\
      \ = true\n\t\t\tend\n\t\telseif data[\"language\"] and data[\"language\"] ~= \"\" then\n\t\t\tlabels[label][\"languages\"] = {}\n\t\t\tlabels[label][\"languages\"][data[\"language\"]] = true\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:02.637Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Ftopical&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48570 t=1555362361946443
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:02 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1285.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 606078441, 557925679, 683832378
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5967302\" pageid=\"5967302\" ns=\"828\" title=\"Module:labels/data/topical\"><revisions><rev user=\"King of Hearts\" timestamp=\"2019-04-09T07:56:12Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"better link for bridge\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\nlocal deprecated = {}\n\n-- This file is split into two sections: topical labels and labels for set-type\
      \ categories.\n-- Each section is sorted alphabetically.\n\n\n-- Topical labels\n\nlabels[\"accounting\"] = {\n\tdisplay = \"[[accounting#Noun|accounting]]\",\n\ttopical_categories = {\"Accounting\"},\n}\n\nlabels[\"acoustics\"] = {\n\tdisplay = \"[[acoustics]]\"\
      ,\n\ttopical_categories = {\"Acoustics\"},\n}\n\nlabels[\"acting\"] = {\n\tdisplay = \"[[acting#Noun|acting]]\",\n\ttopical_categories = {\"Acting\"},\n}\n\nlabels[\"advertising\"] = {\n\tdisplay = \"[[advertising#Noun|advertising]]\",\n\ttopical_categories\
      \ = {\"Advertising\"},\n}\n\nlabels[\"aeronautics\"] = {\n\tdisplay = \"[[aeronautics]]\",\n\ttopical_categories = {\"Aeronautics\"},\n}\n\nlabels[\"aerospace\"] = {\n\tdisplay = \"[[aeronautics]], [[space science|space]]\",\n\ttopical_categories = {\"\
      Aerospace\"},\n}\n\nlabels[\"agriculture\"] = {\n\tdisplay = \"[[agriculture]]\",\n\ttopical_categories = {\"Agriculture\"},\n}\n\nlabels[\"aircraft\"] = {\n\tdisplay = \"[[aircraft]]\",\n\ttopical_categories = {\"Aircraft\"},\n}\n\nlabels[\"alchemy\"\
      ] = {\n\tdisplay = \"[[alchemy]]\",\n\ttopical_categories = {\"Alchemy\"},\n}\n\nlabels[\"alcoholism\"] = {\n\tdisplay = \"[[alcoholism]]\",\n\ttopical_categories = {\"Alcoholism\"},\n}\naliases[\"alcohol\"] = \"alcoholism\"\n\nlabels[\"algebra\"] = {\n\
      \tdisplay = \"[[algebra]]\",\n\ttopical_categories = {\"Algebra\"},\n}\n\nlabels[\"algebraic geometry\"] = {\n\tdisplay = \"[[algebraic geometry]]\",\n\ttopical_categories = {\"Algebraic geometry\"},\n}\n\nlabels[\"alternative medicine\"] = {\n\tdisplay\
      \ = \"[[alternative medicine]]\",\n\ttopical_categories = {\"Alternative medicine\"},\n}\n\nlabels[\"amateur radio\"] = {\n\tdisplay = \"[[amateur radio]]\",\n\ttopical_categories = {\"Amateur radio\"},\n}\naliases[\"ham radio\"] = \"amateur radio\"\n\n\
      labels[\"American football\"] = {\n\tdisplay = \"[[American football]]\",\n\ttopical_categories = {\"Football (American)\"},\n}\n\nlabels[\"analytic geometry\"] = {\n\tdisplay = \"[[analytic geometry]]\",\n\ttopical_categories = {\"Geometry\"},\n}\n\n\
      labels[\"analytical chemistry\"] = {\n\tdisplay = \"[[analytical]] [[chemistry]]\",\n\ttopical_categories = {\"Analytical chemistry\"},\n}\n\nlabels[\"anarchism\"] = {\n\tdisplay = \"[[anarchism]]\",\n\ttopical_categories = {\"Anarchism\"},\n}\n\nlabels[\"\
      anatomy\"] = {\n\tdisplay = \"[[anatomy]]\",\n\ttopical_categories = {\"Anatomy\"},\n}\n\nlabels[\"Ancient Greece\"] = {\n\tdisplay = \"[[Ancient Greece]]\",\n\ttopical_categories = {\"Ancient Greece\"},\n}\n\nlabels[\"Ancient Rome\"] = {\n\tdisplay =\
      \ \"[[Ancient Rome]]\",\n\ttopical_categories = {\"Ancient Rome\"},\n}\n\nlabels[\"Anglicanism\"] = {\n\tdisplay = \"[[Anglicanism]]\",\n\ttopical_categories = {\"Anglicanism\"},\n}\n\nlabels[\"animation\"] = {\n\tdisplay = \"[[animation]]\",\n\ttopical_categories\
      \ = {\"Animation\"},\n}\n\nlabels[\"anime\"] = {\n\tdisplay = \"[[anime]]\",\n\ttopical_categories = {\"Japanese fiction\"},\n}\n\nlabels[\"anthropology\"] = {\n\tdisplay = \"[[anthropology]]\",\n\ttopical_categories = {\"Anthropology\"},\n}\n\nlabels[\"\
      arachnology\"] = {\n\tdisplay = \"[[arachnology]]\",\n\ttopical_categories = {\"Arachnology\"},\n}\n\nlabels[\"archaeology\"] = {\n\tdisplay = \"[[archaeology]]\",\n\ttopical_categories = {\"Archaeology\"},\n}\n\nlabels[\"archery\"] = {\n\tdisplay = \"\
      [[archery]]\",\n\ttopical_categories = {\"Archery\"},\n}\n\nlabels[\"architecture\"] = {\n\tdisplay = \"[[architecture]]\",\n\ttopical_categories = {\"Architecture\"},\n}\n\nlabels[\"arithmetic\"] = {\n\tdisplay = \"[[arithmetic]]\",\n\ttopical_categories\
      \ = {\"Arithmetic\"},\n}\n\nlabels[\"Armenian mythology\"] = {\n\tdisplay = \"[[Armenian]] [[mythology]]\",\n\ttopical_categories = {\"Armenian mythology\"},\n}\n\nlabels[\"art\"] = {\n\tdisplay = \"[[art]]\",\n\ttopical_categories = {\"Art\"},\n}\naliases[\"\
      arts\"] = \"art\"\n\nlabels[\"artificial intelligence\"] = {\n\tdisplay = \"[[artificial intelligence]]\",\n\ttopical_categories = {\"Artificial intelligence\"},\n}\n\nlabels[\"Arthurian legend\"] = {\n\tdisplay = \"[[w:Arthurian legend|Arthurian legend]]\"\
      ,\n\ttopical_categories = {\"Arthurian mythology\"},\n}\naliases[\"Arthurian mythology\"] = \"Arthurian legend\"\n\nlabels[\"astrology\"] = {\n\tdisplay = \"[[astrology]]\",\n\ttopical_categories = {\"Astrology\"},\n}\naliases[\"horoscope\"] = \"astrology\"\
      \naliases[\"zodiac\"] = \"astrology\"\n\nlabels[\"astronautics\"] = {\n\tdisplay = \"[[astronautics]]\",\n\ttopical_categories = {\"Astronautics\"},\n}\n\nlabels[\"astronomy\"] = {\n\tdisplay = \"[[astronomy]]\",\n\ttopical_categories = {\"Astronomy\"\
      },\n}\n\nlabels[\"astrophysics\"] = {\n\tdisplay = \"[[astrophysics]]\",\n\ttopical_categories = {\"Astrophysics\"},\n}\n\nlabels[\"Asturian mythology\"] = {\n\tdisplay = \"[[Asturian]] [[mythology]]\",\n\ttopical_categories = {\"Asturian mythology\"},\n\
      }\n\nlabels[\"athletics\"] = {\n\tdisplay = \"[[athletics]]\",\n\ttopical_categories = {\"Athletics\"},\n}\n\nlabels[\"Australian Aboriginal mythology\"] = {\n\tdisplay = \"[[w:Australian Aboriginal religion and mythology|Australian Aboriginal mythology]]\"\
      ,\n\ttopical_categories = {\"Australian Aboriginal mythology\"},\n}\n\nlabels[\"Australian rules football\"] = {\n\tdisplay = \"[[Australian rules football]]\",\n\ttopical_categories = {\"Australian rules football\"},\n}\n\nlabels[\"automotive\"] = {\n\
      \tdisplay = \"[[automotive]]\",\n\ttopical_categories = {\"Automotive\"},\n}\naliases[\"automotives\"] = \"automotive\"\n\nlabels[\"aviation\"] = {\n\tdisplay = \"[[aviation]]\",\n\ttopical_categories = {\"Aviation\"},\n}\n\nlabels[\"backgammon\"] = {\n\
      \tdisplay = \"[[backgammon]]\",\n\ttopical_categories = {\"Backgammon\"},\n}\n\nlabels[\"bacteriology\"] = {\n\tdisplay = \"[[bacteriology]]\",\n\ttopical_categories = {\"Bacteriology\"},\n}\naliases[\"bacteria\"] = \"bacteriology\"\n\nlabels[\"badminton\"\
      ] = {\n\tdisplay = \"[[badminton]]\",\n\ttopical_categories = {\"Badminton\"},\n}\n\nlabels[\"baking\"] = {\n\tdisplay = \"[[baking#Noun|baking]]\",\n\ttopical_categories = {\"Baking\"},\n}\n\nlabels[\"ball games\"] = {\n\tdisplay = \"[[ball game]]s\"\
      ,\n\ttopical_categories = {\"Ball games\"},\n}\n\nlabels[\"ballet\"] = {\n\tdisplay = \"[[ballet]]\",\n\ttopical_categories = {\"Ballet\"},\n}\n\nlabels[\"banking\"] = {\n\tdisplay = \"[[banking#Noun|banking]]\",\n\ttopical_categories = {\"Banking\"},\n\
      }\n\nlabels[\"baseball\"] = {\n\tdisplay = \"[[baseball]]\",\n\ttopical_categories = {\"Baseball\"},\n}\n\nlabels[\"basketball\"] = {\n\tdisplay = \"[[basketball]]\",\n\ttopical_categories = {\"Basketball\"},\n}\n\nlabels[\"BDSM\"] = {\n\tdisplay = \"\
      [[BDSM]]\",\n\ttopical_categories = {\"BDSM\"},\n}\n\nlabels[\"beekeeping\"] = {\n\tdisplay = \"[[beekeeping]]\",\n\ttopical_categories = {\"Beekeeping\"},\n}\n\nlabels[\"beer\"] = {\n\tdisplay = \"[[beer]]\",\n\ttopical_categories = {\"Beer\"},\n}\n\n\
      labels[\"betting\"] = {\n\tdisplay = \"[[gambling#Noun|gambling]]\",\n\ttopical_categories = {\"Betting\"},\n}\n\nlabels[\"biblical\"] = {\n\tdisplay = \"[[Bible|biblical]]\",\n\ttopical_categories = {\"Bible\"},\n}\naliases[\"Bible\"] = \"biblical\"\n\
      aliases[\"Biblical\"] = \"biblical\"\n\nlabels[\"billiards\"] = {\n\tdisplay = \"[[billiards]]\",\n\ttopical_categories = {\"Billiards\"},\n}\n\nlabels[\"bingo\"] = {\n\tdisplay = \"[[bingo]]\",\n\ttopical_categories = {\"Bingo\"},\n}\n\nlabels[\"biochemistry\"\
      ] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Biochemistry\"},\n}\n\nlabels[\"biology\"] = {\n\tdisplay = \"[[biology]]\",\n\ttopical_categories = {\"Biology\"},\n}\n\nlabels[\"biotechnology\"] = {\n\tdisplay = \"[[biotechnology]]\"\
      ,\n\ttopical_categories = {\"Biotechnology\"},\n}\n\nlabels[\"birdwatching\"] = {\n\tdisplay = \"[[birdwatching#Noun|birdwatching]]\",\n\ttopical_categories = {\"Birdwatching\"},\n}\n\nlabels[\"blogging\"] = {\n\tdisplay = \"[[blogging#Noun|blogging]]\"\
      ,\n\ttopical_categories = {\"Internet\"},\n}\n\nlabels[\"board games\"] = {\n\tdisplay = \"[[board game]]s\",\n\ttopical_categories = {\"Board games\"},\n}\naliases[\"board game\"] = \"board games\"\n\nlabels[\"board sports\"] = {\n\tdisplay = \"[[boardsport|board\
      \ sports]]\",\n\ttopical_categories = {\"Board sports\"},\n}\n\nlabels[\"bodybuilding\"] = {\n\tdisplay = \"[[bodybuilding#Noun|bodybuilding]]\",\n\ttopical_categories = {\"Bodybuilding\"},\n}\n\nlabels[\"botany\"] = {\n\tdisplay = \"[[botany]]\",\n\t\
      topical_categories = {\"Botany\"},\n}\n\nlabels[\"bowling\"] = {\n\tdisplay = \"[[bowling#Noun|bowling]]\",\n\ttopical_categories = {\"Bowling\"},\n}\n\nlabels[\"boxing\"] = {\n\tdisplay = \"[[boxing#Noun|boxing]]\",\n\ttopical_categories = {\"Boxing\"\
      },\n}\n\nlabels[\"brewing\"] = {\n\tdisplay = \"[[brewing#Noun|brewing]]\",\n\ttopical_categories = {\"Brewing\"},\n}\n\nlabels[\"bridge\"] = {\n\tdisplay = \"[[bridge#English-game|bridge]]\",\n\ttopical_categories = {\"Bridge\"},\n}\n\nlabels[\"broadcasting\"\
      ] = {\n\tdisplay = \"[[broadcasting#Noun|broadcasting]]\",\n\ttopical_categories = {\"Broadcasting\"},\n}\n\nlabels[\"bryology\"] = {\n\tdisplay = \"[[bryology]]\",\n\ttopical_categories = {\"Bryology\"},\n}\n\nlabels[\"Buddhism\"] = {\n\tdisplay = \"\
      [[Buddhism]]\",\n\ttopical_categories = {\"Buddhism\"},\n}\n\nlabels[\"bullfighting\"] = {\n\tdisplay = \"[[bullfighting]]\",\n\ttopical_categories = {\"Bullfighting\"},\n}\n\nlabels[\"business\"] = {\n\tdisplay = \"[[business]]\",\n\ttopical_categories\
      \ = {\"Business\"},\n}\n\nlabels[\"Byzantine Empire\"] = {\n\tdisplay = \"[[Byzantine Empire]]\",\n\ttopical_categories = {\"Byzantine Empire\"},\n}\n\nlabels[\"calculus\"] = {\n\tdisplay = \"[[calculus]]\",\n\ttopical_categories = {\"Calculus\"},\n}\n\
      \nlabels[\"calligraphy\"] = {\n\tdisplay = \"[[calligraphy]]\",\n\ttopical_categories = {\"Calligraphy\"},\n}\n\nlabels[\"Canadian football\"] = {\n\tdisplay = \"[[Canadian football]]\",\n\ttopical_categories = {\"Canadian football\"},\n}\n\nlabels[\"\
      canoeing\"] = {\n\tdisplay = \"[[canoeing#Noun|canoeing]]\",\n\ttopical_categories = {\"Water sports\"},\n}\n\nlabels[\"card games\"] = {\n\tdisplay = \"[[card game]]s\",\n\ttopical_categories = {\"Card games\"},\n}\naliases[\"cards\"] = \"card games\"\
      \naliases[\"playing card\"] = \"card games\"\n\nlabels[\"cardiology\"] = {\n\tdisplay = \"[[cardiology]]\",\n\ttopical_categories = {\"Cardiology\"},\n}\n\nlabels[\"carpentry\"] = {\n\tdisplay = \"[[carpentry]]\",\n\ttopical_categories = {\"Carpentry\"\
      },\n}\n\nlabels[\"cartography\"] = {\n\tdisplay = \"[[cartography]]\",\n\ttopical_categories = {\"Cartography\"},\n}\n\nlabels[\"cartomancy\"] = {\n\tdisplay = \"[[cartomancy]]\",\n\ttopical_categories = {\"Cartomancy\"},\n}\n\nlabels[\"category theory\"\
      ] = {\n\tdisplay = \"[[category theory]]\",\n\ttopical_categories = {\"Category theory\"},\n}\n\nlabels[\"Catholicism\"] = {\n\tdisplay = \"[[Catholicism]]\",\n\ttopical_categories = {\"Catholicism\"},\n}\naliases[\"Catholic\"] = \"Catholicism\"\n\nlabels[\"\
      caving\"] = {\n\tdisplay = \"[[caving#Noun|caving]]\",\n\ttopical_categories = {\"Caving\"},\n}\n\nlabels[\"Celtic mythology\"] = {\n\tdisplay = \"[[Celtic]] [[mythology]]\",\n\ttopical_categories = {\"Celtic mythology\"},\n}\n\nlabels[\"ceramics\"] =\
      \ {\n\tdisplay = \"[[ceramics]]\",\n\ttopical_categories = {\"Ceramics\"},\n}\n\nlabels[\"cheerleading\"] = {\n\tdisplay = \"[[cheerleading#Noun|cheerleading]]\",\n\ttopical_categories = {\"Cheerleading\"},\n}\n\nlabels[\"chemical element\"] = {\n\tdisplay\
      \ = \"[[chemistry]]\",\n\ttopical_categories = {\"Chemical elements\"},\n}\n\nlabels[\"chemical engineering\"] = {\n\tdisplay = \"[[chemical engineering]]\",\n\ttopical_categories = {\"Chemical engineering\"},\n}\n\nlabels[\"chemistry\"] = {\n\tdisplay\
      \ = \"[[chemistry]]\",\n\ttopical_categories = {\"Chemistry\"},\n}\n\nlabels[\"chess\"] = {\n\tdisplay = \"[[chess]]\",\n\ttopical_categories = {\"Chess\"},\n}\n\nlabels[\"Chinese astronomy\"] = {\n\tdisplay = \"[[Chinese]] [[astronomy]]\",\n\ttopical_categories\
      \ = {\"Chinese astronomy\"},\n}\n\nlabels[\"Chinese calligraphy\"] = {\n\tdisplay = \"[[Chinese]] [[calligraphy]]\",\n\ttopical_categories = {\"Calligraphy\"},\n}\n\nlabels[\"Chinese constellation\"] = {\n\tdisplay = \"[[Chinese]] [[astronomy]]\",\n\t\
      topical_categories = {\"Constellations\"},\n}\n\nlabels[\"Chinese folk religion\"] = {\n\tdisplay = \"[[Chinese]] [[folk religion]]\",\n\ttopical_categories = {\"Religion\"},\n}\n\nlabels[\"Chinese linguistics\"] = {\n\tdisplay = \"[[Chinese]] [[linguistics]]\"\
      ,\n\ttopical_categories = {\"Linguistics\"},\n}\n\nlabels[\"Chinese mythology\"] = {\n\tdisplay = \"[[Chinese]] [[mythology]]\",\n\ttopical_categories = {\"Chinese mythology\"},\n}\n\nlabels[\"Chinese philosophy\"] = {\n\tdisplay = \"[[Chinese]] [[philosophy]]\"\
      ,\n\ttopical_categories = {\"Chinese philosophy\"},\n}\n\nlabels[\"Chinese phonetics\"] = {\n\tdisplay = \"[[Chinese]] [[phonetics]]\",\n\ttopical_categories = {\"Phonetics\"},\n}\n\nlabels[\"Chinese religion\"] = {\n\tdisplay = \"[[Chinese]] [[religion]]\"\
      ,\n\ttopical_categories = {\"Religion\"},\n}\n\nlabels[\"Chinese star\"] = {\n\tdisplay = \"[[Chinese]] [[astronomy]]\",\n\ttopical_categories = {\"Stars\"},\n}\n\nlabels[\"Christianity\"] = {\n\tdisplay = \"[[Christianity]]\",\n\ttopical_categories =\
      \ {\"Christianity\"},\n}\naliases[\"christianity\"] = \"Christianity\"\ndeprecated[\"christianity\"] = true\n\nlabels[\"cinematography\"] = {\n\tdisplay = \"[[cinematography]]\",\n\ttopical_categories = {\"Cinematography\"},\n}\naliases[\"filmology\"]\
      \ = \"cinematography\"\n\nlabels[\"cladistics\"] = {\n\tdisplay = \"[[cladistics]]\",\n\ttopical_categories = {\"Systematics\"},\n}\n\nlabels[\"classical mechanics\"] = {\n\tdisplay = \"[[classical mechanics]]\",\n\ttopical_categories = {\"Classical mechanics\"\
      },\n}\n\nlabels[\"classical studies\"] = {\n\tdisplay = \"[[classical studies]]\",\n\ttopical_categories = {\"Classical studies\"},\n}\n\nlabels[\"climatology\"] = {\n\tdisplay = \"[[climatology]]\",\n\ttopical_categories = {\"Climatology\"},\n}\n\nlabels[\"\
      climbing\"] = {\n\tdisplay = \"[[climbing#Noun|climbing]]\",\n\ttopical_categories = {\"Climbing\"},\n}\n\nlabels[\"clinical psychology\"] = {\n\tdisplay = \"[[clinical]] [[psychology]]\",\n\ttopical_categories = {\"Clinical psychology\"},\n}\n\nlabels[\"\
      clothing\"] = {\n\tdisplay = \"[[clothing#Noun|clothing]]\",\n\ttopical_categories = {\"Clothing\"},\n}\n\nlabels[\"color\"] = {\n\tdisplay = \"[[color]]\",\n\ttopical_categories = {\"Colors\"},\n}\n\nlabels[\"colour\"] = {\n   \tdisplay = \"[[colour]]\"\
      ,\n   topical_categories = {\"Colors\"},\n}\n\nlabels[\"combinatorics\"] = {\n\tdisplay = \"[[combinatorics]]\",\n\ttopical_categories = {\"Combinatorics\"},\n}\n\nlabels[\"comedy\"] = {\n\tdisplay = \"[[comedy]]\",\n\ttopical_categories = {\"Comedy\"\
      },\n}\n\nlabels[\"commercial law\"] = {\n\tdisplay = \"[[commercial#Adjective|commercial]] [[law]]\",\n\ttopical_categories = {\"Commercial law\"},\n}\nlabels[\"comics\"] = {\n\tdisplay = \"[[comics]]\",\n\ttopical_categories = {\"Comics\"},\n}\n\nlabels[\"\
      communication\"] = {\n\tdisplay = \"[[communication]]\",\n\ttopical_categories = {\"Communication\"},\n}\naliases[\"communications\"] = \"communication\"\n\nlabels[\"communism\"] = {\n\tdisplay = \"[[communism]]\",\n\ttopical_categories = {\"Communism\"\
      },\n}\naliases[\"Communism\"] = \"communism\"\n\nlabels[\"compilation\"] = {\n\tdisplay = \"[[software]] [[compilation]]\",\n\ttopical_categories = {\"Compilation\"},\n}\n\nlabels[\"complex analysis\"] = {\n\tdisplay = \"[[complex analysis]]\",\n\ttopical_categories\
      \ = {\"Complex analysis\"},\n}\n\nlabels[\"computational linguistics\"] = {\n\tdisplay = \"[[computational linguistics]]\",\n\ttopical_categories = {\"Computational linguistics\"},\n}\n\t\nlabels[\"computer games\"] = {\n\tdisplay = \"[[computer game]]s\"\
      ,\n\ttopical_categories = {\"Video games\"},\n}\n\nlabels[\"computer graphics\"] = {\n\tdisplay = \"[[computer graphics]]\",\n\ttopical_categories = {\"Computer graphics\"},\n}\n\nlabels[\"computer hardware\"] = {\n\tdisplay = \"[[computer]] [[hardware]]\"\
      ,\n\ttopical_categories = {\"Computer hardware\"},\n}\n\nlabels[\"computer languages\"] = {\n\tdisplay = \"[[computer language]]s\",\n\ttopical_categories = {\"Computer languages\"},\n}\naliases[\"computer language\"] = \"computer languages\"\n\nlabels[\"\
      computer science\"] = {\n\tdisplay = \"[[computer science]]\",\n\ttopical_categories = {\"Computer science\"},\n}\naliases[\"comp sci\"] = \"computer science\"\n\nlabels[\"computer security\"] = {\n\tdisplay = \"[[computer security]]\",\n\ttopical_categories\
      \ = {\"Computer security\"},\n}\n\nlabels[\"computing\"] = {\n\tdisplay = \"[[computing#Noun|computing]]\",\n\ttopical_categories = {\"Computing\"},\n}\naliases[\"computer\"] = \"computing\"\naliases[\"computers\"] = \"computing\"\n\nlabels[\"computing\
      \ theory\"] = {\n\tdisplay = \"[[computing#Noun|computing]] [[theory]]\",\n\ttopical_categories = {\"Theory of computing\"},\n}\naliases[\"comptheory\"] = \"computing theory\"\n\nlabels[\"conchology\"] = {\n\tdisplay = \"[[conchology]]\",\n\ttopical_categories\
      \ = {\"Conchology\"},\n}\n\nlabels[\"Confucianism\"] = {\n\tdisplay = \"[[Confucianism]]\",\n\ttopical_categories = {\"Confucianism\"},\n}\n\nlabels[\"construction\"] = {\n\tdisplay = \"[[construction]]\",\n\ttopical_categories = {\"Construction\"},\n\
      }\n\nlabels[\"cooking\"] = {\n\tdisplay = \"[[cooking#Noun|cooking]]\",\n\ttopical_categories = {\"Cooking\"},\n}\naliases[\"culinary\"] = \"cooking\"\naliases[\"cuisine\"] = \"cooking\"\naliases[\"cookery\"] = \"cooking\"\naliases[\"gastronomy\"] = \"\
      cooking\"\n\nlabels[\"copyright\"] = {\n\tdisplay = \"[[copyright]] [[law]]\",\n\ttopical_categories = {\"Copyright\"},\n}\n\nlabels[\"cosmetics\"] = {\n\tdisplay = \"[[cosmetics]]\",\n\ttopical_categories = {\"Cosmetics\"},\n}\naliases[\"cosmetology\"\
      ] = \"cosmetics\"\n\nlabels[\"cribbage\"] = {\n\tdisplay = \"[[cribbage]]\",\n\ttopical_categories = {\"Cribbage\"},\n}\n\nlabels[\"cricket\"] = {\n\tdisplay = \"[[cricket]]\",\n\ttopical_categories = {\"Cricket\"},\n}\n\nlabels[\"crime\"] = {\n\tdisplay\
      \ = \"[[crime]]\",\n\ttopical_categories = {\"Crime\"},\n}\n\nlabels[\"criminal law\"] = {\n\tdisplay = \"[[criminal law]]\",\n\ttopical_categories = {\"Criminal law\"},\n}\n\nlabels[\"criminology\"] = {\n\tdisplay = \"[[criminology]]\",\n\ttopical_categories\
      \ = {\"Criminology\"},\n}\n\nlabels[\"cryptography\"] = {\n\tdisplay = \"[[cryptography]]\",\n\ttopical_categories = {\"Cryptography\"},\n}\n\nlabels[\"cryptozoology\"] = {\n\tdisplay = \"[[cryptozoology]]\",\n\ttopical_categories = {\"Cryptozoology\"\
      },\n}\n\nlabels[\"crystallography\"] = {\n\tdisplay = \"[[crystallography]]\",\n\ttopical_categories = {\"Crystallography\"},\n}\n\nlabels[\"cultural anthropology\"] = {\n\tdisplay = \"[[cultural anthropology]]\",\n\ttopical_categories = {\"Cultural anthropology\"\
      },\n}\n\nlabels[\"curling\"] = {\n\tdisplay = \"[[curling]]\",\n\ttopical_categories = {\"Curling\"},\n}\n\nlabels[\"cybernetics\"] = {\n\tdisplay = \"[[cybernetics]]\",\n\ttopical_categories = {\"Cybernetics\"},\n}\n\nlabels[\"cycle racing\"] = {\n\t\
      display = \"[[w:cycle sport|cycle racing]]\",\n\ttopical_categories = {\"Cycle racing\"},\n}\n\nlabels[\"cycling\"] = {\n\tdisplay = \"[[cycling#Noun|cycling]]\",\n\ttopical_categories = {\"Cycling\"},\n}\n\nlabels[\"cytology\"] = {\n\tdisplay = \"[[cytology]]\"\
      ,\n\ttopical_categories = {\"Cytology\"},\n}\n\nlabels[\"dance\"] = {\n\tdisplay = \"[[dance#Noun|dance]]\",\n\ttopical_categories = {\"Dance\"},\n}\n\nlabels[\"darts\"] = {\n\tdisplay = \"[[darts]]\",\n\ttopical_categories = {\"Darts\"},\n}\n\nlabels[\"\
      data management\"] = {\n\tdisplay = \"[[data management]]\",\n\ttopical_categories = {\"Data management\"},\n}\n\nlabels[\"data modeling\"] = {\n\tdisplay = \"[[data modeling]]\",\n\ttopical_categories = {\"Data modeling\"},\n}\n\nlabels[\"databases\"\
      ] = {\n\tdisplay = \"[[database]]s\",\n\ttopical_categories = {\"Databases\"},\n}\naliases[\"database\"] = \"databases\"\n\nlabels[\"deltiology\"] = {\n\tdisplay = \"[[deltiology]]\",\n\ttopical_categories = {\"Deltiology\"},\n}\n\nlabels[\"demography\"\
      ] = {\n\tdisplay = \"[[demography]]\",\n\ttopical_categories = {\"Demography\"},\n}\n\nlabels[\"demoscene\"] = {\n\ttopical_categories = {\"Demoscene\"},\n}\n\nlabels[\"dentistry\"] = {\n\tdisplay = \"[[dentistry]]\",\n\ttopical_categories = {\"Dentistry\"\
      },\n}\n\nlabels[\"dermatology\"] = {\n\tdisplay = \"[[dermatology]]\",\n\ttopical_categories = {\"Dermatology\"},\n}\n\nlabels[\"design\"] = {\n\tdisplay = \"[[design#Noun|design]]\",\n\ttopical_categories = {\"Design\"},\n}\n\nlabels[\"dice games\"] =\
      \ {\n\tdisplay = \"[[dice game]]s\",\n\ttopical_categories = {\"Dice games\"},\n}\naliases[\"dice\"] = \"dice games\"\n\nlabels[\"dictation\"] = {\n\tdisplay = \"[[dictation]]\",\n\ttopical_categories = {\"Dictation\"},\n}\n\nlabels[\"diplomacy\"] = {\n\
      \tdisplay = \"[[diplomacy]]\",\n\ttopical_categories = {\"Diplomacy\"},\n}\n\nlabels[\"disc golf\"] = {\n\tdisplay = \"[[disc golf]]\",\n\ttopical_categories = {\"Disc golf\"},\n}\n\nlabels[\"divination\"] = {\n\tdisplay = \"[[divination]]\",\n\ttopical_categories\
      \ = {\"Divination\"},\n}\n\nlabels[\"diving\"] = {\n\tdisplay = \"[[diving#Noun|diving]]\",\n\ttopical_categories = {\"Diving\"},\n}\n\nlabels[\"dominoes\"] = {\n\tdisplay = \"[[dominoes]]\",\n\ttopical_categories = {\"Dominoes\"},\n}\n\nlabels[\"drama\"\
      ] = {\n\tdisplay = \"[[drama]]\",\n\ttopical_categories = {\"Drama\"},\n}\n\nlabels[\"dressage\"] = {\n\tdisplay = \"[[dressage]]\",\n\ttopical_categories = {\"Dressage\"},\n}\n\nlabels[\"earth science\"] = {\n\tdisplay = \"[[earth science]]\",\n\ttopical_categories\
      \ = {\"Earth sciences\"},\n}\n\nlabels[\"Eastern Catholicism\"] = {\n\tdisplay = \"[[w:Eastern Catholic Churches|Eastern Catholicism]]\",\n\ttopical_categories = {\"Eastern Catholicism\"},\n}\naliases[\"Eastern Catholic\"] = \"Eastern Catholicism\"\n\n\
      labels[\"Eastern Orthodoxy\"] = {\n\tdisplay = \"[[Eastern Orthodoxy]]\",\n\ttopical_categories = {\"Eastern Orthodoxy\"},\n}\n\nlabels[\"ecclesiastical\"] = {\n\tdisplay = \"[[ecclesiastical]]\",\n\ttopical_categories = {\"Christianity\"},\n}\n\nlabels[\"\
      ecology\"] = {\n\tdisplay = \"[[ecology]]\",\n\ttopical_categories = {\"Ecology\"},\n}\n\nlabels[\"economics\"] = {\n\tdisplay = \"[[economics]]\",\n\ttopical_categories = {\"Economics\"},\n}\n\nlabels[\"education\"] = {\n\tdisplay = \"[[education]]\"\
      ,\n\ttopical_categories = {\"Education\"},\n}\n\nlabels[\"Egyptian mythology\"] = {\n\tdisplay = \"[[Egyptian]] [[mythology]]\",\n\ttopical_categories = {\"Egyptian mythology\"},\n}\n\nlabels[\"Egyptology\"] = {\n\tdisplay = \"[[Egyptology]]\",\n\ttopical_categories\
      \ = {\"Ancient Egypt\"},\n}\n\nlabels[\"electrencephalography\"] = {\n\tdisplay = \"[[electrencephalography]]\",\n\ttopical_categories = {\"Electrencephalography\"},\n}\n\nlabels[\"electrical engineering\"] = {\n\tdisplay = \"[[electrical engineering]]\"\
      ,\n\ttopical_categories = {\"Electrical engineering\"},\n}\n\nlabels[\"electricity\"] = {\n\tdisplay = \"[[electricity]]\",\n\ttopical_categories = {\"Electricity\"},\n}\n\nlabels[\"electrodynamics\"] = {\n\tdisplay = \"[[electrodynamics]]\",\n\ttopical_categories\
      \ = {\"Electrodynamics\"},\n}\n\nlabels[\"electromagnetism\"] = {\n\tdisplay = \"[[electromagnetism]]\",\n\ttopical_categories = {\"Electromagnetism\"},\n}\n\nlabels[\"electronics\"] = {\n\tdisplay = \"[[electronics]]\",\n\ttopical_categories = {\"Electronics\"\
      },\n}\n\nlabels[\"embryology\"] = {\n\tdisplay = \"[[embryology]]\",\n\ttopical_categories = {\"Embryology\"},\n}\n\nlabels[\"emergency medicine\"] = {\n\tdisplay = \"[[emergency medicine]]\",\n\ttopical_categories = {\"Emergency medicine\"},\n}\naliases[\"\
      emergency\"] = \"emergency medicine\"\n\nlabels[\"endocrinology\"] = {\n\tdisplay = \"[[endocrinology]]\",\n\ttopical_categories = {\"Endocrinology\"},\n}\n\nlabels[\"engineering\"] = {\n\tdisplay = \"[[engineering#Noun|engineering]]\",\n\ttopical_categories\
      \ = {\"Engineering\"},\n}\n\nlabels[\"enterprise engineering\"] = {\n\tdisplay = \"[[enterprise engineering]]\",\n\ttopical_categories = {\"Enterprise engineering\"},\n}\n\nlabels[\"entomology\"] = {\n\tdisplay = \"[[entomology]]\",\n\ttopical_categories\
      \ = {\"Entomology\"},\n}\n\nlabels[\"epidemiology\"] = {\n\tdisplay = \"[[epidemiology]]\",\n\ttopical_categories = {\"Epidemiology\"},\n}\n\nlabels[\"epistemology\"] = {\n\tdisplay = \"[[epistemology]]\",\n\ttopical_categories = {\"Epistemology\"},\n\
      }\n\nlabels[\"equestrianism\"] = {\n\tdisplay = \"[[equestrianism]]\",\n\ttopical_categories = {\"Equestrianism\"},\n}\n\nlabels[\"espionage\"] = {\n\tdisplay = \"[[espionage]]\",\n\ttopical_categories = {\"Espionage\"},\n}\n\nlabels[\"ethics\"] = {\n\t\
      display = \"[[ethics]]\",\n\ttopical_categories = {\"Ethics\"},\n}\n\nlabels[\"ethnography\"] = {\n\tdisplay = \"[[ethnography]]\",\n\ttopical_categories = {\"Ethnography\"},\n}\n\nlabels[\"European folklore\"] = {\n\tdisplay = \"[[European]] [[folklore]]\"\
      ,\n\ttopical_categories = {\"European folklore\"},\n}\n\nlabels[\"evolutionary theory\"] = {\n\tdisplay = \"[[evolutionary theory]]\",\n\ttopical_categories = {\"Evolutionary theory\"},\n}\n\nlabels[\"exercise\"] = {\n\tdisplay = \"[[exercise|exercise\
      \ (sport)]]\",\n\ttopical_categories = {\"Exercise\"},\n}\n\nlabels[\"falconry\"] = {\n\tdisplay = \"[[falconry]]\",\n\ttopical_categories = {\"Falconry\"},\n}\n\nlabels[\"fantasy\"] = {\n\tdisplay = \"[[fantasy]]\",\n\ttopical_categories = {\"Fantasy\"\
      },\n}\n\nlabels[\"fascism\"] = {\n\tdisplay = \"[[fascism]]\",\n\ttopical_categories = {\"Fascism\"},\n}\n\nlabels[\"fashion\"] = {\n\tdisplay = \"[[fashion]]\",\n\ttopical_categories = {\"Fashion\"},\n}\n\nlabels[\"feminism\"] = {\n\tdisplay = \"[[feminism]]\"\
      ,\n\ttopical_categories = {\"Feminism\"},\n}\n\nlabels[\"fencing\"] = {\n\tdisplay = \"[[fencing#Noun|fencing]]\",\n\ttopical_categories = {\"Fencing\"},\n}\n\nlabels[\"fiction\"] = {\n\tdisplay = \"[[fiction]]\",\n\ttopical_categories = {\"Fiction\"},\n\
      }\n\nlabels[\"field hockey\"] = {\n\tdisplay = \"[[field hockey]]\",\n\ttopical_categories = {\"Field hockey\"},\n}\n\nlabels[\"figure skating\"] = {\n\tdisplay = \"[[figure skating]]\",\n\ttopical_categories = {\"Figure skating\"},\n}\n\nlabels[\"film\"\
      ] = {\n\tdisplay = \"[[film#Noun|film]]\",\n\ttopical_categories = {\"Film\"},\n}\naliases[\"cinema\"] = \"film\"\n\nlabels[\"finance\"] = {\n\tdisplay = \"[[finance#Noun|finance]]\",\n\ttopical_categories = {\"Finance\"},\n}\n\nlabels[\"Finnish mythology\"\
      ] = {\n\tdisplay = \"[[Finnish]] [[mythology]]\",\n\ttopical_categories = {\"Finnish mythology\"},\n}\n\nlabels[\"firearms\"] = {\n\tdisplay = \"[[firearm]]s\",\n\ttopical_categories = {\"Firearms\"}\n}\naliases[\"firearm\"] = \"firearms\"\n\nlabels[\"\
      firefighting\"] = {\n\ttopical_categories = {\"Firefighting\"},\n}\n\nlabels[\"fishing\"] = {\n\tdisplay = \"[[fishing#Noun|fishing]]\",\n\ttopical_categories = {\"Fishing\"},\n}\naliases[\"angling\"] = \"fishing\"\n\nlabels[\"fluid dynamics\"] = {\n\t\
      display = \"[[fluid dynamics]]\",\n\ttopical_categories = {\"Fluid dynamics\"},\n}\n\nlabels[\"fluid mechanics\"] = {\n\tdisplay = \"[[fluid mechanics]]\",\n\ttopical_categories = {\"Mechanics\"},\n}\n\nlabels[\"folklore\"] = {\n\tdisplay = \"[[folklore]]\"\
      ,\n\ttopical_categories = {\"Folklore\"},\n}\n\nlabels[\"forestry\"] = {\n\ttopical_categories = {\"Forestry\"},\n}\n\nlabels[\"freemasonry\"] = {\n\ttopical_categories = {\"Freemasonry\"},\n}\n\nlabels[\"functional analysis\"] = {\n\ttopical_categories\
      \ = {\"Functional analysis\"},\n}\n\nlabels[\"furniture\"] = {\n\ttopical_categories = {\"Furniture\"},\n}\n\nlabels[\"fuzzy logic\"] = {\n\ttopical_categories = {\"Fuzzy logic\"},\n}\n\nlabels[\"Gaelic football\"] = {\n\tdisplay = \"[[Gaelic football]]\"\
      ,\n\ttopical_categories = {\"Gaelic football\"},\n}\n\nlabels[\"gambling\"] = {\n\tdisplay = \"[[gambling#Noun|gambling]]\",\n\ttopical_categories = {\"Gambling\"},\n}\n\nlabels[\"game of go\"] = {\n\tdisplay = \"[[Go|game of Go]]\",\n\ttopical_categories\
      \ = {\"Go\"},\n}\n\nlabels[\"game theory\"] = {\n\tdisplay = \"[[game theory]]\",\n\ttopical_categories = {\"Game theory\"},\n}\n\nlabels[\"games\"] = {\n\tdisplay = \"[[game]]s\",\n\ttopical_categories = {\"Games\"},\n}\naliases[\"game\"] = \"games\"\n\
      \nlabels[\"gaming\"] = {\n\tdisplay = \"[[gaming#Noun|gaming]]\",\n\ttopical_categories = {\"Gaming\"},\n}\n\nlabels[\"genealogy\"] = {\n\tdisplay = \"[[genealogy]]\",\n\ttopical_categories = {\"Genealogy\"},\n}\n\nlabels[\"genetics\"] = {\n\tdisplay =\
      \ \"[[genetics]]\",\n\ttopical_categories = {\"Genetics\"},\n}\n\nlabels[\"geography\"] = {\n\tdisplay = \"[[geography]]\",\n\ttopical_categories = {\"Geography\"},\n}\n\nlabels[\"geology\"] = {\n\tdisplay = \"[[geology]]\",\n\ttopical_categories = {\"\
      Geology\"},\n}\n\nlabels[\"geometry\"] = {\n\tdisplay = \"[[geometry]]\",\n\ttopical_categories = {\"Geometry\"},\n}\n\nlabels[\"geomorphology\"] = {\n\tdisplay = \"[[geomorphology]]\",\n\ttopical_categories = {\"Geomorphology\"},\n}\n\nlabels[\"gerontology\"\
      ] = {\n\tdisplay = \"[[gerontology]]\",\n\ttopical_categories = {\"Gerontology\"},\n}\n\nlabels[\"glassblowing\"] = {\n\tdisplay = \"[[glassblowing]]\",\n\ttopical_categories = {\"Glassblowing\"},\n}\n\nlabels[\"Gnosticism\"] = {\n\tdisplay = \"[[Gnosticism]]\"\
      ,\n\ttopical_categories = {\"Gnosticism\"},\n}\naliases[\"gnosticism\"] = \"Gnosticism\"\n\nlabels[\"go\"] = {\n\tdisplay = \"[[go]]\",\n\ttopical_categories = {\"Go\"},\n}\naliases[\"Go\"] = \"go\"\n\nlabels[\"golf\"] = {\n\tdisplay = \"[[golf]]\",\n\t\
      topical_categories = {\"Golf\"},\n}\n\nlabels[\"government\"] = {\n\tdisplay = \"[[government]]\",\n\ttopical_categories = {\"Government\"},\n}\n\nlabels[\"grammar\"] = {\n\tdisplay = \"[[grammar]]\",\n\ttopical_categories = {\"Grammar\"},\n}\n\nlabels[\"\
      grammatical mood\"] = {\n\tdisplay = \"[[grammar]]\",\n\ttopical_categories = {\"Grammatical moods\"},\n}\n\nlabels[\"graph theory\"] = {\n\tdisplay = \"[[graph theory]]\",\n\ttopical_categories = {\"Graph theory\"},\n}\n\nlabels[\"graphic design\"] =\
      \ {\n\tdisplay = \"[[graphic design]]\",\n\ttopical_categories = {\"Graphic design\"},\n}\n\nlabels[\"graphical user interface\"] = {\n\tdisplay = \"[[graphical user interface]]\",\n\ttopical_categories = {\"Graphical user interface\"},\n}\naliases[\"\
      GUI\"] = \"graphical user interface\"\n\nlabels[\"Greek mythology\"] = {\n\tdisplay = \"[[Greek]] [[mythology]]\",\n\ttopical_categories = {\"Greek mythology\"},\n}\naliases[\"greekmyth\"] = \"Greek mythology\"\ndeprecated[\"greekmyth\"] = true\n\nlabels[\"\
      group theory\"] = {\n\tdisplay = \"[[group theory]]\",\n\ttopical_categories = {\"Group theory\"},\n}\n\nlabels[\"gun mechanisms\"] = {\n\tdisplay = \"[[firearm]]s\",\n\ttopical_categories = {\"Gun mechanisms\"}\n}\naliases[\"firearm mechanism\"] = \"\
      Gun mechanisms\"\naliases[\"firearm mechanisms\"] = \"Gun mechanisms\"\naliases[\"gun mechanism\"] = \"Gun mechanisms\"\n\nlabels[\"gymnastics\"] = {\n\tdisplay = \"[[gymnastics]]\",\n\ttopical_categories = {\"Gymnastics\"},\n}\n\nlabels[\"gynaecology\"\
      ] = {\n\tdisplay = \"[[gynaecology]]\",\n\ttopical_categories = {\"Gynaecology\"},\n}\naliases[\"gynecology\"] = \"gynaecology\"\n\nlabels[\"handball\"] = {\n\tdisplay = \"[[handball]]\",\n\ttopical_categories = {\"Handball\"},\n}\n\nlabels[\"Hawaiian\
      \ mythology\"] = {\n\tdisplay = \"[[Hawaiian]] [[mythology]]\",\n\ttopical_categories = {\"Hawaiian mythology\"},\n}\n\nlabels[\"healthcare\"] = {\n\tdisplay = \"[[healthcare]]\",\n\ttopical_categories = {\"Healthcare\"},\n}\n\nlabels[\"hematology\"] =\
      \ {\n\tdisplay = \"[[hematology]]\",\n\ttopical_categories = {\"Hematology\"},\n}\naliases[\"haematology\"] = \"hematology\"\n\nlabels[\"heraldry\"] = {\n\tdisplay = \"[[heraldry]]\",\n\ttopical_categories = {\"Heraldry\"},\n}\n\nlabels[\"herbalism\"]\
      \ = {\n\tdisplay = \"[[herbalism]]\",\n\ttopical_categories = {\"Herbalism\"},\n}\n\nlabels[\"herpetology\"] = {\n\tdisplay = \"[[herpetology]]\",\n\ttopical_categories = {\"Herpetology\"},\n}\n\nlabels[\"Hinduism\"] = {\n\tdisplay = \"[[Hinduism]]\",\n\
      \ttopical_categories = {\"Hinduism\"},\n}\n\nlabels[\"historiography\"] = {\n\tdisplay = \"[[historiography]]\",\n\ttopical_categories = {\"Historiography\"},\n}\n\nlabels[\"history\"] = {\n\tdisplay = \"[[history]]\",\n\ttopical_categories = {\"History\"\
      },\n}\n\nlabels[\"hockey\"] = {\n\tdisplay = \"[[field hockey]] or [[ice hockey]]\",\n\ttopical_categories = {\"Field hockey\", \"Ice hockey\"},\n}\n\nlabels[\"homeopathy\"] = {\n\tdisplay = \"[[homeopathy]]\",\n\ttopical_categories = {\"Homeopathy\"},\n\
      }\n\nlabels[\"horse racing\"] = {\n\tdisplay = \"[[horse racing]]\",\n\ttopical_categories = {\"Horse racing\"},\n}\n\nlabels[\"horticulture\"] = {\n\tdisplay = \"[[horticulture]]\",\n\ttopical_categories = {\"Horticulture\"},\n}\naliases[\"gardening\"\
      ] = \"horticulture\"\n\nlabels[\"HTML\"] = {\n\tdisplay = \"[[Hypertext Markup Language|HTML]]\",\n\ttopical_categories = {\"HTML\"},\n}\n\nlabels[\"human resources\"] = {\n\tdisplay = \"[[human resources]]\",\n\ttopical_categories = {\"Human resources\"\
      },\n}\n\nlabels[\"humanities\"] = {\n\tdisplay = \"[[humanities]]\",\n\ttopical_categories = {\"Humanities\"},\n}\n\nlabels[\"hunting\"] = {\n\tdisplay = \"[[hunting#Noun|hunting]]\",\n\ttopical_categories = {\"Hunting\"},\n}\n\nlabels[\"hurling\"] = {\n\
      \tdisplay = \"[[hurling#Noun|hurling]]\",\n\ttopical_categories = {\"Hurling\"},\n}\n\nlabels[\"hydrology\"] = {\n\tdisplay = \"[[hydrology]]\",\n\ttopical_categories = {\"Hydrology\"},\n}\n\nlabels[\"ice hockey\"] = {\n\tdisplay = \"[[ice hockey]]\",\n\
      \ttopical_categories = {\"Ice hockey\"},\n}\n\nlabels[\"ichthyology\"] = {\n\tdisplay = \"[[ichthyology]]\",\n\ttopical_categories = {\"Ichthyology\"},\n}\n\nlabels[\"immunochemistry\"] = {\n\tdisplay = \"[[immunochemistry]]\",\n\ttopical_categories =\
      \ {\"Immunochemistry\"},\n}\n\nlabels[\"immunology\"] = {\n\tdisplay = \"[[immunology]]\",\n\ttopical_categories = {\"Immunology\"},\n}\n\nlabels[\"import/export\"] = {\n\tdisplay = \"[[import#Noun|import]]/[[export#Noun|export]]\",\n\ttopical_categories\
      \ = {\"Import/export\"},\n}\n\nlabels[\"Indo-European studies\"] = {\n\tdisplay = \"[[Indo-European studies]]\",\n\ttopical_categories = {\"Indo-European studies\"},\n}\naliases[\"indo-european studies\"] = \"Indo-European studies\"\n\nlabels[\"information\
      \ science\"] = {\n\tdisplay = \"[[information science]]\",\n\ttopical_categories = {\"Information science\"},\n}\n\nlabels[\"information theory\"] = {\n\tdisplay = \"[[information theory]]\",\n\ttopical_categories = {\"Information theory\"},\n}\n\nlabels[\"\
      inorganic chemistry\"] = {\n\tdisplay = \"[[inorganic chemistry]]\",\n\ttopical_categories = {\"Inorganic chemistry\"},\n}\n\nlabels[\"insurance\"] = {\n\tdisplay = \"[[insurance]]\",\n\ttopical_categories = {\"Insurance\"},\n}\n\nlabels[\"international\
      \ law\"] = {\n\tdisplay = \"[[international law]]\",\n\ttopical_categories = {\"International law\"},\n}\n\nlabels[\"Internet\"] = {\n\tdisplay = \"[[Internet]]\",\n\ttopical_categories = {\"Internet\"},\n}\naliases[\"internet\"] = \"Internet\"\naliases[\"\
      online\"] = \"Internet\"\n\nlabels[\"Iranian mythology\"] = {\n\tdisplay = \"[[Iranian]] [[mythology]]\",\n\ttopical_categories = {\"Iranian mythology\"},\n}\n\nlabels[\"Irish mythology\"] = {\n\tdisplay = \"[[Irish]] [[mythology]]\",\n\ttopical_categories\
      \ = {\"Irish mythology\"},\n}\n\nlabels[\"Islam\"] = {\n\tdisplay = \"[[Islam]]\",\n\ttopical_categories = {\"Islam\"},\n}\naliases[\"islam\"] = \"Islam\"\ndeprecated[\"islam\"] = true\n\nlabels[\"Jainism\"] = {\n\t\tdisplay = \"[[Jainism]]\",\n\ttopical_categories\
      \ = {\"Jainism\"},\n}\n\nlabels[\"Japanese mythology\"] = {\n\tdisplay = \"[[Japanese]] [[mythology]]\",\n\ttopical_categories = {\"Japanese mythology\"},\n}\n\nlabels[\"Java programming language\"] = {\n\tdisplay = \"[[w:Java (programming language)|Java\
      \ programming language]]\",\n\ttopical_categories = {\"Java programming language\"},\n}\naliases[\"JavaPL\"] = \"Java programming language\"\naliases[\"Java PL\"] = \"Java programming language\"\n\nlabels[\"jazz\"] = {\n\tdisplay = \"[[jazz#Noun|jazz]]\"\
      ,\n\ttopical_categories = {\"Jazz\"},\n}\n\nlabels[\"Jewish law\"] = {\n\tdisplay = \"[[Jewish]] [[law]]\",\n\ttopical_categories = {\"Jewish law\"},\n}\naliases[\"Halacha\"] = \"Jewish law\"\naliases[\"Halachah\"] = \"Jewish law\"\naliases[\"Halakha\"\
      ] = \"Jewish law\"\naliases[\"Halakhah\"] = \"Jewish law\"\naliases[\"halacha\"] = \"Jewish law\"\naliases[\"halachah\"] = \"Jewish law\"\naliases[\"halakha\"] = \"Jewish law\"\naliases[\"halakhah\"] = \"Jewish law\"\naliases[\"jewish law\"] = \"Jewish\
      \ law\"\naliases[\"Jewish Law\"] = \"Jewish law\"\n\nlabels[\"journalism\"] = {\n\tdisplay = \"[[journalism]]\",\n\ttopical_categories = {\"Mass media\"},\n}\n\nlabels[\"Judaism\"] = {\n\tdisplay = \"[[Judaism]]\",\n\ttopical_categories = {\"Judaism\"\
      },\n}\n\nlabels[\"judo\"] = {\n\tdisplay = \"[[judo]]\",\n\ttopical_categories = {\"Judo\"},\n}\n\nlabels[\"juggling\"] = {\n\tdisplay = \"[[juggling#Noun|juggling]]\",\n\ttopical_categories = {\"Juggling\"},\n}\n\nlabels[\"knitting\"] = {\n\tdisplay =\
      \ \"[[knitting#Noun|knitting]]\",\n\ttopical_categories = {\"Knitting\"},\n}\n\nlabels[\"lacrosse\"] = {\n\tdisplay = \"[[lacrosse]]\",\n\ttopical_categories = {\"Lacrosse\"},\n}\n\nlabels[\"law\"] = {\n\tdisplay = \"[[law]]\",\n\ttopical_categories =\
      \ {\"Law\"},\n}\naliases[\"legal\"] = \"law\"\n\nlabels[\"law enforcement\"] = {\n\tdisplay = \"[[law enforcement]]\",\n\ttopical_categories = {\"Law enforcement\"},\n}\naliases[\"police\"] = \"law enforcement\"\naliases[\"policing\"] = \"law enforcement\"\
      \n\nlabels[\"letterpress\"] = {\n\tdisplay = \"[[letterpress]] [[typography]]\",\n\ttopical_categories = {\"Typography\"},\n}\naliases[\"metal type\"] = \"letterpress\"\naliases[\"metal typesetting\"] = \"letterpress\"\n\nlabels[\"lexicography\"] = {\n\
      \tdisplay = \"[[lexicography]]\",\n\ttopical_categories = {\"Lexicography\"},\n}\n\nlabels[\"LGBT\"] = {\n\tdisplay = \"[[LGBT]]\",\n\ttopical_categories = {\"LGBT\"},\n}\n\nlabels[\"liberalism\"] = {\n\tdisplay = \"[[liberalism]]\",\n\ttopical_categories\
      \ = {\"Liberalism\"},\n}\n\nlabels[\"library science\"] = {\n\tdisplay = \"[[library science]]\",\n\ttopical_categories = {\"Library science\"},\n}\n\nlabels[\"lichenology\"] = {\n\tdisplay = \"[[lichenology]]\",\n\ttopical_categories = {\"Lichenology\"\
      },\n}\n\nlabels[\"limnology\"] = {\n\tdisplay = \"[[limnology]]\",\n\ttopical_categories = {\"Ecology\"},\n}\n\nlabels[\"lipid\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Lipids\"},\n}\n\nlabels[\"linear algebra\"] = {\n\tdisplay\
      \ = \"[[linear algebra]]\",\n\ttopical_categories = {\"Linear algebra\"},\n}\naliases[\"vector\"] = \"linear algebra\"\naliases[\"vector algebra\"] = \"linear algebra\"\ndeprecated[\"vector\"] = true\n\nlabels[\"linguistic morphology\"] = {\n\tdisplay\
      \ = \"[[linguistic]] [[morphology]]\",\n\ttopical_categories = {\"Linguistic morphology\"},\n}\naliases[\"morphology\"] = \"linguistic morphology\"\ndeprecated[\"morphology\"] = true\n\nlabels[\"linguistics\"] = {\n\tdisplay = \"[[linguistics]]\",\n\t\
      topical_categories = {\"Linguistics\"},\n}\n\nlabels[\"literature\"] = {\n\tdisplay = \"[[literature]]\",\n\ttopical_categories = {\"Literature\"},\n}\n\nlabels[\"logic\"] = {\n\tdisplay = \"[[logic]]\",\n\ttopical_categories = {\"Logic\"},\n}\n\nlabels[\"\
      luge\"] = {\n\tdisplay = \"[[luge]]\",\n\ttopical_categories = {\"Luge\"},\n}\n\nlabels[\"machining\"] = {\n\tdisplay = \"[[machining#Noun|machining]]\",\n\ttopical_categories = {\"Machining\"},\n}\n\nlabels[\"mahjong\"] = {\n\tdisplay = \"[[mahjong]]\"\
      ,\n\ttopical_categories = {\"Mahjong\"},\n}\n\nlabels[\"malacology\"] = {\n\tdisplay = \"[[malacology]]\",\n\ttopical_categories = {\"Malacology\"},\n}\n\nlabels[\"mammalogy\"] = {\n\tdisplay = \"[[mammalogy]]\",\n\ttopical_categories = {\"Mammalogy\"\
      },\n}\n\nlabels[\"management\"] = {\n\tdisplay = \"[[management]]\",\n\ttopical_categories = {\"Management\"},\n}\n\nlabels[\"manga\"] = {\n\tdisplay = \"[[manga]]\",\n\ttopical_categories = {\"Japanese fiction\"},\n}\n\nlabels[\"manufacturing\"] = {\n\
      \tdisplay = \"[[manufacturing#Noun|manufacturing]]\",\n\ttopical_categories = {\"Manufacturing\"},\n}\naliases[\"industry\"] = \"manufacturing\"\ndeprecated[\"industry\"] = true\n\nlabels[\"marching\"] = {\n\tdisplay = \"[[marching#Noun|marching]]\",\n\
      \ttopical_categories = {\"Marching\"},\n}\n\nlabels[\"marine biology\"] = {\n\tdisplay = \"[[marine biology]]\",\n\ttopical_categories = {\"Marine biology\"},\n}\naliases[\"coral science\"] = \"marine biology\"\n\nlabels[\"marketing\"] = {\n\tdisplay =\
      \ \"[[marketing#Noun|marketing]]\",\n\ttopical_categories = {\"Marketing\"},\n}\n\nlabels[\"martial arts\"] = {\n\tdisplay = \"[[martial arts]]\",\n\ttopical_categories = {\"Martial arts\"},\n}\n\nlabels[\"Marxism\"] = {\n\tdisplay = \"[[Marxism]]\",\n\
      \ttopical_categories = {\"Marxism\"},\n}\n\nlabels[\"massage\"] = {\n\tdisplay = \"[[massage]]\",\n\ttopical_categories = {\"Massage\"},\n}\n\nlabels[\"materials science\"] = {\n\tdisplay = \"[[materials science]]\",\n\ttopical_categories = {\"Materials\
      \ science\"},\n}\n\nlabels[\"mathematical analysis\"] = {\n\tdisplay = \"[[mathematical analysis]]\",\n\ttopical_categories = {\"Mathematical analysis\"},\n}\naliases[\"analysis\"] = \"mathematical analysis\"\n\nlabels[\"mathematics\"] = {\n\tdisplay =\
      \ \"[[mathematics]]\",\n\ttopical_categories = {\"Mathematics\"},\n}\naliases[\"math\"] = \"mathematics\"\naliases[\"maths\"] = \"mathematics\"\n\nlabels[\"mechanical engineering\"] = {\n\tdisplay = \"[[mechanical engineering]]\",\n\ttopical_categories\
      \ = {\"Mechanical engineering\"},\n}\n\nlabels[\"mechanics\"] = {\n\tdisplay = \"[[mechanics]]\",\n\ttopical_categories = {\"Mechanics\"},\n}\n\nlabels[\"media\"] = {\n\tdisplay = \"[[media]]\",\n\ttopical_categories = {\"Media\"},\n}\n\nlabels[\"mediaeval\
      \ folklore\"] = {\n\tdisplay = \"[[mediaeval]] [[folklore]]\",\n\ttopical_categories = {\"European folklore\"},\n}\naliases[\"medieval folklore\"] = \"mediaeval folklore\"\n\nlabels[\"medical genetics\"] = {\n\tdisplay = \"[[medical]] [[genetics]]\",\n\
      \ttopical_categories = {\"Medical genetics\"},\n}\n\nlabels[\"medical sign\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories = {\"Medical signs and symptoms\"},\n}\n\nlabels[\"medicine\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories\
      \ = {\"Medicine\"},\n}\naliases[\"medical\"] = \"medicine\"\n\nlabels[\"Mesopotamian mythology\"] = {\n\tdisplay = \"[[Mesopotamian]] [[mythology]]\",\n\ttopical_categories = {\"Mesopotamian mythology\"},\n}\n\nlabels[\"metadata\"] = {\n\tdisplay = \"\
      [[metadata]]\",\n\ttopical_categories = {\"Data management\"},\n}\n\nlabels[\"metallurgy\"] = {\n\tdisplay = \"[[metallurgy]]\",\n\ttopical_categories = {\"Metallurgy\"},\n}\n\nlabels[\"metaphysics\"] = {\n\tdisplay = \"[[metaphysics]]\",\n\ttopical_categories\
      \ = {\"Metaphysics\"},\n}\n\nlabels[\"meteorology\"] = {\n\tdisplay = \"[[meteorology]]\",\n\ttopical_categories = {\"Meteorology\"},\n}\n\nlabels[\"metrology\"] = {\n\tdisplay = \"[[metrology]]\",\n\ttopical_categories = {\"Metrology\"},\n}\n\nlabels[\"\
      microbiology\"] = {\n\tdisplay = \"[[microbiology]]\",\n\ttopical_categories = {\"Microbiology\"},\n}\n\nlabels[\"microelectronics\"] = {\n\tdisplay = \"[[microelectronics]]\",\n\ttopical_categories = {\"Microelectronics\"},\n}\n\nlabels[\"microscopy\"\
      ] = {\n\tdisplay = \"[[microscopy]]\",\n\ttopical_categories = {\"Microscopy\"},\n}\n\nlabels[\"military\"] = {\n\tdisplay = \"[[military]]\",\n\ttopical_categories = {\"Military\"},\n}\n\nlabels[\"mineralogy\"] = {\n\tdisplay = \"[[mineralogy]]\",\n\t\
      topical_categories = {\"Mineralogy\"},\n}\n\nlabels[\"mining\"] = {\n\tdisplay = \"[[mining#Noun|mining]]\",\n\ttopical_categories = {\"Mining\"},\n}\n\nlabels[\"molecular biology\"] = {\n\tdisplay = \"[[molecular biology]]\",\n\ttopical_categories = {\"\
      Molecular biology\"},\n}\n\nlabels[\"monarchy\"] = {\n\tdisplay = \"[[monarchy]]\",\n\ttopical_categories = {\"Monarchy\"},\n}\n\nlabels[\"money\"] = {\n\tdisplay = \"[[money]]\",\n\ttopical_categories = {\"Money\"},\n}\n\nlabels[\"Mormonism\"] = {\n\t\
      display = \"[[Mormonism]]\",\n\ttopical_categories = {\"Mormonism\"},\n}\n\nlabels[\"motorcycling\"] = {\n\tdisplay = \"[[motorcycling#Noun|motorcycling]]\",\n\ttopical_categories = {\"Motorcycles\"},\n}\n\nlabels[\"motor racing\"] = {\n\tdisplay = \"\
      [[motor racing]]\",\n\ttopical_categories = {\"Motor racing\"},\n}\naliases[\"motor sport\"] = \"motor racing\"\n\nlabels[\"music\"] = {\n\tdisplay = \"[[music]]\",\n\ttopical_categories = {\"Music\"},\n}\n\nlabels[\"mycology\"] = {\n\tdisplay = \"[[mycology]]\"\
      ,\n\ttopical_categories = {\"Mycology\"},\n}\n\nlabels[\"mythology\"] = {\n\tdisplay = \"[[mythology]]\",\n\ttopical_categories = {\"Mythology\"},\n}\n\nlabels[\"nanotechnology\"] = {\n\tdisplay = \"[[nanotechnology]]\",\n\ttopical_categories = {\"Nanotechnology\"\
      },\n}\n\nlabels[\"narratology\"] = {\n\tdisplay = \"[[narratology]]\",\n\ttopical_categories = {\"Narratology\"},\n}\n\nlabels[\"nautical\"] = {\n\tdisplay = \"[[nautical]]\",\n\ttopical_categories = {\"Nautical\"},\n}\n\nlabels[\"navigation\"] = {\n\t\
      display = \"[[navigation]]\",\n\ttopical_categories = {\"Navigation\"},\n}\n\nlabels[\"Nazism\"] = { -- but also this is often used to indicate Nazi-used jargon; cf \"white supremacist ideology\"\n\tdisplay = \"[[w:Nazism|Nazism]]\",\n\ttopical_categories\
      \ = {\"Nazism\"},\n}\naliases[\"Nazi\"] = \"Nazism\"\naliases[\"nazi\"] = \"Nazism\"\naliases[\"nazism\"] = \"Nazism\"\naliases[\"neo-Nazism\"] = \"Nazism\"\naliases[\"neo-nazism\"] = \"Nazism\"\naliases[\"neo-Nazi\"] = \"Nazism\"\naliases[\"neo-nazi\"\
      ] = \"Nazism\"\naliases[\"neoNazism\"] = \"Nazism\"\naliases[\"neoNazi\"] = \"Nazism\"\naliases[\"neonazism\"] = \"Nazism\"\naliases[\"neonazi\"] = \"Nazism\"\n\nlabels[\"nematology\"] = {\n\tdisplay = \"[[nematology]]\",\n\ttopical_categories = {\"Zoology\"\
      },\n}\n\nlabels[\"netball\"] = {\n\tdisplay = \"[[netball]]\",\n\ttopical_categories = {\"Netball\"},\n}\n\nlabels[\"networking\"] = {\n\tdisplay = \"[[networking#Noun|networking]]\",\n\ttopical_categories = {\"Networking\"},\n}\n\nlabels[\"neuroanatomy\"\
      ] = {\n\tdisplay = \"[[neuroanatomy]]\",\n\ttopical_categories = {\"Neuroanatomy\"},\n}\n\nlabels[\"neurology\"] = {\n\tdisplay = \"[[neurology]]\",\n\ttopical_categories = {\"Neurology\"},\n}\n\nlabels[\"neuroscience\"] = {\n\tdisplay = \"[[neuroscience]]\"\
      ,\n\ttopical_categories = {\"Neuroscience\"},\n}\n\nlabels[\"neurosurgery\"] = {\n\tdisplay = \"[[neurosurgery]]\",\n\ttopical_categories = {\"Neurosurgery\"},\n}\n\nlabels[\"newspapers\"] = {\n\tdisplay = \"[[newspaper]]s\",\n\ttopical_categories = {\"\
      Newspapers\"},\n}\n\nlabels[\"Norse mythology\"] = {\n\tdisplay = \"[[Norse]] [[mythology]]\",\n\ttopical_categories = {\"Norse mythology\"},\n}\n\nlabels[\"nuclear physics\"] = {\n\tdisplay = \"[[nuclear physics]]\",\n\ttopical_categories = {\"Nuclear\
      \ physics\"},\n}\n\nlabels[\"number theory\"] = {\n\tdisplay = \"[[number theory]]\",\n\ttopical_categories = {\"Number theory\"},\n}\n\nlabels[\"numismatics\"] = {\n\tdisplay = \"[[numismatics]]\",\n\ttopical_categories = {\"Currency\"},\n}\naliases[\"\
      currency\"] = \"numismatics\"\ndeprecated[\"currency\"] = true\n\nlabels[\"nutrition\"] = {\n\tdisplay = \"[[nutrition]]\",\n\ttopical_categories = {\"Nutrition\"},\n}\n\nlabels[\"object-oriented programming\"] = {\n\tdisplay = \"[[w:Object-oriented programming|object-oriented\
      \ programming]]\",\n\ttopical_categories = {\"Object-oriented programming\"},\n}\naliases[\"object-oriented\"] = \"object-oriented programming\"\n\nlabels[\"obstetrics\"] = {\n\tdisplay = \"[[obstetrics]]\",\n\ttopical_categories = {\"Obstetrics\"},\n\
      }\naliases[\"obstetric\"] = \"obstetrics\"\n\nlabels[\"occult\"] = {\n\tdisplay = \"[[occult]]\",\n\ttopical_categories = {\"Occult\"},\n}\n\nlabels[\"oceanography\"] = {\n\tdisplay = \"[[oceanography]]\",\n\ttopical_categories = {\"Oceanography\"},\n\
      }\n\nlabels[\"oenology\"] = {\n\tdisplay = \"[[oenology]]\",\n\ttopical_categories = {\"Oenology\"},\n}\n\nlabels[\"oil industry\"] = {\n\tdisplay = \"[[w:Petroleum industry|oil industry]]\",\n\ttopical_categories = {\"Oil industry\"},\n}\naliases[\"oil\
      \ drilling\"] = \"oil industry\"\n\nlabels[\"oncology\"] = {\n\tdisplay = \"[[oncology]]\",\n\ttopical_categories = {\"Oncology\"},\n}\n\nlabels[\"online gaming\"] = {\n\tdisplay = \"[[online]] [[gaming#Noun|gaming]]\",\n\ttopical_categories = {\"Video\
      \ games\"},\n}\naliases[\"online games\"] = \"online gaming\"\naliases[\"MMO\"] = \"online gaming\"\naliases[\"MMORPG\"] = \"online gaming\"\n\nlabels[\"opera\"] = {\n\tdisplay = \"[[opera]]\",\n\ttopical_categories = {\"Opera\"},\n}\n\nlabels[\"operating\
      \ systems\"] = {\n\tdisplay = \"[[operating system]]s\",\n\ttopical_categories = {\"Software\"},\n}\n\nlabels[\"ophthalmology\"] = {\n\tdisplay = \"[[ophthalmology]]\",\n\ttopical_categories = {\"Ophthalmology\"},\n}\n\nlabels[\"optics\"] = {\n\tdisplay\
      \ = \"[[optics]]\",\n\ttopical_categories = {\"Optics\"},\n}\n\nlabels[\"organic chemistry\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Organic chemistry\"},\n}\n\nlabels[\"ornithology\"] = {\n\tdisplay = \"[[ornithology]]\"\
      ,\n\ttopical_categories = {\"Ornithology\"},\n}\n\nlabels[\"orthodontics\"] = {\n\tdisplay = \"[[orthodontics]]\",\n\ttopical_categories = {\"Dentistry\"},\n}\n\nlabels[\"orthography\"] = {\n\tdisplay = \"[[orthography]]\",\n\ttopical_categories = {\"\
      Orthography\"},\n}\n\nlabels[\"paganism\"] = {\n\tdisplay = \"[[paganism]]\",\n\ttopical_categories = {\"Paganism\"},\n}\naliases[\"pagan\"] = \"paganism\"\naliases[\"neopagan\"] = \"paganism\"\naliases[\"neopaganism\"] = \"paganism\"\naliases[\"neo-pagan\"\
      ] = \"paganism\"\naliases[\"neo-paganism\"] = \"paganism\"\n\nlabels[\"pain\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories = {\"Pain\"},\n}\n\nlabels[\"paintball\"] = {\n\tdisplay = \"[[paintball]]\",\n\ttopical_categories = {\"Paintball\"\
      },\n}\n\nlabels[\"painting\"] = {\n\tdisplay = \"[[painting#Noun|painting]]\",\n\ttopical_categories = {\"Painting\"},\n}\n\nlabels[\"palaeography\"] = {\n\tdisplay = \"[[palaeography]]\",\n\ttopical_categories = {\"Palaeography\"},\n}\naliases[\"paleography\"\
      ] = \"palaeography\"\n\nlabels[\"paleontology\"] = {\n\tdisplay = \"[[paleontology]]\",\n\ttopical_categories = {\"Paleontology\"},\n}\naliases[\"palaeontology\"] = \"paleontology\"\n\nlabels[\"palmistry\"] = {\n\tdisplay = \"[[palmistry]]\",\n\ttopical_categories\
      \ = {\"Palmistry\"},\n}\n\nlabels[\"palynology\"] = {\n\tdisplay = \"[[palynology]]\",\n\ttopical_categories = {\"Palynology\"},\n}\n\nlabels[\"parapsychology\"] = {\n\tdisplay = \"[[parapsychology]]\",\n\ttopical_categories = {\"Parapsychology\"},\n}\n\
      \nlabels[\"particle physics\"] = {\n\tdisplay = \"[[particle physics]]\",\n\ttopical_categories = {\"Particle physics\"},\n}\n\nlabels[\"pasteurisation\"] = {\n\tdisplay = \"[[pasteurisation]]\",\n\ttopical_categories = {\"Pasteurisation\"},\n}\n\nlabels[\"\
      patent law\"] = {\n\tdisplay = \"[[patent#Noun|patent]] [[law]]\",\n\ttopical_categories = {\"Patent law\"},\n}\naliases[\"patents\"] = \"patent law\"\n\nlabels[\"pathology\"] = {\n\tdisplay = \"[[pathology]]\",\n\ttopical_categories = {\"Pathology\"},\n\
      }\n\nlabels[\"pensions\"] = {\n\tdisplay = \"[[pension]]s\",\n\ttopical_categories = {\"Pensions\"},\n}\n\nlabels[\"pesäpallo\"] = {\n\tdisplay = \"[[pesäpallo]]\",\n\ttopical_categories = {\"Pesäpallo\"},\n}\naliases[\"pesapallo\"] = \"pesäpallo\"\n\n\
      labels[\"petrochemistry\"] = {\n\tdisplay = \"[[petrochemistry]]\",\n\ttopical_categories = {\"Petrochemistry\"},\n}\n\nlabels[\"petrology\"] = {\n\tdisplay = \"[[petrology]]\",\n\ttopical_categories = {\"Petrology\"},\n}\n\nlabels[\"pharmacology\"] =\
      \ {\n\tdisplay = \"[[pharmacology]]\",\n\ttopical_categories = {\"Pharmacology\"},\n}\n\nlabels[\"pharmacy\"] = {\n\tdisplay = \"[[pharmacy]]\",\n\ttopical_categories = {\"Pharmacy\"},\n}\n\nlabels[\"pharyngology\"] = {\n\tdisplay = \"[[pharyngology]]\"\
      ,\n\ttopical_categories = {\"Pharyngology\"},\n}\n\nlabels[\"philately\"] = {\n\tdisplay = \"[[philately]]\",\n\ttopical_categories = {\"Philately\"},\n}\n\nlabels[\"philosophy\"] = {\n\tdisplay = \"[[philosophy]]\",\n\ttopical_categories = {\"Philosophy\"\
      },\n}\n\nlabels[\"phonetics\"] = {\n\tdisplay = \"[[phonetics]]\",\n\ttopical_categories = {\"Phonetics\"},\n}\n\nlabels[\"phonology\"] = {\n\tdisplay = \"[[phonology]]\",\n\ttopical_categories = {\"Phonology\"},\n}\n\nlabels[\"photography\"] = {\n\tdisplay\
      \ = \"[[photography]]\",\n\ttopical_categories = {\"Photography\"},\n}\n\nlabels[\"phrenology\"] = {\n\tdisplay = \"[[phrenology]]\",\n\ttopical_categories = {\"Phrenology\"},\n}\n\nlabels[\"physical chemistry\"] = {\n\tdisplay = \"[[physical chemistry]]\"\
      ,\n\ttopical_categories = {\"Physical chemistry\"},\n}\n\nlabels[\"physics\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Physics\"},\n}\n\nlabels[\"physiology\"] = {\n\tdisplay = \"[[physiology]]\",\n\ttopical_categories = {\"Physiology\"\
      },\n}\n\nlabels[\"phytopathology\"] = {\n\tdisplay = \"[[phytopathology]]\",\n\ttopical_categories = {\"Phytopathology\"},\n}\n\nlabels[\"pinball\"] = {\n\tdisplay = \"[[pinball]]\",\n\ttopical_categories = {\"Pinball\"},\n}\n\nlabels[\"planetology\"]\
      \ = {\n\tdisplay = \"[[planetology]]\",\n\ttopical_categories = {\"Planetology\"},\n}\n\nlabels[\"poetry\"] = {\n\tdisplay = \"[[poetry]]\",\n\ttopical_categories = {\"Poetry\"},\n}\n\nlabels[\"Pokémon\"] = {\n\tdisplay = \"[[w:Pokémon|Pokémon]]\",\n\t\
      topical_categories = {\"Pokémon\"},\n}\n\nlabels[\"poker\"] = {\n\tdisplay = \"[[poker]]\",\n\ttopical_categories = {\"Poker\"},\n}\n\nlabels[\"poker slang\"] = {\n\tdisplay = \"[[poker]] [[slang]]\",\n\ttopical_categories = {\"Poker\"},\n}\n\nlabels[\"\
      political science\"] = {\n\tdisplay = \"[[political science]]\",\n\ttopical_categories = {\"Political science\"},\n}\n\nlabels[\"politics\"] = {\n\tdisplay = \"[[politics]]\",\n\ttopical_categories = {\"Politics\"},\n}\naliases[\"political\"] = \"politics\"\
      \n\nlabels[\"polymer science\"] = {\n\tdisplay = \"[[polymer]] [[science]]\",\n\ttopical_categories = {\"Polymer science\"},\n}\n\nlabels[\"pornography\"] = {\n\tdisplay = \"[[pornography]]\",\n\ttopical_categories = {\"Pornography\"},\n}\n\nlabels[\"\
      Portuguese folklore\"] = {\n\tdisplay = \"[[Portuguese#Adjective|Portuguese]] [[folklore]]\",\n\ttopical_categories = {\"European folklore\"},\n}\n\nlabels[\"pottery\"] = {\n\tdisplay = \"[[pottery]]\",\n\ttopical_categories = {\"Ceramics\"},\n}\n\nlabels[\"\
      pragmatics\"] = {\n\tdisplay = \"[[pragmatics]]\",\n\ttopical_categories = {\"Pragmatics\"},\n}\n\nlabels[\"printing\"] = {\n\tdisplay = \"[[printing#Noun|printing]]\",\n\ttopical_categories = {\"Printing\"},\n}\n\nlabels[\"probability theory\"] = {\n\t\
      display = \"[[probability theory]]\",\n\ttopical_categories = {\"Probability theory\"},\n}\n\nlabels[\"programming\"] = {\n\tdisplay = \"[[programming#Noun|programming]]\",\n\ttopical_categories = {\"Programming\"},\n}\naliases[\"computer programming\"\
      ] = \"programming\"\n\nlabels[\"property law\"] = {\n\tdisplay = \"[[property law]]\",\n\ttopical_categories = {\"Property law\"},\n}\n\nlabels[\"prosody\"] = {\n\tdisplay = \"[[prosody]]\",\n\ttopical_categories = {\"Prosody\"},\n}\n\nlabels[\"Protestantism\"\
      ] = {\n\tdisplay = \"[[Protestantism]]\",\n\ttopical_categories = {\"Protestantism\"},\n}\n\nlabels[\"pseudoscience\"] = {\n\tdisplay = \"[[pseudoscience]]\",\n\ttopical_categories = {\"Pseudoscience\"},\n}\n\nlabels[\"psychiatry\"] = {\n\tdisplay = \"\
      [[psychiatry]]\",\n\ttopical_categories = {\"Psychiatry\"},\n}\n\nlabels[\"psychoanalysis\"] = {\n\tdisplay = \"[[psychoanalysis]]\",\n\ttopical_categories = {\"Psychoanalysis\"},\n}\n\nlabels[\"psychology\"] = {\n\tdisplay = \"[[psychology]]\",\n\ttopical_categories\
      \ = {\"Psychology\"},\n}\n\nlabels[\"psychotherapy\"] = {\n\tdisplay = \"[[psychotherapy]]\",\n\ttopical_categories = {\"Psychotherapy\"},\n}\n\nlabels[\"publishing\"] = {\n\tdisplay = \"[[publishing#Noun|publishing]]\",\n\ttopical_categories = {\"Publishing\"\
      },\n}\n\nlabels[\"pyrotechnics\"] = {\n\tdisplay = \"[[pyrotechnics]]\",\n\ttopical_categories = {\"Pyrotechnics\"},\n}\n\nlabels[\"Quakerism\"] = {\n\ttopical_categories = {\"Quakerism\"},\n}\n\nlabels[\"quantum mechanics\"] = {\n\ttopical_categories\
      \ = {\"Quantum mechanics\"},\n}\naliases[\"quantum physics\"] = \"quantum mechanics\"\naliases[\"quantum\"] = \"quantum mechanics\"\ndeprecated[\"quantum\"] = true\n\n-- TODO: What kind of topic is \"radiation\"? Is it specific kinds of radiation? That\
      \ would be a set-type category.\nlabels[\"radiation\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Radiation\"},\n}\n\nlabels[\"radio\"] = {\n\tdisplay = \"[[radio]]\",\n\ttopical_categories = {\"Radio\"},\n}\n\nlabels[\"Raëlism\"] = {\n\
      \tdisplay = \"[[Raëlism]]\",\n\ttopical_categories = {\"Raëlism\"},\n}\n\nlabels[\"rail transport\"] = {\n\tdisplay = \"[[rail transport]]\",\n\ttopical_categories = {\"Rail transportation\"},\n}\naliases[\"rail\"] = \"rail transport\"\naliases[\"railroading\"\
      ] = \"rail transport\"\naliases[\"railroads\"] = \"rail transport\"\n\nlabels[\"Rastafari\"] = {\n\tdisplay = \"[[Rastafari]]\",\n\ttopical_categories = {\"Rastafari\"},\n}\naliases[\"Rasta\"] = \"Rastafari\"\naliases[\"rasta\"] = \"Rastafari\"\naliases[\"\
      Rastafarian\"] = \"Rastafari\"\naliases[\"rastafarian\"] = \"Rastafari\"\naliases[\"Rastafariamism\"] = \"Rastafari\"\n\nlabels[\"real estate\"] = {\n\tdisplay = \"[[real estate]]\",\n\ttopical_categories = {\"Real estate\"},\n}\n\nlabels[\"real tennis\"\
      ] = {\n\tdisplay = \"[[real tennis]]\",\n\ttopical_categories = {\"Tennis\"},\n}\n\nlabels[\"recreational mathematics\"] = {\n\tdisplay = \"[[recreational mathematics]]\",\n\ttopical_categories = {\"Mathematics\"},\n}\n\nlabels[\"regular expressions\"\
      ] = {\n\tdisplay = \"[[regular expression]]s\",\n\ttopical_categories = {\"Regular expressions\"},\n}\naliases[\"regex\"] = \"regular expressions\"\n\nlabels[\"relativity\"] = {\n\tdisplay = \"[[relativity]]\",\n\ttopical_categories = {\"Relativity\"},\n\
      }\n\nlabels[\"religion\"] = {\n\tdisplay = \"[[religion]]\",\n\ttopical_categories = {\"Religion\"},\n}\n\nlabels[\"rhetoric\"] = {\n\tdisplay = \"[[rhetoric]]\",\n\ttopical_categories = {\"Rhetoric\"},\n}\n\nlabels[\"road transport\"] = {\n\tdisplay =\
      \ \"[[w:road transport|road transport]]\",\n\ttopical_categories = {\"Road transport\"},\n}\n\nlabels[\"robotics\"] = {\n\tdisplay = \"[[robotics]]\",\n\ttopical_categories = {\"Robotics\"},\n}\n\nlabels[\"rock paper scissors\"] = {\n\ttopical_categories\
      \ = {\"Rock paper scissors\"},\n}\n\nlabels[\"role-playing games\"] = {\n\tdisplay = \"[[role-playing game]]s\",\n\ttopical_categories = {\"Role-playing games\"},\n}\naliases[\"role playing games\"] = \"role-playing games\"\naliases[\"RPG\"] = \"role-playing\
      \ games\"\n\nlabels[\"roller derby\"] = {\n\tdisplay = \"[[roller derby]]\",\n\ttopical_categories = {\"Roller derby\"},\n}\n\nlabels[\"Roman Catholicism\"] = {\n\tdisplay = \"[[Roman Catholicism]]\",\n\ttopical_categories = {\"Roman Catholicism\"},\n\
      }\naliases[\"Roman Catholic\"] = \"Roman Catholicism\"\n\nlabels[\"Roman mythology\"] = {\n\tdisplay = \"[[Roman]] [[mythology]]\",\n\ttopical_categories = {\"Roman mythology\"},\n}\n\nlabels[\"Roman numerals\"] = {\n\tdisplay = \"[[Roman numeral]]s\"\
      ,\n\ttopical_categories = {\"Roman numerals\"},\n}\n\nlabels[\"roofing\"] = {\n\tdisplay = \"[[roofing#Noun|roofing]]\",\n\ttopical_categories = {\"Roofing\"},\n}\n\nlabels[\"rosiculture\"] = {\n\tdisplay = \"[[rosiculture]]\",\n\ttopical_categories =\
      \ {\"Rosiculture\"},\n}\n\nlabels[\"rowing\"] = {\n\tdisplay = \"[[rowing#Noun|rowing]]\",\n\ttopical_categories = {\"Rowing\"},\n}\n\nlabels[\"Rubik's Cube\"] = {\n\tdisplay = \"[[Rubik's Cube]]\",\n\ttopical_categories = {\"Rubik's Cube\"},\n}\naliases[\"\
      Rubik's cubes\"] = \"Rubik's Cube\"\n\nlabels[\"rugby\"] = {\n\tdisplay = \"[[rugby]]\",\n\ttopical_categories = {\"Rugby\"},\n}\n\nlabels[\"rugby league\"] = {\n\tdisplay = \"[[rugby league]]\",\n\ttopical_categories = {\"Rugby league\"},\n}\n\nlabels[\"\
      rugby union\"] = {\n\tdisplay = \"[[rugby union]]\",\n\ttopical_categories = {\"Rugby union\"},\n}\n\nlabels[\"sailing\"] = {\n\tdisplay = \"[[sailing#Noun|sailing]]\",\n\ttopical_categories = {\"Sailing\"},\n}\n\nlabels[\"science fiction\"] = {\n\tdisplay\
      \ = \"[[science fiction]]\",\n\ttopical_categories = {\"Science fiction\"},\n}\naliases[\"scifi\"] = \"science fiction\"\naliases[\"sci fi\"] = \"science fiction\"\n\nlabels[\"sciences\"] = {\n\tdisplay = \"[[sciences]]\",\n\ttopical_categories = {\"Sciences\"\
      },\n}\naliases[\"science\"] = \"sciences\"\naliases[\"scientific\"] = \"sciences\"\n\nlabels[\"Scientology\"] = {\n\tdisplay = \"[[Scientology]]\",\n\ttopical_categories = {\"Scientology\"},\n}\n\nlabels[\"Scouting\"] = {\n\tdisplay = \"[[Scouting]]\"\
      ,\n\ttopical_categories = {\"Scouting\"},\n}\naliases[\"scouting\"] = \"Scouting\"\n\nlabels[\"scrapbooks\"] = {\n\tdisplay = \"[[scrapbook]]s\",\n\ttopical_categories = {\"Scrapbooks\"},\n}\n\nlabels[\"sculpture\"] = {\n\tdisplay = \"[[sculpture]]\",\n\
      \ttopical_categories = {\"Sculpture\"},\n}\n\nlabels[\"seduction community\"] = {\n\tdisplay = \"[[w:Seduction community|seduction community]]\",\n\ttopical_categories = {\"Seduction community\"},\n}\n\nlabels[\"seismology\"] = {\n\tdisplay = \"[[seismology]]\"\
      ,\n\ttopical_categories = {\"Seismology\"},\n}\n\nlabels[\"semantics\"] = {\n\tdisplay = \"[[semantics]]\",\n\ttopical_categories = {\"Semantics\"},\n}\n\nlabels[\"semiotics\"] = {\n\tdisplay = \"[[semiotics]]\",\n\ttopical_categories = {\"Semiotics\"\
      },\n}\n\nlabels[\"set theory\"] = {\n\tdisplay = \"[[set theory]]\",\n\ttopical_categories = {\"Set theory\"},\n}\n\nlabels[\"sewing\"] = {\n\tdisplay = \"[[sewing#Noun|sewing]]\",\n\ttopical_categories = {\"Sewing\"},\n}\n\nlabels[\"sexology\"] = {\n\t\
      display = \"[[sexology]]\",\n\ttopical_categories = {\"Sexology\"},\n}\n\nlabels[\"sexuality\"] = {\n\tdisplay = \"[[sexuality]]\",\n\ttopical_categories = {\"Sexuality\"},\n}\n\nlabels[\"shamanism\"] = {\n\tdisplay = \"[[shamanism]]\",\n\ttopical_categories\
      \ = {\"Shamanism\"},\n}\naliases[\"Shamanism\"] = \"shamanism\"\n\nlabels[\"Shinto\"] = {\n\tdisplay = \"[[Shinto]]\",\n\ttopical_categories = {\"Shinto\"},\n}\n\nlabels[\"shipping\"] = {\n\tdisplay = \"[[shipping#Noun|shipping]]\",\n\ttopical_categories\
      \ = {\"Shipping\"},\n}\n\nlabels[\"shogi\"] = {\n\tdisplay = \"[[shogi]]\",\n\ttopical_categories = {\"Shogi\"},\n}\n\nlabels[\"signal processing\"] = {\n\tdisplay = \"[[w:Signal processing|signal processing]]\",\n\ttopical_categories = {\"Signal processing\"\
      },\n}\n\nlabels[\"Sikhism\"] = {\n\tdisplay = \"[[Sikhism]]\",\n\ttopical_categories = {\"Sikhism\"},\n}\n\nlabels[\"singing\"] = {\n\tdisplay = \"[[singing#Noun|singing]]\",\n\ttopical_categories = {\"Singing\"},\n}\n\nlabels[\"skateboarding\"] = {\n\t\
      display = \"[[skateboarding#Noun|skateboarding]]\",\n\ttopical_categories = {\"Skateboarding\"},\n}\n\nlabels[\"skating\"] = {\n\tdisplay = \"[[skating#Noun|skating]]\",\n\ttopical_categories = {\"Skating\"},\n}\n\nlabels[\"skiing\"] = {\n\tdisplay = \"\
      [[skiing#Noun|skiing]]\",\n\ttopical_categories = {\"Skiing\"},\n}\n\nlabels[\"smoking\"] = {\n\tdisplay = \"[[smoking#Noun|smoking]]\",\n\ttopical_categories = {\"Smoking\"},\n}\n\nlabels[\"snooker\"] = {\n\tdisplay = \"[[snooker#Noun|snooker]]\",\n\t\
      topical_categories = {\"Snooker\"},\n}\n\nlabels[\"snowboarding\"] = {\n\tdisplay = \"[[snowboarding#Noun|snowboarding]]\",\n\ttopical_categories = {\"Snowboarding\"},\n}\n\nlabels[\"soccer\"] = {\n\tdisplay = \"[[soccer]]\",\n\ttopical_categories = {\"\
      Football (soccer)\"},\n}\naliases[\"football\"] = \"soccer\"\naliases[\"association football\"] = \"soccer\"\n\nlabels[\"social sciences\"] = {\n\tdisplay = \"[[social sciences]]\",\n\ttopical_categories = {\"Social sciences\"},\n}\naliases[\"social science\"\
      ] = \"social sciences\"\n\nlabels[\"socialism\"] = {\n\tdisplay = \"[[socialism]]\",\n\ttopical_categories = {\"Socialism\"},\n}\n\nlabels[\"sociolinguistics\"] = {\n\tdisplay = \"[[sociolinguistics]]\",\n\ttopical_categories = {\"Sociolinguistics\"},\n\
      }\n\nlabels[\"sociology\"] = {\n\tdisplay = \"[[sociology]]\",\n\ttopical_categories = {\"Sociology\"},\n}\n\nlabels[\"softball\"] = {\n\tdisplay = \"[[softball]]\",\n\ttopical_categories = {\"Softball\"},\n}\n\nlabels[\"software\"] = {\n\tdisplay = \"\
      [[software]]\",\n\ttopical_categories = {\"Software\"},\n}\n\nlabels[\"software architecture\"] = {\n\tdisplay = \"[[software architecture]]\",\n\ttopical_categories = {\"Software engineering\", \"Programming\"},\n}\n\nlabels[\"software engineering\"]\
      \ = {\n\tdisplay = \"[[software engineering]]\",\n\ttopical_categories = {\"Software engineering\"},\n}\n\nlabels[\"soil science\"] = {\n\tdisplay = \"[[soil science]]\",\n\ttopical_categories = {\"Soil science\"},\n}\n\nlabels[\"sound\"] = {\n\tdisplay\
      \ = \"[[sound#Noun|sound]]\",\n\ttopical_categories = {\"Sound\"},\n}\n\nlabels[\"sound engineering\"] = {\n\tdisplay = \"[[sound engineering]]\",\n\ttopical_categories = {\"Sound engineering\"},\n}\n\nlabels[\"Soviet Union\"] = {\n\tdisplay = \"[[Soviet\
      \ Union]]\",\n\ttopical_categories = {\"Soviet Union\"},\n}\naliases[\"USSR\"] = \"Soviet Union\"\n\nlabels[\"space flight\"] = {\n\tdisplay = \"[[space flight]]\",\n\ttopical_categories = {\"Space\"},\n}\n\nlabels[\"space science\"] = {\n\tdisplay = \"\
      [[space science]]\",\n\ttopical_categories = {\"Space\"},\n}\naliases[\"space\"] = \"space science\"\n\nlabels[\"spectroscopy\"] = {\n\tdisplay = \"[[spectroscopy]]\",\n\ttopical_categories = {\"Spectroscopy\"},\n}\n\nlabels[\"spiritualism\"] = {\n\tdisplay\
      \ = \"[[spiritualism]]\",\n\ttopical_categories = {\"Spiritualism\"},\n}\n\nlabels[\"sports\"] = {\n\tdisplay = \"[[sports]]\",\n\ttopical_categories = {\"Sports\"},\n}\naliases[\"sport\"] = \"sports\"\n\nlabels[\"squash\"] = {\n\tdisplay = \"[[squash#Noun|squash\
      \ (sport)]]\",\n\ttopical_categories = {\"Squash\"},\n}\n\nlabels[\"statistics\"] = {\n\tdisplay = \"[[statistics]]\",\n\ttopical_categories = {\"Statistics\"},\n}\n\nlabels[\"Star Wars\"] = {\n\tdisplay = \"[[Star Wars]]\",\n\ttopical_categories = {\"\
      Star Wars\"},\n}\n\nlabels[\"stock market\"] = {\n\tdisplay = \"[[stock market]]\",\n\ttopical_categories = {\"Stock market\"},\n}\n\nlabels[\"stock ticker symbol\"] = {\n\tdisplay = \"[[stock ticker symbol]]\",\n\ttopical_categories = {\"Stock symbols\
      \ for companies\"},\n}\naliases[\"stock symbol\"] = \"stock ticker symbol\"\n\nlabels[\"subculture\"] = {\n\tdisplay = \"[[subculture]]\",\n\ttopical_categories = {\"Culture\"},\n}\n\nlabels[\"sumo\"] = {\n\tdisplay = \"[[sumo]]\",\n\ttopical_categories\
      \ = {\"Sumo\"},\n}\n\nlabels[\"surfing\"] = {\n\tdisplay = \"[[surfing#Noun|surfing]]\",\n\ttopical_categories = {\"Surfing\"},\n}\n\nlabels[\"surgery\"] = {\n\tdisplay = \"[[surgery]]\",\n\ttopical_categories = {\"Surgery\"},\n}\n\nlabels[\"surveying\"\
      ] = {\n\tdisplay = \"[[surveying#Noun|surveying]]\",\n\ttopical_categories = {\"Surveying\"},\n}\n\nlabels[\"sushi\"] = {\n\tdisplay = \"[[sushi]]\",\n\ttopical_categories = {\"Sushi\"},\n}\n\nlabels[\"swimming\"] = {\n\tdisplay = \"[[swimming#Noun|swimming]]\"\
      ,\n\ttopical_categories = {\"Swimming\"},\n}\n\nlabels[\"swords\"] = {\n\tdisplay = \"[[sword]]s\",\n\ttopical_categories = {\"Swords\"},\n}\n\nlabels[\"systematics\"] = {\n\tdisplay = \"[[systematics]]\",\n\ttopical_categories = {\"Systematics\"},\n}\n\
      \nlabels[\"systems engineering\"] = {\n\tdisplay = \"[[systems engineering]]\",\n\ttopical_categories = {\"Systems engineering\"},\n}\n\nlabels[\"systems theory\"] = {\n\tdisplay = \"[[systems theory]]\",\n\ttopical_categories = {\"Systems theory\"},\n\
      }\n\nlabels[\"table tennis\"] = {\n\tdisplay = \"[[table tennis]]\",\n\ttopical_categories = {\"Table tennis\"},\n}\n\nlabels[\"Taoism\"] = {\n\tdisplay = \"[[Taoism]]\",\n\ttopical_categories = {\"Taoism\"},\n}\naliases[\"Daoism\"] = \"Taoism\"\n\nlabels[\"\
      tarot\"] = {\n\tdisplay = \"[[tarot]]\",\n\ttopical_categories = {\"Cartomancy\"},\n}\n\nlabels[\"taxation\"] = {\n\tdisplay = \"[[taxation]]\",\n\ttopical_categories = {\"Law\"},\n}\naliases[\"tax\"] = \"taxation\"\naliases[\"taxes\"] = \"taxation\"\n\
      \nlabels[\"taxonomy\"] = {\n\tdisplay = \"[[taxonomy]]\",\n\ttopical_categories = {\"Taxonomy\"},\n}\n\nlabels[\"technology\"] = {\n\tdisplay = \"[[technology]]\",\n\ttopical_categories = {\"Technology\"},\n}\n\nlabels[\"telecommunications\"] = {\n\tdisplay\
      \ = \"[[telecommunications]]\",\n\ttopical_categories = {\"Telecommunications\"},\n}\naliases[\"telecommunication\"] = \"telecommunications\"\naliases[\"telecom\"] = \"telecommunications\"\n\nlabels[\"telegraphy\"] = {\n\tdisplay = \"[[telegraphy]]\",\n\
      \ttopical_categories = {\"Telegraphy\"},\n}\n\nlabels[\"telephony\"] = {\n\tdisplay = \"[[telephony]]\",\n\ttopical_categories = {\"Telephony\"},\n}\naliases[\"telephone\"] = \"telephony\"\naliases[\"telephones\"] = \"telephony\"\n\nlabels[\"television\"\
      ] = {\n\tdisplay = \"[[television]]\",\n\ttopical_categories = {\"Television\"},\n}\naliases[\"TV\"] = \"television\"\n\nlabels[\"tennis\"] = {\n\tdisplay = \"[[tennis]]\",\n\ttopical_categories = {\"Tennis\"},\n}\n\nlabels[\"teratology\"] = {\n\tdisplay\
      \ = \"[[teratology]]\",\n\ttopical_categories = {\"Teratology\"},\n}\n\nlabels[\"Tetris\"] = {\n\tdisplay = \"[[Tetris]]\",\n\ttopical_categories = {\"Tetris\"},\n}\n\nlabels[\"textiles\"] = {\n\tdisplay = \"[[textiles]]\",\n\ttopical_categories = {\"\
      Textiles\"},\n}\n\nlabels[\"theater\"] = {\n\tdisplay = \"[[theater]]\",\n\ttopical_categories = {\"Theater\"},\n}\naliases[\"theatre\"] = \"theater\"\n\nlabels[\"theology\"] = {\n\tdisplay = \"[[theology]]\",\n\ttopical_categories = {\"Theology\"},\n\
      }\n\nlabels[\"thermodynamics\"] = {\n\tdisplay = \"[[thermodynamics]]\",\n\ttopical_categories = {\"Thermodynamics\"},\n}\n\nlabels[\"Tibetan Buddhism\"] = {\n\tdisplay = \"[[Tibetan Buddhism]]\",\n\ttopical_categories = {\"Buddhism\"},\n}\n\nlabels[\"\
      topology\"] = {\n\tdisplay = \"[[topology]]\",\n\ttopical_categories = {\"Topology\"},\n}\n\nlabels[\"tourism\"] = {\n\tdisplay = \"[[tourism]]\",\n\ttopical_categories = {\"Tourism\"},\n}\n\nlabels[\"toxicology\"] = {\n\tdisplay = \"[[toxicology]]\",\n\
      \ttopical_categories = {\"Toxicology\"},\n}\n\nlabels[\"trading\"] = {\n\tdisplay = \"[[trading#Noun|trading]]\",\n\ttopical_categories = {\"Trading\"},\n}\n\nlabels[\"trading cards\"] = {\n\tdisplay = \"[[trading card]]s\",\n\ttopical_categories = {\"\
      Trading cards\"},\n}\n\nlabels[\"traditional Chinese medicine\"] = {\n\tdisplay = \"[[traditional Chinese medicine]]\",\n\ttopical_categories = {\"Traditional Chinese medicine\"},\n}\naliases[\"TCM\"] = \"traditional Chinese medicine\"\naliases[\"Chinese\
      \ medicine\"] = \"traditional Chinese medicine\"\n\nlabels[\"transgender\"] = {\n\tdisplay = \"[[transgender]]\",\n\ttopical_categories = {\"Transgender\"},\n}\n\nlabels[\"translation studies\"] = {\n\tdisplay = \"[[translation studies]]\",\n\ttopical_categories\
      \ = {\"Translation studies\"},\n}\n\nlabels[\"transport\"] = {\n\tdisplay = \"[[transport]]\",\n\ttopical_categories = {\"Transport\"},\n}\naliases[\"transportation\"] = \"transport\"\n\nlabels[\"traumatology\"] = {\n\tdisplay = \"[[traumatology]]\",\n\
      \ttopical_categories = {\"Emergency medicine\"},\n}\n\nlabels[\"travel\"] = {\n\tdisplay = \"[[travel]]\",\n\ttopical_categories = {\"Travel\"},\n}\n\nlabels[\"trigonometry\"] = {\n\tdisplay = \"[[trigonometry]]\",\n\ttopical_categories = {\"Trigonometry\"\
      },\n}\n\nlabels[\"two-up\"] = {\n\tdisplay = \"[[two-up]]\",\n\ttopical_categories = {\"Two-up\"},\n}\n\nlabels[\"typography\"] = {\n\tdisplay = \"[[typography]]\",\n\ttopical_categories = {\"Typography\"},\n}\naliases[\"typesetting\"] = \"typography\"\
      \n\nlabels[\"ufology\"] = {\n\tdisplay = \"[[ufology]]\",\n\ttopical_categories = {\"Ufology\"},\n}\n\nlabels[\"underwater diving\"] = {\n\tdisplay = \"[[underwater]] [[diving#Noun|diving]]\",\n\ttopical_categories = {\"Underwater diving\"},\n}\naliases[\"\
      scuba\"] = \"underwater diving\"\naliases[\"scuba diving\"] = \"underwater diving\"\n\nlabels[\"Valentinianism\"] = {\n\tdisplay = \"[[w:Valentinianism|Valentinianism]]\",\n\ttopical_categories = {\"Valentinianism\"},\n}\naliases[\"valentinianism\"] =\
      \ \"Valentinianism\"\n\nlabels[\"vegetable\"] = {\n\tdisplay = \"[[vegetable]]\",\n\ttopical_categories = {\"Vegetables\"},\n}\naliases[\"vegetables\"] = \"vegetable\"\n\nlabels[\"vehicles\"] = {\n\tdisplay = \"[[vehicle]]s\",\n\ttopical_categories = {\"\
      Vehicles\"},\n}\naliases[\"vehicle\"] = \"vehicles\"\n\nlabels[\"veterinary medicine\"] = {\n\tdisplay = \"[[veterinary medicine]]\",\n\ttopical_categories = {\"Veterinary medicine\"},\n}\n\nlabels[\"video games\"] = {\n\tdisplay = \"[[video game]]s\"\
      ,\n\ttopical_categories = {\"Video games\"},\n}\naliases[\"video gaming\"] = \"video games\"\n\nlabels[\"virology\"] = {\n\tdisplay = \"[[virology]]\",\n\ttopical_categories = {\"Virology\"},\n}\n\nlabels[\"viticulture\"] = {\n\tdisplay = \"[[viticulture]]\"\
      ,\n\ttopical_categories = {\"Horticulture\", \"Wine\"},\n}\n\nlabels[\"volcanology\"] = {\n\tdisplay = \"[[volcanology]]\",\n\ttopical_categories = {\"Volcanology\"},\n}\naliases[\"vulcanology\"] = \"volcanology\"\n\nlabels[\"volleyball\"] = {\n\tdisplay\
      \ = \"[[volleyball]]\",\n\ttopical_categories = {\"Volleyball\"},\n}\n\nlabels[\"voodoo\"] = {\n\tdisplay = \"[[voodoo]]\",\n\ttopical_categories = {\"Voodoo\"},\n}\n\nlabels[\"weather\"] = {\n\ttopical_categories = {\"Weather\"},\n}\n\nlabels[\"weaving\"\
      ] = {\n\ttopical_categories = {\"Weaving\"},\n}\n\nlabels[\"web design\"] = {\n\ttopical_categories = {\"Web design\"},\n}\n\nlabels[\"web development\"] = {\n\ttopical_categories = {\"Programming\", \"Web design\"},\n}\n\nlabels[\"weightlifting\"] = {\n\
      \ttopical_categories = {\"Weightlifting\"},\n}\n\nlabels[\"white supremacist ideology\"] = { -- but also this is often used to indicate white-supremacist-used jargon; cf \"Nazism\"\n\tdisplay = \"[[w:White supremacy|white supremacist ideology]]\",\n\t\
      topical_categories = {\"White supremacist ideology\"},\n}\naliases[\"white nationalism\"] = \"white supremacist ideology\"\naliases[\"white nationalist\"] = \"white supremacist ideology\"\naliases[\"white power\"] = \"white supremacist ideology\"\naliases[\"\
      white racism\"] = \"white supremacist ideology\"\naliases[\"white supremacy\"] = \"white supremacist ideology\"\naliases[\"white supremacism\"] = \"white supremacist ideology\"\naliases[\"white supremacist\"] = \"white supremacist ideology\"\n\nlabels[\"\
      wine\"] = {\n\tdisplay = \"[[wine]]\",\n\ttopical_categories = {\"Wine\"},\n}\n\nlabels[\"woodworking\"] = {\n\ttopical_categories = {\"Woodworking\"},\n}\n\nlabels[\"wrestling\"] = {\n\ttopical_categories = {\"Wrestling\"},\n}\n\nlabels[\"writing\"] =\
      \ {\n\ttopical_categories = {\"Writing\"},\n}\n\nlabels[\"yoga\"] = {\n\ttopical_categories = {\"Yoga\"},\n}\n\nlabels[\"zoology\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Zoology\"},\n}\n\nlabels[\"zootomy\"] = {\n\tdisplay = \"[[zootomy]]\"\
      ,\n\ttopical_categories = {\"Animal body parts\"},\n}\n\nlabels[\"Zoroastrianism\"] = {\n\tdisplay = \"[[Zoroastrianism]]\",\n\ttopical_categories = {\"Zoroastrianism\"},\n}\n\n\n-- Labels with set-type categories\n\n-- TODO: These are probably misuses\
      \ of the label template, and should be deprecated\n\nlabels[\"amino acid\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Amino acids\"},\n}\n\nlabels[\"architectural element\"] = {\n\tdisplay = \"[[architecture]]\",\n\ttopical_categories\
      \ = {\"Architectural elements\"},\n}\naliases[\"architectural elements\"] = \"architectural element\"\n\nlabels[\"asterism\"] = {\n\tdisplay = \"[[uranography]]\",\n\ttopical_categories = {\"Asterisms\"},\n}\n\nlabels[\"biblical character\"] = {\n\tdisplay\
      \ = \"[[Bible|biblical]]\",\n\ttopical_categories = {\"Biblical characters\"},\n}\naliases[\"Biblical character\"] = \"biblical character\"\naliases[\"biblical figure\"] = \"biblical character\"\naliases[\"Biblical figure\"] = \"biblical character\"\n\n\
      labels[\"book of the bible\"] = {\n\tdisplay = \"[[Bible|biblical]]\",\n\ttopical_categories = {\"Books of the Bible\"},\n}\n\nlabels[\"canid\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Canids\"},\n}\n\nlabels[\"carbohydrate\"] = {\n\
      \tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Carbohydrates\"},\n}\n\nlabels[\"coenzyme\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Coenzymes\"},\n}\n\nlabels[\"constellation\"] = {\n\tdisplay = \"[[astronomy]]\"\
      ,\n\ttopical_categories = {\"Constellations\"},\n}\n\nlabels[\"cookware\"] = {\n\tdisplay = \"[[cooking#Noun|cooking]]\",\n\ttopical_categories = {\"Cookware and bakeware\"},\n}\n\nlabels[\"disease\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories\
      \ = {\"Diseases\"},\n}\naliases[\"diseases\"] = \"disease\"\n\nlabels[\"E number\"] = {\n\tdisplay = \"[[food]] [[manufacture]]\",\n\tplain_categories = {\"E numbers\"},\n}\n\nlabels[\"element symbol\"] = {\n\tdisplay = \"[[chemistry]]\",\n\tplain_categories\
      \ = {\"Symbols for chemical elements\"},\n}\n\nlabels[\"enzyme\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Enzymes\"},\n}\n\nlabels[\"fatty acid\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Fatty acids\"\
      },\n}\n\nlabels[\"felid\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Felids\"},\n}\naliases[\"cat\"] = \"felid\"\n\nlabels[\"fictional character\"] = {\n\tdisplay = \"[[fiction]]\",\n\ttopical_categories = {\"Fictional characters\"},\n\
      }\n\nlabels[\"figure of speech\"] = {\n\tdisplay = \"[[rhetoric]]\",\n\ttopical_categories = {\"Figures of speech\"},\n}\n\nlabels[\"fish\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Fish\"},\n}\n\nlabels[\"footwear\"] = {\n\tdisplay\
      \ = \"[[clothing#Noun|clothing]]\",\n\ttopical_categories = {\"Footwear\"},\n}\n\nlabels[\"functional group prefix\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Functional group prefixes\"},\n}\n\nlabels[\"functional group suffix\"\
      ] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Functional group suffixes\"},\n}\n\nlabels[\"galaxy\"] = {\n\tdisplay = \"[[astronomy]]\",\n\ttopical_categories = {\"Galaxies\"},\n}\n\nlabels[\"genetic disorder\"] = {\n\tdisplay\
      \ = \"[[medical]] [[genetics]]\",\n\ttopical_categories = {\"Genetic disorders\"},\n}\n\nlabels[\"Greek god\"] = {\n\tdisplay = \"[[Greek]] [[mythology]]\",\n\ttopical_categories = {\"Greek deities\"},\n}\n\nlabels[\"heraldic charge\"] = {\n\tdisplay =\
      \ \"[[heraldry]]\",\n\ttopical_categories = {\"Heraldic charges\"},\n}\naliases[\"heraldiccharge\"] = \"heraldic charge\"\n\nlabels[\"Hindu god\"] = {\n\tdisplay = \"[[Hinduism]]\",\n\ttopical_categories = {\"Hindu deities\"},\n}\n\nlabels[\"hormone\"\
      ] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Hormones\"},\n}\n\nlabels[\"hydrocarbon chain prefix\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Hydrocarbon chain prefixes\"},\n}\n\nlabels[\"hydrocarbon\
      \ chain suffix\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Hydrocarbon chain suffixes\"},\n}\n\nlabels[\"incoterm\"] = {\n\tdisplay = \"[[incoterm]]\",\n\ttopical_categories = {\"Incoterms\"},\n}\n\nlabels[\"inorganic compound\"\
      ] = {\n\tdisplay = \"[[inorganic chemistry]]\",\n\ttopical_categories = {\"Inorganic compounds\"},\n}\n\nlabels[\"isotope\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Isotopes\"},\n}\n\nlabels[\"landforms\"] = {\n\tdisplay = \"[[geography]]\"\
      ,\n\ttopical_categories = {\"Landforms\"},\n}\n\nlabels[\"logical fallacy\"] = {\n\tdisplay = \"[[rhetoric]]\",\n\ttopical_categories = {\"Logical fallacies\"},\n}\n\nlabels[\"lutherie\"] = {\n\tdisplay = \"[[lutherie]]\",\n\ttopical_categories = {\"Lutherie\"\
      },\n}\n\nlabels[\"Mesopotamian god\"] = {\n\tdisplay = \"[[Mesopotamian]] [[mythology]]\",\n\ttopical_categories = {\"Mesopotamian deities\"},\n}\n\nlabels[\"metamaterial\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Metamaterials\"},\n\
      }\n\nlabels[\"military ranks\"] = {\n\tdisplay = \"[[military]]\",\n\ttopical_categories = {\"Military ranks\"},\n}\naliases[\"military rank\"] = \"military ranks\"\n\nlabels[\"military unit\"] = {\n\tdisplay = \"[[military]]\",\n\ttopical_categories =\
      \ {\"Military units\"},\n}\n\nlabels[\"mineral\"] = {\n\tdisplay = \"[[mineralogy]]\",\n\ttopical_categories = {\"Minerals\"},\n}\n\nlabels[\"mobile phones\"] = {\n\tdisplay = \"[[mobile telephone|mobile telephony]]\",\n\ttopical_categories = {\"Mobile\
      \ phones\"},\n}\naliases[\"cell phone\"] = \"mobile phones\"\naliases[\"cell phones\"] = \"mobile phones\"\naliases[\"mobile phone\"] = \"mobile phones\"\naliases[\"mobile telephony\"] = \"mobile phones\"\n\nlabels[\"muscle\"] = {\n\tdisplay = \"[[anatomy]]\"\
      ,\n\ttopical_categories = {\"Muscles\"},\n}\n\nlabels[\"mushroom\"] = {\n\tdisplay = \"[[mycology]]\",\n\ttopical_categories = {\"Mushrooms\"},\n}\naliases[\"mushrooms\"] = \"mushroom\"\n\nlabels[\"musical instruments\"] = {\n\tdisplay = \"[[music]]\"\
      ,\n\ttopical_categories = {\"Musical instruments\"},\n}\naliases[\"musical instrument\"] = \"musical instruments\"\naliases[\"musici\"] = \"musical instruments\"\ndeprecated[\"musici\"] = true\n\nlabels[\"music genre\"] = {\n\tdisplay = \"[[music]]\",\n\
      \ttopical_categories = {\"Musical genres\"},\n}\n\nlabels[\"musician\"] = {\n\tdisplay = \"[[music]]\",\n\ttopical_categories = {\"Musicians\"},\n}\n\nlabels[\"mythological creature\"] = {\n\tdisplay = \"[[mythology]]\",\n\ttopical_categories = {\"Mythological\
      \ creatures\"},\n}\n\nlabels[\"neurotoxin\"] = {\n\tdisplay = \"[[neurotoxicology]]\",\n\ttopical_categories = {\"Neurotoxins\"},\n}\n\nlabels[\"neurotransmitter\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Neurotransmitters\"},\n\
      }\n\nlabels[\"organic compound\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Organic compounds\"},\n}\n\nlabels[\"part of speech\"] = {\n\tdisplay = \"[[grammar]]\",\n\ttopical_categories = {\"Parts of speech\"},\n}\n\nlabels[\"\
      particle\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Subatomic particles\"},\n}\n\nlabels[\"pharmaceutical drug\"] = {\n\tdisplay = \"[[pharmacology]]\",\n\ttopical_categories = {\"Pharmaceutical drugs\"},\n}\n\nlabels[\"plant\"] =\
      \ {\n\tdisplay = \"[[botany]]\",\n\ttopical_categories = {\"Plants\"},\n}\n\nlabels[\"plant disease\"] = {\n\tdisplay = \"[[phytopathology]]\",\n\ttopical_categories = {\"Plant diseases\"},\n}\n\nlabels[\"poison\"] = {\n\tdisplay = \"[[toxicology]]\",\n\
      \ttopical_categories = {\"Poisons\"},\n}\n\nlabels[\"political subdivision\"] = {\n\tdisplay = \"[[government]]\",\n\ttopical_categories = {\"Political subdivisions\"},\n}\n\nlabels[\"protein\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories\
      \ = {\"Proteins\"},\n}\naliases[\"proteins\"] = \"protein\"\n\nlabels[\"rock\"] = {\n\tdisplay = \"[[petrology]]\",\n\ttopical_categories = {\"Rocks\"},\n}\n\nlabels[\"Roman god\"] = {\n\tdisplay = \"[[Roman]] [[mythology]]\",\n\ttopical_categories = {\"\
      Roman deities\"},\n}\n\nlabels[\"schools\"] = {\n\tdisplay = \"[[education]]\",\n\ttopical_categories = {\"Schools\"},\n}\n\nlabels[\"skeleton\"] = {\n\tdisplay = \"[[anatomy]]\",\n\ttopical_categories = {\"Skeleton\"},\n}\n\nlabels[\"standard of identity\"\
      ] = {\n\tdisplay = \"[[standard of identity|standards of identity]]\",\n\ttopical_categories = {\"Standards of identity\"},\n}\n\nlabels[\"star\"] = {\n\tdisplay = \"[[astronomy]]\",\n\ttopical_categories = {\"Stars\"},\n}\n\nlabels[\"steroid\"] = {\n\t\
      display = \"[[biochemistry]]\",\n\ttopical_categories = {\"Steroids\"},\n}\n\nlabels[\"steroid hormone\"] = {\n\tdisplay = \"[[biochemistry]], [[steroids]]\",\n\ttopical_categories = {\"Hormones\"},\n}\naliases[\"steroid drug\"] = \"steroid hormone\"\n\
      \nlabels[\"surface feature\"] = {\n\tdisplay = \"[[planetology]]\",\n\ttopical_categories = {\"Planetary nomenclature\"},\n}\n\nlabels[\"symptom\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories = {\"Medical signs and symptoms\"},\n}\n\nlabels[\"\
      taxonomic name\"] = {\n\tdisplay = \"[[taxonomy]]\",\n\ttopical_categories = {\"Taxonomic names\"},\n}\n\nlabels[\"tincture\"] = {\n\tdisplay = \"[[heraldry]]\",\n\ttopical_categories = {\"Heraldic tinctures\"},\n}\n\nlabels[\"video game genre\"] = {\n\
      \tdisplay = \"[[video game]]s\",\n\ttopical_categories = {\"Video game genres\"},\n}\n\nlabels[\"vitamin\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Vitamins\"},\n}\n\nlabels[\"watercraft\"] = {\n\tdisplay = \"[[nautical]]\",\n\
      \ttopical_categories = {\"Watercraft\"},\n}\n\nlabels[\"weaponry\"] = {\n\tdisplay = \"[[weaponry]]\",\n\ttopical_categories = {\"Weapons\"},\n}\naliases[\"weapons\"] = \"weaponry\"\n\nlabels[\"Wiktionary and WMF jargon\"] = {\n\tdisplay = \"[[Wiktionary]]\
      \ and [[Appendix:Glossary#W|WMF]] [[jargon]]\",\n\ttopical_categories = {\"Wiki\"},\n}\naliases[\"WMF\"] = \"Wiktionary and WMF jargon\"\naliases[\"WMF jargon\"] = \"Wiktionary and WMF jargon\"\naliases[\"Wiktionary\"] = \"Wiktionary and WMF jargon\"\n\
      aliases[\"Wiktionary jargon\"] = \"Wiktionary and WMF jargon\"\n\nlabels[\"yoga pose\"] = {\n\tdisplay = \"[[yoga]]\",\n\ttopical_categories = {\"Yoga poses\"},\n}\naliases[\"asana\"] = \"yoga pose\"\n\nlabels[\"zodiac constellations\"] = {\n\tdisplay\
      \ = \"[[astronomy]]\",\n\ttopical_categories = {\"Constellations in the zodiac\"},\n}\n\nreturn {labels = labels, aliases = aliases, deprecated = deprecated}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:02.897Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Fsubvarieties&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51000 t=1555362362726318
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:02 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 576766214, 559100611, 681475225
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4977892\" pageid=\"4977892\" ns=\"828\" title=\"Module:labels/data/subvarieties\"><revisions><rev user=\"Лорд Алекс\" timestamp=\"2019-03-27T02:05:05Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\nlocal deprecated = {}\n\nlocal m_functions = require(\"Module:labels/data/functions\")\n\nlabels[\"Aeolic\"] = {\n\tWikipedia\
      \ = \"Aeolic Greek\",\n\tplain_categories = {\"Aeolic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Aeolic Greek\"] = \"Aeolic\"\n\nlabels[\"African American Vernacular English\"] = {\n\tdisplay = \"African American Vernacular\",\n\tWikipedia\
      \ = true,\n\tplain_categories = {\"African American Vernacular English\"},\n\tlanguage = \"en\",\n}\naliases[\"AAVE\"] = \"African American Vernacular English\"\naliases[\"ebonics\"] = \"African American Vernacular English\"\n\nlabels[\"Akhmimic\"] = {\n\
      \tWikipedia = \"Coptic language#Akhmimic\",\n\tplain_categories = {\"Akhmimic Coptic\"},\n\tlanguage = \"cop\",\n}\n\nlabels[\"Alsatian German\"] = {\n\tdisplay = \"Alsatian\",\n\tWikipedia = \"Alsatian dialect\",\n\tplain_categories = {\"Alsatian German\"\
      },\n\tlanguage = \"gsw\",\n}\naliases[\"Elsässisch\"] = \"Alsatian German\"\n\nlabels[\"American spelling\"] = {\n\tdisplay = \"American spelling\",\n\tWikipedia = \"American and British English spelling differences\",\n\tplain_categories = {\"American\
      \ English forms\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Anglo-Norman\"] = {\n\tWikipedia = \"Anglo-Norman language\",\n\tplain_categories = {\"Anglo-Norman Old French\"},\n\tlanguage = \"fro\",\n}\n\nlabels[\"Anglian\"] = {\n\tWikipedia = \"Anglian dialect\"\
      ,\n\tplain_categories = { \"Anglian Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Ararat\"] = {\n\tWikipedia = \"Araratian dialect\",\n\tplain_categories = {\"Ararat Armenian\"},\n\tlanguage = \"hy\",\n}\n\nlabels[\"Arbëresh\"] = {\n\tWikipedia\
      \ = \"Arbëresh\",\n\tplain_categories = {\"Arbëresh Albanian\"},\n\tlanguage = \"sq\",\n}\naliases[\"Arbëreshë\"] = \"Arbëresh\"\naliases[\"Arbërisht\"] = \"Arbëresh\"\n\nlabels[\"Arcadocypriot\"] = {\n\tWikipedia = \"Arcadocypriot Greek\",\n\tplain_categories\
      \ = {\"Arcadocypriot Ancient Greek\"},\n\tlanguage = \"grc\"\n}\naliases[\"Arcadocypriot Greek\"] = \"Arcadocypriot\"\n\nlabels[\"Arvanitika\"] = {\n\tWikipedia = \"Arvanitika\",\n\tplain_categories = {\"Arvanitika Albanian\"},\n\tlanguage = \"sq\",\n\
      }\n\nlabels[\"Attic\"] = {\n\tWikipedia = \"Attic Greek\",\n\tplain_categories = {\"Attic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Attic Greek\"] = \"Attic\"\n\nlabels[\"Old Attic\"] = {\n\tWikipedia = \"Attic Greek\",\n\tplain_categories\
      \ = {\"Attic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\n\nlabels[\"Old Hittite\"] = {\n\tWikipedia = true,\n\tlanguage = \"hit\",\n\tplain_categories = { \"Old Hittite\" },\n}\n\nlabels[\"Australian Aboriginal English\"] = {\n\tdisplay = \"Australian\
      \ Aboriginal\",\n\tWikipedia = true,\n\tplain_categories = {\"Australian Aboriginal English\"},\n\tlanguage = \"en\",\n}\naliases[\"Australian Aboriginal\"] = \"Australian Aboriginal English\"\n\nlabels[\"Australian English\"] = {\n\tdisplay = \"Australia\"\
      ,\n\tWikipedia = true,\n\tplain_categories = {\"Australian English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Balhae\"] = {\n\tplain_categories = {\"Balhae Old Korean\"},\n\tlanguage = \"oko\",\n}\n\nlabels[\"Balkar\"] = {\n\tplain_categories = {\"Balkar\"\
      },\n\tlanguage = \"krc\",\n}\n\nlabels[\"Batangas\"] = {\n\tdisplay = \"[[w:Batangas Tagalog|Batangas]]\",\n\tplain_categories = { \"Batangas Tagalog\" },\n\tlanguage = \"tl\",\n}\naliases[\"Batangas Tagalog\"] = \"Batangas\"\naliases[\"Batangueño\"] =\
      \ \"Batangas\"\n\n-- For Standard German as used in Bavaria\nlabels[\"Bavaria\"] = {\n\tWikipedia = \"Bavarian language#Use\",\n\tplain_categories = {\"Bavarian German\"},\n\tlanguage = \"de\",\n}\n\nlabels[\"Bavarian\"] = {\n\tWikipedia = \"Old High German\"\
      ,\n\tplain_categories = { \"Bavarian Old High German\" },\n\tlanguage = \"goh\",\n}\n\nlabels[\"Biblical Hebrew\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Biblical Hebrew\"},\n\tlanguage = \"he\",\n}\naliases[\"hbo\"] = \"Biblical Hebrew\"\n\
      aliases[\"Classical Hebrew\"] = \"Biblical Hebrew\"\naliases[\"Ancient Hebrew\"] = \"Biblical Hebrew\"\naliases[\"Old Hebrew\"] = \"Biblical Hebrew\"\n\nlabels[\"Birmingham\"] = {\n\tdisplay = \"[[wikipedia:Brummie|Birmingham]]\",\n\tplain_categories =\
      \ {\"Birmingham English\"},\n\tlanguage = \"en\",\n}\naliases[\"Brummie\"] = \"Birmingham\"\naliases[\"Brummy\"] = \"Birmingham\"\n\nlabels[\"Boeotian\"] = {\n\tWikipedia = \"Boeotian Greek\",\n\tplain_categories = {\"Boeotian Ancient Greek\"},\n\tlanguage\
      \ = \"grc\",\n}\naliases[\"Boeotian Greek\"] = \"Boeotian\"\n\nlabels[\"Bohairic\"] = {\n\tWikipedia = \"Coptic language#Bohairic\",\n\tplain_categories = {\"Bohairic Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Memphitic\"] = \"Bohairic\"\n\nlabels[\"\
      Bombay\"] = {\n\tWikipedia = \"Bombay Hindi\",\n\tplain_categories = {\"Bombay Hindi\"},\n\tlanguage = \"hi\",\n}\naliases[\"Bambaiyya\"] = \"Bombay\"\naliases[\"Mumbai\"] = \"Bombay\"\n\nlabels[\"Bokmål\"] = {\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Norwegian Bokmål\"},\n\tlanguage = \"nb\",\n}\n\nlabels[\"Border Scots\"] = {\n\tplain_categories = {\"Border Scots\"},\n\tlanguage = \"sco\",\n}\n\nlabels[\"Braj\"] = {\n    display = \"[[w:Braj Bhasha|Braj]]\",\n\tplain_categories = {\"Braj Bhā\
      ṣā\"},\n\tlanguage = \"hi\",\n}\n\nlabels[\"British English\"] = {\n\tdisplay = \"British\",\n\tWikipedia = true,\n\tplain_categories = {\"British English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"British spelling\"] = {\n\tdisplay = \"British spelling\"\
      ,\n\tWikipedia = \"American and British English spelling differences\",\n\tplain_categories = {\"British English forms\"},\n\tlanguage = \"en\",\n}\naliases[\"Commonwealth spelling\"] = \"British spelling\"\n\nlabels[\"Buddhist Hybrid Sanskrit\"] = {\n\
      \    display = \"Buddhist Hybrid Sanskrit\",\n\tWikipedia = true,\n    plain_categories = {\"Buddhist Hybrid Sanskrit\"},\n    language = \"sa\",\n}\naliases[\"BHS\"] = \"Buddhist Hybrid Sanskrit\"\n\nlabels[\"Byzantine\"] = {\n\tWikipedia = \"Medieval\
      \ Greek\",\n\tplain_categories = {\"Byzantine Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Byzantine Greek\"] = \"Byzantine\"\naliases[\"Medieval Greek\"] = \"Byzantine\"\n\nlabels[\"Bzyb\"] = {\n\tdisplay = \"[[w:Bzyb dialect|Bzyb]]\",\n\tplain_categories\
      \ = {\"Bzyb Abkhaz\"},\n\tlanguage = \"ab\",\n}\naliases[\"Bzyp\"] = \"Bzyb\"\n\nlabels[\"Canadian English\"] = {\n\tdisplay = \"Canada\",\n\tWikipedia = true,\n\tplain_categories = {\"Canadian English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Canadian\
      \ spelling\"] = {\n\tdisplay = \"Canadian\",\n\tWikipedia = true,\n\tplain_categories = {\"Canadian English forms\"},\n\tlanguage = \"en\",\n}\n\n-- Two instances of the language code \"yue\" being used with this label\nlabels[\"Cantonese\"] = {\n\tdisplay\
      \ = \"[[Cantonese]]\",\n\tplain_categories = {\"Cantonese Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Catholic\"] = {\n\tdisplay = \"[[w:Goan Catholics|Catholic]]\",\n\tplain_categories = {\"Catholic Konkani\"},\n\tlanguage = \"kok\"\n}\n\nlabels[\"\
      Central Standard\"] = {\n\tdiplay = \"Central Standard\",\n\tplain_categories = {\"Central Standard Assamese\"},\n\tlanguage = \"as\",\n}\n\nlabels[\"Chakavian\"] = {\n\tdisplay = \"[[Chakavian]]\",\n\tplain_categories = {\"Chakavian Serbo-Croatian\"},\n\
      \tlanguage = \"sh\",\n}\naliases[\"Čakavian\"] = \"Chakavian\"\n\nlabels[\"Cham Albanian\"] = {\n\tdisplay = \"Cham\",\n\tWikipedia = \"Cham Albanian dialect\",\n\tplain_categories = {\"Cham Albanian\"},\n\tlanguage = \"sq\",\n}\n\n--[=[ Currently empty:\n\
      labels[\"Chinglish\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Chinglish\"},\n\tlanguage = \"\",\n}\n]=]\n\nlabels[\"Clay Frisian\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Clay Frisian\"},\n\tlanguage = \"fy\",\n}\n\nlabels[\"Cockney\"\
      ] = {\n\tWikipedia = \"Cockney#Speech\",\n\tplain_categories = {\"Cockney English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Cois Fharraige\"] = {\n\tWikipedia = \"Gaeltacht Cois Fharraige\",\n\tplain_categories = {\"Connacht Irish\"},\n\tlanguage = \"ga\"\
      ,\n}\naliases[\"Cois Fhairrge\"] = \"Cois Fharraige\"\n\nlabels[\"Cretan\"] = {\n\tWikipedia = \"Cretan Greek\",\n\tplain_categories = {\"Cretan Greek\"},\n\tlanguage = \"el\",\n}\naliases[\"cretan\"] = \"Cretan\"\n\nlabels[\"Dari\"] = {\n\tdisplay = \"\
      Dari (Afghanistan)\",\n\tWikipedia = \"Dari (Persian)\",\n\tplain_categories = {\"Dari Persian\"},\n\tlanguage = \"fa\",\n}\n\nlabels[\"Datian Min\"] = {\n\tdisplay = \"Datian Min\",\n\tWikipedia = true,\n\tplain_categories = {\"Datian Min Chinese\"},\n\
      \tlanguage = \"zh\",\n}\n\nlabels[\"Daytshmerish\"] = {\n\tdisplay = \"[[דײַטשמעריש|Daytshmerish]]\",\n\tplain_categories = {\"Daytshmerish Yiddish\"},\n\tlanguage = \"yi\",\n}\naliases[\"daytshmerish\"] = \"Daytshmerish\"\n\nlabels[\"De'kwana\"] = {\n\
      \tdisplay = \"De'kwana dialect\",\n\tplain_categories = {\"De'kwana Maquiritari\"},\n\tlanguage = \"mch\",\n}\naliases[\"De'kwana dialect\"] = \"De'kwana\"\n\nlabels[\"Delhi-Meerut\"] = {\n\tWikipedia = \"Ashokan Edicts in Delhi#Delhi-Meerut pillar\",\n\
      \tdisplay = \"Delhi-Meerut\",\n\tplain_categories = {\"Delhi-Meerut Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\naliases[\"Meerut\"] = \"Delhi-Meerut\"\n\nlabels[\"Delhi-Topra\"] = {\n\tWikipedia = \"Ashokan Edicts in Delhi#Delhi-Topra pillar\",\n\
      \tdisplay = \"Delhi-Topra\",\n\tplain_categories = {\"Delhi-Topra Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\naliases[\"Topra\"] = \"Delhi-Topra\"\n\nlabels[\"Dhauli\"] = {\n\tWikipedia = true,\n\tdisplay = \"Dhauli\",\n\tplain_categories = {\"\
      Dhauli Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Digor\"] = {\n\tdisplay = \"Digor dialect\",\n\tplain_categories = {\"Digor Ossetian\"},\n\tlanguage = \"os\",\n}\naliases[\"Digor dialect\"] = \"Digor\"\n\nlabels[\"Doric\"] = {\n\t\
      Wikipedia = \"Doric Greek\",\n\tplain_categories = {\"Doric Ancient Greek\"},\n\tlanguage = \"grc\",\n}\n\nlabels[\"Drasi\"] = {\n\tWikipedia = \"Dras\",\n\tplain_categories = {\"Dras Shina\"},\n\tlanguage = \"scl\",\n}\n\nlabels[\"Early West Saxon\"]\
      \ = {\n\tdisplay = \"Early West Saxon\",\n\tWikipedia = true,\n\tplain_categories = {\"Early West Saxon Old English\"},\n\tlanguage = \"ang\",\n}\n\nlabels[\"Early Middle English\"] = {\n\tdisplay = \"Early Middle English\",\n\tWikipedia = \"Middle English#Early\
      \ Middle English\",\n\tplain_categories = {\"Early Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Early ME\"] = \"Early Middle English\"\naliases[\"Earlier ME\"] = \"Early Middle English\"\naliases[\"early ME\"] = \"Early Middle English\"\n\n\
      labels[\"East Anglian English\"] = {\n\tdisplay = \"East Anglia\",\n\tWikipedia = true,\n\tplain_categories = {\"East Anglian English\"},\n\tlanguage = \"en\",\n}\n\n-- for East Frisian dialectal German Low German, not the Frisianic language\nlabels[\"\
      East Frisian\"] = {\n\tWikipedia = \"East Frisian Low Saxon\",\n\tplain_categories = {\"East Frisian Low German\"},\n\tlanguage = \"nds-de\",\n}\n\nlabels[\"East Germanic\"] = {\n\tWikipedia = \"East Germanic languages\",\n\tplain_categories = {\"East\
      \ Proto-Germanic\"},\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"East Midland Middle English\"] = {\n\tdisplay = \"East Midlands\",\n\tplain_categories = {\"East Midland Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"East Midlands ME\"] = \"East\
      \ Midland Middle English\"\naliases[\"East Midland ME\"] = \"East Midland Middle English\"\n\nlabels[\"East Midlands English\"] = {\n\tdisplay = \"East Midlands\",\n\tWikipedia = true,\n\tplain_categories = {\"East Midlands English\"},\n\tlanguage = \"\
      en\",\n}\n\nlabels[\"East Palatine\"] = {\n\tdisplay = \"Vorderpfälzisch\",\n\tWikipedia = \"Palatine German language\",\n\tplain_categories = {\"East Palatine German\"},\n\tlanguage = \"\",\n}\naliases[\"Vorderpfälzisch\"] = \"East Palatine\"\n\nlabels[\"\
      Eastern Armenian\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Eastern Armenian\"},\n\tlanguage = \"hy\",\n}\n\nlabels[\"Eastern Catalan\"] = {\n\tWikipedia = \"Catalan dialects\",\n\tplain_categories = {\"Eastern Catalan\"},\n\tlanguage = \"ca\"\
      ,\n}\n\nlabels[\"Eastern Standard\"] = {\n\tdiplay = \"Eastern Standard\",\n\tplain_categories = {\"Eastern Standard Assamese\"},\n\tlanguage = \"as\",\n}\n\nlabels[\"Ecclesiastical Latin\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Ecclesiastical\
      \ Latin\"},\n\tlanguage = \"la\",\n}\naliases[\"Church Latin\"] = \"Ecclesiastical Latin\"\n\nlabels[\"Ekavian\"] = {\n\tdisplay = \"[[Ekavian]]\",\n}\n\nlabels[\"Epic\"] = {\n\tWikipedia = \"Homeric Greek\",\n\tplain_categories = {\"Epic Ancient Greek\"\
      },\n\tlanguage = \"grc\",\n}\naliases[\"Homeric\"] = \"Epic\"\naliases[\"Epic Greek\"] = \"Epic\"\naliases[\"Homeric Greek\"] = \"Homeric\"\n\nlabels[\"European French\"] = {\n\tdisplay = \"Europe\",\n\tWikipedia = true,\n\tplain_categories = {\"European\
      \ French\"},\n\tlanguage = \"fr\",\n}\n\nlabels[\"Fante\"] = {\n\tdisplay = \"[[w:Fante dialect|Fante]]\",\n\tplain_categories = {\"Fante Akan\"},\n\tlanguage = \"ak\",\n}\naliases[\"Fantse\"] = \"Fante\"\naliases[\"Fanti\"] = \"Fante\"\naliases[\"Mfantse\"\
      ] = \"Fante\"\n\nlabels[\"Fayyumic\"] = {\n\tWikipedia = \"Coptic language#Fayyumic\",\n\tplain_categories = {\"Fayyumic Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Faiyumic\"] = \"Fayyumic\"\naliases[\"Bashmuric\"] = \"Fayyumic\"\n\nlabels[\"East\
      \ and West Flanders\"] = {\n\tdisplay = \"[[w:East Flanders|East]] and [[w:West Flanders|West Flanders]]\",\n\tplain_categories = {\"East and West Flemish Dutch\"},\n\tlanguage = \"nl\",\n}\naliases[\"Flanders\"] = \"East and West Flanders\"\naliases[\"\
      Flemish\"] = \"East and West Flanders\"\n\nlabels[\"Gan\"] = {\n\tdisplay = \"[[Gan]]\",\n\tplain_categories = {\"Gan Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Geordie\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Geordie English\"},\n\t\
      language = \"en\",\n}\n\nlabels[\"Gheg\"] = {\n\tWikipedia = \"Gheg Albanian\",\n\tplain_categories = {\"Gheg Albanian\"},\n\tlanguage = \"sq\",\n}\n\nlabels[\"Gilgiti\"] = {\n\tWikipedia = \"Gilgit\",\n\tplain_categories = {\"Gilgit Shina\"},\n\tlanguage\
      \ = \"scl\",\n}\n\nlabels[\"Girnar\"] = {\n\tdisplay = \"Girnar\",\n\tWikipedia = true,\n\tplain_categories = {\"Girnar Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Gottscheerisch\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Gottscheerisch\
      \ German\"},\n\tlanguage = \"\",\n}\naliases[\"Gottscheerish\"] = \"Gottscheerisch\"\n\nlabels[\"Guardiol\"] = {\n\tWikipedia = \"Guardia Piemontese\",\n\tplain_categories = {\"Guardiol Occitan\"},\n\tlanguage = \"oc\",\n}\n\nlabels[\"Hainan Min\"] = {\n\
      \tdisplay = \"Hainan Min\",\n\tWikipedia = \"Hainanese\",\n\tplain_categories = {\"Hainan Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Hakka\"] = {\n\tdisplay = \"[[Hakka]]\",\n\tplain_categories = {\"Hakka Chinese\"},\n\tlanguage = \"zh\",\n}\n\
      \nlabels[\"Hamburgisch\"] = {\n\tWikipedia = \"Hamburgisch dialect\",\n\tplain_categories = {\"Hamburgisch Low German\"},\n\tlanguage = \"nds-de\",\n}\n\nlabels[\"Hamshen\"] = {\n\tWikipedia = \"Homshetsi dialect\",\n\tplain_categories = {\"Hamshen Armenian\"\
      },\n\tlanguage = \"hy\",\n}\naliases[\"Homshetsi\"] = \"Hamshen\"\naliases[\"Homshetsma\"] = \"Hamshen\"\n\nlabels[\"Hariyanvi\"] = {\n\tdisplay = \"Hariyāṇvī\",\n\tWikipedia = \"Hariyanvi language\",\n\tplain_categories = {\"Hariyāṇvī\"},\n\tlanguage\
      \ = \"hi\",\n}\naliases[\"Hariyana\"] = \"Hariyanvi\"\n\nlabels[\"Helsinki slang\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Helsinki slang\"},\n\tlanguage = \"fi\",\n}\n\nlabels[\"Hessian\"] = {\n\tWikipedia = \"Hessian dialects\",\n\tplain_categories\
      \ = {\"Hessian German\"},\n\tlanguage = \"de\",\n}\naliases[\"Hessisch\"] = \"Hessian\"\n\nlabels[\"Hong Kong Hakka\"] = {\n\tdisplay = \"Hong Kong [[Hakka]]\",\n\tplain_categories = {\"Hong Kong Hakka\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Huizhou\"\
      ] = {\n\tdisplay = \"[[Huizhou]]\",\n\tplain_categories = {\"Huizhou Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Hulu Pahang\"] = {\n\tplain_categories = {\"Hulu Pahang Malay\"},\n\tlanguage = \"ms\",\n}\n\nlabels[\"Ikavian\"] = {\n\tdisplay = \"\
      [[Ikavian]]\",\n\tplain_categories = {\"Ikavian Serbo-Croatian\"},\n\tlanguage = \"sh\",\n}\n\nlabels[\"Indian English\"] = {\n\tdisplay = \"India\",\n\tWikipedia = true,\n\tplain_categories = {\"Indian English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"\
      Ingilo\"] = {\n\tWikipedia = \"Ingiloy people\",\n\tplain_categories = {\"Ingilo Georgian\"},\n\tlanguage = \"ka\",\n}\naliases[\"Ingiloy\"] = \"Ingilo\"\naliases[\"Saingilo\"] = \"Ingilo\"\n\nlabels[\"Inner Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About\
      \ Mbugu|Ma'a]]\",\n\tplain_categories = {\"Inner Mbugu\"},\n\tlanguage = \"mhd\",\n}\naliases[\"inner Mbugu\"] = \"Inner Mbugu\"\n\nlabels[\"Inuktun\"] = {\n\tplain_categories = {\"Inuktun Inuktitut\"},\n\tlanguage = \"iu\",\n}\naliases[\"Polar Eskimo\"\
      ] = \"Inuktun\"\n\nlabels[\"Inuttut\"] = {\n\tplain_categories = {\"Inuttut Inuktitut\"},\n\tlanguage = \"iu\",\n}\naliases[\"Nunatsiavummiutut\"] = \"Inuttut\"\naliases[\"Labradorimiutut\"] = \"Inuttut\"\n\nlabels[\"Ionic\"] = {\n\tWikipedia = \"Ionic\
      \ Greek\",\n\tplain_categories = {\"Ionic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Ionic Greek\"] = \"Ionic\"\n\nlabels[\"Irish English\"] = {\n\tdisplay = \"Ireland\",\n\tWikipedia = true,\n\tplain_categories = {\"Irish English\"},\n\tlanguage\
      \ = \"en\",\n}\n\nlabels[\"Iron\"] = {\n\tdisplay = \"Iron dialect\",\n\tplain_categories = {\"Iron Ossetian\"},\n\tlanguage = \"os\",\n}\naliases[\"Iron dialect\"] = \"Iron\"\n\nlabels[\"Itivimuit\"] = {\n\tplain_categories = {\"Itivimuit Inuktitut\"\
      },\n\tlanguage = \"iu\",\n}\n\nlabels[\"Ivory Coast French\"] = {\n\tdisplay = \"Ivory Coast\",\n\tWikipedia = \"African French#Abidjan French vocabulary\",\n\tplain_categories = {\"Ivorian French\"},\n\tlanguage = \"fr\",\n}\naliases[\"Ivory Coast\"]\
      \ = \"Ivory Coast French\"\naliases[\"Côte d’Ivoire\"] = \"Ivory Coast French\"\naliases[\"Côte d'Ivoire\"] = \"Ivory Coast French\"\naliases[\"Ivorian\"] = \"Ivory Coast French\"\n\nlabels[\"Ivory Coast French slang\"] = {\n\tdisplay = \"Ivory Coast slang\"\
      ,\n\tWikipedia = \"fr:Nouchi\",\n\tplain_categories = {\"Ivorian French\"},\n\tlanguage = \"fr\",\n}\naliases[\"nouchi\"] = \"Ivory Coast French slang\"\naliases[\"Nouchi\"] = \"Ivory Coast French slang\"\naliases[\"noussi\"] = \"Ivory Coast French slang\"\
      \naliases[\"Noussi\"] = \"Ivory Coast French slang\"\naliases[\"Ivory Coast slang\"] = \"Ivory Coast French slang\"\naliases[\"Côte d’Ivoire slang\"] = \"Ivory Coast French slang\"\naliases[\"Côte d'Ivoire slang\"] = \"Ivory Coast French slang\"\naliases[\"\
      Ivorian slang\"] = \"Ivory Coast French slang\"\n\nlabels[\"Jamaican English\"] = {\n\tdisplay = \"Jamaican\",\n\tWikipedia = true,\n\tplain_categories = {\"Jamaican English\"},\n\tlanguage = \"en\",\n}\naliases[\"Jamaican Standard English\"] = \"Jamaican\
      \ English\"\n\nlabels[\"Jaugada\"] = {\n\tdisplay = \"Jaugada\",\n\tWikipedia = true,\n\tplain_categories = {\"Jaugada Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Jewish Babylonian Aramaic\"] = {\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Jewish Babylonian Aramaic\"},\n\tlanguage = \"arc\",\n}\naliases[\"JBA\"] = \"Jewish Babylonian Aramaic\"\naliases[\"Talmudic Aramaic\"] = \"Jewish Babylonian Aramaic\"\naliases[\"Babylonian Talmudic Aramaic\"] = \"Jewish Babylonian Aramaic\"\n\n\
      labels[\"Kajkavian\"] = {\n\tdisplay = \"[[Kajkavian]]\",\n\tplain_categories = {\"Kajkavian Serbo-Croatian\"},\n\tlanguage = \"sh\",\n}\n\nlabels[\"Karabakh\"] = {\n\tWikipedia = \"Karabakh dialect (Armenian)\",\n\tplain_categories = {\"Karabakh Armenian\"\
      },\n\tlanguage = \"hy\",\n}\naliases[\"Gharabagh\"] = \"Karabakh\"\naliases[\"Artsakh\"] = \"Karabakh\"\n\nlabels[\"Kalsi\"] = {\n\tdisplay = \"Kalsi\",\n\tplain_categories = {\"Kalsi Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Kamrupi\"\
      ] = {\n\tdisplay = \"[[w:Kamprui dialect|Kamrupi]]\",\n\tplain_categories = { \"Kamrupi Assamese\" },\n\tlanguage = \"as\",\n}\naliases[\"Kamruipa\"] = \"Kamrupi\"\naliases[\"Kamrupiya\"] = \"Kamrupi\"\naliases[\"Kamrup\"] = \"Kamrupi\"\n\nlabels[\"Kansai\"\
      ] = {\n\tWikipedia = \"Kansai dialect\",\n\tplain_categories = {\"Kansai Japanese\"},\n\tlanguage = \"ja\",\n}\n\nlabels[\"Karachay\"] = {\n\tplain_categories = {\"Karachay\"},\n\tlanguage = \"krc\",\n}\n\nlabels[\"Katharevousa\"] = {\n\tdisplay = \"[[Katharevousa#English|Katharevousa]]\"\
      ,\n\tplain_categories = { \"Katharevousa\" },\n\tlanguage = \"el\",\n}\n\n--[=[\ncategory has been deleted\nlabels[\"Kichwa\"] = {\n\tdisplay = \"Standard Ecuadorian Kichwa\",\n\tWikipedia = \"Kichwa language\",\n\tplain_categories = {\"Standard Kichwa\"\
      },\n\tlanguage = \"\",\n}\n]=]\n\n--[[\tThis will conflict with a Kentish dialect label for Modern English,\n\t\tif someone wants to make one. ]]\nlabels[\"Kentish\"] = {\n\tWikipedia = \"Kentish dialect (Old English)\",\n\tplain_categories = { \"Kentish\
      \ Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Koine\"] = {\n\tdisplay = \"Koine\",\n\tWikipedia = \"Koine Greek\",\n\tplain_categories = {\"Koine Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Koine Greek\"] = \"Koine\"\naliases[\"Hellenistic\"\
      ] = \"Koine\"\naliases[\"Hellenistic Koine\"] = \"Koine\"\n\nlabels[\"Kölsch\"] = {\n\tWikipedia = \"Colognian language\",\n\tplain_categories = {\"Kölsch Central Franconian\"},\n\tlanguage = \"gmw-cfr\",\n}\naliases[\"Colognian\"] = \"Kölsch\"\naliases[\"\
      Cologne\"] = \"Kölsch\"\naliases[\"Köln\"] = \"Kölsch\"\n\nlabels[\"Kromanti\"] = {\n\tdisplay = \"Kromanti spirit possession language\",\n\tWikipedia = \"Jamaican Maroon spirit-possession language\",\n\tplain_categories = {\"Kromanti Akan\"},\n\tlanguage\
      \ = \"ak\",\n}\n\nlabels[\"Late Latin\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Late Latin\"},\n\tlanguage = \"la\",\n}\n\nlabels[\"Latin America\"] = {\n\tplain_categories = {\"Latin American Spanish\"},\n\tlanguage = \"es\",\n}\naliases[\"\
      Latin American Spanish\"] = \"Latin America\"\n\nlabels[\"Late West Saxon\"] = {\n\tWikipedia = \"Late West Saxon\",\n\tplain_categories = { \"Late West Saxon Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Late Middle English\"] = {\n\tdisplay\
      \ = \"Late Middle English\",\n\tWikipedia = \"Middle English#Late Middle English\",\n\tplain_categories = {\"Late Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Late ME\"] = \"Late Middle English\"\naliases[\"Later ME\"] = \"Late Middle English\"\
      \naliases[\"late ME\"] = \"Late Middle English\"\n\nlabels[\"Leizhou Min\"] = {\n\tdisplay = \"Leizhou Min\",\n\tWikipedia = true,\n\tplain_categories = {\"Leizhou Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Lorraine Franconian\"] = {\n\tdisplay\
      \ = \"[[w:Lorraine Franconian|Lorraine Franconian]]\",\n\tWikipedia = true,\n\tplain_categories = {\"Lorraine Franconian\"},\n\tlanguage = \"\",\n}\naliases[\"Lorrainian\"] = \"Lorraine Franconian\"\naliases[\"Lothringian\"] = \"Lorraine Franconian\"\n\
      aliases[\"Lothringisch\"] = \"Lorraine Franconian\"\n\n\nlabels[\"Louisiana French\"] = {\n\tdisplay = \"Louisiana\",\n\tWikipedia = \"Cajun French\",\n\tplain_categories = {\"Louisiana French\"},\n\tlanguage = \"fr\",\n}\n\nlabels[\"Low Prussian\"] =\
      \ {\n\tWikipedia = \"Low Prussian dialect\",\n\tplain_categories = {\"Low Prussian German Low German\"},\n\tlanguage = \"nds-de\",\n}\n\nlabels[\"Lowlands Scots\"] = {\n\tplain_categories = {\"Lowlands Scots\"},\n\tlanguage = \"sco\",\n}\n\nlabels[\"Lycopolitan\"\
      ] = {\n\tWikipedia = \"Coptic language#Lycopolitan\",\n\tplain_categories = {\"Lycopolitan Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Subakhmimic\"] = \"Lycopolitan\"\naliases[\"Assiutic\"] = \"Lycopolitan\"\n\nlabels[\"Maastrichtian\"] = {\n\tWikipedia\
      \ = \"Maastrichtian dialect\",\n\tplain_categories = {\"Maastrichtian Limburgish\"},\n\tlanguage = \"li\",\n}\n\nlabels[\"Mandarin\"] = {\n\tdisplay = \"[[Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"\
      Maniot\"] = {\n\tdisplay = \"Maniot dialect\",\n\tWikipedia = \"Maniot dialect\",\n\tplain_categories = {\"Maniot Greek\"},\n\tlanguage = \"el\",\n}\naliases['maniot'] = \"Maniot\"\n\nlabels[\"Mansehra\"] = {\n\tdisplay = \"Mansehra\",\n\tWikipedia = true,\n\
      \tplain_categories = {\"Mansehra Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Mecklenburgisch Low German\"] = {\n\tdisplay = \"Mecklenburgisch\",\n\tWikipedia = \"Mecklenburgisch dialect\",\n\tplain_categories = {\"Mecklenburgisch Low\
      \ German\"},\n\tlanguage = \"nds-de\",\n}\naliases[\"Mecklenburgisch\"] = \"Mecklenburgisch Low German\"\naliases[\"Mecklenburg\"] = \"Mecklenburgisch Low German\"\n\nlabels[\"Medieval Hebrew\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Medieval\
      \ Hebrew\"},\n\tlanguage = \"he\",\n}\n\nlabels[\"Medieval Latin\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Medieval Latin\"},\n\tlanguage = \"la\",\n}\n\nlabels[\"Megarian\"] = {\n\tWikipedia = \"Doric Greek\",\n\tplain_categories = {\"Doric\
      \ Ancient Greek\"},\n\tlanguage = \"grc\",\n}\n\nlabels[\"Mercian\"] = {\n\tWikipedia = \"Mercian dialect\",\n\tplain_categories = { \"Mercian Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Middle Hittite\"] = {\n\tWikipedia = true,\n\tlanguage\
      \ = \"hit\",\n\tplain_categories = { \"Middle Hittite\" },\n}\n\nlabels[\"Midlands English\"] = {\n\tdisplay = \"Midlands\",\n\tWikipedia = true,\n\tplain_categories = {\"Midlands English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Min\"] = {\n\tdisplay =\
      \ \"[[Min]]\",\n\tplain_categories = {\"Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Bei\"] = {\n\tdisplay = \"[[Min Bei]]\",\n\tplain_categories = {\"Min Bei Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Dong\"] = {\n\tdisplay = \"\
      [[Min Dong]]\",\n\tplain_categories = {\"Min Dong Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Nan\"] = {\n\tdisplay = \"[[Min Nan]]\",\n\tplain_categories = {\"Min Nan Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Zhong\"] = {\n\tdisplay\
      \ = \"[[Min Zhong]]\",\n\tplain_categories = {\"Min Zhong Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Mishnaic Hebrew\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Mishnaic Hebrew\"},\n\tlanguage = \"he\",\n}\naliases[\"Mishnaic\"] = \"Mishnaic\
      \ Hebrew\"\n\nlabels[\"Mistralian\"] = {\n\tWikipedia = \"Occitan language#Writing system\",\n\tplain_categories = {\"Mistralian Occitan\"},\n\tlanguage = \"oc\",\n}\n\nlabels[\"Mooring\"] = {\n\tWikipedia = \"Mooring (North Frisian dialect)\",\n\tplain_categories\
      \ = {\"Mooring North Frisian\"},\n\tlanguage = \"frr\",\n}\naliases[\"Mooring dialect\"] = \"Mooring\"\n\nlabels[\"Moselle Franconian\"] = {\n\tWikipedia = \"Moselle Franconian dialects\",\n\tplain_categories = {\"Moselle Central Franconian\"},\n\tlanguage\
      \ = \"gmw-cfr\",\n}\naliases[\"Moselfränkisch\"] = \"Moselle Franconian\"\n\nlabels[\"Multicultural London English\"] = {\n\tdisplay = \"MLE\",\n\tWikipedia = true,\n\tplain_categories = {\"Multicultural London English\"},\n\tlanguage = \"en\",\n}\naliases[\"\
      MLE\"] = \"Multicultural London English\"\n\nlabels[\"New Hittite\"] = {\n\tWikipedia = true,\n\tlanguage = \"hit\",\n\tplain_categories = { \"New Hittite\" },\n}\naliases[\"Neo-Hittite\"] = \"New Hittite\"\n\nlabels[\"New Latin\"] = {\n\tWikipedia = true,\n\
      \tplain_categories = {\"New Latin\"},\n\tlanguage = \"la\",\n}\n\nlabels[\"New Sanskrit\"] = {\n\tWikipedia = \"Sanskrit Revival\",\n\tplain_categories = {\"New Sanskrit\"},\n\tlanguage = \"sa\",\n}\naliases[\"Neo-Sanskrit\"] = \"New Sanskrit\"\n\nlabels[\"\
      New Zealand English\"] = {\n\tdisplay = \"New Zealand\",\n\tWikipedia = true,\n\tplain_categories = {\"New Zealand English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Non-Oxford British spelling\"] = {\n\tdisplay = \"Non-[[w:Oxford spelling|Oxford]] [[British\
      \ English]]\",\n\tplain_categories = {\"British English forms\"},\n\tlanguage = \"en\",\n}\naliases[\"non-Oxford British spelling\"] = \"Non-Oxford British spelling\"\naliases[\"Non-Oxford\"] = \"Non-Oxford British spelling\"\naliases[\"non-Oxford\"] =\
      \ \"Non-Oxford British spelling\"\n\nlabels[\"Normal Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About Mbugu|Mbugu]]\",\n\tplain_categories = {\"Normal Mbugu\"},\n\tlanguage = \"mhd\",\n}\naliases[\"normal Mbugu\"] = \"Normal Mbugu\"\n\nlabels[\"North Germanic\"\
      ] = {\n\tWikipedia = \"North Germanic languages\",\n\tplain_categories = {\"North Proto-Germanic\"},\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"Northern Dutch\"] = {\n\tdisplay = \"Northern\",\n\tWikipedia = \"Dutch dialects\",\n\tplain_categories = {\"\
      Northern Dutch\"},\n\tlanguage = \"nl\",\n}\n\nlabels[\"Northern England English\"] = {\n\tdisplay = \"Northern England\",\n\tWikipedia = true,\n\tplain_categories = {\"Northern England English\"},\n\tlanguage = \"en\",\n}\naliases[\"Northern English dialect\"\
      ] = \"Northern England English\"\naliases[\"northern English\"] = \"Northern England English\"\naliases[\"North English\"] = \"Northern England English\"\naliases[\"north English\"] = \"Northern England English\"\n\nlabels[\"Northern Middle English\"]\
      \ = {\n\tdisplay = \"Northern\",\n\tplain_categories = {\"Northern Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Northern ME\"] = \"Northern Middle English\"\naliases[\"North ME\"] = \"Northern Middle English\"\n\nlabels[\"Northern Finnic\"]\
      \ = {\n\tplain_categories = {\"Northern Proto-Finnic\"},\n\tlanguage = \"fiu-fin-pro\",\n}\n\nlabels[\"Northern German\"] = {\n\tplain_categories = {\"Northern German\"},\n\tlanguage = \"de\",\n}\naliases[\"northern German\"] = \"Northern German\"\naliases[\"\
      North German\"] = \"Northern German\"\naliases[\"north German\"] = \"Northern German\"\n\nlabels[\"Northumbrian\"] = {\n\tWikipedia = \"Northumbrian dialect\",\n\tplain_categories = { \"Northumbrian Old English\", \"Anglian Old English\" },\n\tlanguage\
      \ = \"ang\",\n}\n\nlabels[\"Northwest Germanic\"] = {\n\tWikipedia = \"Northwest Germanic languages\",\n\tplain_categories = {\"Northwest Proto-Germanic\"},\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"Nunavik\"] = {\n\tWikipedia = \"Inuktitut#Nunavik\",\n\
      \tplain_categories = {\"Nunavik Inuktitut\"},\n\tlanguage = \"iu\",\n}\naliases[\"Nunavimmiutitut\"] = \"Nunavik\"\naliases[\"Inuttitut\"] = \"Nunavik\"\n\nlabels[\"Nynorsk\"] = {\n\tdisplay = \"Nynorsk\",\n\tplain_categories = {\"Norwegian Nynorsk\"},\n\
      \tlanguage = \"nn\",\n}\n\nlabels[\"Old\"] = {\n    display = \"[[w:Old Avestan|Old Avestan]]\",\n    language = \"ae\",\n    track = true,\n}\naliases[\"Old Avestan\"] = \"Old\"\n\nlabels[\"Old East Norse\"] = {\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Old East Norse\"},\n\tlanguage = \"non\",\n}\naliases[\"East Norse\"] = \"Old East Norse\"\n\nlabels[\"Old Gutnish\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Old Gutnish Norse\"},\n\tlanguage = \"non\",\n}\naliases[\"Old Gotlandic\"] =\
      \ \"Old Gutnish\"\n\nlabels[\"Old West Norse\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Old West Norse\"},\n\tlanguage = \"non\",\n}\naliases[\"West Norse\"] = \"Old West Norse\"\n\nlabels[\"Ormulum\"] = {\n\tWikipedia = \"Ormulum\",\n\tplain_categories\
      \ = {\"Middle English terms unique to the Ormulum\"},\n\tlanguage = \"enm\",\n}\n\nlabels[\"Oxford British spelling\"] = {\n\tdisplay = \"[[w:Oxford spelling|Oxford]] [[British English]]\",\n\tplain_categories = {\"Oxford spellings\"},\n\tlanguage = \"\
      en\",\n}\naliases[\"Oxford\"] = \"Oxford British spelling\"\n\nlabels[\"Oxyrhynchite\"] = {\n\tWikipedia = \"Coptic language#Oxyrhynchite\",\n\tplain_categories = {\"Oxyrhynchite Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Mesokemic\"] = \"Oxyrhynchite\"\
      \n\nlabels[\"Palatine German\"] = {\n\tdisplay = \"Palatine\",\n\tWikipedia = \"Palatine German language\",\n\tplain_categories = {\"Palatine German\"},\n\tlanguage = \"gmw-rfr\",\n}\naliases[\"Palatinate German\"] = \"Palatine German\"\naliases[\"Pälzisch\"\
      ] = \"Palatine German\"\naliases[\"Pfälzisch\"] = \"Palatine German\"\n\nlabels[\"Pennsylvania Dutch English\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Pennsylvania Dutch English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Pinghua\"] = {\n\tdisplay\
      \ = \"Pinghua\",\n\tWikipedia = true,\n\tplain_categories = {\"Pinghua Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Pomeranian Low German\"] = {\n\tdisplay = \"Pomeranian\",\n\tWikipedia = true,\n\tplain_categories = {\"Pomeranian Low German\"},\n\t\
      language = \"nds-de\",\n}\naliases[\"Pomeranian LG\"] = \"Pomeranian Low German\"\n\nlabels[\"Potteries\"] = {\n\tWikipedia = \"Potteries dialect\",\n\tplain_categories = {\"Potteries English\"},\n\tlanguage = \"en\",\n}\naliases[\"Potteries dialect\"\
      ] = \"Potteries\"\n\nlabels[\"Puter\"] = {\n\tWikipedia = \"Putèr\",\n\tplain_categories = {\"Puter Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Ripuarian\"] = {\n\tWikipedia = \"Ripuarian language\",\n\tplain_categories = {\"Ripuarian Central Franconian\"\
      },\n\tlanguage = \"gmw-cfr\",\n}\naliases[\"Ripuarian Franconian\"] = \"Ripuarian\"\naliases[\"Ripuarisch\"] = \"Ripuarian\"\n\n--[[\nThis category has been deleted.\nlabels[\"Royal Thai\"] = {\n\tdisplay = \"royal\",\n\tplain_categories = {\"Thai royal\
      \ vocabulary\"},\n\tlanguage = \"\",\n}\n]]\n\nlabels[\"Rumantsch Grischun\"] = {\n\tWikipedia = true,\n\tlanguage = \"rm\",\n}\n\nlabels[\"Saarlandic\"] = {\n\tdisplay = \"Saarland\",\n\tWikipedia = \"Saarland\",\n\tplain_categories = {\"Saarland German\"\
      },\n\tlanguage = \"\",\n}\naliases[\"Saarländisch\"] = \"Saarlandic\"\naliases[\"Saarlandish\"] = \"Saarlandic\"\n\nlabels[\"Sahidic\"] = {\n\tWikipedia = \"Coptic language#Sahidic\",\n\tplain_categories = {\"Sahidic Coptic\"},\n\tlanguage = \"cop\",\n\
      }\naliases[\"Thebaic\"] = \"Sahidic\"\n\nlabels[\"Scottish English\"] = {\n\tdisplay = \"Scotland\",\n\tWikipedia = true,\n\tplain_categories = {\"Scottish English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Shahbazgarhi\"] = {\n\tdisplay = \"Shahbazgarhi\"\
      ,\n\tWikipedia = \"Shahbaz Garhi\",\n\tplain_categories = {\"Shahbazgarhi Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Shapsug\"] = {\n\tdisplay = \"Shapsug dialect\",\n\tWikipedia = \"Shapsug Adyghe dialect\",\n\tplain_categories = {\"\
      Shapsug Adyghe\"},\n\tlanguage = \"ady\",\n}\n\nlabels[\"Shopski\"] = {\n\tWikipedia = \"Shopi#Dialects\",\n\tplain_categories = {\"Shopski Bulgarian\"},\n\tlanguage = \"bg\",\n}\n\nlabels[\"Silla\"] = {\n\tplain_categories = {\"Silla Old Korean\"},\n\t\
      language = \"oko\",\n}\n\nlabels[\"Sistani\"] = {\n\tWikipedia = \"Sistani dialect\",\n\tplain_categories = {\"Sistani Persian\"},\n\tlanguage = \"fa\",\n}\n\nlabels[\"Siyi\"] = {\n\tWikipedia = \"Siyi Yue\",\n\tlanguage = \"zh\",\n}\n\nlabels[\"Skiri\
      \ Pawnee\"] = {\n\tplain_categories = {\"Skiri Pawnee\"},\n\tlanguage = \"paw\",\n}\n\nlabels[\"Sopara\"] = {\n\tdisplay = \"Sopara\",\n\tWikipedia = true,\n\tplain_categories = {\"Sopara Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"South\
      \ African English\"] = {\n\tdisplay = \"South Africa\",\n\tWikipedia = true,\n\tplain_categories = {\"South African English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"South Scots\"] = {\n\tWikipedia = \"Southern Scots\",\n\tplain_categories = {\"South Scots\"\
      },\n\tlanguage = \"sco\",\n}\n\nlabels[\"Southern Dutch\"] = {\n\tdisplay = \"Southern\",\n\tWikipedia = \"Dutch dialects\",\n\tplain_categories = {\"Southern Dutch\"},\n\tlanguage = \"nl\",\n}\n\nlabels[\"Southern England English\"] = {\n\tdisplay = \"\
      Southern England\",\n\tWikipedia = \"English in southern England\",\n\tplain_categories = {\"Southern England English\"},\n\tlanguage = \"en\",\n}\naliases[\"Southern English\"] = \"Southern England English\"\naliases[\"Southern English dialect\"] = \"\
      Southern England English\"\n\nlabels[\"Southern German\"] = {\n\tplain_categories = {\"Southern German\"},\n\tlanguage = \"\",\n}\naliases[\"southern German\"] = \"Southern German\"\naliases[\"South German\"] = \"Southern German\"\naliases[\"south German\"\
      ] = \"Southern German\"\n\nlabels[\"Southern Middle English\"] = {\n\tdisplay = \"Southern\",\n\tplain_categories = {\"Southern Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Southern ME\"] = \"Southern Middle English\"\naliases[\"South ME\"]\
      \ = \"Southern Middle English\"\naliases[\"Southwest ME\"] = \"Southern Middle English\"\n\nlabels[\"Southern US English\"] = {\n\tdisplay = \"Southern US\",\n\tWikipedia = \"Southern American English\",\n\tplain_categories = {\"Southern US English\"},\n\
      \tlanguage = \"en\",\n}\naliases[\"Southern American English\"] = \"Southern US English\"\n\nlabels[\"Surmiran\"] = {\n\tWikipedia = \"Surmiran dialect\",\n\tplain_categories = {\"Surmiran Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Sursilvan\"]\
      \ = {\n\tWikipedia = \"Sursilvan dialects (Romansh)\",\n\tplain_categories = {\"Sursilvan Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Sussex\"] = {\n\tWikipedia = \"Sussex dialect\",\n\tplain_categories = {\"Sussex English\"},\n\tlanguage = \"en\"\
      ,\n}\n\nlabels[\"Sutsilvan\"] = {\n\tWikipedia = \"Sutsilvan dialects (Romansh)\",\n\tplain_categories = {\"Sutsilvan Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Swiss German\"] = {\n\tdisplay = \"Switzerland\",\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Switzerland German\"},\n\tlanguage = \"de\",\n}\n\nlabels[\"Switzerland and Liechtenstein spelling\"] = {\n\tdisplay = \"[[Switzerland]] and [[Liechtenstein]]\",\n\tplain_categories = {\"Switzerland and Liechtenstein German forms\"},\n\tlanguage\
      \ = \"de\",\n}\naliases[\"SLDE\"] = \"Switzerland and Liechtenstein spelling\"\n\nlabels[\"Taishanese\"] = {\n\tdisplay = \"[[Taishanese]]\",\n\tplain_categories = {\"Taishanese Chinese\"},\n\tlanguage = \"zh\",\n}\naliases[\"Toishanese\"] = \"Taishanese\"\
      \naliases[\"Hoisanese\"] = \"Taishanese\"\n\nlabels[\"Taiwanese Hakka\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Taiwanese Hakka\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwan Hakka\"] = \"Taiwanese Hakka\"\n\nlabels[\"Taiwanese Mandarin\"] =\
      \ {\n\tWikipedia = true,\n\tplain_categories = {\"Taiwanese Mandarin\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwan Mandarin\"] = \"Taiwanese Mandarin\"\n\nlabels[\"Taiwanese Hokkien\"] = {\n\tWikipedia = \"Taiwanese Hokkien\",\n\tplain_categories = {\"\
      Taiwanese Min Nan\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwanese Min Nan\"] = \"Taiwanese Hokkien\"\naliases[\"Taiwan Hokkien\"] = \"Taiwanese Hokkien\"\naliases[\"Taiwan Min Nan\"] = \"Taiwanese Hokkien\"\n\nlabels[\"Taiwanese Hokkien and Hakka\"]\
      \ = {\n\tdisplay = \"[[w:Taiwanese Hokkien|Taiwanese Hokkien]] and [[w:Taiwanese Hakka|Hakka]]\",\n\tplain_categories = {\"Taiwanese Min Nan\", \"Taiwanese Hakka\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwanese Min Nan and Hakka\"] = \"Taiwanese Hokkien\
      \ and Hakka\"\naliases[\"Taiwanese Hakka and Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Hakka and Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Min Nan &amp; Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"\
      Taiwanese Hokkien &amp; Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Hakka &amp; Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Hakka &amp; Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hokkien and\
      \ Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka and Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka and Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Min Nan &amp; Hakka\"] = \"Taiwanese Hokkien\
      \ and Hakka\"\naliases[\"Taiwan Hokkien &amp; Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka &amp; Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka &amp; Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\n\nlabels[\"\
      Teochew\"] = {\n\tdisplay = \"[[Teochew]]\",\n\tplain_categories = {\"Teochew Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Tosk\"] = {\n\tWikipedia = \"Tosk Albanian\",\n\tplain_categories = {\"Tosk Albanian\"},\n\tlanguage = \"sq\",\n}\n\nlabels[\"\
      Twi\"] = {\n\tdisplay = \"[[w:Twi|Twi]]\",\n\tplain_categories = { \"Twi Akan\" },\n\tlanguage = \"ak\",\n}\naliases[\"Akan Kasa\"] = \"Twi\"\n\nlabels[\"Tyneside\"] = {\n\tplain_categories = {\"Geordie English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"\
      Ulster Scots\"] = {\n\tWikipedia = \"Ulster Scots dialects\",\n\tplain_categories = {\"Ulster Scots\"},\n\tlanguage = \"sco\",\n}\naliases[\"Ullans\"] = \"Ulster Scots\"\n\nlabels[\"US English\"] = {\n\tdisplay = \"US\",\n\tWikipedia = \"American English\"\
      ,\n\tplain_categories = {\"American English\"},\n\tlanguage = \"en\",\n}\naliases[\"U.S. English\"] = \"US English\"\naliases[\"American English\"] = \"US English\"\n\nlabels[\"Vallader\"] = {\n\tWikipedia = \"Vallader dialect (Romansh)\",\n\tplain_categories\
      \ = {\"Vallader Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Vedic\"] = {\n    display = \"[[w:Vedic Sanskrit|Vedic]]\",\n    plain_categories = {\"Vedic Sanskrit\"},\n    language = \"sa\",\n}\n\nlabels[\"Vegliot\"] = {\n\tdisplay = \"[[w:Dalmatian_language#Vegliot_dialect|Vegliot]]\"\
      ,\n\tplain_categories = {\"Vegliot Dalmatian\"},\n\tlanguage = \"dlm\",\n}\naliases[\"Krk\"] = \"Vegliot\"\n\nlabels[\"Vivaro-Alpine\"] = {\n\tWikipedia = \"Vivaro-Alpine dialect\",\n\tplain_categories = {\"Vivaro-Alpine Occitan\"},\n\tlanguage = \"oc\"\
      ,\n}\n\nlabels[\"Walser\"] = {\n\tWikipedia = \"Walser German\",\n\tplain_categories = {\"Walser German\"},\n\tlanguage = \"gsw\"\n}\naliases[\"wae\"] = \"Walser\"\naliases[\"Waser German\"] = \"Walser\"\naliases[\"Walserdeutsch\"] = \"Walser\"\n\nlabels[\"\
      West Arabian\"] = {\n\tdisplay = \"Hejazi\",\n\tplain_categories = {\"Hejazi Arabic\"},\n\tlanguage = \"ar\",\n}\naliases[\"Hejazi Arabic\"] = \"West Arabian\"\n\nlabels[\"West Country English\"] = {\n\tdisplay = \"West Country\",\n\tWikipedia = true,\n\
      \tplain_categories = {\"West Country English\"},\n\tlanguage = \"en\",\n}\naliases[\"West Country dialect\"] = \"West Country English\"\n\nlabels[\"West Germanic\"] = {\n\tWikipedia = \"West Germanic languages\",\n\tplain_categories = {\"West Proto-Germanic\"\
      },\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"West Midland Middle English\"] = {\n\tdisplay = \"West Midlands\",\n\tplain_categories = {\"West Midland Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"West Midlands ME\"] = \"West Midland Middle English\"\
      \naliases[\"West Midland ME\"] = \"West Midland Middle English\"\n\nlabels[\"West Midlands English\"] = {\n\tdisplay = \"West Midlands\",\n\tWikipedia = true,\n\tplain_categories = {\"West Midlands English\"},\n\tlanguage = \"en\",\n}\naliases[\"West Midlands\
      \ dialect\"] = \"West Midlands English\"\n\nlabels[\"West Saxon\"] = {\n\tWikipedia = \"West Saxon dialect\",\n\tplain_categories = { \"West Saxon Old English\" },\n\tlanguage = \"ang\",\n}\n\n--[=[\nNo category exists yet.\nlabels[\"West Palatine\"] =\
      \ {\n\tdisplay = \"Westpfälzisch\",\n\tWikipedia = \"Palatine German language\",\n\tplain_categories = {\"West Palatine German\"},\n\tlanguage = \"\",\n}\naliases[\"Westpfälzisch\"] = \"West Palatine\"\n]=]\n\nlabels[\"Western Armenian\"] = {\n\tWikipedia\
      \ = true,\n\tplain_categories = {\"Western Armenian\"},\n\tlanguage = \"hy\",\n}\n\nlabels[\"Western Catalan\"] = {\n\tWikipedia = \"Catalan dialects\",\n\tplain_categories = {\"Western Catalan\"},\n\tlanguage = \"ca\",\n}\n\nlabels[\"Western Malayo-Polynesian\"\
      ] = {\n\tWikipedia = \"Western Malayo-Polynesian languages\",\n\tplain_categories = {\"Western Proto-Malayo-Polynesian\"},\n\tlanguage = \"poz-pro\",\n}\n\nlabels[\"Western Pomeranian Low German\"] = {\n\tdisplay = \"Western Pomeranian\",\n\tplain_categories\
      \ = {\"Western Pomeranian Low German\"},\n\tlanguage = \"nds-de\",\n}\naliases[\"West Pomeranian Low German\"] = \"Western Pomeranian Low German\"\naliases[\"Western Pomeranian LG\"] = \"Western Pomeranian Low German\"\naliases[\"West Pomeranian LG\"]\
      \ = \"Western Pomeranian Low German\"\n\nlabels[\"Western Samic\"] = {\n\tplain_categories = {\"Western Proto-Samic\"},\n\tlanguage = \"smi-pro\",\n}\n\nlabels[\"Wood Frisian\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Wood Frisian\"},\n\tlanguage\
      \ = \"fy\",\n}\n\nlabels[\"Wu\"] = {\n\tdisplay = \"[[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Xiang\"] = {\n\tdisplay = \"[[Xiang]]\",\n\tplain_categories = {\"Xiang Chinese\"},\n\tlanguage = \"zh\",\n}\n\n\
      labels[\"Ye'kwana\"] = {\n\tdisplay = \"Ye'kwana dialect\",\n\tplain_categories = {\"Ye'kwana Maquiritari\"},\n\tlanguage = \"mch\",\n}\naliases[\"Ye'kwana dialect\"] = \"Ye'kwana\"\n\nlabels[\"Yerragudi\"] = {\n\tdisplay = \"Yerragudi\",\n\tplain_categories\
      \ = {\"Yerragudi Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Young\"] = {\n    display = \"[[w:Young Avestan|Young Avestan]]\",\n    language = \"ae\",\n}\naliases[\"Young Avestan\"] = \"Young\"\naliases[\"Younger\"] = \"Young\"\naliases[\"\
      Younger Avestan\"] = \"Young\"\n\nlabels[\"Zhongshan Min\"] = {\n\tdisplay = \"Zhongshan Min\",\n\tWikipedia = true,\n\tplain_categories = {\"Zhongshan Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\n--[[\tAdds a \"languages\" field containing [\"&lt;language\
      \ code&gt;\"] = true,\n\t\tif there is a \"language\" field with a non-empty value.\t\t]]\nm_functions.handle_languages(labels)\n\nreturn {\n\t[\"labels\"] = labels,\n\t[\"aliases\"] = aliases,\n\t[\"deprecated\"] = deprecated,\n}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:03.100Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AISBN&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49172 t=1555362363004469
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1217'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:03 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1343.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 599731415, 241093986, 694037541
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="6004544" pageid="6004544" ns="10" title="Template:ISBN"><revisions><rev user="Suzukaze-c" timestamp="2018-03-29T00:50:23Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="change the arrow to point right (maybe less confusing)" xml:space="preserve">&lt;includeonly&gt;[[Special:BookSources/{{{1}}}|→ISBN]]{{#invoke:check isxn|check_isbn|{{{1}}}|error=&amp;nbsp;&lt;span class="error" style="font-size:88%"&gt;Invalid&amp;nbsp;ISBN&lt;/span&gt;[[Category:Pages with ISBN errors]]}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:03.307Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Acheck+isxn&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=59650 t=1555362363189966
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:03 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1283.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 598355128, 833652269, 696462672
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6004546\" pageid=\"6004546\" ns=\"828\" title=\"Module:check isxn\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-02-25T06:11:29Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"rewrite entry points to be callable from Lua\" xml:space=\"preserve\">-- This template is a copy of the ISXN validation code from [[Module:Citation/CS1]]\n-- which allows for validating\
      \ ISBN, ISMN, and ISSN without invoking a citation template\n\nlocal export = {}\n\n--[[--------------------------&lt; IS _ V A L I D _ I S X N &gt;-----------------------------------------------------\n\nISBN-10 and ISSN validator code calculates checksum\
      \ across all isbn/issn digits including the check digit. ISBN-13 is checked in check_isbn().\nIf the number is valid the result will be 0. Before calling this function, issbn/issn must be checked for length and stripped of dashes,\nspaces and other non-isxn\
      \ characters.\n\n]]\n\nlocal function is_valid_isxn (isxn_str, len)\n\tlocal temp = 0;\n\tisxn_str = { isxn_str:byte(1, len) };\t-- make a table of byte values '0' → 0x30 .. '9'  → 0x39, 'X' → 0x58\n\tlen = len+1;\t\t\t\t\t\t\t-- adjust to be a loop counter\n\
      \tfor i, v in ipairs( isxn_str ) do\t\t-- loop through all of the bytes and calculate the checksum\n\t\tif v == string.byte( \"X\" ) then\t\t-- if checkdigit is X (compares the byte value of 'X' which is 0x58)\n\t\t\ttemp = temp + 10*( len - i );\t-- it\
      \ represents 10 decimal\n\t\telse\n\t\t\ttemp = temp + tonumber( string.char(v) )*(len-i);\n\t\tend\n\tend\n\treturn temp % 11 == 0;\t\t\t\t\t-- returns true if calculation result is zero\nend\n\n\n--[[--------------------------&lt; IS _ V A L I D _ I\
      \ S X N  _ 1 3 &gt;----------------------------------------------\n\nISBN-13 and ISMN validator code calculates checksum across all 13 isbn/ismn digits including the check digit.\nIf the number is valid, the result will be 0. Before calling this function,\
      \ isbn-13/ismn must be checked for length\nand stripped of dashes, spaces and other non-isxn-13 characters.\n\n]]\n\nlocal function is_valid_isxn_13 (isxn_str)\n\tlocal temp=0;\n\t\n\tisxn_str = { isxn_str:byte(1, 13) };\t\t\t\t\t\t\t\t\t\t-- make a table\
      \ of byte values '0' → 0x30 .. '9'  → 0x39\n\tfor i, v in ipairs( isxn_str ) do\n\t\ttemp = temp + (3 - 2*(i % 2)) * tonumber( string.char(v) );\t\t\t\t-- multiply odd index digits by 1, even index digits by 3 and sum; includes check digit\n\tend\n\treturn\
      \ temp % 10 == 0;\t\t\t\t\t\t\t\t\t\t\t\t\t\t-- sum modulo 10 is zero when isbn-13/ismn is correct\nend\n\n--[[--------------------------&lt; C H E C K _ I S B N &gt;------------------------------------------------------------\n\nDetermines whether an\
      \ ISBN string is valid\n\n]]\n\nlocal function check_isbn( isbn_str, error_string )\n\tif nil ~= isbn_str:match(\"[^%s-0-9X]\") then -- fail if isbn_str contains anything but digits, hyphens, or the uppercase X\n\t\treturn error_string;\n\tend\n\tisbn_str\
      \ = isbn_str:gsub( \"-\", \"\" ):gsub( \" \", \"\" );\t-- remove hyphens and spaces\n\tlocal len = isbn_str:len();\n \n\tif len ~= 10 and len ~= 13 then\n\t\treturn error_string;\n\tend\n\n\tif len == 10 then\n\t\tif isbn_str:match( \"^%d*X?$\" ) == nil\
      \ then \n\t\t\treturn error_string; \n\t\tend\n\t\treturn is_valid_isxn(isbn_str, 10) and '' or error_string;\n\telse\n\t\tlocal temp = 0;\n\t\tif isbn_str:match( \"^97[89]%d*$\" ) == nil then -- isbn13 begins with 978 or 979; ismn begins with 979\n\t\t\
      \treturn error_string; \n\t\tend\n\t\treturn is_valid_isxn_13 (isbn_str) and '' or error_string;\n\tend\nend\n\n--[[--------------------------&lt; C H E C K _ I S M N &gt;------------------------------------------------------------\n\nDetermines whether\
      \ an ISMN string is valid.  Similar to isbn-13, ismn is 13 digits begining 979-0-... and uses the\nsame check digit calculations.  See http://www.ismn-international.org/download/Web_ISMN_Users_Manual_2008-6.pdf\nsection 2, pages 9–12.\n\n]]\n\nlocal function\
      \ check_ismn (id, error_string)\n\tlocal text;\n\tlocal valid_ismn = true;\n\n\tid=id:gsub( \"[%s-–]\", \"\" );\t\t\t\t\t\t\t\t\t\t\t\t\t-- strip spaces, hyphens, and endashes from the ismn\n\n\tif 13 ~= id:len() or id:match( \"^9790%d*$\" ) == nil then\t\
      \t\t\t\t-- ismn must be 13 digits and begin 9790\n\t\tvalid_ismn = false;\n\telse\n\t\tvalid_ismn=is_valid_isxn_13 (id);\t\t\t\t\t\t\t\t\t\t-- validate ismn\n\tend\n\n\treturn valid_ismn and '' or error_string\nend\n\n--[[--------------------------&lt;\
      \ I S S N &gt;----------------------------------------------------------------------\n\nValidate and format an issn.  This code fixes the case where an editor has included an ISSN in the citation but has separated the two groups of four\ndigits with a\
      \ space.  When that condition occurred, the resulting link looked like this:\n\n\t|issn=0819 4327 gives: [http://www.worldcat.org/issn/0819 4327 0819 4327]  -- can't have spaces in an external link\n\t\nThis code now prevents that by inserting a hyphen\
      \ at the issn midpoint.  It also validates the issn for length and makes sure that the checkdigit agrees\nwith the calculated value.  Incorrect length (8 digits), characters other than 0-9 and X, or checkdigit / calculated value mismatch will all cause\
      \ a check issn\nerror message.\n\n]]\n\nlocal function check_issn(id, error_string)\n\tlocal issn_copy = id;\t\t-- save a copy of unadulterated issn; use this version for display if issn does not validate\n\tlocal text;\n\tlocal valid_issn = true;\n\n\t\
      if not id:match ('^%d%d%d%d%-%d%d%d[%dX]$') then\n\t\treturn error_string;\n\tend\n\t\n\tid=id:gsub( \"[%s-–]\", \"\" );\t\t\t\t\t\t\t\t\t-- strip spaces, hyphens, and endashes from the issn\n\n\tif 8 ~= id:len() or nil == id:match( \"^%d*X?$\" ) then\t\
      \t-- validate the issn: 8 digits long, containing only 0-9 or X in the last position\n\t\tvalid_issn=false;\t\t\t\t\t\t\t\t\t\t-- wrong length or improper character\n\telse\n\t\tvalid_issn=is_valid_isxn(id, 8);\t\t\t\t\t\t-- validate issn\n\tend\n\n\t\
      return valid_issn and '' or error_string\nend\n\n\n------------------------------&lt; E N T R Y   P O I N T S &gt;--------------------------------------------------====\n\nlocal function call_isxn(fn, arg, err)\n\tif type(arg) == \"table\" then\n\t\treturn\
      \ fn(arg.args[1] or arg:getParent().args[1], arg.args['error'] or arg:getParent().args['error'] or 'error')\n\telse\n\t\treturn fn(arg, err)\n\tend\nend\n\nfunction export.check_isbn(arg, err)\n\treturn call_isxn(check_isbn, arg, err)\nend\n\nfunction\
      \ export.check_ismn(arg, err)\n\treturn call_isxn(check_ismn, arg, err)\nend\n\nfunction export.check_issn(arg, err)\n\treturn call_isxn(check_issn, arg, err)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:04.460Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fescape_wiki%2Ffrom+Template%3Atrans-top&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38006 t=1555362364376943
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '361'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1344.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 204320376, 494449797, 679640803
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/escape_wiki/from Template:trans-top" to="Template:tracking/ugly hacks/escape wiki/from Template:trans-top" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/escape wiki/from Template:trans-top" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:06:05.316Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fsubstr%2Ffrom+Template%3AR%3AJargon+File&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42884 t=1555362365227759
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '188'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1230.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 655129668, 735092156, 685305018
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/substr/from Template:R:Jargon File" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:06:05.627Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Freplace%2Ffrom+Template%3AR%3AJargon+File&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=32257 t=1555362365549659
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '189'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 207393859, 491307612, 697869102
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/replace/from Template:R:Jargon File" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:06:05.787Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AR%3AReference-meta&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=40912 t=1555362365697247
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '2594'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 497245404, 826126686, 687428926
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="6050378" pageid="6050378" ns="10" title="Template:R:Reference-meta"><revisions><rev user="Sgconlaw" timestamp="2019-04-10T17:48:18Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Updated template" xml:space="preserve">“{{#ifeq:{{{url}}}|none
        | {{{entry}}}
        | [{{{url}}} {{{entry}}}]
      }}” {{#if:{{{in|}}}|{{{in}}}|in}}{{#if:{{{source|}}}
        | &amp;#32;{{{source}}}; reproduced {{#if:{{{on|}}}|{{{on}}}|on}}
      }}{{#if:{{{author|}}}
        | &amp;#32;{{{author}}}{{#if:{{{editor|}}}{{{editors|}}}|&lt;nowiki&gt;;&lt;/nowiki&gt;|,}}&amp;#32;
      }}{{#if:{{{editor|}}}
        | &amp;#32;{{{editor}}}, editor,
        | {{#if:{{{editors|}}}
            | &amp;#32;{{{editors}}}, editors,
          }}
      }} &lt;cite&gt;{{#invoke:italics|unitalicize_brackets|{{{reference}}}}}&lt;/cite&gt;{{#if:{{{trans-reference|}}}
        | &amp;#32;[''{{{trans-reference}}}'']
      }}{{#if:{{{reference-url|}}}
        |&lt;sup&gt;[{{{reference-url}}}]&lt;/sup&gt;
      }}{{#if:{{{volume|}}}
        |, volume {{{volume}}}
      }}{{#if:{{{edition|}}}
        |, {{{edition}}} edition
      }}{{#if:{{{location|}}}
        |, {{{location}}}
      }}{{#if:{{{publisher|}}}
        | {{#if:{{{location|}}}|&lt;nowiki&gt;:&lt;/nowiki&gt;|,}} {{{publisher}}}
      }}{{#if:{{{date|}}}
        |, {{{date}}}
      }}{{#if:{{{isbn|}}}
        |, &lt;small&gt;{{ISBN|{{{isbn}}}}}&lt;/small&gt;
      }}{{#if:{{{oclc|}}}
        |, &lt;small&gt;{{OCLC|{{{oclc}}}}}&lt;/small&gt;
      }}{{#if:{{{accessdate|}}}
        |, retrieved {{#formatdate:{{{accessdate}}}}}
      }}{{#if:{{{page|}}}
        |, {{#if:{{{pageurl|}}}
             | [{{{pageurl}}} page {{{page}}}]
             | page {{{page}}}
           }}
        | {{#if:{{{pages|}}}
            |, {{#if:{{{pageurl|}}}
                 | [{{{pageurl}}} pages {{{pages}}}]
                 | pages {{{pages}}}
               }}
          }}
      }}{{#if:{{{column|}}}
        |, column {{{column}}}
        | {{#if:{{{columns|}}}
            |, columns {{{columns}}}
          }}
      }}{{#if:{{{passage|}}}
        |&lt;nowiki&gt;:&lt;/nowiki&gt; “{{{passage}}}”
      }}{{#if:{{{nodot|}}}||.}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:05.983Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aitalics&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49331 t=1555362365884197
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1339.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 206670818, 561494119, 700812596
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5880637\" pageid=\"5880637\" ns=\"828\" title=\"Module:italics\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-12-26T23:15:23Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"fix case starting with bolding\" xml:space=\"preserve\">local export = {}\nlocal find = mw.ustring.find\nlocal match = mw.ustring.match\nlocal gsub = mw.ustring.gsub\n\nfunction export.i(text)\n\tif text\
      \ == \"\" or text == nil then\n\t\treturn nil\n\tend\n\t\n\tif type(text) == \"table\" and text.args then\n\t\ttext = text.args[1]\n\tend\n\t\n\t-- Remove whitespace from beginning and end of text.\n\ttext = mw.text.trim(text)\n\t\n\t-- Find parenthesized\
      \ text.\n\tlocal parenthesis = \"\"\n\tif find(text, \"%b()$\") then\n\t\ttext, parenthesis = match(text, \"^(.*)(%b())$\")\n\t\tif text == \"\" or text == nil then\n\t\t\terror(\"Malformed page name: \" .. text)\n\t\tend\n\tend\n\t\n\ttext = \"''\" ..\
      \ text .. \"''\"\n\t\n\t--[[ Adds italics toggle ('') around the whitespace\n\t\tthat surrounds various things that aren't supposed to be italicized:\n\t\tfor instance, Fragaria × ananassa becomes ''Fragaria'' × ''ananassa''.\n\t\t(The hybridization symbol\
      \ × isn't supposed to be italicized.) ]]\n\tlocal notItalicized = {\n\t\t[\"subsp.\"] = true, [\"ssp.\"] = true, [\"var.\"] = true, [\"f.\"] = true,\n\t\t[\"sect.\"] = true, [\"subsect.\"] = true, [\"subg.\"] = true,\n\t}\n\tlocal hybrid = \"×\"\n\t\n\t\
      text = text:gsub(\"(%s*([a-z]+%.)%s*)\",\n\t\tfunction(wholeMatch, abbreviation)\n\t\t\tif notItalicized[abbreviation] then\n\t\t\t\treturn \"''\" .. wholeMatch .. \"''\"\n\t\t\tend\n\t\tend)\n\t\n\ttext = text:gsub(\"%s*\" .. hybrid .. \"%s*\", \"''%0''\"\
      ):gsub(\"%f[']''''%f[^']\", \"\")\n\t\n\treturn text .. parenthesis\nend\n\nfunction export.unitalicize_brackets(text)\n\tif type(text) == \"table\" and text.args then\n\t\ttext = text.args[1]\n\tend\n\t\n\tif not text or text == \"\" then\n\t\treturn\
      \ nil\n\tend\n\t\n\tlocal function unitalicize(text)\n\t\treturn '&lt;span style=\"font-style: normal;\"&gt;' .. text .. '&lt;/span&gt;'\n\tend\n\t\n\tlocal function process(text)\n\t\tif text:find(\"[[\", 1, true) then\n\t\t\tif text:find(\"|\") then\n\
      \t\t\t\treturn text:gsub(\n\t\t\t\t\t\"|.-%]%]\",\n\t\t\t\t\tfunction (piping)\n\t\t\t\t\t\treturn piping:gsub(\"%b[]\", process)\n\t\t\t\t\tend)\n\t\t\tend\n\t\t\t-- do nothing with un-piped wikilinks\n\t\t--[=[\n\t\telseif text:find(\"[http\", 1, true)\
      \ then\n\t\t\treturn text:gsub(\n\t\t\t\t\"%[([^ ]+ )([^%]]+)%]\",\n\t\t\t\tfunction (URL, link_text)\n\t\t\t\t\treturn \"[\" .. URL .. process(link_text) .. \"]\"\n\t\t\t\tend)\n\t\t--]=]\n\t\telseif text:find(\"^%[https?://\") then\n\t\t\t\treturn text:gsub(\n\
      \t\t\t\t\t\" .+\",\n\t\t\t\t\tfunction (link_text)\n\t\t\t\t\t\treturn link_text:gsub(\"%b[]\", process)\n\t\t\t\t\tend)\n\t\telse\n\t\t\tlocal inside_brackets = text:sub(2, -2)\n\t\t\tif inside_brackets == \"...\" or inside_brackets == \"…\" then\n\t\t\
      \t\treturn unitalicize(text)\n\t\t\telse\n\t\t\t\treturn unitalicize(\"[\") .. inside_brackets .. unitalicize(\"]\")\n\t\t\tend\n\t\tend\n\tend\n\t\n\ttext = text:gsub(\"%b[]\", process)\n\t\n\treturn text\nend\n\nfunction export.test(frame)\n\tlocal text\
      \ = frame.args[1]\n\tlocal quote = require(\"Module:yesno\")(frame.args.quote)\n\tif quote then\n\t\treturn export.unitalicize_brackets(text)\n\telse\n\t\treturn export.i(text)\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:07.333Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fis_valid_page_name%2Ffrom+Template%3Aen-verb&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=69256 t=1555362367218394
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '376'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:07 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1344.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 585459625, 552100570, 695151150
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/is_valid_page_name/from Template:en-verb" to="Template:tracking/ugly hacks/is valid page name/from Template:en-verb" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/is valid page name/from Template:en-verb" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:06:07.642Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Am&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58697 t=1555362367536057
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:07 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1283.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 674077150, 240374850, 701564669
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4580450" pageid="4580450" ns="10" title="Template:m"><revisions><rev user="Surjection" timestamp="2018-11-27T19:42:02Z" contentformat="text/x-wiki" contentmodel="wikitext"
      comment="Protected &quot;[[Template:m]]&quot;: Highly visible template/module: even if it is just a redirect ([Edit=Allow only autoconfirmed users] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">#REDIRECT
      [[Template:mention]]</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:06:07.810Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Amention&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41973 t=1555362367719038
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:07 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1343.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 209061968, 262046405, 694470203
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4064248\" pageid=\"4064248\" ns=\"10\" title=\"Template:mention\"><revisions><rev user=\"Vahagn Petrosyan\" timestamp=\"2018-01-04T20:12:00Z\"\
      \ contentformat=\"text/x-wiki\" contentmodel=\"wikitext\" comment=\"Protected &quot;[[Template:mention]]&quot;: Highly visible template/module ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators]\
      \ (indefinite))\" xml:space=\"preserve\">{{#invoke:links/templates|l_term_t|face=term&lt;noinclude&gt;|demo=term&lt;/noinclude&gt;}}&lt;!--\n\n--&gt;{{#if:{{{lang|}}}|[[Category:m with lang]]}}&lt;!--\n\n--&gt;{{#ifeq:{{PAGENAME}}|RecentChanges||&lt;!--\n\
      \    --&gt;{{#ifeq:{{{1|}}}|und|[[Category:Undetermined language links]]}}&lt;!--\n--&gt;}}&lt;!--\n\n--&gt;{{redlink category|{{{1|}}}|{{{2|}}}|template=m}}&lt;!--\n\n--&gt;&lt;noinclude&gt;{{documentation}}&lt;templatedata&gt;\n{\n\t\"params\": {\n\t\
      \t\"1\": {\n\t\t\t\"label\": \"language code\",\n\t\t\t\"example\": \"en\",\n\t\t\t\"type\": \"string\",\n\t\t\t\"required\": true,\n\t\t\t\"aliases\": [\n\t\t\t\t\"The language code (see [[Wiktionary:Languages]]) for the language that the term is in.\"\
      \n\t\t\t]\n\t\t},\n\t\t\"2\": {\n\t\t\t\"label\": \"term\",\n\t\t\t\"example\": \"example\",\n\t\t\t\"type\": \"wiki-page-name\",\n\t\t\t\"description\": \"The page name to be linked to.\"\n\t\t},\n\t\t\"3\": {\n\t\t\t\"label\": \"alternate text\",\n\t\
      \t\t\"description\": \" Alternate text to display as the link title, if different from the page name. Please do not use this only for adding diacritics or punctuation to the word, as the template can automatically remove these. \",\n\t\t\t\"type\": \"\
      string\"\n\t\t},\n\t\t\"t\": {\n\t\t\t\"description\": \"A gloss or short translation of the word. \",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"lit\": {\n\t\t\t\"description\": \" A literal translation for the term.\"\n\t\t},\n\t\t\"id\": {\n\t\t\t\"\
      label\": \"sense id\",\n\t\t\t\"description\": \"A sense id for the term, which links to anchors on the page set by the {{senseid}} template.\",\n\t\t\t\"example\": \"house\",\n\t\t\t\"type\": \"string\"\n\t\t}\n\t},\n\t\"format\": \"inline\",\n\t\"description\"\
      : \"This template generates a link to an entry in a given language. It links to a specific language-section on the target page, and applies language-specific formatting. It can also show a number of annotations after the linked term.\"\n}\n&lt;/templatedata&gt;\n\
      &lt;/noinclude&gt;</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:08.402Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aredlink+category&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51628 t=1555362368301300
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:08 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 733180126, 493237773, 688616085
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5379564" pageid="5379564" ns="10" title="Template:redlink category"><revisions><rev user="Mnemosientje" timestamp="2019-03-07T14:12:31Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">&lt;!--
      This is a list of entries that won't be checked for redlinks. Usually, they are large entries, where redlink checking can cause module errors.
      --&gt;{{#switch:{{PAGENAME}}|-ere|a|and|animal|book|box|do|dog|fish|heart|e|gold|green|I|iron|language|light|man|me|mies|mouth|one|salt|smoke|sun|te|tea|water|wind|一|人|母|女|水|目|Spanish diminutives of given names|Common Russian verbs|Ancient Greek Swadesh list|Frequency dictionary of the modern Russian language (the Russian National Corpus)/1|Frequency dictionary of the modern Russian language (the Russian National Corpus)/8|=|&lt;!--

      The last five refer to Appendix:Spanish diminutives of given names, Appendix:Common Russian verbs, Appendix:Frequency dictionary of the modern Russian language (the Russian National Corpus)/1, Appendix:Frequency dictionary of the modern Russian language (the Russian National Corpus)/8; the namespace has been stripped.

          --&gt;{{#switch:{{NAMESPACE}}||Reconstruction|Appendix=&lt;!--

              This is the list of languages with redlink checking enabled.
              --&gt;{{#switch:{{{1}}}|afa-pro|ang|cel-pro|egy|es|fi|gem-pro|gml|got|grc|iir-pro|ine-pro|it|itc-pro|map-pro|non|poz-pro|poz-pol-pro|pt|ru|sem-pro|sit-pro|sla-pro|te|zh|cmn|yue|nan|hak=&lt;!-- testing
                  --&gt;{{#ifeq:{{isValidPageName|{{{2|}}}}}|valid|&lt;!--
                      --&gt;{{#invoke:redlink category|cat|{{{1}}}|{{{2}}}|template={{{template|-}}}}}&lt;!--
                  --&gt;}}&lt;!--
              --&gt;}}&lt;!--
          --&gt;}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:08.814Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ahead&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47680 t=1555362368719015
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:08 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1233.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 415117905, 552820287, 695251758
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="338925" pageid="338925" ns="10" title="Template:head"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T18:15:15Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:head]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:headword/templates|head_t}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:06:08.991Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=37755 t=1555362368901083
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:08 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1225.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 490074456, 495135445, 701564754
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4262766\" pageid=\"4262766\" ns=\"828\" title=\"Module:headword/templates\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-08T17:54:19Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Update to new [[WT:ACCEL]] standard\" xml:space=\"preserve\">local export = {}\n\n-- Part of speech types that should not be pluralized.\nlocal invariable = mw.loadData(\"Module:headword/data\"\
      ).invariable\n\nfunction export.head_t(frame)\n\tlocal plain_param = {}\n\tlocal list_with_holes = {list = true, allow_holes = true}\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[\"sc\"] = plain_param,\n\t\t[\"cat sc\"] = plain_param,\n\
      \t\t[\"sort\"] = plain_param,\n\t\t\n\t\t[2] = {required = true, default = \"nouns\"},\n\t\t[\"noposcat\"] = {type = \"boolean\"},\n\t\t[\"cat2\"] = plain_param,\n\t\t[\"cat3\"] = plain_param,\n\t\t[\"cat4\"] = plain_param,\n\t\t\n\t\t[\"head\"] = {list\
      \ = true, allow_holes = true, default = \"\"},\n\t\t[\"id\"] = plain_param,\n\t\t[\"tr\"] = list_with_holes,\n\t\t[\"ts\"] = list_with_holes,\n\t\t[\"g\"] = {list = true},\n\t\t\n\t\t[3] = list_with_holes,\n\t\t\n\t\t[\"f=accel-form\"]     = list_with_holes,\n\
      \t\t[\"f=accel-nostore\"]  = {list = true, allow_holes = true, type = \"boolean\"},\n\t\t[\"f=accel-translit\"] = list_with_holes,\n\t\t[\"f=request\"]        = list_with_holes,\n\t\t[\"f=alt\"]            = list_with_holes,\n\t\t[\"f=sc\"]           \
      \  = list_with_holes,\n\t\t[\"f=id\"]             = list_with_holes,\n\t\t[\"f=tr\"]             = list_with_holes,\n\t\t[\"f=g\"]              = list_with_holes,\n\t\t[\"f=qual\"]           = list_with_holes,\n\t\t[\"f=nolink\"]         = {list = true,\
      \ allow_holes = true, type = \"boolean\"},\n\t\t[\"f=lang\"]           = list_with_holes,\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\t-- Get language and script information\n\tlocal data = {}\n\
      \tdata.lang = require(\"Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\tdata.sort_key = args[\"sort\"]\n\tdata.heads = args[\"head\"]\n\tdata.id = args[\"id\"]\n\tdata.translits = args[\"tr\"]\n\tdata.transcriptions\
      \ = args[\"ts\"]\n\tdata.genders = args[\"g\"]\n\t\n\t-- Script\n\tlocal cat_sc\n\t\n\tif args[\"cat sc\"] then\n\t\tdata.sc = (args[\"cat sc\"] and (require(\"Module:scripts\").getByCode(args[\"cat sc\"]) or error(\"The script code \\\"\" .. args[\"cat\
      \ sc\"] .. \"\\\" is not valid.\")) or nil)\n\t\tcat_sc = cat_sc\n\telse\n\t\tdata.sc = (args[\"sc\"] and (require(\"Module:scripts\").getByCode(args[\"sc\"]) or error(\"The script code \\\"\" .. args[\"sc\"] .. \"\\\" is not valid.\")) or nil)\n\tend\n\
      \t\n\t-- Part-of-speech category\n\tdata.pos_category = args[2]\n\tdata.noposcat = args[\"noposcat\"]\n\t\n\tif not data.pos_category:find(\"s$\") and not invariable[data.pos_category] then\n\t\t-- Make the plural form of the part of speech\n\t\tif data.pos_category:find(\"\
      x$\") then -- prefix, suffix, confix, infix, circumfix, affix, interfix, transfix\n\t\t\tdata.pos_category = data.pos_category .. \"es\"\n\t\telse\n\t\t\tdata.pos_category = data.pos_category .. \"s\"\n\t\tend\n\tend\n\t\n\tif cat_sc then\n\t\tdata.pos_category\
      \ = data.pos_category .. \" in \" .. cat_sc:getCategoryName()\n\tend\n\t\n\t-- Additional categories\n\tdata.categories = {}\n\t\n\tif args[\"cat2\"] then\n\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" \" .. args[\"cat2\"])\n\tend\n\
      \t\n\tif args[\"cat3\"] then\n\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" \" .. args[\"cat3\"])\n\tend\n\t\n\tif args[\"cat4\"] then\n\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" \" .. args[\"cat4\"])\n\t\
      end\n\t\n\t-- Inflected forms\n\tdata.inflections = {}\n\t\n\tfor i = 1, math.ceil(args[3].maxindex / 2) do\n\t\tlocal infl_part = {\n\t\t\tlabel    = args[3][i * 2 - 1],\n\t\t\taccel    = args[\"faccel-form\"][i] and {\n\t\t\t\tform     = args[\"faccel-form\"\
      ][i],\n\t\t\t\tnostore  = args[\"faccel-nostore\"][i],\n\t\t\t\ttranslit = args[\"faccel-translit\"][i],\n\t\t\t} or nil,\n\t\t\trequest  = args[\"frequest\"][i],\n\t\t}\n\t\t\n\t\tlocal form = {\n\t\t\tterm       =  args[3][i * 2],\n\t\t\talt        =\
      \  args[\"falt\"][i],\n\t\t\tgenders    = {args[\"fg\"][i]},\n\t\t\tid         =  args[\"fid\"][i],\n\t\t\tlang       =  args[\"flang\"][i],\n\t\t\tnolink     =  args[\"fnolink\"][i],\n\t\t\tqualifiers = {args[\"fqual\"][i]},\n\t\t\tsc         =  args[\"\
      fsc\"][i],\n\t\t\ttranslit   =  args[\"ftr\"][i],\n\t\t}\n\t\t\n\t\tif form.lang then\n\t\t\tform.lang = require(\"Module:languages\").getByCode(form.lang) or require(\"Module:languages\").err(form.lang, \"f\" .. i .. \"lang\")\n\t\tend\n\t\t\n\t\tif form.sc\
      \ then\n\t\t\tform.sc = require(\"Module:scripts\").getByCode(form.sc) or error(\"The script code \\\"\" .. form.sc .. \"\\\" is not valid.\")\n\t\tend\n\t\t\n\t\t-- If no term or alt is given, then the label is shown alone.\n\t\tif form.term or form.alt\
      \ then\n\t\t\ttable.insert(infl_part, form)\n\t\tend\n\t\t\n\t\tif infl_part.label == \"or\" then\n\t\t\t-- Append to the previous inflection part, if one exists\n\t\t\tif #infl_part &gt; 0 and data.inflections[1] then\n\t\t\t\ttable.insert(data.inflections[#data.inflections],\
      \ form)\n\t\t\tend\n\t\telseif infl_part.label then\n\t\t\t-- Add a new inflection part\n\t\t\ttable.insert(data.inflections, infl_part)\n\t\tend\n\tend\n\t\n\treturn require(\"Module:headword\").full_headword(data)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:06:09.165Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fparameters%2Fname+with+equals&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44116 t=1555362369074161
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:06:09 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1282.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 198892547, 254353945, 686745098
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="6569386" pageid="6569386" ns="10" title="Template:tracking/parameters/name with equals"><revisions><rev user="ShakespeareFan00" timestamp="2018-12-22T21:57:04Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Removal of stray tag" xml:space="preserve">&lt;noinclude&gt;
      Headword templates where parameter name is with equals.

      Index of tracking templates:
      {{Special:PrefixIndex/Template:tracking/parameters/name with equals|stripprefix=1}}
      [[Category:head tracking]]
      &lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
