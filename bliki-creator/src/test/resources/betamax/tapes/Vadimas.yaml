!tape
name: Vadimas
interactions:
- recorded: 2015-06-28T20:54:40.119Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Vadimas&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '743'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:39 GMT
      Server: nginx/1.9.2
      Set-Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; Path=/; Domain=.wiktionary.org, WMF-Last-Access=28-Jun-2015;Path=/;HttpOnly;Expires=Thu, 30 Jul 2015 12:00:00 GMT
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1
      X-Cache: cp1053 miss (0), cp3013 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 2807999642, 1503845519, 1086088349
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="3142255" pageid="3142255" ns="0" title="Vadimas"><revisions><rev user="Makaokalani" timestamp="2011-09-15T14:32:48Z" comment="Created page with &quot;==Lithuanian==  ===Proper noun=== {{lt-proper noun|m}}  # &#039;&#039;A transliteration of the {{etyl|ru|lt}} male given name {{term|Вадим||[[Vadim]]|lang=ru|sc=Cyrl}}.  [[Category:lt...&quot;" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">==Lithuanian==

      ===Proper noun===
      {{lt-proper noun|m}}

      # ''A transliteration of the {{etyl|ru|lt}} male given name {{term|Вадим||[[Vadim]]|lang=ru|sc=Cyrl}}.

      [[Category:lt:Russian male given names]]</rev></revisions></page></pages></query></api>
- recorded: 2015-06-28T20:54:40.314Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alt-proper+noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '715'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:40 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1065 miss (0), cp3014 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 1887210460, 1786292133, 1086089651
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="1500675" pageid="1500675" ns="10" title="Template:lt-proper noun"><revisions><rev user="CodeCat" timestamp="2014-07-02T13:15:16Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{head|lt|proper noun|head={{{head|}}}&lt;!--

      --&gt;|g={{#switch:{{{1|}}}|m|m-p|f|f-p={{{1}}}|#default=?}}&lt;!--

      --&gt;|{{#if:{{{pl|}}}|plural}}&lt;!--
      --&gt;|{{{pl|}}}&lt;!--

      --&gt;}}&lt;!--

      --&gt;&lt;includeonly&gt;&lt;!--
      --&gt;{{#if:{{{2|}}}|&lt;small&gt;stress pattern {{{2}}}&lt;/small&gt;}}&lt;!--
      --&gt;&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}</rev></revisions></page></pages></query></api>
- recorded: 2015-06-28T20:54:40.657Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ahead&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '422'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:40 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1066 miss (0), cp3013 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 2435934033, 1503846138, 1086090506
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="338925" pageid="338925" ns="10" title="Template:head"><revisions><rev user="CodeCat" timestamp="2015-06-19T18:48:30Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:headword/templates|head_t}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2015-06-28T20:54:41.056Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '10219'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:40 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1055 miss (0), cp3041 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 1031663782, 2126768726, 1086092915
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4262766\" pageid=\"4262766\" ns=\"828\" title=\"Module:headword/templates\"><revisions><rev user=\"CodeCat\" timestamp=\"2015-06-19T18:49:17Z\" comment=\"\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\n-- Part of speech types that should not be pluralized.\nlocal invariable = {\n\t[&quot;cmavo&quot;] = true,\n\t[&quot;cmene&quot;] = true,\n\t[&quot;fu'ivla&quot;] = true,\n\
      \t[&quot;gismu&quot;] = true,\n\t[&quot;Han tu&quot;] = true,\n\t[&quot;hanzi&quot;] = true,\n\t[&quot;hanja&quot;] = true,\n\t[&quot;jyutping&quot;] = true,\n\t[&quot;kanji&quot;] = true,\n\t[&quot;lujvo&quot;] = true,\n\t[&quot;phrasebook&quot;] = true,\n\
      \t[&quot;pinyin&quot;] = true,\n\t[&quot;rafsi&quot;] = true,\n\t[&quot;romaji&quot;] = true,\n}\n\nlocal params = {\n\t[1] = {required = true, default = &quot;und&quot;},\n\t[&quot;sc&quot;] = {},\n\t[&quot;cat sc&quot;] = {},\n\t[&quot;sort&quot;] =\
      \ {},\n\t\n\t[2] = {required = true},\n\t[&quot;cat2&quot;] = {},\n\t[&quot;cat3&quot;] = {},\n\t\n\t[&quot;head&quot;] = {list = true, allow_holes = true, default = &quot;&quot;},\n\t[&quot;tr&quot;] = {list = true, allow_holes = true},\n\t[&quot;g&quot;]\
      \ = {list = true},\n\t\n\t[3] = {list = true, allow_holes = true},\n\t\n\t[&quot;f1accel&quot;]  = {}, [&quot;f1request&quot;]  = {}, [&quot;f1alt&quot;]  = {}, [&quot;f1sc&quot;]  = {}, [&quot;f1id&quot;]  = {}, [&quot;f1tr&quot;]  = {}, [&quot;f1g&quot;]\
      \  = {}, [&quot;f1qual&quot;]  = {}, [&quot;f1nolink&quot;]  = {type = &quot;boolean&quot;}, [&quot;f1lang&quot;]  = {},\n\t[&quot;f2accel&quot;]  = {}, [&quot;f2request&quot;]  = {}, [&quot;f2alt&quot;]  = {}, [&quot;f2sc&quot;]  = {}, [&quot;f2id&quot;]\
      \  = {}, [&quot;f2tr&quot;]  = {}, [&quot;f2g&quot;]  = {}, [&quot;f2qual&quot;]  = {}, [&quot;f2nolink&quot;]  = {type = &quot;boolean&quot;}, [&quot;f2lang&quot;]  = {},\n\t[&quot;f3accel&quot;]  = {}, [&quot;f3request&quot;]  = {}, [&quot;f3alt&quot;]\
      \  = {}, [&quot;f3sc&quot;]  = {}, [&quot;f3id&quot;]  = {}, [&quot;f3tr&quot;]  = {}, [&quot;f3g&quot;]  = {}, [&quot;f3qual&quot;]  = {}, [&quot;f3nolink&quot;]  = {type = &quot;boolean&quot;}, [&quot;f3lang&quot;]  = {},\n\t[&quot;f4accel&quot;]  =\
      \ {}, [&quot;f4request&quot;]  = {}, [&quot;f4alt&quot;]  = {}, [&quot;f4sc&quot;]  = {}, [&quot;f4id&quot;]  = {}, [&quot;f4tr&quot;]  = {}, [&quot;f4g&quot;]  = {}, [&quot;f4qual&quot;]  = {}, [&quot;f4nolink&quot;]  = {type = &quot;boolean&quot;}, [&quot;f4lang&quot;]\
      \  = {},\n\t[&quot;f5accel&quot;]  = {}, [&quot;f5request&quot;]  = {}, [&quot;f5alt&quot;]  = {}, [&quot;f5sc&quot;]  = {}, [&quot;f5id&quot;]  = {}, [&quot;f5tr&quot;]  = {}, [&quot;f5g&quot;]  = {}, [&quot;f5qual&quot;]  = {}, [&quot;f5nolink&quot;]\
      \  = {type = &quot;boolean&quot;}, [&quot;f5lang&quot;]  = {},\n\t[&quot;f6accel&quot;]  = {}, [&quot;f6request&quot;]  = {}, [&quot;f6alt&quot;]  = {}, [&quot;f6sc&quot;]  = {}, [&quot;f6id&quot;]  = {}, [&quot;f6tr&quot;]  = {}, [&quot;f6g&quot;]  =\
      \ {}, [&quot;f6qual&quot;]  = {}, [&quot;f6nolink&quot;]  = {type = &quot;boolean&quot;}, [&quot;f6lang&quot;]  = {},\n\t[&quot;f7accel&quot;]  = {}, [&quot;f7request&quot;]  = {}, [&quot;f7alt&quot;]  = {}, [&quot;f7sc&quot;]  = {}, [&quot;f7id&quot;]\
      \  = {}, [&quot;f7tr&quot;]  = {}, [&quot;f7g&quot;]  = {}, [&quot;f7qual&quot;]  = {}, [&quot;f7nolink&quot;]  = {type = &quot;boolean&quot;}, [&quot;f7lang&quot;]  = {},\n\t[&quot;f8accel&quot;]  = {}, [&quot;f8request&quot;]  = {}, [&quot;f8alt&quot;]\
      \  = {}, [&quot;f8sc&quot;]  = {}, [&quot;f8id&quot;]  = {}, [&quot;f8tr&quot;]  = {}, [&quot;f8g&quot;]  = {}, [&quot;f8qual&quot;]  = {}, [&quot;f8nolink&quot;]  = {type = &quot;boolean&quot;}, [&quot;f8lang&quot;]  = {},\n\t[&quot;f9accel&quot;]  =\
      \ {}, [&quot;f9request&quot;]  = {}, [&quot;f9alt&quot;]  = {}, [&quot;f9sc&quot;]  = {}, [&quot;f9id&quot;] =  {}, [&quot;f9tr&quot;]  = {}, [&quot;f9g&quot;]  = {}, [&quot;f9qual&quot;]  = {}, [&quot;f9nolink&quot;]  = {type = &quot;boolean&quot;}, [&quot;f9lang&quot;]\
      \  = {},\n\t[&quot;f10accel&quot;] = {}, [&quot;f10request&quot;] = {}, [&quot;f10alt&quot;] = {}, [&quot;f10sc&quot;] = {}, [&quot;f10id&quot;] = {}, [&quot;f10tr&quot;] = {}, [&quot;f10g&quot;] = {}, [&quot;f10qual&quot;] = {}, [&quot;f10nolink&quot;]\
      \ = {type = &quot;boolean&quot;}, [&quot;f10lang&quot;] = {},\n\t[&quot;f11accel&quot;] = {}, [&quot;f11request&quot;] = {}, [&quot;f11alt&quot;] = {}, [&quot;f11sc&quot;] = {}, [&quot;f11id&quot;] = {}, [&quot;f11tr&quot;] = {}, [&quot;f11g&quot;] = {},\
      \ [&quot;f11qual&quot;] = {}, [&quot;f11nolink&quot;] = {type = &quot;boolean&quot;}, [&quot;f11lang&quot;] = {},\n\t[&quot;f12accel&quot;] = {}, [&quot;f12request&quot;] = {}, [&quot;f12alt&quot;] = {}, [&quot;f12sc&quot;] = {}, [&quot;f12id&quot;] =\
      \ {}, [&quot;f12tr&quot;] = {}, [&quot;f12g&quot;] = {}, [&quot;f12qual&quot;] = {}, [&quot;f12nolink&quot;] = {type = &quot;boolean&quot;}, [&quot;f12lang&quot;] = {},\n\t[&quot;f13accel&quot;] = {}, [&quot;f13request&quot;] = {}, [&quot;f13alt&quot;]\
      \ = {}, [&quot;f13sc&quot;] = {}, [&quot;f13id&quot;] = {}, [&quot;f13tr&quot;] = {}, [&quot;f13g&quot;] = {}, [&quot;f13qual&quot;] = {}, [&quot;f13nolink&quot;] = {type = &quot;boolean&quot;}, [&quot;f13lang&quot;] = {},\n\t[&quot;f14accel&quot;] = {},\
      \ [&quot;f14request&quot;] = {}, [&quot;f14alt&quot;] = {}, [&quot;f14sc&quot;] = {}, [&quot;f14id&quot;] = {}, [&quot;f14tr&quot;] = {}, [&quot;f14g&quot;] = {}, [&quot;f14qual&quot;] = {}, [&quot;f14nolink&quot;] = {type = &quot;boolean&quot;}, [&quot;f14lang&quot;]\
      \ = {},\n\t[&quot;f15accel&quot;] = {}, [&quot;f15request&quot;] = {}, [&quot;f15alt&quot;] = {}, [&quot;f15sc&quot;] = {}, [&quot;f15id&quot;] = {}, [&quot;f15tr&quot;] = {}, [&quot;f15g&quot;] = {}, [&quot;f15qual&quot;] = {}, [&quot;f15nolink&quot;]\
      \ = {type = &quot;boolean&quot;}, [&quot;f15lang&quot;] = {},\n\t[&quot;f16accel&quot;] = {}, [&quot;f16request&quot;] = {}, [&quot;f16alt&quot;] = {}, [&quot;f16sc&quot;] = {}, [&quot;f16id&quot;] = {}, [&quot;f16tr&quot;] = {}, [&quot;f16g&quot;] = {},\
      \ [&quot;f16qual&quot;] = {}, [&quot;f16nolink&quot;] = {type = &quot;boolean&quot;}, [&quot;f16lang&quot;] = {},\n\t[&quot;f17accel&quot;] = {}, [&quot;f17request&quot;] = {}, [&quot;f17alt&quot;] = {}, [&quot;f17sc&quot;] = {}, [&quot;f17id&quot;] =\
      \ {}, [&quot;f17tr&quot;] = {}, [&quot;f17g&quot;] = {}, [&quot;f17qual&quot;] = {}, [&quot;f17nolink&quot;] = {type = &quot;boolean&quot;}, [&quot;f17lang&quot;] = {},\n}\n\nfunction export.head_t(frame)\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args,\
      \ params)\n\t\n\t-- Get language and script information\n\tlocal lang = args[1]\n\tlocal sc = args[&quot;sc&quot;]\n\tlocal cat_sc = args[&quot;cat sc&quot;]\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code\
      \ \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\t\n\tif cat_sc then\n\t\tcat_sc = (cat_sc and (require(&quot;Module:scripts&quot;).getByCode(cat_sc) or error(&quot;The script code \\&quot;&quot; .. cat_sc .. &quot;\\&quot; is not valid.&quot;))\
      \ or nil)\n\t\tsc = cat_sc\n\telse\n\t\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\tend\n\t\n\t-- Gather basic parameters\n\tlocal\
      \ sort_key = args[&quot;sort&quot;]\n\tlocal pos = args[2]\n\tlocal cat2 = args[&quot;cat2&quot;]\n\tlocal cat3 = args[&quot;cat3&quot;]\n\tlocal heads = args[&quot;head&quot;]\n\tlocal translits = args[&quot;tr&quot;]\n\tlocal genders = args[&quot;g&quot;]\n\
      \t\n\t-- Gather inflected forms\n\tlocal inflections = {}\n\t\n\t-- Go over all the inflection parameters\n\tfor i = 1, math.ceil(args[3].maxindex / 2) do\n\t\tlocal infl_part = {\n\t\t\tlabel    = args[3][i * 2 - 1],\n\t\t\taccel    = args[&quot;f&quot;\
      \ .. i .. &quot;accel&quot;],\n\t\t\trequest  = args[&quot;f&quot; .. i .. &quot;request&quot;],\n\t\t\t}\n\t\t\n\t\tlocal form = {\n\t\t\tterm       =  args[3][i * 2],\n\t\t\talt        =  args[&quot;f&quot; .. i .. &quot;alt&quot;],\n\t\t\tgenders  \
      \  = {args[&quot;f&quot; .. i .. &quot;g&quot;]},\n\t\t\tid         =  args[&quot;f&quot; .. i .. &quot;id&quot;],\n\t\t\tlang       =  args[&quot;f&quot; .. i .. &quot;lang&quot;],\n\t\t\tnolink     =  args[&quot;f&quot; .. i .. &quot;nolink&quot;],\n\
      \t\t\tqualifiers = {args[&quot;f&quot; .. i .. &quot;qual&quot;]},\n\t\t\tsc         =  args[&quot;f&quot; .. i .. &quot;sc&quot;],\n\t\t\ttranslit   =  args[&quot;f&quot; .. i .. &quot;tr&quot;],\n\t\t\t}\n\t\t\n\t\tif form.lang ~= nil then\n\t\t\tform.lang\
      \ = require(&quot;Module:languages&quot;).getByCode(form.lang) or error(&quot;The language code \\&quot;&quot; .. form.lang .. &quot;\\&quot; is not valid.&quot;)\n\t\tend\n\t\t\n\t\tif form.sc ~= nil then\n\t\t\tform.sc = require(&quot;Module:scripts&quot;).getByCode(form.sc)\
      \ or error(&quot;The script code \\&quot;&quot; .. form.sc .. &quot;\\&quot; is not valid.&quot;)\n\t\tend\n\t\t\n\t\t-- If no term or alt is given, then the label is shown alone.\n\t\tif form.term or form.alt then\n\t\t\ttable.insert(infl_part, form)\n\
      \t\tend\n\t\t\n\t\tif infl_part.label == &quot;or&quot; then\n\t\t\t-- Append to the previous inflection part, if one exists\n\t\t\tif #infl_part &gt; 0 and inflections[1] then\n\t\t\t\ttable.insert(inflections[#inflections], form)\n\t\t\tend\n\t\telseif\
      \ infl_part.label then\n\t\t\t-- Add a new inflection part\n\t\t\ttable.insert(inflections, infl_part)\n\t\tend\n\tend\n\t\n\t-- Get/set categories\n\tlocal categories = {}\n\tlocal tracking_categories = {}\n\t\n\tif pos then\n\t\tif not pos:find(&quot;s$&quot;)\
      \ and not invariable[pos] then\n\t\t\t-- Make the plural form of the part of speech\n\t\t\tif pos:find(&quot;x$&quot;) then\n\t\t\t\tpos = pos .. &quot;es&quot;\n\t\t\telse\n\t\t\t\tpos = pos .. &quot;s&quot;\n\t\t\tend\n\t\tend\n\t\t\n\t\ttable.insert(categories,\
      \ lang:getCanonicalName() .. &quot; &quot; .. pos .. (cat_sc and &quot; in &quot; .. cat_sc:getCategoryName() or &quot;&quot;))\n\tend\n\t\n\tif cat2 then\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; &quot; .. cat2)\n\tend\n\t\n\tif\
      \ cat3 then\n\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; &quot; .. cat3)\n\tend\n\t\n\treturn require(&quot;Module:headword&quot;).full_headword(lang, sc, heads, translits, genders, inflections, categories, sort_key) ..\n\t\trequire(&quot;Module:utilities&quot;).format_categories(tracking_categories,\
      \ lang, sort_key)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-06-28T20:54:41.255Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aparameters&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '4649'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:41 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1065 miss (0), cp3003 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 1887212373, 3107604558, 1086093883
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4797340\" pageid=\"4797340\" ns=\"828\" title=\"Module:parameters\"><revisions><rev user=\"Chuck Entz\" timestamp=\"2015-06-11T02:41:06Z\" comment=\"make error message clearer:\
      \ &quot;does not exist&quot; -&gt; &quot;is not used by this template&quot;\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\n-- A helper function that removes empty numeric indexes in a table,\n-- so\
      \ that the values are tightly packed like in a normal Lua table.\nfunction export.remove_holes(list)\n\tlocal new_list = {}\n\t\n\tfor i = 1, list.maxindex do\n\t\ttable.insert(new_list, list[i])\n\tend\n\t\n\treturn new_list\nend\n\nfunction export.process(args,\
      \ params)\n\tlocal args_new = {}\n\t\n\t-- Process parameters for specific properties\n\tlocal required = {}\n\tlocal patterns = {}\n\tlocal list_from_index = nil\n\t\n\tfor name, param in pairs(params) do\n\t\tif param.required then\n\t\t\trequired[name]\
      \ = true\n\t\tend\n\t\t\n\t\tif param.list then\n\t\t\tif param.default ~= nil then\n\t\t\t\targs_new[name] = {param.default, maxindex = 1}\n\t\t\telse\n\t\t\t\targs_new[name] = {maxindex = 0}\n\t\t\tend\n\t\t\t\n\t\t\tif type(param.list) == &quot;string&quot;\
      \ then\n\t\t\t\t-- If the list property is a string, then it represents the name\n\t\t\t\t-- to be used as the prefix for list items. This is for use with lists\n\t\t\t\t-- where the first item is a numbered parameter and the\n\t\t\t\t-- subsequent ones\
      \ are named, such as 1, pl2, pl3.\n\t\t\t\tpatterns[&quot;^&quot; .. param.list .. &quot;(%d+)$&quot;] = name\n\t\t\telseif type(name) == &quot;number&quot; then\n\t\t\t\t-- If the name is a number, then all indexed parameters from\n\t\t\t\t-- this number\
      \ onwards go in the list.\n\t\t\t\tlist_from_index = name\n\t\t\telse\n\t\t\t\tpatterns[&quot;^&quot; .. name .. &quot;(%d+)$&quot;] = name\n\t\t\tend\n\t\telseif param.default ~= nil then\n\t\t\targs_new[name] = param.default\n\t\tend\n\tend\n\t\n\t--\
      \ Process the arguments\n\tfor name, val in pairs(args) do\n\t\tlocal index = nil\n\t\t\n\t\tif type(name) == &quot;number&quot; then\n\t\t\tif list_from_index ~= nil and name &gt;= list_from_index then\n\t\t\t\tindex = name - list_from_index + 1\n\t\t\
      \t\tname = list_from_index\n\t\t\tend\n\t\telse\n\t\t\t-- Does this argument name match a pattern?\n\t\t\tfor pattern, pname in pairs(patterns) do\n\t\t\t\tindex = mw.ustring.match(name, pattern)\n\t\t\t\t\n\t\t\t\t-- It matches, so store the parameter\
      \ name and the\n\t\t\t\t-- numeric index extracted from the argument name.\n\t\t\t\tif index then\n\t\t\t\t\tindex = tonumber(index)\n\t\t\t\t\tname = pname\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- If no index was found, use 1 as\
      \ the default index.\n\t\t-- This makes list parameters like g, g2, g3 put g at index 1.\n\t\tindex = index or 1\n\t\t\n\t\tlocal param = params[name]\n\t\t\n\t\t-- If the argument is not in the list of parameters, trigger an error.\n\t\tif not params[name]\
      \ then\n\t\t\terror(&quot;The parameter \\&quot;&quot; .. name .. &quot;\\&quot; is not used by this template.&quot;)\n\t\tend\n\t\t\n\t\t-- Empty string is equivalent to nil unless allow_empty is true.\n\t\tif val == &quot;&quot; and not param.allow_empty\
      \ then\n\t\t\tval = nil\n\t\tend\n\t\t\n\t\t-- Convert to proper type if necessary.\n\t\tif param.type == &quot;boolean&quot; then\n\t\t\tval = not (not val or val == &quot;&quot; or val == &quot;0&quot; or val == &quot;no&quot; or val == &quot;n&quot;\
      \ or val == &quot;false&quot;)\n\t\telseif param.type == &quot;number&quot; then\n\t\t\tval = tonumber(val)\n\t\tend\n\t\t\n\t\t-- Can't use &quot;if val&quot; alone, because val may be a boolean false.\n\t\tif val ~= nil then\n\t\t\t-- Mark it as no longer\
      \ required, as it is present.\n\t\t\trequired[name] = nil\n\t\t\t\n\t\t\t-- Store the argument value.\n\t\t\tif param.list then\n\t\t\t\targs_new[name][index] = val\n\t\t\t\t\n\t\t\t\t-- Store the highest index we find.\n\t\t\t\targs_new[name].maxindex\
      \ = math.max(index, args_new[name].maxindex)\n\t\t\telse\n\t\t\t\t-- If the parameter is an alias of another, store it as the original,\n\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\tif not param.alias_of then\n\t\t\t\t\t\
      args_new[name] = val\n\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\targs_new[param.alias_of] = val\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- The required table should now be empty.\n\t-- If any entry remains, trigger an error, unless\
      \ we're in the template namespace.\n\tif mw.title.getCurrentTitle().nsText ~= &quot;Template&quot; then\n\t\tfor name, param in pairs(required) do\n\t\t\terror(&quot;The parameter \\&quot;&quot; .. name .. &quot;\\&quot; is required.&quot;)\n\t\tend\n\t\
      end\n\t\n\t-- Remove holes in any list parameters if needed.\n\tfor name, val in pairs(args_new) do\n\t\tif type(val) == &quot;table&quot; and not params[name].allow_holes then\n\t\t\targs_new[name] = export.remove_holes(val)\n\t\tend\n\tend\n\t\n\treturn\
      \ args_new\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-06-28T20:54:41.496Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '6515'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:41 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1052 miss (0), cp3006 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 3181943680, 428235667, 1086094899
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4453474\" pageid=\"4453474\" ns=\"828\" title=\"Module:languages\"><revisions><rev user=\"Kc kennylau\" timestamp=\"2015-06-18T09:28:16Z\" comment=\"Do not replace single-character\
      \ punctuation marks\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nlocal Language = {}\n\n\nfunction Language:getCode()\n\treturn self._code\nend\n\n\nfunction Language:getCanonicalName()\n\treturn\
      \ self._rawData.canonicalName\nend\n\n\n-- Commented out; I don't think anything uses this, the presence/absence of script errors should confirm\n--function Language:getAllNames()\n--\treturn self._rawData.names\n--end\n\n\nfunction Language:getOtherNames()\n\
      \treturn self._rawData.otherNames or {}\nend\n\n\nfunction Language:getType()\n\treturn self._rawData.type\nend\n\n\nfunction Language:getWikimediaLanguages()\n\tif not self._wikimediaLanguageObjects then\n\t\tlocal m_wikimedia_languages = require(&quot;Module:wikimedia\
      \ languages&quot;)\n\t\tself._wikimediaLanguageObjects = {}\n\t\tlocal wikimedia_codes = self._rawData.wikimedia_codes or {self._code}\n\t\t\n\t\tfor _, wlangcode in ipairs(wikimedia_codes) do\n\t\t\ttable.insert(self._wikimediaLanguageObjects, m_wikimedia_languages.getByCode(wlangcode))\n\
      \t\tend\n\tend\n\t\n\treturn self._wikimediaLanguageObjects\nend\n\n\nfunction Language:getScripts()\n\tif not self._scriptObjects then\n\t\tlocal m_scripts = require(&quot;Module:scripts&quot;)\n\t\tself._scriptObjects = {}\n\t\t\n\t\tfor _, sc in ipairs(self._rawData.scripts)\
      \ do\n\t\t\ttable.insert(self._scriptObjects, m_scripts.getByCode(sc))\n\t\tend\n\tend\n\t\n\treturn self._scriptObjects\nend\n\n\nfunction Language:getFamily()\n\tif not self._familyObject then\n\t\tself._familyObject = require(&quot;Module:families&quot;).getByCode(self._rawData.family)\n\
      \tend\n\t\n\treturn self._familyObject\nend\n\n\nfunction Language:getAncestors()\n\tif not self._ancestorObjects then\n\t\tself._ancestorObjects = {}\n\t\t\n\t\tfor _, ancestor in ipairs(self._rawData.ancestors or {}) do\n\t\t\ttable.insert(self._ancestorObjects,\
      \ export.getByCode(ancestor))\n\t\tend\n\tend\n\t\n\treturn self._ancestorObjects\nend\n\n\nfunction Language:getAncestorChain()\n\tif not self._ancestorChain then\n\t\tself._ancestorChain = {}\n\t\tlocal step = #self:getAncestors() == 1 and self:getAncestors()[1]\
      \ or nil\n\t\t\n\t\twhile step do\n\t\t\ttable.insert(self._ancestorChain, 1, step)\n\t\t\tstep = #step:getAncestors() == 1 and step:getAncestors()[1] or nil\n\t\tend\n\tend\n\t\n\treturn self._ancestorChain\nend\n\n\nfunction Language:getCategoryName()\n\
      \tlocal name = self._rawData.canonicalName\n\t\n\t-- If the name already has &quot;language&quot; in it, don't add it.\n\tif name:find(&quot;[Ll]anguage$&quot;) then\n\t\treturn name\n\telse\n\t\treturn name .. &quot; language&quot;\n\tend\nend\n\n\nfunction\
      \ Language:makeEntryName(text)\n\ttext = mw.ustring.gsub(text, &quot;^[¿¡]&quot;, &quot;&quot;)\n\ttext = mw.ustring.gsub(text, &quot;(.)[؟?!;՛՜ ՞ ՟？！।॥။၊་།]$&quot;, &quot;%1&quot;)\n\t\n\tif self._rawData.entry_name then\n\t\tfor i, from in ipairs(self._rawData.entry_name.from)\
      \ do\n\t\t\tlocal to = self._rawData.entry_name.to[i] or &quot;&quot;\n\t\t\ttext = mw.ustring.gsub(text, from, to)\n\t\tend\n\tend\n\t\n\treturn text\nend\n\n\nfunction Language:makeSortKey(name)\n\tname = mw.ustring.lower(name)\n\t\n\t-- Remove initial\
      \ hyphens and *\n\tname = mw.ustring.gsub(name, &quot;^[-־ـ*]+(.)&quot;,\n\t\t&quot;%1&quot;)\n\t-- Remove anything in parentheses, as long as they are either preceded or followed by something\n\tname = mw.ustring.gsub(name, &quot;(.)%([^()]+%)&quot;,\
      \ &quot;%1&quot;)\n\tname = mw.ustring.gsub(name, &quot;%([^()]+%)(.)&quot;, &quot;%1&quot;)\n\t\n\t-- If there are language-specific rules to generate the key, use those\n\tif self._rawData.sort_key then\n\t\tfor i, from in ipairs(self._rawData.sort_key.from)\
      \ do\n\t\t\tlocal to = self._rawData.sort_key.to[i] or &quot;&quot;\n\t\t\tname = mw.ustring.gsub(name, from, to)\n\t\tend\n\tend\n\t\n\treturn mw.ustring.upper(name)\nend\n\n\nfunction Language:transliterate(text, sc, module_override)\n\tif not ((module_override\
      \ or self._rawData.translit_module) and text) then\n\t\treturn nil\n\tend\n\t\n\tif module_override then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;module_override&quot;)\n\tend\n\t\n\treturn require(&quot;Module:&quot; .. (module_override or self._rawData.translit_module)).tr(text,\
      \ self:getCode(), sc and sc:getCode() or nil)\nend\n\n\nfunction Language:toJSON()\n\tlocal entryNamePatterns = nil\n\t\n\tif self._rawData.entry_name then\n\t\tentryNamePatterns = {}\n\t\t\n\t\tfor i, from in ipairs(self._rawData.entry_name.from) do\n\
      \t\t\tlocal to = self._rawData.entry_name.to[i] or &quot;&quot;\n\t\t\ttable.insert(entryNamePatterns, {from = from, to = to})\n\t\tend\n\tend\n\t\n\tlocal ret = {\n\t\tancestors = self._rawData.ancestors,\n\t\tcanonicalName = self:getCanonicalName(),\n\
      \t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\tentryNamePatterns = entryNamePatterns,\n\t\tfamily = self._rawData.family,\n\t\totherNames = self:getOtherNames(),\n\t\tscripts = self._rawData.scripts,\n\t\ttype = self:getType(),\n\
      \t\twikimediaLanguages = self._rawData.wikimedia_codes,\n\t\t}\n\t\n\treturn require(&quot;Module:JSON&quot;).toJSON(ret)\nend\n\n\n-- Do NOT use this method!\n-- All uses should be pre-approved on the talk page!\nfunction Language:getRawData()\n\treturn\
      \ self._rawData\nend\n\nLanguage.__index = Language\n\n\nlocal function getDataModuleName(code)\n\tif code:find(&quot;^[a-z][a-z]$&quot;) then\n\t\treturn &quot;languages/data2&quot;\n\telseif code:find(&quot;^[a-z][a-z][a-z]$&quot;) then\n\t\tlocal prefix\
      \ = code:sub(1, 1)\n\t\treturn &quot;languages/data3/&quot; .. prefix\n\telseif code:find(&quot;^[a-z-]+$&quot;) then\n\t\treturn &quot;languages/datax&quot;\n\telse\n\t\treturn nil\n\tend\nend\n\n\nlocal function getRawLanguageData(code)\n\tlocal modulename\
      \ = getDataModuleName(code)\n\treturn modulename and mw.loadData(&quot;Module:&quot; .. modulename)[code] or nil\nend\n\n\nfunction export.makeObject(code, data)\n\treturn data and setmetatable({ _rawData = data, _code = code }, Language) or nil\nend\n\
      \n\nfunction export.getByCode(code)\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.getByCanonicalName(name)\n\tlocal code = mw.loadData(&quot;Module:languages/by name&quot;)[name]\n\t\n\tif not code then\n\t\treturn\
      \ nil\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.iterateAll()\n\tmw.incrementExpensiveFunctionCount()\n\tlocal m_data = mw.loadData(&quot;Module:languages/alldata&quot;)\n\tlocal func, t, var = pairs(m_data)\n\
      \t\n\treturn function()\n\t\tlocal code, data = func(t, var)\n\t\treturn export.makeObject(code, data)\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-06-28T20:54:41.955Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata2&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '54756'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:41 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1065 miss (0), cp3006 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 1887213238, 428235792, 1086095693
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4206184\" pageid=\"4206184\" ns=\"828\" title=\"Module:languages/data2\"><revisions><rev user=\"Vahagn Petrosyan\" timestamp=\"2015-06-28T14:13:48Z\" comment=\"update Abkhaz\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local u = mw.ustring.char\n\n-- UTF-8 encoded strings for some commonly-used diacritics\nlocal GRAVE     = u(0x0300)\nlocal ACUTE     = u(0x0301)\nlocal CIRC      = u(0x0302)\n\
      local TILDE     = u(0x0303)\nlocal MACRON    = u(0x0304)\nlocal BREVE     = u(0x0306)\nlocal DOTABOVE  = u(0x0307)\nlocal DIAER     = u(0x0308)\nlocal CARON     = u(0x030C)\nlocal DGRAVE    = u(0x030F)\nlocal INVBREVE  = u(0x0311)\nlocal DOTBELOW  = u(0x0323)\n\
      local RINGBELOW = u(0x0325)\nlocal CEDILLA   = u(0x0327)\n\nlocal m = {}\n\nm[&quot;aa&quot;] = {\n\tcanonicalName = &quot;Afar&quot;,\n\totherNames = {&quot;Qafar&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cus&quot;,\n\
      }\n\nm[&quot;ab&quot;] = {\n\tcanonicalName = &quot;Abkhaz&quot;,\n\totherNames = {&quot;Abkhazian&quot;, &quot;Abxazo&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;, &quot;Geor&quot;, &quot;Latn&quot;},\n\tfamily = &quot;cau-abz&quot;,\n\
      \tancestors = {&quot;cau-abz-pro&quot;},\n\ttranslit_module = &quot;ab-translit&quot;,\n\tentry_name = {\n\t\tfrom = {GRAVE, ACUTE},\n\t\tto   = {}} ,\n}\n\nm[&quot;ae&quot;] = {\n\tcanonicalName = &quot;Avestan&quot;,\n\totherNames = {&quot;Zend&quot;,\
      \ &quot;Old Bactrian&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Avst&quot;, &quot;Gujr&quot;},\n\tfamily = &quot;ira&quot;,\n\ttranslit_module = &quot;Avst-translit&quot;,\n}\n\nm[&quot;af&quot;] = {\n\tcanonicalName = &quot;Afrikaans&quot;,\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Arab&quot;},\n\tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;nl&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;[äáâà]&quot;, &quot;[ëéêè]&quot;, &quot;[ïíîì]&quot;, &quot;[öóôò]&quot;,\
      \ &quot;[üúûù]&quot;, &quot;[ÿýŷỳ]&quot;, &quot;^-&quot;, &quot;'&quot;},\n\t\tto   = {&quot;a&quot;\t , &quot;e&quot;\t, &quot;i&quot;\t, &quot;o&quot;\t, &quot;u&quot;  , &quot;y&quot; }} ,\n}\n\nm[&quot;ak&quot;] = {\n\tcanonicalName = &quot;Akan&quot;,\n\
      \totherNames = {&quot;Twi-Fante&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-kwa&quot;,\n}\n\nm[&quot;am&quot;] = {\n\tcanonicalName = &quot;Amharic&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Ethi&quot;},\n\
      \tfamily = &quot;sem-eth&quot;,\n\ttranslit_module = &quot;Ethi-translit&quot;,\n}\n\nm[&quot;an&quot;] = {\n\tcanonicalName = &quot;Aragonese&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n}\n\nm[&quot;ar&quot;]\
      \ = {\n\tcanonicalName = &quot;Arabic&quot;,\n\totherNames = {&quot;Modern Standard Arabic&quot;, &quot;Standard Arabic&quot;, &quot;Literary Arabic&quot;, &quot;Classical Arabic&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Arab&quot;},\n\
      \tfamily = &quot;sem-arb&quot;,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n\ttranslit_module = &quot;ar-translit&quot;,\n\
      }\n\nm[&quot;as&quot;] = {\n\tcanonicalName = &quot;Assamese&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Beng&quot;},\n\tfamily = &quot;inc&quot;,\n}\n\nm[&quot;av&quot;] = {\n\tcanonicalName = &quot;Avar&quot;,\n\totherNames = {&quot;Avaric&quot;},\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;cau-nec&quot;,\n\ttranslit_module = &quot;av-translit&quot;,\n}\n\nm[&quot;ay&quot;] = {\n\tcanonicalName = &quot;Aymara&quot;,\n\totherNames = {&quot;Southern Aymara&quot;,\
      \ &quot;Central Aymara&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;sai-aym&quot;,\n}\n\nm[&quot;az&quot;] = {\n\tcanonicalName = &quot;Azeri&quot;,\n\totherNames = {&quot;Azerbaijani&quot;, &quot;Azari&quot;,\
      \ &quot;Azeri Turkic&quot;, &quot;Azerbaijani Turkic&quot;, &quot;North Azerbaijani&quot;, &quot;South Azerbaijani&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Cyrl&quot;, &quot;fa-Arab&quot;},\n\tfamily = &quot;trk&quot;,\n\
      }\n\nm[&quot;ba&quot;] = {\n\tcanonicalName = &quot;Bashkir&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;trk&quot;,\n\ttranslit_module = &quot;ba-translit&quot;,\n}\n\nm[&quot;be&quot;] = {\n\tcanonicalName =\
      \ &quot;Belarusian&quot;,\n\totherNames = {&quot;Belorussian&quot;, &quot;Belarusan&quot;, &quot;Bielorussian&quot;, &quot;Byelorussian&quot;, &quot;Belarussian&quot;, &quot;White Russian&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;},\n\
      \tfamily = &quot;zle&quot;,\n\tancestors = {&quot;orv&quot;},\n\ttranslit_module = &quot;be-translit&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;Ё&quot;, &quot;ё&quot;},\n\t\tto   = {&quot;Е&quot; , &quot;е&quot;}},\n\tentry_name = {\n\t\tfrom = {GRAVE,\
      \ ACUTE},\n\t\tto   = {}} ,\n}\n\nm[&quot;bg&quot;] = {\n\tcanonicalName = &quot;Bulgarian&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;zls&quot;,\n\ttranslit_module = &quot;bg-translit&quot;,\n\tentry_name =\
      \ {\n\t\tfrom = {&quot;Ѐ&quot;, &quot;ѐ&quot;, &quot;Ѝ&quot;, &quot;ѝ&quot;, GRAVE, ACUTE},\n\t\tto   = {&quot;Е&quot;, &quot;е&quot;, &quot;И&quot;, &quot;и&quot;}} ,\n}\n\nm[&quot;bh&quot;] = {\n\tcanonicalName = &quot;Bihari&quot;,\n\ttype = &quot;regular&quot;,\n\
      \tscripts = {&quot;Deva&quot;},\n\tfamily = &quot;inc&quot;,\n}\n\nm[&quot;bi&quot;] = {\n\tcanonicalName = &quot;Bislama&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;crp&quot;,\n\tancestors = {&quot;en&quot;},\n\
      }\n\nm[&quot;bm&quot;] = {\n\tcanonicalName = &quot;Bambara&quot;,\n\totherNames = {&quot;Bamanankan&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;dmn&quot;,\n}\n\nm[&quot;bn&quot;] = {\n\tcanonicalName = &quot;Bengali&quot;,\n\
      \totherNames = {&quot;Bangla&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Beng&quot;},\n\tfamily = &quot;inc&quot;,\n}\n\nm[&quot;bo&quot;] = {\n\tcanonicalName = &quot;Tibetan&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Tibt&quot;},\n\
      \tfamily = &quot;tbq&quot;,\n\ttranslit_module = &quot;bo-translit&quot;,\n}\n\nm[&quot;br&quot;] = {\n\tcanonicalName = &quot;Breton&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cel-bry&quot;,\n\tancestors =\
      \ {&quot;xbm&quot;},\n}\n\nm[&quot;ca&quot;] = {\n\tcanonicalName = &quot;Catalan&quot;,\n\totherNames = {&quot;Valencian&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;à\
      &quot;, &quot;[èé]&quot;, &quot;[íï]&quot;, &quot;[òó]&quot;, &quot;[úü]&quot;, &quot;ç&quot;, &quot;l·l&quot;},\n\t\tto   = {&quot;a&quot;, &quot;e&quot;   , &quot;i&quot;   , &quot;o&quot;   , &quot;u&quot;   , &quot;c&quot;, &quot;ll&quot; }} ,\n}\n\
      \nm[&quot;ce&quot;] = {\n\tcanonicalName = &quot;Chechen&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;cau-nec&quot;,\n\ttranslit_module = &quot;ce-translit&quot;,\n}\n\nm[&quot;ch&quot;] = {\n\tcanonicalName\
      \ = &quot;Chamorro&quot;,\n\totherNames = {&quot;Chamoru&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-sus&quot;,\n}\n\nm[&quot;co&quot;] = {\n\tcanonicalName = &quot;Corsican&quot;,\n\totherNames = {&quot;Corsu&quot;},\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n}\n\nm[&quot;cr&quot;] = {\n\tcanonicalName = &quot;Cree&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cans&quot;, &quot;Latn&quot;},\n\tfamily = &quot;alg&quot;,\n\
      }\n\nm[&quot;cs&quot;] = {\n\tcanonicalName = &quot;Czech&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;zlw&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;á&quot;, &quot;é&quot;, &quot;í&quot;, &quot;ó&quot;, &quot;[ú\
      ů]&quot;, &quot;ý&quot;},\n\t\tto   = {&quot;a&quot;, &quot;e&quot;, &quot;i&quot;, &quot;o&quot;, &quot;u&quot;   , &quot;y&quot;}} ,\n}\n\nm[&quot;cu&quot;] = {\n\tcanonicalName = &quot;Old Church Slavonic&quot;,\n\totherNames = {&quot;Old Church Slavic&quot;},\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrs&quot;, &quot;Glag&quot;},\n\tfamily = &quot;zls&quot;,\n\ttranslit_module = &quot;Cyrs-Glag-translit&quot;,\n\tentry_name = {\n\t\tfrom = {u(0x0484)}, -- kamora\n\t\tto   = {}},\n\tsort_key = {\n\t\
      \tfrom = {&quot;оу&quot;, &quot;є&quot;},\n\t\tto   = {&quot;у&quot; , &quot;е&quot;}} ,\n}\n\nm[&quot;cv&quot;] = {\n\tcanonicalName = &quot;Chuvash&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;trk&quot;,\n\t\
      translit_module = &quot;cv-translit&quot;,\n}\n\nm[&quot;cy&quot;] = {\n\tcanonicalName = &quot;Welsh&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cel-bry&quot;,\n\tancestors = {&quot;wlm&quot;},\n\tsort_key\
      \ = {\n\t\tfrom = {&quot;[âáàä]&quot;, &quot;[êéèë]&quot;, &quot;[îíìï]&quot;, &quot;[ôóòö]&quot;, &quot;[ûúùü]&quot;, &quot;[ŵẃẁẅ]&quot;, &quot;[ŷýỳÿ]&quot;, &quot;'&quot;},\n\t\tto   = {&quot;a&quot;\t , &quot;e&quot;\t , &quot;i&quot;\t , &quot;o&quot;\t\
      \ , &quot;u&quot;\t , &quot;w&quot;\t , &quot;y&quot;\t }} ,\n}\n\nm[&quot;da&quot;] = {\n\tcanonicalName = &quot;Danish&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmq&quot;,\n}\n\nm[&quot;de&quot;] = {\n\t\
      canonicalName = &quot;German&quot;,\n\totherNames = {&quot;High German&quot;, &quot;New High German&quot;, &quot;Deutsch&quot;}, -- the last name is indeed also used in English\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Latf&quot;},\n\
      \tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;gmh&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;[äàáâå]&quot;, &quot;[ëèéê]&quot;, &quot;[ïìíî]&quot;, &quot;[öòóô]&quot;, &quot;[üùúû]&quot;, &quot;ß&quot; },\n\t\tto   = {&quot;a&quot;\t  , &quot;e&quot;\t\
      \ , &quot;i&quot;\t , &quot;o&quot;\t , &quot;u&quot;\t , &quot;ss&quot;}} ,\n}\n\nm[&quot;dv&quot;] = {\n\tcanonicalName = &quot;Dhivehi&quot;,\n\totherNames = {&quot;Divehi&quot;, &quot;Mahal&quot;, &quot;Mahl&quot;, &quot;Maldivian&quot;},\n\ttype =\
      \ &quot;regular&quot;,\n\tscripts = {&quot;Thaa&quot;},\n\tfamily = &quot;inc&quot;,\n\ttranslit_module = &quot;dv-translit&quot;,\n}\n\nm[&quot;dz&quot;] = {\n\tcanonicalName = &quot;Dzongkha&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Tibt&quot;},\n\
      \tfamily = &quot;tbq&quot;,\n\ttranslit_module = &quot;bo-translit&quot;,\n}\n\nm[&quot;ee&quot;] = {\n\tcanonicalName = &quot;Ewe&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv&quot;,\n}\n\nm[&quot;el&quot;]\
      \ = {\n\tcanonicalName = &quot;Greek&quot;,\n\totherNames = {&quot;Modern Greek&quot;, &quot;Neo-Hellenic&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Grek&quot;},\n\tfamily = &quot;grk&quot;,\n\ttranslit_module = &quot;el-translit&quot;,\n\
      \tsort_key = {  -- Keep this synchronized with grc, cpg\n\t\tfrom = {&quot;[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇ]&quot;, &quot;[έὲἐἔἒἑἕἓ]&quot;, &quot;[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗ]&quot;, &quot;[ίὶῖἰἴἲἶἱἵἳἷϊΐῒῗ]&quot;, &quot;[όὸὀὄὂὁὅὃ]&quot;, &quot;[ύὺῦὐὔὒὖὑὕὓὗϋΰῢῧ]&quot;,\
      \ &quot;[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧ]&quot;, &quot;ῥ&quot;, &quot;ς&quot;},\n\t\tto   = {&quot;α&quot;\t\t\t\t\t\t, &quot;ε&quot;\t\t , &quot;η&quot;\t\t\t\t\t\t, &quot;ι&quot;\t\t\t\t, &quot;ο&quot;\t\t , &quot;υ&quot;\t\t\t\t, &quot;ω&quot;\t\t\t\t\t\t,\
      \ &quot;ρ&quot;, &quot;σ&quot;}} ,\n}\n\nm[&quot;en&quot;] = {\n\tcanonicalName = &quot;English&quot;,\n\totherNames = {&quot;Modern English&quot;, &quot;New English&quot;, &quot;Hawaiian Creole English&quot;, &quot;Hawai'ian Creole English&quot;, &quot;Hawaiian\
      \ Creole&quot;, &quot;Hawai'ian Creole&quot;, &quot;Polari&quot;, &quot;Yinglish&quot;}, -- all but the first three are names and alt names of subsumed dialects which once had ISO codes\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Shaw&quot;,\
      \ &quot;Dsrt&quot;}, -- last two are rare but probably attested; entries in them might require community approval, but it's good for the script codes not to be orphans\n\tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;enm&quot;},\n\tsort_key = {\n\t\t\
      from = {&quot;[äàáâåā]&quot;, &quot;[ëèéêē]&quot;, &quot;[ïìíîī]&quot;, &quot;[öòóôō]&quot;, &quot;[üùúûū]&quot;, &quot;æ&quot; , &quot;œ&quot; , &quot;[çč]&quot;, &quot;ñ&quot;, &quot;'&quot;},\n\t\tto   = {&quot;a&quot;       , &quot;e&quot;      , &quot;i&quot;\
      \      , &quot;o&quot;      , &quot;u&quot;      , &quot;ae&quot;, &quot;oe&quot;, &quot;c&quot;   , &quot;n&quot;}},\n\twikimedia_codes = {&quot;en&quot;, &quot;simple&quot;},\n}\n\nm[&quot;eo&quot;] = {\n\tcanonicalName = &quot;Esperanto&quot;,\n\ttype\
      \ = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;art&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;[áà]&quot;, &quot;[éè]&quot;, &quot;[íì]&quot;, &quot;[óò]&quot;, &quot;[úù]&quot;, &quot;[ĉ]&quot;, &quot;[ĝ]&quot;, &quot;[ĥ]&quot;,\
      \ &quot;[ĵ]&quot;, &quot;[ŝ]&quot;, &quot;[ŭ]&quot;},\n\t\tto   = {&quot;a&quot;\t   , &quot;e&quot;  , &quot;i&quot;  , &quot;o&quot;  , &quot;u&quot;, &quot;cĉ&quot;, &quot;gĉ&quot;, &quot;hĉ&quot;, &quot;jĉ&quot;, &quot;sĉ&quot;, &quot;uĉ&quot;}} ,\n\
      }\n\nm[&quot;es&quot;] = {\n\tcanonicalName = &quot;Spanish&quot;,\n\totherNames = {&quot;Castilian&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;á&quot;, &quot;é\
      &quot;, &quot;í&quot;, &quot;ó&quot;, &quot;[úü]&quot;, &quot;ç&quot;, &quot;ñ&quot;},\n\t\tto   = {&quot;a&quot;, &quot;e&quot;, &quot;i&quot;, &quot;o&quot;, &quot;u&quot;   , &quot;c&quot;, &quot;n&quot;}} ,\n}\n\nm[&quot;et&quot;] = {\n\tcanonicalName\
      \ = &quot;Estonian&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;fiu-fin&quot;,\n\tancestors = {&quot;fiu-fin-pro&quot;},\n}\n\nm[&quot;eu&quot;] = {\n\tcanonicalName = &quot;Basque&quot;,\n\totherNames = {&quot;Euskara&quot;},\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;euq&quot;,\n}\n\nm[&quot;fa&quot;] = {\n\tcanonicalName = &quot;Persian&quot;,\n\totherNames = {&quot;Farsi&quot;, &quot;New Persian&quot;, &quot;Modern Persian&quot;, &quot;Western\
      \ Persian&quot;, &quot;Iranian Persian&quot;, &quot;Eastern Persian&quot;, &quot;Dari&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;fa-Arab&quot;},\n\tfamily = &quot;ira&quot;,\n\tentry_name = {\n\t\tfrom = {u(0x064E), u(0x064F), u(0x0650),\
      \ u(0x0651), u(0x0652)},\n\t\tto   = {}} ,\n}\n\nm[&quot;ff&quot;] = {\n\tcanonicalName = &quot;Fula&quot;,\n\totherNames = {&quot;Adamawa Fulfulde&quot;, &quot;Bagirmi Fulfulde&quot;, &quot;Borgu Fulfulde&quot;, &quot;Central-Eastern Niger Fulfulde&quot;,\
      \ &quot;Fulani&quot;, &quot;Fulfulde&quot;, &quot;Maasina Fulfulde&quot;, &quot;Nigerian Fulfulde&quot;, &quot;Pular&quot;, &quot;Pulaar&quot;, &quot;Western Niger Fulfulde&quot;}, -- Maasina, etc are dialects, subsumed into this code\n\ttype = &quot;regular&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-sng&quot;,\n}\n\nm[&quot;fi&quot;] = {\n\tcanonicalName = &quot;Finnish&quot;,\n\totherNames = {&quot;Suomi&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;fiu-fin&quot;,\n\
      \tancestors = {&quot;fiu-fin-pro&quot;},\n\tentry_name = {\n\t\tfrom = {&quot;ˣ&quot;},  -- Used to indicate gemination of the next consonant\n\t\tto   = {}},\n\tsort_key = {\n\t\tfrom = {&quot;[áàâã]&quot;, &quot;[éèêẽ]&quot;, &quot;[íìîĩ]&quot;, &quot;[ó\
      òôõ]&quot;, &quot;[úùûũ]&quot;, &quot;[ýỳŷüű]&quot;, &quot;[øõő]&quot;, &quot;æ&quot; , &quot;œ&quot; , &quot;[čç]&quot;, &quot;š&quot;, &quot;ž&quot;, &quot;ß&quot; , &quot;[':]&quot;},\n\t\tto   = {&quot;a&quot;\t , &quot;e&quot;\t , &quot;i&quot;\t\
      \ , &quot;o&quot;\t , &quot;u&quot;\t ,  &quot;y&quot;\t , &quot;ö&quot;\t, &quot;ae&quot;, &quot;oe&quot;, &quot;c&quot;   , &quot;s&quot;, &quot;z&quot;, &quot;ss&quot;}} ,\n}\n\nm[&quot;fj&quot;] = {\n\tcanonicalName = &quot;Fijian&quot;,\n\ttype =\
      \ &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-occ&quot;,\n}\n\nm[&quot;fo&quot;] = {\n\tcanonicalName = &quot;Faroese&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmq&quot;,\n\
      }\n\nm[&quot;fr&quot;] = {\n\tcanonicalName = &quot;French&quot;,\n\totherNames = {&quot;Modern French&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n\tancestors = {&quot;frm&quot;},\n\tsort_key =\
      \ {\n\t\tfrom = {&quot;[áàâä]&quot;, &quot;[éèêë]&quot;, &quot;[íìîï]&quot;, &quot;[óòôö]&quot;, &quot;[úùûü]&quot;, &quot;[ýỳŷÿ]&quot;, &quot;ç&quot;, &quot;æ&quot; , &quot;œ&quot; , &quot;'&quot;},\n\t\tto   = {&quot;a&quot;\t , &quot;e&quot;\t , &quot;i&quot;\t\
      \ , &quot;o&quot;\t , &quot;u&quot;\t , &quot;y&quot;\t , &quot;c&quot;, &quot;ae&quot;, &quot;oe&quot;}} ,\n}\n\nm[&quot;fy&quot;] = {\n\tcanonicalName = &quot;West Frisian&quot;,\n\totherNames = {&quot;Western Frisian&quot;, &quot;Frisian&quot;},\n\t\
      type = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmw-fri&quot;,\n}\n\nm[&quot;ga&quot;] = {\n\tcanonicalName = &quot;Irish&quot;,\n\totherNames = {&quot;Irish Gaelic&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;cel-gae&quot;,\n\tancestors = {&quot;mga&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;á&quot;, &quot;é&quot;, &quot;í&quot;, &quot;ó&quot;, &quot;ú&quot;, &quot;ý&quot;, &quot;ḃ&quot; , &quot;ċ&quot; , &quot;ḋ&quot; , &quot;ḟ&quot; , &quot;ġ\
      &quot; , &quot;ṁ&quot; , &quot;ṗ&quot; , &quot;ṡ&quot; , &quot;ṫ&quot; },\n\t\tto   = {&quot;a&quot;, &quot;e&quot;, &quot;i&quot;, &quot;o&quot;, &quot;u&quot;, &quot;y&quot;, &quot;bh&quot;, &quot;ch&quot;, &quot;dh&quot;, &quot;fh&quot;, &quot;gh&quot;,\
      \ &quot;mh&quot;, &quot;ph&quot;, &quot;sh&quot;, &quot;th&quot;}} ,\n}\n\nm[&quot;gd&quot;] = {\n\tcanonicalName = &quot;Scottish Gaelic&quot;,\n\totherNames = {&quot;Gàidhlig&quot;, &quot;Highland Gaelic&quot;, &quot;Scots Gaelic&quot;, &quot;Scottish&quot;},\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cel-gae&quot;,\n\tancestors = {&quot;mga&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;[áà]&quot;, &quot;[éè]&quot;, &quot;[íì]&quot;, &quot;[óò]&quot;, &quot;[úù]&quot;, &quot;[ý\
      ỳ]&quot;},\n\t\tto   = {&quot;a&quot;   , &quot;e&quot;   , &quot;i&quot;   , &quot;o&quot;   , &quot;u&quot;   , &quot;y&quot;   }} ,\n}\n\nm[&quot;gl&quot;] = {\n\tcanonicalName = &quot;Galician&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;roa&quot;,\n}\n\nm[&quot;gn&quot;] = {\n\tcanonicalName = &quot;Guaraní&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;tup&quot;,\n}\n\nm[&quot;gu&quot;] = {\n\tcanonicalName = &quot;Gujarati&quot;,\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Gujr&quot;},\n\tfamily = &quot;inc&quot;,\n}\n\nm[&quot;gv&quot;] = {\n\tcanonicalName = &quot;Manx&quot;,\n\totherNames = {&quot;Manx Gaelic&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;cel-gae&quot;,\n\tancestors = {&quot;mga&quot;},\n\tsort_key = {\n\t\tfrom = {&quot;ç&quot;, &quot;-&quot;},\n\t\tto   = {&quot;c&quot;}} ,\n}\n\nm[&quot;ha&quot;] = {\n\tcanonicalName = &quot;Hausa&quot;,\n\ttype = &quot;regular&quot;,\n\
      \tscripts = {&quot;Latn&quot;, &quot;Arab&quot;},\n\tfamily = &quot;cdc-wst&quot;,\n}\n\nm[&quot;he&quot;] = {\n\tcanonicalName = &quot;Hebrew&quot;,\n\totherNames = {&quot;Ivrit&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Hebr&quot;},\n\
      \tfamily = &quot;sem-can&quot;,\n\tentry_name = {\n\t\tfrom = {&quot;[&quot; .. u(0x0591) .. &quot;-&quot; .. u(0x05BD) .. u(0x05BF) .. &quot;-&quot; .. u(0x05C5) .. u(0x05C7) .. &quot;]&quot;},\n\t\tto   = {}} ,\n}\n\nm[&quot;hi&quot;] = {\n\tcanonicalName\
      \ = &quot;Hindi&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Deva&quot;},\n\tfamily = &quot;inc&quot;,\n\ttranslit_module = &quot;hi-translit&quot;,\n}\n\nm[&quot;ho&quot;] = {\n\tcanonicalName = &quot;Hiri Motu&quot;,\n\totherNames = {&quot;Pidgin\
      \ Motu&quot;, &quot;Police Motu&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;crp&quot;,\n\tancestors = {&quot;meu&quot;},\n}\n\nm[&quot;ht&quot;] = {\n\tcanonicalName = &quot;Haitian Creole&quot;,\n\totherNames\
      \ = {&quot;Creole&quot;, &quot;Haitian&quot;, &quot;Kreyòl&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;crp&quot;,\n}\n\nm[&quot;hu&quot;] = {\n\tcanonicalName = &quot;Hungarian&quot;,\n\totherNames = {&quot;Magyar&quot;},\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;fiu-ugr&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;á&quot;, &quot;é&quot;, &quot;í&quot;, &quot;ó&quot;, &quot;ú&quot;, &quot;ő&quot;, &quot;ű&quot;},\n\t\tto   = {&quot;a&quot;,\
      \ &quot;e&quot;, &quot;i&quot;, &quot;o&quot;, &quot;u&quot;, &quot;ö&quot;, &quot;ü&quot;}} ,\n}\n\nm[&quot;hy&quot;] = {\n\tcanonicalName = &quot;Armenian&quot;,\n\totherNames = {&quot;Modern Armenian&quot;, &quot;Eastern Armenian&quot;, &quot;Western\
      \ Armenian&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Armn&quot;},\n\tfamily = &quot;hyx&quot;,\n\tancestors = {&quot;axm&quot;},\n\ttranslit_module = &quot;Armn-translit&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;ու&quot;, &quot;և&quot;,\
      \ &quot;եւ&quot;},\n\t\tto   = {&quot;ւ&quot;, &quot;եվ&quot;, &quot;եվ&quot;}},\n\tentry_name = {\n\t\tfrom = {&quot;՞&quot;, &quot;՜&quot;, &quot;՛&quot;, &quot;՟&quot;, &quot;և&quot;, &quot;&lt;sup&gt;յ&lt;/sup&gt;&quot;, &quot;&lt;sup&gt;ի&lt;/sup&gt;&quot;,\
      \ &quot;ՙ&quot;, &quot;̈&quot;, &quot;յ̵&quot;, GRAVE},\n\t\tto   = {&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;եւ&quot;, &quot;յ&quot;, &quot;ի&quot;, &quot;&quot;, &quot;&quot;, &quot;յ&quot;}} ,\n}\n\nm[&quot;hz&quot;] = {\n\tcanonicalName\
      \ = &quot;Herero&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;ia&quot;] = {\n\tcanonicalName = &quot;Interlingua&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;art&quot;,\n}\n\nm[&quot;id&quot;] = {\n\tcanonicalName = &quot;Indonesian&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-mly&quot;,\n}\n\nm[&quot;ie&quot;] = {\n\tcanonicalName = &quot;Interlingue&quot;,\n\
      \totherNames = {&quot;Occidental&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;art&quot;,\n}\n\nm[&quot;ig&quot;] = {\n\tcanonicalName = &quot;Igbo&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;nic-bco&quot;,\n}\n\nm[&quot;ii&quot;] = {\n\tcanonicalName = &quot;Sichuan Yi&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Yiii&quot;},\n\tfamily = &quot;tbq&quot;,\n}\n\nm[&quot;ik&quot;] = {\n\tcanonicalName = &quot;Inupiak&quot;,\n\
      \totherNames = {&quot;Inupiaq&quot;, &quot;Iñupiaq&quot;, &quot;Inupiatun&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;esx-inu&quot;,\n}\n\nm[&quot;io&quot;] = {\n\tcanonicalName = &quot;Ido&quot;,\n\ttype =\
      \ &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;art&quot;,\n}\n\nm[&quot;is&quot;] = {\n\tcanonicalName = &quot;Icelandic&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmq&quot;,\n\t\
      ancestors = {&quot;non&quot;},\n}\n\nm[&quot;it&quot;] = {\n\tcanonicalName = &quot;Italian&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;[àáâäå]&quot;, &quot;[èéê\
      ë]&quot;, &quot;[ìíîï]&quot;, &quot;[òóôö]&quot;, &quot;[ùúûü]&quot;},\n\t\tto   = {&quot;a&quot;\t  , &quot;e&quot;\t , &quot;i&quot;\t , &quot;o&quot;\t , &quot;u&quot;\t }} ,\n}\n\nm[&quot;iu&quot;] = {\n\tcanonicalName = &quot;Inuktitut&quot;,\n\t\
      otherNames = {&quot;Eastern Canadian Inuktitut&quot;, &quot;Eastern Canadian Inuit&quot;, &quot;Western Canadian Inuktitut&quot;, &quot;Western Canadian Inuit&quot;, &quot;Western Canadian Inuktun&quot;, &quot;Inuinnaq&quot;, &quot;Inuinnaqtun&quot;, &quot;Inuvialuk&quot;,\
      \ &quot;Inuvialuktun&quot;, &quot;Nunavimmiutit&quot;, &quot;Nunatsiavummiut&quot;, &quot;Aivilimmiut&quot;, &quot;Natsilingmiut&quot;, &quot;Kivallirmiut&quot;, &quot;Siglit&quot;, &quot;Siglitun&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cans&quot;,\
      \ &quot;Latn&quot;},\n\tfamily = &quot;esx-inu&quot;,\n\ttranslit_module = &quot;iu-translit&quot;,\n}\n\nm[&quot;ja&quot;] = {\n\tcanonicalName = &quot;Japanese&quot;,\n\totherNames = {&quot;Modern Japanese&quot;, &quot;Nipponese&quot;, &quot;Nihongo&quot;},\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Jpan&quot;, &quot;Latn&quot;, &quot;Hira&quot;},\n\tfamily = &quot;jpx&quot;,\n}\n\nm[&quot;jv&quot;] = {\n\tcanonicalName = &quot;Javanese&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;,\
      \ &quot;Java&quot;},\n\tfamily = &quot;poz-sus&quot;,\n}\n\nm[&quot;ka&quot;] = {\n\tcanonicalName = &quot;Georgian&quot;,\n\totherNames = {&quot;Kartvelian&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Geor&quot;, &quot;Geok&quot;},\n\tfamily\
      \ = &quot;ccs-gzn&quot;,\n\tancestors = {&quot;oge&quot;},\n\ttranslit_module = &quot;Geor-translit&quot;,\n\tentry_name = {\n\t\tfrom = {&quot;̂&quot;},\n\t\tto   = {&quot;&quot;}},\n}\n\nm[&quot;kg&quot;] = {\n\tcanonicalName = &quot;Kongo&quot;,\n\t\
      otherNames = {&quot;Kikongo&quot;, &quot;Koongo&quot;, &quot;Laari&quot;, &quot;San Salvador Kongo&quot;, &quot;Yombe&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;ki&quot;] = {\n\tcanonicalName\
      \ = &quot;Kikuyu&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;kj&quot;] = {\n\tcanonicalName = &quot;Kwanyama&quot;,\n\totherNames = {&quot;Kuanyama&quot;, &quot;Oshikwanyama&quot;},\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;kk&quot;] = {\n\tcanonicalName = &quot;Kazakh&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;, &quot;Latn&quot;, &quot;Arab&quot;,\
      \ &quot;kk-Arab&quot;},\n\tfamily = &quot;trk&quot;,\n\ttranslit_module = &quot;kk-translit&quot;,\n}\n\nm[&quot;kl&quot;] = {\n\tcanonicalName = &quot;Greenlandic&quot;,\n\totherNames = {&quot;Kalaallisut&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts\
      \ = {&quot;Latn&quot;},\n\tfamily = &quot;esx-inu&quot;,\n}\n\nm[&quot;km&quot;] = {\n\tcanonicalName = &quot;Khmer&quot;,\n\totherNames = {&quot;Cambodian&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Khmr&quot;},\n\tfamily = &quot;mkh&quot;,\n\
      \tancestors = {&quot;mkh-pro&quot;},\n\ttranslit_module = &quot;km-translit&quot;,\n}\n\nm[&quot;kn&quot;] = {\n\tcanonicalName = &quot;Kannada&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Knda&quot;},\n\tfamily = &quot;dra&quot;,\n\ttranslit_module\
      \ = &quot;kn-translit&quot;,\n}\n\nm[&quot;ko&quot;] = {\n\tcanonicalName = &quot;Korean&quot;,\n\totherNames = {&quot;Modern Korean&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Kore&quot;},\n\tfamily = &quot;qfa-kor&quot;,\n\ttranslit_module\
      \ = &quot;ko-translit&quot;,\n}\n\nm[&quot;kr&quot;] = {\n\tcanonicalName = &quot;Kanuri&quot;,\n\totherNames = {&quot;Kanembu&quot;, &quot;Bilma Kanuri&quot;, &quot;Central Kanuri&quot;, &quot;Manga Kanuri&quot;, &quot;Tumari Kanuri&quot;},\n\ttype =\
      \ &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;ssa&quot;,\n}\n\nm[&quot;ks&quot;] = {\n\tcanonicalName = &quot;Kashmiri&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;ks-Arab&quot;, &quot;Deva&quot;},\n\tfamily = &quot;iir-dar&quot;,\n\
      }\n\nm[&quot;ku&quot;] = {\n\tcanonicalName = &quot;Kurdish&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;ku-Arab&quot;, &quot;Armn&quot;, &quot;Cyrl&quot;},\n\tfamily = &quot;ira&quot;,\n}\n\nm[&quot;kw&quot;] = {\n\tcanonicalName\
      \ = &quot;Cornish&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;cel-bry&quot;,\n\tancestors = {&quot;cnx&quot;},\n}\n\nm[&quot;ky&quot;] = {\n\tcanonicalName = &quot;Kyrgyz&quot;,\n\totherNames = {&quot;Kirghiz&quot;,\
      \ &quot;Kirgiz&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;, &quot;Latn&quot;, &quot;Arab&quot;},\n\tfamily = &quot;trk&quot;,\n\ttranslit_module = &quot;ky-translit&quot;,\n}\n\nm[&quot;la&quot;] = {\n\tcanonicalName = &quot;Latin&quot;,\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;itc&quot;,\n\tancestors = {&quot;itc-ola&quot;},\n\tentry_name = {\n\t\tfrom = {&quot;[ĀĂ]&quot;, &quot;[āă]&quot;, &quot;[ĒĔ]&quot;, &quot;[ēĕë]&quot;, &quot;[ĪĬÏ]&quot;,\
      \ &quot;[īĭï]&quot;, &quot;[ŌŎ]&quot;, &quot;[ōŏ]&quot;, &quot;[ŪŬÜ]&quot;, &quot;[ūŭü]&quot;, &quot;Ȳ&quot;, &quot;ȳ&quot;, MACRON, BREVE, DIAER},\n\t\tto   = {&quot;A&quot;, &quot;a&quot;, &quot;E&quot;, &quot;e&quot;, &quot;I&quot;, &quot;i&quot;, &quot;O&quot;,\
      \ &quot;o&quot;, &quot;U&quot;, &quot;u&quot;, &quot;Y&quot;, &quot;y&quot;}},\n}\n\nm[&quot;lb&quot;] = {\n\tcanonicalName = &quot;Luxembourgish&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmw&quot;,\n\tancestors\
      \ = {&quot;gmh&quot;},\n}\n\nm[&quot;lg&quot;] = {\n\tcanonicalName = &quot;Luganda&quot;,\n\totherNames = {&quot;Ganda&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;li&quot;] = {\n\t\
      canonicalName = &quot;Limburgish&quot;,\n\totherNames = {&quot;Limburgan&quot;, &quot;Limburgian&quot;, &quot;Limburgic&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;dum&quot;},\n\
      }\n\nm[&quot;ln&quot;] = {\n\tcanonicalName = &quot;Lingala&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;lo&quot;] = {\n\tcanonicalName = &quot;Lao&quot;,\n\totherNames = {&quot;Laotian&quot;},\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Laoo&quot;},\n\tfamily = &quot;tai-swe&quot;,\n\ttranslit_module = &quot;lo-translit&quot;,\n}\n\nm[&quot;lt&quot;] = {\n\tcanonicalName = &quot;Lithuanian&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts\
      \ = {&quot;Latn&quot;},\n\tfamily = &quot;bat&quot;,\n\tentry_name = {\n\t\tfrom = {&quot;[áãà]&quot;, &quot;[éẽè]&quot;, &quot;[íĩì]&quot;, &quot;[ýỹ]&quot;, &quot;ñ&quot;, &quot;[óõò]&quot;, &quot;[úũù]&quot;, ACUTE, GRAVE, TILDE},\n\t\tto   = {&quot;a&quot;,\
      \     &quot;e&quot;,     &quot;i&quot;,     &quot;y&quot;,    &quot;n&quot;, &quot;o&quot;,     &quot;u&quot;   }} ,\n}\n\nm[&quot;lu&quot;] = {\n\tcanonicalName = &quot;Luba-Katanga&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;lv&quot;] = {\n\tcanonicalName = &quot;Latvian&quot;,\n\totherNames = {&quot;Lettish&quot;, &quot;Lett&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bat&quot;,\n}\n\n\
      m[&quot;mg&quot;] = {\n\tcanonicalName = &quot;Malagasy&quot;,\n\totherNames = {&quot;Betsimisaraka Malagasy&quot;, &quot;Betsimisaraka&quot;, &quot;Northern Betsimisaraka Malagasy&quot;, &quot;Northern Betsimisaraka&quot;, &quot;Southern Betsimisaraka\
      \ Malagasy&quot;, &quot;Southern Betsimisaraka&quot;, &quot;Bara Malagasy&quot;, &quot;Bara&quot;, &quot;Masikoro Malagasy&quot;, &quot;Masikoro&quot;, &quot;Antankarana&quot;, &quot;Antankarana Malagasy&quot;, &quot;Plateau Malagasy&quot;, &quot;Sakalava&quot;,\
      \ &quot;Tandroy Malagasy&quot;, &quot;Tandroy&quot;, &quot;Tanosy&quot;, &quot;Tanosy Malagasy&quot;, &quot;Tesaka&quot;, &quot;Tsimihety&quot;, &quot;Tsimihety Malagasy&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily\
      \ = &quot;poz-bre&quot;,\n}\n\nm[&quot;mh&quot;] = {\n\tcanonicalName = &quot;Marshallese&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-mic&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;ā&quot; , &quot;ļ&quot;\
      \ , &quot;m̧&quot; , &quot;ņ&quot; , &quot;n̄&quot;  , &quot;o̧&quot; , &quot;ō&quot;  , &quot;ū&quot; },\n\t\tto   = {&quot;a~&quot;, &quot;l~&quot;, &quot;m~&quot;, &quot;n~&quot;, &quot;n~~&quot;, &quot;o~&quot;, &quot;o~~&quot;, &quot;u~&quot;}} ,\n\
      }\n\nm[&quot;mi&quot;] = {\n\tcanonicalName = &quot;Maori&quot;,\n\totherNames = {&quot;Māori&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-pol&quot;,\n}\n\nm[&quot;mk&quot;] = {\n\tcanonicalName = &quot;Macedonian&quot;,\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily = &quot;zls&quot;,\n\ttranslit_module = &quot;mk-translit&quot;,\n\tentry_name = {\n\t\tfrom = {ACUTE},\n\t\tto   = {}},\n}\n\nm[&quot;ml&quot;] = {\n\tcanonicalName = &quot;Malayalam&quot;,\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Mlym&quot;},\n\tfamily = &quot;dra&quot;,\n\ttranslit_module = &quot;ml-translit&quot;,\n}\n\nm[&quot;mn&quot;] = {\n\tcanonicalName = &quot;Mongolian&quot;,\n\totherNames = {&quot;Khalkha Mongolian&quot;},\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;, &quot;Mong&quot;},\n\tfamily = &quot;xgn&quot;,\n\ttranslit_module = &quot;mn-translit&quot;,\n}\n\nm[&quot;mr&quot;] = {\n\tcanonicalName = &quot;Marathi&quot;,\n\ttype = &quot;regular&quot;,\n\
      \tscripts = {&quot;Deva&quot;},\n\tfamily = &quot;inc&quot;,\n\ttranslit_module = &quot;hi-translit&quot;,\n}\n\nm[&quot;ms&quot;] = {\n\tcanonicalName = &quot;Malay&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Arab&quot;},\n\
      \tfamily = &quot;poz-mly&quot;,\n}\n\nm[&quot;mt&quot;] = {\n\tcanonicalName = &quot;Maltese&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;sem-arb&quot;,\n}\n\nm[&quot;my&quot;] = {\n\tcanonicalName = &quot;Burmese&quot;,\n\
      \totherNames = {&quot;Myanmar&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Mymr&quot;},\n\tfamily = &quot;tbq-brm&quot;,\n\tancestors = {&quot;obr&quot;},\n\ttranslit_module = &quot;my-translit&quot;,\n}\n\nm[&quot;na&quot;] = {\n\tcanonicalName\
      \ = &quot;Nauruan&quot;,\n\totherNames = {&quot;Nauru&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-mic&quot;,\n}\n\nm[&quot;nb&quot;] = {\n\tcanonicalName = &quot;Norwegian Bokmål&quot;,\n\totherNames =\
      \ {&quot;Bokmål&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmq&quot;,\n\twikimedia_codes = {&quot;no&quot;},\n}\n\nm[&quot;nd&quot;] = {\n\tcanonicalName = &quot;Northern Ndebele&quot;,\n\totherNames = {&quot;North\
      \ Ndebele&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;ne&quot;] = {\n\tcanonicalName = &quot;Nepali&quot;,\n\totherNames = {&quot;Nepalese&quot;},\n\ttype = &quot;regular&quot;,\n\t\
      scripts = {&quot;Deva&quot;},\n\tfamily = &quot;inc&quot;,\n\ttranslit_module = &quot;sa-translit&quot;,\n}\n\nm[&quot;ng&quot;] = {\n\tcanonicalName = &quot;Ndonga&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n\
      }\n\nm[&quot;nl&quot;] = {\n\tcanonicalName = &quot;Dutch&quot;,\n\totherNames = {&quot;Netherlandic&quot;, &quot;Flemish&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmw&quot;,\n\tancestors = {&quot;dum&quot;},\n\
      \tsort_key = {\n\t\tfrom = {&quot;[äáâå]&quot;, &quot;[ëéê]&quot;, &quot;[ïíî]&quot;, &quot;[öóô]&quot;, &quot;[üúû]&quot;, &quot;ç&quot;, &quot;ñ&quot;, &quot;^-&quot;},\n\t\tto   = {&quot;a&quot;\t , &quot;e&quot;\t, &quot;i&quot;\t, &quot;o&quot;\t\
      , &quot;u&quot;\t, &quot;c&quot;, &quot;n&quot;}} ,\n}\n\nm[&quot;nn&quot;] = {\n\tcanonicalName = &quot;Norwegian Nynorsk&quot;,\n\totherNames = {&quot;New Norwegian&quot;, &quot;Nynorsk&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;gmq&quot;,\n}\n\nm[&quot;no&quot;] = {\n\tcanonicalName = &quot;Norwegian&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmq&quot;,\n}\n\nm[&quot;nr&quot;] = {\n\tcanonicalName = &quot;Southern\
      \ Ndebele&quot;,\n\totherNames = {&quot;South Ndebele&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;nv&quot;] = {\n\tcanonicalName = &quot;Navajo&quot;,\n\ttype = &quot;regular&quot;,\n\
      \tscripts = {&quot;nv-Latn&quot;},\n\tfamily = &quot;apa&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;[áą]&quot;, &quot;[éę]&quot;, &quot;[íį]&quot;, &quot;[óǫ]&quot;, &quot;ń&quot;, &quot;^n([djlt])&quot;, &quot;ł&quot; , &quot;[ʼ’']&quot;, ACUTE},\n\t\t\
      to   = {&quot;a&quot;   , &quot;e&quot;   , &quot;i&quot;   , &quot;o&quot;   , &quot;n&quot;, &quot;ni%1&quot;\t  , &quot;l&quot;}} }  -- the copyright sign is used to guarantee that ł will always be sorted after all other words with l\nm[&quot;ny&quot;]\
      \ = {\n\tcanonicalName = &quot;Chichewa&quot;,\n\totherNames = {&quot;Chicheŵa&quot;, &quot;Chinyanja&quot;, &quot;Nyanja&quot;, &quot;Chewa&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;oc&quot;]\
      \ = {\n\tcanonicalName = &quot;Occitan&quot;,\n\totherNames = {&quot;Provençal&quot;, &quot;Auvergnat&quot;, &quot;Auvernhat&quot;, &quot;Gascon&quot;, &quot;Languedocien&quot;, &quot;Lengadocian&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\
      \tfamily = &quot;roa&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;[àá]&quot;, &quot;[èé]&quot;, &quot;[íï]&quot;, &quot;[òó]&quot;, &quot;[úü]&quot;, &quot;ç&quot;, &quot;([lns])·h&quot;},\n\t\tto   = {&quot;a&quot;   , &quot;e&quot;   , &quot;i&quot;   ,\
      \ &quot;o&quot;   , &quot;u&quot;   , &quot;c&quot;, &quot;%1h&quot;\t  }} ,\n}\n\nm[&quot;oj&quot;] = {\n\tcanonicalName = &quot;Ojibwe&quot;,\n\totherNames = {&quot;Chippewa&quot;, &quot;Ojibway&quot;, &quot;Ojibwemowin&quot;, &quot;Southwestern Ojibwa&quot;},\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cans&quot;, &quot;Latn&quot;},\n\tfamily = &quot;alg&quot;,\n}\n\nm[&quot;om&quot;] = {\n\tcanonicalName = &quot;Oromo&quot;,\n\totherNames = {&quot;Orma&quot;, &quot;Borana-Arsi-Guji Oromo&quot;, &quot;West\
      \ Central Oromo&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Ethi&quot;},\n\tfamily = &quot;cus&quot;,\n}\n\nm[&quot;or&quot;] = {\n\tcanonicalName = &quot;Oriya&quot;,\n\totherNames = {&quot;Odia&quot;, &quot;Oorya&quot;},\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Orya&quot;},\n\tfamily = &quot;inc&quot;,\n}\n\nm[&quot;os&quot;] = {\n\tcanonicalName = &quot;Ossetian&quot;,\n\totherNames = {&quot;Ossete&quot;, &quot;Ossetic&quot;, &quot;Digor&quot;, &quot;Iron&quot;},\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;, &quot;Geor&quot;, &quot;Latn&quot;},\n\tfamily = &quot;ira&quot;,\n\ttranslit_module = &quot;os-translit&quot;,\n\tentry_name = {\n\t\tfrom = {GRAVE, ACUTE},\n\t\tto   = {}} ,\n}\n\nm[&quot;pa&quot;]\
      \ = {\n\tcanonicalName = &quot;Punjabi&quot;,\n\totherNames = {&quot;Panjabi&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Guru&quot;, &quot;Arab&quot;, &quot;Deva&quot;},\n\tfamily = &quot;inc&quot;,\n}\n\nm[&quot;pi&quot;] = {\n\tcanonicalName\
      \ = &quot;Pali&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Deva&quot;, &quot;Sinh&quot;, &quot;Mymr&quot;, &quot;Khmr&quot;, &quot;Thai&quot;},\n\tfamily = &quot;inc&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;ā&quot;, &quot;ī\
      &quot;, &quot;ū&quot;, &quot;ḍ&quot;, &quot;ḷ&quot;, &quot;[ṁṃ]&quot;, &quot;[ṇñṅ]&quot;, &quot;ṭ&quot;},\n\t\tto   = {&quot;a&quot;, &quot;i&quot;, &quot;u&quot;, &quot;d&quot;, &quot;l&quot;, &quot;m&quot;   , &quot;n&quot;\t, &quot;t&quot;}} ,\n}\n\n\
      m[&quot;pl&quot;] = {\n\tcanonicalName = &quot;Polish&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;zlw&quot;,\n\tsort_key = {\n\tfrom = {&quot;[Ąą]&quot;, &quot;[Ćć]&quot;, &quot;[Ęę]&quot;, &quot;[Łł]&quot;,\
      \ &quot;[Ńń]&quot;, &quot;[Óó]&quot;, &quot;[Śś]&quot;, &quot;[Żż]&quot;, &quot;[Źź]&quot;},\n\tto   = {\n\t\t&quot;a&quot; .. u(0x10FFFF),\n\t\t&quot;c&quot; .. u(0x10FFFF),\n\t\t&quot;e&quot; .. u(0x10FFFF),\n\t\t&quot;l&quot; .. u(0x10FFFF),\n\t\t&quot;n&quot;\
      \ .. u(0x10FFFF),\n\t\t&quot;o&quot; .. u(0x10FFFF),\n\t\t&quot;s&quot; .. u(0x10FFFF),\n\t\t&quot;z&quot; .. u(0x10FFFF),\n\t\t&quot;z&quot; .. u(0x10FFFE)}} ,\n}\n\nm[&quot;ps&quot;] = {\n\tcanonicalName = &quot;Pashto&quot;,\n\totherNames = {&quot;Pashtun&quot;,\
      \ &quot;Pushto&quot;, &quot;Pashtu&quot;, &quot;Central Pashto&quot;, &quot;Northern Pashto&quot;, &quot;Southern Pashto&quot;, &quot;Pukhto&quot;, &quot;Pakhto&quot;, &quot;Pakkhto&quot;, &quot;Afghani&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts\
      \ = {&quot;ps-Arab&quot;},\n\tfamily = &quot;ira&quot;,\n}\n\nm[&quot;pt&quot;] = {\n\tcanonicalName = &quot;Portuguese&quot;,\n\totherNames = {&quot;Modern Portuguese&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily =\
      \ &quot;roa&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;[àãáâä]&quot;, &quot;[èẽéêë]&quot;, &quot;[ìĩíï]&quot;, &quot;[òóôõö]&quot;, &quot;[üúùũ]&quot;, &quot;ç&quot;, &quot;ñ&quot;},\n\t\tto   = {&quot;a&quot;\t  , &quot;e&quot;\t  , &quot;i&quot;\t , &quot;o&quot;\t\
      \  , &quot;u&quot;\t , &quot;c&quot;, &quot;n&quot;}} ,\n}\n\nm[&quot;qu&quot;] = {\n\tcanonicalName = &quot;Quechua&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;qwe&quot;,\n}\n\nm[&quot;rm&quot;] = {\n\tcanonicalName\
      \ = &quot;Romansch&quot;,\n\totherNames = {&quot;Romansh&quot;, &quot;Rumantsch&quot;, &quot;Romanche&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n}\n\nm[&quot;rn&quot;] = {\n\tcanonicalName = &quot;Kirundi&quot;,\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;ro&quot;] = {\n\tcanonicalName = &quot;Romanian&quot;,\n\totherNames = {&quot;Daco-Romanian&quot;, &quot;Roumanian&quot;, &quot;Rumanian&quot;},\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Cyrl&quot;},\n\tfamily = &quot;roa&quot;,\n}\n\nm[&quot;ru&quot;] = {\n\tcanonicalName = &quot;Russian&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;},\n\tfamily\
      \ = &quot;zle&quot;,\n\tancestors = {&quot;orv&quot;},\n\ttranslit_module = &quot;ru-translit&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;ё&quot;},\n\t\tto   = {&quot;е&quot; .. mw.ustring.char(0x10FFFF)}},\n\tentry_name = {\n\t\tfrom = {GRAVE, ACUTE},\n\
      \t\tto   = {}} ,\n}\n\nm[&quot;rw&quot;] = {\n\tcanonicalName = &quot;Kinyarwanda&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;sa&quot;] = {\n\tcanonicalName = &quot;Sanskrit&quot;,\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Deva&quot;, &quot;Beng&quot;, &quot;Brah&quot;, &quot;Gran&quot;, &quot;Gujr&quot;, &quot;Guru&quot;, &quot;Khar&quot;, &quot;Knda&quot;, &quot;Mlym&quot;, &quot;Mymr&quot;, &quot;Orya&quot;, &quot;Shrd&quot;,\
      \ &quot;Sinh&quot;, &quot;Taml&quot;, &quot;Telu&quot;, &quot;Thai&quot;, &quot;Tibt&quot;},\n\tfamily = &quot;inc&quot;,\n\tancestors = {&quot;inc-pro&quot;},\n\ttranslit_module = &quot;sa-translit&quot;,\n}\n\nm[&quot;sc&quot;] = {\n\tcanonicalName =\
      \ &quot;Sardinian&quot;,\n\totherNames = {&quot;Campidanese&quot;, &quot;Logudorese&quot;, &quot;Nuorese&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n}\n\nm[&quot;sd&quot;] = {\n\tcanonicalName =\
      \ &quot;Sindhi&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;sd-Arab&quot;},\n\tfamily = &quot;inc&quot;,\n}\n\nm[&quot;se&quot;] = {\n\tcanonicalName = &quot;Northern Sami&quot;,\n\totherNames = {&quot;North Sami&quot;, &quot;Northern Saami&quot;,\
      \ &quot;North Saami&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;smi&quot;,\n\tentry_name = {\n\t\tfrom = {&quot;([đflmnŋrsšŧv])'%1&quot;},\n\t\tto   = {&quot;%1%1&quot;} },\n}\n\nm[&quot;sg&quot;] = {\n\tcanonicalName\
      \ = &quot;Sango&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;crp&quot;,\n}\n\nm[&quot;sh&quot;] = {\n\tcanonicalName = &quot;Serbo-Croatian&quot;,\n\totherNames = {&quot;BCS&quot;, &quot;Croato-Serbian&quot;,\
      \ &quot;Serbocroatian&quot;, &quot;Bosnian&quot;, &quot;Croatian&quot;, &quot;Montenegrin&quot;, &quot;Serbian&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Cyrl&quot;},\n\tfamily = &quot;zls&quot;,\n\tentry_name = {\n\t\t\
      from = {&quot;[ȀÀȂÁĀ]&quot;, &quot;[ȁàȃáā]&quot;, &quot;[ȄÈȆÉĒ]&quot;, &quot;[ȅèȇéē]&quot;, &quot;[ȈÌȊÍĪ]&quot;, &quot;[ȉìȋíī]&quot;, &quot;[ȌÒȎÓŌ]&quot;, &quot;[ȍòȏóō]&quot;, &quot;[ȐȒŔ]&quot;, &quot;[ȑȓŕ]&quot;, &quot;[ȔÙȖÚŪ]&quot;, &quot;[ȕùȗúū]&quot;,\
      \ &quot;Ѐ&quot;, &quot;ѐ&quot;, &quot;[ӢЍ]&quot;, &quot;[ӣѝ]&quot;, &quot;[Ӯ]&quot;, &quot;[ӯ]&quot;, GRAVE, ACUTE, DGRAVE, INVBREVE, MACRON},\n\t\tto   = {&quot;A&quot;\t  , &quot;a&quot;\t  , &quot;E&quot;\t  , &quot;e&quot;\t  , &quot;I&quot;\t  , &quot;i&quot;\t\
      \  , &quot;O&quot;\t  , &quot;o&quot;\t  , &quot;R&quot;\t, &quot;r&quot;\t, &quot;U&quot;\t  , &quot;u&quot;\t  , &quot;Е&quot;, &quot;е&quot;, &quot;И&quot;   , &quot;и&quot;, &quot;У&quot;, &quot;у&quot;   }},\n\twikimedia_codes = {&quot;sh&quot;, &quot;bs&quot;,\
      \ &quot;hr&quot;, &quot;sr&quot;},\n}\n\nm[&quot;si&quot;] = {\n\tcanonicalName = &quot;Sinhalese&quot;,\n\totherNames = {&quot;Singhalese&quot;, &quot;Sinhala&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Sinh&quot;},\n\tfamily = &quot;inc&quot;,\n\
      \ttranslit_module = &quot;si-translit&quot;,\n}\n\nm[&quot;sk&quot;] = {\n\tcanonicalName = &quot;Slovak&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;zlw&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;[áä]&quot;,\
      \ &quot;é&quot;, &quot;í&quot;, &quot;[óô]&quot;, &quot;ú&quot;, &quot;ý&quot;, &quot;ŕ&quot;, &quot;ĺ&quot;},\n\t\tto   = {&quot;a&quot;   , &quot;e&quot;, &quot;i&quot;, &quot;o&quot;   , &quot;u&quot;, &quot;y&quot;, &quot;r&quot;, &quot;l&quot;}} ,\n\
      }\n\nm[&quot;sl&quot;] = {\n\tcanonicalName = &quot;Slovene&quot;,\n\totherNames = {&quot;Slovenian&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;zls&quot;,\n\tentry_name = {\n\t\tfrom = {&quot;[ÁÀÂȂȀ]&quot;,\
      \ &quot;[áàâȃȁ]&quot;, &quot;[ÉÈÊȆȄỆẸ]&quot;, &quot;[éèêȇȅệẹə]&quot;, &quot;[ÍÌÎȊȈ]&quot;, &quot;[íìîȋȉ]&quot;, &quot;[ÓÒÔȎȌỘỌ]&quot;, &quot;[óòôȏȍộọ]&quot;, &quot;[ŔȒȐ]&quot;, &quot;[ŕȓȑ]&quot;, &quot;[ÚÙÛȖȔ]&quot;, &quot;[úùûȗȕ]&quot;, &quot;ł&quot;,\
      \ GRAVE, ACUTE, DGRAVE, INVBREVE, CIRC, DOTBELOW},\n\t\tto   = {&quot;A&quot;\t  , &quot;a&quot;\t  , &quot;E&quot;\t\t, &quot;e&quot;\t\t , &quot;I&quot;\t  , &quot;i&quot;\t  , &quot;O&quot;\t\t, &quot;o&quot;\t\t, &quot;R&quot;\t, &quot;r&quot;\t, &quot;U&quot;\t\
      \  , &quot;u&quot;\t  , &quot;l&quot;}} ,\n}\n\nm[&quot;sm&quot;] = {\n\tcanonicalName = &quot;Samoan&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-pol&quot;,\n}\n\nm[&quot;sn&quot;] = {\n\tcanonicalName =\
      \ &quot;Shona&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;so&quot;] = {\n\tcanonicalName = &quot;Somali&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Arab&quot;,\
      \ &quot;Osma&quot;},\n\tfamily = &quot;cus&quot;,\n\tentry_name = {\n\t\tfrom = {&quot;[ÁÀÂ]&quot;, &quot;[áàâ]&quot;, &quot;[ÉÈÊ]&quot;, &quot;[éèê]&quot;, &quot;[ÍÌÎ]&quot;, &quot;[íìî]&quot;, &quot;[ÓÒÔ]&quot;, &quot;[óòô]&quot;, &quot;[ÚÙÛ]&quot;,\
      \ &quot;[úùû]&quot;, &quot;[ÝỲ]&quot;, &quot;[ýỳ]&quot;},\n\t\tto   = {&quot;A&quot;\t  , &quot;a&quot;\t  , &quot;E&quot;\t, &quot;e&quot; , &quot;I&quot;\t  , &quot;i&quot;\t  , &quot;O&quot;\t, &quot;o&quot;\t, &quot;U&quot;  , &quot;u&quot;, &quot;Y&quot;,\
      \ &quot;y&quot;}} ,\n}\n\nm[&quot;sq&quot;] = {\n\tcanonicalName = &quot;Albanian&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Elba&quot;},\n\tfamily = &quot;sqj&quot;,\n\tsort_key = {\n\t\tfrom = { '[âãä]', '[ÂÃÄ]', '[êẽ\
      ë]', '[ÊẼË]', 'ĩ', 'Ĩ', 'õ', 'Õ', 'ũ', 'Ũ', 'ỹ', 'Ỹ', 'ç', 'Ç' },\n\t\tto   = {     'a',     'A',     'e',     'E', 'i', 'I', 'o', 'O', 'u', 'U', 'y', 'Y', 'c', 'C' } } ,\n}\n\nm[&quot;ss&quot;] = {\n\tcanonicalName = &quot;Swazi&quot;,\n\totherNames =\
      \ {&quot;Swati&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;st&quot;] = {\n\tcanonicalName = &quot;Sotho&quot;,\n\totherNames = {&quot;Sesotho&quot;, &quot;Southern Sesotho&quot;, &quot;Southern\
      \ Sotho&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;su&quot;] = {\n\tcanonicalName = &quot;Sundanese&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Sund&quot;},\n\
      \tfamily = &quot;poz-msa&quot;,\n}\n\nm[&quot;sv&quot;] = {\n\tcanonicalName = &quot;Swedish&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;gmq&quot;,\n\tancestors = {&quot;gmq-osw&quot;},\n}\n\nm[&quot;sw&quot;]\
      \ = {\n\tcanonicalName = &quot;Swahili&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Arab&quot;},\n\tfamily = &quot;bnt&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;ng'&quot;, &quot;^-&quot;},\n\t\tto   = {&quot;ngz&quot;}} ,\n\
      }\n\nm[&quot;ta&quot;] = {\n\tcanonicalName = &quot;Tamil&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Taml&quot;},\n\tfamily = &quot;dra&quot;,\n\ttranslit_module = &quot;ta-translit&quot;,\n}\n\nm[&quot;te&quot;] = {\n\tcanonicalName = &quot;Telugu&quot;,\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Telu&quot;},\n\tfamily = &quot;dra&quot;,\n\ttranslit_module = &quot;te-translit&quot;,\n}\n\nm[&quot;tg&quot;] = {\n\tcanonicalName = &quot;Tajik&quot;,\n\totherNames = {&quot;Tadjik&quot;, &quot;Tadzhik&quot;,\
      \ &quot;Tajiki&quot;, &quot;Tajik Persian&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;, &quot;fa-Arab&quot;, &quot;Latn&quot;},\n\tfamily = &quot;ira&quot;,\n\ttranslit_module = &quot;tg-translit&quot;,\n\t\tsort_key = {\n\t\t\
      from = {&quot;Ё&quot;, &quot;ё&quot;},\n\t\tto   = {&quot;Е&quot; , &quot;е&quot;}} ,\n}\n\nm[&quot;th&quot;] = {\n\tcanonicalName = &quot;Thai&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Thai&quot;},\n\tfamily = &quot;tai-swe&quot;,\n}\n\
      \nm[&quot;ti&quot;] = {\n\tcanonicalName = &quot;Tigrinya&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Ethi&quot;},\n\tfamily = &quot;sem-eth&quot;,\n\ttranslit_module = &quot;Ethi-translit&quot;,\n}\n\nm[&quot;tk&quot;] = {\n\tcanonicalName\
      \ = &quot;Turkmen&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Cyrl&quot;},\n\tfamily = &quot;trk&quot;,\n}\n\nm[&quot;tl&quot;] = {\n\tcanonicalName = &quot;Tagalog&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;,\
      \ &quot;Tglg&quot;},\n\tfamily = &quot;phi&quot;,\n}\n\nm[&quot;tn&quot;] = {\n\tcanonicalName = &quot;Tswana&quot;,\n\totherNames = {&quot;Setswana&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n\
      }\n\nm[&quot;to&quot;] = {\n\tcanonicalName = &quot;Tongan&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;poz-pol&quot;,\n}\n\nm[&quot;tr&quot;] = {\n\tcanonicalName = &quot;Turkish&quot;,\n\ttype = &quot;regular&quot;,\n\
      \tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;trk&quot;,\n}\n\nm[&quot;ts&quot;] = {\n\tcanonicalName = &quot;Tsonga&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;tt&quot;] = {\n\t\
      canonicalName = &quot;Tatar&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;, &quot;Latn&quot;, &quot;Arab&quot;, &quot;tt-Arab&quot;},\n\tfamily = &quot;trk&quot;,\n\ttranslit_module = &quot;tt-translit&quot;,\n}\n\nm[&quot;tw&quot;]\
      \ = {\n\tcanonicalName = &quot;Twi&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-kwa&quot;,\n}\n\nm[&quot;ty&quot;] = {\n\tcanonicalName = &quot;Tahitian&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts =\
      \ {&quot;Latn&quot;},\n\tfamily = &quot;poz-pol&quot;,\n}\n\nm[&quot;ug&quot;] = {\n\tcanonicalName = &quot;Uyghur&quot;,\n\totherNames = {&quot;Uigur&quot;, &quot;Uighur&quot;, &quot;Uygur&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;ug-Arab&quot;,\
      \ &quot;Latn&quot;, &quot;Cyrl&quot;},\n\tfamily = &quot;trk&quot;,\n\ttranslit_module = &quot;ug-translit&quot;,\n}\n\nm[&quot;uk&quot;] = {\n\tcanonicalName = &quot;Ukrainian&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Cyrl&quot;},\n\t\
      family = &quot;zle&quot;,\n\tancestors = {&quot;orv&quot;},\n\ttranslit_module = &quot;uk-translit&quot;,\n\tentry_name = {\n\t\tfrom = {GRAVE, ACUTE},\n\t\tto   = {}} } \nm[&quot;ur&quot;] = {\n\tcanonicalName = &quot;Urdu&quot;,\n\ttype = &quot;regular&quot;,\n\
      \tscripts = {&quot;ur-Arab&quot;},\n\tfamily = &quot;inc&quot;,\n\tentry_name = {\n\t\tfrom = {u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652)},\n\t\tto   = {}} ,\n}\n\nm[&quot;uz&quot;] = {\n\tcanonicalName = &quot;Uzbek&quot;,\n\
      \totherNames = {&quot;Northern Uzbek&quot;, &quot;Southern Uzbek&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Cyrl&quot;, &quot;fa-Arab&quot;},\n\tfamily = &quot;trk&quot;,\n}\n\nm[&quot;ve&quot;] = {\n\tcanonicalName =\
      \ &quot;Venda&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;vi&quot;] = {\n\tcanonicalName = &quot;Vietnamese&quot;,\n\totherNames = {&quot;Annamese&quot;, &quot;Annamite&quot;},\n\ttype\
      \ = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Hani&quot;},\n\tfamily = &quot;mkh-vie&quot;,\n\tancestors = {&quot;mkh-mvi&quot;},\n}\n\nm[&quot;vo&quot;] = {\n\tcanonicalName = &quot;Volapük&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts\
      \ = {&quot;Latn&quot;},\n\tfamily = &quot;art&quot;,\n}\n\nm[&quot;wa&quot;] = {\n\tcanonicalName = &quot;Walloon&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;roa&quot;,\n\tsort_key = {\n\t\tfrom = {&quot;[áà\
      âäå]&quot;, &quot;[éèêë]&quot;, &quot;[íìîï]&quot;, &quot;[óòôö]&quot;, &quot;[úùûü]&quot;, &quot;[ýỳŷÿ]&quot;, &quot;ç&quot;, &quot;'&quot;},\n\t\tto   = {&quot;a&quot;\t  , &quot;e&quot;\t , &quot;i&quot;\t , &quot;o&quot;\t , &quot;u&quot;\t , &quot;y&quot;\t\
      \ , &quot;c&quot;}} ,\n}\n\nm[&quot;wo&quot;] = {\n\tcanonicalName = &quot;Wolof&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Arab&quot;},\n\tfamily = &quot;alv-sng&quot;,\n}\n\nm[&quot;xh&quot;] = {\n\tcanonicalName = &quot;Xhosa&quot;,\n\
      \ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n}\n\nm[&quot;yi&quot;] = {\n\tcanonicalName = &quot;Yiddish&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Hebr&quot;},\n\tfamily = &quot;gmw&quot;,\n\
      \tancestors = {&quot;gmh&quot;},\n\ttranslit_module = &quot;yi-translit&quot;,\n}\n\nm[&quot;yo&quot;] = {\n\tcanonicalName = &quot;Yoruba&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;alv-von&quot;,\n}\n\nm[&quot;za&quot;]\
      \ = {\n\tcanonicalName = &quot;Zhuang&quot;,\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;, &quot;Hani&quot;},\n\tfamily = &quot;tai&quot;,\n}\n\nm[&quot;zh&quot;] = {\n\tcanonicalName = &quot;Chinese&quot;,\n\ttype = &quot;regular&quot;,\n\
      \tscripts = {&quot;Hani&quot;},\n\tfamily = &quot;sit&quot;,\n}\n\nm[&quot;zu&quot;] = {\n\tcanonicalName = &quot;Zulu&quot;,\n\totherNames = {&quot;isiZulu&quot;},\n\ttype = &quot;regular&quot;,\n\tscripts = {&quot;Latn&quot;},\n\tfamily = &quot;bnt&quot;,\n\
      }\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2015-06-28T20:54:42.182Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '15761'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:42 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1053 miss (0), cp3030 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 2808002077, 2619651615, 1086097849
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"3989053\" pageid=\"3989053\" ns=\"828\" title=\"Module:headword\"><revisions><rev user=\"CodeCat\" timestamp=\"2015-03-05T20:53:32Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nlocal lemmas = {\n\t[&quot;abbreviations&quot;] = true,\n\t[&quot;acronyms&quot;] = true,\n\t[&quot;adjectives&quot;] = true,\n\t[&quot;adnominals&quot;] = true,\n\t[&quot;adpositions&quot;]\
      \ = true,\n\t[&quot;adverbs&quot;] = true,\n\t[&quot;affixes&quot;] = true,\n\t[&quot;articles&quot;] = true,\n\t[&quot;circumfixes&quot;] = true,\n\t[&quot;circumpositions&quot;] = true,\n\t[&quot;classifiers&quot;] = true,\n\t[&quot;cmavo&quot;] = true,\n\
      \t[&quot;cmavo clusters&quot;] = true,\n\t[&quot;cmene&quot;] = true,\n\t[&quot;comparative adjectives&quot;] = true,\n\t[&quot;comparative adverbs&quot;] = true,\n\t[&quot;conjunctions&quot;] = true,\n\t[&quot;contractions&quot;] = true,\n\t[&quot;counters&quot;]\
      \ = true,\n\t[&quot;determiners&quot;] = true,\n\t[&quot;diacritical marks&quot;] = true,\n\t[&quot;fu'ivla&quot;] = true,\n\t[&quot;gismu&quot;] = true,\n\t[&quot;Han characters&quot;] = true,\n\t[&quot;Han tu&quot;] = true,\n\t[&quot;hanzi&quot;] = true,\n\
      \t[&quot;hanja&quot;] = true,\n\t[&quot;idioms&quot;] = true,\n\t[&quot;infixes&quot;] = true,\n\t[&quot;interfixes&quot;] = true,\n\t[&quot;initialisms&quot;] = true,\n\t[&quot;interjections&quot;] = true,\n\t[&quot;kanji&quot;] = true,\n\t[&quot;letters&quot;]\
      \ = true,\n\t[&quot;ligatures&quot;] = true,\n\t[&quot;lujvo&quot;] = true,\n\t[&quot;morphemes&quot;] = true,\n\t[&quot;non-constituents&quot;] = true,\n\t[&quot;nouns&quot;] = true,\n\t[&quot;numbers&quot;] = true,\n\t[&quot;numeral symbols&quot;] =\
      \ true,\n\t[&quot;numerals&quot;] = true,\n\t[&quot;particles&quot;] = true,\n\t[&quot;phrases&quot;] = true,\n\t[&quot;postpositions&quot;] = true,\n\t[&quot;predicatives&quot;] = true,\n\t[&quot;prefixes&quot;] = true,\n\t[&quot;prepositions&quot;] =\
      \ true,\n\t[&quot;prepositional phrases&quot;] = true,\n\t[&quot;preverbs&quot;] = true,\n\t[&quot;pronominal adverbs&quot;] = true,\n\t[&quot;pronouns&quot;] = true,\n\t[&quot;proverbs&quot;] = true,\n\t[&quot;proper nouns&quot;] = true,\n\t[&quot;punctuation\
      \ marks&quot;] = true,\n\t[&quot;relatives&quot;] = true,\n\t[&quot;roots&quot;] = true,\n\t[&quot;suffixes&quot;] = true,\n\t[&quot;superlative adjectives&quot;] = true,\n\t[&quot;superlative adverbs&quot;] = true,\n\t[&quot;syllables&quot;] = true,\n\
      \t[&quot;symbols&quot;] = true,\n\t[&quot;verbs&quot;] = true,\n}\n\nlocal nonlemmas = {\n\t[&quot;active participles&quot;] = true,\n\t[&quot;adjectival participles&quot;] = true,\n\t[&quot;adjective forms&quot;] = true,\n\t[&quot;adjective comparative\
      \ forms&quot;] = true,\n\t[&quot;adjective equative forms&quot;] = true,\n\t[&quot;adjective superlative forms&quot;] = true,\n\t[&quot;adverb forms&quot;] = true,\n\t[&quot;adverb comparative forms&quot;] = true,\n\t[&quot;adverb superlative forms&quot;]\
      \ = true,\n\t[&quot;adverbial participles&quot;] = true,\n\t[&quot;agent participles&quot;] = true,\n\t[&quot;article forms&quot;] = true,\n\t[&quot;circumfix forms&quot;] = true,\n\t[&quot;combined forms&quot;] = true,\n\t[&quot;determiner comparative\
      \ forms&quot;] = true,\n\t[&quot;determiner forms&quot;] = true,\n\t[&quot;determiner superlative forms&quot;] = true,\n\t[&quot;diminutive nouns&quot;] = true,\n\t[&quot;gerunds&quot;] = true,\n\t[&quot;infinitive forms&quot;] = true,\n\t[&quot;infinitives&quot;]\
      \ = true,\n\t[&quot;jyutping&quot;] = true,\n\t[&quot;kanji readings&quot;] = true,\n\t[&quot;misspellings&quot;] = true,\n\t[&quot;negative participles&quot;] = true,\n\t[&quot;nominal participles&quot;] = true,\n\t[&quot;noun case forms&quot;] = true,\n\
      \t[&quot;noun forms&quot;] = true,\n\t[&quot;noun plural forms&quot;] = true,\n\t[&quot;numeral forms&quot;] = true,\n\t[&quot;participles&quot;] = true,\n\t[&quot;participle forms&quot;] = true,\n\t[&quot;particle forms&quot;] = true,\n\t[&quot;passive\
      \ participles&quot;] = true,\n\t[&quot;past active participles&quot;] = true,\n\t[&quot;past participles&quot;] = true,\n\t[&quot;past participle forms&quot;] = true,\n\t[&quot;past passive participles&quot;] = true,\n\t[&quot;perfect active participles&quot;]\
      \ = true,\n\t[&quot;perfect passive participles&quot;] = true,\n\t[&quot;pinyin&quot;] = true,\n\t[&quot;plurals&quot;] = true,\n\t[&quot;postposition forms&quot;] = true,\n\t[&quot;prefix forms&quot;] = true,\n\t[&quot;preposition contractions&quot;]\
      \ = true,\n\t[&quot;preposition forms&quot;] = true,\n\t[&quot;prepositional pronouns&quot;] = true,\n\t[&quot;present active participles&quot;] = true,\n\t[&quot;present participles&quot;] = true,\n\t[&quot;present passive participles&quot;] = true,\n\
      \t[&quot;pronoun forms&quot;] = true,\n\t[&quot;proper noun forms&quot;] = true,\n\t[&quot;rafsi&quot;] = true,\n\t[&quot;romanizations&quot;] = true,\n\t[&quot;singulatives&quot;] = true,\n\t[&quot;suffix forms&quot;] = true,\n\t[&quot;verb forms&quot;]\
      \ = true,\n\t[&quot;verbal nouns&quot;] = true,\n}\n\nlocal notranslit = {\n\t[&quot;az&quot;] = true,\n\t[&quot;bbc&quot;] = true,\n\t[&quot;bug&quot;] = true,\n\t[&quot;cia&quot;] = true,\n\t[&quot;cjm&quot;] = true,\n\t[&quot;cmn&quot;] = true,\n\t\
      [&quot;hak&quot;] = true,\n\t[&quot;ja&quot;] = true,\n\t[&quot;lad&quot;] = true,\n\t[&quot;lzh&quot;] = true,\n\t[&quot;ms&quot;] = true,\n\t[&quot;mul&quot;] = true,\n\t[&quot;nan&quot;] = true,\n\t[&quot;oj&quot;] = true,\n\t[&quot;pi&quot;] = true,\n\
      \t[&quot;ro&quot;] = true,\n\t[&quot;ryu&quot;] = true,\n\t[&quot;sh&quot;] = true,\n\t[&quot;tgt&quot;] = true,\n\t[&quot;tly&quot;] = true,\n\t[&quot;und&quot;] = true,\n\t[&quot;vi&quot;] = true,\n\t[&quot;yue&quot;] = true,\n\t[&quot;zh&quot;] = true,\n\
      }\n\n\nlocal function preprocess(lang, sc, heads, translits, categories)\n\tif type(heads) ~= &quot;table&quot; then\n\t\theads = {heads}\n\tend\n\t\n\tif type(translits) ~= &quot;table&quot; then\n\t\ttranslits = {translits}\n\tend\n\t\n\tif #heads ==\
      \ 0 then\n\t\theads = {&quot;&quot;}\n\tend\n\t\n\t-- Create a default headword.\n\tlocal default_head = mw.title.getCurrentTitle().subpageText\n\t\n\t-- Determine if term is reconstructed\n\tlocal is_reconstructed = lang:getType() == &quot;reconstructed&quot;\
      \ or (lang:getType() ~= &quot;appendix-constructed&quot; and mw.title.getCurrentTitle().nsText == &quot;Appendix&quot;)\n\t\n\t-- Add links to multi-word page names when appropriate\n\tif lang:getCode() ~= &quot;zh&quot; then\n\t\tlocal WORDBREAKCHARS\
      \ = &quot;([%p%s]+)&quot;\n\t\tlocal EXCLUDECHARS = &quot;([^-־'.·]+)&quot; -- workaround for excluding characters from the above\n\t\tlocal contains_words = false; mw.ustring.gsub(default_head, WORDBREAKCHARS, function(b) contains_words = contains_words\
      \ or mw.ustring.match(b, &quot;^&quot; .. EXCLUDECHARS .. &quot;$&quot;); end)\n\t\t\n\t\tif (not is_reconstructed) and contains_words then\n\t\t\tlocal function workaround_to_exclude_chars(s)\n\t\t\t\treturn mw.ustring.gsub(s, EXCLUDECHARS, &quot;]]%1[[&quot;)\n\
      \t\t\tend\n\t\t\t\n\t\t\tdefault_head = &quot;[[&quot; .. mw.ustring.gsub(default_head, WORDBREAKCHARS, workaround_to_exclude_chars) .. &quot;]]&quot;\n\t\t\t-- default_head = &quot;[[&quot; .. mw.ustring.gsub(default_head, WORDBREAKCHARS, &quot;]]%1[[&quot;)\
      \ .. &quot;]]&quot; -- use this when workaround is no longer needed\n\t\t\tdefault_head = mw.ustring.gsub(default_head, &quot;%[%[%]%]&quot;, &quot;&quot;) -- remove any empty links (which could have been created above at the beginning or end of the string)\n\
      \t\tend\n\tend\n\t\n\tif is_reconstructed then\n\t\tdefault_head = &quot;*&quot; .. default_head\n\tend\n\t\n\t-- If a head is the empty string &quot;&quot;, then replace it with the default\n\tfor i, head in ipairs(heads) do\n\t\tif head == &quot;&quot;\
      \ then\n\t\t\thead = default_head\n\t\tend\n\t\t\n\t\theads[i] = head\n\tend\n\t\n\t-- Try to detect the script if it was not provided\n\t-- We use the first headword for this, and assume that all of them have the same script\n\t-- This *should* always\
      \ be true, right?\n\tif not sc then\n\t\tsc = require(&quot;Module:scripts&quot;).findBestScript(heads[1], lang)\n\tend\n\t\n\t-- Make transliterations\n\tfor i, head in ipairs(heads) do\n\t\tlocal translit = translits[i]\n\t\t\n\t\t-- Try to generate\
      \ a transliteration if necessary\n\t\t-- Generate it if the script is not Latn or similar, and if no transliteration was provided\n\t\tif translit == &quot;-&quot; then\n\t\t\ttranslit = nil\n\t\telseif not translit and not ((sc:getCode():find(&quot;Latn&quot;,\
      \ nil, true)) or sc:getCode() == &quot;Latinx&quot; or sc:getCode() == &quot;None&quot;) then\n\t\t\ttranslit = lang:transliterate(require(&quot;Module:links&quot;).remove_links(head), sc)\n\t\t\t\n\t\t\t-- There is still no transliteration?\n\t\t\t--\
      \ Add the entry to a cleanup category.\n\t\t\tif not translit and not notranslit[lang:getCode()] then\n\t\t\t\ttranslit = &quot;&lt;small&gt;transliteration needed&lt;/small&gt;&quot;\n\t\t\t\ttable.insert(categories, lang:getCanonicalName() .. &quot;\
      \ terms needing transliteration&quot;)\n\t\t\tend\n\t\tend\n\t\t\n\t\ttranslits[i] = translit\n\tend\n\t\n\treturn heads, translits, sc\nend\n\n\n-- Format a headword with transliterations\nlocal function format_headword(lang, sc, heads, translits)\n\t\
      local m_links = require(&quot;Module:links&quot;)\n\tlocal m_scriptutils = require(&quot;Module:script utilities&quot;)\n\t\n\t-- Are there non-empty transliterations?\n\t-- Need to do it this way because translit[1] might be nil while translit[2] is not\n\
      \tlocal has_translits = false\n\t\n\t-- Format the headwords\n\tfor i, head in ipairs(heads) do\n\t\tif translits[i] then\n\t\t\thas_translits = true\n\t\tend\n\t\t\n\t\t-- Apply processing to the headword, for formatting links and such\n\t\tif head:find(&quot;[[&quot;,\
      \ nil, true) then\n\t\t\thead = m_links.language_link(head, nil, lang, nil, false)\n\t\tend\n\t\t\n\t\t-- Add language and script wrapper\n\t\thead = m_scriptutils.tag_text(head, lang, sc, &quot;head&quot;)\n\t\t\n\t\theads[i] = head\n\tend\n\t\n\tlocal\
      \ translits_formatted = &quot;&quot;\n\t\n\tif has_translits then\n\t\t-- Format the transliterations\n\t\tfor i, head in ipairs(heads) do\n\t\t\tlocal translit = translits[i]\n\t\t\t\n\t\t\tif not translit then\n\t\t\t\ttranslit = &quot;?&quot;\n\t\t\t\
      end\n\t\t\t\n\t\t\ttranslit = &quot;&lt;span class=\\&quot;tr\\&quot; lang=\\&quot;\\&quot;&gt;&quot; .. translit .. &quot;&lt;/span&gt;&quot;\n\t\t\t\n\t\t\ttranslits[i] = translit\n\t\tend\n\t\t\n\t\ttranslits_formatted = &quot; (&lt;span class=\\&quot;tr\\\
      &quot; lang=\\&quot;\\&quot;&gt;&quot; .. table.concat(translits, &quot; ''or'' &quot;) .. &quot;&lt;/span&gt;)&quot;\n\t\t\n\t\tif lang and mw.title.new(lang:getCanonicalName() .. &quot; transliteration&quot;, &quot;Wiktionary&quot;).exists then\n\t\t\
      \ttranslits_formatted = &quot; [[Wiktionary:&quot; .. lang:getCanonicalName() .. &quot; transliteration|•]]&quot; .. translits_formatted\n\t\tend\n\tend\n\t\n\treturn table.concat(heads, &quot; ''or'' &quot;) .. translits_formatted\nend\n\n\nlocal function\
      \ format_genders(lang, sc, genders)\n\tif genders and #genders &gt; 0 then\n\t\tlocal gen = require(&quot;Module:gender and number&quot;)\n\t\treturn &quot;&amp;nbsp;&quot; .. gen.format_list(genders, lang)\n\telse\n\t\treturn &quot;&quot;\n\tend\nend\n\
      \n\nlocal function format_inflection_parts(lang, sc, parts)\n\tlocal m_links = require(&quot;Module:links&quot;)\n\t\n\tfor key, part in ipairs(parts) do\n\t\tif type(part) ~= &quot;table&quot; then\n\t\t\tpart = {term = part}\n\t\tend\n\t\t\n\t\tlocal\
      \ qualifiers = &quot;&quot;\n\t\t\n\t\tif part.qualifiers and #part.qualifiers &gt; 0 then\n\t\t\tqualifiers = mw.getCurrentFrame():expandTemplate{title = &quot;qualifier&quot;, args = part.qualifiers} .. &quot; &quot;\n\t\tend\n\t\t\n\t\t-- Convert the\
      \ term into a full link\n\t\t-- Don't show a transliteration here, the consensus seems to be not to\n\t\t-- show them in headword lines to avoid clutter.\n\t\tpart = m_links.full_link(not part.nolink and part.term or nil, part.alt or (part.nolink and part.term\
      \ or nil), part.lang or lang, part.sc or (not part.lang and sc), &quot;bold&quot;, part.id, {genders = part.genders, tr = part.translit or (lang:getCode() ~= &quot;ar&quot; and &quot;-&quot; or nil)}, false)\n\t\t\n\t\tif parts.accel then\n\t\t\tpart =\
      \ &quot;&lt;span class=\\&quot;form-of lang-&quot; .. lang:getCode() .. &quot; &quot; .. parts.accel .. &quot;\\&quot;&gt;&quot; .. part .. &quot;&lt;/span&gt;&quot;\n\t\tend\n\t\t\n\t\tpart = qualifiers .. part\n\t\t\n\t\tparts[key] = part\n\tend\n\t\n\
      \tlocal parts_output = &quot;&quot;\n\t\n\tif #parts &gt; 0 then\n\t\tparts_output = &quot; &quot; .. table.concat(parts, &quot; ''or'' &quot;)\n\telseif parts.request then\n\t\tparts_output = &quot; &lt;small&gt;[please provide]&lt;/small&gt;&quot; ..\
      \ require(&quot;Module:utilities&quot;).format_categories({lang:getCanonicalName() .. &quot; entries needing inflection&quot;}, lang)\n\tend\n\t\n\treturn &quot;''&quot; .. parts.label .. &quot;''&quot; .. parts_output\nend\n\n-- Format the inflections\
      \ following the headword\nlocal function format_inflections(lang, sc, inflections)\n\tif inflections and #inflections &gt; 0 then\n\t\t-- Format each inflection individually\n\t\tfor key, infl in ipairs(inflections) do\n\t\t\tinflections[key] = format_inflection_parts(lang,\
      \ sc, infl)\n\t\tend\n\t\t\n\t\treturn &quot; (&quot; .. table.concat(inflections, &quot;, &quot;) .. &quot;)&quot;\n\telse\n\t\treturn &quot;&quot;\n\tend\nend\n\nfunction export.full_headword(lang, sc, heads, translits, genders, inflections, categories,\
      \ sort_key)\n\tlocal tracking_categories = {}\n\t\n\tcategories = categories or {}\n\t\n\t-- Were any categories specified?\n\tif #categories == 0 then\n\t\tif lang:getCode() ~= &quot;und&quot; then\n\t\t\ttable.insert(tracking_categories, &quot;head tracking/no\
      \ pos&quot;)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;head tracking/no pos&quot;)\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;head tracking/no pos/lang/&quot; .. lang:getCode())\n\t\tend\n\telse\n\t\tfor _, cat in ipairs(categories)\
      \ do\n\t\t\t-- Does the category begin with the language name? If not, tag it with a tracking category.\n\t\t\tif mw.ustring.sub(cat, 1, mw.ustring.len(lang:getCanonicalName()) + 1) ~= lang:getCanonicalName() .. &quot; &quot; then\n\t\t\t\ttable.insert(tracking_categories,\
      \ &quot;head tracking/no lang category&quot;)\n\t\t\t\trequire(&quot;Module:debug&quot;).track(&quot;head tracking/no lang category&quot;)\n\t\t\t\trequire(&quot;Module:debug&quot;).track(&quot;head tracking/no lang category/lang/&quot; .. lang:getCode())\n\
      \t\t\tend\n\t\tend\n\t\t\n\t\t-- Does the category begin with the language name?\n\t\tif mw.ustring.sub(categories[1], 1, mw.ustring.len(lang:getCanonicalName()) + 1) == lang:getCanonicalName() .. &quot; &quot; then\n\t\t\tlocal pos = mw.ustring.sub(categories[1],\
      \ mw.ustring.len(lang:getCanonicalName()) + 2)\n\t\t\t\n\t\t\t-- Is it a lemma category?\n\t\t\tif lemmas[pos] or lemmas[pos:gsub(&quot;^reconstructed &quot;, &quot;&quot;)] then\n\t\t\t\ttable.insert(categories, 1, lang:getCanonicalName() .. &quot; lemmas&quot;)\n\
      \t\t\t-- Is it a nonlemma category?\n\t\t\telseif nonlemmas[pos] or nonlemmas[pos:gsub(&quot;^reconstructed &quot;, &quot;&quot;)] or lemmas[pos:gsub(&quot;^mutated &quot;, &quot;&quot;)] or nonlemmas[pos:gsub(&quot;^mutated &quot;, &quot;&quot;)] then\n\
      \t\t\t\ttable.insert(categories, lang:getCanonicalName() .. &quot; non-lemma forms&quot;)\n\t\t\t-- It's neither; we don't know what this category is, so tag it with a tracking category.\n\t\t\telse\n\t\t\t\ttable.insert(tracking_categories, &quot;head\
      \ tracking/unrecognized pos&quot;)\n\t\t\t\trequire(&quot;Module:debug&quot;).track(&quot;head tracking/unrecognized pos&quot;)\n\t\t\t\trequire(&quot;Module:debug&quot;).track(&quot;head tracking/unrecognized pos/lang/&quot; .. lang:getCode())\n\t\t\t\
      \trequire(&quot;Module:debug&quot;).track(&quot;head tracking/unrecognized pos/pos/&quot; .. pos)\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Preprocess\n\theads, translits, sc = preprocess(lang, sc, heads, translits, categories)\n\t\n\t-- Format and return all\
      \ the gathered information\n\treturn\n\t\tformat_headword(lang, sc, heads, translits) ..\n\t\tformat_genders(lang, sc, genders) ..\n\t\tformat_inflections(lang, sc, inflections) ..\n\t\trequire(&quot;Module:utilities&quot;).format_categories(categories,\
      \ lang, sort_key) ..\n\t\trequire(&quot;Module:utilities&quot;).format_categories(tracking_categories, lang, sort_key)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-06-28T20:54:42.466Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '2613'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:42 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1053 miss (0), cp3008 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 2808002434, 3588520786, 1086098814
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4216643\" pageid=\"4216643\" ns=\"828\" title=\"Module:scripts\"><revisions><rev user=\"CodeCat\" timestamp=\"2015-01-26T18:53:07Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nlocal Script = {}\n\n\nfunction Script:getCode()\n\treturn self._code\nend\n\n\nfunction Script:getCanonicalName()\n\treturn self._rawData.canonicalName\nend\n\n\nfunction Script:getOtherNames()\n\
      \treturn self._rawData.otherNames or {}\nend\n\n\n--function Script:getAllNames()\n--\treturn self._rawData.names\n--end\n\n\nfunction Script:getType()\n\treturn &quot;script&quot;\nend\n\n\nfunction Script:getCategoryName()\n\tlocal name = self._rawData.canonicalName\n\
      \t\n\t-- If the name already has &quot;script&quot; in it, don't add it.\n\tif name:find(&quot;[Ss]script$&quot;) then\n\t\treturn name\n\telse\n\t\treturn name .. &quot; script&quot;\n\tend\nend\n\n\nfunction Script:countCharacters(text)\n\tif not self._rawData.characters\
      \ then\n\t\treturn 0\n\telse\n\t\tlocal _, num = mw.ustring.gsub(text, &quot;[&quot; .. self._rawData.characters .. &quot;]&quot;, &quot;&quot;)\n\t\treturn num\n\tend\nend\n\n\nfunction Script:getRawData()\n\treturn self._rawData\nend\n\n\nfunction Script:toJSON()\n\
      \tlocal ret = {\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\totherNames = self:getOtherNames(),\n\t\ttype = self:getType(),\n\t\t}\n\t\n\treturn require(&quot;Module:JSON&quot;).toJSON(ret)\n\
      end\n\n\nScript.__index = Script\n\n\nfunction export.makeObject(code, data)\n\treturn data and setmetatable({ _rawData = data, _code = code }, Script) or nil\nend\n\n\nfunction export.getByCode(code)\n\tif code == &quot;IPAchar&quot; then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;IPAchar&quot;)\n\
      \tend\n\treturn export.makeObject(code, mw.loadData(&quot;Module:scripts/data&quot;)[code])\nend\n\n\n-- Find the best script to use, based on the characters of a string.\nfunction export.findBestScript(text, lang)\n\tif not text or not lang then\n\t\t\
      return export.getByCode(&quot;None&quot;)\n\tend\n\t\n\tlocal scripts = lang:getScripts()\n\t\n\t-- Try to match every script against the text,\n\t-- and return the one with the most matching characters.\n\tlocal bestcount = 0\n\tlocal bestscript = nil\n\
      \t\n\tfor i, script in ipairs(scripts) do\n\t\tlocal count = script:countCharacters(text)\n\t\t\n\t\tif count &gt; bestcount then\n\t\t\tbestcount = count\n\t\t\tbestscript = script\n\t\tend\n\tend\n\t\n\tif bestscript then\n\t\treturn bestscript\n\tend\n\
      \t\n\t-- No matching script was found. Return &quot;None&quot;.\n\treturn export.getByCode(&quot;None&quot;)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-06-28T20:54:42.658Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '18211'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:42 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1052 miss (0), cp3008 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 3181945585, 3588520938, 1086100014
    body: !!binary |-
      
- recorded: 2015-06-28T20:54:42.941Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '13329'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:42 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1066 miss (0), cp3004 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 2435936891, 3889829940, 1086100934
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"3935515\" pageid=\"3935515\" ns=\"828\" title=\"Module:links\"><revisions><rev user=\"Atitarev\" timestamp=\"2015-05-06T00:07:34Z\" comment=\"Removing Amharic and Tigrinya from\
      \ override_translit until trasnliteration modules are made better\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\n--TODO: move to [[Module:languages]]\nlocal override_translit = {\n\t[&quot;ab&quot;]\
      \ = true,\n\t[&quot;abq&quot;] = true,\n\t[&quot;ady&quot;] = true,\n\t[&quot;av&quot;] = true,\n\t[&quot;axm&quot;] = true,\n\t[&quot;ba&quot;] = true,\n\t[&quot;bo&quot;] = true,\n\t[&quot;bua&quot;] = true,\n\t[&quot;ce&quot;] = true,\n\t[&quot;chm&quot;]\
      \ = true,\n\t[&quot;cv&quot;] = true,\t\n\t[&quot;dar&quot;] = true,\n\t[&quot;dv&quot;] = true,\n\t[&quot;dz&quot;] = true,\n\t[&quot;el&quot;] = true,\n\t[&quot;grc&quot;] = true,\n\t[&quot;hy&quot;] = true,\n\t[&quot;inh&quot;] = true,\n\t[&quot;iu&quot;]\
      \ = true,\n\t[&quot;ka&quot;] = true,\n\t[&quot;kk&quot;] = true,\n\t--[&quot;ko&quot;] = true,\n\t[&quot;kbd&quot;] = true,\n\t[&quot;kca&quot;] = true,\n\t[&quot;kjh&quot;] = true,\n\t[&quot;kn&quot;] = true,\n\t[&quot;koi&quot;] = true,\n\t[&quot;kpv&quot;]\
      \ = true,\n\t[&quot;ky&quot;] = true,\n\t[&quot;kv&quot;] = true,\n\t[&quot;lo&quot;] = true,\n\t[&quot;lbe&quot;] = true,\n\t[&quot;lez&quot;] = true,\n\t[&quot;lzz&quot;] = true,\n\t[&quot;mdf&quot;] = true,\n\t[&quot;ml&quot;] = true,\n\t[&quot;mn&quot;]\
      \ = true,\n\t[&quot;my&quot;] = true,\n\t[&quot;myv&quot;] = true,\n\t[&quot;oge&quot;] = true,\n\t[&quot;os&quot;] = true,\n\t[&quot;sah&quot;] = true,\n\t[&quot;si&quot;] = true,\n\t[&quot;sva&quot;] = true,\n\t[&quot;ta&quot;] = true,\n\t[&quot;tab&quot;]\
      \ = true,\n\t[&quot;te&quot;] = true,\n\t[&quot;tg&quot;] = true,\n\t[&quot;tt&quot;] = true,\n\t[&quot;tyv&quot;] = true,\n\t[&quot;ug&quot;] = true,\n\t[&quot;udm&quot;] = true,\n\t[&quot;xal&quot;] = true,\n\t[&quot;xcl&quot;] = true,\n\t[&quot;xmf&quot;]\
      \ = true,\n}\n\nlocal ignore_cap = {\n\t[&quot;ko&quot;] = true,\n}\n\n\n-- Make a language-specific link from given link's parts\nlocal function makeLangLink(link, lang, id, allowSelfLink)\n\t-- If there is no display form, then create a default one\n\
      \tif not link.display then\n\t\tlink.display = link.target\n\t\t\n\t\t-- Strip the prefix from the displayed form\n\t\t-- TODO: other interwiki links?\n\t\tif link.display:find(&quot;^:&quot;) then\n\t\t\tlink.display = link.display:gsub(&quot;^:&quot;,\
      \ &quot;&quot;)\n\t\telseif link.display:find(&quot;^w:&quot;) then\n\t\t\tlink.display = link.display:gsub(&quot;^w:&quot;, &quot;&quot;)\n\t\tend\n\tend\n\t\n\t-- If the link contains unexpanded template parameters, then don't create a link\n\tif link.target:find(&quot;{{{&quot;,\
      \ nil, true) then\n\t\treturn link.display\n\tend\n\t\n\t-- Process the target\n\tif not (link.target:find(&quot;^:&quot;) or link.target:find(&quot;^w:&quot;)) then\n\t\t-- Remove diacritics from the page name\n\t\tlink.target = lang:makeEntryName(link.target)\n\
      \t\t\n\t\t-- Link to appendix for reconstructed terms and terms in appendix-only languages\n\t\tif link.target:find(&quot;^*.&quot;) then\n\t\t\tif lang:getCode() == &quot;und&quot; then\n\t\t\t\treturn link.display\n\t\t\telse\n\t\t\t\tlink.target = &quot;Appendix:&quot;\
      \ .. lang:getCanonicalName() .. &quot;/&quot; .. mw.ustring.sub(link.target, 2)\n\t\t\tend\n\t\telseif lang:getType() == &quot;reconstructed&quot; then\n\t\t\terror(&quot;The specified language &quot; .. lang:getCanonicalName() .. &quot; is unattested,\
      \ while the given word is not marked with '*' to indicate that it is reconstructed&quot;)\n\t\telseif lang:getType() == &quot;appendix-constructed&quot; then\n\t\t\tlink.target = &quot;Appendix:&quot; .. lang:getCanonicalName() .. &quot;/&quot; .. link.target\n\
      \t\tend\n\tend\n\t\n\t-- If the target is the same as the current page, then return a &quot;self-link&quot; like the software does\n\tif not allowSelfLink and (link.target == mw.title.getCurrentTitle().prefixedText or link.target == &quot;:&quot; .. mw.title.getCurrentTitle().prefixedText)\
      \ then\n\t\treturn &quot;&lt;strong class=\\&quot;selflink\\&quot;&gt;&quot; .. link.display .. &quot;&lt;/strong&gt;&quot;\n\tend\n\t\n\t-- Add fragment\n\t-- Do not add a section link to &quot;Undetermined&quot;, as such sections do not exist and are\
      \ invalid.\n\t-- TabbedLanguages handles links without a section by linking to the &quot;last visited&quot; section,\n\t-- but adding &quot;Undetermined&quot; would break that feature.\n\tif not link.fragment and lang:getCode() ~= &quot;und&quot; and not\
      \ link.target:find(&quot;^w:&quot;) then\n\t\tif id then\n\t\t\tlink.fragment = lang:getCanonicalName() .. &quot;-&quot; .. id\n\t\telseif not link.target:find(&quot;^Appendix:&quot;) then\n\t\t\tlink.fragment = lang:getCanonicalName()\n\t\tend\n\tend\n\
      \t\n\treturn &quot;[[&quot; .. link.target .. (link.fragment and &quot;#&quot; .. link.fragment or &quot;&quot;) .. &quot;|&quot; .. link.display .. &quot;]]&quot;\nend\n\n\n-- Split a link into its parts\nlocal function parseLink(linktext)\n\tlocal link\
      \ = {target = linktext}\n\tlocal found, _, first, second\n\t\n\tfound, _, first, second = mw.ustring.find(link.target, &quot;^([^|]+)|(.+)$&quot;)\n\t\n\tif found then\n\t\tlink.target = first\n\t\tlink.display = second\n\telse\n\t\tlink.display = link.target\n\
      \tend\n\t\n\tfound, _, first, second = mw.ustring.find(link.target, &quot;^(.+)#(.+)$&quot;)\n\t\n\tif found then\n\t\tlink.target = first\n\t\tlink.fragment = second\n\tend\n\t\n\treturn link\nend\n\n\n-- Creates a basic wikilink to the given term. If\
      \ the text already contains\n-- links, these are replaced with links to the correct section.\nlocal function language_link2(text, alt, lang, id, allowSelfLink)\n\tlocal sectFix = false\n\tlocal tracking = &quot;&quot;\n\t\n\tif text and text:gsub(&quot;&amp;#[Xx]?[0-9A-Fa-f]+;&quot;,\
      \ &quot;&quot;):find(&quot;#&quot;, nil, true) then\n\t\tsectFix = true\n\tend\n\t\n\tif ignore_cap[lang:getCode()] and text then\n\t\ttext = mw.ustring.gsub(text, &quot;%^&quot;, &quot;&quot;)\n\tend\n\t\n\t-- If the text begins with * and another character,\n\
      \t-- then act as if each link begins with *\n\tlocal allReconstructed = false\n\t\n\tif text:find(&quot;^*.&quot;) then\n\t\tallReconstructed = true\n\tend\n\t\n\t-- Do we have embedded wikilinks?\n\tif text:find(&quot;[[&quot;, nil, true) then\n\t\tif\
      \ id then\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;language link/bad id&quot;)\n\t\tend\n\t\t\n\t\tlocal function repl(linktext)\n\t\t\tlocal link = parseLink(linktext)\n\t\t\t\n\t\t\tif allReconstructed then\n\t\t\t\tlink.target = &quot;*&quot;\
      \ .. link.target\n\t\t\tend\n\t\t\t\n\t\t\treturn makeLangLink(link, lang, id, allowSelfLink)\n\t\tend\n\t\t\n\t\ttext = mw.ustring.gsub(text, &quot;%[%[([^%]]+)%]%]&quot;, repl)\n\t\t\n\t\t-- Remove the extra * at the beginning if it's immediately followed\n\
      \t\t-- by a link whose display begins with * too\n\t\tif allReconstructed then\n\t\t\ttext = mw.ustring.gsub(text, &quot;^%*%[%[([^|%]]+)|%*&quot;, &quot;[[%1|*&quot;)\n\t\tend\n\telse\n\t\t-- There is no embedded wikilink, make a link using the parameters.\n\
      \t\ttext = makeLangLink({target = text, display = alt}, lang, id, allowSelfLink)\n\tend\n\t\n\treturn text .. (sectFix and &quot;[[Category:Link with section]]&quot; or &quot;&quot;) .. tracking\nend\n\n\n-- Format the annotations (things following the\
      \ linked term)\nlocal function format_link_annotations(lang, annotations, face)\n\tlocal ret = &quot;&quot;\n\t\n\t-- Interwiki link\n\tif annotations[&quot;interwiki&quot;] then\n\t\tret = ret .. annotations[&quot;interwiki&quot;]\n\tend\n\t\n\t-- Genders\n\
      \tif annotations[&quot;genders&quot;] and #annotations[&quot;genders&quot;] &gt; 0 then\n\t\tlocal gen = require(&quot;Module:gender and number&quot;)\n\t\tret = ret .. &quot;&amp;nbsp;&quot; .. gen.format_list(annotations[&quot;genders&quot;], lang)\n\
      \tend\n\t\n\tlocal glosses = {}\n\t\n\t-- Transliteration\n\tif annotations[&quot;tr&quot;] then\n\t\tif face == &quot;term&quot; then\n\t\t\ttable.insert(glosses, &quot;&lt;span lang=\\&quot;\\&quot; class=\\&quot;tr mention-tr\\&quot;&gt;&quot; .. annotations[&quot;tr&quot;]\
      \ .. &quot;&lt;/span&gt;&quot;)\n\t\telse\n\t\t\ttable.insert(glosses, &quot;&lt;span lang=\\&quot;\\&quot; class=\\&quot;tr\\&quot;&gt;&quot; .. annotations[&quot;tr&quot;] .. &quot;&lt;/span&gt;&quot;)\n\t\tend\n\tend\n\t\n\t-- Gloss/translation\n\t\
      if annotations[&quot;gloss&quot;] then\n\t\ttable.insert(glosses, &quot;&lt;span class=\\&quot;mention-gloss-double-quote\\&quot;&gt;“&lt;/span&gt;&lt;span class=\\&quot;mention-gloss\\&quot;&gt;&quot; .. annotations[&quot;gloss&quot;] .. &quot;&lt;/span&gt;&lt;span\
      \ class=\\&quot;mention-gloss-double-quote\\&quot;&gt;”&lt;/span&gt;&quot;)\n\tend\n\t\n\t-- Part of speech\n\t-- TODO: remove\n\tif annotations[&quot;pos&quot;] then\n\t\tlocal pos_template = mw.title.makeTitle(&quot;Template&quot;, &quot;pos &quot; ..\
      \ annotations[&quot;pos&quot;])\n\n\t\tif pos_template and pos_template.exists then\n\t\t\ttable.insert(glosses, mw.getCurrentFrame():expandTemplate{title = &quot;pos &quot; .. annotations[&quot;pos&quot;]})\n\t\telse\n\t\t\ttable.insert(glosses, annotations[&quot;pos&quot;])\n\
      \t\tend\n\tend\n\t\n\t-- Literal/sum-of-parts meaning\n\tif annotations[&quot;lit&quot;] then\n\t\ttable.insert(glosses, &quot;literally &lt;span class=\\&quot;mention-gloss-double-quote\\&quot;&gt;“&lt;/span&gt;&lt;span class=\\&quot;mention-gloss\\&quot;&gt;&quot;\
      \ .. annotations[&quot;lit&quot;] .. &quot;&lt;/span&gt;&lt;span class=\\&quot;mention-gloss-double-quote\\&quot;&gt;”&lt;/span&gt;&quot;)\n\tend\n\t\n\tif #glosses &gt; 0 then\n\t\tret = ret .. &quot; (&quot; .. table.concat(glosses, &quot;, &quot;) ..\
      \ &quot;)&quot;\n\tend\n\t\n\treturn ret\nend\n\n\n-- A version of {{l}} or {{m}} that can be called from other modules too\nfunction export.full_link(term, alt, lang, sc, face, id, annotations, allowSelfLink)\n\tannotations = annotations or {}\n\t\n\t\
      -- Create the link\n\tlocal link = &quot;&quot;\n\t\n\tlocal m_utilities = require(&quot;Module:utilities&quot;)\n\tlocal m_scriptutils = require(&quot;Module:script utilities&quot;)\n\t\n\t-- Is there any text to show?\n\tif (term or alt) then\n\t\t--\
      \ Try to detect the script if it was not provided\n\t\tif not sc then\n\t\t\tsc = require(&quot;Module:scripts&quot;).findBestScript(alt or term, lang)\n\t\tend\n\t\t\n\t\t-- Only make a link if the term has been given, otherwise just show the alt text\
      \ without a link\n\t\tlink = m_scriptutils.tag_text(term and language_link2(term, alt, lang, id, allowSelfLink) or alt, lang, sc, face)\n\telse\n\t\t-- No term to show.\n\t\t-- Is there at least a transliteration we can work from?\n\t\tlink = m_scriptutils.request_script(lang,\
      \ sc)\n\t\t\n\t\tif link == &quot;&quot; or not annotations[&quot;tr&quot;] or annotations[&quot;tr&quot;] == &quot;-&quot; then\n\t\t\t-- No link to show, and no transliteration either. Show a term request.\n\t\t\tlocal category = &quot;&quot;\n\t\t\t\
      if mw.title.getCurrentTitle().nsText ~= &quot;Template&quot; then\n\t\t\t\tcategory = &quot;[[Category:&quot; .. lang:getCanonicalName() .. &quot; term requests]]&quot;\n\t\t\tend\n\t\t\tlink = &quot;&lt;small&gt;[Term?]&lt;/small&gt;&quot; .. category\n\
      \t\tend\n\tend\n\t\n\tlocal mantrFix, redtrFix\n\tlocal manual_tr = &quot;&quot;\n\t\n\tif annotations[&quot;tr&quot;] == &quot;&quot; or annotations[&quot;tr&quot;] == &quot;-&quot; then\n\t\tannotations[&quot;tr&quot;] = nil\n\telseif (term or alt) and\
      \ not ((sc:getCode():find(&quot;Latn&quot;, nil, true)) or sc:getCode() == &quot;Latinx&quot;) and (not annotations[&quot;tr&quot;] or override_translit[lang:getCode()]) then\n\t\t-- Try to generate a transliteration if necessary\n\t\tlocal automated_tr\n\
      \t\tautomated_tr = lang:transliterate(export.remove_links(alt or term), sc)\n\t\tif automated_tr then\n\t\t\tif annotations[&quot;tr&quot;] ~= automated_tr then\n\t\t\t\tif annotations[&quot;tr&quot;] then\n\t\t\t\t\tmanual_tr = annotations[&quot;tr&quot;]\n\
      \t\t\t\t\tmantrFix = true\n\t\t\t\tend\n\t\t\t\tannotations[&quot;tr&quot;] = automated_tr\n\t\t\telse\n\t\t\t\tredtrFix = true\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn link .. format_link_annotations(lang, annotations, face)\n\t\t\t\t.. (mantrFix and\
      \ &quot;[[Category:Terms with manual transliterations different from the automated ones]][[Category:Terms with manual transliterations different from the automated ones/&quot; .. lang:getCode() .. &quot;]]&quot; or &quot;&quot;)\n\t\t\t\t.. (redtrFix and\
      \ &quot;[[Category:Terms with redundant transliterations]][[Category:Terms with redundant transliterations/&quot; .. lang:getCode() .. &quot;]]&quot; or &quot;&quot;)\nend\n\n\nfunction export.language_link(text, alt, lang, id, allowSelfLink)\n\tif allowSelfLink\
      \ == false then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;curtitle/false&quot;)\n\telseif allowSelfLink == true then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;curtitle/true&quot;)\n\telseif allowSelfLink == nil then\n\t\tallowSelfLink\
      \ = true\n\t\trequire(&quot;Module:debug&quot;).track(&quot;curtitle/nil&quot;)\n\telse\n\t\tif allowSelfLink ~= mw.title.getCurrentTitle().prefixedText then\n\t\t\trequire(&quot;Module:debug&quot;).track(&quot;curtitle/string/not pagename&quot;)\n\t\t\
      end\n\t\t\n\t\tallowSelfLink = false\n\t\trequire(&quot;Module:debug&quot;).track(&quot;curtitle/string&quot;)\n\tend\n\t\n\trequire(&quot;Module:debug&quot;).track(&quot;language_link&quot;)\n\treturn language_link2(text, alt, lang, id, allowSelfLink)\n\
      end\n\n\n-- Strips all square brackets out or replaces them.\nfunction export.remove_links(text)\n\tif type(text) == &quot;table&quot; then text = text.args[1] end; if not text then text = &quot;&quot; end\n\t\n\ttext = text:gsub(&quot;%[%[Category:[^|%]]-|?[^|%]]-%]%]&quot;,\
      \ &quot;&quot;)\n\ttext = text:gsub(&quot;%[%[[^|%]]-|&quot;, &quot;&quot;)\n\ttext = text:gsub(&quot;%[%[&quot;, &quot;&quot;)\n\ttext = text:gsub(&quot;%]%]&quot;, &quot;&quot;)\n\n\treturn text\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-06-28T20:54:43.134Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '4996'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:43 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1068 miss (0), cp3012 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 3481225036, 4026588202, 1086102116
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4099100\" pageid=\"4099100\" ns=\"828\" title=\"Module:script utilities\"><revisions><rev user=\"Vahagn Petrosyan\" timestamp=\"2014-11-16T19:12:49Z\" comment=\"&quot;script?&quot;\
      \ to &quot;script needed&quot; to match &quot;transliteration needed&quot; and to avoid confusion\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\n-- Implements [[Template:lang]]\nfunction export.lang_t(frame)\n\
      \tlocal args = frame:getParent().args\n\tNAMESPACE = mw.title.getCurrentTitle().nsText\n\t\n\tlocal lang = args[1]; if lang == &quot;&quot; then lang = nil end\n\tlocal text = args[2] or &quot;&quot;\n\tlocal sc = args[&quot;sc&quot;]; if sc == &quot;&quot;\
      \ then sc = nil end\n\tlocal face = args[&quot;face&quot;]; if face == &quot;&quot; then face = nil end\n\t\n\tlang = lang or (NAMESPACE == &quot;Template&quot; and &quot;und&quot;) or error(&quot;Language code has not been specified. Please pass parameter\
      \ 1 to the template.&quot;)\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc)\
      \ or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\tif not sc then\n\t\tsc = require(&quot;Module:scripts&quot;).findBestScript(text, lang)\n\tend\n\t\n\treturn export.tag_text(text, lang, sc, face)\n\
      end\n\n-- Wrap text in the appropriate HTML tags with language and script class.\nfunction export.tag_text(text, lang, sc, face)\n\t-- Add a script wrapper\n\tif face == &quot;term&quot; then\n\t\treturn '&lt;i class=&quot;' .. sc:getCode() .. ' mention&quot;\
      \ lang=&quot;' .. lang:getCode() .. '&quot;&gt;' .. text .. '&lt;/i&gt;'\n\telseif face == &quot;head&quot; then\n\t\treturn '&lt;strong class=&quot;' .. sc:getCode() .. ' headword&quot; lang=&quot;' .. lang:getCode() .. '&quot;&gt;' .. text .. '&lt;/strong&gt;'\n\
      \telseif face == &quot;bold&quot; then\n\t\treturn '&lt;b class=&quot;' .. sc:getCode() .. '&quot; lang=&quot;' .. lang:getCode() .. '&quot;&gt;' .. text .. '&lt;/b&gt;'\n\telseif face == nil then\n\t\treturn '&lt;span class=&quot;' .. sc:getCode() ..\
      \ '&quot; lang=&quot;' .. lang:getCode() .. '&quot;&gt;' .. text .. '&lt;/span&gt;'\n\telse\n\t\terror(&quot;Invalid script face \\&quot;&quot; .. face .. &quot;\\&quot;.&quot;)\n\tend\nend\n\n-- Add a notice to request the native script of a word\nfunction\
      \ export.request_script(lang, sc)\n\tlocal scripts = lang:getScripts()\n\t\n\t-- By default, request for &quot;native&quot; script\n\tlocal cat_script = &quot;native&quot;\n\tlocal disp_script = &quot;script&quot;\n\t\n\t-- If the script was not specified,\
      \ and the language has only one script, use that.\n\tif not sc and #scripts == 1 then\n\t\tsc = scripts[1]\n\tend\n\t\n\t-- Is the script known?\n\tif sc then\n\t\t-- If the script is Latin, return nothing.\n\t\tif is_Latin_script(sc) then\n\t\t\treturn\
      \ &quot;&quot;\n\t\tend\n\t\t\n\t\tif sc:getCode() ~= scripts[1]:getCode() then\n\t\t\tdisp_script = sc:getCanonicalName()\n\t\tend\n\t\t\n\t\t-- The category needs to be specific to script only if there is chance\n\t\t-- of ambiguity. This occurs when\
      \ lang=und, or when the language has\n\t\t-- multiple scripts.\n\t\tif lang:getCode() == &quot;und&quot; or scripts[2] then\n\t\t\tcat_script = sc:getCanonicalName()\n\t\tend\n\telse\n\t\t-- The script is not known.\n\t\t-- Does the language have at least\
      \ one non-Latin script in its list?\n\t\tlocal has_nonlatin = false\n\t\t\n\t\tfor i, val in ipairs(scripts) do\n\t\t\tif not is_Latin_script(val) then\n\t\t\t\thas_nonlatin = true\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- If there are non-Latin\
      \ scripts, return nothing.\n\t\tif not has_nonlatin then\n\t\t\treturn &quot;&quot;\n\t\tend\n\tend\n\t\n\tlocal category = &quot;&quot;\n\t\n\tif mw.title.getCurrentTitle().nsText ~= &quot;Template&quot; then\n\t\tcategory = &quot;[[Category:&quot; ..\
      \ lang:getCanonicalName() .. &quot; terms needing &quot; .. cat_script .. &quot; script]]&quot;\n\tend\n\t\n\treturn &quot;&lt;small&gt;[&quot; .. disp_script .. &quot; needed]&lt;/small&gt;&quot; .. category\nend\n\nfunction export.template_rfscript(frame)\n\
      \tlocal args = frame.args\n\tlocal lang = args[1] or error(&quot;The first parameter (language code) has not been given&quot;)\n\tlocal sc = args[&quot;sc&quot;]; if sc == &quot;&quot; then sc = nil end\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang)\
      \ or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;))\
      \ or nil)\n\t\n\tlocal ret = export.request_script(lang, sc)\n\t\n\tif ret == &quot;&quot; then\n\t\terror(&quot;This language is written in the Latin alphabet. It does not need a native script.&quot;)\n\telse\n\t\treturn ret\n\tend\nend\n\nfunction is_Latin_script(sc)\n\
      \treturn (sc:getCode():find(&quot;Latn&quot;, nil, true)) or sc:getCode() == &quot;Latinx&quot;\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-06-28T20:54:43.321Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Agender+and+number&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '5636'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:43 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1054 miss (0), cp3012 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 2571298808, 4026588274, 1086102901
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"3906346\" pageid=\"3906346\" ns=\"828\" title=\"Module:gender and number\"><revisions><rev user=\"Wikitiki89\" timestamp=\"2015-06-23T16:51:06Z\" comment=\"added non-personal\
      \ as antonym of personal\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">--[=[\n\tThis module creates standardised displays for gender and number.\n\tIt converts a gender specification into Wiki/HTML format.\n\t\n\tA gender\
      \ specification is a list of one of the elements listed below,\n\tseparated by hyphens. Examples are: &quot;c&quot;, &quot;n&quot;, &quot;f-p&quot;, &quot;m-an-p&quot;\n]=]--\n\nlocal export = {}\n\nlocal codes = {}\n\n-- A list of all possible &quot;parts&quot;\
      \ that a specification can be made out of.\n\ncodes[&quot;?&quot;] = '&lt;abbr title=&quot;gender incomplete&quot;&gt;?&lt;/abbr&gt;'\n\n-- Genders\ncodes[&quot;m&quot;] = '&lt;abbr title=&quot;masculine gender&quot;&gt;m&lt;/abbr&gt;'\ncodes[&quot;f&quot;]\
      \ = '&lt;abbr title=&quot;feminine gender&quot;&gt;f&lt;/abbr&gt;'\ncodes[&quot;n&quot;] = '&lt;abbr title=&quot;neuter gender&quot;&gt;n&lt;/abbr&gt;'\ncodes[&quot;c&quot;] = '&lt;abbr title=&quot;common gender&quot;&gt;c&lt;/abbr&gt;'\n\n-- Additional\
      \ qualifiers\ncodes[&quot;an&quot;] = '&lt;abbr title=&quot;animate&quot;&gt;anim&lt;/abbr&gt;'\ncodes[&quot;in&quot;] = '&lt;abbr title=&quot;inanimate&quot;&gt;inan&lt;/abbr&gt;'\ncodes[&quot;pr&quot;] = '&lt;abbr title=&quot;personal&quot;&gt;pers&lt;/abbr&gt;'\n\
      codes[&quot;np&quot;] = '&lt;abbr title=&quot;non-personal&quot;&gt;npers&lt;/abbr&gt;'\n\n-- Numbers\ncodes[&quot;s&quot;] = '&lt;abbr title=&quot;singular number&quot;&gt;sg&lt;/abbr&gt;'\ncodes[&quot;d&quot;] = '&lt;abbr title=&quot;dual number&quot;&gt;du&lt;/abbr&gt;'\n\
      codes[&quot;p&quot;] = '&lt;abbr title=&quot;plural number&quot;&gt;pl&lt;/abbr&gt;'\n\n-- Verb qualifiers\ncodes[&quot;impf&quot;] = '&lt;abbr title=&quot;imperfective aspect&quot;&gt;impf&lt;/abbr&gt;'\ncodes[&quot;pf&quot;] = '&lt;abbr title=&quot;perfective\
      \ aspect&quot;&gt;pf&lt;/abbr&gt;'\n\n-- Version of format_list that can be invoked from a template.\nfunction export.show_list(frame)\n\tlocal args = frame.args\n\tlocal lang = args[&quot;lang&quot;]; if lang == &quot;&quot; then lang = nil end\n\tlocal\
      \ list = {}\n\tlocal i = 1\n\t\n\twhile args[i] and args[i] ~= &quot;&quot; do\n\t\ttable.insert(list, args[i])\n\t\ti = i + 1\n\tend\n\t\n\treturn export.format_list(list, lang)\nend\n\n-- Format one or more gender specifications, in the form of a table\
      \ of specifications.\nfunction export.format_list(list, lang)\n\tlocal is_nounclass = nil\n\t\n\t-- Iterate over each specification and format it\n\tfor key, spec in ipairs(list) do\n\t\tlocal nc\n\t\tlist[key], nc = export.format_specification(spec, lang)\n\
      \t\t\n\t\t-- Ensure that the specifications are either all noun classes, or none are.\n\t\tif is_nounclass == nil then\n\t\t\tis_nounclass = nc\n\t\telseif is_nounclass ~= nc then\n\t\t\terror(&quot;Noun classes and genders cannot be mixed. Please use\
      \ either one or the other.&quot;)\n\t\tend\n\tend\n\t\n\tif is_nounclass then\n\t\t-- Add the processed codes together with slashes\n\t\treturn &quot;&lt;span class=\\&quot;gender\\&quot;&gt;class &quot; .. table.concat(list, &quot;/&quot;) .. &quot;&lt;/span&gt;&quot;\n\
      \telse\n\t\t-- Add the processed codes together with commas\n\t\treturn &quot;&lt;span class=\\&quot;gender\\&quot;&gt;&quot; .. table.concat(list, &quot;, &quot;) .. &quot;&lt;/span&gt;&quot;\n\tend\nend\n\n-- Format the sub-parts of a single gender specification.\n\
      function export.format_specification(spec, lang)\n\tlocal categories = &quot;&quot;\n\tlocal ret = &quot;&quot;\n\tlocal is_nounclass = false\n\t\n\t-- If the specification starts with cX, then it is a noun class specification.\n\tif spec:find(&quot;^[1-9]&quot;)\
      \ or spec:find(&quot;^c[^-]&quot;) then\n\t\tis_nounclass = true\n\t\tcode = spec:gsub(&quot;^c&quot;, &quot;&quot;)\n\t\t\n\t\tif code == &quot;?&quot; then\n\t\t\tret = &quot;&lt;abbr class=\\&quot;noun-class\\&quot; title=\\&quot;noun class missing\\\
      &quot;&gt;?&lt;/abbr&gt;&quot;\n\t\telse\n\t\t\tret = &quot;&lt;abbr class=\\&quot;noun-class\\&quot; title=\\&quot;noun class &quot; .. code .. &quot;\\&quot;&gt;&quot; .. code .. &quot;&lt;/abbr&gt;&quot;\n\t\tend\n\telse\n\t\t-- Split the parts and\
      \ iterate over each part, converting it into its display form\n\t\tlocal parts = mw.text.split(spec, &quot;-&quot;)\n\t\t\n\t\tfor key, code in ipairs(parts) do\n\t\t\t-- Is this code valid?\n\t\t\tif codes[code] then\n\t\t\t\tparts[key] = codes[code]\n\
      \t\t\telse\n\t\t\t\terror(&quot;The gender specification \\&quot;&quot; .. spec .. &quot;\\&quot; is not valid.&quot;)\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Add the processed codes together with non-breaking spaces\n\t\tret = table.concat(parts, &quot;&amp;nbsp;&quot;)\n\
      \tend\n\t\n\t-- Do some additional checks if a language was given\n\tif lang then\n\t\t-- Is this an incomplete gender?\n\t\tif spec:find(&quot;?&quot;) then\n\t\t\tlocal m_utilities = require(&quot;Module:utilities&quot;)\n\t\t\tcategories = m_utilities.format_categories({lang:getCanonicalName()\
      \ .. &quot; terms with incomplete gender&quot;}, nil)\n\t\tend\n\t\t\n\t\t-- Check if the specification is valid\n\t\t--elseif langinfo.genders then\n\t\t--\tlocal valid_genders = {}\n\t\t--\tfor _, g in ipairs(langinfo.genders) do valid_genders[g] = true\
      \ end\n\t\t--\t\n\t\t--\tif not valid_genders[spec] then\n\t\t--\t\tlocal valid_string = {}\n\t\t--\t\tfor i, g in ipairs(langinfo.genders) do valid_string[i] = g end\n\t\t--\t\terror(&quot;The gender specification \\&quot;&quot; .. spec .. &quot;\\&quot;\
      \ is not valid for &quot; .. langinfo.names[1] .. &quot;. Valid are: &quot; .. table.concat(valid_string, &quot;, &quot;))\n\t\t--\tend\n\t\t--end\n\tend\n\t\n\treturn ret .. categories, is_nounclass\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-06-28T20:54:43.506Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '3904'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:43 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1068 miss (0), cp3010 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 3481225441, 134030880, 1086103700
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4073440\" pageid=\"4073440\" ns=\"828\" title=\"Module:utilities\"><revisions><rev user=\"Wikitiki89\" timestamp=\"2015-06-10T20:26:21Z\" comment=\"remove silly strings of ands\
      \ and ors with redundant lang:getCode() calls\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nlocal notneeded = {\n\t[&quot;und&quot;] = true,\n\t[&quot;cmn&quot;] = true,\n\t[&quot;ja&quot;] = true,\n\
      \t[&quot;zu&quot;] = true,\n\t[&quot;nan&quot;] = true,\n\t[&quot;yue&quot;] = true,\n\t[&quot;ko&quot;] = true,\n}\n\nlocal neededhassubpage = {\n\t[&quot;ga&quot;] = true,\n\t[&quot;gv&quot;] = true,\n\t[&quot;nv&quot;] = true,\n\t[&quot;roa-jer&quot;]\
      \ = true,\n\t[&quot;fr&quot;] = true,\n\t[&quot;rm&quot;] = true,\n\t[&quot;prg&quot;] = true,\n\t[&quot;gd&quot;] = true,\n\t[&quot;twf&quot;] = true,\n\t[&quot;en&quot;] = true,\n\t[&quot;ro&quot;] = true,\n\t[&quot;egl&quot;] = true,\n\t[&quot;roa-tar&quot;]\
      \ = true,\n\t[&quot;gl&quot;] = true,\n\t[&quot;ast&quot;] = true,\n\t[&quot;br&quot;] = true,\n}\n\n-- Format the categories with the appropriate sort key\nfunction export.format_categories(categories, lang, sort_key, sort_base)\n\tNAMESPACE = NAMESPACE\
      \ or mw.title.getCurrentTitle().nsText\n\t\n\tif NAMESPACE == &quot;&quot; or NAMESPACE == &quot;Appendix&quot; then\n\t\tPAGENAME = PAGENAME or mw.title.getCurrentTitle().text\n\t\tSUBPAGENAME = SUBPAGENAME or mw.title.getCurrentTitle().subpageText\n\t\
      \t\n\t\tif not lang then\n\t\t\tlang = require(&quot;Module:languages&quot;).getByCode(&quot;und&quot;)\n\t\tend\n\t\t\n\t\t-- Generate a default sort key\n\t\tsort_base = lang:makeSortKey(sort_base or SUBPAGENAME)\n\t\t\n\t\tif sort_key then\n\t\t\t--\
      \ Gather some statistics regarding sort keys\n\t\t\tif mw.ustring.lower(sort_key) == sort_base then\n\t\t\t\ttable.insert(categories, &quot;Sort key tracking/redundant&quot;)\n\t\t\telseif not notneeded[lang:getCode()] then\n\t\t\t\tif neededhassubpage[lang:getCode()]\
      \ then\n\t\t\t\t\ttable.insert(categories, &quot;Sort key tracking/needed/&quot; .. lang:getCode())\n\t\t\t\telse\n\t\t\t\t\ttable.insert(categories, &quot;Sort key tracking/needed&quot;)\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\tsort_key = sort_base\n\t\
      \tend\n\t\t\n\t\t-- If the resulting key is the same as the wiki software's default, remove it\n\t\tif sort_key == PAGENAME then\n\t\t\tsort_key = nil\n\t\tend\n\t\t\n\t\tfor key, cat in ipairs(categories) do\n\t\t\tcategories[key] = &quot;[[Category:&quot;\
      \ .. cat .. (sort_key and &quot;|&quot; .. sort_key or &quot;&quot;) .. &quot;]]&quot;\n\t\tend\n\t\t\n\t\treturn table.concat(categories, &quot;&quot;)\n\telse\n\t\treturn &quot;&quot;\n\tend\nend\n\n-- Used by {{categorize}}\nfunction export.template_categorize(frame)\n\
      \tNAMESPACE = NAMESPACE or mw.title.getCurrentTitle().nsText\n\tlocal format = frame.args[&quot;format&quot;]\n\tlocal args = frame:getParent().args\n\t\n\tlocal langcode = args[1]; if langcode == &quot;&quot; then langcode = nil end\n\tlocal sort_key\
      \ = args[&quot;sort&quot;]; if sort_key == &quot;&quot; then sort_key = nil end\n\tlocal categories = {}\n\t\n\tif not langcode then\n\t\tif NAMESPACE == &quot;Template&quot; then return &quot;&quot; end\n\t\terror(&quot;Language code has not been specified.\
      \ Please pass parameter 1 to the template.&quot;)\n\tend\n\t\n\tlocal lang = require(&quot;Module:languages&quot;).getByCode(langcode)\n\t\n\tif not lang then\n\t\tif NAMESPACE == &quot;Template&quot; then return &quot;&quot; end\n\t\terror(&quot;The language\
      \ code \\&quot;&quot; .. langcode .. &quot;\\&quot; is not valid.&quot;)\n\tend\n\t\n\tlocal prefix = &quot;&quot;\n\t\n\tif format == &quot;pos&quot; then\n\t\tprefix = lang:getCanonicalName() .. &quot; &quot;\n\telseif format == &quot;topic&quot; then\n\
      \t\tprefix = lang:getCode() .. &quot;:&quot;\n\tend\n\t\n\tlocal i = 2\n\tlocal cat = args[i]\n\t\n\twhile cat do\n\t\tif cat ~= &quot;&quot; then\n\t\t\ttable.insert(categories, prefix .. cat)\n\t\tend\n\t\t\n\t\ti = i + 1\n\t\tcat = args[i]\n\tend\n\t\
      \n\treturn export.format_categories(categories, lang, sort_key)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-06-28T20:54:43.688Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aetyl&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '541'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:43 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1052 miss (0), cp3010 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 3181947238, 134031006, 1086104544
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="907689" pageid="907689" ns="10" title="Template:etyl"><revisions><rev user="CodeCat" timestamp="2014-05-19T23:42:37Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:etymology language/templates|etyl}}&lt;!--

      --&gt;&lt;includeonly&gt;{{#if:{{{2|}}}||[[Category:Language code missing/etyl]]}}&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2015-06-28T20:54:43.900Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology+language%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '2701'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:43 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1068 miss (0), cp3012 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 3481225891, 4026588533, 1086105415
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4432036\" pageid=\"4432036\" ns=\"828\" title=\"Module:etymology language/templates\"><revisions><rev user=\"CodeCat\" timestamp=\"2015-05-19T12:29:49Z\" comment=\"\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nfunction export.exists(frame)\n\tlocal args = frame.args\n\tlocal etymlang = args[1] or error(&quot;Etymology language code has not been specified. Please pass parameter\
      \ 1 to the module invocation.&quot;)\n\t\n\tetymlang = require(&quot;Module:etymology language&quot;).getByCode(etymlang)\n\t\n\tif etymlang then\n\t\treturn &quot;1&quot;\n\telse\n\t\treturn &quot;&quot;\n\tend\nend\n\nfunction export.getByCode(frame)\n\
      \tlocal args = frame.args\n\tlocal etymlang = args[1] or error(&quot;Etymology language code (parameter 1) has not been specified.&quot;)\n\tlocal itemname = args[2] or error(&quot;Function to call (parameter 2) has not been specified.&quot;)\n\t\n\tetymlang\
      \ = require(&quot;Module:etymology language&quot;).getByCode(etymlang) or error(&quot;The etymology language code '&quot; .. etymlang .. &quot;' is not valid.&quot;)\n\t\n\t-- The item that the caller wanted to look up\n\tif itemname == &quot;getCanonicalName&quot;\
      \ then\n\t\treturn etymlang:getCanonicalName()\n\telseif itemname == &quot;getAllNames&quot; then\n\t\tlocal index = args[3]; if index == &quot;&quot; then index = nil end\n\t\tindex = tonumber(index or error(&quot;Numeric index of the desired item in\
      \ the list (parameter 3) has not been specified.&quot;))\n\t\treturn etymlang:getAllNames()[index] or &quot;&quot;\n\telseif itemname == &quot;getParentCode&quot; then\n\t\treturn etymlang:getParentCode()\n\telseif itemname == &quot;getWikipediaArticle&quot;\
      \ then\n\t\treturn etymlang:getWikipediaArticle()\n\telse\n\t\terror(&quot;Requested invalid item name \\&quot;&quot; .. itemname .. &quot;\\&quot;.&quot;)\n\tend\nend\n\nfunction export.etyl(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default\
      \ = &quot;und&quot;},\n\t\t[2] = {},\n\t\t[&quot;sort&quot;] = {},\n\t}\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal source = args[1]\n\tlocal lang = args[2]\n\tlocal sort_key = args[&quot;sort&quot;]\n\
      \t\n\t-- Empty language means English, but &quot;-&quot; means no language. Yes, confusing...\n\tif not lang then\n\t\tlang = &quot;en&quot;\n\telseif lang == &quot;-&quot; then\n\t\tlang = nil\n\tend\n\t\n\tif lang then\n\t\tlang = require(&quot;Module:languages&quot;).getByCode(lang)\
      \ or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\tend\n\t\n\treturn require(&quot;Module:etymology language&quot;).format(source, lang, sort_key)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-06-28T20:54:44.174Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology+language&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '3799'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:44 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1068 miss (0), cp3013 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 3481226226, 1503849803, 1086106316
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4111466\" pageid=\"4111466\" ns=\"828\" title=\"Module:etymology language\"><revisions><rev user=\"CodeCat\" timestamp=\"2015-01-26T18:50:03Z\" comment=\"\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nlocal EtymologyLanguage = {}\n\n\nfunction EtymologyLanguage:getCode()\n\treturn self._code\nend\n\n\nfunction EtymologyLanguage:getCanonicalName()\n\treturn self._rawData.canonicalName\n\
      end\n\n\nfunction EtymologyLanguage:getOtherNames()\n\treturn self._rawData.otherNames or {}\nend\n\n\n--function EtymologyLanguage:getAllNames()\n--\treturn self._rawData.names\n--end\n\n\nfunction EtymologyLanguage:getCategoryName()\n\treturn self:getCanonicalName()\n\
      end\n\n\nfunction EtymologyLanguage:getType()\n\treturn &quot;etymology language&quot;\nend\n\n\nfunction EtymologyLanguage:getParentCode()\n\treturn self._rawData.parent\nend\n\n\nfunction EtymologyLanguage:getWikipediaArticle()\n\treturn self._rawData.wikipedia_article\
      \ or self._rawData.canonicalName\nend\n\n\nfunction EtymologyLanguage:toJSON()\n\tlocal ret = {\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\totherNames = self:getOtherNames(),\n\t\
      \tparent = self._rawData.parent,\n\t\ttype = self:getType(),\n\t\t}\n\t\n\treturn require(&quot;Module:JSON&quot;).toJSON(ret)\nend\n\n\nfunction EtymologyLanguage:getRawData()\n\treturn self._rawData\nend\n\n\nEtymologyLanguage.__index = EtymologyLanguage\n\
      \n\nfunction export.makeObject(code, data)\n\treturn data and setmetatable({ _rawData = data, _code = code }, EtymologyLanguage) or nil\nend\n\n\nfunction export.getByCode(code)\n\treturn export.makeObject(code, mw.loadData(&quot;Module:etymology language/data&quot;)[code])\n\
      end\n\n\nfunction export.format(source, lang, sort_key)\n\tlocal info = get_info(source)\n\t\n\t-- Add the categories, but only if there is a current language\n\tlocal categories = &quot;&quot;\n\t\n\tif lang then\n\t\tlocal m_utilities = require(&quot;Module:utilities&quot;)\n\
      \t\t\n\t\tcategories = {}\n\t\t\n\t\tif lang:getCode() == source then\n\t\t\tcategories = m_utilities.format_categories({lang:getCanonicalName() .. &quot; twice-borrowed terms&quot;}, lang, sort_key)\n\t\telse\n\t\t\tcategories = m_utilities.format_categories({lang:getCanonicalName()\
      \ .. &quot; terms derived from &quot; .. info.cat_name}, lang, sort_key)\n\t\tend\n\tend\n\t\n\treturn &quot;&lt;span class=\\&quot;etyl\\&quot;&gt;&quot; .. info.display .. categories .. &quot;&lt;/span&gt;&quot;\nend\n\n\nfunction get_info(source)\n\t\
      -- What type of code is the source?\n\tif source == &quot;und&quot; then\n\t\treturn {\n\t\t\tdisplay = &quot;undetermined&quot;,\n\t\t\tcat_name = &quot;other languages&quot;}\n\tend\n\t\n\t-- Is it a normal language code?\n\tlocal source_info = require(&quot;Module:languages&quot;).getByCode(source)\n\
      \t\n\tif source_info then\n\t\treturn {\n\t\t\tdisplay = &quot;[[w:&quot; .. source_info:getCategoryName() .. &quot;|&quot; .. source_info:getCanonicalName() .. &quot;]]&quot;,\n\t\t\tcat_name = source_info:getCanonicalName()}\n\tend\n\t\n\t-- Is it a\
      \ family code?\n\tsource_info = require(&quot;Module:families&quot;).getByCode(source)\n\t\n\tif source_info then\n\t\treturn {\n\t\t\tdisplay = &quot;[[w:&quot; .. source_info:getCategoryName() .. &quot;|&quot; .. source_info:getCanonicalName() .. &quot;]]&quot;,\n\
      \t\t\tcat_name = source_info:getCategoryName()}\n\tend\n\t\n\t-- Is it an etymology-only code?\n\tsource_info = export.getByCode(source)\n\t\n\tif source_info then\n\t\treturn {\n\t\t\tdisplay = &quot;[[w:&quot; .. source_info:getWikipediaArticle() ..\
      \ &quot;|&quot; .. source_info:getCanonicalName() .. &quot;]]&quot;,\n\t\t\tcat_name = source_info:getCanonicalName()}\n\tend\n\t\n\t-- Code doesn't exist; show an error\n\terror(&quot;The source language/family code \\&quot;&quot; .. source .. &quot;\\\
      &quot; is not valid.&quot;)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-06-28T20:54:44.383Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aterm&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '580'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:44 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1055 miss (0), cp3014 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 1031666711, 1786293955, 1086107561
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="724759" pageid="724759" ns="10" title="Template:term"><revisions><rev user="CodeCat" timestamp="2014-04-09T16:57:43Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:links/templates|l_term_t|face=term|compat=1}}&lt;!--

      Add categories for certain bad or missing parameters.
      --&gt;&lt;includeonly&gt;{{#invoke:term cleanup|cleanup}}&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2015-06-28T20:54:44.599Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '3395'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:44 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1065 miss (0), cp3009 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 1887219193, 4169725431, 1086108523
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4282542\" pageid=\"4282542\" ns=\"828\" title=\"Module:links/templates\"><revisions><rev user=\"CodeCat\" timestamp=\"2015-06-21T20:57:22Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local m_links = require(&quot;Module:links&quot;)\n\nlocal export = {}\n\nlocal params = {\n\t[1] = {required = true},\n\t[2] = {},\n\t[3] = {},\n\t[4] = {alias_of = &quot;gloss&quot;},\n\t[&quot;g&quot;]\
      \ = {list = true},\n\t[&quot;gloss&quot;] = {},\n\t[&quot;id&quot;] = {},\n\t[&quot;lit&quot;] = {},\n\t[&quot;pos&quot;] = {},\n\t[&quot;tr&quot;] = {},\n\t[&quot;sc&quot;] = {},\n}\n\n-- Used in [[Template:l]] and [[Template:m]]\nfunction export.l_term_t(frame)\n\
      \tlocal face = frame.args[&quot;face&quot;]\n\tlocal allowSelfLink = frame.args[&quot;notself&quot;]; allowSelfLink = not allowSelfLink or allowSelfLink == &quot;&quot;\n\t\n\tlocal params = mw.clone(params)\n\t\n\t-- Compatibility mode for {{term}}.\n\
      \t-- If given a nonempty value, the function uses lang= to specify the\n\t-- language, and all the positional parameters shift one number lower.\n\tlocal compat = (frame.args[&quot;compat&quot;] or &quot;&quot;) ~= &quot;&quot;\n\t\n\tif compat then\n\t\
      \tparams[&quot;lang&quot;] = {},\n\t\ttable.remove(params, 1)\n\tend\n\t\n\tlocal args = require(&quot;Module:parameters&quot;).process(frame:getParent().args, params)\n\t\n\tlocal lang = args[compat and &quot;lang&quot; or 1]\n\t\n\t-- Tracking for missing\
      \ language or und\n\tif not lang then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;link/no lang&quot;)\n\telseif lang == &quot;und&quot; then\n\t\trequire(&quot;Module:debug&quot;).track(&quot;link/und&quot;)\n\tend\n\t\n\tlang = lang or &quot;und&quot;\n\
      \tlocal sc = args[&quot;sc&quot;]\n\t\n\tlocal term = args[(compat and 1 or 2)]\n\tlocal alt = args[(compat and 2 or 3)]\n\tlocal id = args[&quot;id&quot;]\n\t\n\tlocal tr = args[&quot;tr&quot;]\n\tlocal gloss = args[&quot;gloss&quot;]\n\tlocal pos = args[&quot;pos&quot;]\n\
      \tlocal lit = args[&quot;lit&quot;]\n\tlocal genders = args[&quot;g&quot;]\n\t\n\t-- Check parameters\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang) or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\
      \tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\n\tif not term and not alt and mw.title.getCurrentTitle().nsText == &quot;Template&quot;\
      \ then\n\t\tterm = &quot;term&quot;\n\tend\n\t\n\t-- Forward the information to full_link\n\treturn m_links.full_link(term, alt, lang, sc, face, id, {tr = tr, genders = genders, gloss = gloss, pos = pos, lit = lit}, allowSelfLink)\nend\n\nfunction export.ll(frame)\n\
      \tlocal args = frame:getParent().args\n\t\n\tlocal text = args[2]\n\tlocal alt = args[3]\n\tif text == &quot;&quot; then return alt or &quot;&quot; end\n\tif alt == &quot;&quot; then alt = nil end\n\t\n\tlocal lang = args[1]\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang)\
      \ or error(&quot;The language code \\&quot;&quot; .. lang .. &quot;\\&quot; is not valid.&quot;)\n\t\n\tlocal id = args[&quot;id&quot;]; if id == &quot;&quot; then id = nil end\n\tlocal allowSelfLink = args[&quot;allowSelfLink&quot;]; allowSelfLink = not\
      \ not (allowSelfLink and allowSelfLink ~= &quot;&quot;)\n\t\n\treturn m_links.language_link(text, alt, lang, id, allowSelfLink)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-06-28T20:54:44.837Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aru-translit&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '4515'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:44 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1065 miss (0), cp3014 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 1887219675, 1786294139, 1086109435
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"3907076\" pageid=\"3907076\" ns=\"828\" title=\"Module:ru-translit\"><revisions><rev user=\"Wikitiki89\" timestamp=\"2014-08-26T17:35:24Z\" comment=\"handle reflexive participles\
      \ and capital letters in tr_adj\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nlocal tab = {\n\t[&quot;А&quot;]=&quot;A&quot;, [&quot;Б&quot;]=&quot;B&quot;, [&quot;В&quot;]=&quot;V&quot;, [&quot;Г\
      &quot;]=&quot;G&quot;, [&quot;Д&quot;]=&quot;D&quot;, [&quot;Е&quot;]=&quot;E&quot;, [&quot;Ё&quot;]=&quot;Jó&quot;, [&quot;Ж&quot;]=&quot;Ž&quot;, [&quot;З&quot;]=&quot;Z&quot;, [&quot;И&quot;]=&quot;I&quot;, [&quot;Й&quot;]=&quot;J&quot;,\n\t[&quot;К\
      &quot;]=&quot;K&quot;, [&quot;Л&quot;]=&quot;L&quot;, [&quot;М&quot;]=&quot;M&quot;, [&quot;Н&quot;]=&quot;N&quot;, [&quot;О&quot;]=&quot;O&quot;, [&quot;П&quot;]=&quot;P&quot;, [&quot;Р&quot;]=&quot;R&quot;, [&quot;С&quot;]=&quot;S&quot;, [&quot;Т&quot;]=&quot;T&quot;,\
      \ [&quot;У&quot;]=&quot;U&quot;, [&quot;Ф&quot;]=&quot;F&quot;,\n\t[&quot;Х&quot;]=&quot;X&quot;, [&quot;Ц&quot;]=&quot;C&quot;, [&quot;Ч&quot;]=&quot;Č&quot;, [&quot;Ш&quot;]=&quot;Š&quot;, [&quot;Щ&quot;]=&quot;Šč&quot;, [&quot;Ъ&quot;]=&quot;ʺ&quot;,\
      \ [&quot;Ы&quot;]=&quot;Y&quot;, [&quot;Ь&quot;]=&quot;ʹ&quot;, [&quot;Э&quot;]=&quot;E&quot;, [&quot;Ю&quot;]=&quot;Ju&quot;, [&quot;Я&quot;]=&quot;Ja&quot;,\n\t['а']='a', ['б']='b', ['в']='v', ['г']='g', ['д']='d', ['е']='e', ['ё']='jó', ['ж']='ž', ['з\
      ']='z', ['и']='i', ['й']='j',\n\t['к']='k', ['л']='l', ['м']='m', ['н']='n', ['о']='o', ['п']='p', ['р']='r', ['с']='s', ['т']='t', ['у']='u', ['ф']='f',\n\t['х']='x', ['ц']='c', ['ч']='č', ['ш']='š', ['щ']='šč', ['ъ']='ʺ', ['ы']='y', ['ь']='ʹ', ['э']='e',\
      \ ['ю']='ju', ['я']='ja',\n\t-- Russian style quotes\n\t['«']='“', ['»']='”',\n\t-- archaic, pre-1918 letters\n\t['І']='I', ['і']='i', ['Ѳ']='F', ['ѳ']='f',\n\t['Ѣ']='Ě', ['ѣ']='ě', ['Ѵ']='I', ['ѵ']='i',\n}\n\nlocal function replace_e(pre, e)\n\tif e ==\
      \ nil then\n\t\te = pre\n\t\tpre = &quot;&quot;\n\tend\n\te = mw.ustring.gsub(e, '.', {[&quot;Е&quot;] = &quot;Je&quot;, [&quot;е&quot;] = &quot;je&quot;, [&quot;Ѣ&quot;] = &quot;Jě&quot;, [&quot;ѣ&quot;] = &quot;jě&quot;})\n\tif pre == &quot;&quot; or\
      \ mw.ustring.find(pre, &quot;[АОУҮЫЭЯЁЮИЕЪЬІѢѴаоуүыэяёюиеъьіѣѵ%AEIOUYĚaeiouyě]&quot;) then\n\t\treturn pre .. e\n\telse\n\t\treturn pre .. mw.ustring.sub(e, 2)\n\tend\nend\n\n-- Transliterates text, which should be a single word or phrase. It should\n\
      -- include stress marks, which are then preserved in the transliteration.\nfunction export.tr(text, lang, sc)\n\t-- Remove word-final hard sign\n\ttext = mw.ustring.gsub(text, &quot;[Ъъ]$&quot;, &quot;&quot;)\n\ttext = mw.ustring.gsub(text, &quot;[Ъъ]([-\
      \ ])&quot;, &quot;%1&quot;)\n\t\n\t-- Ё needs converting if is decomposed\n\ttext = text:gsub(&quot;ё&quot;,&quot;ё&quot;):gsub(&quot;Ё&quot;,&quot;Ё&quot;)\n\t\n\t-- ё after a &quot;hushing&quot; consonant becomes ó (ё is mostly stressed)\n\ttext = mw.ustring.gsub(text,\
      \ &quot;([жшчщЖШЧЩ])ё&quot;,&quot;%1ó&quot;)\n\t-- ю after ж and ш becomes u (e.g. брошюра, жюри)\n\ttext = mw.ustring.gsub(text, &quot;([жшЖШ])ю&quot;,&quot;%1u&quot;)\n\t\n\t-- е after a vowel or at the beginning of a word becomes je\n\ttext = mw.ustring.gsub(text,\
      \ &quot;^([ЕеѢѣ]+)&quot;, replace_e)\n\ttext = mw.ustring.gsub(text, &quot;(.)([ЕеѢѣ]+)&quot;, replace_e)\n\t\t\n\treturn (mw.ustring.gsub(text,'.',tab))\nend\n\n--for adjectives and pronouns\nfunction export.tr_adj(text)\n\tif type(text) == 'table' then\
      \ -- called directly from a template\n\t\ttext = text.args[1]\n\tend\n\n\tlocal tr = export.tr(text)\n\n\t--handle genitive/accusative endings, which are spelled -ого/-его (-ogo/-ego) but transliterated -ovo/-evo\n\t-- only for adjectives and pronouns,\
      \ excluding words like много, ого\n\tlocal pattern = &quot;([oeóéOEÓÉ][\\204\\129\\204\\128]?)([gG])([oO][\\204\\129\\204\\128]?)&quot;\n\tlocal reflexive = &quot;([sS][jJ][aáAÁ][\\204\\129\\204\\128]?)&quot;\n\tlocal v = {[&quot;g&quot;] = &quot;v&quot;,\
      \ [&quot;G&quot;] = &quot;V&quot;}\n\tlocal repl = function(e, g, o, sja) return e .. v[g] .. o .. (sja or &quot;&quot;) end\n\ttr = mw.ustring.gsub(tr, pattern .. &quot;%f[^%a\\204\\129\\204\\128]&quot;, repl)\n\ttr = mw.ustring.gsub(tr, pattern .. reflexive\
      \ .. &quot;%f[^%a\\204\\129\\204\\128]&quot;, repl)\n\n\treturn tr\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-06-28T20:54:45.066Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aterm+cleanup&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Maia:41.2357:-8.6199:v4; WMF-Last-Access=28-Jun-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '4878'
      Content-Type: text/xml; charset=utf-8
      Date: Sun, 28 Jun 2015 20:54:44 GMT
      Server: nginx/1.9.2
      Strict-Transport-Security: max-age=15768000
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=28-Jun-2015
      X-Cache: cp1068 miss (0), cp3005 miss (0), cp3041 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.1
      X-Varnish: 3481227184, 4217807200, 1086110373
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"3981465\" pageid=\"3981465\" ns=\"828\" title=\"Module:term cleanup\"><revisions><rev user=\"CodeCat\" timestamp=\"2013-05-15T19:27:30Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nfunction export.cleanup(frame)\n    local args = frame:getParent().args\n    local title = mw.title.getCurrentTitle()\n    \n    local lang = args[&quot;lang&quot;]\n    local sc\
      \ = args[&quot;sc&quot;]\n    local tr = args[&quot;tr&quot;]\n    local term = (args[1] or &quot;&quot;) .. (args[2] or &quot;&quot;)\n    \n    if lang == &quot;und&quot; then\n        return &quot;[[Category:term cleanup/lang=und]]&quot;\n    elseif\
      \ not lang or lang == &quot;&quot; then\n        if title.nsText == &quot;Template&quot; then\n            return &quot;[[Category:term cleanup/template namespace]]&quot;\n        elseif sc then\n            if sc == &quot;Arab&quot; then\n           \
      \     return &quot;[[Category:term cleanup/sc=Arab]]&quot;\n            elseif sc == &quot;fa-Arab&quot; then\n                return &quot;[[Category:term cleanup/sc=fa-Arab]]&quot;\n            elseif sc == &quot;Deva&quot; then\n                return\
      \ &quot;[[Category:term cleanup/sc=Deva]]&quot;\n            elseif sc == &quot;Grek&quot; then\n                return &quot;[[Category:term cleanup/sc=Grek]]&quot;\n            elseif sc == &quot;Hebr&quot; then\n                return &quot;[[Category:term\
      \ cleanup/sc=Hebr]]&quot;\n            elseif sc == &quot;Hani&quot; or sc == &quot;Hant&quot; or sc == &quot;Hans&quot; then\n                return &quot;[[Category:term cleanup/sc=Hani]]&quot;\n            else\n                return &quot;[[Category:term\
      \ cleanup/with sc]]&quot;\n            end\n        elseif lang == &quot;&quot; then\n            return &quot;[[Category:term cleanup/lang=]]&quot;\n        elseif title.isTalkPage then\n            return &quot;[[Category:term cleanup/talk]]&quot;\n\
      \        elseif title.nsText == &quot;User&quot; then\n            return &quot;[[Category:term cleanup/user namespace]]&quot;\n        elseif title.nsText == &quot;Wiktionary&quot; then\n            return &quot;[[Category:term cleanup/wiktionary namespace]]&quot;\n\
      \        elseif tr then\n            return &quot;[[Category:term cleanup/with tr]]&quot;\n        -- Categorise by character range\n        elseif containsRange(term, 0x0600, 0x06FF) then\n            return &quot;[[Category:term cleanup/Arabic]]&quot;\n\
      \        elseif containsRange(term, 0x0530, 0x058F) then\n            return &quot;[[Category:term cleanup/Armenian]]&quot;\n        elseif containsRange(term, 0x3400, 0x9FFF) then\n            return &quot;[[Category:term cleanup/Chinese]]&quot;\n   \
      \     elseif containsRange(term, 0x0400, 0x04FF) then\n            return &quot;[[Category:term cleanup/Cyrillic]]&quot;\n        elseif containsRange(term, 0x0900, 0x097F) then\n            return &quot;[[Category:term cleanup/Devanagari]]&quot;\n   \
      \     elseif containsRange(term, 0x10A0, 0x10FF) then\n            return &quot;[[Category:term cleanup/Georgian]]&quot;\n        elseif containsRange(term, 0x2C00, 0x2C5F) then\n            return &quot;[[Category:term cleanup/Glagolitic]]&quot;\n   \
      \     elseif containsRange(term, 0x10330, 0x1034F) then\n            return &quot;[[Category:term cleanup/Gothic]]&quot;\n        elseif containsRange(term, 0x0370, 0x03FF) then\n            return &quot;[[Category:term cleanup/Greek]]&quot;\n        elseif\
      \ containsRange(term, 0x1F00, 0x1FFF) then\n            return &quot;[[Category:term cleanup/Polytonic Greek]]&quot;\n        elseif containsRange(term, 0x0590, 0x05FF) or containsRange(term, 0xFB1D, 0xFB4F) then\n            return &quot;[[Category:term\
      \ cleanup/Hebrew]]&quot;\n        elseif containsRange(term, 0x3040, 0x30FF) then\n            return &quot;[[Category:term cleanup/Kana]]&quot;\n        elseif containsRange(term, 0xAC00, 0xD7AF) then\n            return &quot;[[Category:term cleanup/Korean]]&quot;\n\
      \        elseif containsRange(term, 0x0E00, 0x0E7F) then\n            return &quot;[[Category:term cleanup/Thai]]&quot;\n        elseif containsRange(term, 0x80, 0x024F) then\n            return &quot;[[Category:term cleanup/Latin extended]]&quot;\n  \
      \      -- Any other non-ASCII\n        elseif containsRange(term, 0x80, 0x10FFFF) then\n            return &quot;[[Category:term cleanup/containing characters]]&quot;\n        elseif term:find(&quot;@&quot;) then\n            return &quot;[[Category:term\
      \ cleanup/sign language]]&quot;\n        else\n            return &quot;[[Category:term cleanup]]&quot;\n        end\n    end\nend\n\nfunction containsRange(str, first, last)\n    for codepoint in mw.ustring.gcodepoint(str) do\n        if codepoint &gt;=\
      \ first and codepoint &lt;= last then\n            return true\n        end\n    end\n    return false\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
