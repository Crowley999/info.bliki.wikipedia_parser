!tape
name: biombo
interactions:
- recorded: 2019-04-15T21:08:54.283Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=biombo&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51400 t=1555362534186084
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1723'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:54 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1226.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Set-Cookie: WMF-Last-Access=15-Apr-2019;Path=/;HttpOnly;secure;Expires=Fri, 17 May 2019 12:00:00 GMT, WMF-Last-Access-Global=15-Apr-2019;Path=/;Domain=.wiktionary.org;HttpOnly;secure;Expires=Fri, 17 May 2019 12:00:00 GMT, GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; Path=/; secure; Domain=.wiktionary.org
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;https=1;nocookies=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 571333030, 570920297, 698659820
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="1688852" pageid="1688852" ns="0" title="biombo"><revisions><rev user="Lo Ximiendo" timestamp="2018-11-25T18:14:15Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="/* Pronunciation */" xml:space="preserve">{{also|Biombo}}
      ==Galician==

      ===Etymology===
      From {{der|gl|pt|biombo}}, from {{der|gl|ja|-}} {{ja-r|屏風|びょうぶ|gloss=folding screen}}.

      ===Pronunciation===
      * {{IPA|/biˈombo/|lang=gl}}

      ===Noun===
      {{gl-noun|m}}

      # [[folding screen]]

      ----

      ==Portuguese==
      [[Image:Byobu.jpg|250px|thumb|biombo]]

      ===Etymology===
      Borrowed from {{bor|pt|ja|-}} {{ja-r|屏風|びょうぶ|gloss=folding screen}}.

      ===Pronunciation===
      * {{a|Portugal}} {{IPA|/ˈbjõ.bu/|lang=pt}}
      * {{hyphenation|bi|om|bo|lang=pt}}

      ===Noun===
      {{pt-noun|m|s}}

      # {{l|en|folding screen}}

      ===Further reading===
      * {{pedia|lang=pt}}

      ----

      ==Spanish==

      ===Etymology===
      Borrowed from {{bor|es|pt|biombo}}, from {{der|es|ja|-}} {{ja-r|屏風|びょうぶ|gloss=folding screen}}.

      ===Pronunciation===
      * {{es-IPA}}
      * {{hyph|biom|bo|lang=es}}

      ===Noun===
      {{es-noun|m}}

      # [[folding screen]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:08:54.452Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aalso&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53418 t=1555362534354360
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:54 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 931469359, 739645559, 696531648
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="178449" pageid="178449" ns="10" title="Template:also"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T17:31:15Z" contentformat="text/x-wiki"
      contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:also]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow
      only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:Template:also|main}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:08:54.638Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3ATemplate%3Aalso&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45873 t=1555362534542519
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:54 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1347.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 214567777, 554163727, 684949339
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3901256\" pageid=\"3901256\" ns=\"828\" title=\"Module:Template:also\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-01-07T23:04:20Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"change separating punctuation from comma to semicolon if any of the items contains a comma, for [[same old same old]] (see also [[Wiktionary:Grease pit/2018/December#Comma/semicolon|Wiktionary:Grease\
      \ pit/2018/December &amp;sect; Comma/semicolon]])\" xml:space=\"preserve\">local export = {}\n\nlocal yesno = require('Module:yesno')\n\nlocal get_script\n\n-- If there are characters in both scripts (the key and value), the second\n-- should be used.\n\
      local overridden_by = {\n\tLatn = \"Latinx\",\n\tGrek = \"polytonic\",\n\tCyrl = \"Cyrs\",\n}\n\n-- Join with serial \"and\" and serial comma\nlocal function serial_comma_join(seq, conjunction)\n\tconjunction = conjunction or \",\"\n\tif #seq == 0 then\n\
      \t\treturn \"\"\n\telseif #seq == 1 then\n\t\treturn seq[1] -- nothing to join\n\telseif #seq == 2 then\n\t\treturn seq[1] .. \" ''and'' \" .. seq[2]\n\telse\n\t\treturn table.concat(seq, conjunction .. \" \", 1, #seq - 1)\n\t\t\t.. \"&lt;span class='serial-comma'&gt;\"\
      \ .. conjunction .. \"&lt;/span&gt;\" ..\n\t\t\t\"''&lt;span class='serial-and'&gt; and&lt;/span&gt;'' \" ..\n\t\t\tseq[#seq]\n\tend\nend\n\nfunction export.main(frame)\n\tlocal args\t\t\t= frame:getParent().args\n\t\n\tlocal sc_default\t= args[\"sc\"\
      ]\n\tlocal nosc\t\t\t= yesno(args[\"nosc\"])\n\tif nosc then\n\t\trequire(\"Module:debug\").track(\"also/nosc param\")\n\t\tif sc_default then\n\t\t\terror(\"|nosc= and |sc= are mutually contradictory. Specify one or the other.\")\n\t\telse\n\t\t\t-- Turn\
      \ off script by setting default script to None.\n\t\t\tsc_default = \"None\"\n\t\tend\n\tend\n\t\n\tif sc_default then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/also/sc param]]\n\t\trequire(\"Module:debug\").track(\"also/sc param\")\n\tend\n\t\n\
      \tlocal uni_default = yesno((args[\"uni\"] == \"auto\") or args[\"uni\"]) and \"auto\" or nil\n\t\n\tlocal title = mw.title.getCurrentTitle()\n\tlocal full_pagename = title.fullText\n\t-- Disables tagging outside of mainspace, where {{also}} more often\
      \ links to\n\t-- pages that are not entries and don't need tagging. Tagging in Reconstruction\n\t-- would be more complicated and is often unnecessary, and there are very few\n\t-- entries in Appendix.\n\tlocal detect_sc = title.nsText == \"\"\n\t\tor\
      \ args[\"detectsc\"] -- to test the script detection capabilities\n\t\n\tlocal items = {}\n\tlocal use_semicolon = false\n\t\n\tfor i, arg in ipairs(args) do\n\t\tlocal uni = args[\"uni\" .. i] or uni_default\n\t\tlocal sc = args[\"sc\" .. i] or sc_default\n\
      \t\t\n\t\tif arg:find(\",\", 1, true) then\n\t\t\tuse_semicolon = true\n\t\tend\n\t\t\n\t\tif not yesno(uni, uni) then\n\t\t\tuni = nil\n\t\tend\n\t\t\n\t\tlocal s\n\t\tlocal link_text = arg:match(\"%[%[[^%[%]|]+|(.+)]]\") or arg:match(\"%[%[([^%[%]|]+)]]\"\
      )\n\t\t\n\t\tif link_text then\n\t\t\ts = arg\n\t\t\targ = mw.text.decode(link_text)\n\t\telse\n\t\t\ts = \"[[\" .. arg .. \"]]\"\n\t\t\targ = mw.text.decode(arg)\n\t\tend\n\t\t\n\t\tlocal codepoint\n\t\t\n\t\tif uni then\n\t\t\trequire(\"Module:debug\"\
      ).track(\"also/uni\")\n\t\t\t\n\t\t\tif uni == 'auto' then\n\t\t\t\tcodepoint = (mw.ustring.len(arg) == 1) and mw.ustring.codepoint(arg, 1, 1)\n\t\t\telse\n\t\t\t\tcodepoint = tonumber(uni)\n\t\t\t\t\n\t\t\t\tif mw.ustring.len(arg) ~= 1 or codepoint ~=\
      \ mw.ustring.codepoint(arg, 1, 1) then\n\t\t\t\t\trequire(\"Module:debug\").track(\"also/uni/noauto\")\n\t\t\t\telse\n\t\t\t\t\trequire(\"Module:debug\").track(\"also/uni/auto\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- If all characters are in one\
      \ script, tag the link with it.\n\t\t-- Ignore all \"None\"-script characters.\n\t\tlocal rtl\n\t\tif detect_sc and not sc then\n\t\t\t-- leading bytes for non-Latin scripts (that is, codepoints between U+340 and U+10FFFF)\n\t\t\tif arg:find(\"[\\200-\\\
      244]\") then\n\t\t\t\tget_script = get_script or require(\"Module:Unicode data\").char_to_script\n\t\t\t\tlocal curr_sc\n\t\t\t\tfor codepoint in mw.ustring.gcodepoint(arg) do\n\t\t\t\t\tcurr_sc = get_script(codepoint)\n\t\t\t\t\tif curr_sc ~= \"None\"\
      \ then\n\t\t\t\t\t\tif sc == nil then\n\t\t\t\t\t\t\tsc = curr_sc\n\t\t\t\t\t\telseif curr_sc ~= sc then\n\t\t\t\t\t\t\t-- For instance, Grek -&gt; polytonic.\n\t\t\t\t\t\t\tif overridden_by[sc] == curr_sc then\n\t\t\t\t\t\t\t\tsc = curr_sc\n\t\t\t\t\t\
      \t\t\n\t\t\t\t\t\t\t-- For instance, Grek and Latn.\n\t\t\t\t\t\t\telseif overridden_by[curr_sc] ~= sc then\n\t\t\t\t\t\t\t\trequire(\"Module:debug\").track(\"also/no sc detected\")\n\t\t\t\t\t\t\t\tmw.log(\"Module:Template:also found two scripts in \"\
      \ .. arg .. \": \"\n\t\t\t\t\t\t\t\t\t.. sc .. \" and \" .. curr_sc .. \".\")\n\t\t\t\t\t\t\t\tsc = nil\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\trtl = mw.loadData(\"Module:scripts/data\")[sc]\n\t\t\
      \t\trtl = rtl and rtl.direction == \"rtl\"\n\t\t\telse\n\t\t\t\tsc = \"Latn\"\n\t\t\tend\n\t\tend\n\t\t\n\t\tif sc then\n\t\t\ts = '&lt;b class=\"' .. sc .. '\"&gt;' .. s .. \"&lt;/b&gt;\"\n\t\t\tif rtl then\n\t\t\t\ts = s .. \"&amp;lrm;\"\n\t\t\tend\n\
      \t\telse\n\t\t\ts = \"'''\" .. s .. \"'''\"\n\t\tend\n\t\t\n\t\tif codepoint then\n\t\t\tlocal m_unidata = require('Module:Unicode data')\n\t\t\t\n\t\t\ts = s .. (\" &lt;small&gt;[U+%04X %s]&lt;/small&gt;\"):format(\n\t\t\t\tcodepoint,\n\t\t\t\tm_unidata.lookup_name(codepoint):gsub(\"\
      &lt;\", \"&amp;lt;\")\n\t\t\t)\n\t\tend\n\t\t\n\t\tif arg ~= full_pagename then\n\t\t\ttable.insert(items, s)\n\t\telse\n\t\t\trequire(\"Module:debug\").track(\"also/pagename\")\n\t\tend\n\tend\n\t\n\tif #items == 0 then\n\t\ttable.insert(items, \"{{{1}}}\"\
      )\n\tend\n\t\n\treturn (\"&lt;div class=\\\"disambig-see-also%s\\\"&gt;''See also:'' %s&lt;/div&gt;\"):format(\n\t\t(#items == 2) and \"-2\" or \"\",\n\t\tserial_comma_join(items, use_semicolon and \";\" or \",\")\n\t)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:54.816Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ayesno&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54304 t=1555362534717361
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:54 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 682853810, 555931982, 685592743
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4236554" pageid="4236554" ns="828" title="Module:yesno"><revisions><rev user="Erutuon" timestamp="2017-11-19T23:42:10Z" contentformat="text/plain" contentmodel="Scribunto" comment="don&#039;t need to put, for instance, Greek in lowercase" xml:space="preserve">-- Function allowing for consistent treatment of boolean-like wikitext input.
      -- It works similarly to the template {{yesno}}.
      return function (val, default)
          val = type(val) == 'string' and val:lower() or val -- put in lower case
          if val == nil then
              return nil
          elseif val == false or val == 'no' or val == 'n' or val == 'false' or tonumber(val) == 0 then
              return false
          elseif val == true or val == 'yes' or val == 'y' or val == 'true' or tonumber(val) == 1 then
              return true
          else
              return default
          end
      end</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:08:54.970Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ader&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=37820 t=1555362534887475
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:54 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1343.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 667282838, 741116571, 689430085
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5021749" pageid="5021749" ns="10" title="Template:der"><revisions><rev user="Rua" timestamp="2015-10-19T13:33:41Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Redirected page to [[Template:derived]]" xml:space="preserve">#REDIRECT [[Template:derived]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:08:55.135Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aderived&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43003 t=1555362535048559
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:55 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1232.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 920834220, 506827040, 690382737
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5021747" pageid="5021747" ns="10" title="Template:derived"><revisions><rev user="Daniel Carrero" timestamp="2016-06-30T12:20:18Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:etymology/templates|derived}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:08:55.350Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55671 t=1555362535219679
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:55 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1312.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 512399778, 569610675, 704972186
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4998801\" pageid=\"4998801\" ns=\"828\" title=\"Module:etymology/templates\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-04-07T01:31:40Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"remove term request category from [[Template:desc]] when hyphen (-) is term and there are annotations, for instance in [[σμίλη]]; see [[Wiktionary:Grease pit/2019/April#When a linking\
      \ template is permissibly used with the second parameter being a hyphen but a gloss parameter is present, which I think is not unbeseeming, it categorizes as a term request|Grease Pit discussion]]\" xml:space=\"preserve\">local export = {}\n\nlocal m_languages\
      \ = require(\"Module:languages\")\n\n\nlocal function fetch_lang(lang, parameter)\n\treturn m_languages.getByCode(lang) or m_languages.err(lang, parameter)\nend\n\n\nlocal function fetch_source(code, disallow_family)\n\tlocal source =\n\t\tm_languages.getByCode(code)\n\
      \t\tor require(\"Module:etymology languages\").getByCode(code)\n\t\tor not disallow_family and require(\"Module:families\").getByCode(code)\n\t\n\tif source then\n\t\treturn source\n\telse\n\t\terror(\"The language\" .. (not disallow_family and \", family\"\
      \ or \"\") .. \" or etymology language code \\\"\" .. code .. \"\\\" is not valid.\")\n\tend\nend\n\n\nlocal function fetch_script(sc)\n\tif sc then\n\t\treturn require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\"\
      \ is not valid.\")\n\telse\n\t\treturn nil\n\tend\nend\n\n\nfunction export.etyl(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args,\
      \ params)\n\t\n\tlocal source = fetch_source(args[1])\n\tlocal lang = args[2]\n\tlocal sort_key = args[\"sort\"]\n\t\n\t-- Empty language means English, but \"-\" means no language. Yes, confusing...\n\tif not lang then\n\t\tlang = \"en\"\n\telseif lang\
      \ == \"-\" then\n\t\tlang = nil\n\tend\n\tif lang then\n\t\tlang = fetch_lang(lang, 2)\n\tend\n\tif lang and (lang:getCode() == \"la\" or lang:getCode() == \"nl\") then\n\t\trequire(\"Module:debug\").track(\"etyl/\" .. lang:getCode())\n\t\trequire(\"Module:debug\"\
      ).track(\"etyl/\" .. lang:getCode() .. \"/\" .. source:getCode())\n\tend\n\t\n\treturn require(\"Module:etymology\").format_etyl(lang, source, sort_key)\nend\n\n\nfunction export.cognate(frame)\n\tlocal args = frame:getParent().args\n\t\n\tif args.gloss\
      \ then\n\t\trequire(\"Module:debug\").track(\"cognate/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {},\n\t\t[3] = {alias_of = \"alt\"},\n\t\t[4] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\
      \t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\targs\
      \ = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal source = fetch_source(args[1])\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").format_cognate(\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\t\
      term = args[2],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"]\n\t\t},\n\t\targs[\"\
      sort\"])\nend\n\n\nfunction export.noncognate(frame)\n\treturn export.cognate(frame)\nend\n\n\nfunction export.derived(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3]\
      \ = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\
      \t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\
      \tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_derived(\n\t\tlang, \n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"\
      g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"]\n\t\t},\n\t\targs[\"sort\"])\nend\n\n\nfunction export.inherited(frame)\n\tlocal params = {\n\t\t[1] = {required\
      \ = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"\
      },\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args,\
      \ params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2], \"no family\")\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").format_inherited(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\
      \t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"\
      ]\n\t\t},\n\t\targs[\"sort\"])\nend\n\n\nfunction export.borrowed(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of\
      \ = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\
      \t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\t\
      return require(\"Module:etymology\").format_borrowed(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts\
      \ = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], false, true, \"plain\")\nend\n\n\nfunction export.learned_borrowed(frame)\n\tlocal args = frame:getParent().args\n\t\n\t\
      if args.gloss then\n\t\trequire(\"Module:debug\").track(\"learned_borrowed/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of\
      \ = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"\
      ] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\
      \tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_borrowed(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\
      \tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"], \"\
      learned\")\nend\n\n\nfunction export.orthographic_borrowed(frame)\n\tlocal args = frame:getParent().args\n\t\n\tif args.gloss then\n\t\trequire(\"Module:debug\").track(\"orthographic_borrowed/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required\
      \ = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"\
      },\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\
      \t}\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_borrowed(\n\
      \t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos\
      \ = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"], \"orthographic\")\nend\n\n\nfunction export.unadapted_borrowed(frame)\n\tlocal args = frame:getParent().args\n\t\n\tif args.gloss then\n\t\t\
      require(\"Module:debug\").track(\"unadapted_borrowed/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5]\
      \ = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"\
      ] = {},\n\t\t\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source =\
      \ fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_borrowed(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"\
      id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"], \"unadapted\")\n\
      end\n\nfunction export.calque(frame)\n\tlocal args = frame:getParent().args\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t\
      [5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t\t[\"nocap\"] = {type\
      \ = \"boolean\"},\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t}\n\t\n\t-- More informative error message.\n\tif args[\"etyl lang\"] or args[\"etyl term\"] or args[\"etyl t\"] or args[\"etyl tr\"] then\n\t\terror(\"{{[[Template:calque|calque]]}} no longer\
      \ supports parameters beginning with etyl. \" ..\n\t\t\t\"The parameters supported are similar to those used by \" ..\n\t\t\t\"{{[[Template:der|der]]}}, {{[[Template:inh|inh]]}}, \" ..\n\t\t\t\"{{[[Template:bor|bor]]}}. See [[Template:calque/documentation]]\
      \ for more.\")\n\tend\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\t\n\treturn require(\"Module:etymology\").calque(\n\t\tlang,\n\t\t{\n\t\t\tlang\
      \ = source,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"\
      ],\n\t\targs[\"nocap\"],\n\t\targs[\"notext\"])\nend\n\nfunction export.semantic_loan(frame)\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of =\
      \ \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t\
      [\"nocap\"] = {type = \"boolean\"},\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t\t[\"ger\"] = {type = \"boolean\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang\
      \ = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").format_semantic_loan(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\
      \t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"\
      nocap\"], args[\"notext\"])\nend\n\nfunction export.psm(frame)\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of\
      \ = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"nocap\"] = {type = \"boolean\"\
      },\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal\
      \ sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").psm(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\t\
      tr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"])\nend\n\nlocal function qualifier(content)\n\tif content then\n\
      \t\treturn table.concat{\n\t\t\t'&lt;span class=\"ib-brac qualifier-brac\"&gt;(&lt;/span&gt;',\n\t\t\t'&lt;span class=\"ib-content qualifier-content\"&gt;',\n\t\t\tcontent,\n\t\t\t'&lt;/span&gt;',\n\t\t\t'&lt;span class=\"ib-brac qualifier-brac\"&gt;)&lt;/span&gt;'\n\
      \t\t}\n\tend\nend\n\n\nfunction export.descendant(frame)\n\tlocal namespace = mw.title.getCurrentTitle().nsText\n\t\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = { alias_of = \"gloss\" },\n\t\t[\"g\"] = {list\
      \ = true},\n\t\t[\"gloss\"] = {},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = { alias_of = \"gloss\" },\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"bor\"] = { type = \"boolean\" },\n\t\t[\"der\"\
      ] = { type = \"boolean\" },\n\t\t[\"clq\"] = { type = \"boolean\" },\n\t\t[\"cal\"] = { alias_of = \"clq\" },\n\t\t[\"calq\"] = { alias_of = \"clq\" },\n\t\t[\"calque\"] = { alias_of = \"clq\" },\n\t\t[\"sl\"] = { type = \"boolean\" },\n\t\t[\"semantic\
      \ loan\"] = { alias_of = \"sl\" },\n\t\t[\"alts\"] = { type = \"boolean\" },\n\t\t[\"sclb\"] = { type = \"boolean\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = args[1]\n\tlocal\
      \ term = args[2]\n\tlocal alt = args[3]\n\tlocal gloss = args[\"gloss\"]\n\tlocal tr = args[\"tr\"]\n\tlocal ts = args[\"ts\"]\n\tlocal sc = args[\"sc\"]\n\t\n\tif namespace == \"Template\" then\n\t\tif not ( sc or lang ) then\n\t\t\tsc = \"Latn\"\n\t\t\
      end\n\t\tif not lang then\n\t\t\tlang = \"en\"\n\t\tend\n\t\tif not term then\n\t\t\tterm = \"word\"\n\t\tend\n\tend\n\t\n\tlang = m_languages.getByCode(lang)\n\t\tor require(\"Module:etymology languages\").getByCode(lang)\n\t\tor m_languages.err(lang,\
      \ 1)\n\t\t\n\tlocal entryLang = require(\"Module:etymology\").getNonEtymological(lang)\n\t\n\tif lang:getCode() ~= entryLang:getCode() then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/descendant/etymological]]\n\t\trequire(\"Module:debug\").track(\"\
      descendant/etymological\")\n\t\trequire(\"Module:debug\").track(\"descendant/etymological/\" .. lang:getCode())\n\tend\n\t\n\tif sc then\n\t\tsc = require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\"\
      )\n\tend\n\t\n\tlocal languageName = lang:getCanonicalName()\n\tlanguageName = mw.ustring.gsub(languageName, \"^Proto%-\", \"\")\n\t\n\tlocal link = \"\"\n\t\n\tif term ~= \"-\" then\n\t\tlink = require(\"Module:links\").full_link(\n\t\t\t{\n\t\t\t\tlang\
      \ = entryLang,\n\t\t\t\tsc = sc,\n\t\t\t\tterm = term,\n\t\t\t\talt = alt,\n\t\t\t\tid = args[\"id\"],\n\t\t\t\ttr = tr,\n\t\t\t\tts = ts,\n\t\t\t\tgenders = args[\"g\"],\n\t\t\t\tgloss = gloss,\n\t\t\t\tpos = args[\"pos\"],\n\t\t\t\tlit = args[\"lit\"\
      ],\n\t\t\t},\n\t\t\tnil,\n\t\t\ttrue)\n\telseif ts or gloss then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/descendant/no term]]\n\t\trequire \"Module:debug\".track(\"descendant/no term\")\n\t\tlink = require(\"Module:links\").full_link(\n\t\t\t\
      {\n\t\t\t\tlang = entryLang,\n\t\t\t\tsc = sc,\n\t\t\t\tts = ts,\n\t\t\t\tgloss = gloss,\n\t\t\t},\n\t\t\tnil,\n\t\t\ttrue)\n\t\tlink = link\n\t\t\t:gsub(\"&lt;small&gt;%[Term%?%]&lt;/small&gt; \", \"\")\n\t\t\t:gsub(\"%[%[Category:[^%[%]]+ term requests%]%]\"\
      , \"\")\n\telse -- display no link at all\n\t\t-- [[Special:WhatLinksHere/Template:tracking/descendant/no term or annotations]]\n\t\trequire \"Module:debug\".track(\"descendant/no term or annotations\")\n\tend\n\t\n\tlocal function add_tooltip(text, tooltip)\n\
      \t\treturn '&lt;span title=\"' .. tooltip .. '\"&gt;' .. text .. '&lt;/span&gt;'\n\tend\n\t\n\tlocal label, arrow, alts, calque, semantic_loan\n\t\n\tif args[\"sclb\"] then\n\t\tif sc then\n\t\t\tlabel = sc:getCanonicalName()\n\t\telse\n\t\t\tlabel = require(\"\
      Module:scripts\").findBestScript(term, lang):getCanonicalName()\n\t\tend\n\telse\n\t\tlabel = languageName\n\tend\n\t\n\tif args[\"bor\"] then\n\t\tarrow = add_tooltip(\"→ \", \"borrowed\")\n\telseif args[\"clq\"] then\n\t\tarrow = add_tooltip(\"→ \",\
      \ \"calque\")\n\telseif args[\"sl\"] then\n\t\tarrow = add_tooltip(\"→ \", \"semantic loan\")\n\telseif args[\"der\"] then\n\t\tarrow = add_tooltip(\"⇒ \", \"derived by addition of morphemes\")\n\telse\n\t\tarrow = \"\"\n\tend\n\t\n\tif args[\"alts\"]\
      \ then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/desc/alts]]\n\t\trequire(\"Module:debug\").track(\"desc/alts\")\n\t\talts = require(\"Module:descendants tree\").getAlternativeForms(entryLang, term)\n\tend\n\t\n\tif args[\"clq\"] then\n\t\tcalque\
      \ = \" \" .. qualifier(\"calque\")\n\telse\n\t\tcalque = \"\"\n\tend\n\t\n\tif args[\"sl\"] then\n\t\tsemantic_loan = \" \" .. qualifier(\"semantic loan\")\n\telse\n\t\tsemantic_loan = \"\"\n\tend\n\t\n\treturn table.concat{arrow, label, \": \", link,\
      \ alts or \"\", calque, semantic_loan}\nend\n\nfunction export.misc_variant(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {},\n\t\t[3] = {alias_of = \"alt\"},\n\t\t[4] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"]\
      \ = {},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"nocap\"] = {type = \"\
      boolean\"}, -- should be processed in the template itself\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocat\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\
      \t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\tlocal parts = {}\n\tif not args[\"notext\"] then\n\t\ttable.insert(parts, frame.args[\"text\"])\n\tend\n\tif args[2] or args[\"alt\"] then\n\t\tif not args[\"notext\"\
      ] then\n\t\t\ttable.insert(parts, \" \")\n\t\t\ttable.insert(parts, frame.args[\"oftext\"] or \"of\")\n\t\t\ttable.insert(parts, \" \")\n\t\tend\n\t\ttable.insert(parts, require(\"Module:links\").full_link(\n\t\t\t{\n\t\t\t\tlang = lang,\n\t\t\t\tsc =\
      \ sc,\n\t\t\t\tterm = args[2],\n\t\t\t\talt = args[\"alt\"],\n\t\t\t\tid = args[\"id\"],\n\t\t\t\ttr = args[\"tr\"],\n\t\t\t\tts = args[\"ts\"],\n\t\t\t\tgenders = args[\"g\"],\n\t\t\t\tgloss = args[\"t\"],\n\t\t\t\tpos = args[\"pos\"],\n\t\t\t\tlit =\
      \ args[\"lit\"],\n\t\t\t},\n\t\t\t\"term\",\n\t\t\ttrue))\n\tend\n\tif not args[\"nocat\"] and frame.args[\"cat\"] then\n\t\tlocal categories = {}\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" \" .. frame.args[\"cat\"])\n\t\ttable.insert(parts,\
      \ require(\"Module:utilities\").format_categories(categories, lang, args[\"sort\"]))\n\tend\n\n\treturn table.concat(parts)\nend\n\nfunction export.misc_variant_no_link(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\n\t\t\
      [\"title\"] = {},\n\t\t[\"nocap\"] = {type = \"boolean\"}, -- should be processed in the template itself\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocat\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\n\tif frame.args[\"title2_alias\"]\
      \ then\n\t\tparams[2] = {alias_of = \"title\"}\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\n\tlocal parts = {}\n\tif not args[\"notext\"] then\n\t\ttable.insert(parts,\
      \ args[\"title\"] or frame.args[\"text\"])\n\tend\n\tif not args[\"nocat\"] and frame.args[\"cat\"] then\n\t\tlocal categories = {}\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" \" .. frame.args[\"cat\"])\n\t\ttable.insert(parts, require(\"\
      Module:utilities\").format_categories(categories, lang, args[\"sort\"]))\n\tend\n\n\treturn table.concat(parts)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:55.579Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44575 t=1555362535463243
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:55 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1343.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 754915979, 829698275, 702519120
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4453474\" pageid=\"4453474\" ns=\"828\" title=\"Module:languages\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-13T02:06:03Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add getNonEtymological\" xml:space=\"preserve\">local export = {}\n\n--[=[\tThis function checks for things that could plausibly be a language code:\n\t\ttwo or three lowercase letters,\
      \ two or three groups of three lowercase\n\t\tletters with hyphens between them. If such a pattern is not found,\n\t\tit is likely the editor simply forgot to enter a language code. ]=]\n\nfunction export.err(langCode, param, text, template_tag)\n\tlocal\
      \ ordinals = {\n\t\t\"first\", \"second\", \"third\", \"fourth\", \"fifth\", \"sixth\",\n\t\t\"seventh\", \"eighth\", \"ninth\", \"tenth\", \"eleventh\", \"twelfth\",\n\t\t\"thirteenth\", \"fourteenth\", \"fifteenth\", \"sixteenth\", \"seventeenth\",\n\
      \t\t\"eighteenth\", \"nineteenth\", \"twentieth\"\n\t}\n\t\n\tif not template_tag then\n\t\ttemplate_tag = \"\"\n\telse\n\t\tif type(template_tag) ~= \"string\" then\n\t\t\ttemplate_tag = template_tag()\n\t\tend\n\t\ttemplate_tag = \" (Original template:\
      \ \" .. template_tag .. \")\"\n\tend\n\tlocal paramType = type(param)\n\tif paramType == \"number\" then\n\t\tordinal = ordinals[param]\n\t\tparam = ordinal .. ' parameter'\n\telseif paramType == \"string\" then\n\t\tparam = 'parameter \"' .. param ..\
      \ '\"'\n\telse\n\t\terror(\"The parameter name is \"\n\t\t\t\t.. (paramType == \"table\" and \"a table\" or tostring(param))\n\t\t\t\t.. \", but it should be a number or a string.\" .. template_tag, 2)\n\tend\n\t\n\t-- Can use string.find because language\
      \ codes only contain ASCII.\n\tif not langCode or langCode == \"\" then\n\t\terror(\"The \" .. param .. \" (\" .. (text or \"language code\") .. \") is missing.\" .. template_tag, 2)\n\telseif langCode:find(\"^%l%l%l?$\")\n\t\t\tor langCode:find(\"^%l%l%l%-%l%l%l$\"\
      )\n\t\t\tor langCode:find(\"^%l%l%l%-%l%l%l%-%l%l%l$\") then\n\t\terror(\"The language code \\\"\" .. langCode .. \"\\\" is not valid.\" .. template_tag, 2)\n\telse\n\t\terror(\"Please enter a \" .. (text or \"language code\") .. \" in the \" .. param\
      \ .. \".\" .. template_tag, 2)\n\tend\nend\n\nlocal function do_entry_name_or_sort_key_replacements(text, replacements)\n\tif replacements.from then\n\t\tfor i, from in ipairs(replacements.from) do\n\t\t\tlocal to = replacements.to[i] or \"\"\n\t\t\ttext\
      \ = mw.ustring.gsub(text, from, to)\n\t\tend\n\tend\n\t\n\tif replacements.remove_diacritics then\n\t\ttext = mw.ustring.toNFD(text)\n\t\ttext = mw.ustring.gsub(text,\n\t\t\t'[' .. replacements.remove_diacritics .. ']',\n\t\t\t'')\n\t\ttext = mw.ustring.toNFC(text)\n\
      \tend\n\t\n\treturn text\nend\n\nlocal Language = {}\n\nfunction Language:getCode()\n\treturn self._code\nend\n\n\nfunction Language:getCanonicalName()\n\treturn self._rawData[1] or self._rawData.canonicalName\nend\n\n\nfunction Language:getOtherNames()\n\
      \treturn self._rawData.otherNames or {}\nend\n\n\nfunction Language:getType()\n\treturn self._rawData.type or \"regular\"\nend\n\n\nfunction Language:getWikimediaLanguages()\n\tif not self._wikimediaLanguageObjects then\n\t\tlocal m_wikimedia_languages\
      \ = require(\"Module:wikimedia languages\")\n\t\tself._wikimediaLanguageObjects = {}\n\t\tlocal wikimedia_codes = self._rawData.wikimedia_codes or { self._code }\n\t\t\n\t\tfor _, wlangcode in ipairs(wikimedia_codes) do\n\t\t\ttable.insert(self._wikimediaLanguageObjects,\
      \ m_wikimedia_languages.getByCode(wlangcode))\n\t\tend\n\tend\n\t\n\treturn self._wikimediaLanguageObjects\nend\n\nfunction Language:getWikipediaArticle()\n\tif self._rawData.wikipedia_article then\n\t\treturn self._rawData.wikipedia_article \n\telseif\
      \ self._wikipedia_article then\n\t\treturn self._wikipedia_article\n\telseif self:getWikidataItem() and mw.wikibase then\n\t\tself._wikipedia_article = mw.wikibase.sitelink(self:getWikidataItem(), 'enwiki')\n\tend\n\tif not self._wikipedia_article then\n\
      \t\tself._wikipedia_article = mw.ustring.gsub(self:getCategoryName(), \"Creole language\", \"Creole\")\n\tend\n\treturn self._wikipedia_article\nend\n\nfunction Language:makeWikipediaLink()\n\treturn \"[[w:\" .. self:getWikipediaArticle() .. \"|\" .. self:getCanonicalName()\
      \ .. \"]]\"\nend\n\nfunction Language:getWikidataItem()\n\treturn self._rawData[2] or self._rawData.wikidata_item\nend\n\nfunction Language:getScripts()\n\tif not self._scriptObjects then\n\t\tlocal m_scripts = require(\"Module:scripts\")\n\t\tself._scriptObjects\
      \ = {}\n\t\t\n\t\tfor _, sc in ipairs(self._rawData.scripts or { \"None\" }) do\n\t\t\ttable.insert(self._scriptObjects, m_scripts.getByCode(sc))\n\t\tend\n\tend\n\t\n\treturn self._scriptObjects\nend\n\nfunction Language:getScriptCodes()\n\treturn self._rawData.scripts\
      \ or { \"None\" }\nend\n\nfunction Language:getFamily()\n\tif self._familyObject then\n\t\treturn self._familyObject\n\tend\n\t\t\n\tlocal family = self._rawData[3] or self._rawData.family \n\tif family then\n\t\tself._familyObject = require(\"Module:families\"\
      ).getByCode(family)\n\tend\n\t\n\treturn self._familyObject\nend\n\n\nfunction Language:getAncestors()\n\tif not self._ancestorObjects then\n\t\tself._ancestorObjects = {}\n\t\t\n\t\tif self._rawData.ancestors then\n\t\t\tfor _, ancestor in ipairs(self._rawData.ancestors)\
      \ do\n\t\t\t\ttable.insert(self._ancestorObjects, export.getByCode(ancestor) or require(\"Module:etymology languages\").getByCode(ancestor))\n\t\t\tend\n\t\telse\n\t\t\tlocal fam = self:getFamily()\n\t\t\tlocal protoLang = fam and fam:getProtoLanguage()\
      \ or nil\n\t\t\t\n\t\t\t-- For the case where the current language is the proto-language\n\t\t\t-- of its family, we need to step up a level higher right from the start.\n\t\t\tif protoLang and protoLang:getCode() == self:getCode() then\n\t\t\t\tfam =\
      \ fam:getFamily()\n\t\t\t\tprotoLang = fam and fam:getProtoLanguage() or nil\n\t\t\tend\n\t\t\t\n\t\t\twhile not protoLang and not (not fam or fam:getCode() == \"qfa-not\") do\n\t\t\t\tfam = fam:getFamily()\n\t\t\t\tprotoLang = fam and fam:getProtoLanguage()\
      \ or nil\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(self._ancestorObjects, protoLang)\n\t\tend\n\tend\n\t\n\treturn self._ancestorObjects\nend\n\nlocal function iterateOverAncestorTree(node, func)\n\tfor _, ancestor in ipairs(node:getAncestors()) do\n\t\t\
      if ancestor then\n\t\t\tlocal ret = func(ancestor) or iterateOverAncestorTree(ancestor, func)\n\t\t\tif ret then\n\t\t\t\treturn ret\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction Language:getAncestorChain()\n\tif not self._ancestorChain then\n\t\tself._ancestorChain\
      \ = {}\n\t\tlocal step = #self:getAncestors() == 1 and self:getAncestors()[1] or nil\n\t\t\n\t\twhile step do\n\t\t\ttable.insert(self._ancestorChain, 1, step)\n\t\t\tstep = #step:getAncestors() == 1 and step:getAncestors()[1] or nil\n\t\tend\n\tend\n\t\
      \n\treturn self._ancestorChain\nend\n\n\nfunction Language:hasAncestor(otherlang)\n\tlocal function compare(ancestor)\n\t\treturn ancestor:getCode() == otherlang:getCode()\n\tend\n\t\n\treturn iterateOverAncestorTree(self, compare) or false\nend\n\n\n\
      function Language:getCategoryName()\n\tlocal name = self:getCanonicalName()\n\t\n\t-- If the name already has \"language\" in it, don't add it.\n\tif name:find(\"[Ll]anguage$\") then\n\t\treturn name\n\telse\n\t\treturn name .. \" language\"\n\tend\nend\n\
      \n\nfunction Language:getStandardCharacters()\n\treturn self._rawData.standardChars\nend\n\n\nfunction Language:makeEntryName(text)\n\ttext = mw.ustring.gsub(text, \"^[¿¡]\", \"\")\n\ttext = mw.ustring.gsub(text, \"(.)[؟?!;՛՜ ՞ ՟？！︖︕।॥။၊་།]$\", \"%1\"\
      )\n\t\n\tif self:getCode() == \"ar\" then\n\t\tlocal U = mw.ustring.char\n\t\tlocal taTwiil = U(0x640)\n\t\tlocal waSla = U(0x671)\n\t\t-- diacritics ordinarily removed by entry_name replacements\n\t\tlocal Arabic_diacritics = U(0x64B, 0x64C, 0x64D, 0x64E,\
      \ 0x64F, 0x650, 0x651, 0x652, 0x670)\n\t\t\n\t\tif text == waSla or mw.ustring.find(text, \"^\" .. taTwiil .. \"?[\" .. Arabic_diacritics .. \"]\" .. \"$\") then\n\t\t\treturn text\n\t\tend\n\tend\n\t\n\tif type(self._rawData.entry_name) == \"table\" then\n\
      \t\ttext = do_entry_name_or_sort_key_replacements(text, self._rawData.entry_name)\n\tend\n\t\n\treturn text\nend\n\n\n-- Add to data tables?\nlocal has_dotted_undotted_i = {\n\t[\"az\"] = true,\n\t[\"crh\"] = true,\n\t[\"gag\"] = true,\n\t[\"kaa\"] = true,\n\
      \t[\"tt\"] = true,\n\t[\"tr\"] = true,\n\t[\"zza\"] = true,\n}\n\nfunction Language:makeSortKey(name, sc)\n\tif has_dotted_undotted_i[self:getCode()] then\n\t\tname = name:gsub(\"I\", \"ı\")\n\tend\n\t\n\tname = mw.ustring.lower(name)\n\t\n\t-- Remove\
      \ initial hyphens and *\n\tlocal hyphens_regex = \"^[-־ـ*]+(.)\"\n\tname = mw.ustring.gsub(name, hyphens_regex, \"%1\")\n\t\n\t-- If there are language-specific rules to generate the key, use those\n\tif type(self._rawData.sort_key) == \"table\" then\n\
      \t\tname = do_entry_name_or_sort_key_replacements(name, self._rawData.sort_key)\n\telseif type(self._rawData.sort_key) == \"string\" then\n\t\tname = require(\"Module:\" .. self._rawData.sort_key).makeSortKey(name, self:getCode(), sc and sc:getCode())\n\
      \tend\n\t\n\t-- Remove parentheses, as long as they are either preceded or followed by something\n\tname = mw.ustring.gsub(name, \"(.)[()]+\", \"%1\")\n\tname = mw.ustring.gsub(name, \"[()]+(.)\", \"%1\")\n\t\n\tif has_dotted_undotted_i[self:getCode()]\
      \ then\n\t\tname = name:gsub(\"i\", \"İ\")\n\tend\n\t\n\treturn mw.ustring.upper(name)\nend\n\nfunction Language:overrideManualTranslit()\n\tif self._rawData.override_translit then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\n\nfunction Language:transliterate(text,\
      \ sc, module_override)\n\tif not ((module_override or self._rawData.translit_module) and text) then\n\t\treturn nil\n\tend\n\t\n\tif module_override then\n\t\trequire(\"Module:debug\").track(\"module_override\")\n\tend\n\t\n\treturn require(\"Module:\"\
      \ .. (module_override or self._rawData.translit_module)).tr(text, self:getCode(), sc and sc:getCode() or nil)\nend\n\nfunction Language:hasTranslit()\n\treturn self._rawData.translit_module and true or false\nend\n\n\nfunction Language:link_tr()\n\treturn\
      \ self._rawData.link_tr and true or false\nend\n\n\nfunction Language:toJSON()\n\tlocal entryNamePatterns = nil\n\tlocal entryNameRemoveDiacritics = nil\n\t\n\tif self._rawData.entry_name then\n\t\tentryNameRemoveDiacritics = self._rawData.entry_name.remove_diacritics\n\
      \t\tif self._rawData.entry_name.from then\n\t\t\tentryNamePatterns = {}\n\t\t\tfor i, from in ipairs(self._rawData.entry_name.from) do\n\t\t\t\tlocal to = self._rawData.entry_name.to[i] or \"\"\n\t\t\t\ttable.insert(entryNamePatterns, { from = from, to\
      \ = to })\n\t\t\tend\n\t\tend\n\tend\n\t\n\tlocal ret = {\n\t\tancestors = self._rawData.ancestors,\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\tentryNamePatterns = entryNamePatterns,\n\
      \t\tfamily = self._rawData[3] or self._rawData.family,\n\t\totherNames = self:getOtherNames(),\n\t\tscripts = self._rawData.scripts,\n\t\ttype = self:getType(),\n\t\twikimediaLanguages = self._rawData.wikimedia_codes,\n\t\twikidataItem = self:getWikidataItem(),\n\
      \t}\n\t\n\treturn require(\"Module:JSON\").toJSON(ret)\nend\n\n\n-- Do NOT use this method!\n-- All uses should be pre-approved on the talk page!\nfunction Language:getRawData()\n\treturn self._rawData\nend\n\nLanguage.__index = Language\n\n\nfunction\
      \ export.getDataModuleName(code)\n\tif code:find(\"^%l%l$\") then\n\t\treturn \"languages/data2\"\n\telseif code:find(\"^%l%l%l$\") then\n\t\tlocal prefix = code:sub(1, 1)\n\t\treturn \"languages/data3/\" .. prefix\n\telseif code:find(\"^[%l-]+$\") then\n\
      \t\treturn \"languages/datax\"\n\telse\n\t\treturn nil\n\tend\nend\n\n\nlocal function getRawLanguageData(code)\n\tlocal modulename = export.getDataModuleName(code)\n\treturn modulename and mw.loadData(\"Module:\" .. modulename)[code] or nil\nend\n\n\n\
      function export.makeObject(code, data)\n\tif data and data.deprecated then\n\t\trequire(\"Module:debug\").track {\n\t\t\t\"languages/deprecated\",\n\t\t\t\"languages/deprecated/\" .. code\n\t\t}\n\tend\n\t\n\treturn data and setmetatable({ _rawData = data,\
      \ _code = code }, Language) or nil\nend\n\n\nfunction export.getByCode(code)\n\tif type(code) ~= \"string\" then\n\t\terror(\"The function getByCode expects a string as its first argument, but received \" .. (code == nil and \"nil\" or \"a \" .. type(code))\
      \ .. \".\")\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.getByName(name)\n\tlocal byName = mw.loadData(\"Module:languages/by name\")\n\tlocal code = byName.all and byName.all[name] or byName[name]\n\t\
      \n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.getByCanonicalName(name)\n\tlocal byName = mw.loadData(\"Module:languages/canonical names\")\n\tlocal code = byName and\
      \ byName[name]\n\t\n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.iterateAll()\n\tmw.incrementExpensiveFunctionCount()\n\tlocal m_data = mw.loadData(\"Module:languages/alldata\"\
      )\n\tlocal func, t, var = pairs(m_data)\n\t\n\treturn function()\n\t\tlocal code, data = func(t, var)\n\t\treturn export.makeObject(code, data)\n\tend\nend\n\n--[[\tIf language is an etymology language, iterates through parent languages\n\t\tuntil it finds\
      \ a non-etymology language. ]]\nfunction export.getNonEtymological(lang)\n\twhile lang:getType() == \"etymology language\" do\n\t\tlocal parentCode = lang:getParentCode()\n\t\tlocal parent = export.getByCode(parentCode)\n\t\t\tor require(\"Module:etymology\
      \ languages\").getByCode(parentCode)\n\t\t\tor require(\"Module:families\").getByCode(parentCode)\n\t\t\n\t\tlang = parent\n--\t\tmw.log(terminfo.lang:getCode() .. \" \" .. terminfo.lang:getType())\n\tend\n\t\n\treturn lang\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:55.754Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aparameters&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48587 t=1555362535652714
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:55 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1312.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 201121474, 502473132, 700752527
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4797340\" pageid=\"4797340\" ns=\"828\" title=\"Module:parameters\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-01T01:32:55Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"OK, resurrect the bug fix for disappearing &quot;falt&quot; and such while I figure out how to clone a table properly\" xml:space=\"preserve\">local export = {}\n\n-- A helper function\
      \ to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nlocal plain = require(\"Module:string\").pattern_escape\n\n-- A helper function that removes empty numeric indexes in a table,\n-- so that the values are tightly packed like in\
      \ a normal Lua table.\nlocal remove_holes = require(\"Module:table\").compressSparseArray\n\nfunction export.process(args, params, return_unknown)\n\tlocal args_new = {}\n\t\n\t-- Process parameters for specific properties\n\tlocal required = {}\n\tlocal\
      \ patterns = {}\n\tlocal names_with_equal_sign = {}\n\tlocal list_from_index = nil\n\t\n\tfor name, param in pairs(params) do\n\t\tif param.required then\n\t\t\tif param.alias_of then\n\t\t\t\trequire(\"Module:debug\").track(\"parameters/required alias\"\
      )\n\t\t\tend\n\t\t\trequired[name] = true\n\t\tend\n\t\t\n\t\tif param.list then\n\t\t\tlocal key = name\n\t\t\tif type(name) == \"string\" then\n\t\t\t\tkey = string.gsub(name, \"=\", \"\")\n\t\t\tend\n\t\t\tif param.default ~= nil then\n\t\t\t\targs_new[key]\
      \ = {param.default, maxindex = 1}\n\t\t\telse\n\t\t\t\targs_new[key] = {maxindex = 0}\n\t\t\tend\n\t\t\t\n\t\t\tif type(param.list) == \"string\" then\n\t\t\t\t-- If the list property is a string, then it represents the name\n\t\t\t\t-- to be used as the\
      \ prefix for list items. This is for use with lists\n\t\t\t\t-- where the first item is a numbered parameter and the\n\t\t\t\t-- subsequent ones are named, such as 1, pl2, pl3.\n\t\t\t\tif string.find(param.list, \"=\") then\n\t\t\t\t\tpatterns[\"^\" ..\
      \ string.gsub(plain(param.list), \"=\", \"(%%d+)\") .. \"$\"] = name\n\t\t\t\telse\n\t\t\t\t\tpatterns[\"^\" .. plain(param.list) .. \"(%d+)$\"] = name\n\t\t\t\tend\n\t\t\telseif type(name) == \"number\" then\n\t\t\t\t-- If the name is a number, then all\
      \ indexed parameters from\n\t\t\t\t-- this number onwards go in the list.\n\t\t\t\tlist_from_index = name\n\t\t\telse\n\t\t\t\tif string.find(name, \"=\") then\n\t\t\t\t\tpatterns[\"^\" .. string.gsub(plain(name), \"=\", \"(%%d+)\") .. \"$\"] = string.gsub(name,\
      \ \"=\", \"\")\n\t\t\t\telse\n\t\t\t\t\tpatterns[\"^\" .. plain(name) .. \"(%d+)$\"] = name\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif string.find(name, \"=\") then\n\t\t\t\t-- DO NOT SIDE-EFFECT A TABLE WHILE ITERATING OVER IT.\n\t\t\t\t-- Some elements\
      \ may be skipped or processed twice if you do.\n\t\t\t\t-- Instead, track the changes we want to make to `params`, and\n\t\t\t\t-- do them after the iteration over `params` is done.\n\t\t\t\ttable.insert(names_with_equal_sign, name)\n\t\t\tend\n\t\telseif\
      \ param.default ~= nil then\n\t\t\targs_new[name] = param.default\n\t\tend\n\tend\n\n\t--Process required changes to `params`\n\tfor _, name in ipairs(names_with_equal_sign) do\n\t\trequire(\"Module:debug\").track(\"parameters/name with equals\")\n\t\t\
      params[string.gsub(name, \"=\", \"\")] = params[name]\n\t\tparams[name] = nil\n\tend\n\n\t-- Process the arguments\n\tlocal args_unknown = {}\n\t\n\tfor name, val in pairs(args) do\n\t\tlocal index = nil\n\t\t\n\t\tif type(name) == \"number\" then\n\t\t\
      \tif list_from_index ~= nil and name &gt;= list_from_index then\n\t\t\t\tindex = name - list_from_index + 1\n\t\t\t\tname = list_from_index\n\t\t\tend\n\t\telse\n\t\t\t-- Does this argument name match a pattern?\n\t\t\tfor pattern, pname in pairs(patterns)\
      \ do\n\t\t\t\tindex = mw.ustring.match(name, pattern)\n\t\t\t\t\n\t\t\t\t-- It matches, so store the parameter name and the\n\t\t\t\t-- numeric index extracted from the argument name.\n\t\t\t\tif index then\n\t\t\t\t\tindex = tonumber(index)\n\t\t\t\t\t\
      name = pname\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal param = params[name]\n\t\t\n\t\t-- If a parameter without the trailing index was found, and\n\t\t-- require_index is set on the param, set the param to nil to treat it\n\t\t\
      -- as if it isn't recognized.\n\t\tif not index and param and param.require_index then\n\t\t\tparam = nil\n\t\tend\n\t\t\n\t\t-- If no index was found, use 1 as the default index.\n\t\t-- This makes list parameters like g, g2, g3 put g at index 1.\n\t\t\
      index = index or 1\n\t\t\n\t\t-- If the argument is not in the list of parameters, trigger an error.\n\t\t-- return_unknown suppresses the error, and stores it in a separate list instead.\n\t\tif not param then\n\t\t\tif return_unknown then\n\t\t\t\targs_unknown[name]\
      \ = val\n\t\t\telse\n\t\t\t\terror(\"The parameter \\\"\" .. name .. \"\\\" is not used by this template.\", 2)\n\t\t\tend\n\t\telse\n\t\t\t-- Remove leading and trailing whitespace unless allow_whitespace is true.\n\t\t\tif not param.allow_whitespace\
      \ then\n\t\t\t\tval = mw.text.trim(val)\n\t\t\tend\n\t\t\t\n\t\t\t-- Empty string is equivalent to nil unless allow_empty is true.\n\t\t\tif val == \"\" and not param.allow_empty then\n\t\t\t\tval = nil\n\t\t\tend\n\t\t\t\n\t\t\t-- Convert to proper type\
      \ if necessary.\n\t\t\tif param.type == \"boolean\" then\n\t\t\t\tval = not (not val or val == \"\" or val == \"0\" or val == \"no\" or val == \"n\" or val == \"false\")\n\t\t\telseif param.type == \"number\" then\n\t\t\t\tval = tonumber(val)\n\t\t\telseif\
      \ param.type then\n\t\t\t\trequire(\"Module:debug\").track {\n\t\t\t\t\t\"parameters/unrecognized type\",\n\t\t\t\t\t\"parameters/unrecognized type/\" .. tostring(param.type)\n\t\t\t\t}\n\t\t\tend\n\t\t\t\n\t\t\t-- Can't use \"if val\" alone, because val\
      \ may be a boolean false.\n\t\t\tif val ~= nil then\n\t\t\t\t-- Mark it as no longer required, as it is present.\n\t\t\t\trequired[param.alias_of or name] = nil\n\t\t\t\t\n\t\t\t\t-- Store the argument value.\n\t\t\t\tif param.list then\n\t\t\t\t\t-- If\
      \ the parameter is an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\t\targs_new[name][index] = val\n\t\t\t\t\t\t\n\t\t\t\t\t\t-- Store\
      \ the highest index we find.\n\t\t\t\t\t\targs_new[name].maxindex = math.max(index, args_new[name].maxindex)\n\t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\t\t\t\t\t\
      args_new[param.alias_of][index] = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest index we find.\n\t\t\t\t\t\t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of]\
      \ = val\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\t-- If the parameter is an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\
      \t\targs_new[name] = val\n\t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\t\t\t\t\targs_new[param.alias_of][1] = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest\
      \ index we find.\n\t\t\t\t\t\t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of] = val\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\
      \t\n\t-- The required table should now be empty.\n\t-- If any entry remains, trigger an error, unless we're in the template namespace.\n\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\tlocal list = {}\n\t\tfor name, param in pairs(required)\
      \ do\n\t\t\ttable.insert(list, name)\n\t\tend\n\t\t\n\t\tlocal count = #list\n\t\tif count == 1 then\n\t\t\terror('The parameter \"' .. list[1] .. '\" is required.', 2)\n\t\telseif count == 2 then\n\t\t\terror('The parameters \"' .. table.concat(list,\
      \ '\" and \"') .. '\" are required.', 2)\n\t\telseif count &gt; 2 then\n\t\t\terror('The parameters \"' .. mw.text.listToText(list, '\", \"', '\", and \"') .. '\" are required.', 2)\n\t\tend\n\tend\n\t\n\t-- Remove holes in any list parameters if needed.\n\
      \tfor name, val in pairs(args_new) do\n\t\tif type(val) == \"table\" and not params[name].allow_holes then\n\t\t\targs_new[name] = remove_holes(val)\n\t\tend\n\tend\n\t\n\tif return_unknown then\n\t\treturn args_new, args_unknown\n\telse\n\t\treturn args_new\n\
      \tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:56.443Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata2&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55912 t=1555362536278884
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:56 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1233.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 515508296, 825771994, 684349569
    body: !!binary |-
      
- recorded: 2019-04-15T21:08:56.656Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=63741 t=1555362536532859
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:56 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 670125113, 638864796, 689955882
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4998763\" pageid=\"4998763\" ns=\"828\" title=\"Module:etymology\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-09-01T22:35:52Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"show language code in error message\" xml:space=\"preserve\">local export = {}\n\n\n--[[\tIf language is an etymology language, iterates through parent languages\n\t\tuntil it finds a\
      \ non-etymology language. ]]\nfunction export.getNonEtymological(lang)\n\twhile lang:getType() == \"etymology language\" do\n\t\tlocal parentCode = lang:getParentCode()\n\t\tlocal parent = require(\"Module:languages\").getByCode(parentCode)\n\t\t\tor require(\"\
      Module:etymology languages\").getByCode(parentCode)\n\t\t\tor require(\"Module:families\").getByCode(parentCode)\n\t\t\n\t\tlang = parent\n--\t\tmw.log(terminfo.lang:getCode() .. \" \" .. terminfo.lang:getType())\n\tend\n\t\n\treturn lang\nend\n\n\nlocal\
      \ function termError(terminfo)\n\tif terminfo.lang:getType() == \"family\" then\n\t\tif terminfo.term and terminfo.term ~= \"-\" then\n\t\t\trequire(\"Module:debug\").track(\"etymology/family/has-term\")\n\t\tend\n\t\t\n\t\tterminfo.term = \"-\"\n\tend\n\
      \treturn terminfo\nend\n\n\nlocal function createLink(terminfo, templateName)\n\tlocal link = \"\"\n\t\n\tif terminfo.term == \"-\" then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/cognate/no-term]]\n\t\t[[Special:WhatLinksHere/Template:tracking/derived/no-term]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/borrowed/no-term]]\n\t\t[[Special:WhatLinksHere/Template:tracking/calque/no-term]]\n\t\t]=]\n\t\trequire(\"Module:debug\").track(templateName .. \"/no-term\")\n\telse\n--\t\tmw.log(terminfo.term)\n\t\tlink\
      \ = \" \" .. require(\"Module:links\").full_link(terminfo, \"term\", true)\n\tend\n\t\n\treturn link\nend\n\n\nfunction export.format_etyl(lang, source, sort_key, categories)\n\tlocal info = {}\n\t\n\t\n\t-- [[Special:WhatLinksHere/Template:tracking/etymology/sortkey]]\n\
      \tif sort_key then\n\t\trequire(\"Module:debug\").track(\"etymology/sortkey\")\n\tend\n\t\n\tif not categories then\n\t\tcategories = {}\n\tend\n\t\n\tif source:getCode() == \"und\" then\n\t\tinfo = {\n\t\t\tdisplay = \"undetermined\",\n\t\t\tcat_name\
      \ = \"other languages\",\n\t\t}\n\telseif source:getCode() == \"mul-tax\" then\n\t\tinfo = {\n\t\t\tdisplay = \"[[w:taxonomic name|taxonomic name]]\",\n\t\t\tcat_name = \"taxonomic names\",\n\t\t}\n\telse\n\t\tinfo.display = source:makeWikipediaLink()\n\
      \t\t\n\t\tif source:getType() == \"family\" then\n\t\t\tinfo.cat_name = source:getCategoryName()\n\t\telse\n\t\t\tinfo.cat_name = source:getCanonicalName()\n\t\tend\n\tend\n\t\n\t-- Add the categories, but only if there is a current language\n\t\n\tif\
      \ lang then\n\t\tlocal m_utilities = require(\"Module:utilities\")\n\t\t\n\t\tif lang:getCode() == source:getCode() then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" twice-borrowed terms\")\n\t\telse\n\t\t\ttable.insert(categories, lang:getCanonicalName()\
      \ .. \" terms derived from \" .. info.cat_name)\n\t\tend\n\t\t\n\t\tcategories = m_utilities.format_categories(categories, lang, sort_key)\n\telse\n\t\tcategories = \"\"\n\tend\n\t\n\treturn \"&lt;span class=\\\"etyl\\\"&gt;\" .. info.display .. categories\
      \ .. \"&lt;/span&gt;\"\nend\n\n\n-- Internal implementation of {{cognate|...}} template\nfunction export.format_cognate(terminfo, sort_key)\n\treturn export.format_derived(nil, terminfo, sort_key, \"cognate\")\nend\n\n\n-- Internal implementation of {{derived|...}}\
      \ template\nfunction export.format_derived(lang, terminfo, sort_key, templateName)\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\t\n\tlocal link = createLink(terminfo,\
      \ templateName or \"derived\")\n\t\n\treturn export.format_etyl(lang, source, sort_key) .. link\nend\n\n\n-- Internal implementation of {{inherited|...}} template\nfunction export.format_inherited(lang, terminfo, sort_key)\n\tlocal source = terminfo.lang\n\
      \n\tterminfo = termError(terminfo)\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tif not lang:hasAncestor(terminfo.lang) and mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\tlocal function showLanguage(lang)\n\t\t\treturn\
      \ (\"[[:Category:%s|%s]] (%s)\")\n\t\t\t\t:format(lang:getCategoryName(), lang:getCanonicalName(), lang:getCode())\n\t\tend\n\t\tlocal postscript\n\t\tlocal ancestors = lang:getAncestors()\n\t\tlocal moduleLink = \"[[Module:\"\n\t\t\t.. require(\"Module:languages\"\
      ).getDataModuleName(lang:getCode())\n\t\t\t.. \"]]\"\n\t\tif not ancestors[1] then\n\t\t\tpostscript = showLanguage(lang) .. \" has no ancestors.\"\n\t\telse\n\t\t\tlocal ancestorList = table.concat(\n\t\t\t\trequire(\"Module:fun\").map(\n\t\t\t\t\tshowLanguage,\n\
      \t\t\t\t\tancestors),\n\t\t\t\t\" and \")\n\t\t\tpostscript = (\"The ancestor%s of %s %s %s.\"):format(\n\t\t\t\tancestors[2] and \"s\" or \"\", lang:getCanonicalName(),\n\t\t\t\tancestors[2] and \"are\" or \"is\", ancestorList)\n\t\tend\n\t\terror((\"\
      %s is not set as an ancestor of %s in %s. %s\")\n\t\t\t:format(showLanguage(terminfo.lang), showLanguage(lang), moduleLink, postscript))\n\tend\n\t\n\tlocal categories = {}\n\t\n\tlocal link = createLink(terminfo, \"inherited\")\n\t\n\ttable.insert(categories,\
      \ lang:getCanonicalName() .. \" terms inherited from \" .. source:getCanonicalName())\n\t\n\treturn export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\n\n-- Internal implementation of {{borrowed|...}} template\nfunction export.format_borrowed(lang,\
      \ terminfo, sort_key, nocap, notext, borrowing_type)\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\t\n\tterminfo = termError(terminfo)\n\t\n\tlocal text = \"\"\n\tlocal categories = {}\n\n\tif lang:getCode()\
      \ == source:getCode() then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" twice-borrowed terms\")\n\telseif source:getType() == \"family\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms borrowed from \" .. source:getCategoryName())\n\
      \telse\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms borrowed from \" .. source:getCanonicalName())\n\tend\n\n\tif not notext then\n\t\tif borrowing_type == \"learned\" then\n\t\t\ttext = \"[[learned borrowing|\" .. (nocap and \"l\"\
      \ or \"L\") .. \"earned borrowing]] from \"\n\t\telseif borrowing_type == \"orthographic\" then\n\t\t\ttext = \"[[orthographic|\" .. (nocap and \"o\" or \"O\") .. \"rthographic]] [[Appendix:Glossary#borrowing|borrowing]] from \"\n\t\telseif borrowing_type\
      \ == \"unadapted\" then\n\t\t\ttext = \"[[Appendix:Glossary#unadapted borrowing|\" .. (nocap and \"u\" or \"U\") .. \"nadapted borrowing]] from \"\n\t\telse\n\t\t\ttext = \"[[Appendix:Glossary#loanword|Borrowing]] from \"\n\t\tend\n\tend\n\n\tif borrowing_type\
      \ == \"learned\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" learnedly borrowed terms\")\n\telseif borrowing_type == \"orthographic\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" orthographically borrowed terms\"\
      )\n\telseif borrowing_type == \"unadapted\" then\n\t\tif source:getType() == \"family\" then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" unadapted borrowings from \" .. source:getCategoryName())\n\t\telse\n\t\t\ttable.insert(categories,\
      \ lang:getCanonicalName() .. \" unadapted borrowings from \" .. source:getCanonicalName())\n\t\tend\n\tend\n\t\n\tlocal link = createLink(terminfo, \"borrowed\")\n\t\n\treturn text .. export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\
      \n\n-- Internal implementation of {{calque|...}} template\nfunction export.calque(lang, terminfo, sort_key, nocap, notext)\n\tlocal result = \"\"\n\t\n\tif not notext then\n\t\tresult = result .. \"[[Appendix:Glossary#calque|\" .. (nocap and \"c\" or \"\
      C\") .. \"alque]] of \"\n\tend\n\t\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\n\tlocal categories = {}\n\n\tif source:getType() == \"family\" then\n\t\ttable.insert(categories,\
      \ lang:getCanonicalName() .. \" terms calqued from \" .. source:getCategoryName())\n\telse\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms calqued from \" .. source:getCanonicalName())\n\tend\n\t\n\tlocal link = createLink(terminfo, \"\
      calque\")\n\t\n\tresult = result .. \" \" ..  export.format_etyl(lang, source, sort_key, categories) .. link\n\t\n\treturn result\nend\n\n\n-- Internal implementation of {{semantic loan|...}} template\nfunction export.format_semantic_loan(lang, terminfo,\
      \ sort_key, nocap, notext)\n\tif nocap then\n\t\trequire(\"Module:debug\").track(\"semantic_loan/nocap\")\n\tend\n\t\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\n\
      \tlocal text = \"\"\n\tlocal categories = {}\n\n\tif source:getType() == \"family\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" semantic loans from \" .. source:getCategoryName())\n\telse\n\t\ttable.insert(categories, lang:getCanonicalName()\
      \ .. \" semantic loans from \" .. source:getCanonicalName())\n\tend\n\t\n\tif not notext then\n\t\ttext = \"[[w:Semantic loan|\" .. (nocap and \"s\" or \"S\") .. \"emantic loan]] from \"\n\tend\n\t\n\tlocal link = createLink(terminfo, \"semantic_loan\"\
      )\n\t\n\treturn text .. export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\n-- Internal implementation of {{phono-semantic matching|...}} template\nfunction export.psm(lang, terminfo, sort_key, nocap, notext)\n\tif nocap then\n\t\trequire(\"\
      Module:debug\").track(\"psm/nocap\")\n\tend\n\t\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\n\tlocal text = \"\"\n\tlocal categories = {}\n\n\tif source:getType()\
      \ == \"family\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" phono-semantic matchings \")\n\telse\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" phono-semantic matchings \")\n\tend\n\t\n\tif not notext then\n\t\ttext =\
      \ \"[[w:Phono-semantic matching|\" .. (nocap and \"p\" or \"P\") .. \"hono-semantic matching]] of \"\n\tend\n\t\n\tlocal link = createLink(terminfo, \"psm\")\n\t\n\treturn text .. export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\n\
      return export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:56.853Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47094 t=1555362536735867
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:56 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1340.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 418271134, 655294663, 695121646
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3935515\" pageid=\"3935515\" ns=\"828\" title=\"Module:links\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T18:59:00Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\t[[Unsupported titles]] and pages with high\n\tmemory usage are listed at [[Module:links/data]].\n\t\n\tOther modules used:\n\t\t[[Module:script utilities]]\n\
      \t\t[[Module:scripts]]\n\t\t[[Module:languages]] and its submodules\n\t\t[[Module:gender and number]]\n\t\t[[Module:utilities]]\n\t\t[[Module:string]]\n\t\t[[Module:debug]]\n]=]\n\n-- These are prefixed with u to avoid confusion with the default string\
      \ methods\n-- of the same name.\nlocal usub = mw.ustring.sub\n\nlocal table_insert = table.insert\nlocal table_concat = table.concat\n\nlocal ignore_cap = {\n\t[\"ko\"] = true,\n}\n\nlocal phonetic_extraction = {\n\t[\"th\"] = \"Module:th\",\n\t[\"km\"\
      ] = \"Module:km\",\n}\n\nlocal pos_tags = {\n\t[\"a\"] = \"adjective\",\n\t[\"adv\"] = \"adverb\",\n\t[\"int\"] = \"interjection\",\n\t[\"n\"] = \"noun\",\n\t[\"pron\"] = \"pronoun\",\n\t[\"v\"] = \"verb\",\n\t[\"vi\"] = \"intransitive verb\",\n\t[\"vt\"\
      ] = \"transitive verb\",\n\t[\"vti\"] = \"transitive and intransitive verb\",\n}\n\nlocal unsupported_titles\nfunction export.getLinkPage(target, lang)\n\tunsupported_titles = unsupported_titles or mw.loadData(\"Module:links/data\").unsupported_titles\n\
      \tif unsupported_titles[target] then\n\t\treturn \"Unsupported titles/\" .. unsupported_titles[target]\n\tend\n\t\n\t-- If the link contains unexpanded template parameters, then don't create a link.\n\tif target:find(\"{{{\") then\n\t\treturn nil\n\tend\n\
      \t\n\tif target:sub(1, 1) == \":\" or target:sub(1, 2) == \"w:\" or target:sub(1, 10) == \"wikipedia:\" then\n\t\treturn target\n\tend\n\t\n\t-- Remove diacritics from the page name\n\ttarget = lang:makeEntryName(target)\n\t\n\tif target:sub(1, 1) == \"\
      /\" then\n\t\treturn \":\" .. target\n\t\n\t-- Link to appendix for reconstructed terms and terms in appendix-only languages\n\telseif target:sub(1, 1) == \"*\" and #target &gt; 1 then\n\t\tif lang:getCode() == \"und\" then\n\t\t\treturn nil\n\t\tend\n\
      \t\t\n\t\ttarget = \"Reconstruction:\" .. lang:getCanonicalName() .. \"/\" .. usub(target, 2)\n\telseif lang:getType() == \"reconstructed\" then\n\t\terror(\"The specified language \" .. lang:getCanonicalName()\n\t\t\t.. \" is unattested, while the given\
      \ word is not marked with '*' to indicate that it is reconstructed\")\n\telseif lang:getType() == \"appendix-constructed\" then\n\t\ttarget = \"Appendix:\" .. lang:getCanonicalName() .. \"/\" .. target\n\tend\n\t\n\treturn target\nend\n\n-- Make a language-specific\
      \ link from given link's parts\nlocal function makeLangLink(link, lang, id, allowSelfLink)\n\t-- Temporary tracking code\n\tlocal langCode = lang:getCode()\n\tif langCode == \"se\" or langCode == \"sia\" or langCode:find(\"^sm[ajns]$\")\n\t\t\tor langCode:find(\"\
      ^sj[dektu]$\") then\n\t\tif link.display and link.display:find(\"'\") then\n\t\t\trequire(\"Module:debug\").track(\"links/Sami apostrophe display\")\n\t\telseif link.target and link.target:find(\"'\") then\n\t\t\trequire(\"Module:debug\").track(\"links/Sami\
      \ apostrophe target\")\n\t\tend\n\tend\n\t\n\t-- Find fragments (when link didn't come from parseLink).\n\t-- Prevents {{l|en|word#Etymology 2|word}} from linking to [[word#Etymology 2#English]].\n\tif link.fragment == nil then\n\t\t-- Replace numeric\
      \ character references with the corresponding character (&amp;#29; → '),\n\t\t-- as they contain #, which causes the numeric character reference to be\n\t\t-- misparsed (wa'a → wa&amp;#29;a → pagename wa&amp;, fragment 29;a).\n\t\tlink.target = link.target:gsub(\"\
      &amp;#(%d+);\",\n\t\t\tfunction(number) return mw.ustring.char(tonumber(number)) end)\n\t\tlocal first, second = link.target:match(\"^([^#]+)#(.+)$\")\n\t\tif first then\n\t\t\tlink.target, link.fragment = first, second\n\t\tend\n\tend\n\t\n\t-- If there\
      \ is no display form, then create a default one\n\tif not link.display then\n\t\tlink.display = link.target\n\t\t\n\t\t-- Strip the prefix from the displayed form\n\t\t-- TODO: other interwiki links?\n\t\tif link.display:sub(1, 1) == \":\" and not mw.loadData(\"\
      Module:links/data\").unsupported_titles[link.display] then\n\t\t\tlink.display = link.display:sub(2) -- remove colon from beginning\n\t\telse\n\t\t\tlocal prefix = link.display:match(\"^([^:]+):\")\n\t\t\tlocal prefixes = {\n\t\t\t\tw = true,\n\t\t\t\t\
      wikipedia = true,\n\t\t\t}\n\t\t\t\n\t\t\tif prefixes[prefix] then\n\t\t\t\tlink.display = link.display:sub(#prefix + 2) -- remove prefix plus colon\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Process the target\n\tlink.target = export.getLinkPage(link.target,\
      \ lang)\n\t\n\tif not link.target then\n\t\treturn link.display\n\tend\n\t\n\t-- If the target is the same as the current page and there is no sense id\n\t-- and linking to the same page hasn't been turned on, then return a \"self-link\"\n\t-- like the\
      \ software does.\n\tif not (allowSelfLink or id) and link.target:gsub(\"^:\", \"\") == mw.title.getCurrentTitle().prefixedText then\n\t\treturn \"&lt;strong class=\\\"selflink\\\"&gt;\" .. link.display .. \"&lt;/strong&gt;\"\n\tend\n\t\n\t--[[\n\t\tAdd\
      \ fragment\n\t\tDo not add a section link to \"Undetermined\", as such sections do not exist and are invalid.\n\t\tTabbedLanguages handles links without a section by linking to the \"last visited\" section,\n\t\tbut adding \"Undetermined\" would break\
      \ that feature.\n\t\tFor localized prefixes that make syntax error, please use the format: [\"xyz\"] = true,\n\t]]\n\tlocal prefix = link.target:match(\"^:?([^:]+):\")\n\tlocal prefixes = {\n\t\tw = true,\n\t\twikipedia = true,\n\t\tCategory = true,\n\t\
      }\n\t\n\tif not prefixes[prefix] then\n\t\tif link.fragment or link.target:find(\"#$\") then\n\t\t\trequire(\"Module:debug\").track {\n\t\t\t\t\"links/fragment\",\n\t\t\t\t\"links/fragment/\" .. lang:getCode()\n\t\t\t}\n\t\tend\n\t\t\n\t\tif not link.fragment\
      \ and lang:getCode() ~= \"und\" then\n\t\t\tif id then\n\t\t\t\tlink.fragment = require(\"Module:utilities\").make_id(lang, id)\n\t\t\telseif not mw.ustring.find(link.target, \"^Appendix:\")\n\t\t\t\t\tand not mw.ustring.find(link.target, \"^Reconstruction:\"\
      ) then\n\t\t\t\tlink.fragment = lang:getCanonicalName()\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- This allows linking to pages like [[sms:a]] without it being treated weirdly.\n\t\tlink.target = link.target:gsub(\":\", \"&amp;#x3a;\")\n\tend\n\t\n\treturn \"[[\"\
      \ .. link.target .. (link.fragment and \"#\" .. link.fragment or \"\") .. \"|\" .. link.display .. \"]]\"\nend\n\n\n-- Split a link into its parts\nlocal function parseLink(linktext)\n\tlocal link = { target = linktext }\n\tlocal first, second = link.target:match(\"\
      ^([^|]+)|(.+)$\")\n\t\n\tif first then\n\t\tlink.target = first\n\t\tlink.display = second\n\telse\n\t\tlink.display = link.target\n\tend\n\t\n\tfirst, second = link.target:match(\"^(.+)#(.+)$\")\n\t\n\tif first then\n\t\tlink.target = first\n\t\tlink.fragment\
      \ = second\n\telse\n\t\t-- So that makeLangLink does not look for a fragment again\n\t\tlink.fragment = false\n\tend\n\t\n\treturn link\nend\n\n\n-- Creates a basic wikilink to the given term. If the text already contains\n-- links, these are replaced\
      \ with links to the correct section.\nfunction export.language_link(data, allowSelfLink, dontLinkRecons)\n\tif type(data) ~= \"table\" then\n\t\terror(\"The first argument to the function language_link must be a table. See Module:links/documentation for\
      \ more information.\")\n\tend\n\t\n\tlocal text = data.term\n\t\n\tif ignore_cap[data.lang:getCode()] and text then\n\t\ttext = text:gsub(\"%^\", \"\")\n\tend\n\t\n\t-- If the text begins with * and another character,\n\t-- then act as if each link begins\
      \ with *\n\tlocal allReconstructed = false\n\t\n\tif text:find(\"^*.\") then\n\t\tallReconstructed = true\n\tend\n\t\n\t-- Do we have embedded wikilinks?\n\tif text:find(\"[[\", nil, true) then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/links/alt-ignored]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/links/id-ignored]]\n\t\t]=]\n\t\t\n\t\tif data.alt then\n\t\t\trequire(\"Module:debug\").track(\"links/alt-ignored\")\n\t\t\tmw.log(\"(from Module:links)\", \"text with embedded wikilinks:\", text,\n\t\t\t\t\
      \"ignored alt:\", data.alt, \"lang:\", data.lang:getCode())\n\t\tend\n\t\t\n\t\tif data.id then\n\t\t\trequire(\"Module:debug\").track(\"links/id-ignored\")\n\t\t\tmw.log(\"(from Module:links)\", \"text with embedded wikilinks:\", text,\n\t\t\t\t\"ignored\
      \ id:\", data.id, \"lang:\", data.lang:getCode())\n\t\tend\n\t\t\n\t\t-- Begins and ends with a wikilink tag\n\t\tif text:find(\"^%[%[(.+)%]%]$\") then\n\t\t\t-- There are no [ ] in between.\n\t\t\t-- This makes the wikilink tag redundant.\n\t\t\tif text:find(\"\
      ^%[%[[^%[%]]+%]%]$\") then\n\t\t\t\trequire(\"Module:debug\").track(\"links/redundant wikilink\")\n\t\t\telse\n\t\t\t\tlocal temp = text:gsub(\"^%[%[(.+)%]%]$\", \"%1\")\n\t\t\t\ttemp = temp:gsub(\"%]%], %[%[\", \"|\")\n\t\t\t\t\n\t\t\t\tif not temp:find(\"\
      [%[%]]\") then\n\t\t\t\t\trequire(\"Module:debug\").track(\"links/list\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\ttext = text:gsub(\"%[%[([^%]]+)%]%]\",\n\t\t\tfunction(linktext)\n\t\t\t\tlocal link = parseLink(linktext)\n\t\t\t\t\n\t\t\t\tif allReconstructed\
      \ then\n\t\t\t\t\tlink.target = \"*\" .. link.target\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\treturn makeLangLink(link, data.lang, data.id, allowSelfLink, dontLinkRecons)\n\t\t\tend)\n\t\t\n\t\t-- Remove the extra * at the beginning if it's immediately followed\n\
      \t\t-- by a link whose display begins with * too\n\t\tif allReconstructed then\n\t\t\ttext = text:gsub(\"^%*%[%[([^|%]]+)|%*\", \"[[%1|*\")\n\t\tend\n\telse\n\t\t-- There is no embedded wikilink, make a link using the parameters.\n\t\ttext = makeLangLink({\
      \ target = text, display = data.alt }, data.lang, data.id, allowSelfLink, dontLinkRecons)\n\tend\n\t\n\treturn text\nend\n\nfunction export.mark(text, itemType, face, lang)\n\tlocal tag = { \"\", \"\" }\n\t\n\tif itemType == \"gloss\" then\n\t\ttag = {\
      \ '&lt;span class=\"mention-gloss-double-quote\"&gt;“&lt;/span&gt;&lt;span class=\"mention-gloss\"&gt;',\n\t\t\t'&lt;/span&gt;&lt;span class=\"mention-gloss-double-quote\"&gt;”&lt;/span&gt;' }\n\telseif itemType == \"tr\" then\n\t\tif face == \"term\"\
      \ then\n\t\t\ttag = { '&lt;span lang=\"' .. lang:getCode() .. '\" class=\"tr mention-tr Latn\"&gt;',\n\t\t\t\t'&lt;/span&gt;' }\n\t\telse\n\t\t\ttag = { '&lt;span lang=\"' .. lang:getCode() .. '\" class=\"tr Latn\"&gt;', '&lt;/span&gt;' }\n\t\tend\n\t\
      elseif itemType == \"ts\" then\n\t\ttag = { '&lt;span class=\"ts mention-ts Latn\"&gt;/', '/&lt;/span&gt;' }\n\telseif itemType == \"pos\" then\n\t\ttag = { '&lt;span class=\"ann-pos\"&gt;', '&lt;/span&gt;' }\n\telseif itemType == \"annotations\" then\n\
      \t\ttag = { '&lt;span class=\"mention-gloss-paren annotation-paren\"&gt;(&lt;/span&gt;',\n\t\t\t'&lt;span class=\"mention-gloss-paren annotation-paren\"&gt;)&lt;/span&gt;' }\n\tend\n\t\n\tif type(text) == \"string\" then\n\t\treturn tag[1] .. text .. tag[2]\n\
      \telse\n\t\treturn \"\"\n\tend\nend\n\n-- Format the annotations (things following the linked term)\nfunction export.format_link_annotations(data, face)\n\tlocal output = {}\n\t\n\t-- Interwiki link\n\tif data.interwiki then\n\t\ttable_insert(output, data.interwiki)\n\
      \tend\n\t\n\t-- Genders\n\tif type(data.genders) ~= \"table\" then\n\t\tdata.genders = { data.genders }\n\tend\n\t\n\tif data.genders and #data.genders &gt; 0 then\n\t\tlocal m_gen = require(\"Module:gender and number\")\n\t\ttable_insert(output, \"&amp;nbsp;\"\
      \ .. m_gen.format_list(data.genders, data.lang))\n\tend\n\t\n\tlocal annotations = {}\n\t\n\t-- Transliteration and transcription\n\tif data.tr or data.ts then\n\t\tlocal kind\n\t\tif face == \"term\" then\n\t\t\tkind = face\n\t\telse\n\t\t\tkind = \"\
      default\"\n\t\tend\n\t\t\n\t\tif data.tr and data.ts then\n\t\t\ttable_insert(annotations,\n\t\t\t\trequire(\"Module:script utilities\").tag_translit(data.tr, data.lang, kind)\n\t\t\t\t.. \" \" .. export.mark(data.ts, \"ts\"))\n\t\telseif data.ts then\n\
      \t\t\ttable_insert(annotations, export.mark(data.ts, \"ts\"))\n\t\telse\n\t\t\ttable_insert(annotations,\n\t\t\t\trequire(\"Module:script utilities\").tag_translit(data.tr, data.lang, kind))\n\t\tend\n\tend\n\t\n\t-- Gloss/translation\n\tif data.gloss\
      \ then\n\t\ttable_insert(annotations, export.mark(data.gloss, \"gloss\"))\n\tend\n\t\n\t-- Part of speech\n\tif data.pos then\n\t\t-- debug category for pos= containing transcriptions\n\t\tif data.pos:find(\"/[^&gt;&lt;]*/\") then\n\t\t\tdata.pos = data.pos\
      \ .. \"[[Category:links likely containing transcriptions in pos]]\"\n\t\tend\n\n\t\ttable_insert(annotations, export.mark(pos_tags[data.pos] or data.pos, \"pos\"))\n\tend\n\t\n\t-- Literal/sum-of-parts meaning\n\tif data.lit then\n\t\ttable_insert(annotations,\
      \ \"literally \" .. export.mark(data.lit, \"gloss\"))\n\tend\n\t\n\tif #annotations &gt; 0 then\n\t\ttable_insert(output, \" \" .. export.mark(table_concat(annotations, \", \"), \"annotations\"))\n\tend\n\t\n\treturn table_concat(output)\nend\n\n-- A version\
      \ of {{l}} or {{m}} that can be called from other modules too\nfunction export.full_link(data, face, allowSelfLink, dontLinkRecons)\n\tif type(data) ~= \"table\" then\n\t\terror(\"The first argument to the function full_link must be a table. \"\n\t\t\t\
      .. \"See Module:links/documentation for more information.\")\n\tend\n\t\n\t-- Create the link\n\tlocal output = {}\n\tlocal categories = {}\n\tlocal link = \"\"\n\tlocal annotations\n\t\n\t--local m_utilities = require(\"Module:utilities\")\n\t\n\t-- Is\
      \ there any text to show?\n\tif (data.term or data.alt) then\n\t\t-- Try to detect the script if it was not provided\n\t\tif not data.sc then\n\t\t\tdata.sc = require(\"Module:scripts\").findBestScript(data.alt or data.term, data.lang)\n\t\telse\n\t\t\t\
      -- Track uses of sc parameter\n\t\t\tlocal best = require(\"Module:scripts\").findBestScript(data.alt or data.term, data.lang)\n\t\t\trequire(\"Module:debug\").track(\"links/sc\")\n\t\t\t\n\t\t\tif data.sc:getCode() == best:getCode() then\n\t\t\t\trequire(\"\
      Module:debug\").track(\"links/sc/redundant\")\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/redundant/\" .. data.sc:getCode())\n\t\t\telse\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/needed\")\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/needed/\"\
      \ .. data.sc:getCode())\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal class = \"\"\n\t\t\n\t\tif data.accel then\n\t\t\tlocal form = data.accel.form and data.accel.form .. \"-form-of\" or \"\"\n\t\t\tlocal gender = data.accel.gender and \"gender-\" .. data.accel.gender\
      \ or \"\"\n\t\t\tlocal translit = data.accel.translit and \"transliteration-\" .. data.accel.translit or \"\"\n\t\t\t-- This is decoded again by [[WT:ACCEL]].\n\t\t\tlocal lemma = data.accel.lemma and \"origin-\" .. data.accel.lemma:gsub(\"%%\", \".\"\
      ):gsub(\" \", \"_\") or \"\" \n\t\t\tlocal lemma_translit = data.accel.lemma_translit and \"origin-transliteration-\" .. data.accel.lemma_translit or \"\"\n\t\t\tlocal no_store = data.accel.no_store and \"form-of-nostore\" or \"\"\n\t\t\t\n\t\t\taccel\
      \ =\n\t\t\t\tform .. \" \" ..\n\t\t\t\tgender .. \" \" ..\n\t\t\t\ttranslit .. \" \" ..\n\t\t\t\tlemma .. \" \" ..\n\t\t\t\tlemma_translit .. \" \" ..\n\t\t\t\tno_store .. \" \"\n\t\t\t\n\t\t\tclass = \"form-of lang-\" .. data.lang:getCode() .. \" \" ..\
      \ accel\n\t\tend\n\t\t\n\t\t-- Only make a link if the term has been given, otherwise just show the alt text without a link\n\t\tlink = require(\"Module:script utilities\").tag_text(\n\t\t\tdata.term and export.language_link(data, allowSelfLink, dontLinkRecons)\n\
      \t\t\tor data.alt, data.lang, data.sc, face, class)\n\telse\n\t\t--[[\tNo term to show.\n\t\t\t\tIs there at least a transliteration we can work from?\t]]\n\t\tlink = require(\"Module:script utilities\").request_script(data.lang, data.sc)\n\t\t\n\t\tif\
      \ link == \"\" or not data.tr or data.tr == \"-\" then\n\t\t\t-- No link to show, and no transliteration either. Show a term request.\n\t\t\tlocal category = \"\"\n\t\t\t\n\t\t\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\t\t\ttable_insert(categories,\
      \ \"[[Category:\" .. data.lang:getCanonicalName() .. \" term requests]]\")\n\t\t\tend\n\t\t\t\n\t\t\tlink = \"&lt;small&gt;[Term?]&lt;/small&gt;\"\n\t\tend\n\tend\n\t\n\ttable_insert(output, link)\n\t\n\tif data.tr == \"\" or data.tr == \"-\" then\n\t\t\
      data.tr = nil\n\t\n\telseif phonetic_extraction[data.lang:getCode()] then\n\t\tlocal m_phonetic = require(phonetic_extraction[data.lang:getCode()])\n\t\tdata.tr = data.tr or m_phonetic.getTranslit(export.remove_links(data.term))\n\t\n\telseif (data.term\
      \ or data.alt) and not data.sc:getCode():find(\"Lati?n\") then\n\t\t\n\t\t-- Try to generate a transliteration, unless transliteration has been\n\t\t-- supplied and we are in a high-memory entry.\n\t\tif not (data.tr and mw.loadData(\"Module:links/data\"\
      ).high_memory_entries[mw.title.getCurrentTitle().text]) then\n\t\t\tlocal automated_tr = data.lang:transliterate(export.remove_links(data.alt or data.term), data.sc)\n\t\t\t\n\t\t\tif automated_tr then\n\t\t\t\tlocal manual_tr = data.tr\n\t\t\t\t\n\t\t\
      \t\tif manual_tr then\n\t\t\t\t\tif manual_tr == automated_tr then\n\t\t\t\t\t\ttable_insert(categories,\n\t\t\t\t\t\t\t\"[[Category:Terms with redundant transliterations]]\"\n\t\t\t\t\t\t\t\t\t.. \"[[Category:Terms with redundant transliterations/\" ..\
      \ data.lang:getCode() .. \"]]\")\n\t\t\t\t\telse\n\t\t\t\t\t\t-- Prevents Arabic root categories from flooding the tracking categories.\n\t\t\t\t\t\tif mw.title.getCurrentTitle().nsText ~= \"Category\" then\n\t\t\t\t\t\t\ttable_insert(categories,\n\t\t\
      \t\t\t\t\t\t\"[[Category:Terms with manual transliterations different from the automated ones]]\"\n\t\t\t\t\t\t\t\t\t\t.. \"[[Category:Terms with manual transliterations different from the automated ones/\" .. data.lang:getCode() .. \"]]\")\n\t\t\t\t\t\
      \tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif (not manual_tr) or data.lang:overrideManualTranslit() then\n\t\t\t\t\tdata.tr = automated_tr\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Link to the transliteration entry for languages that\
      \ require this\n\tif data.tr and data.lang:link_tr() then\n\t\tdata.tr = export.language_link { lang = data.lang, term = data.tr }\n\tend\n\t\n\ttable_insert(output, export.format_link_annotations(data, face))\n\t\n\treturn table_concat(output) .. table_concat(categories)\n\
      end\n\n\n--[[\tStrips links: deletes category links,\n\t\tthe targets of piped links,\n\t\tand all double square brackets.\t\t\t]]\nfunction export.remove_links(text)\n\tif type(text) == \"table\" then\n\t\ttext = text.args[1]\n\tend\n\t\n\tif not text\
      \ or text == \"\" then\n\t\treturn \"\"\n\tend\n\t\n\ttext = mw.ustring.gsub(text, \"%[%[Category:[^|%]]-|?[^|%]]-%]%]\", \"\")\n\ttext = text:gsub(\"%[%[[^|%]]-|\", \"\")\n\ttext = text:gsub(\"%[%[\", \"\")\n\ttext = text:gsub(\"%]%]\", \"\")\n\t\n\t\
      return text\nend\n\nfunction export.english_links(text)\n\tlocal lang = require(\"Module:languages\").getByCode(\"en\")\n\t\n\t-- Parentheses around function call to remove second return value, the\n\t-- number of replacements.\n\treturn (text:gsub(\"\
      %[%[([^%]]+)%]%]\",\n\t\tfunction(linktext)\n\t\t\tlocal link = parseLink(linktext)\n\t\t\treturn makeLangLink(link, lang, nil, true, false)\n\t\tend))\nend\n\nfunction export.light_link(data)\n\tlocal language_names = mw.loadData(\"Module:languages/code\
      \ to canonical name\")\n\tlocal script_codes = mw.loadData(\"Module:scripts/codes\")\n\t\n\tif data.langCode then\n\t\tdata.langName = language_names[data.langCode] or error('The language code \"' .. data.langCode .. '\" is not recognized.')\n\telse\n\t\
      \terror('Language code is required.')\n\tend\n\t\n\tif not data.term then\n\t\terror('Term to link to is required.')\n\tend\n\t\n\tif data.scCode then\n\t\tif not script_codes[data.scCode] then\n\t\t\terror('The script code \"' .. data.sc .. '\" is not\
      \ recognized.')\n\t\tend\n\telse\n\t\terror(\"The function light_link requires a script code.\")\n\tend\n\t\n\tlocal fragment\n\tif data.id then\n\t\tfragment = data.langName .. \"-\" .. mw.uri.encode(data.id, \"WIKI\")\n\telse\n\t\tfragment = data.langName\n\
      \tend\n\t\n\treturn table_concat {\n\t\t'&lt;span class=\"', data.scCode, '\" lang=\"', data.langCode,\n\t\t'\"&gt;[[', data.term, \"#\", fragment, \"|\", (data.alt or data.term), \"]]&lt;/span&gt;\"\n\t}\nend\n\n--[=[\n\tFor example, Norwegian_Bokm.C3.A5l\
      \ → Norwegian_Bokmål. 0xC3 and 0xA5 are the\n\thexadecimal-base representation of the two bytes used to encode the character\n\tå in the UTF-8 encoding:\n\t\t11000011 10100101\n\t\n\tNote that the bytes used to represent a character are actually different\
      \ from\n\tthe Unicode codepoint. For å, the codepoint is 0xE5. The bits (digits) that\n\tactually spell the codepoint are found in the brackets: 110[00011] 10[100101].\n\tFor further explanation, see [[w:UTF-8#Description]].\n]=]\n\n-- The character class\
      \ %x should not be used, as it includes the characters a-f,\n-- which do not occur in these anchor encodings.\nlocal capitalHex = \"[0-9A-F]\"\n\nlocal function decodeAnchor(anchor)\n\treturn (anchor:gsub(\"%.(\" .. capitalHex .. capitalHex .. \")\",\n\
      \t\tfunction(hexByte)\n\t\t\treturn string.char(tonumber(hexByte, 16))\n\t\tend))\nend\n\nfunction export.section_link(link)\n\tif type(link) ~= \"string\" then\n\t\terror(\"The first argument to section_link was a \" .. type(link) .. \", but it should\
      \ be a string.\")\n\tend\n\t\n\tlink = link:gsub(\"_\", \" \")\n\t\n\tlocal numberSigns = require(\"Module:string\").count(link, \"#\")\n\t\n\tif numberSigns &gt; 1 then\n\t\terror(\"The section link should only contain one number sign (#).\")\n\tend\n\
      \t\n\tlocal page, section = link:match(\"^([^#]+)#(.+)$\")\n\t\n\tif page and section then\n\t\tsection = decodeAnchor(section)\n\t\t\n\t\t-- URI-encode (percent-encode) section to allow square brackets, [],\n\t\t-- in section name. If not percent-encoded,\
      \ they prevent the parser from\n\t\t-- recognizing the link.\n\t\treturn table_concat { \"[[\", page, \"#\", mw.uri.encode(section, \"WIKI\"), \"|\", page, \" § \", section, \"]]\" }\n\telse\n\t\terror('The function \"' .. section_link .. '\" could not\
      \ find a number sign marking a section name.')\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:58.018Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=57798 t=1555362537906613
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:58 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1280.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 592287059, 818800472, 695322937
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4073440\" pageid=\"4073440\" ns=\"828\" title=\"Module:utilities\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-10-30T22:40:37Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"pipe doesn&#039;t have to be escaped\" xml:space=\"preserve\">local export = {}\n\nlocal data = mw.loadData(\"Module:utilities/data\")\nlocal notneeded = data.notneeded\nlocal neededhassubpage\
      \ = data.neededhassubpage\n\n-- A helper function to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nfunction export.pattern_escape(text)\n\tif type(text) == \"table\" then\n\t\ttext = text.args[1]\n\tend\n\ttext = mw.ustring.gsub(text,\
      \ \"([%^$()%%.%[%]*+%-?])\", \"%%%1\")\n\treturn text\nend\n\nfunction export.plain_gsub(text, pattern, replacement)\n\tlocal invoked = false\n\t\n\tif type(text) == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\
      \t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = {},\n\t\t\t\t[2] = {},\n\t\t\t\t[3] = { allow_empty = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\
      \t\t\treplacement = args[3]\n\t\telse\n\t\t\terror(\"If the first argument to plain_gsub is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not ( type(pattern) == \"string\" or type(pattern) == \"number\" ) then\n\t\t\terror(\"The second\
      \ argument to plain_gsub should be a string or a number.\")\n\t\tend\n\t\t\n\t\tif not ( type(replacement) == \"string\" or type(replacement) == \"number\" ) then\n\t\t\terror(\"The third argument to plain_gsub should be a string or a number.\")\n\t\t\
      end\n\tend\n\t\n\tpattern = export.pattern_escape(pattern)\n\t\n\tif invoked then\n\t\ttext = mw.ustring.gsub(text, pattern, replacement)\n\t\treturn text\n\telse\n\t\treturn mw.ustring.gsub(text, pattern, replacement)\n\tend\nend\n\n--[[\nFormat the categories\
      \ with the appropriate sort key. CATEGORIES is a list of\ncategories.\n\t-- LANG is an object encapsulating a language; if nil, the object for\n\t   language code 'und' (undetermined) will be used.\n\t-- SORT_KEY is placed in the category invocation, and\
      \ indicates how the\n\t   page will sort in the respective category. Normally this should be nil,\n\t   and a default sort key based on the subpage name (the part after the\n\t   colon) will be used.\n\t-- SORT_BASE lets you override the default sort key\
      \ used when SORT_KEY is\n\t   nil. Normally, this should be nil, and a language-specific default sort\n\t   key is computed from the subpage name (e.g. for Russian this converts\n\t   Cyrillic ё to a string consisting of Cyrillic е followed by U+10FFFF,\n\
      \t   so that effectively ё sorts after е instead of the default Wikimedia\n\t   sort, which (I think) is based on Unicode sort order and puts ё after я,\n\t   the last letter of the Cyrillic alphabet.\n\t-- FORCE_OUTPUT forces normal output in all namespaces.\
      \ Normally, nothing\n\t   is output if the page isn't in the main, Appendix:, Reconstruction: or\n\t   Citations: namespaces.\n]]\nfunction export.format_categories(categories, lang, sort_key, sort_base, force_output, sc)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\
      \t\n\tif type(lang) == \"table\" and not lang.getCode then\n\t\terror(\"The second argument to format_categories should be a language object.\")\n\tend\n\t\n\tif force_output or data.allowedNamespaces[NAMESPACE] then\n\t\tlocal PAGENAME = mw.title.getCurrentTitle().text\n\
      \t\tlocal SUBPAGENAME = mw.title.getCurrentTitle().subpageText\n\t\t\n\t\tif not lang then\n\t\t\tlang = require(\"Module:languages\").getByCode(\"und\")\n\t\tend\n\t\t\n\t\t-- Generate a default sort key\n\t\tsort_base = lang:makeSortKey(sort_base or\
      \ SUBPAGENAME, sc)\n\t\t\n\t\tif sort_key and sort_key ~= \"\" then\n\t\t\t-- Gather some statistics regarding sort keys\n\t\t\tif mw.ustring.upper(sort_key) == sort_base then\n\t\t\t\ttable.insert(categories, \"Sort key tracking/redundant\")\n\t\t\tend\n\
      \t\telse\n\t\t\tsort_key = sort_base\n\t\tend\n\t\t\n\t\t--[[\tIf the resulting key is the same as the wiki software's\n\t\t\t\tdefault, or if the sortkey is empty, remove it\t\t\t ]]\n\t\tif sort_key == PAGENAME or sort_key == \"\" then\n\t\t\tsort_key\
      \ = nil\n\t\tend\n\t\t\n\t\tlocal out_categories = {}\n\t\tfor key, cat in ipairs(categories) do\n\t\t\tout_categories[key] = \"[[Category:\" .. cat .. (sort_key and \"|\" .. sort_key or \"\") .. \"]]\"\n\t\tend\n\t\t\n\t\treturn table.concat(out_categories,\
      \ \"\")\n\telse\n\t\treturn \"\"\n\tend\nend\n\n-- Used by {{categorize}}\nfunction export.template_categorize(frame)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\tlocal format = frame.args[\"format\"]\n\tlocal args = frame:getParent().args\n\
      \t\n\tlocal langcode = args[1]; if langcode == \"\" then langcode = nil end\n\tlocal sort_key = args[\"sort\"]; if sort_key == \"\" then sort_key = nil end\n\tlocal categories = {}\n\t\n\tif not langcode then\n\t\tif NAMESPACE == \"Template\" then return\
      \ \"\" end\n\t\terror(\"Language code has not been specified. Please pass parameter 1 to the template.\")\n\tend\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(langcode)\n\t\n\tif not lang then\n\t\tif NAMESPACE == \"Template\" then return\
      \ \"\" end\n\t\terror(\"The language code \\\"\" .. langcode .. \"\\\" is not valid.\")\n\tend\n\t\n\tlocal prefix = \"\"\n\t\n\tif format == \"pos\" then\n\t\tprefix = lang:getCanonicalName() .. \" \"\n\telseif format == \"topic\" then\n\t\tprefix = lang:getCode()\
      \ .. \":\"\n\tend\n\t\n\tlocal i = 2\n\tlocal cat = args[i]\n\t\n\twhile cat do\n\t\tif cat ~= \"\" then\n\t\t\ttable.insert(categories, prefix .. cat)\n\t\tend\n\t\t\n\t\ti = i + 1\n\t\tcat = args[i]\n\tend\n\t\n\treturn export.format_categories(categories,\
      \ lang, sort_key)\nend\n\nfunction export.catfix(lang, sc)\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"catfix/no lang\")\n\t\treturn nil\n\telseif type(lang) ~= \"table\" then\n\t\trequire(\"Module:debug\").track(\"catfix/lang not table\"\
      )\n\t\treturn nil\n\tend\n\tlocal canonicalName = lang:getCanonicalName() or error('The first argument to the function \"catfix\" should be a language object from Module:languages.')\n\t\n\tif sc and not sc.getCode then\n\t\terror('The second argument\
      \ to the function \"catfix\" should be a script object from Module:scripts.')\n\tend\n\t\n\t-- To add script classes to links on pages created by category boilerplate templates.\n\tif not sc then\n\t\tsc = data.catfix_scripts[lang:getCode()]\n\t\tif sc\
      \ then\n\t\t\tsc = require(\"Module:scripts\").getByCode(sc)\n\t\tend\n\tend\n\t\n\treturn \"&lt;span id=\\\"catfix\\\" style=\\\"display:none;\\\" class=\\\"CATFIX-\" .. mw.uri.anchorEncode(canonicalName) .. \"\\\"&gt;\" ..\n\t\trequire(\"Module:script\
      \ utilities\").tag_text(\"&amp;nbsp;\", lang, sc, nil) ..\n\t\t\"&lt;/span&gt;\"\nend\n\nfunction export.catfix_template(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t\t[2] = { alias_of = \"sc\" },\n\t\t[\"sc\"] = {},\n\t}\n\t\n\tlocal args = require(\"\
      Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal sc = args.sc\n\tif sc then\n\t\tsc = require(\"Module:scripts\"\
      ).getByCode(sc) or error('The script code \"' .. sc .. '\", provided in the second parameter, is not valid.')\n\tend\n\t\n\treturn export.catfix(lang, sc)\nend\n\n-- Not exporting because it is not used yet.\nlocal function getDateTense(frame) \n\tlocal\
      \ name_num_mapping = {[\"January\"] = 1, [\"February\"] = 2, [\"March\"] = 3, [\"April\"] = 4, [\"May\"] = 5, [\"June\"] = 6, \n\t\t[\"July\"] = 7, [\"August\"] = 8, [\"September\"] = 9, [\"October\"] = 10, [\"November\"] = 11, [\"December\"] = 12, \n\t\
      \t[1] = 1, [2] = 2, [3] = 3, [4] = 4, [5] = 5, [6] = 6, [7] = 7, [8] = 8, [9] = 9, [10] = 10, [11] = 11, [12] = 12}\n\tlocal month = name_num_mapping[frame.args[2]]\n\tlocal date = os.time({year = frame.args[1], day = frame.args[3], month = month})\n\t\
      local today = os.time() -- 12 AM/PM\n\tlocal diff = os.difftime(date, today)\n\tlocal daylength = 24 * 3600\n\t\n\tif diff &lt; -daylength / 2 then return \"past\"\n\telse \n\t\tif diff &gt; daylength / 2  then return \"future\"\n\t\telse return \"present\"\
      \ end\n\tend\nend\n\nfunction export.make_id(lang, str)\n\t--[[\tIf called with invoke, first argument is a frame object.\n\t\t\tIf called by a module, first argument is a language object. ]]\n\tlocal invoked = false\n\t\n\tif type(lang) == \"table\" then\n\
      \t\tif lang.args then\n\t\t\tinvoked = true\n\t\t\t\n\t\t\tlocal frame = lang\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = {},\n\t\t\t\t[2] = {},\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\
      \t\t\t\n\t\t\tlocal langCode = args[1]\n\t\t\tstr = args[2]\n\t\t\t\n\t\t\tlocal m_languages = require(\"Module:languages\")\n\t\t\t\n\t\t\tlang = m_languages.getByCode(langCode) or m_languages.err(langCode, 1)\n\t\telseif not lang.getCanonicalName then\n\
      \t\t\terror(\"The first argument to make_id should be a language object.\")\n\t\tend\n\tend\n\n\tif not ( type(str) == \"string\" or type(str) == \"number\" ) then\n\t\terror(\"The second argument to make_id should be a string or a number.\")\n\tend\n\t\
      \n\tlocal canonicalName = lang:getCanonicalName()\n\t\n\tstr = mw.uri.encode(str, \"WIKI\")\n\t\n\tlocal id = canonicalName .. \"-\" .. str\n\t\n\tif invoked then\n\t\treturn '&lt;li class=\"senseid\" id=\"' .. id .. '\"&gt;'\n\telse\n\t\treturn id\n\t\
      end\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:57.414Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43330 t=1555362537311633
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:57 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1341.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 508866132, 645050437, 698951944
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4099100\" pageid=\"4099100\" ns=\"828\" title=\"Module:script utilities\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T16:56:29Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 52248476 by [[Special:Contributions/Rua|Rua]] ([[User talk:Rua|talk]])\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\tModules used:\n\t[[Module:script utilities/data]]\n\
      \t[[Module:scripts]]\n\t[[Module:languages]]\n\t[[Module:parameters]]\n\t[[Module:utilities]]\n\t[[Module:debug]]\n]=]\n\nfunction export.is_Latin_script(sc)\n\t-- Latn, Latf, Latinx, nv-Latn, pjt-Latn\n\treturn sc:getCode():find(\"Lat\") and true or false\n\
      end\n\n-- Used by [[Template:lang]]\nfunction export.lang_t(frame)\n\tparams = {\n\t\t[1] = {},\n\t\t[2] = { allow_empty = true, default = \"\" },\n\t\t[\"sc\"] = {},\n\t\t[\"face\"] = {},\n\t\t[\"class\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\t\n\tlocal lang = args[1] or (NAMESPACE == \"Template\" and \"und\") or error(\"Language code has not been specified. Please pass parameter 1 to the template.\"\
      )\n\tlang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, 1)\n\t\n\tlocal text = args[2]\n\t\n\tlocal sc = args[\"sc\"]\n\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\
      \" .. sc .. \"\\\" is not valid.\")) or nil)\n\t\n\tlocal face = args[\"face\"]\n\t\n\treturn export.tag_text(text, lang, sc, face, class)\nend\n\n-- Ustring turns on the codepoint-aware string matching. The basic string function\n-- should be used for\
      \ simple sequences of characters, Ustring function for\n-- sets – [].\nlocal function trackPattern(text, pattern, tracking, ustring)\n\tlocal find = ustring and mw.ustring.find or string.find\n\tif pattern and find(text, pattern) then\n\t\trequire(\"Module:debug\"\
      ).track(\"script/\" .. tracking)\n\tend\nend\n\nlocal function track(text, lang, sc)\n\tlocal U = mw.ustring.char\n\t\n\tif lang and text then\n\t\tlocal langCode = lang:getCode()\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/ang/acute]]\n\
      \t\tif langCode == \"ang\" then\n\t\t\tlocal decomposed = mw.ustring.toNFD(text)\n\t\t\tlocal acute = U(0x301)\n\t\t\t\n\t\t\ttrackPattern(decomposed, acute, \"ang/acute\")\n\t\t\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-phi]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-theta]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-kappa]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-rho]]\n\t\t\tϑ, ϰ, ϱ, ϕ should generally\
      \ be replaced with θ, κ, ρ, φ.\n\t\t]=]\n\t\telseif langCode == \"el\" or langCode == \"grc\" then\n\t\t\ttrackPattern(text, \"ϑ\", \"Greek/wrong-theta\")\n\t\t\ttrackPattern(text, \"ϰ\", \"Greek/wrong-kappa\")\n\t\t\ttrackPattern(text, \"ϱ\", \"Greek/wrong-rho\"\
      )\n\t\t\ttrackPattern(text, \"ϕ\", \"Greek/wrong-phi\")\n\t\t\n\t\t\t--[=[\n\t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/spacing-coronis]]\n\t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/spacing-smooth-breathing]]\n\
      \t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/wrong-apostrophe]]\n\t\t\t\tWhen spacing coronis and spacing smooth breathing are used as apostrophes, \n\t\t\t\tthey should be replaced with right single quotation marks (’).\n\t\t\t\
      ]=]\n\t\t\tif langCode == \"grc\" then\n\t\t\t\ttrackPattern(text, U(0x1FBD), \"Ancient Greek/spacing-coronis\")\n\t\t\t\ttrackPattern(text, U(0x1FBF), \"Ancient Greek/spacing-smooth-breathing\")\n\t\t\t\ttrackPattern(text, \"[\" .. U(0x1FBD) .. U(0x1FBF)\
      \ .. \"]\", \"Ancient Greek/wrong-apostrophe\", true)\n\t\t\tend\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/Russian/grave-accent]]\n\t\telseif langCode == \"ru\" then\n\t\t\tlocal decomposed = mw.ustring.toNFD(text)\n\t\t\t\n\t\t\t\
      trackPattern(decomposed, U(0x300), \"Russian/grave-accent\")\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/Tibetan/trailing-punctuation]]\n\t\telseif langCode == \"bo\" then\n\t\t\ttrackPattern(text, \"[་།]$\", \"Tibetan/trailing-punctuation\"\
      , true)\n\t\t\ttrackPattern(text, \"[་།]%]%]$\", \"Tibetan/trailing-punctuation\", true)\n\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/broken-ae]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/broken-am]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/wrong-rue-lue]]\n\
      \t\t]=]\n\t\telseif langCode == \"th\" then\n\t\t\ttrackPattern(text, \"เ\"..\"เ\", \"Thai/broken-ae\")\n\t\t\ttrackPattern(text, \"ํ[่้๊๋]?า\", \"Thai/broken-am\", true)\n\t\t\ttrackPattern(text, \"[ฤฦ]า\", \"Thai/wrong-rue-lue\", true)\n\n\t\t--[=[\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Lao/broken-ae]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Lao/broken-am]]\n\t\t]=]\n\t\telseif langCode == \"lo\" then\n\t\t\ttrackPattern(text, \"ເ\"..\"ເ\", \"Lao/broken-ae\")\n\t\t\ttrackPattern(text,\
      \ \"ໍ[່້໊໋]?າ\", \"Lao/broken-am\", true)\n\t\tend\n\tend\nend\n\n-- Wrap text in the appropriate HTML tags with language and script class.\nfunction export.tag_text(text, lang, sc, face, class, id)\n\tif not sc then\n\t\tsc = require(\"Module:scripts\"\
      ).findBestScript(text, lang)\n\tend\n\t\n\ttrack(text, lang, sc)\n\t\t\n\t-- Replace space characters with newlines in Mongolian-script text, which is written top-to-bottom.\n\tif sc and sc:getDirection() == \"down\" then\n\t\t--[[\tFirst, escape targets\
      \ of wikilinks and HTML tags,\n\t\t\t\twhich should not have their spaces\n\t\t\t\treplaced with line breaks. ]]\n\t\tlocal escaped = {}\n\t\tlocal i = 0\n\t\tlocal escape_format = \"$%d\"\n\t\t\n\t\tlocal function escape(text, pattern, prefix)\n\t\t\t\
      return text:gsub(\n\t\t\t\tpattern,\n\t\t\t\tfunction(item)\n\t\t\t\t\ti = i + 1\n\t\t\t\t\tescaped[i] = item\n\t\t\t\t\treturn (prefix or \"\") .. escape_format:format(i)\n\t\t\t\tend)\n\t\tend\n\t\t\n\t\ttext = escape(text, \"%[%[([^|]+|)\", \"[[\")\n\
      \t\ttext = escape(text, \"&lt;[^&gt;]+&gt;\")\n\t\t\n\t\ttext = text:gsub(\" +\", \"&lt;br&gt;\")\n\t\t\n\t\t-- Unescape whatever was escaped.\n\t\ttext = text:gsub(\n\t\t\t\"$(%d)\",\n\t\t\tfunction(a)\n\t\t\t\ta = tonumber(a)\n\t\t\t\treturn escaped[a]\n\
      \t\t\tend\n\t\t)\n\tend\n\n\tif sc:getCode() == \"Imag\" then\n\t\tface = nil\n\tend\n\n\tlocal function class_attr(classes)\n\t\ttable.insert(classes, 1, sc:getCode())\n\t\tif class and class ~= '' then\n\t\t\ttable.insert(classes, class)\n\t\tend\n\t\
      \treturn 'class=\"' .. table.concat(classes, ' ') .. '\"'\n\tend\n\t\n\tlocal function tag_attr(...)\n\t\tlocal output = {}\n\t\tif id then\n\t\t\ttable.insert(output, 'id=\"' .. require(\"Module:utilities\").make_id(lang, id) .. '\"')\n\t\tend\n\t\t\n\
      \t\ttable.insert(output, class_attr({...}) )\n\t\t\n\t\tif lang then\n\t\t\ttable.insert(output, 'lang=\"' .. lang:getCode() .. '\"')\n\t\tend\n\t\t\n\t\treturn table.concat(output, \" \")\n\tend\n\t\n\tif face == \"hypothetical\" then\n\t-- [[Special:WhatLinksHere/Template:tracking/script-utilities/face/hypothetical]]\n\
      \t\trequire(\"Module:debug\").track(\"script-utilities/face/hypothetical\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").faces[face or \"nil\"]\n\t\n\tlocal post = \"\"\n\tif sc:getDirection() == \"rtl\" and (face == \"translation\"\
      \ or mw.ustring.find(text, \"%p$\")) then\n\t\tpost = \"&amp;lrm;\"\n\tend\n\t\n\t-- Add a script wrapper\n\tif data then\n\t\treturn ( data.prefix or \"\" ) .. '&lt;' .. data.tag .. ' ' .. tag_attr(data.class) .. '&gt;' .. text .. '&lt;/' .. data.tag\
      \ .. '&gt;' .. post\n\telse\n\t\terror('Invalid script face \"' .. face .. '\".')\n\tend\nend\n\nfunction export.tag_translit(translit, lang, kind, attributes, is_manual)\n\tif type(lang) == \"table\" then\n\t\tlang = lang.getCode and lang:getCode()\n\t\
      \t\tor error(\"Third argument to tag_translit should be a language code or language object.\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").translit[kind or \"default\"]\n\t\n\tlocal opening_tag = {}\n\t\n\ttable.insert(opening_tag,\
      \ data.tag)\n\tif lang == \"ja\" then\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. (is_manual and \"manual-tr \" or \"\") .. 'tr\"')\n\telse\n\t\ttable.insert(opening_tag, 'lang=\"' .. lang .. '-Latn\"\
      ')\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. (is_manual and \"manual-tr \" or \"\") .. 'tr Latn\"')\n\tend\n\t\n\tif data.dir then\n\t\ttable.insert(opening_tag, 'dir=\"' .. data.dir .. '\"')\n\tend\n\
      \t\n\ttable.insert(opening_tag, attributes)\n\t\n\treturn \"&lt;\" .. table.concat(opening_tag, \" \") .. \"&gt;\" .. translit .. \"&lt;/\" .. data.tag .. \"&gt;\"\nend\n\nfunction export.tag_transcription(transcription, lang, kind, attributes)\n\tif type(lang)\
      \ == \"table\" then\n\t\tlang = lang.getCode and lang:getCode()\n\t\t\tor error(\"Third argument to tag_translit should be a language code or language object.\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").transcription[kind\
      \ or \"default\"]\n\t\n\tlocal opening_tag = {}\n\t\n\ttable.insert(opening_tag, data.tag)\n\tif lang == \"ja\" then\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. 'ts\"')\n\telse\n\t\ttable.insert(opening_tag,\
      \ 'lang=\"' .. lang .. '-Latn\"')\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. 'ts Latn\"')\n\tend\n\t\n\tif data.dir then\n\t\ttable.insert(opening_tag, 'dir=\"' .. data.dir .. '\"')\n\tend\n\t\n\ttable.insert(opening_tag,\
      \ attributes)\n\t\n\treturn \"&lt;\" .. table.concat(opening_tag, \" \") .. \"&gt;\" .. transcription .. \"&lt;/\" .. data.tag .. \"&gt;\"\t\nend\n\n-- Add a notice to request the native script of a word\nfunction export.request_script(lang, sc)\n\tlocal\
      \ scripts = lang.getScripts and lang:getScripts() or error('The language \"' .. lang:getCode() .. '\" does not have the method getScripts. It may be unwritten.')\n\t\n\t-- By default, request for \"native\" script\n\tlocal cat_script = \"native\"\n\tlocal\
      \ disp_script = \"script\"\n\t\n\t-- If the script was not specified, and the language has only one script, use that.\n\tif not sc and #scripts == 1 then\n\t\tsc = scripts[1]\n\tend\n\t\n\t-- Is the script known?\n\tif sc then\n\t\t-- If the script is\
      \ Latin, return nothing.\n\t\tif export.is_Latin_script(sc) then\n\t\t\treturn \"\"\n\t\tend\n\t\t\n\t\tif sc:getCode() ~= scripts[1]:getCode() then\n\t\t\tdisp_script = sc:getCanonicalName()\n\t\tend\n\t\t\n\t\t-- The category needs to be specific to\
      \ script only if there is chance\n\t\t-- of ambiguity. This occurs when lang=und, or when the language has\n\t\t-- multiple scripts.\n\t\tif lang:getCode() == \"und\" or scripts[2] then\n\t\t\tcat_script = sc:getCanonicalName()\n\t\tend\n\telse\n\t\t--\
      \ The script is not known.\n\t\t-- Does the language have at least one non-Latin script in its list?\n\t\tlocal has_nonlatin = false\n\t\t\n\t\tfor i, val in ipairs(scripts) do\n\t\t\tif not export.is_Latin_script(val) then\n\t\t\t\thas_nonlatin = true\n\
      \t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- If there are non-Latin scripts, return nothing.\n\t\tif not has_nonlatin then\n\t\t\treturn \"\"\n\t\tend\n\tend\n\t\n\tlocal category = \"\"\n\t\n\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\
      \t\tcategory = \"[[Category:\" .. lang:getCanonicalName() .. \" terms needing \" .. cat_script .. \" script]]\"\n\tend\n\t\n\treturn \"&lt;small&gt;[\" .. disp_script .. \" needed]&lt;/small&gt;\" .. category\nend\n\nfunction export.template_rfscript(frame)\n\
      \tlocal args = frame.args\n\tlocal lang = args[1] or error(\"The first parameter (language code) has not been given\")\n\tlocal sc = args[\"sc\"]; if sc == \"\" then sc = nil end\n\tlang = require(\"Module:languages\").getByCode(lang) or error(\"The language\
      \ code \\\"\" .. lang .. \"\\\" is not valid.\")\n\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil)\n\t\n\tlocal ret = export.request_script(lang, sc)\n\t\n\tif ret ==\
      \ \"\" then\n\t\terror(\"This language is written in the Latin alphabet. It does not need a native script.\")\n\telse\n\t\treturn ret\n\tend\nend\n\nfunction export.checkScript(text, scriptCode, result)\n\tlocal scriptObject = require(\"Module:scripts\"\
      ).getByCode(scriptCode)\n\t\n\tif not scriptObject then\n\t\terror('The script code \"' .. scriptCode .. '\" is not recognized.')\n\tend\n\t\n\tlocal originalText = text\n\t\n\t-- Remove non-letter characters.\n\ttext = mw.ustring.gsub(text, \"[%A]\",\
      \ \"\")\n\t\n\t-- Remove all characters of the script in question.\n\ttext = mw.ustring.gsub(text, \"[\" .. scriptObject:getCharacters() .. \"]\", \"\")\n\t\n\tif text ~= \"\" then\n\t\tif type(result) == \"string\" then\n\t\t\terror(result)\n\t\telse\n\
      \t\t\terror('The text \"' .. originalText .. '\" contains the letters \"' .. text .. '\" that do not belong to the ' .. scriptObject:getCategoryName() .. '.', 2)\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:57.027Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44676 t=1555362536932588
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:57 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 922143278, 565160909, 686423122
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4216643\" pageid=\"4216643\" ns=\"828\" title=\"Module:scripts\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-02-03T10:53:06Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"that was incorrect, but it turns out there aren&#039;t even any scripts whose canonical names contain &quot;script&quot;, so it didn&#039;t cause problems\" xml:space=\"preserve\">local export = {}\nlocal\
      \ Script = {}\n\nfunction Script:getCode()\n\treturn self._code\nend\n\nfunction Script:getCanonicalName()\n\treturn self._rawData.canonicalName\nend\n\nfunction Script:getOtherNames()\n\treturn self._rawData.otherNames or {}\nend\n\nfunction Script:getParent()\n\
      \treturn self._rawData.parent\nend\n\nfunction Script:getSystems()\n\tif not self._systemObjects then\n\t\tlocal m_systems = require(\"Module:writing systems\")\n\t\tself._systemObjects = {}\n\t\t\n\t\tfor _, sys in ipairs(self._rawData.systems or {})\
      \ do\n\t\t\ttable.insert(self._systemObjects, m_systems.getByCode(sys))\n\t\tend\n\tend\n\t\n\treturn self._systemObjects\nend\n\n--function Script:getAllNames()\n--\treturn self._rawData.names\n--end\n\n\nfunction Script:getType()\n\treturn \"script\"\
      \nend\n\n\nfunction Script:getCategoryName()\n\tlocal name = self._rawData.canonicalName\n\t\n\t-- If the name already has \"code\" or \"semaphore\" in it, don't add it.\n\t-- No names contain \"script\".\n\tif name:find(\"[Cc]ode$\") or name:find(\"[Ss]emaphore$\"\
      ) then\n\t\treturn name\n\telse\n\t\treturn name .. \" script\"\n\tend\nend\n\n\nfunction Script:getWikipediaArticle()\n\treturn self._rawData.wikipedia_article or self:getCategoryName()\nend\n\n\nfunction Script:getCharacters()\n\tif self._rawData.characters\
      \ then\n\t\treturn self._rawData.characters\n\telse\n\t\treturn nil\n\tend\nend\n\n\nfunction Script:countCharacters(text)\n\tif not self._rawData.characters then\n\t\treturn 0\n\telse\n\t\tlocal _, num = mw.ustring.gsub(text, \"[\" .. self._rawData.characters\
      \ .. \"]\", \"\")\n\t\treturn num\n\tend\nend\n\nfunction Script:getDirection()\n\tlocal direction = self._rawData.direction\n\tif not direction then\n\t\treturn nil\n\telse\n\t\treturn direction\n\tend\nend\n\n\nfunction Script:getRawData()\n\treturn\
      \ self._rawData\nend\n\n\nfunction Script:toJSON()\n\tlocal ret = {\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\totherNames = self:getOtherNames(),\n\t\ttype = self:getType(),\n\t\
      \t}\n\t\n\treturn require(\"Module:JSON\").toJSON(ret)\nend\n\n\nScript.__index = Script\n\n\nfunction export.makeObject(code, data)\n\treturn data and setmetatable({ _rawData = data, _code = code }, Script) or nil\nend\n\n\nfunction export.getByCode(code)\n\
      \tif code == \"IPAchar\" then\n\t\trequire(\"Module:debug\").track(\"IPAchar\")\n\tend\n\treturn export.makeObject(code, mw.loadData(\"Module:scripts/data\")[code])\nend\n\nfunction export.getByCanonicalName(name)\n\tlocal code = mw.loadData(\"Module:scripts/by\
      \ name\")[name]\n\t\n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, mw.loadData(\"Module:scripts/data\")[code])\nend\n\n-- Find the best script to use, based on the characters of a string.\nfunction export.findBestScript(text,\
      \ lang)\n\tif not text or not lang or not lang.getScripts then\n\t\treturn export.getByCode(\"None\")\n\tend\n\t\n\tlocal scripts = lang:getScripts()\n\t\n\tif not scripts[2] then\n\t\treturn scripts[1]\n\tend\n\t\n\t--[=[\n\t\tRemove any HTML entities;\
      \ catfix function in [[Module:utilities]]\n\t\tadds tagging to a no-break space (&amp;nbsp;), which contains Latin characters;\n\t\thence Latin was returned as the script if \"Latn\" is one of the language's scripts.\n\t]=]\n\ttext = string.gsub(text,\
      \ \"&amp;[a-zA-Z0-9]+;\", \"\")\n\t\n\t-- Try to match every script against the text,\n\t-- and return the one with the most matching characters.\n\tlocal bestcount = 0\n\tlocal bestscript = nil\n\t\n\t-- Get length of text minus any spacing or punctuation\
      \ characters.\n\t-- Counting instances of UTF-8 character pattern is faster than mw.ustring.len.\n\tlocal _, length = string.gsub(mw.ustring.gsub(text, \"[%s%p]+\", \"\"), \"[\\1-\\127\\194-\\244][\\128-\\191]*\", \"\")\n\t\n\tif length == 0 then\n\t\t\
      return export.getByCode(\"None\")\n\tend\n\t\n\tfor i, script in ipairs(scripts) do\n\t\tlocal count = script:countCharacters(text)\n\t\t\n\t\tif count &gt;= length then\n\t\t\treturn script\n\t\tend\n\t\t\n\t\tif count &gt; bestcount then\n\t\t\tbestcount\
      \ = count\n\t\t\tbestscript = script\n\t\tend\n\tend\n\t\n\tif bestscript then\n\t\treturn bestscript\n\tend\n\t\n\t-- No matching script was found. Return \"None\".\n\treturn export.getByCode(\"None\")\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:57.228Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44605 t=1555362537106452
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:57 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1343.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 760186085, 654476406, 696891906
    body: !!binary |-
      
- recorded: 2019-04-15T21:08:58.737Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aja-r&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=67265 t=1555362538625417
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1255'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:58 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 209760691, 549453225, 705724548
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4177600" pageid="4177600" ns="10" title="Template:ja-r"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T18:40:40Z" contentformat="text/x-wiki"
      contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:ja-r]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow
      only template editors and administrators] (indefinite))" xml:space="preserve">&lt;includeonly&gt;{{#invoke:ja-link|show}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:08:58.936Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aja-link&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49341 t=1555362538836281
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:58 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1280.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 582634076, 481589806, 684349682
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4204806\" pageid=\"4204806\" ns=\"828\" title=\"Module:ja-link\"><revisions><rev user=\"Suzukaze-c\" timestamp=\"2019-02-21T04:06:58Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"allowSelfLink\" xml:space=\"preserve\">local export = {}\nlocal m_ja = require(\"Module:ja\")\nlocal lang = require(\"Module:languages\").getByCode(\"ja\")\nlocal sc = require(\"Module:scripts\"\
      ).getByCode(\"Jpan\")\nlocal m_links = require(\"Module:links\")\n\nlocal function if_not_empty(var)\n\tif var == \"\" then\n\t\treturn nil\n\telse\n\t\treturn var\n\tend\nend\n\n-- Similar to test_script function in [[Module:ja-usex]] and [[Module:headword]].\n\
      local function is_script(text, script_codes)\n\tif type(script_codes) == \"string\" then\n\t\tscript_codes = { script_codes }\n\tend\n\t\n\tif type(text) == \"string\" and type(script_codes) == \"table\" then\n\t\tlocal characters = {}\n\t\t\n\t\tfor i,\
      \ script_code in pairs(script_codes) do\n\t\t\tlocal sc = require(\"Module:scripts\").getByCode(script_code)\n\t\t\tif sc and sc:getCharacters() then\n\t\t\t\ttable.insert(characters, sc:getCharacters())\n\t\t\telse\n\t\t\t\terror(\"The script code \"\
      \ .. script_code .. \" is invalid, or has no characters listed.\")\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal out\n\t\tif #characters &gt; 0 then\n\t\t\ttext = mw.ustring.gsub(text, \"%W\", \"\")\n\t\t\tout = mw.ustring.find(text, \"^[\" .. table.concat(characters)\
      \ .. \"]+$\")\n\t\telse\n\t\t\treturn nil\n\t\tend\n\t\t\n\t\tif out then\n\t\t\treturn true\n\t\telse\n\t\t\treturn false\n\t\tend\n\telse\n\t\tmw.log(\"Parameters to test_script were incorrect.\")\n\t\treturn nil\n\tend\nend\n\nlocal function track(code)\n\
      \trequire(\"Module:debug\").track(\"ja-link/\" .. code)\nend\n\nfunction export.link(data, options)\n\tif not options then\n\t\toptions = {}\n\tend\n\t\n\tif not data.transliteration then\n\t\tdata.transliteration = m_ja.kana_to_romaji(data.kana, { hist\
      \ = options.hist })\n\telseif options.hist then\n\t\terror('If the transliteration has already been provided, the \"' .. hist .. '\" option does nothing.')\n\tend\n\t\n\tif not data.kana then\n\t\tdata.kana = data.lemma\n\tend\n\n\tif require(\"Module:scripts\"\
      ).getByCode('Hani'):countCharacters(data.transliteration) &gt; 0 then\n\t\terror('The transliteration \"' .. data.transliteration .. '\" seems to have kanji in it. Was the kana reading properly provided?')\n\tend\n\tif options.caps then\n\t\t--[[Special:WhatLinksHere/Template:tracking/ja-link/caps]]\n\
      \t\ttrack(\"caps\")\n\t\t\n\t\tdata.transliteration = mw.ustring.gsub(data.transliteration, \"^%l\", mw.ustring.upper)\n\t\tdata.transliteration = mw.ustring.gsub(data.transliteration, \" %l\", mw.ustring.upper)\n\tend\n\tif data.transliteration ~= '-'\
      \ then\n\t\tdata.transliteration = m_links.remove_links(data.transliteration) -- needed if $lemma has manual wikilinks\n\t\tdata.transliteration = require(\"Module:script utilities\").tag_translit(data.transliteration, \"ja\", \"term\")\n\tend\n\t\n\t\
      if data.lemma and data.kana and data.lemma ~= data.kana then\n\t\tdata.ruby = m_ja.add_ruby_backend(data.lemma, data.kana)\n\telse\n\t\t--[[Special:WhatLinksHere/Template:tracking/ja-link/no ruby]]\n\t\ttrack(\"no ruby\")\n\tend\n\tdata.lemma = m_ja.remove_ruby_markup(data.lemma)\n\
      \t\n\tdata.gloss = if_not_empty(data.gloss)\n\t\n\tdata.pos = if_not_empty(data.pos)\n\t\n\tif data.linkto == \"\" or data.linkto == \"-\" then\n\t\t-- if $data.linkto is explicitly empty, make both $data.linkto and $data.lemma nil\n\t\t-- $data.linkto\
      \ can be \"\" because of \"allow_empty=true\"; without it, \"|linkto=&lt;nothing&gt;\" would be ignored\n\t\t-- $data.lemma is the fallback if $data.linkto is falsy, so blank $data.lemma too\n\t\tif if_not_empty(data.linkto) then\n\t\t\t--[[Special:WhatLinksHere/Template:tracking/ja-link/ignored\
      \ link page]]\n\t\t\ttrack(\"ignored link page\")\n\t\tend\n\t\tif if_not_empty(data.lemma) then\n\t\t\t--[[Special:WhatLinksHere/Template:tracking/ja-link/ignored lemma]]\n\t\t\ttrack(\"ignored lemma\")\n\t\tend\n\t\tdata.linkto = nil\n\t\tdata.lemma\
      \ = nil\n\t\toptions.noLink = true\n\t\t\n\t\t--[[Special:WhatLinksHere/Template:tracking/ja-link/disabled link]]\n\t\ttrack(\"disabled link\")\n\tend\n\n\tif data.ruby and data.ruby:find('[[', 1, true) then -- for if $lemma has manual wikilinks\n\t\t\
      --[[Special:WhatLinksHere/Template:tracking/ja-link/manual wikilink]]\n\t\ttrack(\"manual wikilink\")\n\t\t\n\t\treturn m_links.full_link(\n\t\t\t{\n\t\t\t\tlang = lang,\n\t\t\t\tsc = sc,\n\t\t\t\tterm = nil,\n\t\t\t\talt = data.ruby,\n\t\t\t\ttr = data.transliteration,\n\
      \t\t\t\tgloss = data.gloss,\n\t\t\t\tlit = data.lit,\n\t\t\t\tpos = data.pos,\n\t\t\t},\n\t\t\tnil, -- face\n\t\t\ttrue -- allowSelfLink\n\t\t)\n\telse\n\t\treturn m_links.full_link(\n\t\t\t{\n\t\t\t\tlang = lang,\n\t\t\t\tsc = sc,\n\t\t\t\tterm = not\
      \ options.noLink and (data.linkto or data.lemma),\n\t\t\t\talt = data.ruby or data.lemma or data.kana,\n\t\t\t\ttr = data.transliteration,\n\t\t\t\tgloss = data.gloss,\n\t\t\t\tlit = data.lit,\n\t\t\t\tpos = data.pos,\n\t\t\t},\n\t\t\tnil, -- face\n\t\t\
      \ttrue -- allowSelfLink\n\t\t)\n\tend\n\t\nend\n\nfunction export.show(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t['gloss'] = { alias_of = 3 },\n\t\t['lit'] = {},\n\t\t['pos'] = {},\n\t\t['linkto'] = {\
      \ allow_empty = true },\n\t\t['caps'] = { type = \"boolean\" },\n\t\t['rom'] = {},\n\t\t['hist'] = { type = \"boolean\" },\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal kana = args[2]\n\tif not\
      \ kana then\n\t\tif args[1] and is_script(args[1], { \"Hira\", \"Kana\" }) then\n\t\t\tkana = args[1]\n\t\telse\n\t\t\terror(\"Either the first parameter or the second parameter should be Japanese text written in kana only.\")\n\t\tend\n\tend\n\n\tlocal\
      \ data = {\n\t\tlemma = args[1],\n\t\tkana = kana,\n\t\tgloss = args[3],\n\t\tlit = args[\"lit\"],\n\t\tpos = args[\"pos\"],\n\t\tlinkto = args[\"linkto\"],\n\t\ttransliteration = args[\"rom\"],\n\t}\n\t\n\tlocal options = {\n\t\tcaps = args[\"caps\"],\n\
      \t\thist = args[\"hist\"],\n\t}\n\t\n\treturn export.link(data, options)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:59.180Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aja&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56495 t=1555362539014470
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:59 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1285.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 506148852, 507317758, 703369431
    body: !!binary |-
      
- recorded: 2019-04-15T21:08:59.582Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aja%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=164735 t=1555362539288373
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:59 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1284.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 416599121, 826067262, 700818766
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5592551\" pageid=\"5592551\" ns=\"828\" title=\"Module:ja/data\"><revisions><rev user=\"Suzukaze-c\" timestamp=\"2018-07-01T03:54:30Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local data = {}\n\n-- romaji with diacritics to romaji without\ndata.rd={\n\t['ā']='aa',['ē']='ee',['ī']='ii',['ō']='ou',['ū']='uu'\n};\n\n-- **OLD VERSION**\n\
      -- **do not remove until [[Special:WhatLinksHere/Template:tracking/ja/k2r_diff]] is OK**\n-- equivalent katakana = romaji pairs, k=r or kr\n-- clever trick: replaces ン with n@\ndata.kr_old={\n\t[\"ア\"] = \"a\", [\"イ\"] = \"i\", [\"イィ\"] = \"yi\", [\"イェ\
      \"] = \"ye\", [\"ウ\"] = \"u\", [\"ヴ\"] = \"vu\", [\"ヴァ\"] = \"va\", [\"ヴィ\"] = \"vi\", [\"ヴィェ\"] = \"vye\", [\"ヴェ\"] = \"ve\", [\"ヴォ\"] = \"vo\", [\"ヴャ\"] = \"vya\", [\"ヴュ\"] = \"vyu\", [\"ヴョ\"] = \"vyo\", [\"ウァ\"] = \"wa\", [\"ウィ\"] = \"wi\", [\"ウゥ\"\
      ] = \"wu\", [\"ウェ\"] = \"we\", [\"ウォ\"] = \"wo\", [\"ウュ\"] = \"wyu\", [\"エ\"] = \"e\", [\"オ\"] = \"o\", [\"カ\"] = \"ka\", [\"キ\"] = \"ki\", [\"キェ\"] = \"kye\", [\"キャ\"] = \"kya\", [\"キュ\"] = \"kyu\", [\"キョ\"] = \"kyo\", [\"ガ\"] = \"ga\", [\"ギ\"] = \"gi\"\
      , [\"ギェ\"] = \"gye\", [\"ギャ\"] = \"gya\", [\"ギュ\"] = \"gyu\", [\"ギョ\"] = \"gyo\", [\"ク\"] = \"ku\", [\"クァ\"] = \"kwa\", [\"クィ\"] = \"kwi\", [\"クェ\"] = \"kwe\", [\"クォ\"] = \"kwo\", [\"クヮ\"] = \"kwa\", [\"グ\"] = \"gu\", [\"グァ\"] = \"gwa\", [\"グィ\"] = \"\
      gwi\", [\"グェ\"] = \"gwe\", [\"グォ\"] = \"gwo\", [\"グヮ\"] = \"gwa\", [\"ケ\"] = \"ke\", [\"ゲ\"] = \"ge\", [\"コ\"] = \"ko\", [\"ゴ\"] = \"go\", [\"サ\"] = \"sa\", [\"ザ\"] = \"za\", [\"シ\"] = \"shi\", [\"シェ\"] = \"she\", [\"シャ\"] = \"sha\", [\"シュ\"] = \"shu\"\
      , [\"ショ\"] = \"sho\", [\"ジ\"] = \"ji\", [\"ジェ\"] = \"je\", [\"ジャ\"] = \"ja\", [\"ジュ\"] = \"ju\", [\"ジョ\"] = \"jo\", [\"ス\"] = \"su\", [\"スィ\"] = \"si\", [\"ズ\"] = \"zu\", [\"ズィ\"] = \"zi\", [\"セ\"] = \"se\", [\"ゼ\"] = \"ze\", [\"ソ\"] = \"so\", [\"ゾ\"]\
      \ = \"zo\", [\"タ\"] = \"ta\", [\"ダ\"] = \"da\", [\"チ\"] = \"chi\", [\"チェ\"] = \"che\", [\"チャ\"] = \"cha\", [\"チュ\"] = \"chu\", [\"チョ\"] = \"cho\", [\"ヂ\"] = \"ji\", [\"ヂャ\"] = \"ja\", [\"ヂュ\"] = \"ju\", [\"ヂョ\"] = \"jo\", [\"ヅ\"] = \"zu\", [\"ツ\"] = \"\
      tsu\", [\"ツァ\"] = \"tsa\", [\"ツィ\"] = \"tsi\", [\"ツェ\"] = \"tse\", [\"ツォ\"] = \"tso\", [\"ツュ\"] = \"tsyu\", [\"テ\"] = \"te\", [\"ティ\"] = \"ti\", [\"テュ\"] = \"tyu\", [\"デ\"] = \"de\", [\"ディ\"] = \"di\", [\"デュ\"] = \"dyu\", [\"ト\"] = \"to\", [\"トゥ\"] = \"\
      tu\", [\"ド\"] = \"do\", [\"ドゥ\"] = \"du\", [\"ナ\"] = \"na\", [\"ニ\"] = \"ni\", [\"ニェ\"] = \"nye\", [\"ニャ\"] = \"nya\", [\"ニュ\"] = \"nyu\", [\"ニョ\"] = \"nyo\", [\"ヌ\"] = \"nu\", [\"ネ\"] = \"ne\", [\"ノ\"] = \"no\", [\"ハ\"] = \"ha\", [\"バ\"] = \"ba\", [\"\
      パ\"] = \"pa\", [\"ヒ\"] = \"hi\", [\"ビ\"] = \"bi\", [\"ピ\"] = \"pi\", [\"ヒェ\"] = \"hye\", [\"ヒャ\"] = \"hya\", [\"ヒュ\"] = \"hyu\", [\"ヒョ\"] = \"hyo\", [\"ビェ\"] = \"bye\", [\"ピェ\"] = \"pye\", [\"ビャ\"] = \"bya\", [\"ピャ\"] = \"pya\", [\"ビュ\"] = \"byu\", [\"\
      ピュ\"] = \"pyu\", [\"ビョ\"] = \"byo\", [\"ピョ\"] = \"pyo\", [\"フ\"] = \"fu\", [\"ファ\"] = \"fa\", [\"フィ\"] = \"fi\", [\"ブィ\"] = \"bi\", [\"フィェ\"] = \"fye\", [\"フェ\"] = \"fe\", [\"フォ\"] = \"fo\", [\"フャ\"] = \"fya\", [\"フュ\"] = \"fyu\", [\"フョ\"] = \"fyo\", [\"\
      ブ\"] = \"bu\", [\"プ\"] = \"pu\", [\"ヘ\"] = \"he\", [\"ベ\"] = \"be\", [\"ペ\"] = \"pe\", [\"ホ\"] = \"ho\", [\"ボ\"] = \"bo\", [\"ポ\"] = \"po\", [\"ホゥ\"] = \"hu\", [\"マ\"] = \"ma\", [\"ミ\"] = \"mi\", [\"ミェ\"] = \"mye\", [\"ミャ\"] = \"mya\", [\"ミュ\"] = \"myu\"\
      , [\"ミョ\"] = \"myo\", [\"ム\"] = \"mu\", [\"メ\"] = \"me\", [\"モ\"] = \"mo\", [\"ヤ\"] = \"ya\", [\"ユ\"] = \"yu\", [\"ヨ\"] = \"yo\", [\"ラ\"] = \"ra\", [\"リ\"] = \"ri\", [\"ラ゜\"] = \"la\", [\"リ゜\"] = \"li\", [\"リェ\"] = \"rye\", [\"リャ\"] = \"rya\", [\"リュ\"\
      ] = \"ryu\", [\"リョ\"] = \"ryo\", [\"ル\"] = \"ru\", [\"ル゜\"] = \"lu\", [\"レ゜\"] = \"le\", [\"レ\"] = \"re\", [\"ロ\"] = \"ro\", [\"ロ゜\"] = \"lo\", [\"ワ\"] = \"wa\", [\"ヷ\"] = \"va\", [\"ヰ\"] = \"wi\", [\"ヸ\"] = \"vi\", [\"ヱ\"] = \"we\", [\"ヹ\"] = \"ve\",\
      \ [\"ヲ\"] = \"o\", [\"ヺ\"] = \"vo\", [\"ン\"] = \"n@\",\n\t[\"アァ\"] = \"ā\", \n\t[\"ハァ\"] = \"hā\", \n\t[\"ヨォ\"] = \"yō\", [\"ヤァ\"] = \"yā\", [\"ユゥ\"] = \"yū\",\n\t[\"ナァ\"] = \"nā\", [\"ネェ\"] = \"nē\",\n\n\t--[===[\n\t[\"、\"] = \", \", [\"。\"] = \". \"\
      , [\"・\"] = \" \", [\"「\"] = '“', [\"」\"] = '”', [\"『\"] = '“', [\"』\"] = '”', [\"＝\"] = \"-\", [\"゠\"] = \"-\", [\"，\"] = \", \", [\"：\"] = \": \", [\"～\"] = \"~\", \n\t[\"〰\"] = \"~\",\n\t]===]\n\n\t[\"・\"] = \" \",\n\t[\"！\"] = \"◆!◇\", [\"？\"] = \"\
      ◆?◇\",\n\t[\"（\"] = \"◇(◆\", [\"）\"] = \"◆)◇\",\n\t[\"「\"] = '◇“◆', [\"」\"] = '◆”◇', [\"『\"] = '◇“◆', [\"』\"] = '◆”◇', [\"“\"] = '◇“◆', [\"”\"] = '◆”◇',\n\t[\"：\"] = \"◆:◇\",\n\t[\"～\"] = \"~\", [\"〜\"] = \"~\", [\"〰\"] = \"~\", -- fullwidth tilde vs.\
      \ wave dash vs. fancy chouonpu\n\t[\"、\"] = \"◆,◇\", [\"，\"] = \"◆,◇\",           -- ideographic comma vs. fullwidth comma\n\t[\"＝\"] = \"-\", [\"゠\"] = \"-\",               -- fullwidth equals sign vs. official unicode character\n\t[\"※\"] = \"◆†◇\",\n\
      };\t\n\n-- **NEW VERSION**\n-- equivalent katakana = romaji pairs, k=r or kr\n-- clever trick: replaces ン with n¤\n-- x=sh, q=ch, c=ts\ndata.kr={\n\t[\"ア\"] =  \"a\", [\"イ\"] =  \"i\", [\"ウ\"] =  \"u\", [\"エ\"] =  \"e\", [\"オ\"] =  \"o\",\n\t[\"カ\"] =\
      \ \"ka\", [\"キ\"] = \"ki\", [\"ク\"] = \"ku\", [\"ケ\"] = \"ke\", [\"コ\"] = \"ko\",\n\t[\"サ\"] = \"sa\", [\"シ\"] = \"xi\", [\"ス\"] = \"su\", [\"セ\"] = \"se\", [\"ソ\"] = \"so\",\n\t[\"タ\"] = \"ta\", [\"チ\"] = \"qi\", [\"ツ\"] = \"cu\", [\"テ\"] = \"te\", [\"\
      ト\"] = \"to\",\n\t[\"ナ\"] = \"na\", [\"ニ\"] = \"ni\", [\"ヌ\"] = \"nu\", [\"ネ\"] = \"ne\", [\"ノ\"] = \"no\",\n\t[\"ハ\"] = \"ha\", [\"ヒ\"] = \"hi\", [\"フ\"] = \"fu\", [\"ヘ\"] = \"he\", [\"ホ\"] = \"ho\",\n\t[\"マ\"] = \"ma\", [\"ミ\"] = \"mi\", [\"ム\"] = \"\
      mu\", [\"メ\"] = \"me\", [\"モ\"] = \"mo\",\n\t[\"ヤ\"] = \"ya\",                [\"ユ\"] = \"yu\",                [\"ヨ\"] = \"yo\",\n\t[\"ラ\"] = \"ra\", [\"リ\"] = \"ri\", [\"ル\"] = \"ru\", [\"レ\"] = \"re\", [\"ロ\"] = \"ro\",\n\t[\"ワ\"] = \"wa\", [\"ヰ\"] =\
      \ \"wi\",                [\"ヱ\"] = \"we\", [\"ヲ\"] =  \"o\",\n\n\t[\"ン\"] = \"n¤\",\n\n\t[\"ガ\"] = \"ga\", [\"ギ\"] = \"gi\", [\"グ\"] = \"gu\", [\"ゲ\"] = \"ge\", [\"ゴ\"] = \"go\",\n\t[\"ザ\"] = \"za\", [\"ジ\"] = \"ji\", [\"ズ\"] = \"zu\", [\"ゼ\"] = \"ze\"\
      , [\"ゾ\"] = \"zo\",\n\t[\"ダ\"] = \"da\", [\"ヂ\"] = \"ji\", [\"ヅ\"] = \"zu\", [\"デ\"] = \"de\", [\"ド\"] = \"do\",\n\t[\"バ\"] = \"ba\", [\"ビ\"] = \"bi\", [\"ブ\"] = \"bu\", [\"ベ\"] = \"be\", [\"ボ\"] = \"bo\",\n\t[\"パ\"] = \"pa\", [\"ピ\"] = \"pi\", [\"プ\"\
      ] = \"pu\", [\"ペ\"] = \"pe\", [\"ポ\"] = \"po\",\n\t[\"ヷ\"] = \"va\", [\"ヸ\"] = \"vi\", [\"ヴ\"] = \"vu\", [\"ヹ\"] = \"ve\", [\"ヺ\"] = \"vo\",\n\n\t[\"・\"] = \" \",\n\t[\"！\"] = \"◆!◇\", [\"？\"] = \"◆?◇\",\n\t[\"（\"] = \"◇(◆\", [\"）\"] = \"◆)◇\",\n\t[\"「\
      \"] = '◇“◆', [\"」\"] = '◆”◇', [\"『\"] = '◇“◆', [\"』\"] = '◆”◇', [\"“\"] = '◇“◆', [\"”\"] = '◆”◇',\n\t[\"：\"] = \"◆:◇\",\n\t[\"～\"] = \"~\", [\"〜\"] = \"~\", [\"〰\"] = \"~\", -- fullwidth tilde vs. wave dash vs. fancy chouonpu\n\t[\"、\"] = \"◆,◇\", [\"，\
      \"] = \"◆,◇\",           -- ideographic comma vs. fullwidth comma\n\t[\"＝\"] = \"-\", [\"゠\"] = \"-\",               -- fullwidth equals sign vs. official unicode character\n\t[\"※\"] = \"◆†◇\",\n\t-- [\"。\"] = \"◆.◇\", -- fullwidth period is handled by\
      \ the module code itself\n};\n\n-- equivalent romaji = katakana pairs, r=k or rk\ndata.rk={\n\t['wyu']='ウュ',['vyu']='ヴュ',['vyo']='ヴョ',['vye']='ヴィェ',['vya']='ヴャ',['tyu']='テュ',['ryu']='リュ',['ryo']='リョ',['rye']='リェ',['rya']='リャ',['pyu']='ピュ',['pyo']='ピョ',['pye']='ピ\
      ェ',['pya']='ピャ',['nyu']='ニュ',['nyo']='ニョ',['nye']='ニェ',['nya']='ニャ',['myu']='ミュ',['myo']='ミョ',['mye']='ミェ',['mya']='ミャ',['kyu']='キュ',['kyo']='キョ',['kye']='キェ',['kya']='キャ',['kwo']='クォ',['kwi']='クィ',['kwe']='クェ',['kwa']='クァ',['kwa']='クヮ',['hyu']='ヒュ',['hyo']='ヒ\
      ョ',['hye']='ヒェ',['hya']='ヒャ',['gyu']='ギュ',['gyo']='ギョ',['gye']='ギェ',['gya']='ギャ',['gwo']='グォ',['gwi']='グィ',['gwe']='グェ',['gwa']='グァ',['gwa']='グヮ',['fyu']='フュ',['fyo']='フョ',['fye']='フィェ',['fya']='フャ',['dyu']='デュ',['byu']='ビュ',['byo']='ビョ',['bye']='ビェ',['bya']='ビ\
      ャ',['zu']='ズ',['zo']='ゾ',['zi']='ズィ',['ze']='ゼ',['za']='ザ',['yu']='ユ',['yo']='ヨ',['yi']='イィ',['ye']='イェ',['ya']='ヤ',['wu']='ウゥ',['wo']='ウォ',['wi']='ウィ',['we']='ウェ',['wa']='ワ',['vu']='ヴ',['vo']='ヴォ',['vi']='ヴィ',['ve']='ヴェ',['va']='ヴァ',['tu']='トゥ',['to']='ト\
      ',['ti']='ティ',['te']='テ',['ta']='タ',['su']='ス',['so']='ソ',['si']='スィ',['se']='セ',['sa']='サ',['ru']='ル',['ro']='ロ',['ri']='リ',['re']='レ',['ra']='ラ',['pu']='プ',['po']='ポ',['pi']='ピ',['pe']='ペ',['pa']='パ',['mu']='ム',['mo']='モ',['mi']='ミ',['me']='メ',['ma']='マ\
      ',['lu']='ル゜',['lo']='ロ゜',['li']='リ゜',['le']='レ゜',['la']='ラ゜',['ku']='ク',['ko']='コ',['ki']='キ',['ke']='ケ',['ka']='カ',['ju']='ジュ',['jo']='ジョ',['ji']='ジ',['je']='ジェ',['ja']='ジャ',['hu']='ホゥ',['ho']='ホ',['hi']='ヒ',['he']='ヘ',['ha']='ハ',['gu']='グ',['go']='ゴ\
      ',['gi']='ギ',['ge']='ゲ',['ga']='ガ',['fu']='フ',['fo']='フォ',['fi']='フィ',['fe']='フェ',['fa']='ファ',['du']='ドゥ',['do']='ド',['di']='ディ',['de']='デ',['da']='ダ',['bu']='ブ',['bo']='ボ',['bi']='ビ',['be']='ベ',['ba']='バ'\n};\n\n-- hiragana with dakuten to empty\ndata.dakuten={\n\
      \t['が']='',['ぎ']='',['ぐ']='',['げ']='',['ご']='',['ざ']='',['じ']='',['ず']='',['ぜ']='',['ぞ']='',['だ']='',['ぢ']='',['づ']='',['で']='',['ど']='',['ば']='',['び']='',['ぶ']='',['べ']='',['ぼ']='',['ゔ']=''\n}\n\n-- hiragana with dakuten or handakuten to those without\n\
      data.tenconv={\n\t['が']='か',['ぎ']='き',['ぐ']='く',['げ']='け',['ご']='こ',['ざ']='さ',['じ']='し',['ず']='す',['ぜ']='せ',['ぞ']='そ',['だ']='た',['ぢ']='ち',['づ']='つ',['で']='て',['ど']='と',['ば']='は',['び']='ひ',['ぶ']='ふ',['べ']='へ',['ぼ']='ほ',['ぱ']='は',['ぴ']='ひ',['ぷ']='ふ',['ぺ\
      ']='へ',['ぽ']='ほ',['ゔ']='う'\n}\n\n-- hiragana with handakuten to empty\ndata.handakuten={\n\t['ぱ']='',['ぴ']='',['ぷ']='',['ぺ']='',['ぽ']=''\n}\n\n-- all small hiragana except small tsu (useful when counting morae)\ndata.nonmora_to_empty={\n\t['ぁ']='',['ぅ\
      ']='',['ぃ']='',['ぇ']='',['ぉ']='',['ゃ']='',['ゅ']='',['ょ']=''\n}\n\ndata.longvowels={\n\t['あー']='ああ',['いー']='いい',['うー']='うう',['えー']='ええ',['おー']='おお',['ぁー']='ぁあ',['ぃー']='ぃい',['ぅー']='ぅう',['ぇー']='ぇえ',['ぉー']='ぉお', ['かー']='かあ',['きー']='きい',['くー']='くう',['けー']='け\
      え',['こー']='こお',['さー']='さあ',['しー']='しい',['すー']='すう',['せー']='せえ',['そー']='そお',['たー']='たあ',['ちー']='ちい',['つー']='つう',['てー']='てえ',['とー']='とお',['なー']='なあ',['にー']='にい',['ぬー']='ぬう',['ねー']='ねえ',['のー']='のお',['はー']='はあ',['ひー']='ひい',['ふー']='ふう',['へー']='へえ',['ほー']='ほ\
      お',['まー']='まあ',['みー']='みい',['むー']='むう',['めー']='めえ',['もー']='もお',['やー']='やあ',['ゆー']='ゆう',['よー']='よお',['ゃー']='ゃあ',['ゅー']='ゅう',['ょー']='ょお',['らー']='らあ',['りー']='りい',['るー']='るう',['れー']='れえ',['ろー']='ろお',['わー']='わあ'\n}\n\ndata.joyo_kanji = ([[\n亜哀挨愛曖悪握圧扱宛嵐安案暗以衣\
      位囲医依委威為畏胃尉異移萎偉椅彙意違維慰遺緯域育一\n壱逸茨芋引印因咽姻員院淫陰飲隠韻右宇羽雨唄鬱畝浦運雲永泳英映栄営詠影鋭衛易疫益液駅悦越謁閲円延沿炎\n宴怨媛援園煙猿遠鉛塩演縁艶汚王凹央応往押旺欧殴桜翁奥横岡屋億憶臆虞乙俺卸音恩温穏下化火加可仮何花佳\n価果河苛科架夏家荷華菓貨渦過嫁暇禍靴寡歌箇稼課蚊牙瓦我画芽賀雅餓介回灰会快戒改怪拐悔海界皆械絵開階\n塊楷解潰壊懐諧貝外劾害崖涯街慨蓋該概骸垣柿各角拡革格核殻郭覚較隔閣確獲嚇穫学岳楽額顎掛潟括活喝渇割\n葛滑褐轄且株釜鎌刈干刊甘汗缶完肝官冠巻看陥\
      乾勘患貫寒喚堪換敢棺款間閑勧寛幹感漢慣管関歓監緩憾還館環\n簡観韓艦鑑丸含岸岩玩眼頑顔願企伎危机気岐希忌汽奇祈季紀軌既記起飢鬼帰基寄規亀喜幾揮期棋貴棄毀旗器畿\n輝機騎技宜偽欺義疑儀戯擬犠議菊吉喫詰却客脚逆虐九久及弓丘旧休吸朽臼求究泣急級糾宮救球給嗅窮牛去巨居\n拒拠挙虚許距魚御漁凶共叫狂京享供協況峡挟狭恐恭胸脅強教郷境橋矯鏡競響驚仰暁業凝曲局極玉巾斤均近金菌\n勤琴筋僅禁緊錦謹襟吟銀区句苦駆具惧愚空偶遇隅串屈掘窟熊繰君訓勲薫軍郡群兄刑形系径茎係型契計恵啓掲渓\n経蛍敬景軽傾携継詣慶憬稽憩警鶏芸迎鯨\
      隙劇撃激桁欠穴血決結傑潔月犬件見券肩建研県倹兼剣拳軒健険圏堅検\n嫌献絹遣権憲賢謙鍵繭顕験懸元幻玄言弦限原現舷減源厳己戸古呼固孤弧股虎故枯個庫湖雇誇鼓錮顧五互午呉後\n娯悟碁語誤護口工公勾孔功巧広甲交光向后好江考行坑孝抗攻更効幸拘肯侯厚恒洪皇紅荒郊香候校耕航貢降高康\n控梗黄喉慌港硬絞項溝鉱構綱酵稿興衡鋼講購乞号合拷剛傲豪克告谷刻国黒穀酷獄骨駒込頃今困昆恨根婚混痕紺\n魂墾懇左佐沙査砂唆差詐鎖座挫才再災妻采砕宰栽彩採済祭斎細菜最裁債催塞歳載際埼在材剤財罪崎作削昨柵索\n策酢搾錯咲冊札刷刹拶殺察撮擦雑\
      皿三山参桟蚕惨産傘散算酸賛残斬暫士子支止氏仕史司四市矢旨死糸至伺志私\n使刺始姉枝祉肢姿思指施師恣紙脂視紫詞歯嗣試詩資飼誌雌摯賜諮示字寺次耳自似児事侍治持時滋慈辞磁餌璽鹿\n式識軸七叱失室疾執湿嫉漆質実芝写社車舎者射捨赦斜煮遮謝邪蛇尺借酌釈爵若弱寂手主守朱取狩首殊珠酒腫種\n趣寿受呪授需儒樹収囚州舟秀周宗拾秋臭修袖終羞習週就衆集愁酬醜蹴襲十汁充住柔重従渋銃獣縦叔祝宿淑粛縮\n塾熟出述術俊春瞬旬巡盾准殉純循順準潤遵処初所書庶暑署緒諸女如助序叙徐除小升少召匠床抄肖尚招承昇松沼\n昭宵将消症祥称笑唱商渉章\
      紹訟勝掌晶焼焦硝粧詔証象傷奨照詳彰障憧衝賞償礁鐘上丈冗条状乗城浄剰常情場畳\n蒸縄壌嬢錠譲醸色拭食植殖飾触嘱織職辱尻心申伸臣芯身辛侵信津神唇娠振浸真針深紳進森診寝慎新審震薪親人\n刃仁尽迅甚陣尋腎須図水吹垂炊帥粋衰推酔遂睡穂随髄枢崇数据杉裾寸瀬是井世正生成西声制姓征性青斉政星牲\n省凄逝清盛婿晴勢聖誠精製誓静請整醒税夕斥石赤昔析席脊隻惜戚責跡積績籍切折拙窃接設雪摂節説舌絶千川仙\n占先宣専泉浅洗染扇栓旋船戦煎羨腺詮践箋銭潜線遷選薦繊鮮全前善然禅漸膳繕狙阻祖租素措粗組疎訴塑遡礎双\n壮早争走奏相荘草送\
      倉捜挿桑巣掃曹曽爽窓創喪痩葬装僧想層総遭槽踪操燥霜騒藻造像増憎蔵贈臓即束足促則息\n捉速側測俗族属賊続卒率存村孫尊損遜他多汰打妥唾堕惰駄太対体耐待怠胎退帯泰堆袋逮替貸隊滞態戴大代台第\n題滝宅択沢卓拓託濯諾濁但達脱奪棚誰丹旦担単炭胆探淡短嘆端綻誕鍛団男段断弾暖談壇地池知値恥致遅痴稚置\n緻竹畜逐蓄築秩窒茶着嫡中仲虫沖宙忠抽注昼柱衷酎鋳駐著貯丁弔庁兆町長挑帳張彫眺釣頂鳥朝貼超腸跳徴嘲潮\n澄調聴懲直勅捗沈珍朕陳賃鎮追椎墜通痛塚漬坪爪鶴低呈廷弟定底抵邸亭貞帝訂庭逓停偵堤提程艇締諦泥的笛摘\n滴適敵溺迭哲\
      鉄徹撤天典店点展添転塡田伝殿電斗吐妬徒途都渡塗賭土奴努度怒刀冬灯当投豆東到逃倒凍唐島桃\n討透党悼盗陶塔搭棟湯痘登答等筒統稲踏糖頭謄藤闘騰同洞胴動堂童道働銅導瞳峠匿特得督徳篤毒独読栃凸突届\n屯豚頓貪鈍曇丼那奈内梨謎鍋南軟難二尼弐匂肉虹日入乳尿任妊忍認寧熱年念捻粘燃悩納能脳農濃把波派破覇馬\n婆罵拝杯背肺俳配排敗廃輩売倍梅培陪媒買賠白伯拍泊迫剥舶博薄麦漠縛爆箱箸畑肌八鉢発髪伐抜罰閥反半氾犯\n帆汎伴判坂阪板版班畔般販斑飯搬煩頒範繁藩晩番蛮盤比皮妃否批彼披肥非卑飛疲秘被悲扉費碑罷避尾眉美備微\n鼻膝肘\
      匹必泌筆姫百氷表俵票評漂標苗秒病描猫品浜貧賓頻敏瓶不夫父付布扶府怖阜附訃負赴浮婦符富普腐敷膚\n賦譜侮武部舞封風伏服副幅復福腹複覆払沸仏物粉紛雰噴墳憤奮分文聞丙平兵併並柄陛閉塀幣弊蔽餅米壁璧癖別\n蔑片辺返変偏遍編弁便勉歩保哺捕補舗母募墓慕暮簿方包芳邦奉宝抱放法泡胞俸倣峰砲崩訪報蜂豊飽褒縫亡乏忙\n坊妨忘防房肪某冒剖紡望傍帽棒貿貌暴膨謀頰北木朴牧睦僕墨撲没勃堀本奔翻凡盆麻摩磨魔毎妹枚昧埋幕膜枕又\n末抹万満慢漫未味魅岬密蜜脈妙民眠矛務無夢霧娘名命明迷冥盟銘鳴滅免面綿麺茂模毛妄盲耗猛網目黙門紋問冶\n\
      夜野弥厄役約訳薬躍闇由油喩愉諭輸癒唯友有勇幽悠郵湧猶裕遊雄誘憂融優与予余誉預幼用羊妖洋要容庸揚揺葉\n陽溶腰様瘍踊窯養擁謡曜抑沃浴欲翌翼拉裸羅来雷頼絡落酪辣乱卵覧濫藍欄吏利里理痢裏履璃離陸立律慄略柳流\n留竜粒隆硫侶旅虜慮了両良料涼猟陵量僚領寮療瞭糧力緑林厘倫輪隣臨瑠涙累塁類令礼冷励戻例鈴零霊隷齢麗暦\n歴列劣烈裂恋連廉練錬呂炉賂路露老労弄郎朗浪廊楼漏籠六録麓論和話賄脇惑枠湾腕]]):gsub(\"%s\", \"\")\n\ndata.grade1 = ([[一右雨円王音下火花貝学気九休玉金空月犬\
      見五口校左三山子四糸字耳七車手十出女小上森\n人水正生夕石赤千川先早草足村大男竹中虫町天田土二日入年白八百文木本名目立力林六青\n]]):gsub(\"%s\", \"\")\n\ndata.grade2 = ([[引羽雲園遠何科夏家歌画回会海絵外角楽活間丸岩顔汽記帰弓牛魚京強教近兄形計元言原戸\n古午後語工公広交光考行高黄合谷国黒今才細作算止市矢姉思紙寺自時室社弱首秋週春書少場色食心新親図数西\n声星晴切雪船線前組走多太体台地池知茶昼長鳥朝直通弟店点電刀冬当東答頭同道読内南肉馬売買麦半番父風分\n\
      聞米歩母方北毎妹万明鳴毛門夜野友用曜来里理話\n]]):gsub(\"%s\", \"\")\n\ndata.grade3 = ([[丁世両主乗予事仕他代住使係倍全具写列助勉動勝化区医去反取受号向君味命和品員商問坂\n央始委守安定実客宮宿寒対局屋岸島州帳平幸度庫庭式役待急息悪悲想意感所打投拾持指放整旅族昔昭暑暗曲有\n服期板柱根植業様横橋次歯死氷決油波注泳洋流消深温港湖湯漢炭物球由申界畑病発登皮皿相県真着短研礼神祭\n福秒究章童笛第筆等箱級終緑練羊美習者育苦荷落葉薬血表詩調談豆負起路身転軽農返追送速\
      進遊運部都配酒重\n鉄銀開院陽階集面題飲館駅鼻\n]]):gsub(\"%s\", \"\")\n\ndata.grade4 = ([[不争付令以仲伝位低例便信倉候借停健側働億兆児共兵典冷初別利刷副功加努労勇包卒協単\n博印参史司各告周唱喜器囲固型堂塩士変夫失好季孫完官害察巣差希席帯底府康建径徒得必念愛成戦折挙改救敗\n散料旗昨景最望未末札材束松果栄案梅械極標機欠歴残殺毒氏民求治法泣浅浴清満漁灯無然焼照熱牧特産的省祝\n票種積競笑管節粉紀約結給続置老胃脈腸臣航良芸芽英菜街衣要覚観訓試説課議象貨貯費賞\
      軍輪辞辺連達選郡量\n録鏡関陸隊静順願類飛飯養験\n]]):gsub(\"%s\", \"\")\n\ndata.grade5 = ([[久仏仮件任似余価保修俵個備像再刊判制券則効務勢厚句可営因団圧在均基報境墓増夢妻婦\n容寄富導居属布師常幹序弁張往復徳志応快性恩情態慣承技招授採接提損支政故敵断旧易暴条枝査格桜検構武比\n永河液混減測準演潔災燃版犯状独率現留略益眼破確示祖禁移程税築精素経統絶綿総編績織罪群義耕職肥能興舌\n舎術衛製複規解設許証評講謝識護豊財貧責貸貿賀資賛質輸述迷退逆造過適酸鉱銅銭防限\
      険際雑非預領額飼\n]]):gsub(\"%s\", \"\")\n\ndata.grade6 = ([[並乱乳亡仁供俳値傷優党冊処刻割創劇勤危卵厳収后否吸呼善困垂城域奏奮姿存孝宅宇宗宙\n宝宣密寸専射将尊就尺届展層己巻幕干幼庁座延律従忘忠憲我批担拝拡捨探推揮操敬映晩暖暮朗机枚染株棒模権\n樹欲段沿泉洗派済源潮激灰熟片班異疑痛皇盛盟看砂磁私秘穀穴窓筋策簡糖系紅納純絹縦縮署翌聖肺背胸脳腹臓\n臨至若著蒸蔵蚕衆裁装裏補視覧討訪訳詞誌認誕誠誤論諸警貴賃遺郵郷針鋼閉閣降陛除障難革頂骨\n]]):gsub(\"\
      %s\", \"\")\n\ndata.secondary = ([[堀撃茂羅匂誇斉袋弊沃随崎逐漂枕且抗揺涙鐘鮮沢洞怠嬢嚇焦喩淡被般捜頰岳疲侵廷眺\n稼唾塀霊迅附醜屈棋坊珍恐賓筒苗摘椎寝軟絞凡斑悦勧耐緩蔽坪沼衰譲柵蹴拷慶替愁繁皆覆雅沈踏疎継扶朕隔舗\n妖粘喫炊抜賄悠弥腰崩倫循是阜脱掲舷冶紹沸頻押疾寂雄扇臆恋俊嫌乏契傾迎竜盤触硫括惰併滴凶墨俺鹿巾碁儀\n訂袖弄箇堆贈踊萎碑褐騒井弔怖沙甘慨芝剛准玄股趣控販妬餅阪錬枯搾稲伴添抽鬼尾壁床滅轄拠繊拍幣掌惑腐埼\n漏核奥棺虚譜嗣鉢潤寧姫陪鋭濯壱慰跳該靴症偶浸姻穫\
      響澄尉蚊鈍鎌圏頑既又窒屯肖宜貞冠帥蛇欧仰宛煮伯撮伺\n紳徴呈吹麺稽桁秀吉狂湿柄栓胆呉克廊双郊塑駐啓拒繕柔捗闘酎剥潟遡陥霧摩巨腫邦召杯購媒畳荒陵膨裾糾脂超\n升丈芋禍伎麓儒錯梗丘媛甚膝猫娠隣閥罵符披洪瀬剰騰如琴猶徹錮紺頼弾巡廃隻嗅壇籠請縄凍詐励痕醸忙苛凝遜\n寡詠監酢諧僧伐爽浪臭硬賠叱痩襲践匿矯培詣墾槽謁塁憂載越戴吏挑渓醒柿耗殖勘幅喚墜吟羞謡犠津撤輩喪催侮\n鬱誰獲喉庸戻悼尿噴璃蓄遇錠杉雇緊免壌菌卑拐駒隆塗彙鉛胎惜江桑陣嫉顧懐彩鈴腎摯陳懲措遷茨軸旺辣彰突謀\n怪唄覇爆漠箋傍餌鶏与抑頒采冗痘隙掛尚肝貢旨\
      匠垣囚昇憧涯抱瞳砲舶漸殻携藻祈嫁塡濃遂浄懇婆廉酌虎韓恒畔\n剖仙換豚慕乞嫡占泥艦咽叫呪郭逓緯普柳排赴酔艶曹飽兼幾威較薄脇渉促刑鼓呂傘丙斎猛逝膜肢斤慌称羨挫貪憬\n唯宰勲舟香丹栽毀裂奇鍋賊遍畏斥枢懸乙鍛衝釜滞珠督飢履藤諦薦恭蛮扱佳痴酷拶虹裕捻哺偽臼畿盾蜂暇唆須粋\n融窃礎閑吐娯麗崖妙粛依寛窟伏那汚環憩怨貫瞭芯畜綱墳露宵訴隷逸虞丼奈熊曇蓋憶忍煎淑詔盗謎虜牲簿跡瑠\n齢剤浦秩恨迭端慮汰泡褒房雷凹濫栃豪抄渇愉尋殊酬蔑岐頓溺娘倒肘輝亜訟紡倣愚滋艇昧罰梨含駆婚戯祉邸尻窯\n朽稿憾哀桃及魅髄奉烈菊雌穏軌捕煙妥葛揚\
      韻絡峠遣璧湧旦煩磨錦楼泰鍵裸湾衷享婿妃謄擦炉躍狙唐俸項戚溝蜜\n岡唇到悩侶薫爪亭漬逮膳串抵綻刺殿擁療勅獄累慈旋削蛍恣描顎嵐姓癒霜孔俗驚滝潜塞峡即釣孤析奨淫華遮却執\n惨砕緻款曽彼寿塾封翁厄震紋把瘍伸炎餓互沖紛帝遵挟挨魂患弧峰妨紫瞬振黙厘爵殴閲倹拭攻帽込猿更汁肪範賦\n偉釈礁忌郎鑑乾払叔託胞締離篤瓦衡宴髪繭壮甲盲援罷瓶凸幽翼飾征銃肩禅漆殉刈脊茎誓途粗怒隅脚喝悟欄御劣\n索冥堤粧弦玩暫維搬肯献辱芳傲缶狭麻施尼鶴濁握勃但介溶藍猟虐拓慢塔晶叙浮距棟傑敢燥惧糧睦審奪葬軒据繰\n拳戒聴腺企亀訃酪脅還渋妊貌透悔謙\
      誘縛膚駄隠稚詰縫盆鋳鎮朱網欺架匹骸阻赦楷貼没泊充棄捉泌偏坑緒腕敏汗\n拘畝賜桟睡剣痢祥逃募擬寮影雰詳酵胴諭幻疫避暁需掃踪昆誉挿刃騎弐概侯斗椅辛舞眠僚頃渦硝汎堪眉嘲債薪抹\n璽朴岬摂僅慄闇拉埋塊侍肌滑佐菓賢僕奔癖拙荘矛塚違浜租診巧狩迫賭詮潰冒奴陶卸翻氾彫縁況堅妄崇了遭鎖帆\n徐粒堕銘掘斜償択渡枠歓憤謹暦漫邪搭斬窮嘱撲偵庶刹箸為尽涼劾魔賂遅凄憎扉穂壊籍嘆某卓顕曖牙棚襟微獣陰\n恥鯨慎旬諮歳哲恵致敷零藩諾咲勾\n]]):gsub(\"%s\", \"\")\n\ndata.jinmeiyo_kanji =\
      \ ([[\n丑丞乃之乎也云亘亙些亦亥亨亮仔伊伍伽佃佑伶侃侑俄俠俣俐倭俱倦倖偲傭儲允兎兜其冴凌凜凛凧凪凰凱函劉劫\n勁勺勿匁匡廿卜卯卿厨厩叉叡叢叶只吾吞吻哉哨啄哩喬喧喰喋嘩嘉嘗噌噂圃圭坐尭堯坦埴堰堺堵塙壕壬夷奄奎套\n娃姪姥娩嬉孟宏宋宕宥寅寓寵尖尤屑峨峻崚嵯嵩嶺巌巖已巳巴巫巷巽帖幌幡庄庇庚庵廟廻弘弛彗彦彪彬徠忽怜恢恰\n恕悌惟惚悉惇惹惺惣慧憐戊或戟托按挺挽掬捲捷捺捧掠揃摑摺撒撰撞播撫擢孜敦斐斡斧斯於旭昂昊昏昌昴晏晃晄\n晒晋晟晦晨智暉暢曙曝曳朋朔杏杖杜李杭杵杷枇柑柴柘柊柏柾柚桧檜栞桔桂栖桐栗梧梓梢梛\
      梯桶梶椛梁棲椋椀楯\n楚楕椿楠楓椰楢楊榎樺榊榛槙槇槍槌樫槻樟樋橘樽橙檎檀櫂櫛櫓欣欽歎此殆毅毘毬汀汝汐汲沌沓沫洸洲洵洛浩浬\n淵淳渚渚淀淋渥湘湊湛溢滉溜漱漕漣澪濡瀕灘灸灼烏焰焚煌煤煉熙燕燎燦燭燿爾牒牟牡牽犀狼猪猪獅玖珂珈珊珀\n玲琢琢琉瑛琥琶琵琳瑚瑞瑶瑳瓜瓢甥甫畠畢疋疏皐皓眸瞥矩砦砥砧硯碓碗碩碧磐磯祇祢禰祐祐祷禱禄祿禎禎禽禾\n秦秤稀稔稟稜穣穰穹穿窄窪窺竣竪竺竿笈笹笙笠筈筑箕箔篇篠簞簾籾粥粟糊紘紗紐絃紬絆絢綺綜綴緋綾綸縞徽繫\n繡纂纏羚翔翠耀而耶耽聡肇肋肴胤胡脩腔脹膏臥舜舵芥芹芭芙芦苑茄苔苺茅茉茸茜莞\
      荻莫莉菅菫菖萄菩萌萠萊菱\n葦葵萱葺萩董葡蓑蒔蒐蒼蒲蒙蓉蓮蔭蔣蔦蓬蔓蕎蕨蕉蕃蕪薙蕾蕗藁薩蘇蘭蝦蝶螺蟬蟹蠟衿袈袴裡裟裳襖訊訣註詢\n詫誼諏諄諒謂諺讃豹貰賑赳跨蹄蹟輔輯輿轟辰辻迂迄辿迪迦這逞逗逢遥遙遁遼邑祁郁鄭酉醇醐醍醬釉釘釧銑鋒鋸\n錘錐錆錫鍬鎧閃閏閤阿陀隈隼雀雁雛雫霞靖鞄鞍鞘鞠鞭頁頌頗顚颯饗馨馴馳駕駿驍魁魯鮎鯉鯛鰯鱒鱗鳩鳶鳳鴨鴻\n鵜鵬鷗鷲鷺鷹麒麟麿黎黛鼎\n亞惡爲榮衞圓緣薗應櫻奧橫溫價壞懷樂渴卷陷寬氣僞戲虛峽狹曉\n駈勳薰惠揭鷄藝擊縣儉劍險圈檢顯驗嚴廣恆黃國黑碎雜兒濕實壽收從澁獸縱緖敍\n將涉燒奬\
      條狀乘淨剩疊孃讓釀眞寢愼盡粹醉穗瀨齊靜攝專戰纖禪壯爭莊搜巢曾裝瘦騷增藏臟卽帶\n滯瀧單團彈晝鑄廳徵聽鎭轉傳嶋燈盜稻德拜盃賣髮拔晚祕冨拂佛步峯飜\n每萬默埜彌藥與搖樣謠來賴覽龍凉綠淚壘禮曆歷鍊郞錄]]):gsub(\"%s\", \"\")\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2017-03-04T10:37:18.887Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aja%2Fk2r-old&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=FR:PAC:Pernes-les-Fontaines:44.00:5.05:v4; WMF-Last-Access=04-Mar-2017; WMF-Last-Access-Global=04-Mar-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=102356 t=1488623838671572
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sat, 04 Mar 2017 10:37:18 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1201.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=04-Mar-2017;WMF-Last-Access-Global=04-Mar-2017;https=1
      X-Cache: cp1052 pass, cp3041 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 78.229.90.61
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.14
      X-Varnish: 532898384, 648982238, 527314982
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"5939089\" pageid=\"5939089\" ns=\"828\" title=\"Module:ja/k2r-old\"><revisions><rev user=\"Suzukaze-c\" timestamp=\"2017-01-22T09:49:35Z\" comment=\"disabling &#039;throw away\
      \ final xtu&#039;\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nlocal data = mw.loadData(&quot;Module:ja/data&quot;)\n\nfunction export.kana_to_romaji(text, nodiacr, keepdot)\n\tif type(text) == &quot;table&quot;\
      \ then -- assume a frame.\n\t\ttext, nodiacr = text.args[1], text.args[2]\n\tend\n\n\t-- remove %\n\ttext = mw.ustring.gsub(text, '%%', '')\n\n\ttext = mw.ustring.gsub(text, &quot;%^'''&quot;, &quot;'''^&quot;)\n\n\t-- local kr_minus_period = data.kr\n\
      \t-- kr_minus_period[&quot;。&quot;] = &quot;。&quot;\n\n\t-- convert Japanese spaces to western spaces\n\ttext = mw.ustring.gsub(text, '　', ' ')\n\n\t-- if there is a は separated by halfwidth spaces, romanize it as &quot; wa &quot;\n\ttext = mw.ustring.gsub(text,\
      \ ' は ', ' wa ')\n\t-- also if it follows a space and is the last character, e.g. それでは\n\ttext = mw.ustring.gsub(text, ' は$', ' wa')\n\t-- or &quot; は、&quot;\n\ttext = mw.ustring.gsub(text, ' は、', ' wa, ')\n\t-- or &quot; は。&quot;\n\ttext = mw.ustring.gsub(text,\
      \ ' は。', ' wa. ')\n\ttext = mw.ustring.gsub(text, ' は？', ' wa? ')\n\ttext = mw.ustring.gsub(text, ' は）', ' wa)')\n\t-- or &quot; '''は''' &quot;\n\ttext = mw.ustring.gsub(text, &quot; '''は''' &quot;, &quot; '''wa''' &quot;)\n\t-- romanize では as &quot;dewa&quot;\n\
      \ttext = mw.ustring.gsub(text, ' では ', ' dewa ')\n\ttext = mw.ustring.gsub(text, ' では$', ' dewa')\n\ttext = mw.ustring.gsub(text, ' では、', ' dewa, ')\n\ttext = mw.ustring.gsub(text, ' では。', ' dewa. ')\n\ttext = mw.ustring.gsub(text, ' では？', ' dewa? ')\n\
      \ttext = mw.ustring.gsub(text, ' では）', ' dewa)')\n\ttext = mw.ustring.gsub(text, &quot;'''では'''&quot;, &quot;'''dewa'''&quot;)\n\t-- romanize で は (with space) as &quot;de wa&quot;\n\ttext = mw.ustring.gsub(text, &quot;'''で は'''&quot;, &quot;'''de wa'''&quot;)\n\
      \t-- same sort of thing for へ\n\ttext = mw.ustring.gsub(text, ' へ ', ' e ')\n\ttext = mw.ustring.gsub(text, &quot; '''へ''' &quot;, &quot; '''e''' &quot;)\n\ttext = mw.ustring.gsub(text, ' へ$', ' e')\n\ttext = mw.ustring.gsub(text, ' へ、', ' e, ')\n\ttext\
      \ = mw.ustring.gsub(text, ' へ。', ' e. ')\n\ttext = mw.ustring.gsub(text, ' へ？', ' e?')\n\ttext = mw.ustring.gsub(text, ' へ）', ' e)')\n\t-- dangling small tsu is romanized as nothing\n\ttext = mw.ustring.gsub(text, 'ッ。', '。')\n\ttext = mw.ustring.gsub(text,\
      \ 'ッ！', '！')\n\ttext = mw.ustring.gsub(text, 'ッ」', '」')\n\ttext = mw.ustring.gsub(text, 'ッ、', '、')\n\n\t-- ゝ means &quot;repeat the previous character&quot; and is used with hiragana, like 々 is for kanji\n\ttext = mw.ustring.gsub(text, '(.)ゝ', '%1%1')\n\
      \ttext = mw.ustring.gsub(text, '(.)ゞ', function(char) return mw.ustring.toNFC(char .. char .. '゙') end)\n\n\t-- romanising ヶ\n\ttext = mw.ustring.gsub(text, 'ヶげつ', 'kagetsu')\n\ttext = mw.ustring.gsub(text, 'ヶ', 'ga')\n\n\t-- convert hiragana to katakana\n\
      \ttext = require('module:ja').hira_to_kata(text)\n\t-- replace katakana with romaji (?? not sure what the pattern below does ??)\n\t-- this is hackish, but we're using the period to indicate morpheme boundaries to prevent macrons\n\t-- from forming across\
      \ them, so we'll remove the ASCII periods used for markup but not the Japanese periods\n\n\t-- convert the Japanese periods at the end\n\t--table.remove(kr_minus_period, &quot;。&quot;)\n\ttext = mw.ustring.gsub(text, '.[ィェォャュョァヮゥ゜]?ェ?',\n\t           \
      \            function (char)\n\t                       \tif char == &quot;。&quot; then\n\t                       \t\treturn char\n\t                       \telse\n\t                       \t\treturn data.kr_old[char] or char\n\t                       \t\
      end\n\t                       end)\n\n\ttext = require('module:ja').fullwidth_to_halfwidth(text)\n\n\t-- replace long vowel mark with the vowel that comes before\n\ttext = mw.ustring.gsub(text, '([aeiou])ー', '%1%1')\n\n\t-- add vowels with diacritics\n\
      \tif not nodiacr then\n\t\ttext = mw.ustring.gsub(text, 'oo', 'ō')\n\t\ttext = mw.ustring.gsub(text, 'aa', 'ā')\n\t\ttext = mw.ustring.gsub(text, 'ee', 'ē')\n\t\ttext = mw.ustring.gsub(text, 'ou', 'ō')\n\t\ttext = mw.ustring.gsub(text, 'uu', 'ū')\n\t\t\
      text = mw.ustring.gsub(text, 'ii', 'ī')\n\tend\n\n\tif not keepdot then\n\t\t-- if input had spaces, keep them\n\t\t-- if the input string had periods, then remove them now\n\t\ttext = mw.ustring.gsub(text, '%.', '')\n\t\t-- now that markup periods are\
      \ gone, convert the Japanese periods to western periods\n\t\ttext = mw.ustring.gsub(text, &quot;。&quot;, &quot;. &quot;)\n\tend\n\n\t-- romanize sokuon or geminate consonants\n\t-- text = mw.ustring.gsub(text, '^ッ', '')\n\t-- double the previous consonant\
      \ letter if there is a small tsu\n\ttext = mw.ustring.gsub(text, 'ッ([kstpgdbjzrfh])', '%1%1')\n\ttext = mw.ustring.gsub(text, 'ッ\\'\\'\\'([kstpgdbjzrfh])', '%1\\'\\'\\'%1')\n\t-- replace ッc with tc\n\ttext = mw.ustring.gsub(text, 'ッc', 'tc')\n\ttext =\
      \ mw.ustring.gsub(text, 'ッ\\'\\'\\'c', 't\\'\\'\\'c')\n\t-- if small tsu comes at the end, just throw it away\n\t-- text = mw.ustring.gsub(text, 'ッ$', '')\n\n\t-- the @ is used to determine when to insert an opostrophe after ん or ン\n\t-- (all is kata at\
      \ that point)\n\t-- insert apostrophe when ン is followed by a vowel or\n\t-- y, which corresponds to the cases んや (n'ya) んゆ (n'yu) and んよ (n'yo)\n\ttext = mw.ustring.gsub(text, &quot;@([aeiouāēīōūy])&quot;, &quot;'%1&quot;)\n\t-- remove @\n\ttext = mw.ustring.gsub(text,\
      \ &quot;@&quot;, &quot;&quot;)\n\n\t-- capitalize any letter following a ^ symbol\n\ttext = mw.ustring.gsub(text, &quot;%^%l&quot;, mw.ustring.upper)\n\t-- remove ^\n\ttext = mw.ustring.gsub(text, &quot;%^&quot;, &quot;&quot;)\n\n\t-- clean up spaces\n\
      \ttext = mw.text.trim(text)\n\ttext = mw.ustring.gsub(text, ' +', ' ')\n\n\treturn text\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2017-03-04T09:54:33.836Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Amodule%3Aja&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=FR:PAC:Pernes-les-Fontaines:44.00:5.05:v4; WMF-Last-Access=04-Mar-2017; WMF-Last-Access-Global=04-Mar-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=59107 t=1488621273660696
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Length: '142'
      Content-Type: text/xml; charset=utf-8
      Date: Sat, 04 Mar 2017 09:54:33 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1202.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=04-Mar-2017;WMF-Last-Access-Global=04-Mar-2017;https=1
      X-Cache: cp1054 pass, cp3030 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 78.229.90.61
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.14
      X-Varnish: 553419099, 720165946, 499627373
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="828" title="Module:module:ja" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:09:00.920Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AIPA&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=66662 t=1555362540809617
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:00 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1281.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 582895012, 812056150, 699872259
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="82468" pageid="82468" ns="10" title="Template:IPA"><revisions><rev user="Rua" timestamp="2019-03-31T20:37:23Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:IPA/templates|IPA}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:09:01.108Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49769 t=1555362541008665
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:01 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 508800033, 723021491, 702387504
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4463906\" pageid=\"4463906\" ns=\"828\" title=\"Module:IPA/templates\"><revisions><rev user=\"Rua\" timestamp=\"2019-03-31T20:38:27Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal m_IPA = require(\"Module:IPA\")\n\nlocal U = mw.ustring.char\nlocal syllabic = U(0x0329)\n\n-- Used for [[Template:IPA]].\nfunction\
      \ export.IPA(frame)\n\tlocal parent_args = frame.getParent and frame:getParent().args or frame\n\tlocal compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default =\
      \ \"\"},\n\t\t[1 + offset] = {list = true, allow_holes = true},\n\t\t[\"n\"] = {list = true, allow_holes = true},\n\t\t[\"qual\"] = {list = true, allow_holes = true},\n\t\t[\"nocount\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args\
      \ = require(\"Module:parameters\").process(parent_args, params)\n\tlocal langarg = args[compat and \"lang\" or 1]\n\tlocal lang = mw.title.getCurrentTitle().nsText == \"Template\" and \"en\" or langarg\n\tlang = require(\"Module:languages\").getByCode(lang)\n\
      \n\t-- [[Special:WhatLinksHere/Template:tracking/IPA/grc]]\n\tif lang and lang:getCode() == \"grc\" then\n\t\trequire(\"Module:debug\").track(\"IPA/grc\")\n\tend\n\t\n\tlocal items = {}\n\t\n\tfor i = 1, math.max(args[1 + offset].maxindex, args[\"n\"].maxindex)\
      \ do\n\t\tlocal pron = args[1 + offset][i]\n\t\tlocal note = args[\"n\"][i]\n\t\tlocal qual = args[\"qual\"][i]\n\t\t\n\t\tif lang then\n\t\t\trequire(\"Module:IPA/tracking\").run_tracking(pron, lang)\n\t\tend\n\t\t\n\t\tif pron or note or qual then\n\t\
      \t\ttable.insert(items, {pron = pron, note = note, qualifiers = {qual}})\n\t\tend\n\tend\n\t\n\treturn m_IPA.format_IPA_full(lang, items, nil, nil, args.sort, args.nocount)\nend\n\n-- Used for [[Template:IPAchar]].\nfunction export.IPAchar(frame)\n\tlocal\
      \ params = {\n\t\t[1] = {list = true, allow_holes = true},\n\t\t[\"n\"] = {list = true, allow_holes = true},\n\t\t[\"lang\"] = {}, -- This parameter is not used and does nothing, but is allowed for futureproofing.\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame.getParent and frame:getParent().args or frame, params)\n\t\n\tlocal items = {}\n\t\n\tfor i = 1, math.max(args[1].maxindex, args[\"n\"].maxindex) do\n\t\tlocal pron = args[1][i]\n\t\tlocal note = args[\"n\"][i]\n\t\t\n\t\tif pron or note\
      \ then\n\t\t\ttable.insert(items, {pron = pron, note = note})\n\t\tend\n\tend\n\t\n\t-- Format\n\treturn m_IPA.format_IPA_multiple(nil, items)\nend\n\nfunction export.XSAMPA(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t}\n\tlocal args\
      \ = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn m_IPA.XSAMPA_to_IPA(args[1] or \"[Eg'zA:mp5=]\")\nend\n\n-- Used by [[Template:X2IPA]]\nfunction export.X2IPAtemplate(frame)\n\tlocal parent_args = frame.getParent\
      \ and frame:getParent().args or frame\n\tlocal compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default = \"und\"},\n\t\t[1 + offset] = {list = true, allow_holes\
      \ = true},\n\t\t[\"n\"] = { list = true, allow_holes = true },\n\t\t[\"qual\"] = { list = true, allow_holes = true },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(parent_args, params)\n\t\n\tlocal m_XSAMPA = require(\"Module:IPA/X-SAMPA\"\
      )\n\t\n\tpronunciations, notes, qualifiers, lang = args[1 + offset], args[\"n\"], args[\"qual\"], args[compat and \"lang\" or 1]\n\t\n\tlocal output = {}\n\ttable.insert(output, \"{{IPA\")\n\t\n\ttable.insert(output, \"|\" .. lang)\n\n\tfor i = 1, math.max(pronunciations.maxindex,\
      \ notes.maxindex, qualifiers.maxindex) do\n\t\tif pronunciations[i] then\n\t\t\ttable.insert(output, \"|\"..m_XSAMPA.XSAMPA_to_IPA(pronunciations[i]))\n\t\tend\n\t\tif notes[i] then\n\t\t\ttable.insert(output, \"|n\"..i..\"=\"..notes[i])\n\t\tend\n\t\t\
      if qualifiers[i] then\n\t\t\ttable.insert(output, \"|qual\"..i..\"=\"..qualifiers[i])\n\t\tend\n\tend\n\t\n\ttable.insert(output, \"}}\")\n\n\treturn table.concat(output)\nend\n\n-- Used by [[Template:X2IPAchar]]\nfunction export.X2IPAchar(frame)\n\tlocal\
      \ params = {\n\t\t[1] = { list = true, allow_holes = true },\n\t\t[\"n\"] = { list = true, allow_holes = true },\n\t\t[\"lang\"] = { },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal m_XSAMPA\
      \ = require(\"Module:IPA/X-SAMPA\")\n\t\n\tpronunciations, notes, lang = args[1], args[\"n\"], args[\"lang\"]\n\t\n\tlocal output = {}\n\ttable.insert(output, \"{{IPAchar\")\n\t\n\tfor i = 1, math.max(pronunciations.maxindex, notes.maxindex) do\n\t\tif\
      \ pronunciations[i] then\n\t\t\ttable.insert(output, \"|\"..m_XSAMPA.XSAMPA_to_IPA(pronunciations[i]))\n\t\tend\n\t\tif notes[i] then\n\t\t\ttable.insert(output, \"|n\"..i..\"=\"..notes[i])\n\t\tend\n\tend\n\t\n\tif lang then\n\t\ttable.insert(output,\
      \ \"|lang=\"..lang)\n\tend\n\t\n\ttable.insert(output, \"}}\")\n\t\n\treturn table.concat(output)\nend\n\n-- Used by [[Template:x2rhymes]]\nfunction export.X2rhymes(frame)\n\tlocal parent_args = frame.getParent and frame:getParent().args or frame\n\tlocal\
      \ compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default = \"und\"},\n\t\t[1 + offset] = {required = true, list = true, allow_holes = true},\n\t}\n\t\n\tlocal\
      \ args = require(\"Module:parameters\").process(parent_args, params)\n\t\n\tlocal m_XSAMPA = require(\"Module:IPA/X-SAMPA\")\n\t\n\tpronunciations, lang = args[1 + offset], args[compat and \"lang\" or 1]\n\t\n\tlocal output =  {}\n\ttable.insert(output,\
      \ \"{{rhymes\")\n\t\n\ttable.insert(output, \"|\" .. lang)\n\n\tfor i = 1, pronunciations.maxindex do\n\t\tif pronunciations[i] then\n\t\t\ttable.insert(output, \"|\"..m_XSAMPA.XSAMPA_to_IPA(pronunciations[i]))\n\t\tend\n\tend\n\t\n\ttable.insert(output,\
      \ \"}}\")\n\t\n\treturn table.concat(output)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:01.306Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58917 t=1555362541187800
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:01 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 605137074, 265225340, 693096739
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3923940\" pageid=\"3923940\" ns=\"828\" title=\"Module:IPA\"><revisions><rev user=\"Suzukaze-c\" timestamp=\"2019-02-27T02:22:09Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"move leading space inside .previewonly.error\" xml:space=\"preserve\">local export = {}\n-- [[Module:IPA/data]]\n\nlocal m_data = mw.loadData('Module:IPA/data') -- [[Module:IPA/data]]\nlocal m_symbols =\
      \ mw.loadData('Module:IPA/data/symbols') -- [[Module:IPA/data/symbols]]\nlocal m_syllables -- [[Module:syllables]]; loaded below if needed\n\nlocal sub = mw.ustring.sub\nlocal find = mw.ustring.find\nlocal gsub = mw.ustring.gsub\nlocal match = mw.ustring.match\n\
      local gmatch = mw.ustring.gmatch\nlocal U = mw.ustring.char\n\nfunction export.format_IPA_full(lang, items, err, separator, sortKey, no_count)\n\tlocal IPA_key, key_link, err_text, prefix, IPAs, category\n\tlocal hasKey = m_data.langs_with_infopages\n\t\
      local namespace = mw.title.getCurrentTitle().nsText\n\t\n\tif err then\n\t\terr_text = '&lt;span class=\"error\"&gt;' .. err .. '&lt;/span&gt;'\n\telse\n\t\tif hasKey[lang:getCode()] then\n\t\t\tIPA_key = \"Appendix:\" .. lang:getCanonicalName() .. \"\
      \ pronunciation\"\n\t\telse\n\t\t\tIPA_key = \"wikipedia:\" .. lang:getCanonicalName() .. \" phonology\"\n\t\tend\n\t\t\n\t\tkey_link = \"[[\" .. IPA_key .. \"|key]]\"\n\tend\n\n\t\n\tlocal prefix = \"[[Wiktionary:International Phonetic Alphabet|IPA]]&lt;sup&gt;(\"\
      \ .. ( key_link or err_text ) .. \")&lt;/sup&gt;:&amp;#32;\"\n\t\n\tIPAs = export.format_IPA_multiple(lang, items, separator, no_count)\n\t\n\tif lang and (namespace == \"\" or namespace == \"Reconstruction\") then\n\t\tsortKey = sortKey or lang:makeSortKey(mw.title.getCurrentTitle().text)\n\
      \t\tsortKey = sortKey and (\"|\" .. sortKey) or \"\"\n\t\tcategory = \"[[Category:\" .. lang:getCanonicalName() .. \" terms with IPA pronunciation\" .. sortKey .. \"]]\"\n\telse\n\t\tcategory = \"\"\n\tend\n\n\treturn prefix .. IPAs .. category\nend\n\n\
      local function determine_repr(pron)\n\tlocal repr_mark = {}\n\tlocal repr, reconstructed\n\t\n\t-- remove initial asterisk before representation marks, used on some Reconstruction pages\n\tif find(pron, \"^%*\") then\n\t\treconstructed = true\n\t\tpron\
      \ = sub(pron, 2)\n\tend\n\t\n\tlocal representation_types = {\n\t\t['/'] = { right = '/', type = 'phonemic', },\n\t\t['['] = { right = ']', type = 'phonetic', },\n\t\t['⟨'] = { right = '⟩', type = 'orthographic', },\n\t\t['-'] = { type = 'rhyme' },\n\t\
      }\n\t\n\trepr_mark.i, repr_mark.f, repr_mark.left, repr_mark.right = find(pron, '^(.).-(.)$')\n\t\n\tlocal representation_type = representation_types[repr_mark.left]\n\t\n\tif representation_type then\n\t\tif representation_type.right then\n\t\t\tif repr_mark.right\
      \ == representation_type.right then\n\t\t\t\trepr = representation_type.type\n\t\t\tend\n\t\telse\n\t\t\trepr = representation_type.type\n\t\tend\n\telse\n\t\trepr = nil\n\tend\n\t\n\treturn repr, reconstructed\nend\n\nlocal function hasInvalidSeparators(transcription)\n\
      \tif find(transcription, \"%.[ˈˌ]\") then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\nfunction export.format_IPA_multiple(lang, items, separator, no_count)\n\tlocal notes = {}\n\tlocal categories = {}\n\tseparator = separator or ', '\n\t\n\
      \t-- Format\n\tif not items[1] then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\ttable.insert(items, {pron = \"/aɪ piː ˈeɪ/\"})\n\t\telse\n\t\t\ttable.insert(categories, \"[[Category:Pronunciation templates without a pronunciation]]\"\
      )\n\t\tend\n\tend\n\t\n\tlocal bits = {}\n\t\n\tfor _, item in ipairs(items) do\n\t\tlocal bit = export.format_IPA(lang, item.pron)\n\t\t\n\t\tif item.qualifiers and item.qualifiers[1] then\n\t\t\tbit = require(\"Module:qualifier\").format_qualifier(item.qualifiers)\
      \ .. \" \" .. bit\n\t\tend\n\t\t\n\t\tif item.note then\n\t\t\tbit = bit .. mw.getCurrentFrame():extensionTag(\"ref\", item.note)\n\t\tend\n\t\t\n\t\ttable.insert(bits, bit)\n\t\t\n\t\t--[=[\t[[Special:WhatLinksHere/Template:tracking/IPA/syntax-error]]\n\
      \t\t\t\tThe length or gemination symbol should not appear after a syllable break or stress symbol.\t]=]\n\t\t\n\t\tif find(item.pron, \"[ˈˌ%.][ːˑ]\") then\n\t\t\trequire(\"Module:debug\").track(\"IPA/syntax-error\")\n\t\tend\n\t\t\n\t\tif lang then\n\t\
      \t\t-- Add syllable count if the language's diphthongs are listed in [[Module:syllables]].\n\t\t\tif not no_count and mw.title.getCurrentTitle().namespace == 0 then\n\t\t\t\tm_syllables = m_syllables or require('Module:syllables')\n\t\t\t\tif m_syllables.hasDiphthongs(lang)\
      \ then\n\t\t\t\t\tif determine_repr(item.pron) == \"phonemic\" or lang:getCode() == \"ru\" then\n\t\t\t\t\t\tlocal syllable_count = m_syllables.getVowels(item.pron, lang)\n\t\t\t\t\t\tif syllable_count then\n\t\t\t\t\t\t\ttable.insert(categories, \"[[Category:\"\
      \ .. lang:getCanonicalName() .. \" \" .. syllable_count .. \"-syllable words]]\")\n\t\t\t\t\t\tend\t\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tif lang:getCode() == \"en\" then\n\t\t\t\tif hasInvalidSeparators(item.pron) then\n\t\t\t\t\ttable.insert(categories,\
      \ \"[[Category:IPA for English using .ˈ or .ˌ]]\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\n\treturn table.concat(bits, separator) .. table.concat(categories)\nend\n\n-- Takes an IPA pronunciation and formats it and adds cleanup categories.\nfunction\
      \ export.format_IPA(lang, pron, split_output)\n\tlocal err = {}\n\tlocal categories = {}\n\t\n\t-- Remove wikilinks, so that wikilink brackets are not misinterpreted as\n\t-- indicating phonemic transcription\n\tlocal str_gsub = string.gsub\n\tlocal without_links\
      \ = str_gsub(pron, '%[%[[^|%]]+|([^%]]+)%]%]', '%1')\n\twithout_links = str_gsub(without_links, '%[%[[^%]]+%]%]', '%1')\n\t\n\t-- Detect whether this is a phonemic or phonetic transcription\n\tlocal repr, reconstructed = determine_repr(without_links)\n\
      \t\n\tif reconstructed then\n\t\tpron = sub(pron, 2)\n\tend\n\t\n\t-- If valid, strip the representation marks\n\tif repr == \"phonemic\" then\n\t\tpron = sub(pron, 2, -2)\n\t\twithout_links = sub(without_links, 2, -2)\n\telseif repr == \"phonetic\" then\n\
      \t\tpron = sub(pron, 2, -2)\n\t\twithout_links = sub(without_links, 2, -2)\n\telseif repr == \"orthographic\" then\n\t\tpron = sub(pron, 2, -2)\n\t\twithout_links = sub(without_links, 2, -2)\n\telseif repr == \"rhyme\" then\n\t\tpron = sub(pron, 2)\n\t\
      \twithout_links = sub(without_links, 2)\n\telse\n\t\ttable.insert(categories, \"[[Category:IPA pronunciations with invalid representation marks]]\")\n\t\t-- table.insert(err, \"invalid representation marks\")\n\t\t-- Removed because it's annoying when\
      \ previewing pronunciation pages.\n\tend\n\t\n\t-- Check for obsolete and nonstandard symbols\n\tfor i, symbol in ipairs(m_data.nonstandard) do\n\t\tlocal result\n\t\tfor nonstandard in gmatch(pron, symbol) do\n\t\t\tif not result then\n\t\t\t\tresult\
      \ = {}\n\t\t\tend\n\t\t\ttable.insert(result, nonstandard)\n\t\t\ttable.insert(categories, \"[[Category:IPA pronunciations with obsolete or nonstandard characters|\" .. nonstandard .. \"]]\")\n\t\tend\n\t\t\n\t\tif result then\n\t\t\ttable.insert(err,\
      \ \"obsolete or nonstandard characters (\" .. table.concat(result) .. \")\")\n\t\t\tbreak\n\t\tend\n\tend\n\t\n\t--[[ Check for invalid symbols after removing the following:\n\t\t\t1. wikilinks (handled above)\n\t\t\t2. paired HTML tags\n\t\t\t3. bolding\n\
      \t\t\t4. italics\n\t\t\t5. HTML entity for space\n\t\t\t6. asterisk at beginning of transcription\n\t\t\t7. comma followed by spacing characters\n\t\t\t8. superscripts enclosed in superscript parentheses\t\t]]\n\tlocal found_HTML\n\tlocal result = str_gsub(without_links,\
      \ \"&lt;(%a+)[^&gt;]*&gt;([^&lt;]+)&lt;/%1&gt;\",\n\t\tfunction(tagName, content)\n\t\t\tfound_HTML = true\n\t\t\treturn content\n\t\tend)\n\tresult = str_gsub(result, \"'''([^']*)'''\", \"%1\")\n\tresult = str_gsub(result, \"''([^']*)''\", \"%1\")\n\t\
      result = str_gsub(result, \"&amp;[^;]+;\", \"\") -- This may catch things that are not valid character entities.\n\tresult = str_gsub(result, \"^%*\", \"\")\n\tresult = gsub(result, \",%s+\", \"\")\n\tresult = gsub(result, \"⁽[\".. m_symbols.superscripts\
      \ .. \"]+⁾\", \"\")\n\tresult = gsub(result, '[' .. m_symbols.valid .. ']', '')\n\tif result ~= '' then\n\t\tlocal suggestions = {}\n\t\tmw.log(pron, result)\n\t\tlocal namespace = mw.title.getCurrentTitle().namespace\n\t\tlocal category\n\t\tif namespace\
      \ == 0 then\n\t\t\t-- main namespace\n\t\t\tcategory = \"IPA pronunciations with invalid IPA characters\"\n\t\telseif namespace == 118 then\n\t\t\t-- reconstruction namespace\n\t\t\tcategory = \"IPA pronunciations with invalid IPA characters/reconstruction\"\
      \n\t\telse\n\t\t\tcategory = \"IPA pronunciations with invalid IPA characters/non_mainspace\"\n\t\tend\n\t\tfor character in gmatch(result, \".\") do\n\t\t\tlocal suggestion = m_symbols.suggestions[character]\n\t\t\tif suggestion then\n\t\t\t\ttable.insert(suggestions,\
      \ character .. \" with \" .. suggestion)\n\t\t\tend\n\t\t\ttable.insert(categories, \"[[Category:\" .. category .. \"|\" .. character .. \"]]\")\n\t\tend\n\t\ttable.insert(err, \"invalid IPA characters (\" .. result .. \")\")\n\t\tif suggestions[1] then\n\
      \t\t\ttable.insert(err, \"replace \" .. table.concat(suggestions, \", \"))\n\t\tend\n\tend\n\t\n\tif found_HTML then\n\t\ttable.insert(categories, \"[[Category:IPA pronunciations with paired HTML tags]]\")\n\tend\n\t\n\t-- Reference inside IPA template\
      \ usage\n\t-- FIXME: Doesn't work; you can't put HTML in module output.\n\t--if mw.ustring.find(pron, '&lt;/ref&gt;') then\n\t--\ttable.insert(categories, \"[[Category:IPA pronunciations with reference]]\")\n\t--end\n\t\n\tif repr == \"phonemic\" or repr\
      \ == \"rhyme\" then\n\t\tif lang and m_data.phonemes[lang:getCode()] then\n\t\t\tlocal valid_phonemes = m_data.phonemes[lang:getCode()]\n\t\t\tlocal rest = pron\n\t\t\tlocal phonemes = {}\n\t\t\t\n\t\t\twhile mw.ustring.len(rest) &gt; 0 do\n\t\t\t\tlocal\
      \ longestmatch = \"\"\n\t\t\t\t\n\t\t\t\tif sub(rest, 1, 1) == \"(\" or sub(rest, 1, 1) == \")\" then\n\t\t\t\t\tlongestmatch = sub(rest, 1, 1)\n\t\t\t\telse\n\t\t\t\t\tfor _, phoneme in ipairs(valid_phonemes) do\n\t\t\t\t\t\tif mw.ustring.len(phoneme)\
      \ &gt; mw.ustring.len(longestmatch) and sub(rest, 1, mw.ustring.len(phoneme)) == phoneme then\n\t\t\t\t\t\t\tlongestmatch = phoneme\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif mw.ustring.len(longestmatch) &gt; 0 then\n\t\t\t\t\t\
      table.insert(phonemes, longestmatch)\n\t\t\t\t\trest = sub(rest, mw.ustring.len(longestmatch) + 1)\n\t\t\t\telse\n\t\t\t\t\tlocal phoneme = sub(rest, 1, 1)\n\t\t\t\t\ttable.insert(phonemes, \"&lt;span style=\\\"color: red\\\"&gt;\" .. phoneme .. \"&lt;/span&gt;\"\
      )\n\t\t\t\t\trest = sub(rest, 2)\n\t\t\t\t\ttable.insert(categories, \"[[Category:IPA pronunciations with invalid phonemes/\" .. lang:getCode() .. \"]]\")\n\t\t\t\t\trequire(\"Module:debug\").track(\"IPA/invalid phonemes/\" .. phoneme)\n\t\t\t\tend\n\t\
      \t\tend\n\t\t\t\n\t\t\tpron = table.concat(phonemes)\n\t\tend\n\t\t\n\t\tif repr == \"phonemic\" then\n\t\t\tpron = \"/\" .. pron .. \"/\"\n\t\telse\n\t\t\tpron = \"-\" .. pron\n\t\tend\n\telseif repr == \"phonetic\" then\n\t\tpron = \"[\" .. pron .. \"\
      ]\"\n\telseif repr == \"orthographic\" then\n\t\tpron = \"⟨\" .. pron .. \"⟩\"\n\tend\n\t\n\tif reconstructed then\n\t\tpron = \"*\" .. pron\n\tend\n\t\n\tif err[1] then\n\t\terr = '&lt;span class=\"previewonly error\" style=\"font-size: small;&gt;&amp;#32;'\
      \ .. table.concat(err, ', ') .. '&lt;/span&gt;'\n\telse\n\t\terr = \"\"\n\tend\n\t\n\tif split_output then -- for use of IPA in links \n\t\treturn '&lt;span class=\"IPA\"&gt;' .. pron .. '&lt;/span&gt;', table.concat(categories), err\n\telse\n\t\treturn\
      \ '&lt;span class=\"IPA\"&gt;' .. pron .. '&lt;/span&gt;' .. err .. table.concat(categories)\n\tend\nend\n\nfunction export.example(frame)\n\tlocal output = {}\n\t\n\tlocal m_links = require('Module:links')\n\tlocal m_languages = require('Module:languages')\n\
      \t\n\ttable.insert(\n\t\toutput,\n[[\n{| class=\"wikitable\"\n! Term !! IPA !! Generated X-SAMPA !! Regenerated IPA !! Matched?\n]]\n\t)\n\tlocal row =\n[[\n|-\n| link || IPA || XSAMPA || regenerated_IPA || matched\n]]\n\t\n\tlocal examples = mw.text.split(frame.args[1],\
      \ \",%s*\")\n\t\n\tlocal m_XSAMPA = require(\"Module:IPA/X-SAMPA\")\n\t\n\tfor _, example in pairs(examples) do\n\t\tlocal lang, word = match(example, \"(%l%l%l?):(.+) [/%[]\")\n\t\t\n\t\tif lang then\n\t\t\tlang = m_languages.getByCode(lang) or error('\"\
      ' .. lang .. '\" is not a valid language code.')\n\t\tend\n\t\t\n\t\tlocal IPA = match(example, \"/[^/]+/\")\n\t\t\tor match(example, \"%[[^%]]+%]\")\n\t\t\tor error('No IPA transcription found in \"' .. example .. '\".')\n\t\tlocal XSAMPA = m_XSAMPA.IPA_to_XSAMPA(IPA)\n\
      \t\tlocal regenerated_IPA = m_XSAMPA.XSAMPA_to_IPA(XSAMPA)\n\t\t\n\t\tcontent = {\n\t\t\tlink = lang and word and m_links.full_link{ term = word, lang = lang },\n\t\t\tmatched = IPA == regenerated_IPA\n\t\t\t\tand '&lt;span style=\"color: green;\"&gt;yes&lt;/span&gt;'\n\
      \t\t\t\tor '&lt;span style=\"color: red;\"&gt;no&lt;/span&gt;',\n\t\t\tIPA = '&lt;span class=\"IPA\"&gt;' .. IPA .. '&lt;/span&gt;',\n\t\t\tXSAMPA = '&lt;code&gt;' .. XSAMPA .. '&lt;/span&gt;',\n\t\t\tregenerated_IPA = '&lt;span class=\"IPA\"&gt;' .. regenerated_IPA\
      \ .. '&lt;/span&gt;'\n\t\t}\n\t\t\n\t\tlocal function add_content(item)\n\t\t\treturn content[item] or \"\"\n\t\tend\n\t\tlocal row = gsub(row, \"[%a_]+\", add_content)\n\t\ttable.insert(output, row)\n\tend\n\t\n\ttable.insert(output, \"|}\")\n\t\n\treturn\
      \ table.concat(output)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:01.507Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=74819 t=1555362541385377
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:01 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1316.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 584140632, 634616743, 690412013
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4118506\" pageid=\"4118506\" ns=\"828\" title=\"Module:IPA/data\"><revisions><rev user=\"Mahagaja\" timestamp=\"2019-02-27T13:31:09Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"mfe now exists\" xml:space=\"preserve\">local data = {}\n\n--[=[\tPlease add language codes for new pronunciation keys to the list below.\n\t\tThis will allow [[Template:IPA]] and the\
      \ functions in [[Module:IPA]] to\n\t\tautomatically link to the key.\t]=]\nlocal langcodes = {\n\t\"ca\",\n    \"cy\",\n\t\"de\",\n    \"dsb\",\n    \"el\",\n\t\"en\",\n    \"eo\",\n    \"es\",\n    \"fr\",\n    \"ga\",\n    \"gd\",\n    \"got\",\n   \
      \ \"hu\",\n    \"it\",\n    \"la\",\n    \"liv\",\n    \"mdf\",\n    \"mfe\",\n    \"my\",\n    \"nci\",\n\t\"nl\",\n    \"no\",\n    \"pjt\",\n    \"pl\",\n    \"pt\",\n    \"sl\",\n    \"sga\",\n    \"sv\",\n    \"ug\",\n    \"wlm\",\n    \"yi\",\n}\n\
      \ndata.langs_with_infopages = {}\n\n--[=[\tThis goes through the list of langcodes, and fills\n\t\tthe table data.langs_with_infopages with items\n\t\tsuch as [\"ca\"] = true, [\"cy\"] = true, ... ,\n\t\tso that [[Module:IPA]] can easily access them. ]=]\n\
      for _, langcode in ipairs(langcodes) do\n\tdata.langs_with_infopages[langcode] = true\nend\n\n-- Non-standard or obsolete IPA symbols.\ndata.nonstandard = {\n\t--[[\tThe following symbols consist of more than one character,\n\t\t\tso we can't put them\
      \ in the line below.\t\t]]\n\t\"ɑ̢\", \"d̂\", \"t̂\", \"n̂\", \"l̂\", \"k̫\", \"ɔ̗\", \"ɔ̖\",\n\t\n\t\"[ʦʣʧʤʨʥ?ƍσƺƪƻƾƞᶀᶁᶂᶃᶄᶅᶆᶈᶇᶉᶊᶋƫᶌᶍᶎʓʆλƛłščžǰǧǯẋᵻᵿⱻʚ\"\n\t.. \"ɷωıȹȸ∅ØƥƭƈƙʠʇʗʖʞɩɼȣяɿʅʮʯᴀᴀᴇGRŒQȡȶȵȴKPT]\"\n}\n\n-- See valid IPA characters at [[Module:IPA/data/symbols]].\n\
      \ndata.phonemes = {}\ndata.phonemes[\"nl\"] = {\n\t\"m\", \"n\", \"ŋ\",\n\t\"p\", \"b\", \"t\", \"d\", \"k\", \"ɡ\",\n\t\"f\", \"v\", \"s\", \"z\", \"ʃ\", \"ʒ\", \"x\", \"ɣ\", \"ɦ\",\n\t\"ʋ\", \"l\", \"j\", \"r\",\n\t\"ɪ\", \"ʏ\", \"ɛ\", \"ə\", \"ɔ\",\
      \ \"ɑ\",\n\t\"i\", \"iː\", \"y\", \"yː\", \"u\", \"uː\", \"eː\", \"øː\", \"oː\", \"ɛː\", \"œː\", \"ɔː\", \"aː\",\n\t\"ɛi̯\", \"œy̯\", \"ɔi̯\", \"ɑu̯\", \"ɑi̯\",\n\t\"iu̯\", \"yu̯\", \"ui̯\", \"eːu̯\", \"oːi̯\", \"aːi̯\",\n\t\"ˈ\", \"ˌ\", \".\", \" \",\n\
      \t}\ndata.phonemes[\"hy\"] = {\n\t\"ɑ\", \"b\", \"ɡ\", \"d\", \"ɛ\", \"z\", \"ɛ\", \"ə\", \"tʰ\", \"ʒ\", \"i\", \"l\", \"χ\", \"t͡s\",\n\t\"k\", \"h\", \"d͡z\", \"ʁ\", \"t͡ʃ\", \"m\", \"j\", \"n\", \"ʃ\", \"ɔ\", \"t͡ʃʰ\", \"p\", \"d͡ʒ\",\n\t\"r\", \"s\"\
      , \"v\", \"t\", \"ɾ\", \"t͡sʰ\", \"v\", \"pʰ\", \"kʰ\", \"ɔ\", \"f\", \"ŋɡ\", \"ŋk\",\n\t\"ŋχ\", \"u\", \"ˈ\", \"ˌ\", \".\", \" \", \"ː\",\n\t}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:01.700Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Fdata%2Fsymbols&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=36388 t=1555362541586591
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:01 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1344.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 586885532, 554060580, 704121569
    body: !!binary |-
      
- recorded: 2017-03-04T10:37:20.318Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Fdata%2FX-SAMPA&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=FR:PAC:Pernes-les-Fontaines:44.00:5.05:v4; WMF-Last-Access=04-Mar-2017; WMF-Last-Access-Global=04-Mar-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=84058 t=1488623840115772
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sat, 04 Mar 2017 10:37:20 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=04-Mar-2017;WMF-Last-Access-Global=04-Mar-2017;https=1
      X-Cache: cp1066 pass, cp3030 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 78.229.90.61
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.14
      X-Varnish: 292070749, 772417238, 526889035
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"6048449\" pageid=\"6048449\" ns=\"828\" title=\"Module:IPA/data/X-SAMPA\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-02-21T11:04:35Z\" comment=\"more\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local U = mw.ustring.char\nlocal gmatch = mw.ustring.gmatch\n\nlocal data = {\n\t-- not in official X-SAMPA; from http://www.kneequickie.com/kq/Z-SAMPA\n\t[&quot;b\\\\&quot;] = { &quot;ⱱ&quot;\
      \ },\n\t[&quot;b_&lt;&quot;] = { &quot;ɓ&quot; },\n\t[&quot;d`&quot;] = { &quot;ɖ&quot;, has_descender = true },\n\t[&quot;d_&lt;&quot;] = { &quot;ɗ&quot; },\n\t-- not in official X-SAMPA; Wikipedia-specific\n\t[&quot;d`_&lt;&quot;] = { &quot;ᶑ&quot;,\
      \ has_descender = true },\n\t[&quot;g&quot;] = { &quot;ɡ&quot;, has_descender = true  },\n\t[&quot;g_&lt;&quot;] = { &quot;ɠ&quot;, has_descender = true },\n\t[&quot;h\\\\&quot;] = { &quot;ɦ&quot; },\n\t[&quot;j\\\\&quot;] = { &quot;ʝ&quot;, has_descender\
      \ = true  },\n\t[&quot;l`&quot;] = { &quot;ɭ&quot;, has_descender = true  },\n\t[&quot;l\\\\&quot;] = { &quot;ɺ&quot; },\n\t[&quot;n`&quot;] = { &quot;ɳ&quot;, has_descender = true  },\n\t[&quot;p\\\\&quot;] = { &quot;ɸ&quot;, has_descender = true  },\n\
      \t[&quot;r`&quot;] = { &quot;ɽ&quot;, has_descender = true  },\n\t[&quot;r\\\\&quot;] = { &quot;ɹ&quot; },\n\t[&quot;r\\\\`&quot;] = { &quot;ɻ&quot;, has_descender = true  },\n\t[&quot;s`&quot;] = { &quot;ʂ&quot;, has_descender = true  },\n\t[&quot;s\\\
      \\&quot;] = { &quot;ɕ&quot; },\n\t[&quot;t`&quot;] = { &quot;ʈ&quot; },\n\t[&quot;v\\\\&quot;] = { &quot;ʋ&quot; },\n\t[&quot;x\\\\&quot;] = { &quot;ɧ&quot;, has_descender = true  },\n\t[&quot;z`&quot;] = { &quot;ʐ&quot;, has_descender = true  },\n\t[&quot;z\\\
      \\&quot;] = { &quot;ʑ&quot; },\n\t[&quot;A&quot;] = { &quot;ɑ&quot; },\n\t[&quot;B&quot;] = { &quot;β&quot;, has_descender = true  },\n\t[&quot;B\\\\&quot;] = { &quot;ʙ&quot; },\n\t[&quot;C&quot;] = { &quot;ç&quot;, has_descender = true  },\n\t[&quot;D&quot;]\
      \ = { &quot;ð&quot; },\n\t[&quot;E&quot;] = { &quot;ɛ&quot; },\n\t[&quot;F&quot;] = { &quot;ɱ&quot;, has_descender = true  },\n\t[&quot;G&quot;] = { &quot;ɣ&quot;, has_descender = true  },\n\t[&quot;G\\\\&quot;] = { &quot;ɢ&quot; },\n\t[&quot;G\\\\_&lt;&quot;]\
      \ = { &quot;ʛ&quot; },\n\t[&quot;H&quot;] = { &quot;ɥ&quot;, has_descender = true  },\n\t[&quot;H\\\\&quot;] = { &quot;ʜ&quot; },\n\t[&quot;I&quot;] = { &quot;ɪ&quot; },\n\t[&quot;I\\\\&quot;] = { &quot;ɪ̈&quot; },\n\t[&quot;J&quot;] = { &quot;ɲ&quot;,\
      \ has_descender = true  },\n\t[&quot;J\\\\&quot;] = { &quot;ɟ&quot; },\n\t[&quot;J\\\\_&lt;&quot;] = { &quot;ʄ&quot;, has_descender = true  },\n\t[&quot;K&quot;] = { &quot;ɬ&quot; },\n\t[&quot;K\\\\&quot;] = { &quot;ɮ&quot;, has_descender = true  },\n\t\
      [&quot;L&quot;] = { &quot;ʎ&quot; },\n\t[&quot;L\\\\&quot;] = { &quot;ʟ&quot; },\n\t[&quot;M&quot;] = { &quot;ɯ&quot; },\n\t[&quot;M\\\\&quot;] = { &quot;ɰ&quot;, has_descender = true  },\n\t[&quot;N&quot;] = { &quot;ŋ&quot;, has_descender = true  },\n\
      \t[&quot;N\\\\&quot;] = { &quot;ɴ&quot; },\n\t[&quot;O&quot;] = { &quot;ɔ&quot; },\n\t[&quot;O\\\\&quot;] = { &quot;ʘ&quot; },\n\t[&quot;P&quot;] = { &quot;ʋ&quot; },\n\t[&quot;Q&quot;] = { &quot;ɒ&quot; },\n\t[&quot;R&quot;] = { &quot;ʁ&quot; },\n\t[&quot;R\\\
      \\&quot;] = { &quot;ʀ&quot; },\n\t[&quot;S&quot;] = { &quot;ʃ&quot;, has_descender = true  },\n\t[&quot;T&quot;] = { &quot;θ&quot; },\n\t[&quot;U&quot;] = { &quot;ʊ&quot; },\n\t[&quot;U\\\\&quot;] = { &quot;ʊ̈&quot; },\n\t[&quot;V&quot;] = { &quot;ʌ&quot;\
      \ },\n\t[&quot;W&quot;] = { &quot;ʍ&quot; },\n\t[&quot;X&quot;] = { &quot;χ&quot;, has_descender = true  },\n\t[&quot;X\\\\&quot;] = { &quot;ħ&quot; },\n\t[&quot;Y&quot;] = { &quot;ʏ&quot; },\n\t[&quot;Z&quot;] = { &quot;ʒ&quot;, has_descender = true \
      \ },\n\t[&quot;\\&quot;&quot;] = { &quot;ˈ&quot; },\n\t[&quot;%&quot;] = { &quot;ˌ&quot; },\n\t-- not in official X-SAMPA; from http://www.kneequickie.com/kq/Z-SAMPA\n\t[&quot;%\\\\&quot;] = { &quot;ᴙ&quot; }, \n\t[&quot;'&quot;] = { &quot;ʲ&quot;, is_diacritic\
      \ = true },\n\t[&quot;:&quot;] = { &quot;ː&quot;, is_diacritic = true },\n\t[&quot;:\\\\&quot;] = { &quot;ˑ&quot;, is_diacritic = true },\n\t[&quot;@&quot;] = { &quot;ə&quot; },\n\t[&quot;@`&quot;] = { &quot;ɚ&quot; },\n\t[&quot;@\\\\&quot;] = { &quot;ɘ\
      &quot; },\n\t[&quot;{&quot;] = { &quot;æ&quot; },\n\t[&quot;}&quot;] = { &quot;ʉ&quot; },\n\t[&quot;1&quot;] = { &quot;ɨ&quot; },\n\t[&quot;2&quot;] = { &quot;ø&quot; },\n\t[&quot;3&quot;] = { &quot;ɜ&quot; },\n\t[&quot;3`&quot;] = { &quot;ɝ&quot; },\n\
      \t[&quot;3\\\\&quot;] = { &quot;ɞ&quot; },\n\t[&quot;4&quot;] = { &quot;ɾ&quot; },\n\t[&quot;5&quot;] = { &quot;ɫ&quot; },\n\t[&quot;6&quot;] = { &quot;ɐ&quot; },\n\t[&quot;7&quot;] = { &quot;ɤ&quot; },\n\t[&quot;8&quot;] = { &quot;ɵ&quot; },\n\t[&quot;9&quot;]\
      \ = { &quot;œ&quot; },\n\t[&quot;&amp;&quot;] = { &quot;ɶ&quot; },\n\t[&quot;?&quot;] = { &quot;ʔ&quot; },\n\t[&quot;?\\\\&quot;] = { &quot;ʕ&quot; },\n\t[&quot;&lt;\\\\&quot;] = { &quot;ʢ&quot; },\n\t[&quot;&gt;\\\\&quot;] = { &quot;ʡ&quot; },\n\t[&quot;^&quot;]\
      \ = { &quot;ꜛ&quot; },\n\t[&quot;!&quot;] = { &quot;ꜜ&quot; },\n\t-- not in official X-SAMPA\n\t[&quot;!!&quot;] = { &quot;‼&quot; }, \n\t[&quot;!\\\\&quot;] = { &quot;ǃ&quot; },\n\t[&quot;|\\\\&quot;] = { &quot;ǀ&quot;, has_descender = true  },\n\t[&quot;||&quot;]\
      \ = { &quot;‖&quot;, has_descender = true  },\n\t[&quot;|\\\\|\\\\&quot;] = { &quot;ǁ&quot;, has_descender = true  },\n\t[&quot;=\\\\&quot;] = { &quot;ǂ&quot;, has_descender = true  },\n\t-- linking mark, liaison\n\t[&quot;-\\\\&quot;] = { &quot;‿&quot;,\
      \ is_diacritic = true }, \n\t-- coarticulated; not in official X-SAMPA\n\t[&quot;__&quot;] = { U(0x361) }, \n\t-- fortis, strong articulation; not in official X-SAMPA\n\t[&quot;_:&quot;] = { U(0x348) }, \n\t[&quot;_\\&quot;&quot;] = { U(0x308), is_diacritic\
      \ = true },\n\t-- advanced\n\t[&quot;_+&quot;] = { U(0x31F), with_descender = &quot;˖&quot;, is_diacritic = true }, \n\t-- retracted\n\t[&quot;_-&quot;] = { U(0x320), with_descender = &quot;˗&quot;, is_diacritic = true }, \n\t-- rising tone\n\t[&quot;_/&quot;]\
      \ = { U(0x30C), is_diacritic = true }, \n\t-- voiceless\n\t[&quot;_0&quot;] = { U(0x325), with_descender = U(0x30A), is_diacritic = true }, \n\t-- syllabic\n\t[&quot;=&quot;] = { U(0x329), with_descender = U(0x30D), is_diacritic = true }, \n\t-- syllabic\n\
      \t[&quot;_=&quot;] = { U(0x329), with_descender = U(0x30D), is_diacritic = true }, \n\t-- strident: not in official X-SAMPA; from http://www.kneequickie.com/kq/Z-SAMPA\n\t[&quot;_%\\\\&quot;] = { U(0x1DFD) }, \n\t-- ejective\n\t[&quot;_&gt;&quot;] = {\
      \ &quot;ʼ&quot;, is_diacritic = true }, \n\t-- pharyngealized\n\t[&quot;_?\\\\&quot;] = { &quot;ˤ&quot;, is_diacritic = true }, \n\t-- falling tone\n\t[&quot;_\\\\&quot;] = { U(0x302), is_diacritic = true }, \n\t-- non-syllabic\n\t[&quot;_^&quot;] = {\
      \ U(0x32F), with_descender = U(0x311), is_diacritic = true }, \n\t-- no audible release\n\t[&quot;_}&quot;] = { U(0x31A), is_diacritic = true }, \n\t-- r-coloring (colouring), rhotacization\n\t[&quot;`&quot;] = { U(0x2DE), is_diacritic = true }, \n\t--\
      \ nasalization\n\t[&quot;~&quot;] = { U(0x303), is_diacritic = true }, \n\t-- advanced tongue root\n\t[&quot;_A&quot;] = { U(0x318), is_diacritic = true }, \n\t-- apical\n\t[&quot;_a&quot;] = { U(0x33A), is_diacritic = true }, \n\t-- extra-low tone\n\t\
      [&quot;_B&quot;] = { U(0x30F), is_diacritic = true }, \n\t-- low rising tone\n\t[&quot;_B_L&quot;] = { U(0x1DC5), is_diacritic = true }, \n\t-- less rounded\n\t[&quot;_c&quot;] = { U(0x31C), is_diacritic = true }, \n\t-- dental\n\t[&quot;_d&quot;] = {\
      \ U(0x32A), is_diacritic = true }, \n\t-- velarized or pharyngealized (dark)\n\t[&quot;_e&quot;] = { U(0x334), is_diacritic = true }, \n\t-- downstep\n\t[&quot;&lt;F&gt;&quot;] = { &quot;↘&quot; }, \n\t-- falling tone\n\t[&quot;_F&quot;] = { U(0x302),\
      \ is_diacritic = true }, \n\t-- velarized\n\t[&quot;_G&quot;] = { &quot;ˠ&quot;, is_diacritic = true }, \n\t-- high tone\n\t[&quot;_H&quot;] = { U(0x301), is_diacritic = true }, \n\t-- high rising tone\n\t[&quot;_H_T&quot;] = { U(0x1DC4), is_diacritic\
      \ = true }, \n\t-- aspiration\n\t[&quot;_h&quot;] = { &quot;ʰ&quot;, is_diacritic = true }, \n\t-- palatalization\n\t[&quot;_j&quot;] = { &quot;ʲ&quot;, is_diacritic = true }, \n\t-- creaky voice, laryngealization, vocal fry\n\t[&quot;_k&quot;] = { U(0x330),\
      \ is_diacritic = true }, \n\t-- low tone\n\t[&quot;_L&quot;] = { U(0x300), is_diacritic = true }, \n\t-- lateral release\n\t[&quot;_l&quot;] = { &quot;ˡ&quot;, is_diacritic = true }, \n\t-- mid tone\n\t[&quot;_M&quot;] = { U(0x304), is_diacritic = true\
      \ }, \n\t-- laminal\n\t[&quot;_m&quot;] = { U(0x33B), is_diacritic = true }, \n\t-- linguolabial\n\t[&quot;_N&quot;] = { U(0x33C), is_diacritic = true }, \n\t-- nasal release\n\t[&quot;_n&quot;] = { &quot;ⁿ&quot;, is_diacritic = true }, \n\t-- more rounded\n\
      \t[&quot;_O&quot;] = { U(0x339), is_diacritic = true }, \n\t-- lowered\n\t[&quot;_o&quot;] = { U(0x31E), with_descender = &quot;˕&quot;, is_diacritic = true }, \n\t-- retracted tongue root\n\t[&quot;_q&quot;] = { U(0x319), is_diacritic = true }, \n\t--\
      \ global rise\n\t[&quot;&lt;R&gt;&quot;] = { &quot;↗&quot; }, \n\t-- rising tone\n\t[&quot;_R&quot;] = { U(0x30C), is_diacritic = true }, \n\t-- rising falling tone\n\t[&quot;_R_F&quot;] = { U(0x1DC8), is_diacritic = true }, \n\t-- raised\n\t[&quot;_r&quot;]\
      \ = { U(0x31D), is_diacritic = true }, \n\t-- extra-high tone\n\t[&quot;_T&quot;] = { U(0x30B), is_diacritic = true }, \n\t-- breathy voice, murmured voice, murmur, whispery voice\n\t[&quot;_t&quot;] = { U(0x324), is_diacritic = true }, \n\t-- voiced\n\
      \t[&quot;_v&quot;] = { U(0x32C), is_diacritic = true }, \n\t-- labialized\n\t[&quot;_w&quot;] = { &quot;ʷ&quot;, is_diacritic = true }, \n\t-- extra-short\n\t[&quot;_X&quot;] = { U(0x306), is_diacritic = true }, \n\t-- mid-centralized\n\t[&quot;_x&quot;]\
      \ = { U(0x33D), is_diacritic = true }, \n\t[&quot;__T&quot;] = { &quot;˥&quot; },\n\t[&quot;__H&quot;] = { &quot;˦&quot; },\n\t[&quot;__M&quot;] = { &quot;˧&quot; },\n\t[&quot;__L&quot;] = { &quot;˨&quot; },\n\t[&quot;__B&quot;] = { &quot;˩&quot; },\n\t\
      -- not X-SAMPA; for convenience\n\t[&quot;0&quot;] = { &quot;◌&quot; },\n}\n\nlocal identical = &quot;acehklmnorstuvwxz&quot;\nfor char in gmatch(identical, &quot;.&quot;) do\n\tdata[char] = { char }\nend\n\nlocal identical_with_descender = &quot;jpqy&quot;\n\
      for char in gmatch(identical_with_descender, &quot;.&quot;) do\n\tdata[char] = { char, has_descender = true }\nend\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:02.075Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Asyllables&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46374 t=1555362541976293
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:02 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1343.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 513773456, 835457473, 685928667
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5882110\" pageid=\"5882110\" ns=\"828\" title=\"Module:syllables\"><revisions><rev user=\"Hazarasp\" timestamp=\"2018-08-21T12:20:37Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal vowels = mw.loadData(\"Module:IPA/data/symbols\").vowels .. \"ᵻ\" .. \"ᵿ\"\n\nlocal U = mw.ustring.char\n\n--[[\nAdd diphthongs to\
      \ the list if they do not contain semivowel symbols: /j w ɰ ɥ/.\nDo not include non-syllabic diacritics: /au/, not /au̯/.\nThe module automatically does not count vowels with non-syllabic diacritics.\n]]--\nlocal diphthongs = {\n\t[\"de\"] = {\n\t\t\"\
      a[ɪʊ]\",\n\t\t\"ɔ[ʏɪ]\",\n\t\t},\n\t[\"ca\"] = {\t-- Catalan has diphthongs, but they are generally transcribed using\n\t\t\t\t-- /w/ and /j/, so do not need to be listed (see [[w:Catalan language#Diphthongs and triphthongs]].\n\t\t},\n\t[\"cs\"] = { --\
      \ [[w:Czech phonology#Diphthongs]]\n\t\t\"[aeo]u\",\n\t\t},\n\t[\"en\"] = { -- from [[Appendix:English pronunciation]] mostly, but /ʌɪ/ is from the OED\n\t\t\"[aɑeɛoɔʌ][ɪi]\",\n\t\t\"[ɑɒæo]e\",\n\t\t\"[əɐ]ʉ\",\n\t\t\"[aɒəoɔʌ]ʊ\",\n\t\t\"æo\",\n\t\t\"[ɛ\
      eɪiɔʊʉ]ə\",\t-- /iə/ is a diphthong in NZE, but a disyllabic sequence in GA.\n\t\t\t\t\t\t-- /ɪə/ is both a disyllabic sequence and a diphthong in old-fashioned RP.\n\t\t\"[aʌ][ʊɪ]ə\",\t-- May be a disyllabic sequence in some or all dialects?\n\t\t},\n\
      \t[\"fi\"] = {\t\t\t-- [[w:Finnish phonology#Diphthongs]]\n\t\t\"[ɑeouyæø]i\",\n\t\t\"[ɑoei]u\",\n\t\t\"[eiæø]y\",\n\t\t\"uo\",\n\t\t\"ie\",\n\t\t\"yø\",\n\t\t},\n\t[\"fr\"] = {\t\t\t-- French has diphthongs, but they are transcribed\n\t\t},\t\t\t\t--\
      \ with semivowel symbols: [[w:French phonology#Glides and diphthongs]].\n\t[\"grc\"] = {\n\t\t\"[aeyo]i\",\n\t\t\"[ae]u\",\n\t\t\"[ɛɔa]ː[iu]\",\n\t\t},\n\t[\"is\"] = {\t\t\t-- [[w:Icelandic phonology#Vowels]]\n\t\t\"[aeø][iɪy]\",\t-- Wikipedia is oddly\
      \ specific about the second element: ei and ai, but øɪ.\n\t\t\"[ao]u\",\n\t\t},\n\t[\"it\"] = {\n\t\t\"[aeɛoɔu]i\",\n\t\t\"[aeɛioɔ]u\",\n\t\t},\n\t[\"la\"] = {\n\t\t\"[eaou]i\",\n\t\t\"[eao]u\",\n\t\t\"[ao]e\",\n\t\t},\n\t[\"lb\"] = {\n\t\t\"[iu]ə\",\n\
      \t\t\"[ɜoæɑ]ɪ\",\n\t\t\"[əæɑ]ʊ\",\n\t},\n\t[\"sl\"] = {\t\t\t-- No diphthongs, properly speaking; sequences of a vowel, /j/ and /w/ though\n\t},\n\t[\"sk\"] = {\t\t\t-- Slovak has rising diphthongs, /i̯e, i̯a, i̯u, u̯o/, which are probably always spelled\
      \ with the nonsyllabic diacritic, so do not need to be listed.\n\t},\n\t[\"ru\"] = {\t\t\t-- No diphthongs, properly speaking; sequences of a vowel and /j/ though.\n\t},\n\t[\"sq\"] = {\t\t\t-- [[w:Albanian language#Vowels]] doesn't mention anything about\
      \ diphthongs.\n\t},\n\t[\"ug\"] = {\t\t\t-- No diphthongs.\n\t},\n}\n\n--[[ No use for this at the moment, though it is an interesting catalogue.\n\tIt might be usable for phonetic transcriptions.\n\tDiacritics added to vowels:\n\tinverted breve above,\
      \ inverted breve below,\n\tup tack, down tack,\n\tleft tack, right tack,\n\tdiaeresis (above), diaeresis below,\n\tright half ring, left half ring,\n\tplus sign below, minus sign below,\n\tcombining x above, rhotic hook,\n\ttilde (above), tilde below\n\
      \tligature tie (combining double breve), ligature tie below\n\t]]\nlocal diacritics = U(0x311)..U(0x32F)\n\t..U(0x31D)..U(0x31E)\n\t..U(0x318)..U(0x319)\n\t..U(0x308)..U(0x324)\n\t..U(0x339)..U(0x31C)\n\t..U(0x31F)..U(0x320)\n\t..U(0x33D)..U(0x2DE)\n\t\
      ..U(0x303)..U(0x330)\n\t..U(0x361)..U(0x35C)\n\n--[[\ncombining acute and grave tone marks, circumflex\n]]--\nlocal tone = \"[\" .. U(0x341) .. U(0x340) ..U (0x302) .. \"]\"\nlocal nonsyllabicDiacritics = U(0x311) .. U(0x32F)\nlocal syllabicDiacritics\
      \ = U(0x0329) .. U(0x030D)\nlocal ties = U(0x361) .. U(0x35C)\n\n-- long, half-long, extra short\nlocal lengthDiacritics = U(0x2D0) .. U(0x2D1) .. U(0x306)\nlocal vowel = \"[\" .. vowels .. \"]\" .. tone .. \"?\"\nlocal tie = \"[\" .. ties .. \"]\"\nlocal\
      \ nonsyllabicDiacritic = \"[\" .. nonsyllabicDiacritics .. \"]\"\nlocal syllabicDiacritic = \"[\" .. syllabicDiacritics .. \"]\"\n\nlocal UTF8Char = \"[\\1-\\127\\194-\\244][\\128-\\191]*\"\n\n\nfunction export.getVowels(remainder, lang)\n\tif string.find(remainder,\
      \ \"^[%\\[/]?%-\") or string.find(remainder, \"%-[%\\[/]?$\") then\n\t\treturn nil\n\tend\t-- If a hyphen is at the beginning or end of the transcription, do not count syllables.\n\t\n\tlocal count = 0\n\tlocal diphs = diphthongs[lang:getCode()] or {}\n\
      \t\n\tremainder = mw.ustring.toNFD(remainder)\n\tremainder = string.gsub(remainder, \"%((.*)%)\", \"%1\") -- Remove parentheses.\n\n\twhile remainder ~= \"\" do\n\t\t-- Ignore nonsyllabic vowels\n\t\tremainder = mw.ustring.gsub(remainder, \"^\" .. vowel\
      \ .. nonsyllabicDiacritic, \"\")\n\t\t\n\t\tlocal m =\n\t\t\tmw.ustring.match(remainder, \"^.\" .. syllabicDiacritic) or  -- Syllabic consonant\n\t\t\tmw.ustring.match(remainder, \"^\" .. vowel .. tie .. vowel)  -- Tie bar\n\t\t\n\t\t-- Starts with a recognised\
      \ diphthong?\n\t\tfor _, diph in ipairs(diphs) do\n\t\t\tif m then\n\t\t\t\tbreak\n\t\t\tend\n\t\t\t\n\t\t\tm = m or mw.ustring.match(remainder, \"^\" .. diph)\n\t\tend\n\t\t\n\t\t-- If we haven't found anything yet, just match on a single vowel\n\t\t\
      m = m or mw.ustring.match(remainder, \"^\" .. vowel)\n\t\t\n\t\tif m then\n\t\t\t-- Found a vowel, add it\n\t\t\tcount = count + 1\n\t\t\tremainder = string.sub(remainder, #m + 1)\n\t\telse\n\t\t\t-- Found a non-vowel, skip it\n\t\t\tremainder = string.gsub(remainder,\
      \ \"^\" .. UTF8Char, \"\")\n\t\tend\n\tend\n\t\n\tif count ~= 0 then return count end\n\t\n\treturn nil\n\t\nend\n\n\nfunction export.countVowels2Test(frame)\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {default = \"\"},\n\t}\n\t\n\tlocal\
      \ args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal count = export.getVowels(args[2], lang)\n\t\n\treturn\
      \ 'The text \"' .. args[2] .. '\" contains ' .. count .. ' vowels.'\nend\n\n\nlocal function countVowels(text)\n\ttext = mw.ustring.toNFD(text) or error(\"Invalid UTF-8\")\n\t\n\tlocal _, count = mw.ustring.gsub(text, vowel, \"\")\n\tlocal _, sequenceCount\
      \ = mw.ustring.gsub(text, vowel..\"+\", \"\")\n\tlocal _, nonsyllabicCount = mw.ustring.gsub(text, vowel .. nonsyllabicDiacritic, \"\")\n\tlocal _, tieCount = mw.ustring.gsub(text, vowel .. tie .. vowel, \"\")\n\t\n\tlocal diphthongCount = count - (nonsyllabicCount\
      \ + tieCount)\n\t\n\treturn count, sequenceCount, diphthongCount\nend\n\n\nlocal function countDiphthongs(text, lang)\n\ttext = mw.ustring.toNFD(text) or error(\"Invalid UTF-8\")\n\t\n\tlocal diphthongs = diphthongs[lang:getCode()] or {}\n\t\n\tlocal _,\
      \ count\n\tlocal total = 0\n\t\n\tif diphthongs then\n\t\tfor i, diphthong in pairs(diphthongs) do\n\t\t\t_, count = mw.ustring.gsub(text, diphthong, \"\")\n\t\t\ttotal = total + count\n\t\tend\n\tend\n\t\n\treturn total\nend\n\n-- Used by [[Module:IPA]]\n\
      function export.hasDiphthongs(lang)\n\tif  (diphthongs[lang:getCode()]) then\n\t\treturn true\n\tend\n\treturn false\nend\n\nfunction export.countVowels(frame)\n\tlocal params = {\n\t\t[1] = {default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame.args, params)\n\t\n\tlocal count, sequenceCount, diphthongCount = countVowels(args[1])\n\t\n\tlocal outputs = {}\n\ttable.insert(outputs, (count or 'an unknown number of') .. ' vowels')\n\ttable.insert(outputs, (sequenceCount or 'an unknown\
      \ number of') .. ' vowel sequences')\n\ttable.insert(outputs, (diphthongCount or 'an unknown number of') .. ' vowels or vowels and diphthongs')\n\t\n\treturn 'The text \"' .. args[1] .. '\" contains ' .. mw.text.listToText(outputs) .. \".\"\nend\n\n\n\
      function export.countVowelsDiphthongs(frame)\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\tlocal lang = require(\"Module:languages\"\
      ).getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal vowels = countVowels(args[2])\n\tlocal count = vowels - countDiphthongs(args[2], lang) or 0\n\t\n\tlocal out = 'The text \"' .. args[2] .. '\" contains ' .. (count or 'an\
      \ unknown number of')\n\t\n\tif count == 1 then\n\t\tout = out .. ' vowel or diphthong.'\n\telse\n\t\tout = out .. ' vowels or diphthongs.'\n\tend\n\t\n\treturn out\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:02.249Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Agl-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47741 t=1555362542157014
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1310'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:02 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1224.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 673694804, 509544089, 677995327
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="941719" pageid="941719" ns="10" title="Template:gl-noun"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T18:10:34Z" contentformat="text/x-wiki"
      contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:gl-noun]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow
      only template editors and administrators] (indefinite))" xml:space="preserve">&lt;includeonly&gt;{{#invoke:gl-noun|show}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}} [[Category:Galician headword-line templates|noun]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:09:02.442Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Agl-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58635 t=1555362542336549
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:02 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 505690777, 509544092, 697514326
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4403162\" pageid=\"4403162\" ns=\"828\" title=\"Module:gl-noun\"><revisions><rev user=\"Rua\" timestamp=\"2018-09-09T13:04:59Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local m_plural = require(\"Module:gl-plural\")\n\nlocal export = {}\n\nlocal lang = require(\"Module:languages\").getByCode(\"gl\")\n\nfunction export.show(frame)\n\tlocal args\
      \ = frame:getParent().args\n\tPAGENAME = mw.title.getCurrentTitle().text\n\tNAMESPACE = mw.title.getCurrentTitle().nsText\n\t\n\tlocal data = {lang = lang, pos_category = \"nouns\", categories = {}, heads = {args[\"head\"]}, genders = {}, inflections =\
      \ {}}\n\t\n\t-- Genders\n\tlocal is_plural = false\n\tlocal g1 = args[1]; if g1 == \"\" then g1 = nil end\n\tlocal g2 = args[\"g2\"]; if g2 == \"\" then g2 = nil end\n\t\n\tg1 = g1 or \"?\"\n\t\n\tif g1 == \"morf\" or g1 == \"mf\" or g1 == \"c\" then\n\
      \t\tg1 = \"m\"\n\t\tg2 = \"f\"\n\tend\n\t\n\tif g2 == \"morf\" or g2 == \"mf\" or g2 == \"c\" then\n\t\terror(\"g2 can't be mf, morf or c!\")\n\tend\n\t\n\tdata.genders = {g1}\n\t\n\tif g2 then\n\t\ttable.insert(data.genders, g2)\n\t\ttable.insert(data.categories,\
      \ lang:getCanonicalName() .. \" nouns with varying gender\")\n\tend\n\t\n\tif g1:find(\"p\") or (g2 and g2:find(\"p\")) then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" pluralia tantum\")\n\t\tis_plural = true\n\tend\n\t\n\t-- for\
      \ compatibility with pt-noun\n\tif (args[2] == \"s\") then\n\t\targs[2] = PAGENAME .. \"s\"\n\telseif (args[2] == \"es\") then\n\t\targs[2] = PAGENAME .. \"es\"\n\tend\n\t\n\tif not is_plural then\n\t\tlocal par2 = args[2]; if par2 == \"\" then par2 =\
      \ nil end\n\t\tlocal parpl = args[\"pl\"]; if parpl == \"\" then parpl = nil end\n\t\tlocal unc = args[\"unc\"] ~= nil\n\t\t\n\t\tif not par2 then\n\t\t\tpar2 = parpl\n\t\tend\n\t\t\n\t\tif par2 == \"-\" then\n\t\t\ttable.insert(data.inflections, {label\
      \ = \"uncountable\"})\n\t\telse\n\t\t\tif unc then\n\t\t\t\ttable.insert(data.inflections, {label = \"usually uncountable\"})\n\t\t\tend\n\t\t\t\n\t\t\tlocal plurals = {label = \"plural\", accel = {form = \"p\"}, request = true}\n\t\t\t\n\t\t\tif par2\
      \ ~= \"?\" then\n\t\t\t\tif not par2 then\n\t\t\t\t\tpar2 = m_plural.get_plural(PAGENAME)\n\t\t\t\tend\n\t\t\t\n\t\t\t\tif par2 then\n\t\t\t\t\ttable.insert(plurals, par2)\n\t\t\t\t\t\n\t\t\t\t\tlocal parpl2 = args[\"pl2\"]; if parpl2 == \"\" then parpl2\
      \ = nil end\n\t\t\t\t\tlocal parpl3 = args[\"pl3\"]; if parpl3 == \"\" then parpl3 = nil end\n\t\t\t\t\t\n\t\t\t\t\tif parpl2 then\n\t\t\t\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" terms with multiple plurals\")\n\t\t\t\t\t\ttable.insert(data.plurals,\
      \ parpl2)\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tif parpl3 then\n\t\t\t\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" terms with multiple plurals\")\n\t\t\t\t\t\ttable.insert(data.plurals, parpl3)\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\
      \n\t\t\t\ttable.insert(data.inflections, plurals)\n\t\t\tend\n\t\tend\n\tend\n\t\n\tlocal parf = args[\"f\"]; if parf == \"\" then parf = nil end\n\tlocal parf2 = args[\"f2\"]; if parf2 == \"\" then parf2 = nil end\n\tlocal parfpl = args[\"fpl\"]; if parfpl\
      \ == \"\" then parfpl = nil end\n\tlocal parfpl2 = args[\"fpl2\"]; if parfpl2 == \"\" then parfpl2 = nil end\n\t\n\tlocal feminines = {label = \"feminine\"}\n\tlocal feminine_plurals = {label = \"feminine plural\"}\n\t\n\tif parf then\n\t\ttable.insert(feminines,\
      \ parf)\n\t\t\n\t\tif not is_plural then\n\t\t\tif not parfpl then\n\t\t\t\tparfpl = m_plural.get_plural(parf)\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(feminine_plurals, parfpl)\n\t\tend\n\t\t\n\t\tif parf2 then\n\t\t\ttable.insert(feminines, parf2)\n\t\t\
      \t\n\t\t\tif not is_plural then\n\t\t\t\tif not parfpl2 then\n\t\t\t\t\tparfpl2 = m_plural.get_plural(parf2)\n\t\t\t\tend\n\t\t\t\n\t\t\t\ttable.insert(feminine_plurals, parfpl)\n\t\t\tend\n\t\tend\n\t\t\n\t\ttable.insert(data.inflections, feminines)\n\
      \t\t\n\t\tif not is_plural then\n\t\t\ttable.insert(data.inflections, feminine_plurals)\n\t\tend\n\tend\n\t\n\tif args[\"qual_g1\"] or args[\"qual_g2\"] or args[\"qual_pl\"] or args[\"qual_pl2\"] or args[\"qual_pl3\"] or args[\"qual_f\"] or args[\"qual_fpl\"\
      ] or args[\"qual_f2\"] or args[\"qual_fpl2\"] then\n\t\trequire(\"Module:debug\").track(\"gl-noun with qualifier\")\n\tend\n\t\n\treturn require(\"Module:headword\").full_headword(data)\nend\n\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:02.619Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Agl-plural&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50552 t=1555362542521610
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:02 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1229.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 680073044, 651040860, 687994306
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4403154\" pageid=\"4403154\" ns=\"828\" title=\"Module:gl-plural\"><revisions><rev user=\"Rua\" timestamp=\"2014-07-26T01:22:48Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">-- Gets the plural of Galician nouns and adjectives.\n \nlocal accented_letters = {'á', 'é', 'í', 'ó', 'ú'}\nlocal remove_accent = {['á']='a', ['é']='e', ['í']='i', ['ó']='o',\
      \ ['ú']='u'}\nlocal vowels = {'a', 'e', 'i', 'o', 'u', 'á', 'é', 'í', 'ó', 'ú'}\nlocal export = {}\n \nfunction export.show(frame)\n    local args = frame:getParent().args\n    return export.get_plural(args[1])\nend\n \n-- Returns a singular’s plural if\
      \ it can be safely guessed, and an empty string\n-- otherwise.\nfunction export.get_plural(lemma)\n \n\tif (has_space_or_hyphen(lemma)) then return nil end\n \n\tlocal suf3 = suffix(lemma, 3);\n\tlocal pre3 = prefix(lemma, 3);\n \n\tif (suf3 == \"bel\"\
      ) then\n\t\treturn pre3 .. \"beis\"\n\tend\n \n\tlocal suf2 = suffix(lemma, 2);\n\tlocal pre2 = prefix(lemma, 2);\n\tlocal suf1 = suffix(lemma, 1);\n\tlocal pre1 = prefix(lemma, 1);\n \n\tif (suf1 == \"l\") then\n\t\tif (has_multiple_vowels(lemma) and\
      \ not is_accented(pre2)) then\n\t\t\tif (suf2 == \"il\") then\n\t\t\t\treturn pre2 .. \"is\"\n\t\t\telse\n\t\t\t\treturn pre1 .. \"is\"\n\t\t\tend\n\t\telse\n\t\t\treturn lemma .. \"es\"\n\t\tend\n\tend\n \n\tif (suf1 == \"z\") then return pre1 .. \"ces\"\
      \ end\n \n\tif (suf1 == \"r\") then return lemma .. \"es\" end\n \n\tif (suf1 == \"x\") then return lemma end\n \n\tif (is_vowel(suf1) or suf1 == \"n\") then return lemma .. \"s\" end\n \n\tif (suf1 == \"s\") then\n\t\tlocal penult = mw.ustring.sub(suf2,\
      \ 1, 1)\n\t\tif (not is_vowel(penult)) then return lemma end\n \n\t\tlocal antepenult = mw.ustring.sub(suf3, 1, 1)\n\t\tif (is_vowel(antepenult)) then return lemma .. \"es\" end\n \n \n\t\tif (is_accented(penult)) then\n\t\t\treturn pre2 .. remove_accent[penult]\
      \ .. \"ses\"\n\t\telse\n\t\t\treturn lemma\n\t\tend\n\tend\n \n\treturn nil\nend\n \n \nfunction suffix(word, length)\n\treturn mw.ustring.sub(word, mw.ustring.len(word) - length + 1)\nend\n \n \nfunction prefix(word, suf_length)\n\treturn mw.ustring.sub(word,\
      \ 1, mw.ustring.len(word) - suf_length)\nend\n \n-- returns whether it has ´ or ^\nfunction is_accented(word)\n\treturn word_has_letter(word, accented_letters)\nend\n \nfunction is_vowel(letter)\n\treturn word_has_letter(letter, vowels)\nend\n \nfunction\
      \ has_space_or_hyphen(word)\n\treturn mw.ustring.find(word, \" \") or mw.ustring.find(word, \"-\")\nend\n \nfunction word_has_letter(word, array)\n\tfor c = 1, table.getn(array) do\n\t\tif (mw.ustring.find(word, array[c])) then\n\t\t\treturn true\n\t\t\
      end\n\tend\n\treturn false\nend\n \nfunction has_multiple_vowels(word)\n\tlocal vowels = 0;\n\tfor c = 1, mw.ustring.len(word) do\n\t\tif (is_vowel(mw.ustring.sub(word, c, c))) then\n\t\t\tvowels = vowels + 1\n\t\t\tif (vowels &gt;= 2) then return true\
      \ end\n\t\tend\n\tend\n\treturn false\nend\n \nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:02.822Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48918 t=1555362542705829
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:02 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 214732182, 569249459, 697645319
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3989053\" pageid=\"3989053\" ns=\"828\" title=\"Module:headword\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-04T11:34:46Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal m_data = mw.loadData(\"Module:headword/data\")\n\nlocal title = mw.title.getCurrentTitle()\n\nlocal isLemma = m_data.lemmas\nlocal isNonLemma = m_data.nonlemmas\n\
      local notranslit = m_data.notranslit\nlocal toBeTagged = m_data.toBeTagged\n\nlocal parameters = {\n\tlang = { type = \"object\" },\n\tscript = { type = \"object\" },\n\theads = { type = \"table\" },\n\ttranslits = { type = \"table\" },\n\ttranscriptions\
      \ = { type = \"table\" },\n\tinflections = { type = \"table\" },\n\tgenders = { type = \"table\" },\n\tcategories = { type = \"table\" },\n\tpos_category = { type = \"string\" },\n\tsort_key = { type = \"string\" },\n\tid = { type = \"string\" },\n}\n\n\
      local function test_script(text, script_code)\n\tif type(text) == \"string\" and type(script_code) == \"string\" then\n\t\tlocal sc = require(\"Module:scripts\").getByCode(script_code)\n\t\tlocal characters\n\t\tif sc then\n\t\t\tcharacters = sc:getCharacters()\n\
      \t\tend\n\t\t\n\t\tlocal out\n\t\tif characters then\n\t\t\ttext = mw.ustring.gsub(text, \"%W\", \"\")\n\t\t\tout = mw.ustring.find(text, \"[\" .. characters .. \"]\")\n\t\tend\n\t\t\n\t\tif out then\n\t\t\treturn true\n\t\telse\n\t\t\treturn false\n\t\
      \tend\n\telse\n\t\tmw.log(\"Parameters to test_script were incorrect.\")\n\t\treturn nil\n\tend\nend\n\n\nlocal function preprocess(data)\n\t--[=[\n\t[[Special:WhatLinksHere/Template:tracking/headword/heads-not-table]]\n\t[[Special:WhatLinksHere/Template:tracking/headword/translits-not-table]]\n\
      \t]=]\n\tif type(data.heads) ~= \"table\" then\n\t\tif data.heads then\n\t\t\trequire(\"Module:debug\").track(\"headword/heads-not-table\")\n\t\tend\n\t\t\n\t\tdata.heads = { data.heads }\n\tend\n\t\n\tif type(data.translits) ~= \"table\" then\n\t\tif\
      \ data.translits then\n\t\t\trequire(\"Module:debug\").track(\"headword/translits-not-table\")\n\t\tend\n\t\t\n\t\tdata.translits = { data.translits }\n\tend\n\t\n\tif type(data.transcriptions) ~= \"table\" then\n\t\tif data.transcriptions then\n\t\t\t\
      require(\"Module:debug\").track(\"headword/transcriptions-not-table\")\n\t\tend\n\t\t\n\t\tdata.transcriptions = { data.transcriptions }\n\tend\n\t\n\tif not data.heads or #data.heads == 0 then\n\t\tdata.heads = {\"\"}\n\tend\n\t\n\t-- Determine if term\
      \ is reconstructed\n\tlocal is_reconstructed = data.lang:getType() == \"reconstructed\"\n\t\tor title.nsText == \"Reconstruction\"\n\t\n\t-- Create a default headword.\n\tlocal subpagename = title.subpageText\n\tlocal pagename = title.text\n\tlocal default_head\n\
      \tif is_reconstructed then\n\t\tdefault_head = require(\"Module:utilities\").plain_gsub(pagename, data.lang:getCanonicalName() .. \"/\", \"\")\n\telse\n\t\tdefault_head = subpagename\n\tend\n\t\n\t-- Add links to multi-word page names when appropriate\n\
      \tif data.lang:getCode() ~= \"zh\" then\n\t\tlocal spacingPunctuation = \"([%s%p]+)\"\n\t\t--[[ \tVariable containing anything that is\n\t\t\t\tnot a punctuation character found inside of words.\n\t\t\t\tUsed to exclude characters from the above regex.\t\
      ]]\n\t\tlocal notWordPunc = \"([^-־׳״'.·*’]+)\"\n\t\tlocal contains_words = false\n\t\t\n\t\tfor possibleWordBreak in mw.ustring.gmatch(default_head, spacingPunctuation) do\n\t\t\tif mw.ustring.find(possibleWordBreak, notWordPunc) then\n\t\t\t\tcontains_words\
      \ = true\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\n\t\tif (not is_reconstructed) and contains_words then\n\t\t\tlocal function workaround_to_exclude_chars(s)\n\t\t\t\treturn mw.ustring.gsub(s, notWordPunc, \"]]%1[[\")\n\t\t\tend\n\t\t\t\n\t\t\tdefault_head\
      \ = \"[[\"\n\t\t\t\t.. mw.ustring.gsub(\n\t\t\t\t\tdefault_head,\n\t\t\t\t\tspacingPunctuation,\n\t\t\t\t\tworkaround_to_exclude_chars\n\t\t\t\t\t)\n\t\t\t\t.. \"]]\"\n\t\t\t--[=[\n\t\t\tuse this when workaround is no longer needed:\n\t\t\tdefault_head\
      \ = \"[[\"\n\t\t\t\t.. mw.ustring.gsub(default_head, WORDBREAKCHARS, \"]]%1[[\")\n\t\t\t\t.. \"]]\"\n\t\t\t\n\t\t\tRemove any empty links, which could have been created above\n\t\t\tat the beginning or end of the string.\n\t\t\t]=]\n\t\t\tdefault_head\
      \ = mw.ustring.gsub(default_head, \"%[%[%]%]\", \"\")\n\t\tend\n\tend\n\t\n\tif is_reconstructed then\n\t\tdefault_head = \"*\" .. default_head\n\tend\n\t\n\t-- If a head is the empty string \"\", then replace it with the default\n\tfor i, head in ipairs(data.heads)\
      \ do\n\t\tif head == \"\" then\n\t\t\thead = default_head\n\t\telse\n\t\t\tif head == default_head and data.lang:getCanonicalName() == \"English\" then\n\t\t\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" terms with redundant head\
      \ parameter\")\n\t\t\tend\t\t\t\n\t\tend\n\t\tdata.heads[i] = head\n\tend\n\t\n\t--[[\tTry to detect the script if it was not provided\n\t\t\tWe use the first headword for this, and assume\n\t\t\tthat all of them have the same script\n\t\t\tThis *should*\
      \ always be true, right?\t\t]]\n\tif not data.sc then\n\t\tdata.sc = require(\"Module:scripts\").findBestScript(data.heads[1], data.lang)\n\tend\n\t\n\tfor i, val in pairs(data.translits) do\n\t\tdata.translits[i] = {display = val, is_manual = true}\n\t\
      end\n\t\n\t-- Make transliterations\n\tfor i, head in ipairs(data.heads) do\n\t\tlocal translit = data.translits[i]\n\t\t\n\t\t-- Try to generate a transliteration if necessary\n\t\t-- Generate it if the script is not Latn or similar, and if no transliteration\
      \ was provided\n\t\tif translit and translit.display == \"-\" then\n\t\t\ttranslit = nil\n\t\telseif not translit and not (data.sc:getCode():find(\"Latn\", nil, true) or data.sc:getCode() == \"Latinx\" or data.sc:getCode() == \"None\") and (not data.sc\
      \ or data.sc:getCode() ~= \"Imag\") then\n\t\t\ttranslit = data.lang:transliterate(require(\"Module:links\").remove_links(head), data.sc)\n\t\t\t\n\t\t\t-- There is still no transliteration?\n\t\t\t-- Add the entry to a cleanup category.\n\t\t\tif not\
      \ translit and not notranslit[data.lang:getCode()] then\n\t\t\t\ttranslit = \"&lt;small&gt;transliteration needed&lt;/small&gt;\"\n\t\t\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" terms needing transliteration\")\n\t\t\tend\n\t\t\
      \t\n\t\t\tif translit then\n\t\t\t\ttranslit = {display = translit, is_manual = false}\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Link to the transliteration entry for languages that require this\n\t\tif translit and data.lang:link_tr() then\n\t\t\ttranslit.display\
      \ = require(\"Module:links\").full_link{\n\t\t\t\tterm = translit.display,\n\t\t\t\tlang = data.lang,\n\t\t\t\tsc = require(\"Module:scripts\").getByCode(\"Latn\"),\n\t\t\t\ttr = \"-\"\n\t\t\t\t}\n\t\tend\n\t\t\n\t\tdata.translits[i] = translit\n\tend\n\
      \t\n\tif data.id and type(data.id) ~= \"string\" then\n\t\terror(\"The id in the data table should be a string.\")\n\tend\nend\n\n\n-- Format a headword with transliterations\nlocal function format_headword(data)\n\tlocal m_links = require(\"Module:links\"\
      )\n\tlocal m_scriptutils = require(\"Module:script utilities\")\n\t\n\t-- Are there non-empty transliterations?\n\t-- Need to do it this way because translit[1] might be nil while translit[2] is not\n\tlocal has_translits = false\n\t\n\t-- Format the headwords\n\
      \tfor i, head in ipairs(data.heads) do\n\t\tif data.translits[i] or data.transcriptions[i] then\n\t\t\thas_translits = true\n\t\tend\n\t\t\n\t\t-- Apply processing to the headword, for formatting links and such\n\t\tif head:find(\"[[\", nil, true) and\
      \ (not data.sc or data.sc:getCode() ~= \"Imag\") then\n\t\t\thead = m_links.language_link({term = head, lang = data.lang}, false)\n\t\tend\n\t\t\n\t\t-- Add language and script wrapper\n\t\tif i == 1 then\n\t\t\thead = m_scriptutils.tag_text(head, data.lang,\
      \ data.sc, \"head\", nil, data.id)\n\t\telse\n\t\t\thead = m_scriptutils.tag_text(head, data.lang, data.sc, \"head\", nil)\n\t\tend\n\t\t\n\t\tdata.heads[i] = head\n\tend\n\t\n\tlocal translits_formatted = \"\"\n\t\n\tif has_translits then\n\t\t-- Format\
      \ the transliterations\n\t\tlocal translits = data.translits\n\t\tlocal transcriptions = data.transcriptions\n\t\t\n\t\tif translits then\n\t\t\t-- using pairs() instead of ipairs() in case there is a gap\n\t\t\tfor i, _ in pairs(translits) do\n\t\t\t\t\
      if type(i) == \"number\" then\n\t\t\t\t\ttranslits[i] = m_scriptutils.tag_translit(translits[i].display, data.lang:getCode(), \"head\", nil, translits[i].is_manual)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\tif transcriptions then\n\t\t\tfor i, _ in pairs(transcriptions)\
      \ do\n\t\t\t\tif type(i) == \"number\" then\n\t\t\t\t\ttranscriptions[i] = m_scriptutils.tag_transcription(transcriptions[i], data.lang:getCode(), \"head\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\tfor i = 1, math.max(#translits, #transcriptions) do\n\t\
      \t\tlocal translits_formatted = {}\n\t\t\ttable.insert(translits_formatted, translits[i] and translits[i] or \"\")\n\t\t\ttable.insert(translits_formatted, (translits[i] and transcriptions[i]) and \" \" or \"\")\n\t\t\ttable.insert(translits_formatted,\
      \ transcriptions[i] and \"/\" .. transcriptions[i] .. \"/\" or \"\")\n\t\t\tdata.translits[i] = table.concat(translits_formatted)\n\t\tend\n\t\t\n\t\ttranslits_formatted = \" (\" .. table.concat(data.translits, \" &lt;i&gt;or&lt;/i&gt; \") .. \")\"\n\t\
      \t\n\t\tlocal transliteration_page = mw.title.new(data.lang:getCanonicalName() .. \" transliteration\", \"Wiktionary\")\n\t\t\n\t\tif transliteration_page then\n\t\t\tlocal success, exists = pcall(function () return transliteration_page.exists end)\n\t\
      \t\tif success and exists then\n\t\t\t\ttranslits_formatted = \" [[Wiktionary:\" .. data.lang:getCanonicalName() .. \" transliteration|•]]\" .. translits_formatted\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn table.concat(data.heads, \" &lt;i&gt;or&lt;/i&gt;\
      \ \") .. translits_formatted\nend\n\n\nlocal function format_genders(data)\n\tif data.genders and #data.genders &gt; 0 then\n\t\tlocal gen = require(\"Module:gender and number\")\n\t\treturn \"&amp;nbsp;\" .. gen.format_list(data.genders, data.lang)\n\t\
      else\n\t\treturn \"\"\n\tend\nend\n\n\nlocal function format_inflection_parts(data, parts)\n\tlocal m_links = require(\"Module:links\")\n\t\n\tfor key, part in ipairs(parts) do\n\t\tif type(part) ~= \"table\" then\n\t\t\tpart = {term = part}\n\t\tend\n\
      \t\t\n\t\tlocal qualifiers = \"\"\n\t\t\n\t\tif part.qualifiers and #part.qualifiers &gt; 0 then\n\t\t\tqualifiers = require(\"Module:qualifier\").format_qualifier(part.qualifiers) .. \" \"\n\t\t\t\n\t\t\t-- [[Special:WhatLinksHere/Template:tracking/headword/qualifier]]\n\
      \t\t\trequire(\"Module:debug\").track(\"headword/qualifier\")\n\t\tend\n\t\t\n\t\tlocal partaccel = part.accel\n\t\tlocal face = part.hypothetical and \"hypothetical\" or \"bold\"\n\t\tlocal nolink = part.hypothetical or part.nolink\n\t\t\n\t\t-- Convert\
      \ the term into a full link\n\t\t-- Don't show a transliteration here, the consensus seems to be not to\n\t\t-- show them in headword lines to avoid clutter.\n\t\tpart = m_links.full_link(\n\t\t\t{\n\t\t\t\tterm = not nolink and part.term or nil,\n\t\t\
      \t\talt = part.alt or (nolink and part.term or nil),\n\t\t\t\tlang = part.lang or data.lang,\n\t\t\t\tsc = part.sc or parts.sc or (not part.lang and data.sc),\n\t\t\t\tid = part.id,\n\t\t\t\tgenders = part.genders,\n\t\t\t\ttr = part.translit or (not (parts.enable_auto_translit\
      \ or data.inflections.enable_auto_translit) and \"-\" or nil),\n\t\t\t\tts = part.transcription,\n\t\t\t\taccel = parts.accel or partaccel,\n\t\t\t},\n\t\t\tface,\n\t\t\tfalse\n\t\t\t)\n\t\t\n\t\tpart = qualifiers .. part\n\t\t\n\t\tparts[key] = part\n\
      \tend\n\t\n\tlocal parts_output = \"\"\n\t\n\tif #parts &gt; 0 then\n\t\tparts_output = \" \" .. table.concat(parts, \" &lt;i&gt;or&lt;/i&gt; \")\n\telseif parts.request then\n\t\tparts_output = \" &lt;small&gt;[please provide]&lt;/small&gt;\"\n\t\t\t\
      .. require(\"Module:utilities\").format_categories(\n\t\t\t\t{data.lang:getCanonicalName() .. \" entries needing inflection\"},\n\t\t\t\tlang,\n\t\t\t\tnil,\n\t\t\t\tnil,\n\t\t\t\tdata.force_cat_output,\n\t\t\t\tdata.sc\n\t\t\t\t)\n\tend\n\t\n\treturn\
      \ \"&lt;i&gt;\" .. parts.label .. \"&lt;/i&gt;\" .. parts_output\nend\n\n-- Format the inflections following the headword\nlocal function format_inflections(data)\n\tif data.inflections and #data.inflections &gt; 0 then\n\t\t-- Format each inflection individually\n\
      \t\tfor key, infl in ipairs(data.inflections) do\n\t\t\tdata.inflections[key] = format_inflection_parts(data, infl)\n\t\tend\n\t\t\n\t\treturn \" (\" .. table.concat(data.inflections, \", \") .. \")\"\n\telse\n\t\treturn \"\"\n\tend\nend\n\nlocal function\
      \ show_headword_line(data)\n\tlocal namespace = title.nsText\n\n\t-- Check the namespace against the language type\n\tif namespace == \"\" then\n\t\tif data.lang:getType() == \"reconstructed\" then\n\t\t\terror(\"Entries for this language must be placed\
      \ in the Reconstruction: namespace.\")\n\t\telseif data.lang:getType() == \"appendix-constructed\" then\n\t\t\terror(\"Entries for this language must be placed in the Appendix: namespace.\")\n\t\tend\n\tend\n\t\n\tlocal tracking_categories = {}\n\n\tif\
      \ not data.noposcat then\t\n\t\tlocal pos_category = data.lang:getCanonicalName() .. \" \" .. data.pos_category\n\t\tif pos_category ~= \"Translingual Han characters\" then\n\t\t\ttable.insert(data.categories, 1, pos_category)\n\t\tend\n\tend\n\t\n\t--\
      \ Is it a lemma category?\n\tif isLemma[data.pos_category] or isLemma[data.pos_category:gsub(\"^reconstructed \", \"\")] then\n\t\tif not data.noposcat then\n\t\t\ttable.insert(data.categories, 1, data.lang:getCanonicalName() .. \" lemmas\")\n\t\tend\n\
      \t-- Is it a nonlemma category?\n\telseif isNonLemma[data.pos_category]\n\t\tor isNonLemma[data.pos_category:gsub(\"^reconstructed \", \"\")]\n\t\tor isLemma[data.pos_category:gsub(\"^mutated \", \"\")]\n\t\tor isNonLemma[data.pos_category:gsub(\"^mutated\
      \ \", \"\")] then\n\t\t\n\t\tif not data.noposcat then\n\t\t\ttable.insert(data.categories, 1, data.lang:getCanonicalName() .. \" non-lemma forms\")\n\t\tend\n\t-- It's neither; we don't know what this category is, so tag it with a tracking category.\n\
      \telse\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/headword/unrecognized pos]]\n\t\t]=]\n\t\ttable.insert(tracking_categories, \"head tracking/unrecognized pos\")\n\t\trequire(\"Module:debug\").track{\n\t\t\t\"headword/unrecognized pos\"\
      ,\n\t\t\t\"headword/unrecognized pos/lang/\" .. data.lang:getCode(),\n\t\t\t\"headword/unrecognized pos/pos/\" .. data.pos_category\n\t\t}\n\tend\n\t\n\t-- Preprocess\n\tpreprocess(data)\n\t\n\tlocal m_links = require(\"Module:links\")\n\t\n\tif namespace\
      \ == \"\" and data.lang:getType() ~= \"reconstructed\" then\n\t\tfor _, head in ipairs(data.heads) do\n\t\t\tif title.prefixedText ~= m_links.getLinkPage(m_links.remove_links(head), data.lang) then\n\t\t\t\t--[=[\n\t\t\t\t[[Special:WhatLinksHere/Template:tracking/headword/pagename\
      \ spelling mismatch]]\n\t\t\t\t]=]\n\t\t\t\trequire(\"Module:debug\").track{\n\t\t\t\t\t\"headword/pagename spelling mismatch\",\n\t\t\t\t\t\"headword/pagename spelling mismatch/\" .. data.lang:getCode()\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\
      end\n\t\n\t-- Format and return all the gathered information\n\treturn\n\t\tformat_headword(data) ..\n\t\tformat_genders(data) ..\n\t\tformat_inflections(data) ..\n\t\trequire(\"Module:utilities\").format_categories(\n\t\t\ttracking_categories, data.lang,\
      \ data.sort_key, nil, data.force_cat_output, data.sc\n\t\t\t)\nend\n\nfunction export.full_headword(data)\n\tlocal tracking_categories = {}\n\t\n\t-- Script-tags the topmost header.\n\tlocal pagename = title.text\n\tlocal fullPagename = title.fullText\n\
      \tlocal namespace = title.nsText\n\t\n\tif not data.lang or type(data.lang) ~= \"table\" or not data.lang.getCode then\n\t\terror(\"In data, the first argument to full_headword, data.lang should be a language object.\")\n\tend\n\t\n\tif not data.sc then\n\
      \t\tdata.sc = require(\"Module:scripts\").findBestScript(data.heads and data.heads[1] ~= \"\" and data.heads[1] or pagename, data.lang)\n\telse\n\t\t-- Track uses of sc parameter\n\t\tlocal best = require(\"Module:scripts\").findBestScript(pagename, data.lang)\n\
      \t\trequire(\"Module:debug\").track(\"headword/sc\")\n\t\t\n\t\tif data.sc:getCode() == best:getCode() then\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/redundant\")\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/redundant/\" .. data.sc:getCode())\n\
      \t\telse\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/needed\")\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/needed/\" .. data.sc:getCode())\n\t\tend\n\tend\n\t\n\tlocal displayTitle\n\t-- Assumes that the scripts in \"toBeTagged\" will\
      \ never occur in the Reconstruction namespace.\n\tif namespace == \"\" and data.sc and toBeTagged[data.sc:getCode()] or\n\t\t\tdata.sc:getCode() == \"Jpan\" and (test_script(pagename, \"Hira\") or test_script(pagename, \"Kana\")) then\n\t\tdisplayTitle\
      \ = '&lt;span class=\"' .. data.sc:getCode() .. '\"&gt;' .. pagename .. '&lt;/span&gt;'\n\telseif namespace == \"Reconstruction\" then\n\t\tdisplayTitle, matched = mw.ustring.gsub(\n\t\t\tfullPagename,\n\t\t\t\"^(Reconstruction:[^/]+/)(.+)$\",\n\t\t\t\
      function(before, term)\n\t\t\t\treturn before ..\n\t\t\t\t\trequire(\"Module:script utilities\").tag_text(\n\t\t\t\t\t\tterm,\n\t\t\t\t\t\tdata.lang,\n\t\t\t\t\t\tdata.sc\n\t\t\t\t\t)\n\t\t\tend\n\t\t)\n\t\t\n\t\tif matched == 0 then\n\t\t\tdisplayTitle\
      \ = nil\n\t\tend\n\tend\n\t\n\tif displayTitle then\n\t\tlocal frame = mw.getCurrentFrame()\n\t\tframe:callParserFunction(\n\t\t\t\"DISPLAYTITLE\",\n\t\t\tdisplayTitle\n\t\t)\n\tend\n\t\n\tif data.force_cat_output then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/headword/force\
      \ cat output]]\n\t\t]=]\n\t\trequire(\"Module:debug\").track(\"headword/force cat output\")\n\tend\n\t\n\tif data.getCanonicalName then\n\t\terror('The \"data\" variable supplied to \"full_headword\" should not be a language object.')\n\tend\n\t\t\n\t\
      -- Were any categories specified?\n\tif data.categories and #data.categories &gt; 0 then\n\t\tlocal lang_name = require(\"Module:string\").pattern_escape(data.lang:getCanonicalName())\n\t\tfor _, cat in ipairs(data.categories) do\n\t\t\t-- Does the category\
      \ begin with the language name? If not, tag it with a tracking category.\n\t\t\tif not mw.ustring.find(cat, \"^\" .. lang_name) then\n\t\t\t\tmw.log(cat, data.lang:getCanonicalName())\n\t\t\t\ttable.insert(tracking_categories, \"head tracking/no lang category\"\
      )\n\t\t\t\t\n\t\t\t\t--[=[\n\t\t\t\t[[Special:WhatLinksHere/Template:tracking/head tracking/no lang category]]\n\t\t\t\t]=]\n\t\t\t\trequire(\"Module:debug\").track{\n\t\t\t\t\t\"headword/no lang category\",\n\t\t\t\t\t\"headword/no lang category/lang/\"\
      \ .. data.lang:getCode()\n\t\t\t\t}\n\t\t\tend\n\t\tend\n\t\t\n\t\tif not data.pos_category\n\t\t\tand mw.ustring.find(data.categories[1], \"^\" .. data.lang:getCanonicalName())\n\t\t\t\tthen\n\t\t\tdata.pos_category = mw.ustring.gsub(data.categories[1],\
      \ \"^\" .. data.lang:getCanonicalName() .. \" \", \"\")\n\t\t\ttable.remove(data.categories, 1)\n\t\tend\n\tend\n\t\n\tif not data.pos_category then\n\t\terror(\n\t\t\t'No valid part-of-speech categories were found in the list '\n\t\t\t.. 'of categories\
      \ passed to the function \"full_headword\". '\n\t\t\t.. 'The part-of-speech category should consist of a language\\'s '\n\t\t\t.. 'canonical name plus a part of speech.'\n\t\t\t)\n\tend\n\t\n\t-- Categorise for unusual characters\n\tlocal standard = data.lang:getStandardCharacters()\n\
      \t\n\tif standard then\n\t\tif mw.ustring.len(title.subpageText) ~= 1 and not mw.ustring.match(title.text, \"^Unsupported titles/\") then\n\t\t\tfor character in mw.ustring.gmatch(title.subpageText, \"([^\" .. standard .. \"])\") do\n\t\t\t\tlocal upper\
      \ = mw.ustring.upper(character)\n\t\t\t\tif not mw.ustring.find(upper, \"[\" .. standard .. \"]\") then\n\t\t\t\t\tcharacter = upper\n\t\t\t\tend\n\t\t\t\ttable.insert(\n\t\t\t\t\tdata.categories,\n\t\t\t\t\tdata.lang:getCanonicalName() .. \" terms spelled\
      \ with \" .. character\n\t\t\t\t)\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Categorise for palindromes\n\tif title.nsText ~= \"Reconstruction\"\n\t\tand require('Module:palindromes').is_palindrome(\n\t\t\ttitle.subpageText, data.lang, data.sc\n\t\t\t) then\n\
      \t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" palindromes\")\n\tend\n\t\n\treturn\n\t\tshow_headword_line(data) ..\n\t\trequire(\"Module:utilities\").format_categories(\n\t\t\tdata.categories, data.lang, data.sort_key, nil, data.force_cat_output,\
      \ data.sc\n\t\t\t) ..\n\t\trequire(\"Module:utilities\").format_categories(\n\t\t\ttracking_categories, data.lang, data.sort_key, nil, data.force_cat_output, data.sc\n\t\t\t)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:03.326Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Apalindromes&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44882 t=1555362543235411
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:03 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 514886514, 567158022, 701375242
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5783859\" pageid=\"5783859\" ns=\"828\" title=\"Module:palindromes\"><revisions><rev user=\"TheDaveRoss\" timestamp=\"2016-10-25T20:04:19Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Changed protection level for &quot;[[Module:palindromes]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors\
      \ and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefini...\" xml:space=\"preserve\">local export = {}\n\nlocal data = mw.loadData(\"Module:palindromes/data\")\n\nlocal function ignoreCharacters(term, lang, sc,\
      \ langdata)\n\tterm = mw.ustring.lower(term)\n\tterm = mw.ustring.gsub(term, \"[ ,%.%?!%%%-'\\\"]\", \"\")\n\t\n\t-- Language-specific substitutions\n\n\t-- Ignore entire scripts (e.g. romaji in Japanese)\n\tif langdata.ignore then\n\t\tsc_name = sc and\
      \ sc:getCode() or require(\"Module:scripts\").findBestScript(term, lang):getCode()\n\t\tfor _, script in ipairs(langdata.ignore) do\n\t\t\tif script == sc_name then\n\t\t\t\treturn \"\"\n\t\t\tend\n\t\tend\n\tend\n\t\n\tfor i, from in ipairs(langdata.from\
      \ or {}) do\n\t\tterm = mw.ustring.gsub(term, from, langdata.to[i] or \"\")\n\tend\n\t\n\treturn term\nend\n\nfunction export.is_palindrome(term, lang, sc)\n\tlocal langdata = data[lang:getCode()] or {}\n\n\t-- Affixes aren't palindromes\n\tif mw.ustring.find(term,\
      \ \"^%-\") or mw.ustring.find(term, \"%-$\") then\n\t\treturn false\n\tend\n\t\n\t-- Remove punctuation and casing\n\tterm = ignoreCharacters(term, lang, sc, langdata)\n\tlocal len = mw.ustring.len(term)\n\t\n\tif langdata.allow_repeated_char then\n\t\t\
      -- Ignore single-character terms\n\t\tif len &lt; 2 then\n\t\t\treturn false\n\t\tend\n\telse\n\t\t-- Ignore terms that consist of just one character repeated\n\t\t-- This also excludes terms consisting of fewer than 3 characters\n\t\tif term == mw.ustring.rep(mw.ustring.sub(term,\
      \ 1, 1), len) then\n\t\t\treturn false\n\t\tend\n\tend\n\t\n\tlocal charlist = {}\n\t\n\tfor c in mw.ustring.gmatch(term, \".\") do\n\t\ttable.insert(charlist, c)\n\tend\n\t\n\tfor i = 1, math.floor(len / 2) do\n        if charlist[i] ~= charlist[len -\
      \ i + 1] then\n        \treturn false\n        end\n    end\n    \n    return true\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:03.515Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Apalindromes%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=39542 t=1555362543406090
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:03 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1223.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 682527779, 488169529, 701637265
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5786862\" pageid=\"5786862\" ns=\"828\" title=\"Module:palindromes/data\"><revisions><rev user=\"PiefPafPier\" timestamp=\"2018-08-08T16:43:32Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"from [[:fy:Module:palindromes/data]]\" xml:space=\"preserve\">local u = mw.ustring.char\n\nlocal data = {\n\t[\"ar\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"[أإآ]\"\
      ,\n\t\t\t\"ؤ\",\n\t\t\t\"[ئى]\",\n\t\t\t\"ة\",\n\t\t\t\"ء\",\n\t\t},\n\t\tto = {\n\t\t\t\"ا\",\n\t\t\t\"و\",\n\t\t\t\"ي\",\n\t\t\t\"ه\",\n\t\t},\n\t},\n\t[\"arc\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"ם\",\n\t\t\t\"ן\",\n\t\t\t\"\
      ך\",\n\t\t\t\"ף\",\n\t\t\t\"ץ\",\n\t\t\t\"ﭏ\",\n\t\t\t\"װ\",\n\t\t\t\"ױ\",\n\t\t\t\"ײ\",\n\t\t\t\"[״׳־]\",\n\t\t},\n\t\tto = {\n\t\t\t\"מ\",\n\t\t\t\"נ\",\n\t\t\t\"כ\", \n\t\t\t\"פ\",\n\t\t\t\"צ\",\n\t\t\t\"אל\",\n\t\t\t\"וו\",\n\t\t\t\"וי\",\n\t\t\t\"\
      יי\",\n\t\t}\n\t},\n\t[\"axm\"] = {\n\t\tfrom = {\"ու\"},\n\t\tto   = {\"ŭ\"},\n\t},\n\t[\"ca\"] = {\n\t\tfrom = {\"à\", \"[èé]\", \"[íï]\", \"[òó]\", \"[úü]\", \"ç\", \"l·l\"},\n\t\tto   = {\"a\", \"e\",    \"i\",    \"o\",    \"u\",    \"c\", \"ll\"\
      },\n\t},\n\t[\"cmn\"] = {ignore = {\"Latn\"}},\n\t[\"cs\"] = {\n\t\tfrom = {\"á\", \"é\", \"í\", \"ó\", \"[úů]\", \"ý\", \"ch\"},\n\t\tto   = {\"a\", \"e\", \"i\", \"o\", \"u\",    \"y\", \"χ\"},\n\t},\n\t[\"de\"] = {\n\t\tfrom = {\"ä\", \"ö\", \"ü\",\
      \ \"[ßẞ]\"},\n\t\tto   = {\"a\", \"o\", \"u\", \"ss\"},\n\t},\n\t[\"el\"] = {\n\t\tfrom = {\n\t\t\t\"[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇᾱᾰἈᾈἌᾌἊᾊἎᾎἉᾉἍᾍἋᾋἏᾏᾹᾸ]\", --uppercase characters are included due to this bug: https://bugs.php.net/bug.php?id=69267\n\t\t\t\"[έ\
      ὲἐἔἒἑἕἓἘἜἚἙἝἛ]\",\n\t\t\t\"[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗἨᾘἬᾜἪᾚἮᾞἩᾙἭᾝἫᾛἯᾟ]\",\n\t\t\t\"[ίὶῖἰἴἲἶἱἵἳἷϊΐῒῗῑῐἸἼἺἾἹἽἻἿῙῘ]\", \n\t\t\t\"[όὸὀὄὂὁὅὃὈὌὊὉὍὋ]\",\n\t\t\t\"[ύὺῦὐὔὒὖὑὕὓὗϋΰῢῧῡῠὙὝὛὟῩῨ]\",\n\t\t\t\"[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧὨᾨὬᾬὪᾪὮᾮὩᾩὭᾭὫᾫὯᾯ]\",\n\t\t\t\"[ῥῤῬ]\"\
      ,\n\t\t\t\"[ς]\",\n\t\t\t\"[́͂]\"\n\t\t},\n\t\tto = {\n\t\t\t\"α\",\n\t\t\t\"ε\",\n\t\t\t\"η\",\n\t\t\t\"ι\",\n\t\t\t\"ο\",\n\t\t\t\"υ\",\n\t\t\t\"ω\",\n\t\t\t\"ρ\",\n\t\t\t\"σ\"\n\t\t},\n\t},\n\t[\"en\"] = {\n\t\tfrom = {\"[äàáâåā]\", \"[ëèéêē]\", \"\
      [ïìíîī]\", \"[öòóôō]\", \"[üùúûū]\", \"æ\" , \"œ\" , \"[çč]\", \"ñ\", \"'\"},\n\t\tto   = {\"a\",        \"e\",       \"i\",       \"o\",       \"u\",       \"ae\", \"oe\", \"c\",    \"n\"},\n\t},\n\t[\"fr\"] = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"\
      [íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\",  \"œ\", \"'\"},\n\t\tto   = {\"a\",       \"e\",     \"i\",      \"o\",      \"u\",      \"y\",      \"c\", \"ae\", \"oe\"},\n\t},\n\t[\"fy\"] = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï\
      ]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"æ\",  \"'\"},\n\t\tto   = {\"a\",       \"e\",     \"i\",      \"o\",      \"u\",      \"y\",      \"ae\"},\n\t},\n\t[\"grc\"] = {\n\t\tfrom = {\n\t\t\t\"[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇᾱᾰἈᾈἌᾌἊᾊἎᾎἉᾉἍᾍἋᾋἏᾏᾹᾸ]\", --uppercase\
      \ characters are included due to this bug: https://bugs.php.net/bug.php?id=69267\n\t\t\t\"[έὲἐἔἒἑἕἓἘἜἚἙἝἛ]\",\n\t\t\t\"[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗἨᾘἬᾜἪᾚἮᾞἩᾙἭᾝἫᾛἯᾟ]\",\n\t\t\t\"[ίὶῖἰἴἲἶἱἵἳἷϊΐῒῗῑῐἸἼἺἾἹἽἻἿῙῘ]\", \n\t\t\t\"[όὸὀὄὂὁὅὃὈὌὊὉὍὋ]\",\n\t\t\t\"[ύὺῦὐὔὒ\
      ὖὑὕὓὗϋΰῢῧῡῠὙὝὛὟῩῨ]\",\n\t\t\t\"[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧὨᾨὬᾬὪᾪὮᾮὩᾩὭᾭὫᾫὯᾯ]\",\n\t\t\t\"[ῥῤῬ]\",\n\t\t\t\"[ς]\",\n\t\t\t\"[́͂]\"\n\t\t},\n\t\tto = {\n\t\t\t\"α\",\n\t\t\t\"ε\",\n\t\t\t\"η\",\n\t\t\t\"ι\",\n\t\t\t\"ο\",\n\t\t\t\"υ\",\n\t\t\t\"ω\",\n\t\t\t\"\
      ρ\",\n\t\t\t\"σ\"\n\t\t}\n\t},\n\t[\"he\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"ם\",\n\t\t\t\"ן\",\n\t\t\t\"ך\",\n\t\t\t\"ף\",\n\t\t\t\"ץ\",\n\t\t\t\"ﭏ\",\n\t\t\t\"װ\",\n\t\t\t\"ױ\",\n\t\t\t\"ײ\",\n\t\t\t\"[״׳־]\",\n\t\t},\n\t\t\
      to = {\n\t\t\t\"מ\",\n\t\t\t\"נ\",\n\t\t\t\"כ\", \n\t\t\t\"פ\",\n\t\t\t\"צ\",\n\t\t\t\"אל\",\n\t\t\t\"וו\",\n\t\t\t\"וי\",\n\t\t\t\"יי\",\n\t\t}\n\t},\n\t[\"hu\"] = {\n\t\tfrom = {\"á\", \"é\", \"í\", \"ó\", \"ú\", \"ő\", \"ű\", \"cs\", \"dz\", \"gy\"\
      , \"ly\", \"ny\", \"sz\", \"ty\", \"zs\", \"dzs\"},\n\t\tto   = {\"a\", \"e\", \"i\", \"o\", \"u\", \"ö\", \"ü\", \"č\",  \"ď\",  \"ǰ\",  \"ľ\",  \"ň\",  \"š\",  \"ť\",  \"ž\",  \"ǯ\"},\n\t},\n\t[\"hy\"] = {\n\t\tfrom = {\"ու\", \"եւ\"},\n\t\tto   = {\"\
      ŭ\",  \"և\"},\n\t},\n\t[\"ja\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {'が', 'ぎ', 'ぐ', 'げ', 'ご', 'ざ', 'じ', 'ず', 'ぜ', 'ぞ', 'だ', 'ぢ', 'づ', 'で', 'ど', 'ば', 'び', 'ぶ', 'べ', 'ぼ', 'ぱ', 'ぴ', 'ぷ', 'ぺ', 'ぽ', 'ゔ'},\n\t\tto   = {'か', 'き', 'く', 'け', 'こ', 'さ\
      ', 'し', 'す', 'せ', 'そ', 'た', 'ち', 'つ', 'て', 'と', 'は', 'ひ', 'ふ', 'へ', 'ほ', 'は', 'ひ', 'ふ', 'へ', 'ほ', 'う'},\n\t\tignore = {\"Latn\"},\n\t},\n\t[\"la\"] = {\n\t\tfrom = {\"v\", \"j\"},\n\t\tto   = {\"u\", \"i\"}\n\t},\n\t[\"nl\"] = {\n\t\tfrom = {\"[áàä]\"\
      , \"[éèë]\", \"[íìï]\", \"[óòö]\", \"[úùü]\"},\n\t\tto   = {\"a\",     \"e\",     \"i\",     \"o\",     \"u\"},\n\t},\n\t[\"pl\"] = {\n\t\tfrom = {\"ć\", \"ę\", \"ł\", \"ń\", \"ó\", \"ś\", \"[źż]\"},\n\t\tto   = {\"c\", \"e\", \"l\", \"n\", \"o\", \"s\"\
      , \"z\"},\n\t},\n\t[\"ru\"] = {\n\t\tfrom = {\"ё\"},\n\t\tto   = {\"е\"},\n\t},\n\t[\"xcl\"] = {\n\t\tfrom = {\"ու\"},\n\t\tto   = {\"ŭ\"},\n\t},\n\t[\"yi\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"ם\",\n\t\t\t\"ן\",\n\t\t\t\"ך\",\n\
      \t\t\t\"ף\",\n\t\t\t\"ץ\",\n\t\t\t\"ﭏ\",\n\t\t\t\"װ\",\n\t\t\t\"ױ\",\n\t\t\t\"ײ\",\n\t\t\t\"[״׳־]\",\n\t\t\t\"[ִַָּֿׁׂ]\",\n\t\t},\n\t\tto = {\n\t\t\t\"מ\",\n\t\t\t\"נ\",\n\t\t\t\"כ\", \n\t\t\t\"פ\",\n\t\t\t\"צ\",\n\t\t\t\"אל\",\n\t\t\t\"וו\",\n\t\t\t\"\
      וי\",\n\t\t\t\"יי\",\n\t\t}\n\t},\n\t[\"zh\"] = {\n\t\tignore = {\"Latn\"},\n\t},\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:03.714Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Agender+and+number&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=59790 t=1555362543599516
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:03 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 608541864, 637621418, 688480898
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3906346\" pageid=\"3906346\" ns=\"828\" title=\"Module:gender and number\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-06T20:41:16Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Separate the genders with &quot;or&quot;, which is clearer than a comma\" xml:space=\"preserve\">--[=[\n\tThis module creates standardised displays for gender and number.\n\tIt converts\
      \ a gender specification into Wiki/HTML format.\n\t\n\tA gender specification is a list of one of the elements listed below,\n\tseparated by hyphens. Examples are: \"c\", \"n\", \"f-p\", \"m-an-p\"\n]=]--\n\nlocal export = {}\n\nlocal codes = {}\n\n--\
      \ A list of all possible \"parts\" that a specification can be made out of.\n\ncodes[\"?\"] = {type = \"other\", display = '&lt;abbr title=\"gender incomplete\"&gt;?&lt;/abbr&gt;'}\n\n-- Genders\ncodes[\"m\"] = {type = \"gender\", display = '&lt;abbr title=\"\
      masculine gender\"&gt;m&lt;/abbr&gt;'}\ncodes[\"f\"] = {type = \"gender\", display = '&lt;abbr title=\"feminine gender\"&gt;f&lt;/abbr&gt;'}\ncodes[\"n\"] = {type = \"gender\", display = '&lt;abbr title=\"neuter gender\"&gt;n&lt;/abbr&gt;'}\ncodes[\"c\"\
      ] = {type = \"gender\", display = '&lt;abbr title=\"common gender\"&gt;c&lt;/abbr&gt;'}\n\n-- Animacy\ncodes[\"an\"] = {type = \"animacy\", display = '&lt;abbr title=\"animate\"&gt;anim&lt;/abbr&gt;'}\ncodes[\"in\"] = {type = \"animacy\", display = '&lt;abbr\
      \ title=\"inanimate\"&gt;inan&lt;/abbr&gt;'}\n\n-- Personal\ncodes[\"pr\"] = {type = \"personal\", display = '&lt;abbr title=\"personal\"&gt;pers&lt;/abbr&gt;'}\ncodes[\"np\"] = {type = \"personal\", display = '&lt;abbr title=\"non-personal\"&gt;npers&lt;/abbr&gt;'}\n\
      \n-- Numbers\ncodes[\"s\"] = {type = \"number\", display = '&lt;abbr title=\"singular number\"&gt;sg&lt;/abbr&gt;'}\ncodes[\"d\"] = {type = \"number\", display = '&lt;abbr title=\"dual number\"&gt;du&lt;/abbr&gt;'}\ncodes[\"p\"] = {type = \"number\", display\
      \ = '&lt;abbr title=\"plural number\"&gt;pl&lt;/abbr&gt;'}\n\n-- Verb qualifiers\ncodes[\"impf\"] = {type = \"perfectivity\", display = '&lt;abbr title=\"imperfective aspect\"&gt;impf&lt;/abbr&gt;'}\ncodes[\"pf\"] = {type = \"perfectivity\", display =\
      \ '&lt;abbr title=\"perfective aspect\"&gt;pf&lt;/abbr&gt;'}\n\n-- Version of format_list that can be invoked from a template.\nfunction export.show_list(frame)\n\tlocal args = frame.args\n\tlocal lang = args[\"lang\"]; if lang == \"\" then lang = nil\
      \ end\n\tlocal list = {}\n\tlocal i = 1\n\t\n\twhile args[i] and args[i] ~= \"\" do\n\t\ttable.insert(list, args[i])\n\t\ti = i + 1\n\tend\n\t\n\treturn export.format_list(list, lang)\nend\n\n-- Format one or more gender specifications, in the form of\
      \ a table of specifications.\nfunction export.format_list(list, lang)\n\tlocal is_nounclass = nil\n\t\n\t-- Iterate over each specification and format it\n\tfor key, spec in ipairs(list) do\n\t\tlocal nc\n\t\tlist[key], nc = export.format_specification(spec,\
      \ lang)\n\t\t\n\t\t-- Ensure that the specifications are either all noun classes, or none are.\n\t\tif is_nounclass == nil then\n\t\t\tis_nounclass = nc\n\t\telseif is_nounclass ~= nc then\n\t\t\terror(\"Noun classes and genders cannot be mixed. Please\
      \ use either one or the other.\")\n\t\tend\n\tend\n\t\n\tif is_nounclass then\n\t\t-- Add the processed codes together with slashes\n\t\treturn \"&lt;span class=\\\"gender\\\"&gt;class \" .. table.concat(list, \"/\") .. \"&lt;/span&gt;\"\n\telse\n\t\t\
      -- Add the processed codes together with commas\n\t\treturn \"&lt;span class=\\\"gender\\\"&gt;\" .. table.concat(list, \" or \") .. \"&lt;/span&gt;\"\n\tend\nend\n\n-- Format the sub-parts of a single gender specification.\nfunction export.format_specification(spec,\
      \ lang)\n\tlocal categories = \"\"\n\tlocal ret = \"\"\n\tlocal is_nounclass = false\n\t\n\t-- If the specification starts with cX, then it is a noun class specification.\n\tif spec:find(\"^[1-9]\") or spec:find(\"^c[^-]\") then\n\t\tis_nounclass = true\n\
      \t\tcode = spec:gsub(\"^c\", \"\")\n\t\t\n\t\tif code == \"?\" then\n\t\t\tret = \"&lt;abbr class=\\\"noun-class\\\" title=\\\"noun class missing\\\"&gt;?&lt;/abbr&gt;\"\n\t\telse\n\t\t\tret = \"&lt;abbr class=\\\"noun-class\\\" title=\\\"noun class \"\
      \ .. code .. \"\\\"&gt;\" .. code .. \"&lt;/abbr&gt;\"\n\t\tend\n\telse\n\t\tlocal types = {}\n\t\t\n\t\t-- Split the parts and iterate over each part, converting it into its display form\n\t\tlocal parts = mw.text.split(spec, \"-\")\n\t\t\n\t\tfor key,\
      \ code in ipairs(parts) do\n\t\t\t-- Is this code valid?\n\t\t\tif not codes[code] then\n\t\t\t\terror(\"The gender specification \\\"\" .. spec .. \"\\\" is not valid.\")\n\t\t\tend\n\t\t\t\n\t\t\tif codes[code].type ~= \"other\" and types[codes[code].type]\
      \ then\n\t\t\t\t--require(\"Module:debug\").track(\"gender and number/multiple\")\n\t\t\t\t--require(\"Module:debug\").track(\"gender and number/multiple/\" .. spec)\n\t\t\t\terror(\"The gender specification \\\"\" .. spec .. \"\\\" contains multiple tags\
      \ of type \\\"\" .. codes[code].type .. \"\\\".\")\n\t\t\tend\n\t\t\t\t\n\t\t\tparts[key] = codes[code].display\n\t\t\ttypes[codes[code].type] = true\n\t\tend\n\t\t\n\t\t-- Add the processed codes together with non-breaking spaces\n\t\tret = table.concat(parts,\
      \ \"&amp;nbsp;\")\n\tend\n\t\n\t-- Do some additional checks if a language was given\n\tif lang then\n\t\t-- Is this an incomplete gender?\n\t\tif spec:find(\"?\") then\n\t\t\tlocal m_utilities = require(\"Module:utilities\")\n\t\t\tcategories = m_utilities.format_categories({lang:getCanonicalName()\
      \ .. \" terms with incomplete gender\"}, nil)\n\t\tend\n\t\t\n\t\t-- Check if the specification is valid\n\t\t--elseif langinfo.genders then\n\t\t--\tlocal valid_genders = {}\n\t\t--\tfor _, g in ipairs(langinfo.genders) do valid_genders[g] = true end\n\
      \t\t--\t\n\t\t--\tif not valid_genders[spec] then\n\t\t--\t\tlocal valid_string = {}\n\t\t--\t\tfor i, g in ipairs(langinfo.genders) do valid_string[i] = g end\n\t\t--\t\terror(\"The gender specification \\\"\" .. spec .. \"\\\" is not valid for \" ..\
      \ langinfo.names[1] .. \". Valid are: \" .. table.concat(valid_string, \", \"))\n\t\t--\tend\n\t\t--end\n\tend\n\t\n\treturn ret .. categories, is_nounclass\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:04.068Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Abor&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51129 t=1555362543960252
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 209301360, 482048447, 703959486
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4992628" pageid="4992628" ns="10" title="Template:bor"><revisions><rev user="Rua" timestamp="2017-11-12T12:37:23Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Redirected page to [[Template:borrowed]]" xml:space="preserve">#REDIRECT [[Template:borrowed]]</rev></revisions></page></pages></query></api>
- recorded: 2017-03-04T10:37:22.251Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aborrowing&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=FR:PAC:Pernes-les-Fontaines:44.00:5.05:v4; WMF-Last-Access=04-Mar-2017; WMF-Last-Access-Global=04-Mar-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50674 t=1488623842088625
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sat, 04 Mar 2017 10:37:22 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1199.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=04-Mar-2017;WMF-Last-Access-Global=04-Mar-2017;https=1
      X-Cache: cp1067 pass, cp3042 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 78.229.90.61
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.14
      X-Varnish: 18070070, 249074743, 531025764
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="2221629" pageid="2221629" ns="10" title="Template:borrowing"><revisions><rev user="Daniel Carrero" timestamp="2016-08-25T16:10:25Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:etymology/templates|borrowed}}&lt;!--

      --&gt;&lt;includeonly&gt;&lt;!--
      --&gt;{{#if:{{{nocap|}}}|[[Category:bor with nocap]]}}&lt;!--
      --&gt;{{#if:{{{notext|}}}|[[Category:bor with notext]]}}&lt;!--
      --&gt;{{#if:{{{lang|}}}|[[Category:bor with lang]]}}&lt;!--
      --&gt;&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:09:04.611Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aa&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38890 t=1555362544527553
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1280.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 503242233, 559633859, 703827619
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5658976" pageid="5658976" ns="10" title="Template:a"><revisions><rev user="-sche" timestamp="2016-07-02T23:45:24Z" contentformat="text/x-wiki" contentmodel="wikitext"
      comment="-sche moved page [[Template:a]] to [[Template:accent]]: per RFM" xml:space="preserve">#REDIRECT [[Template:accent]]</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:09:04.791Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aaccent&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=57587 t=1555362544689787
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 672649016, 827833016, 693617017
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="55584" pageid="55584" ns="10" title="Template:accent"><revisions><rev user="Erutuon" timestamp="2017-04-25T20:23:34Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="renamed module" xml:space="preserve">{{#invoke:accent qualifier|show}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2017-03-04T10:37:22.897Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aa&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=FR:PAC:Pernes-les-Fontaines:44.00:5.05:v4; WMF-Last-Access=04-Mar-2017; WMF-Last-Access-Global=04-Mar-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38664 t=1488623842750225
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sat, 04 Mar 2017 10:37:22 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1196.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=04-Mar-2017;WMF-Last-Access-Global=04-Mar-2017;https=1
      X-Cache: cp1067 pass, cp3032 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 78.229.90.61
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.14
      X-Varnish: 31598259, 1004000065, 528674095
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4830341\" pageid=\"4830341\" ns=\"828\" title=\"Module:a\"><revisions><rev user=\"TheDaveRoss\" timestamp=\"2016-10-25T20:04:12Z\" comment=\"Changed protection level for &quot;[[Module:a]]&quot;:\
      \ Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nfunction export.show(frame)\n\tdata = mw.loadData(&quot;Module:a/data&quot;)\n\t\n\tlocal args = frame.getParent and frame:getParent().args or frame\n\t\n\tif (not args[1] or args[1]\
      \ == &quot;&quot;) and mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\treturn '&lt;span class=&quot;ib-brac&quot;&gt;&lt;span class=&quot;qualifier-brac&quot;&gt;(&lt;/span&gt;&lt;/span&gt;' .. \n\t\t\t'&lt;span class=&quot;ib-content&quot;&gt;&lt;span\
      \ class=&quot;qualifier-content&quot;&gt;{{{1}}}' ..\n\t\t\t'&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-brac&quot;&gt;&lt;span class=&quot;qualifier-brac&quot;&gt;)&lt;/span&gt;&lt;/span&gt;'\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required =\
      \ true, list = true}\n\t}\n\tlocal inputs = require(&quot;Module:parameters&quot;).process(args, params)\n\t\n\tlocal accents = {}\n\t\n\tfor _, accent in ipairs(inputs[1]) do\n\t\tif data[accent] then\n\t\t\tif data[accent].link then\n\t\t\t\ttable.insert(accents,\
      \ &quot;[[w:&quot; .. data[accent].link .. &quot;|&quot; ..\n\t\t\t\t\t(data[accent].display or data[accent].link) .. &quot;]]&quot;)\n\t\t\telseif data[accent].display then\n\t\t\t\ttable.insert(accents, data[accent].display)\n\t\t\tend\n\t\telse\n\t\t\
      \ttable.insert(accents, accent)\n\t\tend\n\tend\n\t\n\treturn '&lt;span class=&quot;ib-brac&quot;&gt;&lt;span class=&quot;qualifier-brac&quot;&gt;(&lt;/span&gt;&lt;/span&gt;' ..\n\t\t'&lt;span class=&quot;ib-content&quot;&gt;&lt;span class=&quot;qualifier-content&quot;&gt;'\
      \ .. table.concat(accents, &quot;, &quot;) ..\n\t\t'&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-brac&quot;&gt;&lt;span class=&quot;qualifier-brac&quot;&gt;)&lt;/span&gt;&lt;/span&gt;'\nend\n\nfunction export.checkusage()\n\tif mw.title.getCurrentTitle().nsText\
      \ ~= &quot;&quot; then\n\t\treturn &quot;&quot;\n\tend\n\t\n\tlocal content = mw.title.getCurrentTitle():getContent()\n\tlocal length = mw.ustring.len(content)\n\t\n\tlocal iterate_find = function(pattern)\n\t\tlocal index = 1\n\t\treturn function()\n\t\
      \t\tindex = mw.ustring.find(content, pattern, index+5)\n\t\t\treturn index\n\t\tend\n\tend\n\t\n\tlocal indices = {}\n\tfor index in iterate_find(&quot;===+ *Pronunciation *===+&quot;) do\n\t\tlocal next_hyphens = mw.ustring.find(content, &quot;\\n%-%-%-%-&quot;,\
      \ index) or length\n\t\tlocal next_equals = mw.ustring.find(content, &quot;\\n==+[^\\n]+==+&quot;, index) or length\n\t\ttable.insert(indices, {index, math.min(next_hyphens, next_equals)})\n\tend\n\t\n\tfor index in iterate_find(&quot;{{a|&quot;) do\n\t\
      \tlocal valid = false\n\t\tfor _,locations in ipairs(indices) do\n\t\t\tif locations[1] &lt; index and index &lt; locations[2] then\n\t\t\t\tvalid = true\n\t\t\tend\n\t\tend\n\t\tif not valid then\n\t\t\treturn &quot;[[Category:usage of a in wrong position]]&quot;\n\
      \t\tend\n\tend\n\t\n\treturn &quot;&quot;\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2017-03-04T10:37:23.076Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aa%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=FR:PAC:Pernes-les-Fontaines:44.00:5.05:v4; WMF-Last-Access=04-Mar-2017; WMF-Last-Access-Global=04-Mar-2017
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=28093 t=1488623842926307
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Sat, 04 Mar 2017 10:37:22 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1200.eqiad.wmnet
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=04-Mar-2017;WMF-Last-Access-Global=04-Mar-2017;https=1
      X-Cache: cp1068 pass, cp3032 pass, cp3033 pass
      X-Cache-Status: pass
      X-Client-IP: 78.229.90.61
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.12.14
      X-Varnish: 978364952, 1001492953, 534970885
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4830339\" pageid=\"4830339\" ns=\"828\" title=\"Module:a/data\"><revisions><rev user=\"JohnC5\" timestamp=\"2017-01-26T23:53:45Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local m = {}\n\n-- A\n\nm[&quot;AAVE&quot;] = {\n\tlink = &quot;African American Vernacular English&quot;,\n\tdisplay = &quot;AAVE&quot;\n}\n\nm[&quot;æ-tensing&quot;] = {\n\tlink = &quot;æ-tensing&quot;\n\
      }\nm[&quot;ae-tensing&quot;] = m[&quot;æ-tensing&quot;]\n\nm[&quot;Anglicised&quot;] = {\n\tlink = &quot;Anglicisation#Anglicisation of non-English-language vocabulary and names&quot;,\n\tdisplay = &quot;Anglicised&quot;\n}\nm[&quot;Anglicized&quot;] =\
      \ m[&quot;Anglicised&quot;]\n\nm[&quot;ar-Cairene&quot;] = {\n\tlink = &quot;Egyptian Arabic&quot;,\n\tdisplay = &quot;Cairene&quot;\n}\nm[&quot;Cairene&quot;] = m[&quot;ar-Cairene&quot;]\n\nm[&quot;Arvanite&quot;] = {\n\tlink = &quot;Arvanitika&quot;,\n\
      \tdisplay = &quot;Arvanite&quot;\n}\n\nm[&quot;Ashkenazi Hebrew&quot;] = {\n\tlink = &quot;Ashkenazi Hebrew&quot;,\n\tdisplay = &quot;Ashkenazi Hebrew&quot;\n}\nm[&quot;Ashkenazi&quot;] = m[&quot;Ashkenazi Hebrew&quot;]\n\nm[&quot;Australia&quot;] = {\n\
      \tlink = &quot;Australian English phonology&quot;,\n\tdisplay = &quot;Australia&quot;\n}\nm[&quot;AU&quot;] = m[&quot;Australia&quot;]\nm[&quot;AuE&quot;] = m[&quot;Australia&quot;]\nm[&quot;Aus&quot;] = m[&quot;Australia&quot;]\nm[&quot;AusE&quot;] =\
      \ m[&quot;Australia&quot;]\n\n-- B\n\nm[&quot;BE-nl&quot;] = {\n\tlink = &quot;Belgian Dutch&quot;,\n\tdisplay = &quot;Belgium&quot;\n}\nm[&quot;BE&quot;] = m[&quot;BE-nl&quot;]\n\nm[&quot;Beijing&quot;] = {\n\tlink = &quot;Beijing dialect&quot;,\n\tdisplay\
      \ = &quot;Beijing&quot;\n}\n\nm[&quot;Bosnia&quot;] = {\n\tlink = &quot;Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation&quot;,\n\tdisplay = &quot;Bosnia&quot;\n}\nm[&quot;Bosnian&quot;] = m[&quot;Bosnia&quot;]\n\nm[&quot;Boston&quot;]\
      \ = {\n\tlink = &quot;Boston English&quot;,\n\tdisplay = &quot;Boston&quot;\n}\nm[&quot;Bos&quot;] = m[&quot;Boston&quot;]\n\nm[&quot;Brazil&quot;] = {\n\tlink = &quot;Brazilian Portuguese&quot;,\n\tdisplay = &quot;Brazil&quot;\n}\nm[&quot;BP&quot;] =\
      \ m[&quot;Brazil&quot;]\nm[&quot;BR&quot;] = m[&quot;Brazil&quot;]\nm[&quot;Brazilian Portuguese&quot;] = m[&quot;Brazil&quot;]\n\n-- C\n\nm[&quot;Canada&quot;] = {\n\tlink = &quot;Canadian English&quot;,\n\tdisplay = &quot;Canada&quot;\n}\nm[&quot;CA&quot;]\
      \ = m[&quot;Canada&quot;]\nm[&quot;Canadian&quot;] = m[&quot;Canada&quot;]\n\nm[&quot;Canadian Shift&quot;] = {\n\tlink = &quot;Canadian Shift&quot;,\n\tdisplay = &quot;Canadian Vowel Shift&quot;\n}\nm[&quot;Canadian shift&quot;] = m[&quot;Canadian Shift&quot;]\n\
      m[&quot;Canadian Vowel Shift&quot;] = m[&quot;Canadian Shift&quot;]\nm[&quot;Canadian vowel shift&quot;] = m[&quot;Canadian Shift&quot;]\n\nm[&quot;Carioca&quot;] = {\n\tlink = &quot;Carioca#Carioca Dialect&quot;,\n\tdisplay = &quot;Carioca&quot;\n}\n\
      m[&quot;RJ&quot;] = m[&quot;Carioca&quot;]\n\nm[&quot;Castilian&quot;] = {\n\tlink = &quot;Castilian Spanish&quot;,\n\tdisplay = &quot;Castilian&quot;\n}\nm[&quot;Spain&quot;] = m[&quot;Castilian&quot;]\n\nm[&quot;Central Catalan&quot;] = {\n\tlink = &quot;Central\
      \ Catalan&quot;,\n\tdisplay = &quot;Central&quot;,\n}\n\nm[&quot;central Germany&quot;] = {\n\tdisplay = &quot;central Germany&quot;\n}\nm[&quot;central German&quot;] = m[&quot;central Germany&quot;]\nm[&quot;Central German&quot;] = m[&quot;central Germany&quot;]\n\
      m[&quot;Central Germany&quot;] = m[&quot;central Germany&quot;]\n\nm[&quot;central Italy&quot;] = {\n\tlink = &quot;Central Italian&quot;,\n\tdisplay = &quot;central Italy&quot;\n}\nm[&quot;central Italian&quot;] = m[&quot;central Italy&quot;]\nm[&quot;Central\
      \ Italian&quot;] = m[&quot;central Italy&quot;]\nm[&quot;Central Italy&quot;] = m[&quot;central Italy&quot;]\n\nm[&quot;Central Scotland&quot;] = {\n\tlink = &quot;Central Scots&quot;,\n\tdisplay = &quot;Central Scotland&quot;\n}\n\nm[&quot;ceceo&quot;]\
      \ = {\n\tlink = &quot;Phonological history of Spanish coronal fricatives#Ceceo&quot;,\n\tdisplay = &quot;''ceceo'' merger&quot;\n}\n\nm[&quot;Classical&quot;] = {\n\tlink = &quot;Classical Latin&quot;,\n\tdisplay = &quot;Classical&quot;\n}\n\nm[&quot;Classical\
      \ Sanskrit&quot;] = {\n\tlink = &quot;Sanskrit#Classical Sanskrit&quot;,\n\tdisplay = &quot;Classical&quot;\n}\n\nm[&quot;Cois Fharraige&quot;] = {\n   link = &quot;Gaeltacht Cois Fharraige&quot;,\n   display = &quot;Cois Fharraige&quot;\n}\n\nm[&quot;Connacht&quot;]\
      \ = {\n\tlink = &quot;Connacht Irish&quot;,\n\tdisplay = &quot;Connacht&quot;\n}\n\nm[&quot;cot-caught&quot;] = {\n\tlink = &quot;Cot–caught merger&quot;,\n\tdisplay = &quot;''cot''–''caught'' merger&quot;\n}\nm[&quot;caught-cot&quot;] = m[&quot;cot-caught&quot;]\n\
      \nm[&quot;Croatia&quot;] = {\n\tlink = &quot;Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation&quot;,\n\tdisplay = &quot;Croatia&quot;\n}\nm[&quot;Croatian&quot;] = m[&quot;Croatia&quot;]\n\nm[&quot;cy-N&quot;] = {\n\tlink\
      \ = &quot;Welsh language#Dialects&quot;,\n\tdisplay = &quot;North Wales&quot;\n}\nm[&quot;cy-g&quot;] = m[&quot;cy-N&quot;]\n\nm[&quot;cy-S&quot;] = {\n\tlink = &quot;Welsh language#Dialects&quot;,\n\tdisplay = &quot;South Wales&quot;\n}\nm[&quot;cy-h&quot;]\
      \ = m[&quot;cy-S&quot;]\n\n-- D\n\nm[&quot;Dari&quot;] = {\n\tlink = &quot;Dari Persian&quot;,\n\tdisplay = &quot;Dari&quot;\n}\n\nm[&quot;Delhi&quot;] = {\n    display = &quot;Delhi Hindi&quot;\n}\n\nm[&quot;distinción&quot;] = {\n\tlink = &quot;Phonological\
      \ history of Spanish coronal fricatives#Distinction&quot;,\n\tdisplay = &quot;''z''-''s'' distinction&quot;\n}\nm[&quot;distincion&quot;] = m[&quot;distinción&quot;]\n\n\n-- E\n\nm[&quot;Ecclesiastical&quot;] = {\n\tlink = &quot;Ecclesiastical Latin&quot;,\n\
      \tdisplay = &quot;Ecclesiastical&quot;\n}\n\nm[&quot;Egyptological&quot;] = {\n\tlink = &quot;Egyptian language#Egyptological pronunciation&quot;,\n\tdisplay = &quot;Egyptological&quot;\n}\n\nm[&quot;Estuary English&quot;] = {\n\tlink = &quot;Estuary English&quot;\n\
      }\n\n-- F\n\nm[&quot;father-bother&quot;] = {\n\tlink = &quot;Father–bother merger&quot;,\n\tdisplay = &quot;''father''-''bother'' merger&quot;\n}\n\nm[&quot;FS&quot;] = {\n\tlink = &quot;Standard French&quot;,\n\tdisplay = &quot;FS&quot;\n}\n\nm[&quot;FV&quot;]\
      \ = {\n\tlink = &quot;French Flemish&quot;,\n\tdisplay = &quot;French Flanders&quot;\n}\n\n-- G\n\nm[&quot;GenAm&quot;] = {\n\tlink = &quot;General American&quot;\n}\nm[&quot;GA&quot;] = m[&quot;GenAm&quot;]\n\nm[&quot;Geordie&quot;] = {\n\tlink = &quot;Geordie&quot;\n\
      }\n\nm[&quot;Gheg&quot;] = {\n\tlink = &quot;Gheg Albanian&quot;,\n\tdisplay = &quot;Gheg&quot;\n}\n\nm[&quot;Givi&quot;] = {\n\tlink = &quot;Giv, South Khorasan&quot;,\n\tdisplay = &quot;Givi&quot;\n}\n\nm[&quot;grc-byz1&quot;] = {\n\tlink = &quot;Medieval\
      \ Greek&quot;,\n\tdisplay = &quot;10&lt;sup&gt;th&lt;/sup&gt; &lt;small&gt;AD&lt;/small&gt; Byzantine&quot;\n}\n\nm[&quot;grc-byz2&quot;] = {\n\tlink = &quot;Medieval Greek&quot;,\n\tdisplay = &quot;15&lt;sup&gt;th&lt;/sup&gt; &lt;small&gt;AD&lt;/small&gt;\
      \ Constantinopolitan&quot;\n}\n\nm[&quot;grc-cla&quot;] = {\n\tlink = &quot;Ancient Greek phonology&quot;,\n\tdisplay = &quot;5&lt;sup&gt;th&lt;/sup&gt; &lt;small&gt;BC&lt;/small&gt; Attic&quot;\n}\n\nm[&quot;grc-koi1&quot;] = {\n\tlink = &quot;Koine Greek\
      \ phonology&quot;,\n\tdisplay = &quot;1&lt;sup&gt;st&lt;/sup&gt; &lt;small&gt;BC&lt;/small&gt; Egyptian&quot;\n}\n\nm[&quot;grc-koi2&quot;] = {\n\tlink = &quot;Koine Greek phonology&quot;,\n\tdisplay = &quot;4&lt;sup&gt;th&lt;/sup&gt; &lt;small&gt;AD&lt;/small&gt;\
      \ Koine&quot;\n}\n\n-- H\n\nm[&quot;hbo&quot;] = {\n\tlink = &quot;Biblical Hebrew#Phonology&quot;,\n\tdisplay = &quot;Biblical Hebrew&quot;\n}\n\nm[&quot;Biblical Hebrew&quot;] = m[&quot;hbo&quot;]\n\nm[&quot;horse-hoarse&quot;] = {\n    link = &quot;horse–\
      hoarse merger&quot;,\n    display = &quot;without the ''horse''–''hoarse'' merger&quot;\n}\n\nm[&quot;hy-E&quot;] = {\n\tlink = &quot;Eastern Armenian language&quot;,\n\tdisplay = &quot;Eastern Armenian&quot;\n}\n\nm[&quot;hy-IR&quot;] = {\n\tlink = &quot;Armenian\
      \ Iranians#Culture and language&quot;,\n\tdisplay = &quot;Eastern Armenian - Iran&quot;\n}\n\nm[&quot;hy-W&quot;] = {\n\tlink = &quot;Western Armenian language&quot;,\n\tdisplay = &quot;Western Armenian&quot;\n}\n\nm[&quot;hy-Y&quot;] = {\n\tlink = &quot;Yerevan&quot;,\n\
      \tdisplay = &quot;Eastern Armenian - Yerevan&quot;\n}\n\n-- I\n\nm[&quot;IL&quot;] = {\n\tlink = &quot;Modern Hebrew phonology&quot;,\n\tdisplay = &quot;Modern Israeli Hebrew&quot;\n}\nm[&quot;Israeli Hebrew&quot;] = m[&quot;IL&quot;]\nm[&quot;Modern Hebrew&quot;]\
      \ = m[&quot;IL&quot;]\nm[&quot;Modern Israeli&quot;] = m[&quot;IL&quot;]\nm[&quot;Modern Israeli Hebrew&quot;] = m[&quot;IL&quot;]\nm[&quot;Modern/Israeli Hebrew&quot;] = m[&quot;IL&quot;]\n\nm[&quot;InE&quot;] = {\n\tlink = &quot;Indian English&quot;,\n\
      \tdisplay = &quot;Indian English&quot;\n}\n\nm[&quot;IR&quot;] = {\n\tlink = &quot;Western Persian&quot;,\n\tdisplay = &quot;Iranian Persian&quot;\n}\n\nm[&quot;Ireland&quot;] = {\n\tlink = &quot;Hiberno-English&quot;,\n\tdisplay = &quot;Ireland&quot;\n\
      }\nm[&quot;HE&quot;] = m[&quot;Ireland&quot;]\nm[&quot;IE&quot;] = m[&quot;Ireland&quot;]\n\nm[&quot;Italian Hebrew&quot;] = {\n\tlink = &quot;Italian Hebrew&quot;,\n\tdisplay = &quot;Italian Hebrew&quot;\n}\n\n-- J\n\nm[&quot;Johor-Selangor&quot;] = {\n\
      \tlink = &quot;Malayan languages&quot;,\n\tdisplay = &quot;Johor-Selangor&quot;\n}\n\n-- K\n\nm[&quot;Kabul, Peshawar&quot;] = {\n\tlink = &quot;Pashto dialects&quot;,\n\tdisplay = &quot;Kabul, Peshawar&quot;\n}\n\nm[&quot;Kandahar&quot;] = {\n\tlink =\
      \ &quot;Kandahari Pashto&quot;,\n\tdisplay = &quot;Kandahar&quot;\n}\nm[&quot;ps-Kandahar&quot;] = m[&quot;Kandahar&quot;]\n\n-- L\n\nm[&quot;LAm&quot;] = {\n\tlink = &quot;Spanish language in the Americas&quot;,\n\tdisplay = &quot;Latin American&quot;\n\
      }\n\nm[&quot;Latinate&quot;] = {\n\tlink = &quot;Latin#Phonology&quot;,\n\tdisplay = &quot;Latinate&quot;\n}\n\nm[&quot;lleísmo&quot;] = {\n\tlink = &quot;Yeísmo&quot;,\n\tdisplay = &quot;''ll''-''y'' distinction&quot;\n}\n\n-- M\n\nm[&quot;Mary-marry-merry&quot;]\
      \ = {\n\tlink = &quot;Mary–marry–merry merger&quot;,\n\tdisplay = &quot;''Mary''–''marry''–''merry'' merger&quot;\n}\nm[&quot;Mmmm&quot;] = m[&quot;Mary-marry-merry&quot;]\n\nm[&quot;Midwestern US&quot;] = {\n\tlink = &quot;Midwestern United States#Linguistic\
      \ characteristics&quot;,\n\tdisplay = &quot;Midwestern US&quot;\n}\nm[&quot;Midwest US&quot;] = m[&quot;Midwestern US&quot;]\nm[&quot;Midwest US English&quot;] = m[&quot;Midwestern US&quot;]\nm[&quot;Midwestern US English&quot;] = m[&quot;Midwestern US&quot;]\n\
      \nm[&quot;Mizrahi Hebrew&quot;] = {\n\tlink = &quot;Mizrahi Hebrew&quot;,\n\tdisplay = &quot;Mizrahi Hebrew&quot;\n}\nm[&quot;Mizrahi&quot;] = m[&quot;Mizrahi Hebrew&quot;]\nm[&quot;Mizrakhi&quot;] = m[&quot;Mizrahi Hebrew&quot;]\nm[&quot;Mizrachi&quot;]\
      \ = m[&quot;Mizrahi Hebrew&quot;]\nm[&quot;Mizrakhi Hebrew&quot;] = m[&quot;Mizrahi Hebrew&quot;]\nm[&quot;Mizrachi Hebrew&quot;] = m[&quot;Mizrahi Hebrew&quot;]\n\nm[&quot;Montenegro&quot;] = {\n\tlink = &quot;Comparison of standard Bosnian, Croatian,\
      \ Montenegrin and Serbian#Accentuation&quot;,\n\tdisplay = &quot;Montenegro&quot;\n}\nm[&quot;Montenegrin&quot;] = m[&quot;Montenegro&quot;]\n\nm[&quot;Munster&quot;] = {\n\tlink = &quot;Munster Irish&quot;,\n\tdisplay = &quot;Munster&quot;\n}\n\n-- N\n\
      \nm[&quot;Netherlands&quot;] = {\n\tlink = &quot;Dutch phonology&quot;,\n\tdisplay = &quot;Netherlands&quot;\n}\nm[&quot;NL&quot;] = m[&quot;Netherlands&quot;]\n\nm[&quot;New Latin&quot;] = {\n\tlink = &quot;New Latin&quot;\n}\n\nm[&quot;New York&quot;]\
      \ = {\n\tlink = &quot;New York dialect#Linguistic features&quot;,\n\tdisplay = &quot;NYC&quot;\n}\nm[&quot;NY&quot;] = m[&quot;New York&quot;]\nm[&quot;NYC&quot;] = m[&quot;New York&quot;]\n\nm[&quot;New Zealand&quot;] = {\n\tlink = &quot;New Zealand English&quot;,\n\
      \tdisplay = &quot;New Zealand&quot;\n}\nm[&quot;NZ&quot;] = m[&quot;New Zealand&quot;]\n\nm[&quot;non-Mary-marry-merry&quot;] = {\n\tlink = &quot;Mary–marry–merry merger&quot;,\n\tdisplay = &quot;''Mary''–''marry''–''merry'' distinction&quot;\n}\nm[&quot;nMmmm&quot;]\
      \ = m[&quot;non-Mary-marry-merry&quot;]\n\nm[&quot;non-rhotic&quot;] = {\n\tlink = &quot;Rhoticity in English&quot;,\n\tdisplay = &quot;non-rhotic&quot;\n}\nm[&quot;nonrhotic&quot;] = m[&quot;non-rhotic&quot;]\n\nm[&quot;non-weak vowel&quot;] = {\n\tlink\
      \ = &quot;Weak vowel merger&quot;,\n\tdisplay = &quot;weak vowel distinction&quot;\n}\n\nm[&quot;northern and central Germany&quot;] = {\n\tdisplay = &quot;northern Germany, central Germany&quot;\n}\nm[&quot;north and central German&quot;] = m[&quot;northern\
      \ and central Germany&quot;]\nm[&quot;North and Central German&quot;] = m[&quot;northern and central Germany&quot;]\nm[&quot;north and central Germany&quot;] = m[&quot;northern and central Germany&quot;]\nm[&quot;North and Central Germany&quot;] = m[&quot;northern\
      \ and central Germany&quot;]\nm[&quot;northern and central German&quot;] = m[&quot;northern and central Germany&quot;]\nm[&quot;Northern and Central German&quot;] = m[&quot;northern and central Germany&quot;]\nm[&quot;Northern and Central Germany&quot;]\
      \ = m[&quot;northern and central Germany&quot;]\n\nm[&quot;Northern England&quot;] = {\n\tlink = &quot;Northern England English&quot;,\n\tdisplay = &quot;Northern England&quot;\n}\nm[&quot;North England&quot;] = m[&quot;Northern England&quot;]\n\nm[&quot;northern\
      \ Germany&quot;] = {\n\tdisplay = &quot;northern Germany&quot;\n}\nm[&quot;north German&quot;] = m[&quot;northern Germany&quot;]\nm[&quot;North German&quot;] = m[&quot;northern Germany&quot;]\nm[&quot;north Germany&quot;] = m[&quot;northern Germany&quot;]\n\
      m[&quot;North Germany&quot;] = m[&quot;northern Germany&quot;]\nm[&quot;northern German&quot;] = m[&quot;northern Germany&quot;]\nm[&quot;Northern German&quot;] = m[&quot;northern Germany&quot;]\nm[&quot;Northern Germany&quot;] = m[&quot;northern Germany&quot;]\n\
      \nm[&quot;Northern Scotland&quot;] = {\n\tlink = &quot;Northern Scots&quot;,\n\tdisplay = &quot;Northern Scotland&quot;\n}\n\n-- O\n\nm[&quot;Osaka&quot;] = {\n\tlink = &quot;Kansai dialect&quot;,\n\tdisplay = &quot;Osaka&quot;\n}\n\n-- P\n\nm[&quot;Palestinian\
      \ Hebrew&quot;] = {\n\tlink = &quot;Palestinian vocalization&quot;,\n\tdisplay = &quot;Palestinian Hebrew&quot;\n}\n\nm[&quot;pin-pen&quot;] = {\n\tlink = &quot;Phonological history of English high front vowels#Pin–pen merger&quot;,\n\tdisplay = &quot;''pin''–\
      ''pen'' merger&quot;\n}\nm[&quot;pen-pin&quot;] = m[&quot;pin-pen&quot;]\n\nm[&quot;Philippine&quot;] = {\n\tlink = &quot;Philippine English&quot;,\n\tdisplay = &quot;Philippine&quot;\n}\nm[&quot;Philippines&quot;] = m[&quot;Philippine&quot;]\n\nm[&quot;Portugal&quot;]\
      \ = {\n\tlink = &quot;European Portuguese&quot;,\n\tdisplay = &quot;Portugal&quot;\n}\nm[&quot;EP&quot;] = m[&quot;Portugal&quot;]\nm[&quot;PT&quot;] = m[&quot;Portugal&quot;]\n\nm[&quot;ps-Kabul&quot;] = {\n\tlink = &quot;Pashto dialects&quot;,\n\tdisplay\
      \ = &quot;Kabuli&quot;\n}\n\n-- Q\n\nm[&quot;Quanzhou&quot;] = {\n\tlink = &quot;Quanzhou&quot;\n}\n\nm[&quot;Quetta&quot;] = {\n\tlink = &quot;Pashto dialects&quot;,\n\tdisplay = &quot;Quetta&quot;\n}\n\n-- R\n\nm[&quot;r-dissimilation&quot;] = {\n\t\
      link = &quot;Dissimilation&quot;,\n\tdisplay = &quot;''r''-dissimilation&quot;\n}\n\nm[&quot;rhotic&quot;] = {\n\tlink = &quot;Rhotic and non-rhotic accents&quot;,\n\tdisplay = &quot;rhotic&quot;\n}\n\nm[&quot;Riau-Lingga&quot;] = {\n\tlink = &quot;Riau-Lingga\
      \ Sultanate&quot;,\n\tdisplay = &quot;Riau-Lingga&quot;\n}\n\nm[&quot;Rioplatense&quot;] = {\n\tlink = &quot;Rioplatense Spanish&quot;,\n\tdisplay = &quot;Rioplatense&quot;\n}\n\nm[&quot;RP&quot;] = {\n\tlink = &quot;Received Pronunciation&quot;\n}\n\n\
      -- S\n\nm[&quot;São Paulo&quot;] = {\n\tlink = &quot;Brazilian Portuguese&quot;,\n\tdisplay = &quot;São Paulo&quot;\n}\n\nm[&quot;Scotland&quot;] = {\n\tlink = &quot;Scottish English&quot;,\n\tdisplay = &quot;Scotland&quot;\n}\n\nm[&quot;Sephardi Hebrew&quot;]\
      \ = {\n\tlink = &quot;Sephardi Hebrew&quot;,\n\tdisplay = &quot;Sephardi Hebrew&quot;\n}\nm[&quot;Sephardi&quot;] = m[&quot;Sephardi Hebrew&quot;]\n\nm[&quot;Serbia&quot;] = {\n\tlink = &quot;Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation&quot;,\n\
      \tdisplay = &quot;Serbia&quot;\n}\nm[&quot;Serbian&quot;] = m[&quot;Serbia&quot;]\n\nm[&quot;seseo&quot;] = {\n\tlink = &quot;Phonological history of Spanish coronal fricatives#Seseo&quot;,\n\tdisplay = &quot;''seseo'' merger&quot;\n}\n\nm[&quot;Sistani&quot;]\
      \ = {\n\tlink = &quot;Sistani dialect&quot;,\n\tdisplay = &quot;Sistani&quot;\n}\n\nm[&quot;South Africa&quot;] = {\n\tlink = &quot;South African English&quot;,\n\tdisplay = &quot;South Africa&quot;\n}\nm[&quot;SAE&quot;] = m[&quot;South Africa&quot;]\n\
      \nm[&quot;Southern American English&quot;] = {\n\tlink = &quot;Southern American English&quot;\n}\nm[&quot;Southern US&quot;] = m[&quot;Southern American English&quot;]\nm[&quot;Southern US English&quot;] = m[&quot;Southern American English&quot;]\nm[&quot;Southern\
      \ U.S. English&quot;] = m[&quot;Southern American English&quot;]\n\nm[&quot;South Brazil&quot;] = {\n\tlink = &quot;Brazilian Portuguese&quot;,\n\tdisplay = &quot;South Brazil&quot;\n}\n\nm[&quot;southern Germany&quot;] = {\n\tdisplay = &quot;southern\
      \ Germany&quot;\n}\nm[&quot;south German&quot;] = m[&quot;southern Germany&quot;]\nm[&quot;South German&quot;] = m[&quot;southern Germany&quot;]\nm[&quot;south Germany&quot;] = m[&quot;southern Germany&quot;]\nm[&quot;South Germany&quot;] = m[&quot;southern\
      \ Germany&quot;]\nm[&quot;southern German&quot;] = m[&quot;southern Germany&quot;]\nm[&quot;Southern German&quot;] = m[&quot;southern Germany&quot;]\nm[&quot;Southern Germany&quot;] = m[&quot;southern Germany&quot;]\n\nm[&quot;Southern Scotland&quot;]\
      \ = {\n\tlink = &quot;Southern Scots&quot;,\n\tdisplay = &quot;Southern Scotland&quot;\n}\n\nm[&quot;St. Louis&quot;] = {\n\tlink = &quot;North American regional phonology#St. Louis and vicinity&quot;,\n\tdisplay = &quot;St. Louis (Missouri)&quot;\n}\n\
      m[&quot;STL&quot;] = m[&quot;St. Louis&quot;]\n\nm[&quot;standard&quot;] = {\n\tdisplay = &quot;standard&quot;\n}\nm[&quot;Standard&quot;] = m[&quot;standard&quot;]\n\nm[&quot;Swedish&quot;] = {\n\tlink = &quot;Swedish pronunciation&quot;,\n\tdisplay =\
      \ &quot;Swedish&quot;\n}\n\nm[&quot;Syrian Hebrew&quot;] = {\n\tlink = &quot;Syrian Jews#Pronunciation of Hebrew&quot;,\n\tdisplay = &quot;Syrian Hebrew&quot;\n}\n\n-- T\n\nm[&quot;t-glottalization&quot;] = {\n   link = &quot;T-glottalization&quot;,\n\
      \   display = &quot;''t''-glottalization&quot;\n}\nm[&quot;t-glottaling&quot;] = m[&quot;t-glottalization&quot;]\n\nm[&quot;Tajik&quot;] = {\n\tlink = &quot;Tajik language&quot;,\n\tdisplay = &quot;Tajik&quot;\n}\nm[&quot;Tajiki&quot;] = m[&quot;Tajik&quot;]\n\
      \nm[&quot;Tehrani&quot;] = {\n\tlink = &quot;Tehrani accent&quot;,\n\tdisplay = &quot;Tehrani&quot;\n}\n\nm[&quot;Tiberian Hebrew&quot;] = {\n\tlink = &quot;Tiberian Hebrew&quot;,\n\tdisplay = &quot;Tiberian Hebrew&quot;\n}\nm[&quot;Tiberian&quot;] = m[&quot;Tiberian\
      \ Hebrew&quot;]\n\nm[&quot;Tosk&quot;] = {\n\tlink = &quot;Tosk Albanian&quot;,\n\tdisplay = &quot;Tosk&quot;\n}\n\n-- U\n\nm[&quot;UK&quot;] = {\n\tlink = &quot;British English&quot;,\n\tdisplay = &quot;UK&quot;\n}\nm[&quot;British&quot;] = m[&quot;UK&quot;]\n\
      \nm[&quot;Ulaanbaatar&quot;] = {\n\tlink = &quot;Ulaanbaatar&quot;\n}\nm[&quot;UlaanBaatar&quot;] = m[&quot;Ulaanbaatar&quot;]\n\nm[&quot;Ulster&quot;] = {\n\tlink = &quot;Ulster Irish&quot;,\n\tdisplay = &quot;Ulster&quot;\n}\n\nm[&quot;US&quot;] = {\n\
      \tlink = &quot;American English&quot;,\n\tdisplay = &quot;US&quot;\n}\n\n-- V\n\nm[&quot;Valencia&quot;] = {\n\tlink = &quot;Valencian&quot;\n}\nm[&quot;Valencian&quot;] = m[&quot;Valencia&quot;]\n\nm[&quot;Vedic Sanskrit&quot;] = {\n\tlink = &quot;Vedic\
      \ Sanskrit&quot;,\n\tdisplay = &quot;Vedic&quot;\n}\nm[&quot;Vedic&quot;] = m[&quot;Vedic Sanskrit&quot;]\nm[&quot;Rigvedic&quot;] = m[&quot;Vedic Sanskrit&quot;]\n\nm[&quot;Vulgar&quot;] = {\n\tlink = &quot;Vulgar Latin&quot;,\n\tdisplay = &quot;Vulgar&quot;\n\
      }\n\n-- W\n\nm[&quot;Wales&quot;] = {\n\tlink = &quot;Welsh English&quot;,\n\tdisplay = &quot;Wales&quot;\n}\nm[&quot;Welsh&quot;] = m[&quot;Wales&quot;]\n\nm[&quot;Wardak&quot;] = {\n\tlink = &quot;Pashto dialects&quot;,\n\tdisplay = &quot;Wardak&quot;\n\
      }\n\nm[&quot;Wazirwola&quot;] = {\n\tlink = &quot;Wazirwola dialect&quot;,\n\tdisplay = &quot;Wazirwola&quot;\n}\n\nm[&quot;weak vowel&quot;] = {\n\tlink = &quot;Weak vowel merger&quot;,\n\tdisplay = &quot;weak vowel merger&quot;\n}\n\n-- X\n\nm[&quot;Xiamen&quot;]\
      \ = {\n\tlink = &quot;Xiamen&quot;\n}\n\n-- Y\n\nm[&quot;yeísmo&quot;] = {\n\tlink = &quot;Yeísmo&quot;,\n\tdisplay = &quot;''ll''-''y'' neutralization&quot;\n}\n\nm[&quot;Yemenite Hebrew&quot;] = {\n\tlink = &quot;Yemenite Hebrew&quot;,\n\tdisplay = &quot;Yemenite\
      \ Hebrew&quot;\n}\n\nm[&quot;YIVO&quot;] = {\n\tlink = &quot;YIVO&quot;\n}\n\n-- Z\n\nm[&quot;Zhangzhou&quot;] = {\n\tlink = &quot;Zhangzhou&quot;\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:05.562Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ahyphenation&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44211 t=1555362545474280
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1316.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 934643437, 649861350, 689624880
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="680556" pageid="680556" ns="10" title="Template:hyphenation"><revisions><rev user="Rua" timestamp="2016-10-17T16:57:24Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Replaced content with &quot;{{#invoke:hyphenation|hyphenation}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&quot;" xml:space="preserve">{{#invoke:hyphenation|hyphenation}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:09:05.738Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ahyphenation&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=40383 t=1555362545651175
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1339.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 426973660, 646916999, 684709925
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5878916\" pageid=\"5878916\" ns=\"828\" title=\"Module:hyphenation\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-27T14:53:04Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"support 1= for language as well as lang=\" xml:space=\"preserve\">local export = {}\n\nlocal categorise_syllables = {\n\t[\"es\"] = true,\n\t[\"fr\"] = true,\n\t[\"it\"] = true,\n\t[\"\
      pt\"] = true,\n}\n\nfunction export.hyphenation(frame)\n\tlocal parent_args = frame:getParent().args\n\tlocal compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default\
      \ = \"und\"},\n\t\t[1 + offset] = {list = true, required = true, default = \"{{{2}}}\"},\n\t\t\n\t\t[\"caption\"] = {},\n\t\t[\"nocaption\"] = {type = \"boolean\"},\n\t\t[\"sc\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(parent_args,\
      \ params)\n\t\n\tlocal lang = args[compat and \"lang\" or 1]\n\tlocal lang = require(\"Module:languages\").getByCode(lang) or error(\"The language code \\\"\" .. lang .. \"\\\" is not valid.\")\n\tlocal sc = args[\"sc\"] and (require(\"Module:scripts\"\
      ).getByCode(args[\"sc\"]) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil\n\t\n\tlocal text = require(\"Module:links\").full_link({lang = lang, sc = sc, alt = table.concat(args[1 + offset], \"‧\"), tr = \"-\"})\n\tlocal category\
      \ = \"\"\n\t\n\tif categorise_syllables[lang:getCode()] then\n\t\tcategory = require(\"Module:utilities\").format_categories({lang:getCanonicalName() .. \" \" .. tostring(#args[1 + offset]) .. \"-syllable words\"}, lang)\n\tend\n\t\n\treturn (args[\"nocaption\"\
      ] and \"\" or (args[\"caption\"] or \"Hyphenation\") .. \": \") .. text .. category\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:05.930Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Apt-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54343 t=1555362545830906
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 744710539, 238052597, 692460741
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="1555179" pageid="1555179" ns="10" title="Template:pt-noun"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T19:50:01Z" contentformat="text/x-wiki"
      contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:pt-noun]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow
      only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:pt-noun|show}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:09:06.113Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Apt-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41258 t=1555362546017265
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:06 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1280.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 505396319, 649108686, 687568682
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4003449\" pageid=\"4003449\" ns=\"828\" title=\"Module:pt-noun\"><revisions><rev user=\"Rua\" timestamp=\"2018-09-09T13:02:36Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">-- FIXME: Needs to be converted to use the standard [[Module:headword]] module\n\nlocal m_headword = require(\"Module:headword\")\nlocal m_gen = {\n\tcodes = {\n\t\t[\"?\"] = {type\
      \ = \"other\", display = '&lt;abbr title=\"gender incomplete\"&gt;?&lt;/abbr&gt;'},\n\t\t[\"m\"] = {type = \"gender\", display = '&lt;abbr title=\"masculine gender\"&gt;m&lt;/abbr&gt;'},\n\t\t[\"f\"] = {type = \"gender\", display = '&lt;abbr title=\"feminine\
      \ gender\"&gt;f&lt;/abbr&gt;'},\n\t\t[\"p\"] = {type = \"number\", display = '&lt;abbr title=\"plural number\"&gt;pl&lt;/abbr&gt;'},\n\t}\n}\n\nfunction m_gen.format_list(list)\n\tlocal s = \"\"\n\tif not list then\n\t\treturn s\n\tend\n\tlist = mw.text.split(list[1],\
      \ \"-\")\n\t\n\tfor n, g in ipairs(list) do\n\t\tif (n &gt; 1) then\n\t\t\ts = s .. \" \"\n\t\tend\n\t\ts = s .. m_gen.codes[g].display\n\t\t\n\tend\n\ts = \"&lt;span class=\\\"gender\\\"&gt;\" .. s .. \"&lt;/span&gt;\"\n\treturn s\nend\nlocal m_plural\
      \ = require(\"Module:pt-plural\")\nlocal lang = require(\"Module:languages\").getByCode(\"pt\")\n\n\nlocal export = {}\nlocal cats = {}\nlocal PAGENAME, NAMESPACE\n\n\n\nfunction export.show(frame)\n    \tlocal params = {\n\t\t[1] = {},\n\t\t[2] = {},\n\
      \t\t\n\t\t[\"f\"] = {},\n\t\t[\"f2\"] = {},\n\t\t[\"fpl\"] = {},\n\t\t[\"fpl2\"] = {},\n\t\t[\"g2\"] = {},\n\t\t[\"head\"] = {},\n\t\t[\"meta\"] = {type = \"boolean\"},\n\t\t[\"pl\"] = {alias_of = 2},\n\t\t[\"pl2\"] = {},\n\t\t[\"pl3\"] = {},\n\t\t[\"\
      qual_f\"] = {},\n\t\t[\"qual_f2\"] = {},\n\t\t[\"qual_g1\"] = {},\n\t\t[\"qual_g2\"] = {},\n\t\t[\"qual_pl\"] = {},\n\t\t[\"qual_pl2\"] = {},\n\t\t[\"qual_pl3\"] = {},\n\t\t[\"unc\"] = {type = \"boolean\"},\n\t}\n\t\n    local args, unrecognized_args =\n\
      \    \trequire(\"Module:parameters\").process(frame:getParent().args, params, true)\n    \n    if next(unrecognized_args) then\n    \trequire(\"Module:debug\").track_unrecognized_args(unrecognized_args, \"pt-noun\")\n    end\n    \n    PAGENAME = mw.title.getCurrentTitle().text\n\
      \    NAMESPACE = mw.title.getCurrentTitle().nsText\n\n    -- for compatibility with old pt-noun\n    if (args[2] == \"s\") then args[2] = PAGENAME .. \"s\"\n    elseif (args[2] == \"es\") then args[2] = PAGENAME .. \"es\" end\n\n    local is_plural = get_is_plural(args[1],\
      \ args[\"g2\"])\n\t\n    local items = {}\n    table.insert(items, get_countability(args, is_plural))\n    table.insert(items, get_lemma_plurals(args, is_plural))\n    table.insert(items, get_feminine(args[\"f\"], args[\"qual_f\"], is_plural))\n    table.insert(items,\
      \ get_feminine_plural(args[\"f\"], args[\"fpl\"], args[\"qual_fpl\"], args[2] == \"-\", is_plural))\n    table.insert(items, get_feminine(args[\"f2\"], args[\"qual_f2\"], is_plural))\n    table.insert(items, get_feminine_plural(args[\"f2\"], args[\"fpl2\"\
      ], args[\"qual_fpl2\"], args[2] == \"-\", is_plural))\n    \n    if args[\"meta\"] then\n    \ttable.insert(cats, \"nouns with metaphonic plurals\")\n    end\n\t\n    return\n        get_headword(args[\"head\"]) ..\n        get_genders(args[1], args[\"\
      g2\"], args[\"qual_g1\"], args[\"qual_g2\"]) ..\n        get_inflection(items) ..\n        get_categories()\nend\n\n\n\n\n\n\n-- Returns the headword. If the pagename contains spaces or hyphens, its\n-- constituents are wikified.\nfunction get_headword(head)\n\
      \    if (head == nil) then\n        head = PAGENAME\n        local has_head_links = false\n\n        if head:find(\" \", nil, false) then\n            head = mw.text.split(head, \" \", true)\n            head = table.concat(head, \"]] [[\")\n         \
      \   has_head_links = true\n        end\n\n        if (head:find(\"-\", nil, false)) then\n            head = mw.text.split(head, \"-\", true)\n            head = table.concat(head, \"]]-[[\")\n            has_head_links = true\n        end\n\n        if\
      \ (has_head_links == true) then\n            head = \"[[\" .. head .. \"]]\"\n        end\n    end\n\treturn m_headword.full_headword({lang = lang, pos_category = \"nouns\", heads = {head}, categories = {}})\nend\n\n\n\n\n-- Returns the text containing\
      \ the gender information.\n-- If no gender is provided, or if the gender is '?', the entry is added to \n--     [[Category:Portuguese nouns lacking gender]] and a request is returned.\n-- If two genders are provided, the entry is added to [[Category:Portuguese\n\
      --     nouns with varying gender]].\n-- If two genders are provided, but there are no qualifier for either, the\n--     string (in variation) is added after the second, per [[WT:T:APT]].\nfunction get_genders(g1, g2, g1q, g2q)\n\n    if (g1 == \"\" or\
      \ g1 == \"?\" or g1 == nil) then\n        table.insert(cats, \"terms with incomplete gender\")\n        return \" \" .. please_add(\"gender\")\n    end\n    \n    if (g1 == \"morf\") then\n        g1 = \"m\"\n        g2 = \"f\"\n    elseif (g1 == \"mf\"\
      ) then\n        g1 = \"m-f\"\n    end\n\n    if (g2 == \"mf\") then\n        g2 = \"m-f\"\n    end\n\t\n\t\n\tlocal text = \" \"\n    if (g1 == \"m-f\") then\n    \ttext = text .. m_gen.format_list({\"m\"}) .. \", \" .. m_gen.format_list({\"f\"})\n   \
      \ else\n    \ttext = text .. m_gen.format_list({g1})\n    end\n    \n    text = text .. qualifier(g1q)\n    if (g2 ~= \"\" and g2 ~= nil) then\n        text = text .. \" or \" .. m_gen.format_list({g2}) .. qualifier(g2q)\n        table.insert(cats, \"\
      nouns with varying gender\")\n        if (g2q == nil and g1q == nil) then\n            text = text .. qualifier(\"in variation\")\n        end\n    end\n\n    return text\nend\n\n\n-- Returns a boolean indicating whether the noun is plural only.\n-- If\
      \ true, it also adds the entry to [[Category:Portuguese pluralia tantum]].\nfunction get_is_plural(g1, g2)\n    g1 = g1 or \"\"\n    g2 = g2 or \"\"\n    if (mw.ustring.find(g1, \"p\") ~= nil or mw.ustring.find(g2, \"p\") ~= nil) then\n        table.insert(cats,\
      \ \"pluralia tantum\")\n        return true\n    end\n    return false\nend\n\n\n-- Returns text indicating a special status with regards to countability. These\n-- are plural only, uncountable and usually uncountable.\nfunction get_countability(args,\
      \ is_plural)\n    if (is_plural == true) then return \"''plural only''\" end\n    if (args[2] == \"-\")  then return \"''uncountable''\" end\n    if (args[\"unc\"] ~= nil)  then return \"''usually uncountable''\" end\n    return nil\nend\n\n\n-- Returns\
      \ the text with the description, link and qualifier of a plural \n-- (i.e. \"feminine plural of [[example]] (qualifier)\"). If the plural is not\n-- present as a parameter, [[Module:pt-plural]] is used to automatically figure\n-- it out from the lemma.\
      \ If that is impossible, a request is returned and the\n-- entry is added to [[Category:Portuguese nouns needing inflection]].\nfunction get_primary_plural(lemma, pl, description, class, qualifier)\n\tlocal category = \"\"\n\tlocal generated_plural = m_plural.get_plural(lemma)\n\
      \t\n\tif (pl == \"\" or pl == nil) then\n\t\tpl = generated_plural\n\telseif pl ~= generated_plural then\n\t\tcategory = require(\"Module:utilities\").format_categories({lang:getCanonicalName() .. \" irregular nouns\"})\n\tend\n\t\n\tif (pl == \"\" or\
      \ pl == nil) then\n\t\ttable.insert(cats, \"nouns needing inflection\")\n\t\treturn please_add(description)\n\tend\n\t\n\treturn merge(description, class, pl, qualifier) .. category\nend\n\n\n-- Returns the text with the desciption (always \"or\"), link\
      \ and qualifier of an\n-- alternative plural. If none is provided, nil is returned.\nfunction get_secondary_plural(pl, class, qualifier)\n    if (pl ~= nil and pl ~= \"\") then\n        return merge(\" or\", class, pl, qualifier)\n    end\n    return \"\
      \"\nend\n\n-- Puts together the text of the lemma's primary and two secondary plurals.\nfunction get_lemma_plurals(args, is_plural)\n    if (is_plural == true) then\n        return nil\n    end\n    \n    local class = {form = \"p\"}\n    local pl = args[2];\n\
      \   \n    if (pl == nil or pl == \"\") then\n        pl = args[\"pl\"]\n    end\n\n    if (pl == \"?\") then\n        table.insert(cats, \"nouns needing inflection\")\n        return please_add(\"plural\")\n    elseif (pl ~= \"-\") then\n        local\
      \ text = get_primary_plural(PAGENAME, pl, \"plural\", class, args[\"qual_pl\"])\n        text = text .. get_secondary_plural(args[\"pl2\"], class, args[\"qual_pl2\"])\n        text = text .. get_secondary_plural(args[\"pl3\"], class, args[\"qual_pl3\"\
      ])\n        return text\n    end\n    return nil\nend\n\n\nfunction get_feminine(f, qualifier, is_plural)\n    if (f == \"\" or f == nil) then\n        return nil\n    end\n    \n    return merge(\"feminine\", {form = \"f\"}, f, qualifier)\nend\n\n\nfunction\
      \ get_feminine_plural(f, fpl, qualifier, is_unc, is_plural)\n    if (is_plural == true or is_unc == true or f == nil or f == \"\") then\n        return nil\n    end\n    return get_primary_plural(f, fpl, \"feminine plural\", {form = \"f|p\"}, qualifier)\n\
      end\n\n\n-- Returns the parenthetical part of the headword line (plurals and feminines).\nfunction get_inflection(items)\n    if (table.getn(items) == 0) then return \"\" end\n    local text = \" (\"\n    for c = 1, table.getn(items) do\n        if (c\
      \ &gt; 1) then text = text .. \", \" end\n        text = text .. items[c]\n    end\n    return text .. \")\"\nend\n\n\n-- Returns the text containing the categories that the entry will be added to.\nfunction get_categories()\n    if (NAMESPACE ~= \"\"\
      ) then\n        return \"\"\n    end\n    local text = \"\"\n    for c = 1, table.getn(cats) do\n        text = text .. \"[[Category:Portuguese \" .. cats[c] .. \"]]\"\n    end\n    return text;\nend\n\n\n\n\n\n\n\n-- Nerges the form description (e.g.\
      \ “plural”, “feminine”), word, its class\n-- (e.g. “plural-form-of gender-mpl”) and qualifier if any.\n-- FIXME: Needs better parameter names.\nfunction merge(f, c, w, q)\n    if (w == nil or w == \"\") then return \"\" end\n    text = \"\"\n    text =\
      \ text .. \"''\" .. f .. \"'' \"\n    text = text .. make_link(w, c)\n    if (q ~= nil and q ~= \"\") then text = text .. qualifier(q) end\n    return text\nend\n\n\n\n\n-- Returns a piece of text boldened and wikified (unless it is the same as the\n--\
      \ pagename).\nfunction make_link(text, accel)\n\treturn require(\"Module:links\").full_link({lang = lang, accel = accel, term = text}, \"bold\")\nend\n\n\n-- Returns a text with a request for lacking information.\nfunction please_add(text)\n    --table.insert(cats,\
      \ \"terms needing attention\")\n    return \"&lt;sup&gt;&lt;small&gt;&lt;span style='color:#AAAAAA;'&gt;please add \" .. text .. \"&lt;/span&gt;&lt;/small&gt;&lt;/sup&gt;\"\nend\n\nfunction qualifier(text)\n    if (text == nil or text == \"\") then return\
      \ \"\" end\n    return '&amp;nbsp;&lt;span class=\"ib-brac\"&gt;&lt;span class=\"qualifier-brac\"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class=\"ib-content\"&gt;&lt;span class=\"qualifier-content\"&gt;' .. text ..\n'&lt;/span&gt;&lt;/span&gt;&lt;span class=\"\
      ib-brac\"&gt;&lt;span class=\"qualifier-brac\"&gt;)&lt;/span&gt;&lt;/span&gt;'\nend\n\n\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:06.290Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Apt-plural&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48832 t=1555362546193667
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:06 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1347.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 585120921, 571901637, 693947990
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4002729\" pageid=\"4002729\" ns=\"828\" title=\"Module:pt-plural\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-01-29T23:45:40Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"declare functions as local so they don&#039;t bleed into other modules\" xml:space=\"preserve\">-- Gets the plural of Portuguese nouns and adjectives.\n \nlocal accented_letters = {'á\
      ', 'é', 'í', 'ó', 'ú', 'â', 'ê', 'ô'}\nlocal remove_accent = {['á']='a', ['é']='e', ['í']='i', ['ó']='o', ['ú']='u', ['â']='a', ['ê']='e', ['ô']='o'}\nlocal vowels = {'a', 'e', 'i', 'o', 'u', 'ã', 'á', 'é', 'í', 'ó', 'ê', 'ô', 'ú'}\nlocal export = {}\n\
      \n-- forward declaration\nlocal prefix, suffix, is_accented, is_vowel, has_space_or_hyphen, word_has_letter\n \nfunction export.show(frame)\n    local args = frame:getParent().args\n    return export.get_plural(args[1])\nend\n\n-- Returns a singular’s\
      \ plural if it can be safely guessed, and an empty string\n-- otherwise.\nfunction export.get_plural(lemma)\n\t\n\tif (has_space_or_hyphen(lemma)) then return nil end\n\t\t\n\tlocal suf3 = suffix(lemma, 3);\n\tlocal pre3 = prefix(lemma, 3);\n\tlocal suf2\
      \ = suffix(lemma, 2);\n\tlocal pre2 = prefix(lemma, 2);\n\t\n\tif (suf3 == \"ção\" or suf3 == \"são\") then\n\t\treturn pre2 .. \"ões\"\n\tend\n\t\n\tif (suf3 == \"çaõ\") then\n\t\treturn pre3 .. \"çoens\"\n\tend\n\n\t\n\tif (suf2 == \"ão\") then return\
      \ nil end\n\t\n\tif (suf2 == \"il\") then\n\t\tif (is_accented(pre2)) then\n\t\t\treturn pre2 .. \"eis\"\n\t\telse \n\t\t\treturn pre2 .. \"is\"\n\t\tend\n\tend\n\t\n\tif (suf2 == \"el\") then \n\t\tif (is_accented(pre2)) then \n\t\t\treturn pre2 .. \"\
      eis\"\n\t\telse\n\t\t\treturn pre2 .. \"éis\"\n\t\tend\n\tend\n\t\n\tif (suf2 == \"ol\") then \n\t\tif (is_accented(pre2)) then \n\t\t\treturn pre2 .. \"ois\"\n\t\telse\n\t\t\treturn pre2 .. \"óis\"\n\t\tend\n\tend\n\n\tlocal suf1 = suffix(lemma, 1);\n\
      \tlocal pre1 = prefix(lemma, 1);\n\t\n\tif (suf1 == \"l\") then return pre1 .. \"is\" end\n\t\n\tif (suf1 == \"m\") then return pre1 .. \"ns\" end\n\t\n\tif (suf1 == \"r\" or suf1 == \"z\") then return lemma .. \"es\" end\n\t\n\tif (is_vowel(suf1)) then\
      \ return lemma .. \"s\" end\n\t\n\tif (suf1 == \"s\") then \n\t\tlocal penult = mw.ustring.sub(suf2, 1, 1)\n\t\tif (is_accented(penult)) then\n\t\t\treturn pre2 .. remove_accent[penult] .. \"ses\"\n\t\telse\n\t\t\tlocal antepenult = mw.ustring.sub(suf3,\
      \ 1, 1)\n\t\t\tif ((penult == \"u\" or penult == \"i\") and not is_accented(pre1) and not is_vowel(antepenult)) then\n\t\t\t\treturn lemma .. \"es\"\n\t\t\telse\n\t\t\t\treturn lemma\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn nil\n\t\nend\n\n\nfunction suffix(word,\
      \ length)\n\treturn mw.ustring.sub(word, mw.ustring.len(word) - length + 1)\nend\n\n\nfunction prefix(word, suf_length)\n\treturn mw.ustring.sub(word, 1, mw.ustring.len(word) - suf_length)\nend\n\n-- returns whether it has ´ or ^\nfunction is_accented(word)\n\
      \treturn word_has_letter(word, accented_letters)\nend\n\nfunction is_vowel(letter)\n\treturn word_has_letter(letter, vowels)\nend\n\nfunction has_space_or_hyphen(word)\n\treturn mw.ustring.find(word, \" \") or mw.ustring.find(word, \"-\")\nend\n\nfunction\
      \ word_has_letter(word, array)\n\tfor c = 1, table.getn(array) do\n\t\tif (mw.ustring.find(word, array[c])) then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\n \nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:06.467Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Al&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38415 t=1555362546383652
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:06 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1235.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 203117594, 571835963, 693295130
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4580518" pageid="4580518" ns="10" title="Template:l"><revisions><rev user="Rua" timestamp="2014-10-30T23:36:59Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="CodeCat moved page [[Template:l]] to [[Template:link]] over redirect" xml:space="preserve">#REDIRECT [[Template:link]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:09:06.645Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alink&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55095 t=1555362546545529
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:06 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 595481980, 737093435, 695452133
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="784216" pageid="784216" ns="10" title="Template:link"><revisions><rev user="Dixtosa" timestamp="2016-11-05T20:05:15Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="undo myslef. moving template data to documentation page to see if that works too" xml:space="preserve">{{#invoke:links/templates|l_term_t&lt;noinclude&gt;|demo=term&lt;/noinclude&gt;}}&lt;!--

      --&gt;{{#ifeq:{{PAGENAME}}|RecentChanges||&lt;!--
          --&gt;{{#ifeq:{{{1|}}}|und|[[Category:Undetermined language links]]}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;{{redlink category|{{{1|}}}|{{{2|}}}|template=l}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:09:06.840Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54420 t=1555362546733233
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:06 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1344.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 406485848, 562966680, 701241781
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4282542\" pageid=\"4282542\" ns=\"828\" title=\"Module:links/templates\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T18:56:49Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\tModules used:\n\t[[Module:links]]\n\t[[Module:languages]]\n\t[[Module:scripts]]\n\t[[Module:parameters]]\n\t[[Module:debug]]\n]=]\n\
      \n-- Used in [[Template:l]] and [[Template:m]].\nfunction export.l_term_t(frame)\n\tlocal face = frame.args[\"face\"]\n\tlocal allowSelfLink = frame.args[\"notself\"]; allowSelfLink = not allowSelfLink or allowSelfLink == \"\"\n\t\n\tlocal params = {\n\
      \t\t[1] = {required = true},\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"gloss\"},\n\t\t[\"accel-form\"] = {},\n\t\t[\"accel-nostore\"] = {type = \"boolean\"},\n\t\t[\"accel-translit\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] =\
      \ {},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {alias_of = \"gloss\"},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t}\n\t\n\t-- Compatibility mode for {{term}}.\n\t-- If given a nonempty value, the\
      \ function uses lang= to specify the\n\t-- language, and all the positional parameters shift one number lower.\n\tlocal compat = (frame.args[\"compat\"] or \"\") ~= \"\"\n\t\n\tif compat then\n\t\tparams[\"lang\"] = {},\n\t\ttable.remove(params, 1)\n\t\
      end\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = args[compat and \"lang\" or 1]\n\t\n\t-- Tracking for missing language or und\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"\
      link/no lang\")\n\telseif lang == \"und\" then\n\t\trequire(\"Module:debug\").track(\"link/und\")\n\tend\n\t\n\tlang = lang or \"und\"\n\tlocal sc = args[\"sc\"]\n\t\n\tlocal term = args[(compat and 1 or 2)]\n\tlocal alt = args[(compat and 2 or 3)]\n\t\
      \n\t-- Check parameters\n\tlang = require(\"Module:languages\").getByCode(lang) or\n\t\trequire(\"Module:languages\").err(lang, 1)\n\t\n\tif sc then\n\t\tsc = require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is\
      \ not valid.\")\n\tend\n\t\n\tif not term and not alt and frame.args[\"demo\"] then\n\t\tterm = frame.args[\"demo\"]\n\tend\n\t\n\t-- Forward the information to full_link\n\treturn require(\"Module:links\").full_link( \n\t\t{\n\t\t\tlang = lang, \n\t\t\
      \tsc = sc, \n\t\t\tterm = term,\n\t\t\talt = alt, \n\t\t\tid = args[\"id\"], \n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgenders = args[\"g\"], \n\t\t\tgloss = args[\"gloss\"], \n\t\t\tpos = args[\"pos\"], \n\t\t\tlit = args[\"lit\"],\n\
      \t\t\taccel = args[\"accel-form\"] and {\n\t\t\t\tform = args[\"accel-form\"],\n\t\t\t\tnostore = args[\"accel-nostore\"],\n\t\t\t\ttranslit = args[\"accel-translit\"],\n\t\t\t} or nil,\n\t\t},\n\t\tface,\n\t\tallowSelfLink\n\t)\nend\n\n-- Used in [[Template:ll]].\n\
      function export.ll(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2] = { allow_empty = true },\n\t\t[3] = {},\n\t\t[\"notself\"] = { type = \"boolean\", default = false },\n\t\t[\"id\"] = {},\n\t}\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\tlocal allowSelfLink = not args[\"notself\"]\n\t\n\tlocal lang = args[1]\n\tlang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, 1)\n\t\n\tlocal text = args[2]\n\tlocal\
      \ alt = args[3]\n\tif text == \"\" then\n\t\treturn alt or \"\"\n\tend\n\t\n\tlocal id = args[\"id\"]\n\t\n\treturn require(\"Module:links\").language_link(\n\t\t{\n\t\t\tterm = text,\n\t\t\talt = alt,\n\t\t\tlang = lang,\n\t\t\tid = id\n\t\t},\n\t\tallowSelfLink\n\
      \t)\nend\n\nfunction export.def_t(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn require(\"Module:links\").english_links(args[1])\n\
      end\n\n\nfunction export.linkify_t(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\targs[1] = mw.text.trim(args[1])\n\t\n\tif\
      \ args[1] == \"\" or args[1]:find(\"[[\", nil, true) then\n\t\treturn args[1]\n\telse\n\t\treturn \"[[\" .. args[1] .. \"]]\"\n\tend\nend\n\nfunction export.section_link_t(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\t\n\treturn require(\"Module:links\").section_link(args[1])\nend\n\nfunction export.language_name_link_t(frame)\n\tlocal face = frame.args[\"face\"]\n\tlocal allowSelfLink = frame.args[\"notself\"]; allowSelfLink\
      \ = not allowSelfLink or allowSelfLink == \"\"\n\t\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"gloss\"},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"\
      ] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {alias_of = \"gloss\"},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"w\"] = { type = \"boolean\", default = false },\n\t}\n\t\n\t-- Compatibility mode for {{term}}.\n\t-- If given a nonempty\
      \ value, the function uses lang= to specify the\n\t-- language, and all the positional parameters shift one number lower.\n\tlocal compat = (frame.args[\"compat\"] or \"\") ~= \"\"\n\t\n\tif compat then\n\t\tparams[\"lang\"] = {},\n\t\ttable.remove(params,\
      \ 1)\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = args[compat and \"lang\" or 1]\n\t\n\t-- Tracking for missing language or und\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"\
      link/no lang\")\n\telseif lang == \"und\" then\n\t\trequire(\"Module:debug\").track(\"link/und\")\n\tend\n\t\n\tlang = lang or \"und\"\n\tlocal sc = args[\"sc\"]\n\t\n\tlocal term = args[(compat and 1 or 2)]\n\tlocal alt = args[(compat and 2 or 3)]\n\t\
      \n\t-- Check parameters\n\tlang = require(\"Module:languages\").getByCode(lang) or\n\t\trequire(\"Module:languages\").err(lang, 1)\n\tif sc then\n\t\tsc = require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not\
      \ valid.\")\n\tend\n\t\n\tif not term and not alt and frame.args[\"demo\"] then\n\t\tterm = frame.args[\"demo\"]\n\tend\n\t\n\t--[[\n\t\tAdd a language name, linked to Wikipedia if the Wikipedia parameter is set to true.\n\t\tForward the information to\
      \ full_link.\n\t]]\n\tlocal language_name = args.w and lang:makeWikipediaLink() or lang:getCanonicalName()\n\t\n\tif term == \"-\" then\n\t\treturn language_name\n\telse\n\t\treturn language_name .. \" \" ..\n\t\t\trequire(\"Module:links\").full_link(\
      \ \n\t\t\t\t{\n\t\t\t\t\tlang = lang, \n\t\t\t\t\tsc = sc, \n\t\t\t\t\tterm = term, \n\t\t\t\t\talt = alt, \n\t\t\t\t\tid = args[\"id\"], \n\t\t\t\t\ttr = args[\"tr\"], \n\t\t\t\t\tts = args[\"ts\"], \n\t\t\t\t\tgenders = args[\"g\"], \n\t\t\t\t\tgloss\
      \ = args[\"gloss\"], \n\t\t\t\t\tpos = args[\"pos\"], \n\t\t\t\t\tlit = args[\"lit\"]\n\t\t\t\t},\n\t\t\t\tface,\n\t\t\t\tallowSelfLink\n\t\t\t)\n\tend\nend\n\nfunction export.light_link_t(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t\
      [2] = { required = true },\n\t\t[3] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"langname\"] = { required = true },\n\t}\n\t\n\tlocal args = frame:getParent().args\n\t\n\tfor key, value in pairs (params) do\n\t\tif value.required then\n\t\t\tif not args[key] then\n\
      \t\t\t\terror('Parameter \"' .. key .. '\" is required.')\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn require(\"Module:links\").light_link{  \n\t\tlangCode = args[1], \n\t\tterm = args[2], \n\t\talt = args[3], \n\t\tscCode = args.sc or \"Latn\",  \n\t\tlangName\
      \ = args.langname\n\t}\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:07.022Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aredlink+category&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44585 t=1555362546931689
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:07 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 663910327, 498973201, 690479747
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5379564" pageid="5379564" ns="10" title="Template:redlink category"><revisions><rev user="Mnemosientje" timestamp="2019-03-07T14:12:31Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">&lt;!--
      This is a list of entries that won't be checked for redlinks. Usually, they are large entries, where redlink checking can cause module errors.
      --&gt;{{#switch:{{PAGENAME}}|-ere|a|and|animal|book|box|do|dog|fish|heart|e|gold|green|I|iron|language|light|man|me|mies|mouth|one|salt|smoke|sun|te|tea|water|wind|一|人|母|女|水|目|Spanish diminutives of given names|Common Russian verbs|Ancient Greek Swadesh list|Frequency dictionary of the modern Russian language (the Russian National Corpus)/1|Frequency dictionary of the modern Russian language (the Russian National Corpus)/8|=|&lt;!--

      The last five refer to Appendix:Spanish diminutives of given names, Appendix:Common Russian verbs, Appendix:Frequency dictionary of the modern Russian language (the Russian National Corpus)/1, Appendix:Frequency dictionary of the modern Russian language (the Russian National Corpus)/8; the namespace has been stripped.

          --&gt;{{#switch:{{NAMESPACE}}||Reconstruction|Appendix=&lt;!--

              This is the list of languages with redlink checking enabled.
              --&gt;{{#switch:{{{1}}}|afa-pro|ang|cel-pro|egy|es|fi|gem-pro|gml|got|grc|iir-pro|ine-pro|it|itc-pro|map-pro|non|poz-pro|poz-pol-pro|pt|ru|sem-pro|sit-pro|sla-pro|te|zh|cmn|yue|nan|hak=&lt;!-- testing
                  --&gt;{{#ifeq:{{isValidPageName|{{{2|}}}}}|valid|&lt;!--
                      --&gt;{{#invoke:redlink category|cat|{{{1}}}|{{{2}}}|template={{{template|-}}}}}&lt;!--
                  --&gt;}}&lt;!--
              --&gt;}}&lt;!--
          --&gt;}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:09:07.185Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Apedia&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38921 t=1555362547101177
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:07 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1234.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 428905460, 491502458, 705070828
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="600622" pageid="600622" ns="10" title="Template:pedia"><revisions><rev user="Rua" timestamp="2014-08-11T23:47:22Z" contentformat="text/x-wiki" contentmodel="wikitext"
      comment="Protected &quot;[[Template:pedia]]&quot;: Counter-productive edit warring: Nothing is broken ([Edit=Allow only administrators] (expires 23:47, 18 August 2014 (UTC)) [Move=Allow only administrators] (expires 23:47, 18 August 2014 (UTC)))" xml:space="preserve">#redirect
      [[Template:projectlink/Wikipedia]]</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:09:07.347Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aprojectlink%2FWikipedia&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=39727 t=1555362547263004
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:07 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 746181592, 496940836, 695519939
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="71571" pageid="71571" ns="10" title="Template:projectlink/Wikipedia"><revisions><rev user="Erutuon" timestamp="2018-02-06T05:17:30Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="documentation template" xml:space="preserve">{{#invoke:wikipedia|projectlink|prefix=w|name=Wikipedia|image=Wikipedia-logo.svg}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:09:07.541Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Awikipedia&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54474 t=1555362547435153
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:07 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1282.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 424127100, 263425666, 706085022
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5872615\" pageid=\"5872615\" ns=\"828\" title=\"Module:wikipedia\"><revisions><rev user=\"Julia\" timestamp=\"2018-12-08T23:00:16Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"make slim version same length as other interwiki links\" xml:space=\"preserve\">local export = {}\n\n\nlocal function process_links(linkdata, prefix, name, wmlang, sc)\n\tprefix = prefix .. \":\" .. (wmlang:getCode()\
      \ == \"en\" and \"\" or wmlang:getCode() .. \":\")\n\t\n\tlocal links = {}\n\tlocal iplinks = {}\n\t\n\tlocal m_links = require(\"Module:links\")\n\tlocal lang = wmlang:getWiktionaryLanguage()\n\tlocal ipalt = name .. \" \" .. (wmlang:getCode() == \"en\"\
      \ and \"\" or \"&lt;sup&gt;\" .. wmlang:getCode() .. \"&lt;/sup&gt;\")\n\t\n\tfor i, link in ipairs(linkdata) do\n\t\tlink.lang = lang\n\t\tlink.sc = sc\n\t\tlink.term = prefix .. link.term\n\t\tlink.tr = \"-\"\n\t\ttable.insert(iplinks, \"&lt;span class=\\\
      \"interProject\\\"&gt;[[\" .. link.term .. \"|\" .. ipalt .. \"]]&lt;/span&gt;\")\n\t\ttable.insert(links, m_links.full_link(link, \"bold\"))\n\tend\n\t\n\treturn links, iplinks\nend\n\n\nfunction export.wikipedia_box(frame)\n\tlocal params = {\n\t\t[1]\
      \ = {},\n\t\t[2] = {},\n\t\t\n\t\t[\"cat\"] = {},\n\t\t[\"category\"] = {alias_of = \"cat\"},\n\t\t[\"dab\"] = {},\n\t\t[\"disambiguation\"] = {alias_of = \"dab\"},\n\t\t[\"i\"] = {type = \"boolean\"},\n\t\t[\"lang\"] = {default = \"en\"},\n\t\t[\"mul\"\
      ] = {},\n\t\t[\"mullabel\"] = {},\n\t\t[\"mulcat\"] = {},\n\t\t[\"mulcatlabel\"] = {},\n\t\t[\"portal\"] = {},\n\t\t[\"sc\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal wmlang = require(\"\
      Module:wikimedia languages\").getByCodeWithFallback(args[\"lang\"]) or error(\"The Wikimedia language code \\\"\" .. args[\"lang\"] .. \"\\\" is not valid.\")\n\tlocal sc = args[\"sc\"] and (require(\"Module:scripts\").getByCode(args[\"sc\"]) or error(\"\
      The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil\n\t\n\tlocal linkdata = {}\n\t\n\tif args[\"cat\"] then\n\t\ttable.insert(linkdata, {term = \"Category:\" .. args[\"cat\"], alt = args[1] or args[\"cat\"]})\n\telseif args[\"portal\"] then\n\
      \t\ttable.insert(linkdata, {term = \"Portal:\" .. args[\"portal\"], alt = args[1] or args[\"portal\"]})\n\telse\n\t\ttable.insert(linkdata, {term = args[\"dab\"] or args[1] or mw.title.getCurrentTitle().text, alt = args[2] or args[1] or args[\"dab\"] or\
      \ mw.title.getCurrentTitle().text})\n\tend\n\t\n\tif args[\"mul\"] or args[\"mulcat\"] then\n\t\tif args[\"mulcat\"] then\n\t\t\ttable.insert(linkdata, {term = \"Category:\" .. args[\"mulcat\"], alt = args[\"mulcatlabel\"] or args[\"mulcat\"]})\n\t\telse\n\
      \t\t\ttable.insert(linkdata, {term = args[\"mul\"], alt = args[\"mullabel\"] or args[\"mul\"]})\n\t\tend\n\tend\n\t\n\tlocal links, iplinks = process_links(linkdata, \"w\", \"Wikipedia\", wmlang, sc)\n\t\n\tif frame.args[\"slim\"] then\n\t\treturn\n\t\t\
      \t\"&lt;div class=\\\"sister-wikipedia sister-project noprint floatright\\\" style=\\\"border: solid #aaa 1px; font-size: 90%; background: #f9f9f9; width: 250px; padding: 4px; text-align: left;\\\"&gt;\" ..\n\t\t\t\"&lt;div style=\\\"float: left;\\\"&gt;[[File:Wikipedia-logo.png|14px|none|\
      \ ]]&lt;/div&gt;\" ..\n\t\t\t\"&lt;div style=\\\"margin-left: 15px;\\\"&gt;\" ..\n\t\t\t\" &amp;nbsp;\" ..\n\t\t\ttable.concat(links, \" and \") ..\n\t\t\t\" on \" ..\n\t\t\t(wmlang:getCode() == \"en\" and \"\" or wmlang:getCanonicalName() .. \"&amp;nbsp;\"\
      ) ..\n\t\t\t\"Wikipedia\" ..\n\t\t\t\"&lt;/div&gt;\" ..\n\t\t\t\"&lt;/div&gt;\"\n\telse\n\t\tlocal linktype\n\t\t\n\t\tif args[\"cat\"] then\n\t\t\tlinktype = \"a category\"\n\t\telseif args[\"mul\"] or args[\"dab\"] then\n\t\t\tlinktype = \"articles\"\
      \n\t\telseif args[\"mulcat\"] then\n\t\t\tlinktype = \"categories\"\n\t\telseif args[\"portal\"] then\n\t\t\tlinktype = \"a portal\"\n\t\telse\n\t\t\tlinktype = \"an article\"\n\t\tend\n\t\t\n\t\treturn\n\t\t\t\"&lt;div class=\\\"sister-wikipedia sister-project\
      \ noprint floatright\\\" style=\\\"border: 1px solid #aaa; font-size: 90%; background: #f9f9f9; width: 250px; padding: 4px; text-align: left;\\\"&gt;\" ..\n\t\t\t\"&lt;div style=\\\"float: left;\\\"&gt;[[File:Wikipedia-logo.png|44px|none|link=|alt=]]&lt;/div&gt;\"\
      \ ..\n\t\t\t\"&lt;div style=\\\"margin-left: 60px;\\\"&gt;\" ..\n\t\t\twmlang:getCanonicalName() .. \" [[Wikipedia]] has \" .. linktype .. \" on:\" ..\n\t\t\t\"&lt;div style=\\\"margin-left: 10px;\\\"&gt;\" .. table.concat(links, \" and \") .. \"&lt;/div&gt;\"\
      \ ..\n\t\t\t\"&lt;/div&gt;\" ..\n\t\t\ttable.concat(iplinks) .. ((args[1] == mw.title.getCurrentTitle().text and not (args[2] or args[\"dab\"])) and \"[[Category:wikipedia with redundant first parameter]]\" or \"\") ..\n\t\t\t\"&lt;/div&gt;\"\n\tend\n\
      end\n\n\nfunction export.projectlink(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t\t[2] = {},\n\t\t\n\t\t[\"dab\"] = {},\n\t\t[\"i\"] = {type = \"boolean\"},\n\t\t[\"lang\"] = {default = \"en\"},\n\t\t[\"nodot\"] = {},\n\t\t[\"sc\"] = {},\n\t}\n\t\n\t\
      local args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal wmlang = require(\"Module:wikimedia languages\").getByCodeWithFallback(args[\"lang\"]) or error(\"The Wikimedia language code \\\"\" .. args[\"lang\"] .. \"\
      \\\" is not valid.\")\n\tlocal sc = args[\"sc\"] and (require(\"Module:scripts\").getByCode(args[\"sc\"]) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil\n\t\n\tlocal linkdata = {term = args[1] or args[\"dab\"] or mw.title.getCurrentTitle().text,\
      \ alt = args[2] or args[1] or args[\"dab\"] or mw.title.getCurrentTitle().text}\n\t\n\tif args[\"i\"] then\n\t\tlinkdata.alt = \"''\" .. linkdata.alt .. \"''\"\n\tend\n\t\n\tlocal links, iplinks = process_links({linkdata}, frame.args[\"prefix\"], frame.args[\"\
      name\"], wmlang, sc)\n\t\n\treturn\n\t\t\"[[Image:\" .. frame.args[\"image\"] .. \"|15px|link=\" .. linkdata.term .. \"]] \" ..\n\t\ttable.concat(links, \" and \") ..\n\t\t\" on \" ..\n\t\t(wmlang:getCode() == \"en\" and \"\" or \"the \" .. wmlang:getCanonicalName()\
      \ .. \" \") ..\n\t\t\" \" .. frame.args[\"name\"] .. (args[\"nodot\"] and \"\" or \".\") ..\n\t\ttable.concat(iplinks)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:07.719Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Awikimedia+languages&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47922 t=1555362547624086
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:07 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 598365129, 819683927, 694012381
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4506944\" pageid=\"4506944\" ns=\"828\" title=\"Module:wikimedia languages\"><revisions><rev user=\"Rua\" timestamp=\"2015-01-26T16:00:55Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal WikimediaLanguage = {}\n\nfunction WikimediaLanguage:getCode()\n\treturn self._code\nend\n\nfunction WikimediaLanguage:getCanonicalName()\n\
      \treturn self._rawData.canonicalName\nend\n\n--function WikimediaLanguage:getAllNames()\n--\treturn self._rawData.names\n--end\n\nfunction WikimediaLanguage:getType()\n\treturn \"Wikimedia\"\nend\n\nfunction WikimediaLanguage:getWiktionaryLanguage()\n\t\
      if not self._wiktionaryLanguageObject then\n\t\tself._wiktionaryLanguageObject = require(\"Module:languages\").getByCode(self._rawData.wiktionary_code)\n\tend\n\t\n\treturn self._wiktionaryLanguageObject\nend\n\n-- Do NOT use this method!\n-- All uses\
      \ should be pre-approved on the talk page!\nfunction WikimediaLanguage:getRawData()\n\treturn self._rawData\nend\n\nWikimediaLanguage.__index = WikimediaLanguage\n\n\nfunction export.getByCode(code)\n\t-- Only accept codes the software recognises\n\tif\
      \ not mw.language.isKnownLanguageTag(code) then\n\t\treturn nil\n\tend\n\t\n\tlocal rawData = mw.loadData(\"Module:wikimedia languages/data\")[code]\n\t\n\t-- If there is no specific Wikimedia code, then \"borrow\" the information\n\t-- from the general\
      \ Wiktionary language code\n\tif not rawData then\n\t\tlocal lang = require(\"Module:languages\").getByCode(code)\n\t\t\n\t\tif not lang then\n\t\t\treturn nil\n\t\tend\n\t\t\n\t\trawData = {canonicalName = lang:getCanonicalName(), wiktionary_code = code}\n\
      \telseif not rawData.canonicalName then\n\t\trawData = {canonicalName = require(\"Module:languages\").getByCode(rawData.wiktionary_code):getCanonicalName(), wiktionary_code = rawData.wiktionary_code}\n\tend\n\t\n\treturn setmetatable({ _rawData = rawData,\
      \ _code = code }, WikimediaLanguage)\nend\n\nfunction export.getByCodeWithFallback(code)\n\tlocal object = export.getByCode(code)\n\t\n\tif object then\n\t\treturn object\n\tend\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(code)\n\t\n\t\
      if not lang then\n\t\treturn nil\n\tend\n\t\n\treturn lang:getWikimediaLanguages()[1]\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:07.889Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Awikimedia+languages%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45242 t=1555362547798380
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:07 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 199843830, 642272763, 697285949
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4506945\" pageid=\"4506945\" ns=\"828\" title=\"Module:wikimedia languages/data\"><revisions><rev user=\"Daniel Carrero\" timestamp=\"\
      2015-11-24T03:34:30Z\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Reverted edits by [[Special:Contributions/Daniel Carrero|Daniel Carrero]]. If you think this rollback is in error, please leave a message on my talk page.\" xml:space=\"\
      preserve\">local m = {}\n\nm[\"als\"] = {\n\twiktionary_code = \"gsw\",\n}\n\nm[\"bat-smg\"] = {\n\twiktionary_code = \"sgs\",\n}\n\nm[\"bs\"] = {\n\tcanonicalName = \"Bosnian\",\n\twiktionary_code = \"sh\",\n}\n\nm[\"bxr\"] = {\n\twiktionary_code = \"\
      bua\",\n}\n\nm[\"diq\"] = {\n\twiktionary_code = \"zza\",\n}\n\nm[\"eml\"] = {\n\tcanonicalName = \"Emiliano-Romagnolo\",\n\twiktionary_code = \"egl\",\n}\n\nm[\"fiu-vro\"] = {\n\twiktionary_code = \"vro\",\n}\n\nm[\"hr\"] = {\n\tcanonicalName = \"Croatian\"\
      ,\n\twiktionary_code = \"sh\",\n}\n\nm[\"ksh\"] = {\n\twiktionary_code = \"gmw-cfr\",\n}\n\nm[\"mhr\"] = {\n\twiktionary_code = \"chm\",\n}\n\nm[\"nrm\"] = {\n\twiktionary_code = \"nrf\",\n}\n\nm[\"roa-rup\"] = {\n\twiktionary_code = \"rup\",\n}\n\nm[\"\
      roa-tara\"] = {\n\twiktionary_code = \"roa-tar\",\n}\n\nm[\"simple\"] = {\n\tcanonicalName = \"Simple English\",\n\twiktionary_code = \"en\",\n}\n\nm[\"sr\"] = {\n\tcanonicalName = \"Serbian\",\n\twiktionary_code = \"sh\",\n}\n\nm[\"zh-classical\"] = {\n\
      \twiktionary_code = \"ltc\",\n}\n\nm[\"zh-min-nan\"] = {\n\twiktionary_code = \"nan\",\n}\n\nm[\"zh-yue\"] = {\n\twiktionary_code = \"yue\",\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:08.851Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aes-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=82071 t=1555362548725240
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:08 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1283.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 601896764, 487943758, 705332619
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="2785392" pageid="2785392" ns="10" title="Template:es-noun"><revisions><rev user="DTLHS" timestamp="2018-01-29T21:41:32Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">&lt;includeonly&gt;{{#invoke:es-headword|new_noun_headword}}&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:09:09.037Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aes-headword&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=36979 t=1555362548938693
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:09 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1315.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 415975708, 651073168, 684350080
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4075154\" pageid=\"4075154\" ns=\"828\" title=\"Module:es-headword\"><revisions><rev user=\"DTLHS\" timestamp=\"2018-09-28T16:12:57Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\nlocal pos_functions = {}\n\nlocal lang = require(\"Module:languages\").getByCode(\"es\")\n\nlocal PAGENAME = mw.title.getCurrentTitle().text\n\
      \nlocal suffix_categories = {\n\t[\"adjectives\"] = true,\n\t[\"adverbs\"] = true,\n\t[\"nouns\"] = true,\n\t[\"verbs\"] = true,\n}\n\nlocal remove_stress = {\n\t[\"á\"] = \"a\", [\"é\"] = \"e\", [\"í\"] = \"i\", [\"ó\"] = \"o\", [\"ú\"] = \"u\"\n}\nlocal\
      \ add_stress = {\n\t[\"a\"] = \"á\", [\"e\"] = \"é\", [\"i\"] = \"í\", [\"o\"] = \"ó\", [\"u\"] = \"ú\"\n}\n\n-- The main entry point.\n-- This is the only function that can be invoked from a template.\nfunction export.show(frame)\n\tlocal tracking_categories\
      \ = {}\n\t\n\tlocal poscat = frame.args[1] or error(\"Part of speech has not been specified. Please pass parameter 1 to the module invocation.\")\n\t\n\tlocal params = {\n\t\t[\"head\"] = {list = true, default = \"\"},\n\t\t[\"suff\"] = {type = \"boolean\"\
      },\n\t}\n\t\n\tif pos_functions[poscat] then\n\t\tfor key, val in pairs(pos_functions[poscat].params) do\n\t\t\tparams[key] = val\n\t\tend\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\tlocal data =\
      \ {lang = lang, pos_category = poscat, categories = {}, heads = args[\"head\"], genders = {}, inflections = {}, categories = {}}\n\t\n\tif args[\"suff\"] then\n\t\tdata.pos_category = \"suffixes\"\n\t\t\n\t\tif suffix_categories[poscat] then\n\t\t\tlocal\
      \ singular_poscat = poscat:gsub(\"s$\", \"\")\n\t\t\ttable.insert(data.categories, \"Spanish \" .. singular_poscat .. \"-forming suffixes\")\n\t\telse\n\t\t\terror(\"No category exists for suffixes forming \" .. poscat .. \".\")\n\t\tend\n\tend\n\t\n\t\
      if pos_functions[poscat] then\n\t\tpos_functions[poscat].func(args, data, tracking_categories)\n\tend\n\t\n\treturn require(\"Module:headword\").full_headword(data) .. require(\"Module:utilities\").format_categories(tracking_categories, lang)\nend\n\n\n\
      function export.make_plural_noun(singular, gender)\n\t-- noun + adjective\n\tif singular:find(\" \") then\n\t\tif singular:find(\" del? .+$\") then\n\t\t\tlocal preceding, prep_phrase = singular:match(\"^(.+)( del? .+)$\")\n\t\t\t\n\t\t\tlocal preceding_pl\
      \ = export.make_plural_noun(preceding, gender)\n\t\t\treturn {[\"pl\"] = preceding_pl.pl .. prep_phrase}\n\t\telseif singular:find(\" al? .+$\") then\n\t\t\tlocal preceding, prep_phrase = singular:match(\"^(.+)( al? .+)$\")\n\n\t\t\tlocal preceding_pl\
      \ = export.make_plural_noun(preceding, gender)\n\t\t\treturn {[\"pl\"] = preceding_pl.pl .. prep_phrase}\n\t\telse\n\t\t\tlocal words = mw.text.split(singular, \" \")\n\t\t\tif #words == 2 then\n\t\t\t\tlocal noun_p = export.make_plural_noun(words[1],\
      \ gender)\n\t\t\t\tlocal adj_p = export.adjective_forms(words[2], gender)\n\t\t\t\t\n\t\t\t\tif gender == \"m\" and adj_p.mp then\n\t\t\t\t\treturn {[\"pl\"] = noun_p.pl .. \" \" .. adj_p.mp}\n\t\t\t\telseif gender == \"f\" and noun_p.pl and adj_p.fp then\n\
      \t\t\t\t\treturn {[\"pl\"] = noun_p.pl .. \" \" .. adj_p.fp}\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- ends in unstressed vowel or á, é, ó\n\tif mw.ustring.match(singular, \"[aeiouáéó]$\") then return {[\"pl\"] = singular .. \"s\"} end\n\t\n\t\
      -- ends in í or ú\n\tif mw.ustring.match(singular, \"[íú]$\") then return {[\"pl\"] = singular .. \"s\", [\"pl2\"] = singular .. \"es\"} end\n\t\n\t-- ends in a vowel + z\n\tif mw.ustring.match(singular, \"[aeiouáéíóú]z$\") then return {[\"pl\"] = mw.ustring.gsub(singular,\
      \ \"z$\", \"ces\")} end\n\t\n\t-- ends in tz\n\tif mw.ustring.match(singular, \"tz$\") then return {[\"pl\"] = singular} end\n\n\tlocal vowels = {}\n\t-- Replace qu before e or i with k so that the u isn't counted as a vowel.\n\tlocal modified_singular\
      \ = mw.ustring.gsub(singular, \"qu([ie])\", \"k%1\")\n\tfor i in mw.ustring.gmatch(modified_singular, \"[aeiouáéíóú]\") do vowels[#vowels + 1] = i end\n\t\n\t-- ends in s or x with more than 1 syllable, last syllable unstressed\n\tif vowels[2] and mw.ustring.match(singular,\
      \ \"[sx]$\")\n\tand mw.ustring.match(vowels[#vowels], \"[aeiou]\") then\n\t\treturn {[\"pl\"] = singular}\n\tend\n\t\n\t-- ends in l, r, n, d, z, or j with 3 or more syllables, accented on third to last syllable\n\tif vowels[3] and mw.ustring.match(singular,\
      \ \"[lrndzj]$\")\n\tand mw.ustring.match(vowels[#vowels-2], \"[áéíóú]\") then\n\t\treturn {[\"pl\"] = singular}\n\tend\n\t\n\t-- ends in a in a stressed vowel + consonant\n\tif mw.ustring.match(singular, \"[áéíóú][^aeiouáéíóú]$\") then\n\t\treturn {[\"\
      pl\"] = mw.ustring.sub(singular, 1, -3) .. remove_stress[vowels[#vowels]] .. mw.ustring.sub(singular, -1) .. \"es\"}\n\tend\n\t\n\t-- ends in a vowel + y, l, r, n, d, j, s, x\n\tif mw.ustring.match(singular, \"[aeiou][ylrndjsx]$\") then\n\t\t--  two or\
      \ more vowels: add stress mark to plural\n\t\tif vowels[2] and mw.ustring.match(singular, \"n$\") then\n\t\t\tlocal before_stress, after_stress = mw.ustring.match(modified_singular, \"^(.*)[aeiou]([^aeiou]*[aeiou][nl])$\")\n\t\t\tlocal stress = add_stress[vowels[#vowels\
      \ - 1]]\n\t\t\tif before_stress and stress then\n\t\t\t\treturn {[\"pl\"] = (before_stress .. stress .. after_stress .. \"es\"):gsub(\"k\", \"qu\")}\n\t\t\tend\n\t\tend\n\t\t\n\t\treturn {[\"pl\"] = singular .. \"es\"}\n\tend\n\t\n\t-- ends in a vowel\
      \ + ch\n\tif mw.ustring.match(singular, \"[aeiou]ch$\") then return {[\"pl\"] = singular .. \"es\"} end\n\t\n\t-- ends in two consonants\n\tif mw.ustring.match(singular, \"[^aeiouáéíóú][^aeiouáéíóú]$\") then return {[\"pl\"] = singular .. \"s\"} end\n\t\
      \n\t-- ends in a vowel + consonant other than l, r, n, d, z, j, s, or x\n\tif mw.ustring.match(singular, \"[aeiou][^aeioulrndzjsx]$\") then return {[\"pl\"] = singular .. \"s\"} end\n\t\n\treturn {}\n\t\nend\n\nfunction export.adjective_forms(singular,\
      \ gender)\n\tlocal last_two, last = mw.ustring.match(singular, \"(.(.))$\")\n\t\n\tif mw.ustring.match(singular, \"dor$\") and gender == \"m\" then\n\t\treturn {\n\t\t\t['ms'] = singular,\n\t\t\t['mp'] = singular .. 'es',\n\t\t\t['fs'] = singular .. 'a',\n\
      \t\t\t['fp'] = singular .. 'as'\n\t\t}\n\tend\n\t\n\tif mw.ustring.match(singular, \"dora$\") and gender == \"f\" then\n\t\tlocal stem = mw.ustring.sub(singular, 1, #singular-1)\n\t\treturn {\n\t\t\t['ms'] = stem,\n\t\t\t['mp'] = stem .. 'es',\n\t\t\t\
      ['fs'] = stem .. 'a',\n\t\t\t['fp'] = stem .. 'as'\n\t\t}\n\tend\n\t\n\tif last == \"o\" or last == \"a\" and gender == \"f\" then\n\t\tlocal stem = mw.ustring.match(singular, \"^(.+)[ao]$\")\n\t\treturn {\n\t\t\t['ms'] = stem..\"o\",\n\t\t\t['mp'] = stem..\"\
      os\",\n\t\t\t['fs'] = stem..\"a\",\n\t\t\t['fp'] = stem..\"as\"\n\t\t}\n\tend\n\t\n\tif last == \"e\" or mw.ustring.match(singular, \"ista$\") then\n\t\tlocal plural = singular..'s'\n\t\treturn {\n\t\t\t['ms'] = singular,\n\t\t\t['mp'] = plural,\n\t\t\t\
      ['fs'] = singular,\n\t\t\t['fp'] = plural\n\t\t}\n\tend\n\t\n\tif last == \"z\" then\n\t\tlocal plural = mw.ustring.gsub(singular, \"z$\", \"ces\")\n\t\treturn {\n\t\t\t['ms'] = singular,\n\t\t\t['mp'] = plural,\n\t\t\t['fs'] = singular,\n\t\t\t['fp']\
      \ = plural\n\t\t}\n\tend\n\t\n\tlocal function make_stem(singular)\n\t\treturn mw.ustring.gsub(\n\t\t\tsingular,\n\t\t\t\"^(.+)(.)(.)$\",\n\t\t\tfunction (before_stress, stressed_vowel, after_stress)\n\t\t\t\treturn before_stress .. (remove_stress[stressed_vowel]\
      \ or stressed_vowel) .. after_stress\n\t\t\tend)\n\tend\n\t\n\tif last_two == \"ar\" or last_two == \"ón\" or last_two == \"ún\" or last == \"l\" then\n\t\tlocal plural = make_stem(singular)..\"es\"\n\t\treturn {\n\t\t\t['ms'] = singular,\n\t\t\t['mp']\
      \ = plural,\n\t\t\t['fs'] = singular,\n\t\t\t['fp'] = plural\n\t\t}\n\tend\n\t\n\tif last_two == \"or\" then\n\t\treturn {\n\t\t\t['ms'] = singular,\n\t\t\t['mp'] = singular..\"es\",\n\t\t\t['fs'] = singular,\n\t\t\t['fp'] = singular..\"es\"\n\t\t}\n\t\
      end\n\n\tif last_two == \"án\" or last_two == \"és\" or last_two == \"ín\" then\n\t\tlocal stem = make_stem(singular)\n\t\treturn {\n\t\t\t['ms'] = singular,\n\t\t\t['mp'] = stem..\"es\",\n\t\t\t['fs'] = stem..\"a\",\n\t\t\t['fp'] = stem..\"as\"\n\t\t\
      }\n\tend\n\t\n\treturn {}\nend\n\n-- Display information for a noun's gender\n-- This is separate so that it can also be used for proper nouns\nfunction noun_gender(args, data)\n\tlocal categories = {}\n\t\n\tlocal gender = args[1]\n\t\n\tif gender ==\
      \ \"m-p\" or gender == \"f-p\" then\n\t\ttable.insert(data.categories, \"Spanish pluralia tantum\")\n\tend\n\t\n\tif gender == \"mf\" then\n\t\ttable.insert(data.genders, \"m\")\n\t\ttable.insert(data.genders, \"f\")\n\telse\n\t\ttable.insert(data.genders,\
      \ gender)\n\tend\n \n\tif #data.genders == 0 then\n\t\ttable.insert(data.genders, \"?\")\n\tend\nend\n\npos_functions[\"proper nouns\"] = {\n\tparams = {\n\t\t[1] = {},\n\t\t},\n\tfunc = function(args, data)\n\t\tnoun_gender(args, data)\n\tend\n}\n\n--\
      \ Display additional inflection information for a noun\npos_functions[\"nouns\"] = {\n\tparams = {\n\t\t[1] = {},\n\t\t[2] = {},\n\t\t[\"pl2\"] = {},\n\t\t[\"f\"] = {},\n\t\t[\"fpl\"] = {},\n\t\t[\"m\"] = {},\n\t\t[\"m2\"] = {},\n\t\t[\"mpl\"] = {},\n\t\
      \t},\n\tfunc = function(args, data, tracking_categories)\n\t\tnoun_gender(args, data)\n\t\t\n\t\t-- Plural\n\t\tif data.genders[1] == \"m-p\" or data.genders[1] == \"f-p\" then\n\t\t\ttable.insert(data.inflections, {label = \"[[Appendix:Glossary#plural\
      \ only|plural only]]\"})\n\t\telse\n\t\t\tlocal plural = args[2]\n\t\t\t\n\t\t\tif plural == \"-\" then\n\t\t\t\ttable.insert(data.inflections, {label = \"[[Appendix:Glossary#uncountable|uncountable]]\"})\n\t\t\t\ttable.insert(data.categories, \"Spanish\
      \ uncountable nouns\")\n\t\t\telse\n\t\t\t\tlocal infl_parts = {label = \"plural\", accel = {form = \"p\"}}\n\t\t\t\tlocal plural2 = args[\"pl2\"]\n\t\t\t\t\n\t\t\t\tif not plural or plural == \"s\" then\n\t\t\t\t\tplural = PAGENAME .. \"s\"\n\t\t\t\t\
      elseif plural == \"es\" then\n\t\t\t\t\tplural = PAGENAME .. \"es\"\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\ttable.insert(infl_parts, plural)\n\t\t\t\t\n\t\t\t\tif plural2 then\n\t\t\t\t\ttable.insert(infl_parts, plural2)\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tlocal generated_plurals\
      \ = export.make_plural_noun(PAGENAME, data.genders[1])\n\t\t\t\t\n\t\t\t\tif plural and not generated_plurals.pl then\n\t\t\t\t\ttable.insert(tracking_categories, \"Spanish nouns with unpredictable plurals\")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif plural then\n\
      \t\t\t\t\tif generated_plurals.pl == plural or generated_plurals.pl2 == plural then\n\t\t\t\t\t\ttable.insert(tracking_categories, \"Spanish nouns with predictable plurals\")\n\t\t\t\t\telse\n\t\t\t\t\t\tmw.log(\"predicted plural:\", generated_plurals.pl,\
      \ \"actual plural:\", plural)\n\t\t\t\t\t\ttable.insert(tracking_categories, \"Spanish nouns with unpredictable plurals\")\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif plural and not mw.title.new(plural).exists then\n\t\t\t\t\ttable.insert(tracking_categories,\
      \ \"Spanish nouns with missing plurals\")\n\t\t\t\tend\n\t\t\t\tif plural2 and not mw.title.new(plural2).exists then\n\t\t\t\t\ttable.insert(tracking_categories, \"Spanish nouns with missing plurals\")\n\t\t\t\tend\n\t\n\t\t\t\ttable.insert(data.inflections,\
      \ infl_parts)\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Gendered forms\n\t\tlocal feminine = args[\"f\"]\n\t\tlocal feminine_pl = args[\"fpl\"]\n\t\tlocal masculine = args[\"m\"]\n\t\tlocal masculine2 = args[\"m2\"]\n\t\tlocal masculine_pl = args[\"mpl\"]\n\t\
      \ \n\t\tif feminine then\n\t\t\ttable.insert(data.inflections, {label = \"feminine\", feminine})\n\t\t\tif not mw.title.new(feminine).exists then\n\t\t\t\ttable.insert(tracking_categories, \"Missing Spanish noun forms\")\n\t\t\tend\n\t\tend\n\t\t\n\t\t\
      if feminine_pl then\n\t\t\ttable.insert(data.inflections, {label = \"feminine plural\", feminine_pl})\n\t\t\tif not mw.title.new(feminine_pl).exists then\n\t\t\t\ttable.insert(tracking_categories, \"Missing Spanish noun forms\")\n\t\t\tend\n\t\tend\n\t\
      \ \t\n\t\tif masculine then\n\t\t\ttable.insert(data.inflections, {label = \"masculine\", masculine, masculine2})\n\t\t\tif not mw.title.new(masculine).exists then\n\t\t\t\ttable.insert(tracking_categories, \"Missing Spanish noun forms\")\n\t\t\tend\n\t\
      \tend\n\t\t\n\t\tif masculine_pl then\n\t\t\ttable.insert(data.inflections, {label = \"masculine plural\", masculine_pl})\n\t\t\tif not mw.title.new(masculine_pl).exists then\n\t\t\t\ttable.insert(tracking_categories, \"Missing Spanish noun forms\")\n\t\
      \t\tend\n\t\tend\n\tend\n}\n\nfunction export.new_noun_headword(frame)\n\tlocal allowed_genders = {['m'] = true,\n\t\t['f'] = true,\n\t\t['m-p'] = true,\n\t\t['f-p'] = true,\n\t\t['m-f'] =  true,\n\t\t['m-f-p'] = true\n\t}\n\tlocal params = {\n\t\t[1]\
      \ = {required=true}, --gender\n\t\t[\"g2\"] = {}, --second gender\n\t\t[\"e\"] = {type=\"boolean\"}, --epicene\n\t\t[2] = {}, --plural 1 override\n\t\t[\"pl2\"] = {}, --plural 2 override\n\t\t[\"pl3\"] = {}, --plural 3\n\t\t[\"f\"] = {}, --feminine form\n\
      \t\t[\"m\"] = {}, --masculine form\n\t\t[\"fpl\"] = {}, --feminine plural override\n\t\t[\"fpl2\"] = {}, --feminine plural 2 override\n\t\t[\"mpl\"] = {}, --masculine plural override\n\t\t[\"mpl2\"] = {}, --masculine plural 2 override\n\t\t[\"head\"] =\
      \ {},\n\t\t[\"json\"] = {type=\"boolean\"},\n\t\t[\"title\"] = {}\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal title = args[\"title\"] or mw.title.getCurrentTitle().text\n\t\n\tif args[1]\
      \ == \"mf\" then\n\t\targs[1] = \"m\"\n\t\targs[\"g2\"] = \"f\"\n\telseif gender == \"mfp\" then\n\t\targs[1] = \"m-p\"\n\t\targs[\"g2\"] = \"f-p\"\n\tend\n\t\n\tif not allowed_genders[args[1]] then error(\"Specified gender is not valid\") end\n\t\n\t\
      local data = {\n\t\tlang = lang,\n\t\tpos_category = \"nouns\",\n\t\tcategories = {},\n\t\theads = {args[\"head\"]},\n\t\tgenders = {args[1]},\n\t\tinflections = {}\n\t}\n\t\n\tif args.g2 then table.insert(data.genders, args.g2) end\n\t\n\tif args[\"e\"\
      ] then\n\t\ttable.insert(data.categories, \"Spanish epicene nouns\")\n\t\ttable.insert(data.inflections, {label = \"[[Appendix:Glossary#epicene|epicene]]\"})\n\tend\n\t\n\tif args[1] ~= \"m-p\" and args[1] ~= \"f-p\" then\n\t\tif args[2] == \"-\" then\n\
      \t\t\ttable.insert(data.inflections, {label = \"[[Appendix:Glossary#uncountable|uncountable]]\"})\n\t\t\ttable.insert(data.categories, \"Spanish uncountable nouns\")\n\t\telse\n\t\t\tif not args[2] then\n\t\t\t\tlocal plurals = export.make_plural_noun(title,\
      \ args[1])\n\t\t\t\tif plurals.pl then\n\t\t\t\t\targs[2] = plurals.pl\n\t\t\t\tend\n\t\t\t\tif plurals.pl2 then\n\t\t\t\t\targs[\"pl2\"] = plurals.pl2\n\t\t\t\tend\n\t\t\tend\n\t\t\tif args[2] then\n\t\t\t\tlocal infl = {label = 'plural', accel = {form\
      \ = \"p\"}, {term=args[2]}}\n\t\t\t\tif args[\"pl2\"] then\n\t\t\t\t\ttable.insert(infl, {term=args[\"pl2\"]})\n\t\t\t\t\tif args[\"pl3\"] then\n\t\t\t\t\t\ttable.insert(infl, {term=args[\"pl3\"]})\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\ttable.insert(data.inflections,\
      \ infl)\n\t\t\tend\n\t\tend\n\telse\n\t\ttable.insert(data.categories, \"Spanish pluralia tantum\")\n\t\ttable.insert(data.inflections, {label = \"[[Appendix:Glossary#plural only|plural only]]\"})\n\tend\n\t\n\tif args[1] == \"m\" and args[\"f\"] then\n\
      \t\tif args[\"f\"] == \"1\" then\n\t\t\tlocal noun_forms = export.adjective_forms(title, \"m\")\n\t\t\tif noun_forms.fs then\n\t\t\t\targs[\"f\"] = noun_forms.fs\n\t\t\t\tif noun_forms.fp then\n\t\t\t\t\targs[\"fp\"] = noun_forms.fp\n\t\t\t\tend\n\t\t\t\
      end\n\t\tend\n\t\tif args[\"f\"] ~= \"1\" then\n\t\t\ttable.insert(data.inflections, {label = 'feminine', args[\"f\"]})\n\t\t\tif not args['fpl'] then\n\t\t\t\tlocal feminine_plurals = export.make_plural_noun(args[\"f\"], \"f\")\n\t\t\t\tif feminine_plurals.pl\
      \ then\n\t\t\t\t\targs['fpl'] = feminine_plurals.pl\n\t\t\t\tend\n\t\t\t\tif feminine_plurals.pl2 then\n\t\t\t\t\targs[\"fpl2\"] = feminine_plurals.pl2\n\t\t\t\tend\n\t\t\tend\n\t\t\tif args['fpl'] then\n\t\t\t\tlocal infl = {label = 'feminine plural',\
      \ accel = {form = \"p\"}, {term=args['fpl']}}\n\t\t\t\tif args[\"fpl2\"] then\n\t\t\t\t\ttable.insert(infl, {term=args[\"fpl2\"]})\n\t\t\t\tend\n\t\t\t\ttable.insert(data.inflections, infl)\n\t\t\tend\n\t\tend\n\tend\n\t\n\tif args[1] == \"f\" and args[\"\
      m\"] then\n\t\tif args[\"m\"] == \"1\" then\n\t\t\tlocal noun_forms = export.adjective_forms(title, \"f\")\n\t\t\tif noun_forms.ms then\n\t\t\t\targs[\"m\"] = noun_forms.ms\n\t\t\t\tif noun_forms.mp then\n\t\t\t\t\targs[\"mp\"] = noun_forms.mp\n\t\t\t\t\
      end\n\t\t\tend\n\t\tend\n\t\tif args[\"m\"] ~= \"1\" then\n\t\t\ttable.insert(data.inflections, {label = 'masculine', args[\"m\"]})\n\t\t\tif not args['mpl'] then\n\t\t\t\tlocal masculine_plurals = export.make_plural_noun(args[\"m\"], \"m\")\n\t\t\t\t\
      if masculine_plurals.pl then\n\t\t\t\t\targs['mpl'] = masculine_plurals.pl\n\t\t\t\tend\n\t\t\t\tif masculine_plurals.pl2 then\n\t\t\t\t\targs[\"mpl2\"] = masculine_plurals.pl2\n\t\t\t\tend\n\t\t\tend\n\t\t\tif args['mpl'] then\n\t\t\t\tlocal infl = {label\
      \ = 'masculine plural', accel = {form = \"p\"}, {term=args['mpl']}}\n\t\t\t\tif args[\"mpl2\"] then\n\t\t\t\t\ttable.insert(infl, {term=args[\"mpl2\"]})\n\t\t\t\tend\n\t\t\t\ttable.insert(data.inflections, infl)\n\t\t\tend\n\t\tend\n\tend\n\t\n\tif args[2]\
      \ and not mw.title.new(args[2]).exists then\n\t\ttable.insert(data.categories, \"Missing Spanish noun forms\")\n\tend\n\tif args[\"pl2\"] and not mw.title.new(args[\"pl2\"]).exists then\n\t\ttable.insert(data.categories, \"Missing Spanish noun forms\"\
      )\n\tend\n\tif args[\"pl3\"] and not mw.title.new(args[\"pl3\"]).exists then\n\t\ttable.insert(data.categories, \"Missing Spanish noun forms\")\n\tend\n\tif args[\"fpl\"] and not mw.title.new(args[\"fpl\"]).exists then\n\t\ttable.insert(data.categories,\
      \ \"Missing Spanish noun forms\")\n\tend\n\tif args[\"mpl\"] and not mw.title.new(args[\"mpl\"]).exists then\n\t\ttable.insert(data.categories, \"Missing Spanish noun forms\")\n\tend\n\tif args[\"fpl2\"] and not mw.title.new(args[\"fpl2\"]).exists then\n\
      \t\ttable.insert(data.categories, \"Missing Spanish noun forms\")\n\tend\n\tif args[\"mpl2\"] and not mw.title.new(args[\"mpl2\"]).exists then\n\t\ttable.insert(data.categories, \"Missing Spanish noun forms\")\n\tend\n\t\n\tif args[\"json\"] then\n\t\t\
      return require(\"Module:JSON\").toJSON(data)\n\tend\n\n\treturn require(\"Module:headword\").full_headword(data)\n\t\nend\n\t\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:09.585Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=File%3AByobu.jpg&prop=imageinfo&iiprop=url&iiurlwidth=250
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=64826 t=1555362549477170
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '588'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:09 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1285.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 598067806, 265913267, 700000308
    body: <?xml version="1.0"?><api><continue iistart="2006-04-06T09:43:20Z" continue="||" /><query><pages><page _idx="-1" ns="6" title="File:Byobu.jpg" missing="" known="" imagerepository="shared"><imageinfo><ii thumburl="https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Byobu.jpg/250px-Byobu.jpg" thumbwidth="250" thumbheight="146" url="https://upload.wikimedia.org/wikipedia/commons/6/6a/Byobu.jpg" descriptionurl="https://commons.wikimedia.org/wiki/File:Byobu.jpg" descriptionshorturl="https://commons.wikimedia.org/w/index.php?curid=685830" /></imageinfo></page></pages></query></api>
- recorded: 2019-04-15T21:09:09.893Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=File%3AWikipedia-logo.svg&prop=imageinfo&iiprop=url&iiurlwidth=15
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=63011 t=1555362549785990
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:09 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1231.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 502780364, 732056957, 694272214
    body: <?xml version="1.0"?><api><continue iistart="2010-06-15T23:28:41Z" continue="||" /><query><pages><page _idx="-1" ns="6" title="File:Wikipedia-logo.svg" missing="" known="" imagerepository="shared"><imageinfo><ii thumburl="https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Wikipedia-logo-v2.svg/15px-Wikipedia-logo-v2.svg.png" thumbwidth="15" thumbheight="14" url="https://upload.wikimedia.org/wikipedia/commons/8/80/Wikipedia-logo-v2.svg" descriptionurl="https://commons.wikimedia.org/wiki/File:Wikipedia-logo-v2.svg" descriptionshorturl="https://commons.wikimedia.org/w/index.php?curid=10337301" /></imageinfo></page></pages></query></api>
- recorded: 2019-04-15T21:08:55.984Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Astring&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=78323 t=1555362535833170
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:55 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 501861761, 646850229, 695486663
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4099547\" pageid=\"4099547\" ns=\"828\" title=\"Module:string\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-10-18T08:33:33Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"okay for count to be nil\" xml:space=\"preserve\">local str = {}\n\n-- Cannot include null byte.\nlocal UTF8_char = \"[\\1-\\127\\194-\\244][\\128-\\191]*\"\n\n--[[\nulen\n\nCounts UTF-8 characters. Faster\
      \ than mw.ustring.len.\n\nAssumes that the encoding is correct. Unlike mw.ustring.len, does not return nil\nif encoding is invalid.\n\nDoes not count the bytes 192, 193, and 245-255. They are not used in UTF-8 and\nwill not occur if the string is valid.\
      \ They are replaced with the replacement\ncharacter (U+FFFD) on MediaWiki pages.\n--]]\nfunction str.ulen(text)\n\tlocal _, length = string.gsub(text, UTF8_char, \"\")\n\treturn length\nend\n\n--[[\nlen\n\nThis function returns the length of the target\
      \ string.\n\nUsage:\n{{#invoke:string|len|target_string|}}\nOR\n{{#invoke:string|len|s=target_string}}\n\nParameters\n    s: The string whose length to report\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing\
      \ whitespace from the target string.\n]]\nfunction str.len(frame)\n\tlocal new_args = str._getParameters(frame.args, { 's' });\n\tlocal s = new_args['s'] or '';\n\treturn mw.ustring.len(s)\nend\n\n--[[\nsub\n\nThis function returns a substring of the target\
      \ string at specified indices.\n\nUsage:\n{{#invoke:string|sub|target_string|start_index|end_index}}\nOR\n{{#invoke:string|sub|s=target_string|i=start_index|j=end_index}}\n\nParameters\n    s: The string to return a subset of\n    i: The fist index of\
      \ the substring to return, defaults to 1.\n    j: The last index of the string to return, defaults to the last character.\n    \nThe first character of the string is assigned an index of 1.  If either i or j\nis a negative value, it is interpreted the\
      \ same as selecting a character by\ncounting from the end of the string.  Hence, a value of -1 is the same as\nselecting the last character of the string.\n\nIf the requested indices are out of range for the given string, an error is\nreported.\n]]\nfunction\
      \ str.sub(frame)\n\tlocal new_args = str._getParameters(frame.args, { 's', 'i', 'j' });\n\tlocal s = new_args['s'] or '';\n\tlocal i = tonumber(new_args['i']) or 1;\n\tlocal j = tonumber(new_args['j']) or -1;\n\t\n\tlocal len = mw.ustring.len(s);\n\t\n\
      \t-- Convert negatives for range checking\n\tif i &lt; 0 then\n\t\ti = len + i + 1;\n\tend\n\tif j &lt; 0 then\n\t\tj = len + j + 1;\n\tend\n\t\n\tif i &gt; len or j &gt; len or i &lt; 1 or j &lt; 1 then\n\t\treturn str._error('String subset index out\
      \ of range');\n\tend\n\tif j &lt; i then\n\t\treturn str._error('String subset indices out of order');\n\tend\n\t\n\treturn mw.ustring.sub(s, i, j)\nend\n\n--[[\nThis function implements that features of {{str sub old}} and is kept in order\nto maintain\
      \ these older templates.\n]]\nfunction str.sublength(frame)\n\tlocal i = tonumber(frame.args.i) or 0\n\tlocal len = tonumber(frame.args.len)\n\treturn mw.ustring.sub(frame.args.s, i + 1, len and (i + len))\nend\n\n--[[\nmatch\n\nThis function returns a\
      \ substring from the source string that matches a\nspecified pattern.\n\nUsage:\n{{#invoke:string|match|source_string|pattern_string|start_index|match_number|plain_flag|nomatch_output}}\nOR\n{{#invoke:string|pos|s=source_string|pattern=pattern_string|start=start_index\n\
      \    |match=match_number|plain=plain_flag|nomatch=nomatch_output}}\n\nParameters\n    s: The string to search\n    pattern: The pattern or string to find within the string\n    start: The index within the source string to start the search.  The first\n\
      \        character of the string has index 1.  Defaults to 1.\n    match: In some cases it may be possible to make multiple matches on a single\n        string.  This specifies which match to return, where the first match is\n        match= 1.  If a negative\
      \ number is specified then a match is returned\n        counting from the last match.  Hence match = -1 is the same as requesting\n        the last match.  Defaults to 1.\n    plain: A flag indicating that the pattern should be understood as plain\n  \
      \      text.  Defaults to false.\n    nomatch: If no match is found, output the \"nomatch\" value rather than an error.\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from each string.  In\
      \ some circumstances this is desirable, in\nother cases one may want to preserve the whitespace.\n\nIf the match_number or start_index are out of range for the string being queried, then\nthis function generates an error.  An error is also generated if\
      \ no match is found.\nIf one adds the parameter ignore_errors=true, then the error will be suppressed and\nan empty string will be returned on any failure.\n\nFor information on constructing Lua patterns, a form of [regular expression], see:\n\n* http://www.lua.org/manual/5.1/manual.html#5.4.1\n\
      * http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Patterns\n* http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Ustring_patterns\n\n]]\nfunction str.match(frame)\n\tlocal new_args = str._getParameters(frame.args,\
      \ { 's', 'pattern', 'start', 'match', 'plain', 'nomatch' });\n\tlocal s = new_args['s'] or '';\n\tlocal start = tonumber(new_args['start']) or 1;\n\tlocal plain_flag = str._getBoolean(new_args['plain'] or false);\n\tlocal pattern = new_args['pattern']\
      \ or '';\n\tlocal match_index = math.floor(tonumber(new_args['match']) or 1);\n\tlocal nomatch = new_args['nomatch'];\n\t\n\tif s == '' then\n\t\treturn str._error('Target string is empty');\n\tend\n\tif pattern == '' then\n\t\treturn str._error('Pattern\
      \ string is empty');\n\tend\n\tif math.abs(start) &lt; 1 or math.abs(start) &gt; mw.ustring.len(s) then\n\t\treturn str._error('Requested start is out of range');\n\tend\n\tif match_index == 0 then\n\t\treturn str._error('Match index is out of range');\n\
      \tend\n\tif plain_flag then\n\t\tpattern = str.pattern_escape(pattern);\n\tend\n\t\n\tlocal result\n\tif match_index == 1 then\n\t\t-- Find first match is simple case\n\t\tresult = mw.ustring.match(s, pattern, start)\n\telse\n\t\tif start &gt; 1 then\n\
      \t\t\ts = mw.ustring.sub(s, start);\n\t\tend\n\t\t\n\t\tlocal iterator = mw.ustring.gmatch(s, pattern);\n\t\tif match_index &gt; 0 then\n\t\t\t-- Forward search\n\t\t\tfor w in iterator do\n\t\t\t\tmatch_index = match_index - 1;\n\t\t\t\tif match_index\
      \ == 0 then\n\t\t\t\t\tresult = w;\n\t\t\t\t\tbreak;\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\t-- Reverse search\n\t\t\tlocal result_table = {};\n\t\t\tlocal count = 1;\n\t\t\tfor w in iterator do\n\t\t\t\tresult_table[count] = w;\n\t\t\t\tcount = count\
      \ + 1;\n\t\t\tend\n\t\t\t\n\t\t\tresult = result_table[count + match_index];\n\t\tend\n\tend\n\t\n\tif result == nil then\n\t\tif nomatch == nil then\n\t\t\treturn str._error('Match not found');\n\t\telse\n\t\t\treturn nomatch;\n\t\tend\n\telse\n\t\treturn\
      \ result;\n\tend\nend\n\n--[[\npos\n\nThis function returns a single character from the target string at position pos.\n\nUsage:\n{{#invoke:string|pos|target_string|index_value}}\nOR\n{{#invoke:string|pos|target=target_string|pos=index_value}}\n\nParameters\n\
      \    target: The string to search\n    pos: The index for the character to return\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from the target string.  In some circumstances this is desirable,\
      \ in\nother cases one may want to preserve the whitespace.\n\nThe first character has an index value of 1.\n\nIf one requests a negative value, this function will select a character by counting backwards\nfrom the end of the string.  In other words pos\
      \ = -1 is the same as asking for the last character.\n\nA requested value of zero, or a value greater than the length of the string returns an error.\n]]\nfunction str.pos(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'target', 'pos' });\n\
      \tlocal target_str = new_args['target'] or '';\n\tlocal pos = tonumber(new_args['pos']) or 0;\n\t\n\tif pos == 0 or math.abs(pos) &gt; mw.ustring.len(target_str) then\n\t\treturn str._error('String index out of range');\n\tend\n\t\n\treturn mw.ustring.sub(target_str,\
      \ pos, pos);\nend\n\n--[[\nstr_find\n\nThis function duplicates the behavior of {{str_find}}, including all of its quirks.\nThis is provided in order to support existing templates, but is NOT RECOMMENDED for\nnew code and templates.  New code is recommended\
      \ to use the \"find\" function instead.\n\nReturns the first index in \"source\" that is a match to \"target\".  Indexing is 1-based,\nand the function returns -1 if the \"target\" string is not present in \"source\".\n\nImportant Note: If the \"target\"\
      \ string is empty / missing, this function returns a\nvalue of \"1\", which is generally unexpected behavior, and must be accounted for\nseparatetly.\n]]\nfunction str.str_find(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'source', 'target'\
      \ });\n\tlocal source_str = new_args['source'] or '';\n\tlocal target_str = new_args['target'] or '';\n\t\n\tif target_str == '' then\n\t\treturn 1;\n\tend\n\t\n\tlocal start = mw.ustring.find(source_str, target_str, 1, true)\n\tif start == nil then\n\t\
      \tstart = -1\n\tend\n\t\n\treturn start\nend\n\n--[[\nfind\n\nThis function allows one to search for a target string or pattern within another\nstring.\n\nUsage:\n{{#invoke:string|find|source_str|target_string|start_index|plain_flag}}\nOR\n{{#invoke:string|find|source=source_str|target=target_str|start=start_index|plain=plain_flag}}\n\
      \nParameters\n    source: The string to search\n    target: The string or pattern to find within source\n    start: The index within the source string to start the search, defaults to 1\n    plain: Boolean flag indicating that target should be understood\
      \ as plain\n        text and not as a Lua style regular expression, defaults to true\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from the parameter.  In some circumstances this is desirable,\
      \ in\nother cases one may want to preserve the whitespace.\n\nThis function returns the first index &gt;= \"start\" where \"target\" can be found\nwithin \"source\".  Indices are 1-based.  If \"target\" is not found, then this\nfunction returns an empty\
      \ string.  If either \"source\" or \"target\" are missing / empty, this\nfunction also returns an empty string.\n\nThis function should be safe for UTF-8 strings.\n]]\nfunction str.find(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2]\
      \ = { required = true },\n\t\t[3] = { type = \"number\" },\n\t\t[4] = { type = \"boolean\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\treturn mw.ustring.find(args[1], args[2], args[3], args[4])\nend\n\n\
      --[[\nreplace\n\nThis function allows one to replace a target string or pattern within another\nstring.\n\nUsage:\n{{#invoke:string|replace|source_str|pattern_string|replace_string|replacement_count|plain_flag}}\nOR\n{{#invoke:string|replace|source=source_string|pattern=pattern_string|replace=replace_string|\n\
      \   count=replacement_count|plain=plain_flag}}\n\nParameters\n    source: The string to search\n    pattern: The string or pattern to find within source\n    replace: The replacement text\n    count: The number of occurences to replace, defaults to all.\n\
      \    plain: Boolean flag indicating that pattern should be understood as plain\n        text and not as a Lua style regular expression, defaults to true\n]]\nfunction str.replace(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'source', 'pattern',\
      \ 'replace', 'count', 'plain' });\n\tlocal source_str = new_args['source'] or '';\n\tlocal pattern = new_args['pattern'] or '';\n\tlocal replace = new_args['replace'] or '';\n\tlocal count = tonumber(new_args['count']);\n\tlocal plain = new_args['plain']\
      \ or true;\n\t\n\tif source_str == '' or pattern == '' then\n\t\treturn source_str;\n\tend\n\tplain = str._getBoolean(plain);\n\t\n\tif plain then\n\t\tpattern = str.pattern_escape(pattern);\n\t\treplace = mw.ustring.gsub(replace, \"%%\", \"%%%%\"); --Only\
      \ need to escape replacement sequences.\n\tend\n\t\n\tlocal result;\n\t\n\tresult = mw.ustring.gsub(source_str, pattern, replace, count);\n\t\n\treturn result;\nend\n\n\nfunction str.gsub(frame)\n\tlocal params = {\n\t\t[1] = { required = true, allow_empty\
      \ = true },\n\t\t[2] = { required = true, allow_empty = true },\n\t\t[3] = { required = true, allow_empty = true },\n\t\t[4] = { type = \"number\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\treturn (mw.ustring.gsub(args[1],\
      \ args[2], args[3], args[4]))\nend\n\n\n--[[\n    simple function to pipe string.rep to templates.\n]]\n\nfunction str.rep(frame)\n\tlocal repetitions = tonumber(frame.args[2])\n\tif not repetitions then\n\t\treturn str._error('function rep expects a number\
      \ as second parameter, received \"' .. (frame.args[2] or '') .. '\"')\n\tend\n\treturn string.rep(frame.args[1] or '', repetitions)\nend\n\nfunction str.lower(frame)\n\tlocal text = frame.args[1] or ''\n\treturn mw.ustring.lower(text)\nend\n\nstr.lc =\
      \ str.lower\n\n--[[\nHelper function that populates the argument list given that user may need to use a mix of\nnamed and unnamed parameters.  This is relevant because named parameters are not\nidentical to unnamed parameters due to string trimming, and\
      \ when dealing with strings\nwe sometimes want to either preserve or remove that whitespace depending on the application.\n]]\nfunction str._getParameters(frame_args, arg_list)\n\tlocal new_args = {};\n\tlocal index = 1;\n\tlocal value;\n\t\n\tfor _, arg\
      \ in ipairs(arg_list) do\n\t\tvalue = frame_args[arg]\n\t\tif value == nil then\n\t\t\tvalue = frame_args[index];\n\t\t\tindex = index + 1;\n\t\tend\n\t\tnew_args[arg] = value;\n\tend\n\t\n\treturn new_args;\nend\n\n--[[\nHelper function to handle error\
      \ messages.\n]]\nfunction str._error(error_str)\n\tlocal frame = mw.getCurrentFrame();\n\tlocal error_category = frame.args.error_category or 'Errors reported by Module String';\n\tlocal ignore_errors = frame.args.ignore_errors or false;\n\tlocal no_category\
      \ = frame.args.no_category or false;\n\t\n\tif str._getBoolean(ignore_errors) then\n\t\treturn '';\n\tend\n\t\n\tlocal error_str = '&lt;strong class=\"error\"&gt;String Module Error: ' .. error_str .. '&lt;/strong&gt;';\n\tif error_category ~= '' and not\
      \ str._getBoolean(no_category) then\n\t\terror_str = '[[Category:' .. error_category .. ']]' .. error_str;\n\tend\n\t\n\treturn error_str;\nend\n\n--[[\nHelper Function to interpret boolean strings\n]]\nfunction str._getBoolean(boolean_str)\n\tlocal boolean_value;\n\
      \t\n\tif type(boolean_str) == 'string' then\n\t\tboolean_str = boolean_str:lower();\n\t\tif boolean_str == 'false' or boolean_str == 'no' or boolean_str == '0'\n\t\t\t\tor boolean_str == '' then\n\t\t\tboolean_value = false;\n\t\telse\n\t\t\tboolean_value\
      \ = true;\n\t\tend\n\telseif type(boolean_str) == 'boolean' then\n\t\tboolean_value = boolean_str;\n\telse\n\t\terror('No boolean value found');\n\tend\n\treturn boolean_value\nend\n\n--[[\nHelper function that escapes all pattern characters – ().%+-*?[^$]\
      \ – so that they will be treated\nas plain text.\n]]\nfunction str.pattern_escape(pattern_str)\n\tlocal invoked = false\n\t\n\tif type(pattern_str) == \"table\" then\n\t\tif pattern_str.args then\n\t\t\tlocal frame = pattern_str\n\t\t\tinvoked = true\n\
      \t\t\t\n\t\t\tif frame.args[1] then\n\t\t\t\tpattern_str = frame.args[1]\n\t\t\telse\n\t\t\t\tpattern_str = frame:getParent().args[1]\n\t\t\tend\n\t\telse\n\t\t\terror(\"First argument to pattern_escape should be a string, a number, or a frame object.\"\
      )\n\t\tend\n\telseif not (type(pattern_str) == \"string\" or type(pattern_str) == \"number\") then\n\t\terror(\"First argument to pattern_escape should be a string or a number.\")\n\tend\n\t\n\tif invoked then\n\t\tlocal escaped = mw.ustring.gsub(pattern_str,\
      \ \"([%(%)%.%%%+%-%*%?%[%^%$%]])\", \"%%%1\")\n\t\treturn escaped\n\telse\n\t\treturn mw.ustring.gsub(pattern_str, \"([%(%)%.%%%+%-%*%?%[%^%$%]])\", \"%%%1\");\n\tend\nend\n\nfunction str.count(text, pattern, plain)\n\tif not (type(text) == \"string\"\
      \ or type(text) == \"number\") then\n\t\terror('The first argument to the function \"count\" must be a string or a number, not a ' .. type(text) .. '.')\n\tend\n\t\n\tif not (type(pattern) == \"string\" or type(pattern) == \"number\") then\n\t\terror('The\
      \ first argument to the function \"count\" must be a string or a number, not a ' .. type(text) .. '.')\n\tend\n\t\n\tif plain then\n\t\tpattern = str.pattern_escape(pattern)\n\tend\n\t\n\tlocal _, count = mw.ustring.gsub(text, pattern, \"\")\n\t\n\treturn\
      \ count\nend\n\nfunction str.plain_gsub(text, pattern, replacement)\n\tlocal invoked = false\n\t\n\tif type(text) == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1]\
      \ = {},\n\t\t\t\t[2] = {},\n\t\t\t\t[3] = { allow_empty = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\t\t\treplacement = args[3]\n\t\t\
      else\n\t\t\terror(\"If the first argument to plain_gsub is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not (type(pattern) == \"string\" or type(pattern) == \"number\") then\n\t\t\terror(\"The second argument to plain_gsub should be\
      \ a string or a number.\")\n\t\tend\n\t\t\n\t\tif not (type(replacement) == \"string\" or type(replacement) == \"number\") then\n\t\t\terror(\"The third argument to plain_gsub should be a string or a number.\")\n\t\tend\n\tend\n\t\n\tpattern = str.pattern_escape(pattern)\n\
      \t\n\tif invoked then\n\t\ttext = mw.ustring.gsub(text, pattern, replacement)\n\t\treturn text\n\telse\n\t\treturn mw.ustring.gsub(text, pattern, replacement)\n\tend\nend\n\nfunction str.matchToArray(text, pattern)\n\tlocal invoked = false\n\t\n\tif type(text)\
      \ == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = { required = true },\n\t\t\t\t[2] = { required = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\"\
      ).process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\t\telse\n\t\t\terror(\"If the first argument to matchToArray is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not (type(pattern) == \"string\" or\
      \ type(pattern) == \"number\") then\n\t\t\terror(\"The second argument to matchToArray should be a string or a number.\")\n\t\tend\n\tend\n\t\n\tlocal matches = {}\n\tlocal i = 0\n\tfor match in mw.ustring.gmatch(text, pattern) do\n\t\ti = i + 1\n\t\t\
      matches[i] = match\n\tend\n\t\n\tif i &gt; 0 then\n\t\tif invoked then\n\t\t\treturn table.concat(matches, \", \")\n\t\telse\n\t\t\treturn matches\n\t\tend\n\telse\n\t\tif invoked then\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn nil\n\t\tend\n\tend\nend\n\
      \n--[=[\n\tSimilar to gmatch, but it returns the count of the match in addition to the\n\tlist of captures, something like ipairs().\n\t\n\tIf the pattern doesn't contain any captures, the whole match is returned.\n\t\n\tInvoke thus:\n\t\n\t\tfor i, whole_match\
      \ in require(\"Module:string\").imatch(text, pattern) do\n\t\t\t[ do something with i and whole_match ]\n\t\tend\n\t\n\tor\n\t\n\t\tfor i, capture1[, capture2[, capture3[, ...]]] in require(\"Module:string\").imatch(text, pattern) do\n\t\t\t[ do something\
      \ with i and capture1 ]\n\t\tend\n\t\n\tFor example, this code\n\t\tfor i, whole_match in require(\"Module:string\").imatch(\"a b c\", \"[a-z]\") do\n\t\t\tmw.log(i, whole_match)\n\t\tend\n\twill log\n\t\t1\ta\n\t\t2\tb\n\t\t3\tc\n]=]\nfunction str.imatch(text,\
      \ pattern, pos, plain, use_basic_Lua_function)\n\tlocal i = 0\n\tpos = pos or 0\n\tif not string.find(pattern, \"%b()\") then\n\t\tpattern = \"(\" .. pattern .. \")\"\n\tend\n\tlocal find = use_basic_Lua_function and string.find or mw.ustring.find\n\t\
      return function()\n\t\ti = i + 1\n\t\tlocal return_values = { find(text, pattern, pos, plain) }\n\t\tlocal j = return_values[2]\n\t\t\n\t\tif return_values[3] then\n\t\t\tpos = j + 1\n\t\t\t-- Skip the first two returned values, which are the indices of\
      \ the\n\t\t\t-- whole match.\n\t\t\treturn i, unpack(return_values, 3)\n\t\tend\n\tend\nend\n\nfunction str.escapebytes(s)\n\treturn (string.gsub(s,\n\t\t'.',\n\t\tfunction(char)\n\t\t\treturn ('\\\\%03d'):format(string.byte(char))\n\t\tend))\nend\n\n\
      function str.URIdecode(frame)\n\treturn mw.uri.decode(frame.args[1], frame.args[2] or \"PATH\")\nend\n\nreturn str</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:56.192Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Atable&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56597 t=1555362536065301
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:56 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 605819799, 556784408, 691002386
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5122966\" pageid=\"5122966\" ns=\"828\" title=\"Module:table\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-14T04:16:37Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"add deepEquals, deepEqualsList for deep comparisons\" xml:space=\"preserve\">--[[\n------------------------------------------------------------------------------------\n--                      table (formerly\
      \ TableTools)                               --\n--                                                                                --\n-- This module inclcudes a number of functions for dealing with Lua tables.        --\n-- It is a meta-module, meant to\
      \ be called from other Lua modules, and should     --\n-- not be called directly from #invoke.                                           --\n------------------------------------------------------------------------------------\n--]]\n\n--[[\n\tInserting\
      \ new values into a table using a local \"index\" variable, which is\n\tincremented each time, is faster than using \"table.insert(t, x)\" or\n\t\"t[#t + 1] = x\". See the talk page.\n]]\n\nlocal libraryUtil = require('libraryUtil')\n\nlocal export = {}\n\
      \n-- Define often-used variables and functions.\nlocal floor = math.floor\nlocal infinity = math.huge\nlocal checkType = libraryUtil.checkType\nlocal checkTypeMulti = libraryUtil.checkTypeMulti\n\nlocal function _check(funcName, expectType)\n\tif type(expectType)\
      \ == \"string\" then\n\t\treturn function(argIndex, arg, nilOk)\n\t\t\tcheckType(funcName, argIndex, arg, expectType, nilOk)\n\t\tend\n\telse\n\t\treturn function(argIndex, arg, expectType, nilOk)\n\t\t\tif type(expectType) == \"table\" then\n\t\t\t\t\
      checkTypeMulti(funcName, argIndex, arg, expectType, nilOk)\n\t\t\telse\n\t\t\t\tcheckType(funcName, argIndex, arg, expectType, nilOk)\n\t\t\tend\n\t\tend\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- isPositiveInteger\n--\n-- This function returns true if the given value is a positive integer, and false\n-- if not. Although it doesn't operate on tables, it is included here as it is\n-- useful for determining whether a given table key is in the array\
      \ part or the\n-- hash part of a table.\n------------------------------------------------------------------------------------\n--]]\nfunction export.isPositiveInteger(v)\n\treturn type(v) == 'number' and v &gt;= 1 and floor(v) == v and v &lt; infinity\n\
      end\n\n--[[\n------------------------------------------------------------------------------------\n-- isNan\n--\n-- This function returns true if the given number is a NaN value, and false\n-- if not. Although it doesn't operate on tables, it is included\
      \ here as it is\n-- useful for determining whether a value can be a valid table key. Lua will\n-- generate an error if a NaN is used as a table key.\n------------------------------------------------------------------------------------\n--]]\nfunction export.isNan(v)\n\
      \tif type(v) == 'number' and tostring(v) == '-nan' then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- shallowClone\n--\n-- This returns a clone of\
      \ a table. The value returned is a new table, but all\n-- subtables and functions are shared. Metamethods are respected, but the returned\n-- table will have no metatable of its own.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.shallowClone(t)\n\tlocal ret = {}\n\tfor k, v in pairs(t) do\n\t\tret[k] = v\n\tend\n\treturn ret\nend\n\n--[[\nShallow copy\n]]\nfunction export.shallowcopy(orig)\n\tlocal orig_type = type(orig)\n\tlocal copy\n\tif orig_type == 'table'\
      \ then\n\t\tcopy = {}\n\t\tfor orig_key, orig_value in pairs(orig) do\n\t\t\tcopy[orig_key] = orig_value\n\t\tend\n\telse -- number, string, boolean, etc\n\t\tcopy = orig\n\tend\n\treturn copy\nend\n\n--[[\n\tRecursive deep copy function\n\tEquivalent\
      \ to mw.clone?\n]]\nlocal function deepcopy(orig, includeMetatable, already_seen)\n\t-- Stores copies of tables indexed by the original table.\n\talready_seen = already_seen or {}\n\t\n\tlocal copy = already_seen[orig]\n\tif copy ~= nil then\n\t\treturn\
      \ copy\n\tend\n\t\n\tif type(orig) == 'table' then\n\t\tcopy = {}\n\t\tfor orig_key, orig_value in pairs(orig) do\n\t\t\tcopy[deepcopy(orig_key, includeMetatable, already_seen)] = deepcopy(orig_value, includeMetatable, already_seen)\n\t\tend\n\t\talready_seen[orig]\
      \ = copy\n\t\t\n\t\tif includeMetatable then\n\t\t\tlocal mt = getmetatable(orig)\n\t\t\tif mt ~= nil then\n\t\t\t\tlocal mt_copy = deepcopy(mt, includeMetatable, already_seen)\n\t\t\t\tsetmetatable(copy, mt_copy)\n\t\t\tend\n\t\tend\n\telse -- number,\
      \ string, boolean, etc\n\t\tcopy = orig\n\tend\n\treturn copy\nend\n\nfunction export.deepcopy(orig, noMetatable, already_seen)\n\tcheckType(\"deepcopy\", 3, already_seen, \"table\", true)\n\t\n\treturn deepcopy(orig, not noMetatable, already_seen)\nend\n\
      \n--[[\n------------------------------------------------------------------------------------\n-- removeDuplicates\n--\n-- This removes duplicate values from an array. Non-positive-integer keys are\n-- ignored. The earliest value is kept, and all subsequent\
      \ duplicate values are\n-- removed, but otherwise the array order is unchanged.\n------------------------------------------------------------------------------------\n--]]\nfunction export.removeDuplicates(t)\n\tcheckType('removeDuplicates', 1, t, 'table')\n\
      \tlocal isNan = export.isNan\n\tlocal ret, exists = {}, {}\n\tlocal index = 1\n\tfor _, v in ipairs(t) do\n\t\tif isNan(v) then\n\t\t\t-- NaNs can't be table keys, and they are also unique, so we don't need to check existence.\n\t\t\tret[index] = v\n\t\
      \t\tindex = index + 1\n\t\telse\n\t\t\tif not exists[v] then\n\t\t\t\tret[index] = v\n\t\t\t\tindex = index + 1\n\t\t\t\texists[v] = true\n\t\t\tend\n\t\tend\n\tend\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- numKeys\n--\n-- This takes a table and returns an array containing the numbers of any numerical\n-- keys that have non-nil values, sorted in numerical order.\n------------------------------------------------------------------------------------\n--]]\n\
      function export.numKeys(t, checked)\n\tif not checked then\n\t\tcheckType('numKeys', 1, t, 'table')\n\tend\n\tlocal isPositiveInteger = export.isPositiveInteger\n\tlocal nums = {}\n\tlocal index = 1\n\tfor k, _ in pairs(t) do\n\t\tif isPositiveInteger(k)\
      \ then\n\t\t\tnums[index] = k\n\t\t\tindex = index + 1\n\t\tend\n\tend\n\ttable.sort(nums)\n\treturn nums\nend\n\nfunction export.maxIndex(t)\n\tcheckType('maxIndex', 1, t, 'table')\n\tlocal positiveIntegerKeys = export.numKeys(t)\n\tif positiveIntegerKeys[1]\
      \ then\n\t\treturn math.max(unpack(positiveIntegerKeys))\n\telse\n\t\treturn 0 -- ???\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- affixNums\n--\n-- This takes a table and returns an array\
      \ containing the numbers of keys with the\n-- specified prefix and suffix.\n-- affixNums({a1 = 'foo', a3 = 'bar', a6 = 'baz'}, \"a\")\n--\t\t↓\n-- {1, 3, 6}.\n------------------------------------------------------------------------------------\n--]]\n\
      function export.affixNums(t, prefix, suffix)\n\tlocal check = _check('affixNums')\n\tcheck(1, t, 'table')\n\tcheck(2, prefix, 'string', true)\n\tcheck(3, suffix, 'string', true)\n\t\n\tlocal function cleanPattern(s)\n\t\t-- Cleans a pattern so that the\
      \ magic characters ()%.[]*+-?^$ are interpreted literally.\n\t\ts = s:gsub('([%(%)%%%.%[%]%*%+%-%?%^%$])', '%%%1')\n\t\treturn s\n\tend\n\t\n\tprefix = prefix or ''\n\tsuffix = suffix or ''\n\tprefix = cleanPattern(prefix)\n\tsuffix = cleanPattern(suffix)\n\
      \tlocal pattern = '^' .. prefix .. '([1-9]%d*)' .. suffix .. '$'\n\t\n\tlocal nums = {}\n\tlocal index = 1\n\tfor k, _ in pairs(t) do\n\t\tif type(k) == 'string' then\n\t\t\tlocal num = mw.ustring.match(k, pattern)\n\t\t\tif num then\n\t\t\t\tnums[index]\
      \ = tonumber(num)\n\t\t\t\tindex = index + 1\n\t\t\tend\n\t\tend\n\tend\n\ttable.sort(nums)\n\treturn nums\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- numData\n--\n-- Given a table with keys like\
      \ (\"foo1\", \"bar1\", \"foo2\", \"baz2\"), returns a table\n-- of subtables in the format\n-- { [1] = {foo = 'text', bar = 'text'}, [2] = {foo = 'text', baz = 'text'} }\n-- Keys that don't end with an integer are stored in a subtable named \"other\".\n\
      -- The compress option compresses the table so that it can be iterated over with\n-- ipairs.\n------------------------------------------------------------------------------------\n--]]\nfunction export.numData(t, compress)\n\tlocal check = _check('numData')\n\
      \tcheck(1, t, 'table')\n\tcheck(2, compress, 'boolean', true)\n\t\n\tlocal ret = {}\n\tfor k, v in pairs(t) do\n\t\tlocal prefix, num = tostring(k):match('^([^0-9]*)([1-9][0-9]*)$')\n\t\tif num then\n\t\t\tnum = tonumber(num)\n\t\t\tlocal subtable = ret[num]\
      \ or {}\n\t\t\tif prefix == '' then\n\t\t\t\t-- Positional parameters match the blank string; put them at the start of the subtable instead.\n\t\t\t\tprefix = 1\n\t\t\tend\n\t\t\tsubtable[prefix] = v\n\t\t\tret[num] = subtable\n\t\telse\n\t\t\tlocal subtable\
      \ = ret.other or {}\n\t\t\tsubtable[k] = v\n\t\t\tret.other = subtable\n\t\tend\n\tend\n\tif compress then\n\t\tlocal other = ret.other\n\t\tret = export.compressSparseArray(ret)\n\t\tret.other = other\n\tend\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- compressSparseArray\n--\n-- This takes an array with one or more nil values, and removes the nil values\n-- while preserving the order, so that the array can be safely traversed with\n-- ipairs.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.compressSparseArray(t)\n\tcheckType('compressSparseArray', 1, t, 'table')\n\tlocal ret = {}\n\tlocal index = 1\n\tlocal nums = export.numKeys(t)\n\tfor _, num in ipairs(nums) do\n\t\tret[index] = t[num]\n\t\tindex = index + 1\n\t\
      end\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- sparseIpairs\n--\n-- This is an iterator for sparse arrays. It can be used like ipairs, but can\n-- handle nil values.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.sparseIpairs(t)\n\tcheckType('sparseIpairs', 1, t, 'table')\n\tlocal nums = export.numKeys(t)\n\tlocal i = 0\n\treturn function()\n\t\ti = i + 1\n\t\tlocal key = nums[i]\n\t\tif key then\n\t\t\treturn key, t[key]\n\t\telse\n\t\t\t\
      return nil, nil\n\t\tend\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- size\n--\n-- This returns the size of a key/value pair table. It will also work on arrays,\n-- but for arrays it is more\
      \ efficient to use the # operator.\n------------------------------------------------------------------------------------\n--]]\nfunction export.size(t)\n\tcheckType('size', 1, t, 'table')\n\tlocal i = 0\n\tfor _ in pairs(t) do\n\t\ti = i + 1\n\tend\n\t\
      return i\nend\n\n--[[\n-- This returns the length of a table, or the first integer key n counting from\n-- 1 such that t[n + 1] is nil. It is similar to the operator #, but may return\n-- a different value when there are gaps in the array portion of the\
      \ table.\n-- Intended to be used on data loaded with mw.loadData. For other tables, use #.\n--]]\nfunction export.length(t)\n\tlocal i = 0\n\trepeat\n\t\ti = i + 1\n\tuntil t[i] == nil\n\treturn i - 1\nend\n\n--[[\nTakes table and a value to be found.\n\
      If the value is in the array portion of the table, return true.\nIf the value is in the hashmap or not in the table, return false.\n]]\nfunction export.contains(list, x)\n\tfor _, v in ipairs(list) do\n\t\tif v == x then return true end\n\tend\n\treturn\
      \ false\nend\n\n--[[\nRecursively compare two values that may be tables, including tables with\nnested tables as values. Return true if both values are structurally equal.\nNote that this handles arbitary levels of nesting. If all tables are known\nto\
      \ be lists (with only integral keys), use export.deepEqualsList, which will\nbe more efficient.\n\nNOTE: This is *NOT* smart enough to properly handle cycles; in such a case, it\nwill get into an infinite loop.\n]]\nfunction export.deepEquals(x, y)\n \
      \   if type(x) == \"table\" and type(y) == \"table\" then\n    \t-- Two tables are the same if they have the same number of elements\n    \t-- and all keys that are present in one of the tables compare equal\n    \t-- to the corresponding keys in the other\
      \ table, using structural\n    \t-- comparison.\n    \tlocal sizex = 0\n        for key, value in pairs(x) do\n            if not export.deepEquals(value, y[key]) then\n                return false\n            end\n            sizex = sizex + 1\n    \
      \    end\n        local sizey = export.size(y)\n        if sizex ~= sizey then\n            return false\n        end \n        return true\n    end\n    return x == y\nend\n\n--[[\nRecursively compare two values that may be lists (i.e. tables with integral\n\
      keys), including lists with nested lists as values. Return true if both values\nare structurally equal. Note that this handles arbitary levels of nesting.\nResults are undefined if tables with non-integral keys are present anywhere in\neither structure;\
      \ if that may be the case, use export.deepEquals, which will\nhandle such tables correctly but be less efficient on lists than\nexport.deepEqualsList.\n\nNOTE: This is *NOT* smart enough to properly handle cycles; in such a case, it\nwill get into an infinite\
      \ loop.\n]]\nfunction export.deepEqualsList(x, y)\n    if type(x) == \"table\" and type(y) == \"table\" then\n        if #x ~= #y then\n            return false\n        end \n        for key, value in ipairs(x) do\n            if not export.deepEqualsList(value,\
      \ y[key]) then\n                return false\n            end\n        end\n        return true\n    end\n    return x == y\nend\n\n--[[\n\tFinds key for specified value in a given table.\n\tRoughly equivalent to reversing the key-value pairs in the table\
      \ –\n\t\treversed_table = { [value1] = key1, [value2] = key2, ... }\n\t– and then returning reversed_table[valueToFind].\n\t\n\tThe value can only be a string or a number\n\t(not nil, a boolean, a table, or a function).\n\t\n\tOnly reliable if there is\
      \ just one key with the specified value.\n\tOtherwise, the function returns the first key found,\n\tand the output is unpredictable.\n]]\nfunction export.keyFor(t, valueToFind)\n\tlocal check = _check('keyFor')\n\tcheck(1, t, 'table')\n\tcheck(2, valueToFind,\
      \ { 'string', 'number' })\n\t\n\tfor key, value in pairs(t) do\n\t\tif value == valueToFind then\n\t\t\treturn key\n\t\tend\n\tend\n\t\n\treturn nil\nend\n\n--[[\n\tThe default sorting function used in export.keysToList if no keySort\n\tis defined.\n]]\n\
      local function defaultKeySort(key1, key2)\n\t-- \"number\" &lt; \"string\", so numbers will be sorted before strings.\n\tlocal type1, type2 = type(key1), type(key2)\n\tif type1 ~= type2 then\n\t\treturn type1 &lt; type2\n\telse\n\t\treturn key1 &lt; key2\n\
      \tend\nend\n\n--[[\n\tReturns a list of the keys in a table, sorted using either the default\n\ttable.sort function or a custom keySort function.\n\tIf there are only numerical keys, numKeys is probably more efficient.\n]]\nfunction export.keysToList(t,\
      \ keySort, checked)\n\tif not checked then\n\t\tlocal check = _check('keysToList')\n\t\tcheck(1, t, 'table')\n\t\tcheck(2, keySort, 'function', true)\n\tend\n\t\n\tlocal list = {}\n\tlocal index = 1\n\tfor key, _ in pairs(t) do\n\t\tlist[index] = key\n\
      \t\tindex = index + 1\n\tend\n\t\n\t-- Place numbers before strings, otherwise sort using &lt;.\n\tif not keySort then\n\t\tkeySort = defaultKeySort\n\tend\n\t\n\ttable.sort(list, keySort)\n\t\n\treturn list\nend\n\n--[[\n\tIterates through a table, with\
      \ the keys sorted using the keysToList function.\n\tIf there are only numerical keys, sparseIpairs is probably more efficient.\n]]\nfunction export.sortedPairs(t, keySort)\n\tlocal check = _check('keysToList')\n\tcheck(1, t, 'table')\n\tcheck(2, keySort,\
      \ 'function', true)\n\t\n\tlocal list = export.keysToList(t, keySort, true)\n\t\n\tlocal i = 0\n\treturn function()\n\t\ti = i + 1\n\t\tlocal key = list[i]\n\t\tif key ~= nil then\n\t\t\treturn key, t[key]\n\t\telse\n\t\t\treturn nil, nil\n\t\tend\n\t\
      end\nend\n\nfunction export.reverseIpairs(list)\n\tcheckType('reverse_ipairs', 1, list, 'table')\n\t\n\tlocal i = #list + 1\n\treturn function()\n\t\ti = i - 1\n\t\tif list[i] ~= nil then\n\t\t\treturn i, list[i]\n\t\telse\n\t\t\treturn nil, nil\n\t\t\
      end\n\tend\nend\n\n--[=[\n\tJoins an array with serial comma and serial conjunction, normally \"and\".\n\tAn improvement on mw.text.listToText, which doesn't properly handle serial\n\tcommas.\n\t\n\tOptions:\n\t\t- conj\n\t\t\tConjunction to use; defaults\
      \ to \"and\".\n\t\t- italicizeConj\n\t\t\tItalicize conjunction: for [[Module:Template:also]]\n\t\t- dontTag\n\t\t\tDon't tag the serial comma and serial \"and\". For error messages, in\n\t\t\twhich HTML cannot be used.\n]=]\nfunction export.serialCommaJoin(seq,\
      \ options)\n\tlocal check = _check(\"serialCommaJoin\", \"table\")\n\tcheck(1, seq)\n\tcheck(2, options, true)\n\t\n\tlocal length = #seq\n\t\n\tif not options then\n\t\toptions = {}\n\tend\n\t\n\tlocal conj\n\tif length &gt; 1 then\n\t\tconj = options.conj\
      \ or \"and\"\n\t\tif options.italicizeConj then\n\t\t\tconj = \"''\" .. conj .. \"''\"\n\t\tend\n\tend\n\t\n\tif length == 0 then\n\t\treturn \"\"\n\telseif length == 1 then\n\t\treturn seq[1] -- nothing to join\n\telseif length == 2 then\n\t\treturn seq[1]\
      \ .. \" \" .. conj .. \" \" .. seq[2]\n\telse\n\t\tlocal comma = options.dontTag and \",\" or '&lt;span class=\"serial-comma\"&gt;,&lt;/span&gt;'\n\t\tconj = options.dontTag and ' ' .. conj .. \" \" or '&lt;span class=\"serial-and\"&gt; ' .. conj .. '&lt;/span&gt;\
      \ '\n\t\treturn table.concat(seq, \", \", 1, length - 1) ..\n\t\t\t\tcomma .. conj .. seq[length]\n\tend\nend\n\n--[[\n\tConcatenates all values in the table that are indexed by a number, in order.\n\tsparseConcat{ a, nil, c, d }  =&gt;  \"acd\"\n\tsparseConcat{\
      \ nil, b, c, d }  =&gt;  \"bcd\"\n]]\nfunction export.sparseConcat(t, sep, i, j)\n\tlocal list = {}\n\t\n\tlocal list_i = 0\n\tfor _, v in export.sparseIpairs(t) do\n\t\tlist_i = list_i + 1\n\t\tlist[list_i] = v\n\tend\n\t\n\treturn table.concat(list,\
      \ sep, i, j)\nend\n\n--[[\n\tValues of numberic keys in array portion of table are reversed:\n\t{ \"a\", \"b\", \"c\" } -&gt; { \"c\", \"b\", \"a\" }\n--]]\nfunction export.reverse(t)\n\tcheckType(\"reverse\", 1, t, \"table\")\n\t\n\tlocal new_t = {}\n\
      \tlocal new_t_i = 1\n\tfor i = #t, 1, -1 do\n\t\tnew_t[new_t_i] = t[i]\n\t\tnew_t_i = new_t_i + 1\n\tend\n\treturn new_t\nend\n\nfunction export.reverseConcat(t, sep, i, j)\n\treturn table.concat(export.reverse(t), sep, i, j)\nend\n\n-- { \"a\", \"b\"\
      , \"c\" } -&gt; { a = 1, b = 2, c = 3 }\nfunction export.invert(array)\n\tcheckType(\"invert\", 1, array, \"table\")\n\t\n\tlocal map = {}\n\tfor i, v in ipairs(array) do\n\t\tmap[v] = i\n\tend\n\t\n\treturn map\nend\n\n--[[\n\t{ \"a\", \"b\", \"c\" }\
      \ -&gt; { [\"a\"] = true, [\"b\"] = true, [\"c\"] = true }\n--]]\nfunction export.listToSet(t)\n\tcheckType(\"listToSet\", 1, t, \"table\")\n\t\n\tlocal set = {}\n\tfor _, item in ipairs(t) do\n\t\tset[item] = true\n\tend\n\treturn set\nend\n\n--[[\n\t\
      Returns true if all keys in the table are consecutive integers starting at 1.\n--]]\nfunction export.isArray(t)\n\tcheckType(\"isArray\", 1, t, \"table\")\n\t\n\tlocal i = 0\n\tfor _ in pairs(t) do\n\t\ti = i + 1\n\t\tif t[i] == nil then\n\t\t\treturn\
      \ false\n\t\tend\n\tend\n\treturn true\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:57.601Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=57470 t=1555362537495036
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:57 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 667247412, 549158724, 686910966
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6246525\" pageid=\"6246525\" ns=\"828\" title=\"Module:links/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-03-13T02:26:26Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add [[Unsupported titles/MeToo]]\" xml:space=\"preserve\">local data = {}\n\ndata.high_memory_entries = {\n\t\"a\",\n\t\"animal\",\n\t\"book\",\n\t\"coffee\",\n\t\"do\",\n\t\"e\",\n\t\"\
      language\",\n\t\"night\",\n\t\"smoke\",\n\t\"son\",\n\t\"sun\",\n\t\"water\",\n\t\"wind\",\n}\n\n\nlocal U = mw.ustring.char\nlocal soft_hyphen = U(0xAD)\n\n--[[\tThe \"actual title\" is the page name with the prefix \"Unsupported titles/\" removed.\n\t\
      \t[\"displayed_title\"] = \"actual title\"\t]]\ndata.unsupported_titles = {\n\t[\" \"] = \"Space\",\n\t[\"{\"] = \"Left curly bracket\",\n\t[\"}\"] = \"Right curly bracket\",\n\t[\"[\"] = \"Left square bracket\",\n\t[\"]\"] = \"Right square bracket\",\n\
      \t[\"&lt;\"] = \"Less than\",\n\t[\"&gt;\"] = \"Greater than\",\n\t[\"=&lt;\"] = \"Equal less than\",\n\t[\"=&gt;\"] = \"Equal greater than\",\n\t[\"&gt;=\"] = \"Greater than equal\",\n\t[\"&lt;=\"] = \"Less than equal\",\n\t[\"-&gt;\"] = \"Hyphen greater\
      \ than\",\n\t[\"&lt;-\"] = \"Less than hyphen\",\n\t[\"&gt;_&lt;\"] = \"Greater than low line less than\",\n\t[\"::\"] = \"Double colon\",\n\t[\": :\"] = \"Enclosing colons\",\n\t[\":=\"] = \"Colon equals\",\n\t[\":Þ\"] = \"Colon capital thorn\",\n\t[\"\
      :(\"] = \"Colon left paren\",\n\t[\":)\"] = \"Colon right paren\",\n\t[\"&lt;&gt;\"] = \"Less than greater than\",\n\t[\"&lt;3\"] = \"Less than three\",\n\t[\"&lt;/3\"] = \"Less than slash three\",\n\t[\"&lt; &gt;\"] = \"Enclosing less than greater than\"\
      ,\n\t[\"&lt; /&gt;\"] = \"Less than trailing slash greater than\",\n\t[\"&lt; &gt; &lt;/ &gt;\"] = \"HTML start tag end tag\",\n\t[\"&lt;!-- --&gt;\"] = \"HTML comment\",\n\t[\"&lt;g&gt;\"] = \"g tag\",\n\t[\":-(\"] = \"Colon hyphen left paren\",\n\t[\"\
      :-)\"] = \"Colon hyphen right paren\",\n\t[\"|\"] = \"Vertical line\",\n\t[\"||\"] = \"Vertical line vertical line\",\n\t[\"| |\"] = \"Enclosing vertical lines\",\n\t[\"C#\"] = \"C sharp\",\n\t[\"#\"] = \"Number sign\",\n\t[\"# #\"] = \"Enclosing number\
      \ signs\",\n\t[\":\"] = \"Colon\",\n\t[\"..\"] = \"Double period\",\n\t[\".\"] = \"Full stop\",\n\t[\"_\"] = \"Low line\",\n\t[\"-_-\"] = \"Low line interfix\",\n\t[U(0xFFFD)] = \"Replacement character\",\n\t[U(0x1680)] = \"Ogham space\",\n\t[\"[ ]\"]\
      \ = \"Square brackets\",\n\t[\"{ }\"] = \"Curly brackets\",\n\t[\"[…]\"] = \"Square bracketed ellipsis\",\n\t[\"_ _\"] = \"Enclosing low lines\",\n\t[\"C|N&gt;K\"] = \"C through N to K\",\n\t[\"#MeToo\"] = \"MeToo\",\n\t[\"о/.\"] = \"о slash dot\",\n\t\
      [\"กรุงเทพมหานคร อมรรัตนโกสินทร์ มหินทรายุธยา มหาดิลกภพ นพรัตนราชธานีบูรีรมย์ อุดมราชนิเวศน์มหาสถาน อมรพิมานอวตารสถิต สักกะทัตติยวิษณุกรรมประสิทธิ์\"] = \"Thai name of Bangkok\",\n\t[\"λοπαδοτεμαχοσελαχογαλεοκρανιολειψανοδριμυποτριμματοσιλφιοκαραβομελι\
      τοκατακεχυμενοκιχλ\" .. soft_hyphen .. \"επικοσσυφοφαττοπεριστεραλεκτρυονοπτοκεφαλλιοκιγκλοπελειολαγῳοσιραιοβαφητραγανοπτερύγων\"] = \"Ancient Greek dish\",\n\t[\":≠\"] = \":≠\",\n\t[\"S:t\"] = \"S:t\",\n\t[\"S:ta\"] = \"S:ta\",\n\t[\"c:a\"] = \"c:a\"\
      ,\n\t[\"n:a\"] = \"n:a\",\n\t[\"n:o\"] = \"n:o\",\n\t[\"n:r\"] = \"n:r\",\n\t[\"s:a\"] = \"s:a\",\n\t[\"st:a\"] = \"st:a\",\n\t[\"v:a\"] = \"v:a\",\n}\n\nfor i, item in ipairs(data.high_memory_entries) do\n\tdata.high_memory_entries[i] = nil\n\tdata.high_memory_entries[item]\
      \ = true\nend\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:57.785Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53226 t=1555362537681097
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:57 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1281.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 515900877, 509740043, 704055949
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6149597\" pageid=\"6149597\" ns=\"828\" title=\"Module:script utilities/data\"><revisions><rev user=\"DTLHS\" timestamp=\"2018-03-12T01:54:08Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local data = {}\n\ndata.translit = {\n\t[\"term\"] = {\n--[=[\tcan't be done until Kana transliterations are correctly parsed by [[Module:links]]\n\t\t[\"tag\"\
      ] = \"i\",\n\t\t]=]\n\t\t[\"classes\"] = \"mention-tr\",\n\t},\n\t[\"usex\"] = {\n\t\t[\"tag\"] = \"i\",\n\t\t[\"classes\"] = \"e-transliteration\",\n\t},\n\t[\"head\"] = {\n\t\t[\"classes\"] = \"headword-tr\",\n\t\t[\"dir\"] = \"ltr\",\n\t},\n\t[\"default\"\
      ] = {},\n}\n\ndata.transcription = {\n\t[\"head\"] = {\n\t\t[\"tag\"] = \"span\",\n\t\t[\"classes\"] = \"headword-ts\",\n\t\t[\"dir\"] = \"ltr\",\n\t},\n\t[\"default\"] = {},\n}\n\nfor key, value in pairs(data.translit) do\n\tif not value.tag then\n\t\t\
      value.tag = \"span\"\n\tend\nend\n\ndata.faces = {\n\t[\"term\"] = {\n\t\ttag = \"i\",\n\t\tclass = \"mention\",\n\t},\n\t[\"head\"] = {\n\t\ttag = \"strong\",\n\t\tclass = \"headword\",\n\t},\n\t[\"hypothetical\"] = {\n\t\tprefix = '&lt;span class=\"\
      hypothetical-star\"&gt;*&lt;/span&gt;',\n\t\ttag = \"i\",\n\t\tclass = \"hypothetical\",\n\t},\n\t[\"bold\"] = {\n\t\ttag = \"b\",\n\t},\n\t[\"translation\"] = {\n\t\ttag = \"span\",\n\t},\n\t[\"nil\"] = {\n\t\ttag = \"span\",\n\t},\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:58.183Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=39193 t=1555362538097768
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:58 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1282.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 516751572, 737845269, 704284986
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6279245\" pageid=\"6279245\" ns=\"828\" title=\"Module:utilities/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-01-04T05:57:22Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 51192985 by [[Special:Contributions/2601:CD:C101:322D:F03C:8688:907:84|2601:CD:C101:322D:F03C:8688:907:84]] ([[User talk:2601:CD:C101:322D:F03C:8688:907:84|talk]]): ???\"\
      \ xml:space=\"preserve\">local data = {}\n\ndata.notneeded = {\n\t[\"und\"] = true,\n\t[\"cmn\"] = true,\n\t[\"ja\"] = true,\n\t[\"zu\"] = true,\n\t[\"nan\"] = true,\n\t[\"yue\"] = true,\n\t[\"ko\"] = true,\n}\n\ndata.neededhassubpage = {\n\t[\"ga\"] =\
      \ true,\n\t[\"gv\"] = true,\n\t[\"nv\"] = true,\n\t[\"roa-jer\"] = true,\n\t[\"fr\"] = true,\n\t[\"rm\"] = true,\n\t[\"prg\"] = true,\n\t[\"gd\"] = true,\n\t[\"twf\"] = true,\n\t[\"en\"] = true,\n\t[\"ro\"] = true,\n\t[\"egl\"] = true,\n\t[\"roa-tar\"\
      ] = true,\n\t[\"gl\"] = true,\n\t[\"ast\"] = true,\n\t[\"br\"] = true,\n}\n\n--[[\n\tScript that should be applied to links in categories.\n]]\ndata.catfix_scripts = {\n\t[\"ab\"] = \"Cyrl\",\n\t[\"ae\"] = \"Avst\",\n\t[\"ar\"] = \"Arab\",\n\t[\"ary\"\
      ] = \"Arab\",\n\t[\"be\"] = \"Cyrl\",\n\t[\"cu\"] = \"Cyrs\",\n\t[\"el\"] = \"Grek\",\n\t[\"grc\"] = \"polytonic\",\n\t[\"he\"] = \"Hebr\",\n\t[\"ka\"] = \"Geor\",\n\t[\"orv\"] = \"Cyrs\",\n\t[\"ru\"] = \"Cyrl\",\n\t[\"sa\"] = \"Deva\",\n\t[\"syl\"] =\
      \ \"Sylo\",\n\t[\"xfa\"] = \"Ital\",\n\t[\"zle-ono\"] = \"Cyrs\",\n\t[\"hi\"] = \"Deva\",\n\t[\"mr\"] = \"Deva\",\n--[[\n\t[\"\"] = \"\",\n]]\n}\n\n-- Namespaces in which format_categories will add categories.\ndata.allowedNamespaces = {\n\t[\"\"] = true,\n\
      \t[\"Appendix\"] = true,\n\t[\"Reconstruction\"] = true,\n\t[\"Citations\"] = true,\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:58.384Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Adebug&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47029 t=1555362538282897
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:58 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 424126631, 554690725, 703141630
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4109235\" pageid=\"4109235\" ns=\"828\" title=\"Module:debug\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-12-25T05:19:47Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 51139735 by [[Special:Contributions/Erutuon|Erutuon]] ([[User talk:Erutuon|talk]]): restore if needed\" xml:space=\"preserve\">local export = {}\n\nlocal escape\ndo\n\tlocal escapes = {\n\t\
      \t[\"\\a\"] = \"a\", [\"\\b\"] = \"b\", [\"\\f\"] = \"f\", [\"\\n\"] = \"n\", [\"\\r\"] = \"r\",\n\t\t[\"\\t\"] = \"t\", [\"\\v\"] = \"v\", [\"\\\\\"] = \"\\\\\", [\"\\\"\"] = '\"', [\"'\"] = \"'\",\n\t}\n\t\n\tlocal function helper(char)\n\t\treturn escapes[char]\
      \ and \"\\\\\" .. escapes[char]\n\t\t\tor (\"\\\\%03d\"):format(char:byte())\n\tend\n\t\n\t-- Escape control characters, backslash, double quote, and bytes that aren't\n\t-- used in UTF-8.\n\t-- Escape stuff that can't be saved in a MediaWiki page, like\
      \ invalid UTF-8\n\t-- and NFD character sequences? Hard.\n\t-- Similar to string.format(\"%q\", str), which does not use C-like simple\n\t-- escapes and does not escape bytes that are not used in UTF-8.\n\tescape = function (str)\n\t\treturn (str:gsub(\"\
      [%z\\1-\\31\\\\\\\"\\127\\192\\193\\245-\\255]\", helper))\n\tend\nend\n\nexport.escape = escape\n\n-- Convert a value to a string\nfunction export.dump(value, prefix, tsort)\n\tlocal t = type(value)\n\t\n\tprefix = prefix or \"\"\n\t\n\tif t == \"string\"\
      \ then\n\t\treturn '\"' .. escape(value) .. '\"'\n\telseif t == \"table\" then\n\t\tlocal str_table = {}\n\t\t\n\t\ttable.insert(str_table, \" {\")\n\t\t\n\t\tfor key, val in require(\"Module:table\").sortedPairs(value, tsort) do\n\t\t\ttable.insert(str_table,\
      \ \" \" .. prefix .. \"\\t[\" .. export.dump(key, prefix .. \"\\t\") .. \"] = \" .. export.dump(val, prefix .. \"\\t\"):gsub(\"^ \", \"\") .. \",\")\n\t\tend\n\t\t\n\t\ttable.insert(str_table, \" \" .. prefix .. \"}\")\n\t\t\n\t\treturn table.concat(str_table,\
      \ \"\\n\")\n\telse\n\t\treturn tostring(value)\n\tend\nend\n\n\nfunction export.highlight_dump(value, prefix, tsort, options)\n\toptions = options or {}\n\t\n\tlocal func = options.modified and \"modified_dump\" or \"dump\"\n\t\n\tlocal dump = export[func](value,\
      \ prefix, tsort)\n\t\n\t-- Remove spaces at beginnings of lines (which are simply to force a &lt;pre&gt;&lt;/pre&gt; tag).\n\tdump = dump:gsub(\"^ \", \"\")\n\tdump = dump:gsub(\"\\n \", \"\\n\")\n\t\n\treturn export.highlight(dump)\nend\n\n\n-- Returns\
      \ true if table contains a table as one of its values\nlocal function containsTable(t)\n\tfor key, value in pairs(t) do\n\t\tif type(value) == \"table\" then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\n\n\nlocal function containsTablesWithSize(t,\
      \ size)\n\tfor key, value in pairs(t) do\n\t\tif type(value) == \"table\" and require(\"Module:table\").size(value) ~= size then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\t\n\n\n--[=[\n\tConvert a value to a string.\n\tLike dump below, but\
      \ if a table has consecutive numbered keys and does not\n\thave a table as one of its values, it will be placed on a single line.\n\tUsed by [[Module:User:Erutuon/script recognition]].\n]=]\nfunction export.modified_dump(value, prefix, tsort)\n\tlocal\
      \ t = type(value)\n\t\n\tprefix = prefix or \"\"\n\t\n\tif t == \"string\" then\n\t\treturn '\"' .. value .. '\"'\n\telseif t == \"table\" then\n\t\tlocal str_table = {}\n\t\t\n\t\tlocal containsTable = containsTable(value)\n\t\tlocal consecutive = require(\"\
      Module:table\").isArray(value)\n\t\tif consecutive and not containsTable or containsTable and containsTablesWithSize(value, 3) then\n\t\t\ttable.insert(str_table, \"{\")\n\t\t\t\n\t\t\tfor key, val in require(\"Module:table\").sortedPairs(value, tsort)\
      \ do\n\t\t\t\tif containsTable then\n\t\t\t\t\ttable.insert(str_table, \"\\n\\t\" .. prefix)\n\t\t\t\telse\n\t\t\t\t\ttable.insert(str_table, \" \")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif type(key) == \"string\" then\n\t\t\t\t\ttable.insert(str_table, \"[\"\
      \ .. export.modified_dump(key) .. \"] = \")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\ttable.insert(str_table, type(key) == \"number\" and type(val) == \"number\" and string.format(\"0x%05X\", val) or export.modified_dump(val))\n\t\t\t\t\n\t\t\t\tif not (consecutive\
      \ and #value == 3) or type(key) == \"number\" and value[key + 1] then\n\t\t\t\t\ttable.insert(str_table, \",\")\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif containsTable then\n\t\t\t\ttable.insert(str_table, \"\\n\" .. prefix)\n\t\t\telse\n\t\t\t\ttable.insert(str_table,\
      \ \" \")\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(str_table, \"}\")\n\t\t\treturn table.concat(str_table)\n\t\tend\n\t\t\n\t\ttable.insert(str_table, \" {\")\n\t\t\n\t\tfor key, val in require(\"Module:table\").sortedPairs(value, tsort) do\n\t\t\ttable.insert(str_table,\
      \ \" \" .. prefix .. \"\\t[\" .. export.modified_dump(key, prefix .. \"\\t\") .. \"] = \" .. export.modified_dump(val, prefix .. \"\\t\"):gsub(\"^ \", \"\") .. \",\")\n\t\tend\n\t\t\n\t\ttable.insert(str_table, \" \" .. prefix .. \"}\")\n\t\t\n\t\treturn\
      \ table.concat(str_table, \"\\n\")\n\telseif t == \"number\" and value &gt; 46 then\n\t\treturn string.format(\"0x%05X\", value)\n\telse\n\t\treturn tostring(value)\n\tend\nend\n\t\n\nfunction export.track(key)\n\tlocal frame = mw.getCurrentFrame()\n\t\
      if key then\n\t\tif type(key) ~= \"table\" then\n\t\t\tkey = { key }\n\t\tend\n\t\t\n\t\tfor i, value in pairs(key) do\n\t\t\tpcall(frame.expandTemplate, frame, { title = 'tracking/' .. value })\n\t\tend\n\telse\n\t\terror('No tracking key supplied to\
      \ the function \"' .. track .. '\".')\n\tend\nend\n\n\n-- Trigger a script error from a template\nfunction export.error(frame)\n\terror(frame.args[1] or \"(no message specified)\")\nend\n\n--[[\n\tConvenience function for generating syntaxhighlight tags.\n\
      \tDisplay defaults to block.\n\tOptions is a table. To display inline text with HTML highlighting:\n\t\t{ inline = true, lang = \"html\" }\n]]\nfunction export.highlight(content, options)\n\tif type(content) == \"table\" then\n\t\toptions = content\n\t\
      \toptions = {\n\t\t\tlang = options.lang or \"lua\",\n\t\t\tinline = options.inline and true\n\t\t}\n\t\treturn function(content)\n\t\t\treturn mw.getCurrentFrame():extensionTag{\n\t\t\t\tname = \"syntaxhighlight\",\n\t\t\t\tcontent = content,\n\t\t\t\t\
      args = options\n\t\t\t}\n\t\tend\n\telse\n\t\treturn mw.getCurrentFrame():extensionTag{\n\t\t\tname = \"syntaxhighlight\",\n\t\t\tcontent = content,\n\t\t\targs = {\n\t\t\t\tlang = options and options.lang or \"lua\",\n\t\t\t\tinline = options and options.inline\
      \ and true or nil\n\t\t\t}\n\t\t}\n\tend\nend\n\nfunction export.track_unrecognized_args(args, template_name)\n\tlocal function track(code)\n\t\texport.track(template_name .. \"/\" .. code)\n\tend\n\t\n    track(\"unrecognized arg\")\n\t\n\tlocal arg_list\
      \ = {}\n\tfor arg, value in pairs(args) do\n\t\ttrack(\"unrecognized arg/\" .. arg)\n\t\ttable.insert(arg_list, (\"|%s=%s\"):format(arg, value))\n\tend\n\t\n\tmw.log(\n\t\t(\"Unrecognized parameter%s in {{%s}}: %s.\"):format(\n\t\t\targ_list[2] and \"\
      s\" or \"\",\n\t\t\ttemplate_name,\n\t\t\ttable.concat(arg_list, \", \")))\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:08:58.554Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fderived%2Fno-term&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44745 t=1555362538467098
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '158'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:58 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 199550825, 494649320, 702128201
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/derived/no-term" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:08:59.875Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Afun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52639 t=1555362539772136
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:08:59 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1227.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 683639646, 830057528, 684324447
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6462133\" pageid=\"6462133\" ns=\"828\" title=\"Module:fun\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-06-29T07:22:11Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"stale note\" xml:space=\"preserve\">local export = {}\n\nlocal ustring = mw.ustring\nlocal libraryUtil = require \"libraryUtil\"\nlocal checkType = libraryUtil.checkType\nlocal checkTypeMulti = libraryUtil.checkTypeMulti\n\
      \nlocal iterableTypes = { \"table\", \"string\" }\n\nlocal function _check(funcName, expectType)\n\tif type(expectType) == \"string\" then\n\t\treturn function(argIndex, arg, nilOk)\n\t\t\treturn checkType(funcName, argIndex, arg, expectType, nilOk)\n\t\
      \tend\n\telse\n\t\treturn function(argIndex, arg, expectType, nilOk)\n\t\t\tif type(expectType) == \"table\" then\n\t\t\t\tif not (nilOk and arg == nil) then\n\t\t\t\t\treturn checkTypeMulti(funcName, argIndex, arg, expectType)\n\t\t\t\tend\n\t\t\telse\n\
      \t\t\t\treturn checkType(funcName, argIndex, arg, expectType, nilOk)\n\t\t\tend\n\t\tend\n\tend\nend\n\n-- Iterate over UTF-8-encoded codepoints in string.\nlocal function iterString(str)\n\tlocal iter = string.gmatch(str, \"[%z\\1-\\127\\194-\\244][\\\
      128-\\191]*\")\n\tlocal i = 0\n\tlocal function iterator()\n\t\ti = i + 1\n\t\tlocal char = iter()\n\t\tif char then\n\t\t\treturn i, char\n\t\tend\n\tend\n\t\n\treturn iterator\nend\n\nfunction export.chain(func1, func2, ...)\n\treturn func1(func2(...))\n\
      end\n\n--\tmap(function(number) return number ^ 2 end,\n--\t\t{ 1, 2, 3 })\t\t\t\t\t\t\t\t\t--&gt; { 1, 4, 9 }\n--\tmap(function (char) return string.char(string.byte(char) - 0x20) end,\n--\t\t\"abc\")\t\t\t\t\t\t\t\t\t\t\t--&gt; { \"A\", \"B\", \"C\"\
      \ }\nfunction export.map(func, iterable)\n\tlocal check = _check 'map'\n\tcheck(1, func, \"function\")\n\tcheck(2, iterable, iterableTypes)\n\t\n\tlocal array = {}\n\tlocal iterator = type(iterable) == \"string\" and iterString or iterable[1] ~= nil and\
      \ ipairs or pairs\n\tfor i_or_k, val in iterator(iterable) do\n\t\tarray[i_or_k] = func(val, i_or_k, iterable)\n\tend\n\treturn array\nend\n\nfunction export.mapIter(func, iter, iterable, initVal)\n\tlocal check = _check 'mapIter'\n\tcheck(1, func, \"\
      function\")\n\tcheck(2, iter, \"function\")\n\tcheck(3, iterable, iterableTypes, true)\n\t\n\t-- initVal could be anything\n\t\n\tlocal array = {}\n\tlocal i = 0\n\tfor x, y in iter, iterable, initVal do\n\t\ti = i + 1\n\t\tarray[i] = func(y, x, iterable)\n\
      \tend\n\treturn array\nend\n\nfunction export.forEach(func, iterable)\n\tlocal check = _check 'forEach'\n\tcheck(1, func, \"function\")\n\tcheck(2, iterable, iterableTypes)\n\t\n\tlocal iterator = type(iterable) == \"string\" and iterString or iterable[1]\
      \ ~= nil and ipairs or pairs\n\tfor i_or_k, val in iterator(iterable) do\n\t\tfunc(val, i_or_k, iterable)\n\tend\n\treturn nil\nend\n\n-------------------------------------------------\n-- From [[http://lua-users.org/wiki/CurriedLua]].\n-- reverse(...)\
      \ : take some tuple and return a tuple of elements in reverse order\n--\n-- e.g. \"reverse(1,2,3)\" returns 3,2,1\nlocal function reverse(...)\n\t-- reverse args by building a function to do it, similar to the unpack() example\n\tlocal function reverseHelper(acc,\
      \ v, ...)\n\t\tif select('#', ...) == 0 then\n\t\t\treturn v, acc()\n\t\telse\n\t\t\treturn reverseHelper(function() return v, acc() end, ...)\n\t\tend\n\tend\n\t\n\t-- initial acc is the end of the list\n\treturn reverseHelper(function() return end, ...)\n\
      end\n\nfunction export.curry(func, numArgs)\n\t-- currying 2-argument functions seems to be the most popular application\n\tnumArgs = numArgs or 2\n\t\n\t-- no sense currying for 1 arg or less\n\tif numArgs &lt;= 1 then return func end\n\t\n\t-- helper\
      \ takes an argTrace function, and number of arguments remaining to be applied\n\tlocal function curryHelper(argTrace, n)\n\t\tif n == 0 then\n\t\t\t-- kick off argTrace, reverse argument list, and call the original function\n\t\t\treturn func(reverse(argTrace()))\n\
      \t\telse\n\t\t\t-- \"push\" argument (by building a wrapper function) and decrement n\n\t\t\treturn function(onearg)\n\t\t\t\treturn curryHelper(function() return onearg, argTrace() end, n - 1)\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- push the terminal case\
      \ of argTrace into the function first\n\treturn curryHelper(function() return end, numArgs)\nend\n\n-------------------------------------------------\n\n--\tsome(function(val) return val % 2 == 0 end,\n--\t\t{ 2, 3, 5, 7, 11 })\t\t\t\t\t\t--&gt; true\n\
      function export.some(func, t)\n\tif t[1] ~= nil then -- array\n\t\tfor i, v in ipairs(t) do\n\t\t\tif func(v, i, t) then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\telse\n\t\tfor k, v in pairs(t) do\n\t\t\tif func(v, k, t) then\n\t\t\t\treturn true\n\t\
      \t\tend\n\t\tend\n\tend\n\treturn false\nend\n\n--\tall(function(val) return val % 2 == 0 end,\n--\t\t{ 2, 4, 8, 10, 12 })\t\t\t\t\t--&gt; true\nfunction export.all(func, t)\n\tif t[1] ~= nil then -- array\n\t\tfor i, v in ipairs(t) do\n\t\t\tif not func(v,\
      \ i, t) then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\telse\n\t\tfor k, v in pairs(t) do\n\t\t\tif not func(v, k, t) then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\tend\n\treturn true\nend\n\nfunction export.filter(func, t)\n\tlocal new_t = {}\n\t\
      if t[1] ~= nil then -- array\n\t\tlocal new_i = 0\n\t\tfor i, v in ipairs(t) do\n\t\t\tif func(v, i, t) then\n\t\t\t\tnew_i = new_i + 1\n\t\t\t\tnew_t[new_i] = v\n\t\t\tend\n\t\tend\n\telse\n\t\tfor k, v in pairs(t) do\n\t\t\tif func(v, k, t) then\n\t\t\
      \t\tnew_t[k] = v -- or create array?\n\t\t\tend\n\t\tend\n\tend\n\treturn new_t\nend\n\n\n-------------------------------\n-- Fancy stuff\nlocal function capture(...)\n\tlocal vals = { ... }\n\treturn function()\n\t\treturn unpack(vals)\n\tend\nend\n\n\
      -- Log input and output of function.\n-- Receives a function and returns a modified form of that function.\nfunction export.logReturnValues(func, prefix)\n\treturn function(...)\n\t\tlocal inputValues = capture(...)\n\t\tlocal returnValues = capture(func(...))\n\
      \t\tif prefix then\n\t\t\tmw.log(prefix, inputValues())\n\t\t\tmw.log(returnValues())\n\t\telse\n\t\t\tmw.log(inputValues())\n\t\t\tmw.log(returnValues())\n\t\tend\n\t\treturn returnValues()\n\tend\nend\n\nexport.log = export.logReturnValues\n\n-- Convenience\
      \ function to make all functions in a table log their input and output.\nfunction export.logAll(t)\n\tfor k, v in pairs(t) do\n\t\tif type(v) == \"function\" then\n\t\t\tt[k] = export.logReturnValues(v, tostring(k))\n\t\tend\n\tend\n\treturn t\nend\n\n\
      ----- M E M O I Z A T I O N-----\n-- metamethod that does the work\n-- Currently supports one argument and one return value.\nlocal func_key = {}\nlocal function callMethod(self, x)\n\tlocal output = self[x]\n\tif not output then\n\t\toutput = self[func_key](x)\n\
      \t\tself[x] = output\n\tend\n\treturn output\nend\n\n-- shared metatable\nlocal mt = { __call = callMethod }\n\n-- Create callable table.\nfunction export.memoize(func)\n\treturn setmetatable({ [func_key] = func }, mt)\nend\n\n-------------------------------\n\
      \nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:00.061Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AUser%3AErutuon%2Fja&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54627 t=1555362539953536
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:00 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 676604725, 504797082, 688449836
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6354052\" pageid=\"6354052\" ns=\"828\" title=\"Module:User:Erutuon/ja\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-01-09T08:23:02Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"tightening up\" xml:space=\"preserve\">local export = {}\n\nlocal find = mw.ustring.find\nlocal replace = mw.ustring.gsub\nlocal gmatch = mw.ustring.gmatch\n\nlocal kataPattern = require(\"\
      Module:scripts\").getByCode(\"Kana\"):getCharacters()\nlocal hiraPattern = require(\"Module:scripts\").getByCode(\"Hira\"):getCharacters()\nlocal kanaPattern = kataPattern .. hiraPattern\n\nlocal namespace = mw.title.getCurrentTitle().nsText\n\nlocal hiraToVowel\
      \ = mw.loadData(\"Module:User:Erutuon/ja/data\")\n\nlocal function ifNotEmpty(var)\n\tif var == \"\" then\n\t\treturn nil\n\telse\n\t\treturn var\n\tend\nend\n\nlocal function logOrThrowError(message)\n\tif namespace == \"Module\" or namespace == \"User\"\
      \ then\n\t\terror(message)\n\telse\n\t\tmw.log(message)\n\tend\nend\n\nlocal function getNonKana(kana)\n\t-- Remove non-word characters.\n\tlocal kana = replace(kana, \"%W\", \"\")\n\t\n\t-- Remove kana.\n\tlocal nonKana = replace(kana, \"[\" .. kanaPattern\
      \ .. \"]+\", \"\")\n\t\n\treturn nonKana\nend\n\nlocal function isKana(kana)\n\treturn getNonKana(kana) == \"\"\nend\n\t\nlocal function addAtIndex(list, index, item)\n\tif list[index] then\n\t\tlist[index] = list[index] .. item\n\telse\n\t\tlist[index]\
      \ = item\n\tend\nend\n\nlocal function formsLongVowel(kana1, kana2)\n\tif not (kana1 and kana2) then\n\t\treturn nil\n\tend\n\t\n\tlocal vowel = hiraToVowel[kana1]\n\t\n\tlocal isLengthenerFor = {\n\t\t[\"a\"] = { [\"あ\"] = true, },\n\t\t[\"e\"] = { [\"\
      い\"] = true, [\"え\"] = true, },\n\t\t[\"o\"] = { [\"う\"] = true, [\"お\"] = true, },\n\t\t[\"i\"] = { [\"い\"] = true, },\n\t\t[\"u\"] = { [\"う\"] = true, },\n\t}\n\t\n\tif vowel and isLengthenerFor[vowel][kana2] then\n\t\treturn true\n\telse\n\t\treturn\
      \ false\n\tend\nend\n\nlocal function tag(hira)\n\tif type(hira) == \"string\" then\n\t\treturn '&lt;span class=\"Hira\"&gt;' .. hira .. '&lt;/span&gt;'\n\tend\nend\n\nlocal function makeRow(list, length)\n\tlocal row = {}\n\t\n\tif type(list) ~= \"table\"\
      \ then\n\t\tmw.log(\"first argument to makeRow isn't table\")\n\t\treturn nil\n\tend\n\t\n\tif type(length) == \"number\" then\n\t\tfor i = #list, length - 1 do\n\t\t\ttable.insert(list, \"\")\n\t\tend\n\tend\n\t\n\tfor i, item in pairs(list) do\n\t\t\
      table.insert(row, \"| \" .. tag(item))\n\tend\n\t\n\treturn table.concat(row, \"\\n\")\nend\n\nfunction export.getUnits(kana)\n\tlocal wordChars\n\t\n\tif not isKana(kana) then\n\t\tlogOrThrowError(\"Argument 1 to getUnits, \" .. kana .. \", contains the\
      \ non-kana word characters \" .. getNonKana(kana) .. \".\")\n\t\treturn nil\n\tend\n\t\n\tif find(kana, \"[ァ-ヶ]\") then\n\t\tkana = require(\"Module:ja\").kata_to_hira(kana)\n\tend\n\t\n\tlocal isSyllabic = {\n\t\t[\"っ\"] = true,\n\t\t[\"ん\"] = true,\n\
      \t}\n\t\n\tlocal isMoraic = {\n\t\t[\"ゃ\"] = true,\n\t\t[\"ゅ\"] = true,\n\t\t[\"ょ\"] = true,\n\t}\n\t\n\tlocal units = {}\n\tlocal index = 0\n\tfor char in gmatch(kana, \".\") do\n\t\tlocal addToLast = isMoraic[char] or isSyllabic[char]\n\t\tif addToLast\
      \ and index == 0 then\n\t\t\trequire(\"Module:debug\").track(\"ruby/kana beginning with syllabic or moraic char\")\n\t\t\tlogOrThrowError(\"The symbol \" .. char .. \" cannot occur at the beginning of a string of kanji: \" .. kana .. \".\")\n\t\t\treturn\
      \ nil\n\t\tend\n\t\t\n\t\tif not addToLast then\n\t\t\tindex = index + 1\n\t\tend\n\t\t\n\t\taddAtIndex(units, index, char)\n\tend\n\t\n\treturn units\nend\n\nfunction export.divideKana(kanji, kana)\n\tif not (type(kanji) == \"string\" and type(kana) ==\
      \ \"string\") then\n\t\tmw.log(\"divideKana received improper arguments.\")\n\t\treturn nil\n\tend\n\t\n\tif not isKana(kana) then\n\t\tlogOrThrowError(\"Argument 1 to getUnits, \" .. kana .. \", contains the non-kana word characters \" .. getNonKana(kana)\
      \ .. \".\")\n\t\treturn nil\n\tend\n\t\n\tkana = replace(kana, \"[ %.-]\", \"\")\n\t\n\tlocal kanjiTable = require(\"Module:string\").matchToArray(kanji, \".\")\n\tlocal kanjiCount = #kanjiTable\n\tlocal kanaUnits = export.getUnits(kana)\n\t\n\tif not\
      \ kanaUnits then\n\t\treturn nil\n\tend\n\t\n\tif #kanaUnits &gt; kanjiCount then\n\t\tlocal i = 1\n\t\twhile i &lt;= #kanaUnits do\n\t\t\tif formsLongVowel(kanaUnits[i], kanaUnits[i + 1]) then\n\t\t\t\taddAtIndex(kanaUnits, i, kanaUnits[i + 1])\n\t\t\t\
      \ttable.remove(kanaUnits, i + 1)\n\t\t\tend\n\t\t\t\n\t\t\ti = i + 1\n\t\t\t\n\t\t\tif #kanaUnits == kanjiCount then\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn kanjiTable, kanaUnits\nend\n\nfunction export.printUnits(frame)\n\tlocal params\
      \ = {\n\t\t[1] = { list = true },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\tlocal listOfUnits = {}\n\tfor i, kana in pairs(args[1]) do\n\t\tlocal units = export.getUnits(kana)\n\t\ttable.insert(listOfUnits,\
      \ units)\n\tend\n\t\n\tlocal output = {}\n\tfor i, units in pairs(listOfUnits) do\n\t\tlocal printout = table.concat(units, \"、\")\n\t\ttable.insert(output, \"* \" .. tag(printout) .. \"&lt;br&gt;\" .. require(\"Module:ja\").kana_to_romaji(args[1][i]))\n\
      \tend\n\t\n\treturn table.concat(output, \"\\n\")\nend\n\nfunction export.showKanaDivision(frame)\n\tlocal params = {\n\t\t[1] = { list = true },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\tlocal tableWidth\
      \ = 0\n\tlocal kanjiWords, kanaWords = {}, {}\n\tfor i, arg in pairs(args[1]) do\n\t\tlocal kanjiWord, kanaWord = arg:match(\"^([^:]+):(.+)$\")\n\t\tkanjiWord, kanaWord = export.divideKana(kanjiWord, kanaWord)\n\t\tif tableWidth &lt; #kanjiWord then\n\t\
      \t\ttableWidth = #kanjiWord\n\t\tend\n\t\tif tableWidth &lt; #kanaWord then\n\t\t\ttableWidth = #kanaWord\n\t\tend\n\t\ttable.insert(kanjiWords, kanjiWord)\n\t\ttable.insert(kanaWords, kanaWord)\n\tend\n\t\n\tlocal output = { '{| class=\"wikitable\"\\\
      n' }\n\tlocal rows = {}\n\tfor i, kanaWord in ipairs(kanaWords) do\n\t\ttable.insert(rows, makeRow(kanjiWords[i], tableWidth))\n\t\ttable.insert(rows, makeRow(kanaWord, tableWidth))\n\tend\n\t\n\trows = table.concat(rows, \"\\n|-\\n\")\n\t\n\ttable.insert(output,\
      \ rows .. \"\\n|}\")\n\t\n\toutput = table.concat(output)\n\t\n\treturn output\nend\n\n-- Originally from [[Module:User:Suzukaze-c/02]]\nfunction export.r(frame)\n\tlocal one = frame.args[1] or ''\n\tlocal two = frame.args[2] or ''\n\tlocal three = frame.args[3]\
      \ or ''\n\tlocal four = frame.args[4] or ''\n\n\tlocal jp = ''\n\tlocal tr = ''\n\tlocal gloss = frame.args['gloss'] or ''\n\tlocal choice = ''\n\n\tif find(one, '[0-9]') then\n\t\tchoice = one\n\t\tjp = two\n\t\tlinktitle = three\n\t\tgloss = (gloss ~=\
      \ '' and gloss or four)\n\telseif one == 'ja' then\n\t\tchoice = ''\n\t\tjp = two\n\t\tlinktitle = three\n\t\tgloss = (gloss ~= '' and gloss or four)\n\telse\n\t\tchoice = ''\n\t\tjp = one\n\t\tlinktitle = two\n\t\tgloss = (gloss ~= '' and gloss or three)\n\
      \tend\n\t\n\tif mw.ustring.match(jp, \".%[%[[^%]]+%]%]\") then\n\t\terror(\"Cannot process Japanese text with embedded wikilinks.\")\n\tend\n\n\tlocal content = mw.title.new(jp):getContent()\n\tif not content then\n\t\treturn \"{{ja-l|\" .. jp .. \"}}\"\
      \n\tend\n\tlocal readings = {}\n\n\tlocal function process(text)\n\t\ttext = replace(text, 'hhira=[^|}]+', '')\n\t\ttext = replace(text, 'decl=[^|}]+', '')\n\t\ttext = replace(text, 'infl=[^|}]+', '')\n\t\ttext = replace(text, 'kyu=[^|}]+', '')\n\t\ttext\
      \ = replace(text, 'head=[^|}]+', '')\n\t\ttext = replace(text, 'hira=', '')\n\t\tif find(text, 'proper') then\n\t\t\ttext = '^' .. replace(text, '([ |])', '%1^')\n\t\tend\n\t\tif find(content, 'infl=い') then\n\t\t\ttext = replace(text, 'しい', 'し.い')\n\t\
      \tend\n\t\tif find(content, 'ja%-verb') then\n\t\t\ttext = replace(text, 'おう', 'お.う')\n\t\tend\n\t\tfor parameter in text:gmatch('[^|]+') do\n\t\t\tif find(parameter, '[あ-ー]') then\n\t\t\t\ttable.insert(readings, parameter)\n\t\t\tend\n\t\tend\n\tend\n\
      \n\tfor parameters in gmatch(content, '{{ja%-adj|([^}]+)}}') do\n\t\tprocess(parameters)\n\tend\n\tfor parameters in gmatch(content, '{{ja%-noun|([^}]+)}}') do\n\t\tprocess(parameters)\n\tend\n\tfor parameters in gmatch(content, '{{ja%-verb|([^}]+)}}')\
      \ do\n\t\tprocess(parameters)\n\tend\n\tfor parameters in gmatch(content, '{{ja%-verb%-suru|([^}]+)}}') do\n\t\tprocess(parameters)\n\tend\n\tfor parameters in gmatch(content, '{{ja%-phrase|([^}]+)}}') do\n\t\tprocess(parameters)\n\tend\n\tfor parameters\
      \ in gmatch(content, '{{ja%-pos|([^}]+)}}') do\n\t\tprocess(parameters)\n\tend\n\tfor parameters in gmatch(content, '{{ja%-altread|([^}]+)}}') do\n\t\tprocess(parameters)\n\tend\n\n\treadings = require(\"Module:table\").removeDuplicates(readings)\n\n\t\
      if #readings &gt; 1 then\n\t\tif choice ~= '' then\n\t\t\ttr = readings[tonumber(choice)]\n\t\telse\n\t\t\treturn '{{ja-r|' .. jp .. '|ーーーーー}}\\n' .. require(\"Module:debug\").highlight_dump(readings)\n\t\tend\n\telse\n\t\ttr = readings[1] or ''\n\tend\n\
      \n\t-- if term is pure kana and kana is identical\n\tif replace(jp, '[あ-ー]', '') == '' and tr == jp then\n\t\ttr = ''\n\tend\n\n\tif gloss ~= '' then\n\t\tgloss = ': ' .. gloss\n\tend\n\n\tif tr ~= '' then\n\t\ttr = '|' .. tr\n\tend\n\n\tif linktitle ~=\
      \ '' then\n\t\tjp = 'linkto=' .. jp .. '|' .. linktitle\n\tend\n\t\n\tif tr ~= '' then\n\t\treturn '{{ja-r|' .. jp .. tr .. '}}' .. gloss\n\telse\n\t\treturn '{{ja-l|' .. jp .. '}}' .. gloss\n\tend\n\n\t--[[\n\n\t変換済みの言葉を再変換\n\t・選択してスペースキーを押す\n\t・選択して\
      Win+Cを押す\n\n\t]]\nend\n\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:00.248Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AUser%3AErutuon%2Fja%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=57285 t=1555362540143985
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '4075'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:00 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 593126748, 825312397, 687827518
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6515081\" pageid=\"6515081\" ns=\"828\" title=\"Module:User:Erutuon/ja/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-01-09T06:57:57Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"copied from [[Module:User:Erutuon/ja]]\" xml:space=\"preserve\">return {\n\t[\"づ\"] = \"u\",\n\t[\"ゔぃぇ\"] = \"e\",\n\t[\"ば\"] = \"a\",\n\t[\"だ\"] = \"a\",\n\t[\"うぃ\"] = \"i\",\n\t[\"ぎゃ\
      \"] = \"a\",\n\t[\"うゅ\"] = \"u\",\n\t[\"つぃ\"] = \"i\",\n\t[\"いぇ\"] = \"e\",\n\t[\"にゃ\"] = \"a\",\n\t[\"ふ\"] = \"u\",\n\t[\"びゅ\"] = \"u\",\n\t[\"みゅ\"] = \"u\",\n\t[\"ぴ\"] = \"i\",\n\t[\"うぇ\"] = \"e\",\n\t[\"りょ\"] = \"o\",\n\t[\"ちゃ\"] = \"a\",\n\t[\"ぴゃ\"\
      ] = \"a\",\n\t[\"ぐぃ\"] = \"i\",\n\t[\"ぐぉ\"] = \"o\",\n\t[\"ふぁ\"] = \"a\",\n\t[\"た\"] = \"a\",\n\t[\"ひぇ\"] = \"e\",\n\t[\"つぇ\"] = \"e\",\n\t[\"ぞ\"] = \"o\",\n\t[\"ちょ\"] = \"o\",\n\t[\"しゃ\"] = \"a\",\n\t[\"ゔぇ\"] = \"e\",\n\t[\"いぃ\"] = \"i\",\n\t[\"ち\"] =\
      \ \"i\",\n\t[\"す\"] = \"u\",\n\t[\"ふょ\"] = \"o\",\n\t[\"しぇ\"] = \"e\",\n\t[\"く\"] = \"u\",\n\t[\"け\"] = \"e\",\n\t[\"ず\"] = \"u\",\n\t[\"ゔぃ\"] = \"i\",\n\t[\"さ\"] = \"a\",\n\t[\"にぇ\"] = \"e\",\n\t[\"みゃ\"] = \"a\",\n\t[\"き\"] = \"i\",\n\t[\"こ\"] = \"o\"\
      ,\n\t[\"お\"] = \"o\",\n\t[\"しょ\"] = \"o\",\n\t[\"ぱ\"] = \"a\",\n\t[\"る゜\"] = \"u\",\n\t[\"てゅ\"] = \"u\",\n\t[\"わ\"] = \"a\",\n\t[\"ゔゅ\"] = \"u\",\n\t[\"え\"] = \"e\",\n\t[\"じゃ\"] = \"a\",\n\t[\"ろ\"] = \"o\",\n\t[\"うぁ\"] = \"a\",\n\t[\"うぉ\"] = \"o\",\n\t\
      [\"む\"] = \"u\",\n\t[\"ふぃ\"] = \"i\",\n\t[\"つ\"] = \"u\",\n\t[\"ぎょ\"] = \"o\",\n\t[\"ぜ\"] = \"e\",\n\t[\"ざ\"] = \"a\",\n\t[\"ぼ\"] = \"o\",\n\t[\"ぶ\"] = \"u\",\n\t[\"じょ\"] = \"o\",\n\t[\"ふぃぇ\"] = \"e\",\n\t[\"ふぉ\"] = \"o\",\n\t[\"つぁ\"] = \"a\",\n\t[\"う\"\
      ] = \"u\",\n\t[\"へ\"] = \"e\",\n\t[\"ね\"] = \"e\",\n\t[\"ぐぇ\"] = \"e\",\n\t[\"ぴぇ\"] = \"e\",\n\t[\"すぃ\"] = \"i\",\n\t[\"ろ゜\"] = \"o\",\n\t[\"ヹ\"] = \"e\",\n\t[\"ま\"] = \"a\",\n\t[\"し\"] = \"i\",\n\t[\"にゅ\"] = \"u\",\n\t[\"きょ\"] = \"o\",\n\t[\"ちぇ\"] = \"\
      e\",\n\t[\"ひょ\"] = \"o\",\n\t[\"ずぃ\"] = \"i\",\n\t[\"ぺ\"] = \"e\",\n\t[\"れ゜\"] = \"e\",\n\t[\"ぽ\"] = \"o\",\n\t[\"い\"] = \"i\",\n\t[\"ぬ\"] = \"u\",\n\t[\"ぎぇ\"] = \"e\",\n\t[\"くぉ\"] = \"o\",\n\t[\"ぢゅ\"] = \"u\",\n\t[\"ぐゎ\"] = \"a\",\n\t[\"みぇ\"] = \"e\"\
      ,\n\t[\"ヷ\"] = \"a\",\n\t[\"に\"] = \"i\",\n\t[\"ほ\"] = \"o\",\n\t[\"つゅ\"] = \"u\",\n\t[\"ちゅ\"] = \"u\",\n\t[\"ぴょ\"] = \"o\",\n\t[\"ふゃ\"] = \"a\",\n\t[\"び\"] = \"i\",\n\t[\"の\"] = \"o\",\n\t[\"でゅ\"] = \"u\",\n\t[\"ぷ\"] = \"u\",\n\t[\"びゃ\"] = \"a\",\n\t\
      [\"ほぅ\"] = \"u\",\n\t[\"ご\"] = \"o\",\n\t[\"びぇ\"] = \"e\",\n\t[\"ぴゅ\"] = \"u\",\n\t[\"な\"] = \"a\",\n\t[\"ふぇ\"] = \"e\",\n\t[\"びょ\"] = \"o\",\n\t[\"ぢ\"] = \"i\",\n\t[\"そ\"] = \"o\",\n\t[\"ぶぃ\"] = \"i\",\n\t[\"や\"] = \"a\",\n\t[\"ぎ\"] = \"i\",\n\t[\"ヺ\"\
      ] = \"o\",\n\t[\"しゅ\"] = \"u\",\n\t[\"げ\"] = \"e\",\n\t[\"つぉ\"] = \"o\",\n\t[\"か\"] = \"a\",\n\t[\"ふゅ\"] = \"u\",\n\t[\"が\"] = \"a\",\n\t[\"きゃ\"] = \"a\",\n\t[\"じゅ\"] = \"u\",\n\t[\"あ\"] = \"a\",\n\t[\"ひ\"] = \"i\",\n\t[\"とぅ\"] = \"u\",\n\t[\"ど\"] = \"\
      o\",\n\t[\"れ\"] = \"e\",\n\t[\"て\"] = \"e\",\n\t[\"にょ\"] = \"o\",\n\t[\"ゐ\"] = \"i\",\n\t[\"ぎゅ\"] = \"u\",\n\t[\"ゔぁ\"] = \"a\",\n\t[\"せ\"] = \"e\",\n\t[\"ぢょ\"] = \"o\",\n\t[\"ゔ\"] = \"u\",\n\t[\"ひゅ\"] = \"u\",\n\t[\"べ\"] = \"e\",\n\t[\"ゔょ\"] = \"o\",\n\
      \t[\"と\"] = \"o\",\n\t[\"てぃ\"] = \"i\",\n\t[\"きゅ\"] = \"u\",\n\t[\"じ\"] = \"i\",\n\t[\"め\"] = \"e\",\n\t[\"も\"] = \"o\",\n\t[\"でぃ\"] = \"i\",\n\t[\"みょ\"] = \"o\",\n\t[\"くぃ\"] = \"i\",\n\t[\"くぁ\"] = \"a\",\n\t[\"りゃ\"] = \"a\",\n\t[\"ら゜\"] = \"a\",\n\t[\"\
      り\"] = \"i\",\n\t[\"ゆ\"] = \"u\",\n\t[\"くゎ\"] = \"a\",\n\t[\"りゅ\"] = \"u\",\n\t[\"きぇ\"] = \"e\",\n\t[\"ぐぁ\"] = \"a\",\n\t[\"み\"] = \"i\",\n\t[\"ぢゃ\"] = \"a\",\n\t[\"ゔぉ\"] = \"o\",\n\t[\"じぇ\"] = \"e\",\n\t[\"りぇ\"] = \"e\",\n\t[\"どぅ\"] = \"u\",\n\t[\"で\"\
      ] = \"e\",\n\t[\"る\"] = \"u\",\n\t[\"ヸ\"] = \"i\",\n\t[\"うぅ\"] = \"u\",\n\t[\"を\"] = \"o\",\n\t[\"り゜\"] = \"i\",\n\t[\"くぇ\"] = \"e\",\n\t[\"ぐ\"] = \"u\",\n\t[\"ゑ\"] = \"e\",\n\t[\"ゔゃ\"] = \"a\",\n\t[\"ひゃ\"] = \"a\",\n\t[\"は\"] = \"a\",\n\t[\"ら\"] = \"\
      a\",\n\t[\"よ\"] = \"o\",\n}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:00.417Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=31113 t=1555362540343510
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:00 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 417681876, 490785642, 699475754
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:09:00.580Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc%2Fredundant&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49501 t=1555362540487608
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:00 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 921715769, 503587139, 704547356
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc/redundant" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:09:00.737Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc%2Fredundant%2FJpan&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43430 t=1555362540650681
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '166'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:00 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 679319528, 586936944, 701702910
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc/redundant/Jpan" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:09:01.894Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Ftracking&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56603 t=1555362541791028
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:01 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1316.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 592701943, 613797251, 705070675
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6315460\" pageid=\"6315460\" ns=\"828\" title=\"Module:IPA/tracking\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-11-21T19:51:11Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"fixing module error in [[pianoforte]]\" xml:space=\"preserve\">local export = {}\n\n--[[\n\tsymb is what is tracked. It can be a literal symbol or a Lua pattern.\n\tIf it is a table, tracking\
      \ is added for any of the symbols in the list.\n\t\n\tcat is the subtemplate that is added to the default path \"IPA/\" + language code + \"/\".\n]]\n\nlocal U = mw.ustring.char\n\nlocal syllabic = U(0x329)\n\nexport.tracking = {\n\ten = {\n\t\t{\n\t\t\
      \tsymb = \"iə\",\n\t\t\tcat = \"ambig\",\n\t\t},\n\t\t{\n\t\t\tsymb = { \"ɪi\", \"ʊu\", \"ɪj\", \"ʊw\" },\n\t\t\tcat = \"eeoo\",\n\t\t},\n\t\t{\n\t\t\tsymb = { \"r\" },\n\t\t\tcat = \"plain r\",\n\t\t},\n\t},\n\tcs = {\n\t\t{\n\t\t\tsymb = \"[mnrl]\" ..\
      \ syllabic,\n\t\t\tcat = \"syllabic-consonant\",\n\t\t},\n\t},\n\tps = {\n\t\t{\n\t\t\tsymb = \"ɤ\",\n\t\t\tcat = \"Pashto\",\n\t\t},\n\t},\n\tfa = {\n\t\t{\n\t\t\tsymb = \"ʔ\",\n\t\t\tcat = \"glottal-stop\",\n\t\t},\n\t},\n\t{\n\t\t{\n\t\t\tsymb = \"\"\
      ,\n\t\t\tcat = \"\",\n\t\t},\n\t},\n}\n\nfunction export.run_tracking(IPA, lang)\n\tif not IPA or IPA == \"\" then\n\t\treturn nil\n\tend\n\t\n\tlang = lang:getCode()\n\t\n\tif not export.tracking[lang] or type(export.tracking[lang]) ~= \"table\" then\n\
      \t\treturn nil\n\tend\n\t\n\tfor i, arguments in ipairs(export.tracking[lang]) do\n\t\tif type(arguments) == \"table\" then\n\t\t\tlocal required = { \"symb\", \"cat\" }\n\t\t\t\n\t\t\thasArgs = true\n\t\t\t\n\t\t\tfor i, arg in pairs(required) do\n\t\t\
      \t\tif not arguments[arg] or arguments[arg] == \"\" then\n\t\t\t\t\thasArgs = false\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif hasArgs == true then\n\t\t\t\tlocal symbols = arguments.symb\n\t\t\t\tlocal category = arguments.cat\n\t\t\t\t\n\t\t\t\tif type(symbols)\
      \ == \"string\" then\n\t\t\t\t\tsymbols = { symbols }\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tfor _, symbol in pairs(symbols) do\n\t\t\t\t\tif type(symbol) ~= \"string\" then\n\t\t\t\t\t\treturn nil\n\t\t\t\t\tend\n\t\t\t\t\tif mw.ustring.find(IPA, symbol) then\n\
      \t\t\t\t\t\trequire(\"Module:debug\").track(\"IPA/\" .. lang .. \"/\" .. category)\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:02.989Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=36265 t=1555362542904206
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:02 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1339.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 207891934, 264579449, 704285242
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6074448\" pageid=\"6074448\" ns=\"828\" title=\"Module:headword/data\"><revisions><rev user=\"Surjection\" timestamp=\"2019-01-11T21:27:17Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"they are not lemmas just because you say they are\" xml:space=\"preserve\">local data = {}\n\ndata.invariable = {\n\t\"cmavo\",\n\t\"cmene\",\n\t\"fu'ivla\",\n\t\"gismu\",\n\t\"Han tu\"\
      ,\n\t\"hanzi\",\n\t\"hanja\",\n\t\"jyutping\",\n\t\"kanji\",\n\t\"lujvo\",\n\t\"phrasebook\",\n\t\"pinyin\",\n\t\"rafsi\",\n\t\"romaji\",\n}\n\ndata.lemmas = {\n\t\"abbreviations\",\n\t\"acronyms\",\n\t\"adjectives\",\n\t\"adnominals\",\n\t\"adpositions\"\
      ,\n\t\"adverbs\",\n\t\"affixes\",\n\t\"ambipositions\",\n\t\"articles\",\n\t\"circumfixes\",\n\t\"circumpositions\",\n\t\"classifiers\",\n\t\"cmavo\",\n\t\"cmavo clusters\",\n\t\"cmene\",\n\t\"combining forms\",\n\t\"conjunctions\",\n\t\"counters\",\n\t\
      \"determiners\",\n\t\"diacritical marks\",\n\t\"equative adjectives\",\n\t\"fu'ivla\",\n\t\"gismu\",\n\t\"Han characters\",\n\t\"Han tu\",\n\t\"hanzi\",\n\t\"hanja\",\n\t\"idioms\",\n\t\"infixes\",\n\t\"interfixes\",\n\t\"initialisms\",\n\t\"interjections\"\
      ,\n\t\"kanji\",\n\t\"letters\",\n\t\"ligatures\",\n\t\"lujvo\",\n\t\"morphemes\",\n\t\"non-constituents\",\n\t\"nouns\",\n\t\"numbers\",\n\t\"numeral symbols\",\n\t\"numerals\",\n\t\"particles\",\n\t\"phrases\",\n\t\"postpositions\",\n\t\"predicatives\"\
      ,\n\t\"prefixes\",\n\t\"prepositions\",\n\t\"prepositional phrases\",\n\t\"preverbs\",\n\t\"pronominal adverbs\",\n\t\"pronouns\",\n\t\"proverbs\",\n\t\"proper nouns\",\n\t\"punctuation marks\",\n\t\"relatives\",\n\t\"roots\",\n\t\"stems\",\n\t\"suffixes\"\
      ,\n\t\"syllables\",\n\t\"symbols\",\n\t\"verbs\",\n}\n\ndata.nonlemmas = {\n\t\"active participles\",\n\t\"adjectival participles\",\n\t\"adjective forms\",\n\t\"adjective comparative forms\", -- TODO: replace with \"comparative adjectives\" or \"comparative\
      \ adjective forms\", depending on which one the word is\n\t\"adjective feminine forms\",\n\t\"adjective equative forms\",\n\t\"adjective plural forms\",\n\t\"adjective superlative forms\", -- TODO: replace with \"superlative adjectives\" or \"superlative\
      \ adjective forms\", depending on which one the word is\n\t\"adverb forms\",\n\t\"adverb comparative forms\", -- TODO: replace with \"comparative adverbs\" or \"comparative adverb forms\", depending on which one the word is\n\t\"adverb superlative forms\"\
      , -- TODO: replace with \"superlative adverbs\" or \"superlative adverb forms\", depending on which one the word is\n\t\"adverbial participles\",\n\t\"agent participles\",\n\t\"article forms\",\n\t\"circumfix forms\",\n\t\"combined forms\",\n\t\"comparative\
      \ adjective forms\",\n\t\"comparative adjectives\",\n\t\"comparative adverb forms\",\n\t\"comparative adverbs\",\n\t\"contractions\",\n\t\"converbs\",\n\t\"determiner comparative forms\",\n\t\"determiner forms\",\n\t\"determiner superlative forms\",\n\t\
      \"diminutive nouns\",\n\t\"future participles\",\n\t\"gerunds\",\n\t\"infinitive forms\",\n\t\"infinitives\",\n\t\"interjection forms\",\n\t\"jyutping\",\n\t\"kanji readings\",\n\t\"misspellings\",\n\t\"negative participles\",\n\t\"nominal participles\"\
      ,\n\t\"noun case forms\",\n\t\"noun dual forms\",\n\t\"noun forms\",\n\t\"noun plural forms\",\n\t\"noun possessive forms\",\n\t\"noun singulative forms\",\n\t\"numeral forms\",\n\t\"participles\",\n\t\"participle forms\",\n\t\"particle forms\",\n\t\"\
      passive participles\",\n\t\"past active participles\",\n\t\"past participles\",\n\t\"past participle forms\",\n\t\"past passive participles\",\n\t\"perfect active participles\",\n\t\"perfect participles\",\n\t\"perfect passive participles\",\n\t\"pinyin\"\
      ,\n\t\"plurals\",\n\t\"postposition forms\",\n\t\"prefix forms\",\n\t\"preposition contractions\",\n\t\"preposition forms\",\n\t\"prepositional pronouns\",\n\t\"present active participles\",\n\t\"present participles\",\n\t\"present passive participles\"\
      ,\n\t\"pronoun forms\",\n\t\"pronoun possessive forms\",\n\t\"proper noun forms\",\n\t\"proper noun plural forms\",\n\t\"rafsi\",\n\t\"romanizations\",\n        \"root forms\",\n\t\"singulatives\",\n\t\"suffix forms\",\n\t\"superlative adjective forms\"\
      ,\n\t\"superlative adjectives\",\n\t\"superlative adverb forms\",\n\t\"superlative adverbs\",\n\t\"verb forms\",\n\t\"verbal nouns\",\n}\n\ndata.notranslit = {\n\t\"ams\",\n\t\"az\",\n\t\"bbc\",\n\t\"bug\",\n\t\"cia\",\n\t\"cjm\",\n\t\"cmn\",\n\t\"hak\"\
      ,\n\t\"ja\",\n\t\"kzg\",\n\t\"lad\",\n\t\"lzh\",\n\t\"ms\",\n\t\"mul\",\n\t\"mvi\",\n\t\"nan\",\n\t\"oj\",\n\t\"okn\",\n\t\"pi\",\n\t\"ro\",\n\t\"ryn\",\n\t\"rys\",\n\t\"ryu\",\n\t\"sh\",\n\t\"tgt\",\n\t\"th\",\n\t\"tkn\",\n\t\"tly\",\n\t\"und\",\n\t\"\
      vi\",\n\t\"xug\",\n\t\"yue\",\n\t\"yoi\",\n\t\"yox\",\n\t\"za\",\n\t\"zh\",\n}\n\n-- Script codes for which a script-tagged display title will be added.\t\ndata.toBeTagged = {\n\t\"Ahom\",\n\t\"Arab\",\n\t\"Avst\",\n\t\"Bali\",\n\t\"Cham\",\n\t\"Copt\"\
      ,\n\t\"Kali\",\n\t\"Hani\",\n\t\"Hebr\",\n\t\"Lana\",\n\t\"Linb\",\n\t\"Mand\",\n\t\"Mong\",\n\t\"polytonic\",\n\t\"Rjng\",\n\t\"Samr\",\n\t\"Sund\",\n\t\"Sylo\",\n\t\"Tang\",\n\t\"Tavt\",\n\t\"Xsux\",\n}\n\nfor key, list in pairs(data) do\n\tdata[key]\
      \ = require(\"Module:utils\").list_to_set(list)\nend\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:03.154Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autils&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=35345 t=1555362543068142
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:03 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1280.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 513381842, 652742283, 701472575
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4882600\" pageid=\"4882600\" ns=\"828\" title=\"Module:utils\"><revisions><rev user=\"Metaknowledge\" timestamp=\"2017-09-23T01:00:56Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Protected &quot;[[Module:utils]]&quot;: Highly visible template/module ([Edit=Allow only autoconfirmed users] (indefinite) [Move=Allow only autoconfirmed users] (indefinite))\" xml:space=\"\
      preserve\">--[=[\n  Module:utils v0.3.1\n  Date: 2015-08-14\n\n  This module contains some common useful functions.\n  Fill free to add another universal functions here.\n]=]--\n\nlocal export = {}\n\n-- Function to clone table (sometimes it works better\
      \ then mw.clone)\nfunction export.clone(original)\n    local copy = {}\n    for key, value in pairs(original) do\n        copy[key] = value\n    end\n    return copy\nend\n\n-- Function to get current PAGENAME and related\nfunction export.get_base()\n\t\
      local PAGENAME = mw.title.getCurrentTitle().text\n\tlocal SUBPAGENAME = mw.title.getCurrentTitle().subpageText\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\t\n\tif NAMESPACE == 'User' or NAMESPACE == 'Участник' then\n\t\treturn SUBPAGENAME\n\
      \tend\n\treturn PAGENAME\nend\n\n-- Function to iterate table with sorted keys (sorting function can be different)\nfunction export.spairs(t, order)\n    -- collect the keys\n    local keys = {}\n    for k in pairs(t) do keys[#keys+1] = k end\n    -- sort\n\
      \    if order then\n        table.sort(keys, function(a,b) return order(t, a, b) end)\n    else\n        table.sort(keys)\n    end\n    -- return the iterator function\n    local i = 0\n    return function()\n        i = i + 1\n        if keys[i] then\n\
      \            return keys[i], t[keys[i]]\n        end\n    end\nend\n\n-- Functions to measure working time of scripts (start)\nfunction export.start()\n\texport.started = os.clock()\nend\n\n-- Functions to measure working time of scripts (stop)\nfunction\
      \ export.stop(desc)\n\texport.stoped = os.clock()\n\texport.delta = export.stoped - export.started\n\tif desc == nil then\n\t\tdesc = 'time delta'\n\tend\n\tmw.log('™ ' .. desc .. ' = ' .. export.delta)\nend\n\n-- Function to find common part (length)\
      \ of two strings\n-- (common part from the beginning of strings)\nfunction export.find_common(str_1, str_2)\n\tif not str_1 or not str_2 then\n\t\treturn 1\n\tend\n\tfor pos = 1, #str_1 do\n\t    local char_1 = str_1:sub(pos, pos)\n\t    local char_2 =\
      \ str_2:sub(pos, pos)\n\t    if char_1 ~= char_2 then\n\t    \treturn pos\n\t    end\n\tend\n\treturn 1\nend\n\n-- Function that allows easily add values into dict of dicts of lists\n-- Example of this structure:\n--   dict = {\n--     key1 = {\n--   \
      \    sub_key1 = {value1, value2, value3},\n--       sub_key2 = {value4, value5},\n--     },\n--     key2 = {\n--       sub_key3 = {value6},\n--       sub_key4 = {value7, value8},\n--     },\n--   }\nfunction export.put_value(dict, key, sub_key, value)\n\
      \tif not dict[key] then\n\t\tdict[key] = {}\n\tend\n\tif not dict[key][sub_key] then\n\t\tdict[key][sub_key] = {}\n\tend\n\ttable.insert(dict[key][sub_key], value)\nend\n\n-- Compare two items, recursively comparing lists.\n-- FIXME, doesn't work for tables\
      \ that aren't lists.\nfunction export.equals(x, y)\n    if type(x) == \"table\" and type(y) == \"table\" then\n        if #x ~= #y then\n            return false\n        end \n        for key, value in ipairs(x) do\n            if not export.equals(value,\
      \ y[key]) then\n                return false\n            end\n        end\n        return true\n    end\n    return x == y\nend\n\n-- true if list contains item\nfunction export.contains(tab, item)\n    for _, value in pairs(tab) do\n        if export.equals(value,\
      \ item) then\n            return true\n        end\n    end\n    return false\nend\n\n-- append to list if element not already present\nfunction export.insert_if_not(tab, item)\n    if not export.contains(tab, item) then\n        table.insert(tab, item)\n\
      \    end\nend\n\n-- convert list to set\nfunction export.list_to_set(list)\n\tlocal set = {}\n\tfor _, item in ipairs(list) do\n\t\tset[item] = true\n\tend\n\treturn set\nend\n\n-- Inhibit Regular Expression magic characters ^$()%.[]*+-?)\nfunction export.escape(value)\n\
      \    -- Prefix every non-alphanumeric character (%W) with a % escape character, \n    -- where %% is the % escape, and %1 is original character\n    return mw.ustring.gsub(value, \"(%W)\",\"%%%1\")\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:03.888Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc%2Fredundant%2FLatn&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42568 t=1555362543801707
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:03 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 922899632, 650254812, 698297490
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc/redundant/Latn" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:09:04.270Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aborrowed&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52367 t=1555362544172757
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1225.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 212573708, 730319573, 704416572
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="2221629" pageid="2221629" ns="10" title="Template:borrowed"><revisions><rev user="Rua" timestamp="2017-11-12T19:36:33Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:etymology/templates|borrowed}}&lt;!--

      --&gt;&lt;includeonly&gt;&lt;!--
      --&gt;{{#if:{{{withtext|}}}|[[Category:bor with withtext]]}}&lt;!--
      --&gt;&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:09:04.455Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fborrowed%2Fno-term&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46983 t=1555362544364536
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1287.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 926001763, 262606658, 690644098
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/borrowed/no-term" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:09:04.983Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aaccent+qualifier&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=59681 t=1555362544876850
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 681021946, 508693577, 705560915
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4830341\" pageid=\"4830341\" ns=\"828\" title=\"Module:accent qualifier\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-07-09T19:52:04Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"convert to using aliases table\" xml:space=\"preserve\">local export = {}\nlocal m_qualifier = require(\"Module:qualifier\")\n\nfunction export.format_qualifiers(qualifiers)\n\tlocal m_data\
      \ = mw.loadData(\"Module:accent qualifier/data\")\n\t\n\tif type(qualifiers) ~= \"table\" then\n\t\tqualifiers = { qualifiers }\n\tend\n\t\n\tlocal accents = {}\n\tlocal categories = {}\n\t\n\tfor _, accent in ipairs(qualifiers) do\n\t\tlocal data\n\t\t\
      \n\t\t-- Replace an alias with the label that has a data table.\n\t\tif m_data.aliases[accent] then\n\t\t\taccent = m_data.aliases[accent]\n\t\tend\n\t\t\n\t\t-- Retrieve the label's data table.\n\t\tif m_data.labels[accent] then\n\t\t\tdata = m_data.labels[accent]\n\
      \t\tend\n\t\t\n\t\t-- Use the link and displayed text in the data table, if they exist.\n\t\tif data then\n\t\t\tif data.link then\n\t\t\t\ttable.insert(accents, \"[[w:\" .. data.link .. \"|\" ..\n\t\t\t\t\t(data.display or data.link) .. \"]]\")\n\t\t\t\
      elseif data.display then\n\t\t\t\ttable.insert(accents, data.display)\n\t\t\tend\n\t\t\t\n\t\t\t--[[\n\t\t\tif data[accent] then\n\t\t\t\tif data[accent].type == \"sound change\" then\n\t\t\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms\
      \ with pronunciations exhibiting \" .. accent)\n\t\t\t\tend\n\t\t\tend\n\t\t\t]]\n\t\telse\n\t\t\ttable.insert(accents, accent)\n\t\tend\n\tend\n\t\n\treturn m_qualifier.format_qualifier(accents)\nend\n\n-- Called by {{accent}} or {{a}}.\nfunction export.show(frame)\n\
      \tlocal args = frame.getParent and frame:getParent().args or frame\n\t\n\tif (not args[1] or args[1] == \"\") and mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\treturn m_qualifier.format_qualifier{ '{{{1}}}' }\n\tend\n\t\n\tlocal params =\
      \ {\n\t\t[1] = {required = true, list = true}\n\t}\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\treturn export.format_qualifiers(args[1])\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:05.153Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aqualifier&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41489 t=1555362545065597
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1312.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 214994804, 562840859, 702651127
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6098679\" pageid=\"6098679\" ns=\"828\" title=\"Module:qualifier\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-05-08T23:55:07Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"allow string to be supplied to format_qualifier\" xml:space=\"preserve\">local export = {}\n\nfunction export.format_qualifier(list)\n\tif type(list) ~= \"table\" then\n\t\tlist = { list\
      \ }\n\tend\n\t\n\tif #list == 0 then\n\t\treturn ''\n\tend\n\n\treturn '&lt;span class=\"ib-brac qualifier-brac\"&gt;(&lt;/span&gt;' ..\n\t       '&lt;span class=\"ib-content qualifier-content\"&gt;' ..\n\t       table.concat(list, '&lt;span class=\"ib-comma\
      \ qualifier-comma\"&gt;,&lt;/span&gt; ') ..\n\t\t   '&lt;/span&gt;&lt;span class=\"ib-brac qualifier-brac\"&gt;)&lt;/span&gt;'\nend\n\nfunction export.qualifier_t(frame)\n\tlocal params = {\n\t   [1] = {list = true, required = true},\n\t}\n\t\n\tlocal\
      \ args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal subvarieties = mw.loadData(\"Module:qualifier/subvarieties\")\n\t\n\tfor i, label in ipairs(args[1]) do\n\t\tif subvarieties[label] then\n\t\t\trequire(\"Module:debug\"\
      ).track(\"qualifier/subvarieties\")\n\t\t\t--[[\n\t\t\t\tcurrently not working:\n\t\t\tlocal lang = subvarieties[label].languages[1]\n\t\t\trequire(\"Module:debug\").track(\"qualifier/subvarieties/\" .. lang)\n\t\t\t]]\n\t\tend\n\tend\n\n\treturn export.format_qualifier(args[1])\n\
      end\n\nfunction export.sense_t(frame)\n\tlocal params = {\n\t   [1] = {list = true, required = true},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn export.format_qualifier(args[1])\n\t\t.. '&lt;span\
      \ class=\"ib-colon sense-qualifier-colon\"&gt;:&lt;/span&gt;'\nend\n\nfunction export.gloss_t(frame)\n\tlocal params = {\n\t   [1] = {required = true},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\t\
      return '&lt;span class=\"gloss-brac\"&gt;(&lt;/span&gt;&lt;span class=\"gloss-content\"&gt;' ..\n\t\t\targs[1] .. '&lt;/span&gt;&lt;span class=\"gloss-brac\"&gt;)&lt;/span&gt;'\nend\n\nfunction export.non_gloss_definition_t(frame)\n\tlocal params = {\n\
      \t   [1] = {required = true},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn '&lt;span class=\"use-with-mention\"&gt;' .. require(\"Module:links\").english_links(args[1]) .. '&lt;/span&gt;'\nend\n\
      \t\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:05.373Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aaccent+qualifier%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=70838 t=1555362545235749
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1287.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 208904727, 637096045, 705202017
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4830339\" pageid=\"4830339\" ns=\"828\" title=\"Module:accent qualifier/data\"><revisions><rev user=\"Knyȝt\" timestamp=\"2019-04-06T17:47:51Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\n\nlocal CE = '&lt;small class=\"ce-date2\"&gt;CE&lt;/small&gt;'\nlocal BCE = '&lt;small class=\"ce-date2\"&gt;BCE&lt;/small&gt;'\n\
      \n-- A\n\nlabels[\"AAVE\"] = {\n\tlink = \"African American Vernacular English\",\n\tdisplay = \"AAVE\"\n}\n\nlabels[\"æ-tensing\"] = {\n\tlink = \"æ-tensing\",\n\ttype = \"sound change\"\n}\naliases[\"ae-tensing\"] = \"æ-tensing\"\n\nlabels[\"Anglicised\"\
      ] = {\n\tlink = \"Anglicisation#Anglicisation of non-English-language vocabulary and names\",\n\tdisplay = \"Anglicised\"\n}\naliases[\"Anglicized\"] = \"Anglicised\"\n\nlabels[\"Aran\"] = {\n\tlink = \"Aran Islands\",\n\tdisplay = \"Aran\"\n}\n\nlabels[\"\
      ar-Cairene\"] = {\n\tlink = \"Egyptian Arabic\",\n\tdisplay = \"Cairene\"\n}\naliases[\"Cairene\"] = \"ar-Cairene\"\n\nlabels[\"Arvanite\"] = {\n\tlink = \"Arvanitika\",\n\tdisplay = \"Arvanite\"\n}\n\nlabels[\"Ashkenazi Hebrew\"] = {\n\tlink = \"Ashkenazi\
      \ Hebrew\",\n\tdisplay = \"Ashkenazi Hebrew\"\n}\naliases[\"Ashkenazi\"] = \"Ashkenazi Hebrew\"\n\nlabels[\"Australia\"] = {\n\tlink = \"Australian English phonology\",\n\tdisplay = \"General Australian\"\n}\naliases[\"AU\"] = \"Australia\"\naliases[\"\
      AuE\"] = \"Australia\"\naliases[\"Aus\"] = \"Australia\"\naliases[\"AusE\"] = \"Australia\"\naliases[\"GenAus\"] = \"Australia\"\naliases[\"General Australian\"] = \"Australia\"\n\n-- B\n\nlabels[\"BE-nl\"] = {\n\tlink = \"Belgian Dutch\",\n\tdisplay =\
      \ \"Belgium\"\n}\naliases[\"BE\"] = \"BE-nl\"\n\nlabels[\"Beijing\"] = {\n\tlink = \"Beijing dialect\",\n\tdisplay = \"Beijing\"\n}\n\nlabels[\"Bosnia\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\",\n\
      \tdisplay = \"Bosnia\"\n}\naliases[\"Bosnian\"] = \"Bosnia\"\n\nlabels[\"Boston\"] = {\n\tlink = \"Boston English\",\n\tdisplay = \"Boston\"\n}\naliases[\"Bos\"] = \"Boston\"\n\nlabels[\"Brazil\"] = {\n\tlink = \"Brazilian Portuguese\",\n\tdisplay = \"\
      Brazil\"\n}\naliases[\"BP\"] = \"Brazil\"\naliases[\"BR\"] = \"Brazil\"\naliases[\"Brazilian Portuguese\"] = \"Brazil\"\n\nlabels[\"Burträsk\"] = {\n\tlink = \"Burträsk\",\n}\n\nlabels[\"Bygdeå\"] = {\n\tlink = \"Bygdeå\",\n}\n\n-- C\n\nlabels[\"Canada\"\
      ] = {\n\tlink = \"Canadian English\",\n\tdisplay = \"Canada\"\n}\naliases[\"CA\"] = \"Canada\"\naliases[\"Canadian\"] = \"Canada\"\n\nlabels[\"Canadian Shift\"] = {\n\tlink = \"Canadian Shift\",\n\tdisplay = \"Canadian Vowel Shift\",\n\ttype = \"sound\
      \ change\"\n}\naliases[\"Canadian shift\"] = \"Canadian Shift\"\naliases[\"Canadian Vowel Shift\"] = \"Canadian Shift\"\naliases[\"Canadian vowel shift\"] = \"Canadian Shift\"\n\nlabels[\"Carioca\"] = {\n\tlink = \"Carioca#Carioca Dialect\",\n\tdisplay\
      \ = \"Carioca\"\n}\naliases[\"RJ\"] = \"Carioca\"\n\nlabels[\"Castilian\"] = {\n\tlink = \"Castilian Spanish\",\n\tdisplay = \"Castilian\"\n}\naliases[\"Spain\"] = \"Castilian\"\n\nlabels[\"Central Catalan\"] = {\n\tlink = \"Central Catalan\",\n\tdisplay\
      \ = \"Central\",\n}\n\nlabels[\"central Germany\"] = {\n\tdisplay = \"central Germany\"\n}\naliases[\"central German\"] = \"central Germany\"\naliases[\"Central German\"] = \"central Germany\"\naliases[\"Central Germany\"] = \"central Germany\"\n\nlabels[\"\
      central Italy\"] = {\n\tlink = \"Central Italian\",\n\tdisplay = \"central Italy\"\n}\naliases[\"central Italian\"] = \"central Italy\"\naliases[\"Central Italian\"] = \"central Italy\"\naliases[\"Central Italy\"] = \"central Italy\"\n\nlabels[\"Central\
      \ Scotland\"] = {\n\tlink = \"Central Scots\",\n\tdisplay = \"Central Scotland\"\n}\n\nlabels[\"ceceo\"] = {\n\tlink = \"ceceo\",\n\tdisplay = \"''ceceo'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Classical\"] = {\n\tlink = \"Classical Latin\"\
      ,\n\tdisplay = \"Classical\"\n}\n\nlabels[\"Classical Sanskrit\"] = {\n\tlink = \"Sanskrit#Classical Sanskrit\",\n\tdisplay = \"Classical\"\n}\n\nlabels[\"Cois Fharraige\"] = {\n   link = \"Gaeltacht Cois Fharraige\",\n   display = \"Cois Fharraige\"\n\
      }\naliases[\"CF\"] = \"Cois Fharraige\"\n\nlabels[\"Connacht\"] = {\n\tlink = \"Connacht Irish\",\n\tdisplay = \"Connacht\"\n}\n\nlabels[\"Cork\"] = {\n\tlink = \"Gaeltacht#Cork Gaeltacht\",\n\tdisplay = \"Cork\"\n}\n\nlabels[\"cot-caught\"] = {\n\tlink\
      \ = \"Cot–caught merger\",\n\tdisplay = \"''cot''–''caught'' merger\",\n\ttype = \"sound change\"\n}\naliases[\"caught-cot\"] = \"cot-caught\"\n\nlabels[\"Croatia\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\"\
      ,\n\tdisplay = \"Croatia\"\n}\naliases[\"Croatian\"] = \"Croatia\"\n\nlabels[\"cure-force\"] = {\n\tlink = \"w:Cure–force merger\",\n\tdisplay = \"''cure''–''force'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"cy-N\"] = {\n\tlink = \"Welsh language#Dialects\"\
      ,\n\tdisplay = \"North Wales\"\n}\naliases[\"cy-g\"] = \"cy-N\"\n\nlabels[\"cy-S\"] = {\n\tlink = \"Welsh language#Dialects\",\n\tdisplay = \"South Wales\"\n}\naliases[\"cy-h\"] = \"cy-S\"\n\n-- D\n\nlabels[\"Dari\"] = {\n\tlink = \"Dari Persian\",\n\t\
      display = \"Dari\"\n}\n\nlabels[\"Delhi\"] = {\n    display = \"Delhi Hindi\"\n}\n\nlabels[\"distinción\"] = {\n\tlink = \"distinción\",\n\tdisplay = \"''z''-''s'' distinction\",\n\ttype = \"sound change\"\n}\naliases[\"distincion\"] = \"distinción\"\n\
      \n\n-- E\n\nlabels[\"Ecclesiastical\"] = {\n\tlink = \"Ecclesiastical Latin\",\n\tdisplay = \"Ecclesiastical\"\n}\n\nlabels[\"Egyptological\"] = {\n\tlink = \"Egyptian language#Egyptological pronunciation\",\n\tdisplay = \"modern Egyptological\"\n}\naliases[\"\
      modern Egyptological\"] = \"Egyptological\"\n\nlabels[\"Estuary English\"] = {\n\tlink = \"Estuary English\"\n}\n\n-- F\n\nlabels[\"father-bother\"] = {\n\tlink = \"Father–bother merger\",\n\tdisplay = \"''father''-''bother'' merger\",\n\ttype = \"sound\
      \ change\"\n}\n\nlabels[\"FS\"] = {\n\tlink = \"Standard French\",\n\tdisplay = \"FS\"\n}\n\nlabels[\"FV\"] = {\n\tlink = \"French Flemish\",\n\tdisplay = \"French Flanders\"\n}\n\n-- G\n\nlabels[\"GenAm\"] = {\n\tlink = \"General American\"\n}\naliases[\"\
      GA\"] = \"GenAm\"\naliases[\"General American\"] = \"GenAm\"\n\nlabels[\"Geordie\"] = {\n\tlink = \"Geordie\"\n}\n\nlabels[\"Gheg\"] = {\n\tlink = \"Gheg Albanian\",\n\tdisplay = \"Gheg\"\n}\n\nlabels[\"Givi\"] = {\n\tlink = \"Giv, South Khorasan\",\n\t\
      display = \"Givi\"\n}\n\nlabels[\"Glenties\"] = {\n\tlink = \"Glenties\",\n\tdisplay = \"The Glenties\"\n}\n\nlabels[\"grc-byz1\"] = {\n\tlink = \"Medieval Greek\",\n\tdisplay = '10&lt;sup&gt;th&lt;/sup&gt; ' .. CE .. ' Byzantine'\n}\n\nlabels[\"grc-byz2\"\
      ] = {\n\tlink = \"Medieval Greek\",\n\tdisplay = '15&lt;sup&gt;th&lt;/sup&gt; ' .. CE .. ' Constantinopolitan'\n}\n\nlabels[\"grc-cla\"] = {\n\tlink = \"Ancient Greek phonology\",\n\tdisplay = '5&lt;sup&gt;th&lt;/sup&gt; ' .. BCE .. ' Attic'\n}\n\nlabels[\"\
      grc-koi1\"] = {\n\tlink = \"Koine Greek phonology\",\n\tdisplay = '1&lt;sup&gt;st&lt;/sup&gt; ' .. CE .. ' Egyptian'\n}\n\nlabels[\"grc-koi2\"] = {\n\tlink = \"Koine Greek phonology\",\n\tdisplay = '4&lt;sup&gt;th&lt;/sup&gt; ' .. CE .. ' Koine'\n}\n\n\
      -- H\n\nlabels[\"hbo\"] = {\n\tlink = \"Biblical Hebrew#Phonology\",\n\tdisplay = \"Biblical Hebrew\"\n}\naliases[\"Biblical Hebrew\"] = \"hbo\"\n\nlabels[\"Hong Kong\"] = {\n\tlink = \"Hong Kong English\",\n\tdisplay = \"Hong Kong\"\n}\naliases[\"HK\"\
      ] = \"Hong Kong\"\n\nlabels[\"horse-hoarse\"] = {\n    link = \"horse–hoarse merger\",\n    display = \"without the ''horse''–''hoarse'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Hössjö\"] = {\n\tlink = \"sv:Hössjö\",\n}\n\nlabels[\"hy-E\"] =\
      \ {\n\tlink = \"Eastern Armenian language\",\n\tdisplay = \"Eastern Armenian\"\n}\n\nlabels[\"hy-IR\"] = {\n\tlink = \"Armenian Iranians#Culture and language\",\n\tdisplay = \"Eastern Armenian - Iran\"\n}\n\nlabels[\"hy-W\"] = {\n\tlink = \"Western Armenian\
      \ language\",\n\tdisplay = \"Western Armenian\"\n}\n\nlabels[\"hy-Y\"] = {\n\tlink = \"Yerevan\",\n\tdisplay = \"Eastern Armenian - Yerevan\"\n}\n\n-- I\n\nlabels[\"IL\"] = {\n\tlink = \"Modern Hebrew phonology\",\n\tdisplay = \"Modern Israeli Hebrew\"\
      \n}\naliases[\"Israeli Hebrew\"] = \"IL\"\naliases[\"Modern Hebrew\"] = \"IL\"\naliases[\"Modern Israeli\"] = \"IL\"\naliases[\"Modern Israeli Hebrew\"] = \"IL\"\naliases[\"Modern/Israeli Hebrew\"] = \"IL\"\n\nlabels[\"InE\"] = {\n\tlink = \"Indian English\"\
      ,\n\tdisplay = \"Indian English\"\n}\n\nlabels[\"IR\"] = {\n\tlink = \"Western Persian\",\n\tdisplay = \"Iranian Persian\"\n}\n\nlabels[\"Ireland\"] = {\n\tlink = \"Hiberno-English\",\n\tdisplay = \"Ireland\"\n}\naliases[\"HE\"] = \"Ireland\"\naliases[\"\
      IE\"] = \"Ireland\"\n\nlabels[\"Italian Hebrew\"] = {\n\tlink = \"Italian Hebrew\",\n\tdisplay = \"Italian Hebrew\"\n}\n\n-- J\n\nlabels[\"Johor-Selangor\"] = {\n\tlink = \"Malayan languages\",\n\tdisplay = \"Johor-Selangor\"\n}\n\n-- K\n\nlabels[\"Kabul,\
      \ Peshawar\"] = {\n\tlink = \"Pashto dialects\",\n\tdisplay = \"Kabul, Peshawar\"\n}\n\nlabels[\"Kalix\"] = {\n\tlink = \"Kalix\",\n}\n\nlabels[\"Kandahar\"] = {\n\tlink = \"Kandahari Pashto\",\n\tdisplay = \"Kandahar\"\n}\naliases[\"ps-Kandahar\"] = \"\
      Kandahar\"\n\nlabels[\"Kerry\"] = {\n\tlink = \"Gaeltacht#Kerry Gaeltacht\",\n\tdisplay = \"Kerry\"\n}\n\nlabels[\"xme-ham\"] = {\n\tdisplay = \"Hamadani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-mah\"] = {\n\tdisplay = \"Mahallati\",\n\t\
      link = \"Kermanic languages\",\n}\n\nlabels[\"xme-von\"] = {\n\tdisplay = \"Vonishuni\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-del\"] = {\n\tdisplay = \"Delijani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-kas\"] = {\n\tdisplay\
      \ = \"Kashani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-kes\"] = {\n\tdisplay = \"Kese'i\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-mey\"] = {\n\tdisplay = \"Meyme'i\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-abz\"\
      ] = {\n\tdisplay = \"Abuzeydabadi\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-aby\"] = {\n\tdisplay = \"Abyanehi\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-far\"] = {\n\tdisplay = \"Farizandi\",\n\tlink = \"Kermanic languages\"\
      ,\n}\n\nlabels[\"xme-jow\"] = {\n\tdisplay = \"Jowshaqani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-qoh\"] = {\n\tdisplay = \"Qohrudi\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-yar\"] = {\n\tdisplay = \"Yarandi\",\n\tlink = \"\
      Kermanic languages\",\n}\n\nlabels[\"xme-tar\"] = {\n\tdisplay = \"Tari\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-sed\"] = {\n\tdisplay = \"Sedehi\",\n\tlink = \"Kermanic languages\",\n}\n\n\nlabels[\"xme-ard\"] = {\n\tdisplay = \"Ardestani\"\
      ,\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-zef\"] = {\n\tdisplay = \"Zefre'i\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-isf\"] = {\n\tdisplay = \"Isfahani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-kaf\"] = {\n\tdisplay\
      \ = \"Kafroni\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-var\"] = {\n\tdisplay = \"Varzenei\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-nay\"] = {\n\tdisplay = \"Nayini\",\n\tlink = \"Nayini language\",\n}\n\nlabels[\"xme-vaf\"\
      ] = {\n\tdisplay = \"Vafsi\",\n\tlink = \"Vafsi dialect\",\n}\n\nlabels[\"xme-ast\"] = {\n\tdisplay = \"Ashtiani language\",\n\tlink = \"nyq\",\n}\n\nlabels[\"xme-xun\"] = {\n\tdisplay = \"Khunsari\",\n\tlink = \"Khunsari language\",\n}\n\nlabels[\"xme-nat\"\
      ] = {\n\tdisplay = \"Natanzi\",\n\tlink = \"Natanzi language\",\n}\n\nlabels[\"xme-soi\"] = {\n\tdisplay = \"Soi\",\n\tlink = \"Soi language\",\n}\n\nlabels[\"xme-gaz\"] = {\n\tdisplay = \"Gazi\",\n\tlink = \"Gazi language\",\n}\n\nlabels[\"xme-ana\"]\
      \ = {\n\tdisplay = \"Anaraki\",\n\tlink = \"Nayini language\",\n}\n\nlabels[\"xme-ker\"] = {\n\tdisplay = \"Kermani\",\n\tlink = \"Zoroastrian Dari language\",\n}\n\nlabels[\"xme-yaz\"] = {\n\tdisplay = \"Yazdi\",\n\tlink = \"Zoroastrian Dari language\"\
      ,\n}\n\n-- L\n\nlabels[\"LAm\"] = {\n\tlink = \"Spanish language in the Americas\",\n\tdisplay = \"Latin American\"\n}\n\nlabels[\"Late Egyptian\"] = {\n\tlink = \"Late Egyptian language\",\n\tdisplay = \"reconstructed Late Egyptian\"\n}\n\nlabels[\"Latinate\"\
      ] = {\n\tlink = \"Latin#Phonology\",\n\tdisplay = \"Latinate\"\n}\n\nlabels[\"lleísmo\"] = {\n\tlink = \"Yeísmo\",\n\tdisplay = \"''ll''-''y'' distinction\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Lövånger\"] = {\n\tlink = \"Lövånger\",\n}\n\nlabels[\"\
      Luleå\"] = {\n\tlink = \"Luleå\",\n}\n\n-- M\n\nlabels[\"Mary-marry-merry\"] = {\n\tlink = \"Mary–marry–merry merger\",\n\tdisplay = \"''Mary''–''marry''–''merry'' merger\",\n\ttype = \"sound change\"\n}\naliases[\"Mmmm\"] = \"Mary-marry-merry\"\n\nlabels[\"\
      Mayo\"] = {\n\tlink = \"Gaeltacht Iorrais agus Acaill\",\n\tdisplay = \"Mayo\"\n}\n\nlabels[\"Medio-Late Egyptian\"] = {\n\tlink = \"Late Egyptian language\",\n\tdisplay = \"reconstructed Medio-Late Egyptian\"\n}\n\nlabels[\"Middle Egyptian\"] = {\n\t\
      link = \"Egyptian language#Middle Egyptian\",\n\tdisplay = \"reconstructed Middle Egyptian\"\n}\n\nlabels[\"Midwestern US\"] = {\n\tlink = \"Midwestern United States#Linguistic characteristics\",\n\tdisplay = \"Midwestern US\"\n}\naliases[\"Midwest US\"\
      ] = \"Midwestern US\"\naliases[\"Midwest US English\"] = \"Midwestern US\"\naliases[\"Midwestern US English\"] = \"Midwestern US\"\n\nlabels[\"Mizrahi Hebrew\"] = {\n\tlink = \"Mizrahi Hebrew\",\n\tdisplay = \"Mizrahi Hebrew\"\n}\naliases[\"Mizrahi\"]\
      \ = \"Mizrahi Hebrew\"\naliases[\"Mizrakhi\"] = \"Mizrahi Hebrew\"\naliases[\"Mizrachi\"] = \"Mizrahi Hebrew\"\naliases[\"Mizrakhi Hebrew\"] = \"Mizrahi Hebrew\"\naliases[\"Mizrachi Hebrew\"] = \"Mizrahi Hebrew\"\n\nlabels[\"MLE\"] = {\n\tlink = \"Multicultural\
      \ London English\",\n\tdisplay = \"MLE\"\n}\n\nlabels[\"Montenegro\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\",\n\tdisplay = \"Montenegro\"\n}\naliases[\"Montenegrin\"] = \"Montenegro\"\n\nlabels[\"\
      Munster\"] = {\n\tlink = \"Munster Irish\",\n\tdisplay = \"Munster\"\n}\n\n-- N\n\nlabels[\"Netherlands\"] = {\n\tlink = \"Dutch phonology\",\n\tdisplay = \"Netherlands\"\n}\naliases[\"NL\"] = \"Netherlands\"\n\nlabels[\"New Latin\"] = {\n\tlink = \"New\
      \ Latin\"\n}\n\nlabels[\"New York\"] = {\n\tlink = \"New York dialect#Linguistic features\",\n\tdisplay = \"NYC\"\n}\naliases[\"NY\"] = \"New York\"\naliases[\"NYC\"] = \"New York\"\n\nlabels[\"New Zealand\"] = {\n\tlink = \"New Zealand English phonology\"\
      ,\n\tdisplay = \"General New Zealand\"\n}\naliases[\"NZ\"] = \"New Zealand\"\naliases[\"GNZ\"] = \"New Zealand\"\naliases[\"General New Zealand\"] = \"New Zealand\"\n\nlabels[\"non-Mary-marry-merry\"] = {\n\tlink = \"Mary–marry–merry merger\",\n\tdisplay\
      \ = \"''Mary''–''marry''–''merry'' distinction\",\n\ttype = \"sound change\"\n}\naliases[\"nMmmm\"] = \"non-Mary-marry-merry\"\n\nlabels[\"non-rhotic\"] = {\n\tlink = \"Rhoticity in English\",\n\tdisplay = \"non-rhotic\"\n}\naliases[\"nonrhotic\"] = \"\
      non-rhotic\"\n\nlabels[\"non-weak vowel\"] = {\n\tlink = \"Weak vowel merger\",\n\tdisplay = \"weak vowel distinction\",\n\ttype = \"sound change\"\n}\n\nlabels[\"northern and central Germany\"] = {\n\tdisplay = \"northern Germany, central Germany\"\n\
      }\naliases[\"north and central German\"] = \"northern and central Germany\"\naliases[\"North and Central German\"] = \"northern and central Germany\"\naliases[\"north and central Germany\"] = \"northern and central Germany\"\naliases[\"North and Central\
      \ Germany\"] = \"northern and central Germany\"\naliases[\"northern and central German\"] = \"northern and central Germany\"\naliases[\"Northern and Central German\"] = \"northern and central Germany\"\naliases[\"Northern and Central Germany\"] = \"northern\
      \ and central Germany\"\n\nlabels[\"Northern England\"] = {\n\tlink = \"English language in Northern England\",\n\tdisplay = \"Northern England\"\n}\naliases[\"North England\"] = \"Northern England\"\n\nlabels[\"northern Germany\"] = {\n\tdisplay = \"\
      northern Germany\"\n}\naliases[\"north German\"] = \"northern Germany\"\naliases[\"North German\"] = \"northern Germany\"\naliases[\"north Germany\"] = \"northern Germany\"\naliases[\"North Germany\"] = \"northern Germany\"\naliases[\"northern German\"\
      ] = \"northern Germany\"\naliases[\"Northern German\"] = \"northern Germany\"\naliases[\"Northern Germany\"] = \"northern Germany\"\n\nlabels[\"Northern Scotland\"] = {\n\tlink = \"Northern Scots\",\n\tdisplay = \"Northern Scotland\"\n}\n\n-- O\n\nlabels[\"\
      Old Egyptian\"] = {\n\tlink = \"Egyptian language#Old Egyptian\",\n\tdisplay = \"reconstructed Old Egyptian\"\n}\n\nlabels[\"Osaka\"] = {\n\tlink = \"Kansai dialect\",\n\tdisplay = \"Osaka\"\n}\n\n-- P\n\nlabels[\"Palestinian Hebrew\"] = {\n\tlink = \"\
      Palestinian vocalization\",\n\tdisplay = \"Palestinian Hebrew\"\n}\n\nlabels[\"pin-pen\"] = {\n\tlink = \"pin–pen merger\",\n\tdisplay = \"''pin''–''pen'' merger\",\n\ttype = \"sound change\"\n}\naliases[\"pen-pin\"] = \"pin-pen\"\n\nlabels[\"Philippine\"\
      ] = {\n\tlink = \"Philippine English\",\n\tdisplay = \"Philippine\"\n}\naliases[\"Philippines\"] = \"Philippine\"\n\nlabels[\"Portugal\"] = {\n\tlink = \"European Portuguese\",\n\tdisplay = \"Portugal\"\n}\naliases[\"EP\"] = \"Portugal\"\naliases[\"PT\"\
      ] = \"Portugal\"\n\nlabels[\"ps-Kabul\"] = {\n\tlink = \"Pashto dialects\",\n\tdisplay = \"Kabuli\"\n}\n\n-- Q\n\nlabels[\"Quanzhou\"] = {\n\tlink = \"Quanzhou\"\n}\n\nlabels[\"Quetta\"] = {\n\tlink = \"Pashto dialects\",\n\tdisplay = \"Quetta\"\n}\n\n\
      -- R\n\nlabels[\"r-dissimilation\"] = {\n\tlink = \"Dissimilation\",\n\tdisplay = \"''r''-dissimilation\",\n\ttype = \"sound change\"\n}\n\nlabels[\"rhotic\"] = {\n\tlink = \"Rhotic and non-rhotic accents\",\n\tdisplay = \"rhotic\",\n\ttype = \"sound change\"\
      \n}\n\nlabels[\"Riau-Lingga\"] = {\n\tlink = \"Riau-Lingga Sultanate\",\n\tdisplay = \"Riau-Lingga\"\n}\n\nlabels[\"Rioplatense\"] = {\n\tlink = \"Rioplatense Spanish\",\n\tdisplay = \"Rioplatense\"\n}\n\nlabels[\"RP\"] = {\n\tlink = \"Received Pronunciation\"\
      \n}\naliases[\"Received Pronunciation\"] = \"RP\"\n\n-- S\n\nlabels[\"São Paulo\"] = {\n\tlink = \"Brazilian Portuguese\",\n\tdisplay = \"São Paulo\"\n}\n\nlabels[\"Scotland\"] = {\n\tlink = \"Scottish English\",\n\tdisplay = \"Scotland\"\n}\n\nlabels[\"\
      Sephardi Hebrew\"] = {\n\tlink = \"Sephardi Hebrew\",\n\tdisplay = \"Sephardi Hebrew\"\n}\naliases[\"Sephardi\"] = \"Sephardi Hebrew\"\n\nlabels[\"Serbia\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\"\
      ,\n\tdisplay = \"Serbia\"\n}\naliases[\"Serbian\"] = \"Serbia\"\n\nlabels[\"seseo\"] = {\n\tlink = \"seseo\",\n\tdisplay = \"''seseo'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Sistani\"] = {\n\tlink = \"Sistani dialect\",\n\tdisplay = \"Sistani\"\
      \n}\n\nlabels[\"Skellefteå\"] = {\n\tlink = \"Skellefteå\"\n}\n\nlabels[\"South Africa\"] = {\n\tlink = \"South African English phonology\",\n\tdisplay = \"General South African\"\n}\naliases[\"SAE\"] = \"South Africa\"\naliases[\"GSAE\"] = \"South Africa\"\
      \naliases[\"GenSAE\"] = \"South Africa\"\naliases[\"General South African\"] = \"South Africa\"\n\nlabels[\"Southern American English\"] = {\n\tlink = \"Southern American English\"\n}\naliases[\"Southern US\"] = \"Southern American English\"\naliases[\"\
      Southern US English\"] = \"Southern American English\"\naliases[\"Southern U.S. English\"] = \"Southern American English\"\n\nlabels[\"South Brazil\"] = {\n\tlink = \"Brazilian Portuguese\",\n\tdisplay = \"South Brazil\"\n}\n\nlabels[\"southern Germany\"\
      ] = {\n\tdisplay = \"southern Germany\"\n}\naliases[\"south German\"] = \"southern Germany\"\naliases[\"South German\"] = \"southern Germany\"\naliases[\"south Germany\"] = \"southern Germany\"\naliases[\"South Germany\"] = \"southern Germany\"\naliases[\"\
      southern German\"] = \"southern Germany\"\naliases[\"Southern German\"] = \"southern Germany\"\naliases[\"Southern Germany\"] = \"southern Germany\"\n\nlabels[\"Southern Scotland\"] = {\n\tlink = \"Southern Scots\",\n\tdisplay = \"Southern Scotland\"\n\
      }\naliases[\"Southern Scots\"] = \"Southern Scotland\"\n\nlabels[\"St. Louis\"] = {\n\tlink = \"North American regional phonology#St. Louis and vicinity\",\n\tdisplay = \"St. Louis (Missouri)\"\n}\naliases[\"STL\"] = \"St. Louis\"\n\nlabels[\"standard\"\
      ] = {\n\tdisplay = \"standard\"\n}\naliases[\"Standard\"] = \"standard\"\n\nlabels[\"Standard Zhuang\"] = {\n\tlink = \"Standard Zhuang\",\n\tdisplay = \"Standard Zhuang\"\n}\n\nlabels[\"Swedish\"] = {\n\tlink = \"Swedish pronunciation\",\n\tdisplay =\
      \ \"Swedish\"\n}\n\nlabels[\"Syrian Hebrew\"] = {\n\tlink = \"Syrian Jews#Pronunciation of Hebrew\",\n\tdisplay = \"Syrian Hebrew\"\n}\n\n-- T\n\nlabels[\"t-glottalization\"] = {\n   link = \"T-glottalization\",\n   display = \"''t''-glottalization\",\n\
      \ttype = \"sound change\"\n}\naliases[\"t-glottaling\"] = \"t-glottalization\"\n\nlabels[\"Tajik\"] = {\n\tlink = \"Tajik language\",\n\tdisplay = \"Tajik\"\n}\naliases[\"Tajiki\"] = \"Tajik\"\n\nlabels[\"Tehrani\"] = {\n\tlink = \"Tehrani accent\",\n\t\
      display = \"Tehrani\"\n}\n\nlabels[\"Tiberian Hebrew\"] = {\n\tlink = \"Tiberian Hebrew\",\n\tdisplay = \"Tiberian Hebrew\"\n}\naliases[\"Tiberian\"] = \"Tiberian Hebrew\"\n\nlabels[\"Tosk\"] = {\n\tlink = \"Tosk Albanian\",\n\tdisplay = \"Tosk\"\n}\n\n\
      -- U\n\nlabels[\"UK\"] = {\n\tlink = \"British English\",\n\tdisplay = \"UK\"\n}\naliases[\"British\"] = \"UK\"\naliases[\"U.K.\"] = \"UK\"\n\nlabels[\"Ulaanbaatar\"] = {\n\tlink = \"Ulaanbaatar\"\n}\naliases[\"UlaanBaatar\"] = \"Ulaanbaatar\"\n\nlabels[\"\
      Ulster\"] = {\n\tlink = \"Ulster Irish\",\n\tdisplay = \"Ulster\"\n}\naliases[\"Donegal\"] = \"Ulster\"\n\nlabels[\"Umeå\"] = {\n\tlink = \"Umeå\",\n}\n\nlabels[\"US\"] = {\n\tlink = \"American English\",\n\tdisplay = \"US\"\n}\naliases[\"U.S.\"] = \"\
      US\"\n\n-- V\n\nlabels[\"Valencia\"] = {\n\tlink = \"Valencian\"\n}\naliases[\"Valencian\"] = \"Valencia\"\n\nlabels[\"Vedic Sanskrit\"] = {\n\tlink = \"Vedic Sanskrit\",\n\tdisplay = \"Vedic\"\n}\naliases[\"Vedic\"] = \"Vedic Sanskrit\"\naliases[\"Rigvedic\"\
      ] = \"Vedic Sanskrit\"\n\nlabels[\"Vulgar\"] = {\n\tlink = \"Vulgar Latin\",\n\tdisplay = \"Vulgar\"\n}\n\n-- W\n\nlabels[\"Wales\"] = {\n\tlink = \"Welsh English\",\n\tdisplay = \"Wales\"\n}\naliases[\"Welsh\"] = \"Wales\"\n\nlabels[\"Wardak\"] = {\n\t\
      link = \"Pashto dialects\",\n\tdisplay = \"Wardak\"\n}\n\nlabels[\"Waterford\"] = {\n\tlink = \"Gaeltacht na nDéise\",\n\tdisplay = \"Waterford\"\n}\n\nlabels[\"Wazirwola\"] = {\n\tlink = \"Wazirwola dialect\",\n\tdisplay = \"Wazirwola\"\n}\n\nlabels[\"\
      weak vowel\"] = {\n\tlink = \"Weak vowel merger\",\n\tdisplay = \"weak vowel merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"wine/whine\"] = {\n    link = \"wine–whine merger\",\n    display = \"without the ''wine''–''whine'' merger\",\n    type =\
      \ \"sound change\"\n}\n\n-- X\n\nlabels[\"Xiamen\"] = {\n\tlink = \"Xiamen\"\n}\n\n-- Y\n\nlabels[\"yeísmo\"] = {\n\tlink = \"Yeísmo\",\n\tdisplay = \"''ll''-''y'' neutralization\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Yemenite Hebrew\"] = {\n\tlink\
      \ = \"Yemenite Hebrew\",\n\tdisplay = \"Yemenite Hebrew\"\n}\n\nlabels[\"YIVO\"] = {\n\tlink = \"YIVO\"\n}\n\nlabels[\"yod-coalescence\"] = {\n\tlink = \"yod-coalescence\",\n\tdisplay = \"yod-coalescence\",\n\ttype = \"sound change\"\n}\n\n-- Z\n\nlabels[\"\
      Zhangzhou\"] = {\n\tlink = \"Zhangzhou\"\n}\n\nreturn { labels = labels, aliases = aliases }</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:08.112Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aes-IPA&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54993 t=1555362548010827
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:08 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 569048519, 817819699, 704940442
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4407710" pageid="4407710" ns="10" title="Template:es-IPA"><revisions><rev user="Kc kennylau" timestamp="2016-08-22T20:21:10Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#ifeq:&lt;!--
        --&gt;{{#invoke:es-pronunc|show|{{{1|{{PAGENAME}}}}}}}|&lt;!--
        --&gt;{{#invoke:es-pronunc|LatinAmerica|{{{1|{{PAGENAME}}}}}}}|&lt;!--
          --&gt;{{#ifeq:&lt;!--
            --&gt;{{#invoke:es-pronunc|show|{{{1|{{PAGENAME}}}}}}}|&lt;!--
            --&gt;{{#invoke:es-pronunc|phonetic|{{{1|{{PAGENAME}}}}}}}|&lt;!--
              --&gt;{{IPA|/{{ {{{|safesubst:}}}#invoke:es-pronunc|show|{{{1|{{PAGENAME}}}}}}}/|lang=es}}|&lt;!--
              --&gt;{{IPA|/{{ {{{|safesubst:}}}#invoke:es-pronunc|show|{{{1|{{PAGENAME}}}}}|||{{{debug|}}}}}/|[{{ {{{|safesubst:}}}#invoke:es-pronunc|phonetic|{{{1|{{PAGENAME}}}}}|||{{{debug|}}}}}]|lang=es}}&lt;!--
          --&gt;}}|&lt;!--
          --&gt;{{a|Castilian}} {{#ifeq:&lt;!--
            --&gt;{{#invoke:es-pronunc|show|{{{1|{{PAGENAME}}}}}}}|&lt;!--
            --&gt;{{#invoke:es-pronunc|phonetic|{{{1|{{PAGENAME}}}}}}}|&lt;!--
              --&gt;{{IPA|/{{ {{{|safesubst:}}}#invoke:es-pronunc|show|{{{1|{{PAGENAME}}}}}|||{{{debug|}}}}}/|lang=es}}|&lt;!--
              --&gt;{{IPA|/{{ {{{|safesubst:}}}#invoke:es-pronunc|show|{{{1|{{PAGENAME}}}}}|||{{{debug|}}}}}/|[{{ {{{|safesubst:}}}#invoke:es-pronunc|phonetic|{{{1|{{PAGENAME}}}}}|||{{{debug|}}}}}]|lang=es}}}}
      * {{a|Latin America}} {{#ifeq:&lt;!--
            --&gt;{{#invoke:es-pronunc|LatinAmerica|{{{1|{{PAGENAME}}}}}}}|&lt;!--
            --&gt;{{#invoke:es-pronunc|phoneticLatinAmerica|{{{1|{{PAGENAME}}}}}}}|&lt;!--
              --&gt;{{IPA|/{{ {{{|safesubst:}}}#invoke:es-pronunc|LatinAmerica|{{{1|{{PAGENAME}}}}}}}/|lang=es}}|&lt;!--
              --&gt;{{IPA|/{{ {{{|safesubst:}}}#invoke:es-pronunc|LatinAmerica|{{{1|{{PAGENAME}}}}}}}/|[{{ {{{|safesubst:}}}#invoke:es-pronunc|phoneticLatinAmerica|{{{1|{{PAGENAME}}}}}}}]|lang=es}}&lt;!--
        --&gt;}}&lt;!--
      --&gt;}}&lt;!--
      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:09:08.295Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aes-pronunc&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=40467 t=1555362548200831
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:08 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1280.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 505431144, 730757544, 686186940
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4407774\" pageid=\"4407774\" ns=\"828\" title=\"Module:es-pronunc\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-12-10T23:44:18Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"fix logic\" xml:space=\"preserve\">local export = {}\n\n-- ɟ and ʃ are used internally to represent [ʝ⁓ɟ͡ʝ] and [t͡ʃ]\nfunction export.show(word,LatinAmerica,phonetic,do_debug)\n\tlocal\
      \ debug = {}\n\t\n\tif type(word) == 'table' then\n\t\tdo_debug = word.args[4]\n\t\tword = word.args[1]\n\tend\n\tlocal orig_word = word\n\tword = mw.ustring.lower(word or mw.title.getCurrentTitle().text)\n\tword = mw.ustring.gsub(word,\"[^abcdefghijklmnopqrstuvwxyzá\
      éíóúüñ.]\",\"\")\n\t\n\ttable.insert(debug,word)\n\t\n\tlocal V = \"[aeiouáéíóú]\" -- vowel\n\tlocal C = \"[^aeiouáéíóú.]\" -- consonant\n\t--determining whether \"y\" is a consonant or a vowel + diphthongs, \"-mente\" suffix\n\tword = mw.ustring.gsub(word,\"\
      y(\" .. C .. \")\",\"i%1\")\n\tword = mw.ustring.gsub(word,\"y(\" .. V .. \")\",\"ɟ%1\") -- not the real sound\n\tword = mw.ustring.gsub(word,\"hi(\" .. V .. \")\",\"ɟ%1\")\n\tword = mw.ustring.gsub(word,\"y$\",\"ï\")\n    word = mw.ustring.gsub(word,\"\
      mente$\",\"ménte\")\n\t\n\t--x\n\tword = mw.ustring.gsub(word,\"x\",\"ks\")\n\t\n\t--\"c\" &amp; \"g\" before \"i\" and \"e\" and all that stuff\n\tword = mw.ustring.gsub(word,\"c([ieíé])\",(LatinAmerica and 's' or 'θ') .. \"%1\")\n\tword = mw.ustring.gsub(word,\"\
      gü([ieíé])\",\"ɡw%1\")\n\tword = mw.ustring.gsub(word,\"ü\",\"\")\n\tword = mw.ustring.gsub(word,\"gu([ieíé])\",\"ɡ%1\")\n\tword = mw.ustring.gsub(word,\"g([ieíé])\",\"x%1\")\n\n\ttable.insert(debug,word)\n\t\n\t--alphabet-to-phoneme\n\tword = mw.ustring.gsub(word,\"\
      qu\",\"c\")\n\tword = mw.ustring.gsub(word,\"ch\",\"ʃ\") --not the real sound\n\tword = mw.ustring.gsub(word,'[cgjñrvy]',\n\t\t--['g']='ɡ':  U+0067 LATIN SMALL LETTER G → U+0261 LATIN SMALL LETTER SCRIPT G\n\t\t{['c']='k', ['g']='ɡ', ['j']='x', ['ñ']='ɲ\
      ', ['r']='ɾ', ['v']='b' })\n\t\n\t-- trill in #r, lr, nr, rr\n\tlocal match_count = 0\n\tword = mw.ustring.gsub(\n\t\tword,\n\t\t'(.?)ɾ(.?)',\n\t\tfunction (before, after)\n\t\t\tmatch_count = match_count + 1\n\t\t\t-- mw.log(word, before, after)\n\t\t\
      \tif match_count == 1 and before == '' or before == 'l' or before == 'n'\n\t\t\t\t\tor after ~= '' and ('bdfɡklʎmnɲpstxzʃɟ'):match(after) then\n\t\t\t\treturn before .. 'r' .. after\n\t\t\telseif before == 'ɾ' then\n\t\t\t\treturn 'r' .. after\n\t\t\t\
      elseif after == 'ɾ' then\n\t\t\t\treturn before .. 'r'\n\t\t\tend\n\t\tend)\n\t\n\tword = mw.ustring.gsub(word,'n([bm])','m%1')\n\tword = mw.ustring.gsub(word,'ll',(LatinAmerica and 'ɟ' or 'ʎ'))\n\tword = mw.ustring.gsub(word,'z',(LatinAmerica and 'z'\
      \ or 'θ')) -- not the real LatAm sound\n\t\n\ttable.insert(debug,word)\n\t\n\t--syllable division\n\tfor _ = 1, 2 do\n\t\tword = mw.ustring.gsub(word,\"(\" .. V .. \")(\" .. C .. \")(\" .. V .. \")\",\"%1.%2%3\")\n\tend\n\tfor _ = 1, 2 do\n\t\tword = mw.ustring.gsub(word,\"\
      (\" .. V .. \")(\" .. C .. \")(\" .. C .. \")(\" .. V .. \")\",\"%1%2.%3%4\")\n\tend\n\tfor _ = 1, 2 do\n\t\tword = mw.ustring.gsub(word,\"(\" .. V .. \")(\" .. C .. \")(\" .. C .. \")(\" .. C .. \")(\" .. V .. \")\",\"%1%2.%3%4%5\")\n\tend\n\tword = mw.ustring.gsub(word,\"\
      ([pbktdɡ])%.([lɾ])\",\".%1%2\")\n\tword = mw.ustring.gsub(word,\"(\" .. C .. \")%.s(\" .. C .. \")\",\"%1s.%2\")\n\tword = mw.ustring.gsub(word,\"([aeoáéíóú])([aeoáéíóú])\",\"%1.%2\")\n\tword = mw.ustring.gsub(word,\"([ií])([ií])\",\"%1.%2\")\n\tword =\
      \ mw.ustring.gsub(word,\"([uú])([uú])\",\"%1.%2\")\n\n\ttable.insert(debug,word)\n\t\n\t--diphthongs\n\tword = mw.ustring.gsub(word,'ih?([aeouáéóú])','j%1')\n\tword = mw.ustring.gsub(word,'uh?([aeioáéíó])','w%1')\n\t\n\ttable.insert(debug,word)\n\t\n\t\
      --accentuation\n\tlocal syllables = mw.text.split(word,\"%.\")\n\tif mw.ustring.find(word,\"[áéíóú]\") then\n\t\tfor i=1,#syllables do\n\t\t\tif mw.ustring.find(syllables[i],\"[áéíóú]\") then syllables[i] = \"ˈ\"..syllables[i] end\n\t\tend\n\telse\n\t\t\
      if mw.ustring.find(word,\"[^aeiouns]$\") then\n\t\t\tsyllables[#syllables] = \"ˈ\"..syllables[#syllables]\n\t\telse\n\t\t\tif #syllables &gt; 1 then syllables[#syllables-1] = \"ˈ\"..syllables[#syllables-1] end\n\t\tend\n\tend\n\n\ttable.insert(debug,word)\n\
      \t\n\t--syllables nasalized if ending with \"n\", voiceless consonants in syllable-final position to voiced\n\tlocal remove_accent = {['á']='a', ['é']='e', ['í']='i', ['ó']='o', ['ú']='u'}\n\tlocal nasalize = {['a']='ã',['e']='ẽ',['i']='ĩ',['o']='õ',['u']='ũ\
      '}\n\tfor i=1,#syllables do\n\t\tsyllables[i] = mw.ustring.gsub(syllables[i],'[áéíóú]',remove_accent)\n\t\tif phonetic and mw.ustring.find(syllables[i],'[mnɲ]' .. C .. '?$') then\n\t\t\tsyllables[i] = mw.ustring.gsub(syllables[i],'([aeiou])',nasalize)\n\
      \t\tend\n\t\tsyllables[i] = mw.ustring.gsub(syllables[i],'[ptk]$',{['p']='b',['t']='d',['k']='ɡ'})\n\tend\n\tword = table.concat(syllables)\n\t\n\t--real sound of LatAm Z\n\tword = mw.ustring.gsub(word,'z','s')\n\t--secondary stress\n\tword = mw.ustring.gsub(word,'ˈ\
      (.+)ˈ','ˌ%1ˈ')\n\tword = mw.ustring.gsub(word,'ˈ(.+)ˌ','ˌ%1ˌ')\n\tword = mw.ustring.gsub(word,'ˌ(.+)ˈ(.+)ˈ','ˌ%1ˌ%2ˈ')\n\n\t--phonetic transcription\n\tif phonetic then\n\t\t--θ, s, f before voiced consonants\n\t\tlocal voiced = 'mnɲbdɟɡʎ'\n\t\tlocal r\
      \ = 'ɾr'\n\t\tlocal tovoiced = {\n\t\t\t['θ'] = 'θ̬',\n\t\t\t['s'] = 'z',\n\t\t\t['f'] = 'v',\n\t\t}\n\t\tlocal function voice(sound, following)\n\t\t\treturn tovoiced[sound]..following\n\t\tend\n\t\tword = mw.ustring.gsub(word,'([θs])([ˈˌ]?['..voiced..r..'])',voice)\n\
      \t\tword = mw.ustring.gsub(word,'(f)([ˈˌ]?['..voiced..'])',voice)\n\t\t\n\t\tlocal stop_to_fricative = {['b']='β',['d']='ð',['ɟ']='ʝ',['ɡ']='ɣ'}\n\t\tlocal fricative_to_stop = {['β']='b',['ð']='d',['ʝ']='ɟ',['ɣ']='ɡ',}\n\t\t--lots of allophones going on\n\
      \t\tword = mw.ustring.gsub(word,'[bdɟɡ]',stop_to_fricative)\n\t\tword = mw.ustring.gsub(\n\t\t\tword,\n\t\t\t'()([ˈˌ]?)([βðɣʝ])',\n\t\t\tfunction (pos, stress, fricative)\n\t\t\t\t-- Matching the character before the fricative in the pattern\n\t\t\t\t\
      -- doesn't work because sometimes there are two fricatives in\n\t\t\t\t-- a row.\n\t\t\t\tlocal before = pos &gt; 1 and mw.ustring.sub(word, pos - 1, pos - 1)\n\t\t\t\t-- mw.log(orig_word, before, stress, fricative)\n\t\t\t\tif not before or (fricative\
      \ == 'ɣ' or fricative == 'β') and ('mnɲ'):find(before)\n\t\t\t\t\t\tor (fricative == 'ð' or fricative == 'ʝ') and ('lʎmnɲ'):find(before) then\n\t\t\t\t\treturn stress .. fricative_to_stop[fricative]\n\t\t\t\tend -- else no change\n\t\t\tend)\n\t\tword\
      \ = mw.ustring.gsub(word,'[td]',{['t']='t̪',['d']='d̪'})\n\t\t--nasal assimilation before consonants\n\t\tlocal labiodental, dentialveolar, dental, alveolopalatal, palatal, velar =\n\t\t\t'ɱ', 'n̪', 'n̟', 'nʲ', 'ɲ', 'ŋ'\n\t\tlocal nasal_assimilation =\
      \ {\n\t\t\t['f'] = labiodental,\n\t\t\t['t'] = dentialveolar, ['d'] = dentialveolar,\n\t\t\t['θ'] = dental,\n\t\t\t['ʃ'] = alveolopalatal,\n\t\t\t['ɟ'] = palatal, ['ʎ'] = palatal,\n\t\t\t['k'] = velar, ['x'] = velar, ['ɡ'] = velar,\n\t\t}\n\t\t\n\t\tword\
      \ = mw.ustring.gsub(\n\t\t\tword,\n\t\t\t'n([ˈˌ]?)(.)',\n\t\t\tfunction (stress, following)\n\t\t\t\treturn (nasal_assimilation[following] or 'n') .. stress .. following\n\t\t\tend)\n\t\t--lateral assimilation before consonants\n\t\tword = mw.ustring.gsub(\n\
      \t\t\tword,\n\t\t\t'l([ˈˌ]?)(.)',\n\t\t\tfunction (stress, following)\n\t\t\t\tlocal l = 'l'\n\t\t\t\tif following == 't' or following == 'd' then -- dentialveolar\n\t\t\t\t\tl = 'l̪'\n\t\t\t\telseif following == 'θ' then -- dental\n\t\t\t\t\tl = 'l̟'\n\
      \t\t\t\telseif following == 'ʃ' then -- alveolopalatal\n\t\t\t\t\tl = 'lʲ'\n\t\t\t\tend\n\t\t\t\treturn l .. stress .. following\n\t\t\tend)\n\t\t--semivowels\n\t\tword = mw.ustring.gsub(word,'([aeouãẽõũ][iïĩ])','%1̯')\n\t\tword = mw.ustring.gsub(word,'([aeioã\
      ẽĩõ][uũ])','%1̯')\n\tend\n\t\n\ttable.insert(debug,word)\n\t\n\tword = mw.ustring.gsub(word,'h','') --silent \"h\"\n\tword = mw.ustring.gsub(word,'ʃ','t͡ʃ') --fake \"ch\" to real \"ch\"\n\tword = mw.ustring.gsub(word,'ɟ','ɟ͡ʝ') --fake \"y\" to real \"\
      y\"\n\tword = mw.ustring.gsub(word,'ï','i') --fake \"y$\" to real \"y$\"\n\t\n\tif do_debug == 'yes' then\n\t\treturn word .. table.concat(debug,\"\")\n\telse\n\t\treturn word\n\tend\nend\n\nfunction export.LatinAmerica(frame)\n\treturn export.show(frame,true)\n\
      end\n\nfunction export.phonetic(frame)\n\treturn export.show(frame,false,true)\nend\n\nfunction export.phoneticLatinAmerica(frame)\n\treturn export.show(frame,true,true)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:09:08.627Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ahyph&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53990 t=1555362548529977
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '933'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:08 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 611420536, 727540225, 700982426
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="6278116" pageid="6278116" ns="10" title="Template:hyph"><revisions><rev user="Mahagaja" timestamp="2017-07-05T12:38:30Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Redirected page to [[Template:hyphenation]]" xml:space="preserve">#REDIRECT [[Template:hyphenation]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:09:09.221Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fheadword%2Fno+lang+category&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47527 t=1555362549130493
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:09 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 651976651, 554428462, 703959591
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/headword/no lang category" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:09:09.399Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fheadword%2Fno+lang+category%2Flang%2Fes&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=63322 t=1555362549291679
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:09 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 748373509, 630157191, 690644179
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/headword/no lang category/lang/es" missing="" /></pages></query></api>
