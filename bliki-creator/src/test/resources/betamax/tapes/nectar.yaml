!tape
name: nectar
interactions:
- recorded: 2019-04-15T21:09:59.966Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=nectar&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=61739 t=1555362599853746
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:09:59 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1287.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Set-Cookie: WMF-Last-Access=15-Apr-2019;Path=/;HttpOnly;secure;Expires=Fri, 17 May 2019 12:00:00 GMT, WMF-Last-Access-Global=15-Apr-2019;Path=/;Domain=.wiktionary.org;HttpOnly;secure;Expires=Fri, 17 May 2019 12:00:00 GMT, GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; Path=/; secure; Domain=.wiktionary.org
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;https=1;nocookies=1
      X-Cache: cp1075 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 576977969, 483653474, 693981921
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="218080" pageid="218080" ns="0" title="nectar"><revisions><rev user="Jberkel" timestamp="2019-04-15T19:29:30Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="/* Dutch */" xml:space="preserve">{{also|néctar}}
      ==English==
      {{wikipedia}}

      ===Etymology===
      {{PIE root|en|neḱ|terh₂}}
      From {{der|en|la|nectar}}, from {{der|en|grc|νέκταρ||nourishment of the gods}}, from {{der|en|ine-pro|*neḱ-||perish, disappear}} + {{m|ine-pro||*-tr̥h₂|overcoming}}, from {{m|ine-pro|*terh₂-||to overcome, pass through, cross over}}.

      ===Pronunciation===
      * {{a|UK}} {{IPA|/ˈnɛk.tə/|lang=en}}
      * {{a|US}} {{IPA|/ˈnɛk.təɹ/|lang=en}}
      * {{hyphenation|nec|tar|lang=en}}

      ===Noun===
      {{en-noun|~}}

      # {{lb|en|chiefly|_|mythology}} The [[drink]] of the [[god]]s. {{defdate|from 16th c.}}
      #* '''1590''', {{w|Edmund Spenser}}, ''The Faerie Queene'', III.4:
      #*: They pourd in soveraine balme and '''Nectar''' good, / Good both for erthly med'cine and for hevenly food.
      # {{lb|en|by extension}} Any delicious [[drink]], now especially a type of sweetened [[fruit juice]]. {{defdate|from 16th c.}}
      # {{lb|en|botany}} The [[sweet]] [[liquid]] secreted by [[flower]]s to attract [[pollinating]] [[insect]]s and [[bird]]s. {{defdate|from 17th c.}}

      ====Related terms====
      * {{l|en|nectarine}}
      * {{l|en|nectarous}}
      * {{l|en|nectary}}

      ====Translations====
      {{trans-top|drink of the gods}}
      * Assamese: {{t|as|অমিয়া}}
      * Catalan: {{t|ca|nèctar|m}}
      * Chinese:
      *: Mandarin: {{t+|cmn|琼浆}}
      * Czech: {{t|cs|nektar|m}}
      * Danish: {{t+|da|nektar|c}}
      * Dutch: {{t+|nl|nectar}}, {{t|nl|nektar}}
      * Finnish: {{t+|fi|nektari}}
      * Galician: {{t|gl|néctar|m}}
      * German: {{t+|de|Nektar|m}}
      * Greek: {{t+|el|νέκταρ|n}}
      *: Ancient Greek: {{t|grc|νέκταρ|n}}
      {{trans-mid}}
      * Hungarian: {{t|hu|istenek itala}}, {{t+|hu|nektár}}
      * Italian: {{t+|it|nettare|m}}
      * Japanese: {{t-check|ja|神酒|tr=[[みき]], [[miki]]; or [[しんしゅ]], [[shinshu]]|sc=Jpan}} {{attention|ja|split???}}
      * Norwegian:
      *: Bokmål: {{t|nb|nektar|m}}
      *: Nynorsk: {{t+|nn|nektar|m}}
      * Persian: {{t+|fa|نوش|tr=nūš}}
      * Polish: {{t+|pl|nektar|m}}
      * Portuguese: {{t+|pt|néctar|m}}, {{t|pt|néctar dos deuses|m}}
      * Russian: {{t+|ru|некта́р|m}}
      * Spanish: {{t+|es|néctar}}
      * Welsh: {{t|cy|neithdar|m}}
      {{trans-bottom}}

      {{trans-top|sweet liquid secreted by flowers}}
      * Arabic: {{t|ar|رَحِيق|m}}
      * Assamese: {{t|as|অমিয়া}}
      * Catalan: {{t|ca|nèctar|m}}
      * Chinese:
      *: Mandarin: {{t+|cmn|花蜜|tr=huāmì}}
      * Czech: {{t|cs|nektar|m}}
      * Danish: {{t+|da|nektar|c}}
      * Dutch: {{t+|nl|nectar}}, {{t|nl|nektar}}
      * Erzya: {{t|myv|улаз}}
      * Finnish: {{t+|fi|mesi}}
      * Galician: {{t|gl|néctar|m}}
      * German: {{t+|de|Nektar|m}}
      * Greek: {{t+|el|νέκταρ|n}}
      * Hebrew: {{t+|he|צוף|m|tr=tsuf|sc=Hebr}}
      * Hungarian: {{t+|hu|virágméz}}
      {{trans-mid}}
      * Irish: {{t|ga|neachtair}}
      * Italian: {{t+|it|nettare|m}}
      * Japanese: {{t+|ja|花蜜|tr=[[かみつ]], [[kamitsu]]|sc=Jpan}}
      * Maori: {{t|mi|waihonga}}, {{t|mi|ngongo}}
      * Navajo: {{t|nv|chʼilátah baa hózhónii bijeeh}}
      * Norwegian:
      *: Bokmål: {{t|nb|nektar|m}}
      *: Nynorsk: {{t+|nn|nektar|m}}
      * Persian: {{t+|fa|شهد|tr=šahd}}
      * Polish: {{t+|pl|nektar|m}}
      * Portuguese: {{t+|pt|néctar|m}}
      * Russian: {{t+|ru|некта́р|m}}
      * Spanish: {{t+|es|néctar}}
      * Swedish: {{t+|sv|nektar|c}}
      * Welsh: {{t|cy|neithdar|m}}
      {{trans-bottom}}

      {{trans-top|any delicious drink}}
      * Catalan: {{t|ca|nèctar|m}}
      * Danish: {{t+|da|nektar|c}}, {{t|da|saftevand|n}}
      * Dutch: {{t+|nl|nectar}}, {{t|nl|nektar}}
      * Finnish: {{t+|fi|nektari}}, {{t+|fi|linnunmaito}}, {{t+|fi|mehu}}
      * German: {{t+|de|Nektar|m}}
      * Greek: {{t+|el|νέκταρ|n}}
      * Hungarian: {{t+|hu|nektár}}
      {{trans-mid}}
      * Italian: {{t+|it|nettare|m}}
      * Japanese: {{t|ja|美酒|tr=[[びしゅ]], [[bishu]]|sc=Jpan}}
      * Persian: {{t|fa|نکتار|tr=nektār}}, {{t+|fa|نوش|tr=nūš}}
      * Polish: {{t+|pl|nektar|m}}
      * Portuguese: {{t|pt|néctar dos deuses|m}}
      * Russian: {{t+|ru|некта́р|m}}
      {{trans-bottom}}

      {{checktrans-top}}
      * Esperanto: {{t-check|eo|nektaro}}
      * French: {{t+check|fr|nectar|m}}
      * Hebrew: {{t+check|he|צוף}}
      * Ido: {{t+check|io|nektaro}}
      * Italian: {{qualifier|1,2,3}} {{t+check|it|nettare|m}}
      * Japanese: {{t+check|ja|花蜜|tr=[[かみつ]], kamitu|sc=Jpan}} (liquid secreted by flowers), {{t+check|ja|蜜|sc=Jpan}}
      {{trans-mid}}
      * Lithuanian: {{t-check|lt|nektaras}}
      * Mandarin: {{t+check|cmn|花蜜|tr=huāmì|sc=Hani}} (liquid secreted by flowers)
      * Spanish: {{t+check|es|néctar|m}}
      * Swedish: {{t+check|sv|nektar}}
      * Telugu: {{t+check|te|మకరందం|tr=makaramdam}}
      * Turkish: {{t+check|tr|nektar}}
      {{trans-bottom}}

      ====See also====
      * {{l|en|ambrosia}}
      * {{l|en|pollen}}

      ===Verb===
      {{en-verb}}

      # {{lb|en|intransitive}} To feed on nectar.
      #* '''2010''', Robert Michael Pyle, ''Mariposa Road: The First Butterfly Big Year'' (page 123)
      #*: On the lane below, more orangetips '''nectared''' on spring beauties and violets.

      ===References===
      [http://www.etymonline.com/index.php?search=nectar&amp;searchmode=none]

      ===Anagrams===
      * {{anagrams|en|a=acenrt|Canter|Cretan|canter|carnet|centra|creant|recant|tanrec|trance}}

      [[Category:en:Liquids]]

      ----

      ==Dutch==

      ===Pronunciation===
      * {{audio|Nl-nectar.ogg|Audio|lang=nl}}

      ===Noun===
      {{nl-noun|m|-s|-}}

      # {{lb|nl|Greek mythology|Roman mythology}} {{l|en|nectar}}, [[beverage]] drunk by the Olympians
      #: {{syn|nl|godendrank}}
      #: {{cot|nl|ambrozijn}}
      # {{lb|nl|botany|insects}} {{l|en|nectar}}, liquid produced by flowers

      ----

      ==French==

      ===Etymology===
      {{PIE root|fr|neḱ|terh₂}}
      From {{der|fr|la|nectar}}, from {{der|fr|grc|νέκταρ}}, from {{der|fr|ine-pro||*néḱtr̥h₂}}, derived from the roots {{m|ine-pro|*neḱ-||to perish, disappear}} and {{m|ine-pro|*terh₂-||to overcome}}.

      ===Noun===
      {{fr-noun|m}}

      # {{l|en|nectar}} (all meanings)

      ====Derived terms====
      * {{l|fr|nectaire}}

      ===Further reading===
      * {{R:TLFi}}

      ----

      ==Latin==

      ===Pronunciation===
      * {{la-IPA|eccl=yes|nectar}}

      ===Etymology 1===
      {{PIE root|la|neḱ|terh₂}}
      From {{der|la|grc|νέκταρ}}, from {{der|la|ine-pro||alt=*néḱ-tr̥h₂}}, derived from the roots {{m|ine-pro|*neḱ-||to perish}} and {{m|ine-pro|*terh₂-||to overcome}}.

      ====Noun====
      {{la-noun|nectar|nectaris|n|third}}

      # [[#English|nectar]]

      =====Inflection=====
      {{la-decl-3rd-N-I-pure|nectar|nectar}}

      =====Related terms=====
      * {{l|la|nectareus}}

      =====Descendants=====
      * {{desc|en|nectar}}
      * {{desc|fr|nectar}}
      * {{desc|it|nettare}}

      ====References====
      * {{R:L&amp;S}}
      * {{R:Elementary Lewis}}
      * {{R:Peck}}
      * {{R:Smith's Persons}}

      ===Etymology 2===
      {{nonlemma}}

      ====Verb====
      {{la-verb-form|nectar}}

      # {{inflection of|nectō||1|s|futr|pasv|indc|lang=la}}</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:00.142Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aalso&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=63108 t=1555362600036636
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:00 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1287.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 208424826, 644968555, 701243391
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="178449" pageid="178449" ns="10" title="Template:also"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T17:31:15Z" contentformat="text/x-wiki"
      contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:also]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow
      only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:Template:also|main}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:10:00.332Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3ATemplate%3Aalso&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54433 t=1555362600228331
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:00 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1341.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 928658555, 558095611, 691527663
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3901256\" pageid=\"3901256\" ns=\"828\" title=\"Module:Template:also\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-01-07T23:04:20Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"change separating punctuation from comma to semicolon if any of the items contains a comma, for [[same old same old]] (see also [[Wiktionary:Grease pit/2018/December#Comma/semicolon|Wiktionary:Grease\
      \ pit/2018/December &amp;sect; Comma/semicolon]])\" xml:space=\"preserve\">local export = {}\n\nlocal yesno = require('Module:yesno')\n\nlocal get_script\n\n-- If there are characters in both scripts (the key and value), the second\n-- should be used.\n\
      local overridden_by = {\n\tLatn = \"Latinx\",\n\tGrek = \"polytonic\",\n\tCyrl = \"Cyrs\",\n}\n\n-- Join with serial \"and\" and serial comma\nlocal function serial_comma_join(seq, conjunction)\n\tconjunction = conjunction or \",\"\n\tif #seq == 0 then\n\
      \t\treturn \"\"\n\telseif #seq == 1 then\n\t\treturn seq[1] -- nothing to join\n\telseif #seq == 2 then\n\t\treturn seq[1] .. \" ''and'' \" .. seq[2]\n\telse\n\t\treturn table.concat(seq, conjunction .. \" \", 1, #seq - 1)\n\t\t\t.. \"&lt;span class='serial-comma'&gt;\"\
      \ .. conjunction .. \"&lt;/span&gt;\" ..\n\t\t\t\"''&lt;span class='serial-and'&gt; and&lt;/span&gt;'' \" ..\n\t\t\tseq[#seq]\n\tend\nend\n\nfunction export.main(frame)\n\tlocal args\t\t\t= frame:getParent().args\n\t\n\tlocal sc_default\t= args[\"sc\"\
      ]\n\tlocal nosc\t\t\t= yesno(args[\"nosc\"])\n\tif nosc then\n\t\trequire(\"Module:debug\").track(\"also/nosc param\")\n\t\tif sc_default then\n\t\t\terror(\"|nosc= and |sc= are mutually contradictory. Specify one or the other.\")\n\t\telse\n\t\t\t-- Turn\
      \ off script by setting default script to None.\n\t\t\tsc_default = \"None\"\n\t\tend\n\tend\n\t\n\tif sc_default then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/also/sc param]]\n\t\trequire(\"Module:debug\").track(\"also/sc param\")\n\tend\n\t\n\
      \tlocal uni_default = yesno((args[\"uni\"] == \"auto\") or args[\"uni\"]) and \"auto\" or nil\n\t\n\tlocal title = mw.title.getCurrentTitle()\n\tlocal full_pagename = title.fullText\n\t-- Disables tagging outside of mainspace, where {{also}} more often\
      \ links to\n\t-- pages that are not entries and don't need tagging. Tagging in Reconstruction\n\t-- would be more complicated and is often unnecessary, and there are very few\n\t-- entries in Appendix.\n\tlocal detect_sc = title.nsText == \"\"\n\t\tor\
      \ args[\"detectsc\"] -- to test the script detection capabilities\n\t\n\tlocal items = {}\n\tlocal use_semicolon = false\n\t\n\tfor i, arg in ipairs(args) do\n\t\tlocal uni = args[\"uni\" .. i] or uni_default\n\t\tlocal sc = args[\"sc\" .. i] or sc_default\n\
      \t\t\n\t\tif arg:find(\",\", 1, true) then\n\t\t\tuse_semicolon = true\n\t\tend\n\t\t\n\t\tif not yesno(uni, uni) then\n\t\t\tuni = nil\n\t\tend\n\t\t\n\t\tlocal s\n\t\tlocal link_text = arg:match(\"%[%[[^%[%]|]+|(.+)]]\") or arg:match(\"%[%[([^%[%]|]+)]]\"\
      )\n\t\t\n\t\tif link_text then\n\t\t\ts = arg\n\t\t\targ = mw.text.decode(link_text)\n\t\telse\n\t\t\ts = \"[[\" .. arg .. \"]]\"\n\t\t\targ = mw.text.decode(arg)\n\t\tend\n\t\t\n\t\tlocal codepoint\n\t\t\n\t\tif uni then\n\t\t\trequire(\"Module:debug\"\
      ).track(\"also/uni\")\n\t\t\t\n\t\t\tif uni == 'auto' then\n\t\t\t\tcodepoint = (mw.ustring.len(arg) == 1) and mw.ustring.codepoint(arg, 1, 1)\n\t\t\telse\n\t\t\t\tcodepoint = tonumber(uni)\n\t\t\t\t\n\t\t\t\tif mw.ustring.len(arg) ~= 1 or codepoint ~=\
      \ mw.ustring.codepoint(arg, 1, 1) then\n\t\t\t\t\trequire(\"Module:debug\").track(\"also/uni/noauto\")\n\t\t\t\telse\n\t\t\t\t\trequire(\"Module:debug\").track(\"also/uni/auto\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- If all characters are in one\
      \ script, tag the link with it.\n\t\t-- Ignore all \"None\"-script characters.\n\t\tlocal rtl\n\t\tif detect_sc and not sc then\n\t\t\t-- leading bytes for non-Latin scripts (that is, codepoints between U+340 and U+10FFFF)\n\t\t\tif arg:find(\"[\\200-\\\
      244]\") then\n\t\t\t\tget_script = get_script or require(\"Module:Unicode data\").char_to_script\n\t\t\t\tlocal curr_sc\n\t\t\t\tfor codepoint in mw.ustring.gcodepoint(arg) do\n\t\t\t\t\tcurr_sc = get_script(codepoint)\n\t\t\t\t\tif curr_sc ~= \"None\"\
      \ then\n\t\t\t\t\t\tif sc == nil then\n\t\t\t\t\t\t\tsc = curr_sc\n\t\t\t\t\t\telseif curr_sc ~= sc then\n\t\t\t\t\t\t\t-- For instance, Grek -&gt; polytonic.\n\t\t\t\t\t\t\tif overridden_by[sc] == curr_sc then\n\t\t\t\t\t\t\t\tsc = curr_sc\n\t\t\t\t\t\
      \t\t\n\t\t\t\t\t\t\t-- For instance, Grek and Latn.\n\t\t\t\t\t\t\telseif overridden_by[curr_sc] ~= sc then\n\t\t\t\t\t\t\t\trequire(\"Module:debug\").track(\"also/no sc detected\")\n\t\t\t\t\t\t\t\tmw.log(\"Module:Template:also found two scripts in \"\
      \ .. arg .. \": \"\n\t\t\t\t\t\t\t\t\t.. sc .. \" and \" .. curr_sc .. \".\")\n\t\t\t\t\t\t\t\tsc = nil\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\trtl = mw.loadData(\"Module:scripts/data\")[sc]\n\t\t\
      \t\trtl = rtl and rtl.direction == \"rtl\"\n\t\t\telse\n\t\t\t\tsc = \"Latn\"\n\t\t\tend\n\t\tend\n\t\t\n\t\tif sc then\n\t\t\ts = '&lt;b class=\"' .. sc .. '\"&gt;' .. s .. \"&lt;/b&gt;\"\n\t\t\tif rtl then\n\t\t\t\ts = s .. \"&amp;lrm;\"\n\t\t\tend\n\
      \t\telse\n\t\t\ts = \"'''\" .. s .. \"'''\"\n\t\tend\n\t\t\n\t\tif codepoint then\n\t\t\tlocal m_unidata = require('Module:Unicode data')\n\t\t\t\n\t\t\ts = s .. (\" &lt;small&gt;[U+%04X %s]&lt;/small&gt;\"):format(\n\t\t\t\tcodepoint,\n\t\t\t\tm_unidata.lookup_name(codepoint):gsub(\"\
      &lt;\", \"&amp;lt;\")\n\t\t\t)\n\t\tend\n\t\t\n\t\tif arg ~= full_pagename then\n\t\t\ttable.insert(items, s)\n\t\telse\n\t\t\trequire(\"Module:debug\").track(\"also/pagename\")\n\t\tend\n\tend\n\t\n\tif #items == 0 then\n\t\ttable.insert(items, \"{{{1}}}\"\
      )\n\tend\n\t\n\treturn (\"&lt;div class=\\\"disambig-see-also%s\\\"&gt;''See also:'' %s&lt;/div&gt;\"):format(\n\t\t(#items == 2) and \"-2\" or \"\",\n\t\tserial_comma_join(items, use_semicolon and \";\" or \",\")\n\t)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:00.499Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ayesno&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43107 t=1555362600412600
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:00 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 587154577, 502965391, 700002715
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4236554" pageid="4236554" ns="828" title="Module:yesno"><revisions><rev user="Erutuon" timestamp="2017-11-19T23:42:10Z" contentformat="text/plain" contentmodel="Scribunto" comment="don&#039;t need to put, for instance, Greek in lowercase" xml:space="preserve">-- Function allowing for consistent treatment of boolean-like wikitext input.
      -- It works similarly to the template {{yesno}}.
      return function (val, default)
          val = type(val) == 'string' and val:lower() or val -- put in lower case
          if val == nil then
              return nil
          elseif val == false or val == 'no' or val == 'n' or val == 'false' or tonumber(val) == 0 then
              return false
          elseif val == true or val == 'yes' or val == 'y' or val == 'true' or tonumber(val) == 1 then
              return true
          else
              return default
          end
      end</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:00.658Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Awikipedia&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=36679 t=1555362600578535
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:00 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1226.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 215912915, 822172316, 704778573
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="45052" pageid="45052" ns="10" title="Template:wikipedia"><revisions><rev user="Rua" timestamp="2016-10-13T16:13:57Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Looks like it all works" xml:space="preserve">{{#invoke:wikipedia|wikipedia_box}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:00.830Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Awikipedia&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=33920 t=1555362600746132
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:00 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1315.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 195522925, 826396401, 693949556
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5872615\" pageid=\"5872615\" ns=\"828\" title=\"Module:wikipedia\"><revisions><rev user=\"Julia\" timestamp=\"2018-12-08T23:00:16Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"make slim version same length as other interwiki links\" xml:space=\"preserve\">local export = {}\n\n\nlocal function process_links(linkdata, prefix, name, wmlang, sc)\n\tprefix = prefix .. \":\" .. (wmlang:getCode()\
      \ == \"en\" and \"\" or wmlang:getCode() .. \":\")\n\t\n\tlocal links = {}\n\tlocal iplinks = {}\n\t\n\tlocal m_links = require(\"Module:links\")\n\tlocal lang = wmlang:getWiktionaryLanguage()\n\tlocal ipalt = name .. \" \" .. (wmlang:getCode() == \"en\"\
      \ and \"\" or \"&lt;sup&gt;\" .. wmlang:getCode() .. \"&lt;/sup&gt;\")\n\t\n\tfor i, link in ipairs(linkdata) do\n\t\tlink.lang = lang\n\t\tlink.sc = sc\n\t\tlink.term = prefix .. link.term\n\t\tlink.tr = \"-\"\n\t\ttable.insert(iplinks, \"&lt;span class=\\\
      \"interProject\\\"&gt;[[\" .. link.term .. \"|\" .. ipalt .. \"]]&lt;/span&gt;\")\n\t\ttable.insert(links, m_links.full_link(link, \"bold\"))\n\tend\n\t\n\treturn links, iplinks\nend\n\n\nfunction export.wikipedia_box(frame)\n\tlocal params = {\n\t\t[1]\
      \ = {},\n\t\t[2] = {},\n\t\t\n\t\t[\"cat\"] = {},\n\t\t[\"category\"] = {alias_of = \"cat\"},\n\t\t[\"dab\"] = {},\n\t\t[\"disambiguation\"] = {alias_of = \"dab\"},\n\t\t[\"i\"] = {type = \"boolean\"},\n\t\t[\"lang\"] = {default = \"en\"},\n\t\t[\"mul\"\
      ] = {},\n\t\t[\"mullabel\"] = {},\n\t\t[\"mulcat\"] = {},\n\t\t[\"mulcatlabel\"] = {},\n\t\t[\"portal\"] = {},\n\t\t[\"sc\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal wmlang = require(\"\
      Module:wikimedia languages\").getByCodeWithFallback(args[\"lang\"]) or error(\"The Wikimedia language code \\\"\" .. args[\"lang\"] .. \"\\\" is not valid.\")\n\tlocal sc = args[\"sc\"] and (require(\"Module:scripts\").getByCode(args[\"sc\"]) or error(\"\
      The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil\n\t\n\tlocal linkdata = {}\n\t\n\tif args[\"cat\"] then\n\t\ttable.insert(linkdata, {term = \"Category:\" .. args[\"cat\"], alt = args[1] or args[\"cat\"]})\n\telseif args[\"portal\"] then\n\
      \t\ttable.insert(linkdata, {term = \"Portal:\" .. args[\"portal\"], alt = args[1] or args[\"portal\"]})\n\telse\n\t\ttable.insert(linkdata, {term = args[\"dab\"] or args[1] or mw.title.getCurrentTitle().text, alt = args[2] or args[1] or args[\"dab\"] or\
      \ mw.title.getCurrentTitle().text})\n\tend\n\t\n\tif args[\"mul\"] or args[\"mulcat\"] then\n\t\tif args[\"mulcat\"] then\n\t\t\ttable.insert(linkdata, {term = \"Category:\" .. args[\"mulcat\"], alt = args[\"mulcatlabel\"] or args[\"mulcat\"]})\n\t\telse\n\
      \t\t\ttable.insert(linkdata, {term = args[\"mul\"], alt = args[\"mullabel\"] or args[\"mul\"]})\n\t\tend\n\tend\n\t\n\tlocal links, iplinks = process_links(linkdata, \"w\", \"Wikipedia\", wmlang, sc)\n\t\n\tif frame.args[\"slim\"] then\n\t\treturn\n\t\t\
      \t\"&lt;div class=\\\"sister-wikipedia sister-project noprint floatright\\\" style=\\\"border: solid #aaa 1px; font-size: 90%; background: #f9f9f9; width: 250px; padding: 4px; text-align: left;\\\"&gt;\" ..\n\t\t\t\"&lt;div style=\\\"float: left;\\\"&gt;[[File:Wikipedia-logo.png|14px|none|\
      \ ]]&lt;/div&gt;\" ..\n\t\t\t\"&lt;div style=\\\"margin-left: 15px;\\\"&gt;\" ..\n\t\t\t\" &amp;nbsp;\" ..\n\t\t\ttable.concat(links, \" and \") ..\n\t\t\t\" on \" ..\n\t\t\t(wmlang:getCode() == \"en\" and \"\" or wmlang:getCanonicalName() .. \"&amp;nbsp;\"\
      ) ..\n\t\t\t\"Wikipedia\" ..\n\t\t\t\"&lt;/div&gt;\" ..\n\t\t\t\"&lt;/div&gt;\"\n\telse\n\t\tlocal linktype\n\t\t\n\t\tif args[\"cat\"] then\n\t\t\tlinktype = \"a category\"\n\t\telseif args[\"mul\"] or args[\"dab\"] then\n\t\t\tlinktype = \"articles\"\
      \n\t\telseif args[\"mulcat\"] then\n\t\t\tlinktype = \"categories\"\n\t\telseif args[\"portal\"] then\n\t\t\tlinktype = \"a portal\"\n\t\telse\n\t\t\tlinktype = \"an article\"\n\t\tend\n\t\t\n\t\treturn\n\t\t\t\"&lt;div class=\\\"sister-wikipedia sister-project\
      \ noprint floatright\\\" style=\\\"border: 1px solid #aaa; font-size: 90%; background: #f9f9f9; width: 250px; padding: 4px; text-align: left;\\\"&gt;\" ..\n\t\t\t\"&lt;div style=\\\"float: left;\\\"&gt;[[File:Wikipedia-logo.png|44px|none|link=|alt=]]&lt;/div&gt;\"\
      \ ..\n\t\t\t\"&lt;div style=\\\"margin-left: 60px;\\\"&gt;\" ..\n\t\t\twmlang:getCanonicalName() .. \" [[Wikipedia]] has \" .. linktype .. \" on:\" ..\n\t\t\t\"&lt;div style=\\\"margin-left: 10px;\\\"&gt;\" .. table.concat(links, \" and \") .. \"&lt;/div&gt;\"\
      \ ..\n\t\t\t\"&lt;/div&gt;\" ..\n\t\t\ttable.concat(iplinks) .. ((args[1] == mw.title.getCurrentTitle().text and not (args[2] or args[\"dab\"])) and \"[[Category:wikipedia with redundant first parameter]]\" or \"\") ..\n\t\t\t\"&lt;/div&gt;\"\n\tend\n\
      end\n\n\nfunction export.projectlink(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t\t[2] = {},\n\t\t\n\t\t[\"dab\"] = {},\n\t\t[\"i\"] = {type = \"boolean\"},\n\t\t[\"lang\"] = {default = \"en\"},\n\t\t[\"nodot\"] = {},\n\t\t[\"sc\"] = {},\n\t}\n\t\n\t\
      local args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal wmlang = require(\"Module:wikimedia languages\").getByCodeWithFallback(args[\"lang\"]) or error(\"The Wikimedia language code \\\"\" .. args[\"lang\"] .. \"\
      \\\" is not valid.\")\n\tlocal sc = args[\"sc\"] and (require(\"Module:scripts\").getByCode(args[\"sc\"]) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil\n\t\n\tlocal linkdata = {term = args[1] or args[\"dab\"] or mw.title.getCurrentTitle().text,\
      \ alt = args[2] or args[1] or args[\"dab\"] or mw.title.getCurrentTitle().text}\n\t\n\tif args[\"i\"] then\n\t\tlinkdata.alt = \"''\" .. linkdata.alt .. \"''\"\n\tend\n\t\n\tlocal links, iplinks = process_links({linkdata}, frame.args[\"prefix\"], frame.args[\"\
      name\"], wmlang, sc)\n\t\n\treturn\n\t\t\"[[Image:\" .. frame.args[\"image\"] .. \"|15px|link=\" .. linkdata.term .. \"]] \" ..\n\t\ttable.concat(links, \" and \") ..\n\t\t\" on \" ..\n\t\t(wmlang:getCode() == \"en\" and \"\" or \"the \" .. wmlang:getCanonicalName()\
      \ .. \" \") ..\n\t\t\" \" .. frame.args[\"name\"] .. (args[\"nodot\"] and \"\" or \".\") ..\n\t\ttable.concat(iplinks)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:01.003Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aparameters&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48223 t=1555362600901920
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:00 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1340.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 685508051, 832775764, 685078236
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4797340\" pageid=\"4797340\" ns=\"828\" title=\"Module:parameters\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-01T01:32:55Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"OK, resurrect the bug fix for disappearing &quot;falt&quot; and such while I figure out how to clone a table properly\" xml:space=\"preserve\">local export = {}\n\n-- A helper function\
      \ to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nlocal plain = require(\"Module:string\").pattern_escape\n\n-- A helper function that removes empty numeric indexes in a table,\n-- so that the values are tightly packed like in\
      \ a normal Lua table.\nlocal remove_holes = require(\"Module:table\").compressSparseArray\n\nfunction export.process(args, params, return_unknown)\n\tlocal args_new = {}\n\t\n\t-- Process parameters for specific properties\n\tlocal required = {}\n\tlocal\
      \ patterns = {}\n\tlocal names_with_equal_sign = {}\n\tlocal list_from_index = nil\n\t\n\tfor name, param in pairs(params) do\n\t\tif param.required then\n\t\t\tif param.alias_of then\n\t\t\t\trequire(\"Module:debug\").track(\"parameters/required alias\"\
      )\n\t\t\tend\n\t\t\trequired[name] = true\n\t\tend\n\t\t\n\t\tif param.list then\n\t\t\tlocal key = name\n\t\t\tif type(name) == \"string\" then\n\t\t\t\tkey = string.gsub(name, \"=\", \"\")\n\t\t\tend\n\t\t\tif param.default ~= nil then\n\t\t\t\targs_new[key]\
      \ = {param.default, maxindex = 1}\n\t\t\telse\n\t\t\t\targs_new[key] = {maxindex = 0}\n\t\t\tend\n\t\t\t\n\t\t\tif type(param.list) == \"string\" then\n\t\t\t\t-- If the list property is a string, then it represents the name\n\t\t\t\t-- to be used as the\
      \ prefix for list items. This is for use with lists\n\t\t\t\t-- where the first item is a numbered parameter and the\n\t\t\t\t-- subsequent ones are named, such as 1, pl2, pl3.\n\t\t\t\tif string.find(param.list, \"=\") then\n\t\t\t\t\tpatterns[\"^\" ..\
      \ string.gsub(plain(param.list), \"=\", \"(%%d+)\") .. \"$\"] = name\n\t\t\t\telse\n\t\t\t\t\tpatterns[\"^\" .. plain(param.list) .. \"(%d+)$\"] = name\n\t\t\t\tend\n\t\t\telseif type(name) == \"number\" then\n\t\t\t\t-- If the name is a number, then all\
      \ indexed parameters from\n\t\t\t\t-- this number onwards go in the list.\n\t\t\t\tlist_from_index = name\n\t\t\telse\n\t\t\t\tif string.find(name, \"=\") then\n\t\t\t\t\tpatterns[\"^\" .. string.gsub(plain(name), \"=\", \"(%%d+)\") .. \"$\"] = string.gsub(name,\
      \ \"=\", \"\")\n\t\t\t\telse\n\t\t\t\t\tpatterns[\"^\" .. plain(name) .. \"(%d+)$\"] = name\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif string.find(name, \"=\") then\n\t\t\t\t-- DO NOT SIDE-EFFECT A TABLE WHILE ITERATING OVER IT.\n\t\t\t\t-- Some elements\
      \ may be skipped or processed twice if you do.\n\t\t\t\t-- Instead, track the changes we want to make to `params`, and\n\t\t\t\t-- do them after the iteration over `params` is done.\n\t\t\t\ttable.insert(names_with_equal_sign, name)\n\t\t\tend\n\t\telseif\
      \ param.default ~= nil then\n\t\t\targs_new[name] = param.default\n\t\tend\n\tend\n\n\t--Process required changes to `params`\n\tfor _, name in ipairs(names_with_equal_sign) do\n\t\trequire(\"Module:debug\").track(\"parameters/name with equals\")\n\t\t\
      params[string.gsub(name, \"=\", \"\")] = params[name]\n\t\tparams[name] = nil\n\tend\n\n\t-- Process the arguments\n\tlocal args_unknown = {}\n\t\n\tfor name, val in pairs(args) do\n\t\tlocal index = nil\n\t\t\n\t\tif type(name) == \"number\" then\n\t\t\
      \tif list_from_index ~= nil and name &gt;= list_from_index then\n\t\t\t\tindex = name - list_from_index + 1\n\t\t\t\tname = list_from_index\n\t\t\tend\n\t\telse\n\t\t\t-- Does this argument name match a pattern?\n\t\t\tfor pattern, pname in pairs(patterns)\
      \ do\n\t\t\t\tindex = mw.ustring.match(name, pattern)\n\t\t\t\t\n\t\t\t\t-- It matches, so store the parameter name and the\n\t\t\t\t-- numeric index extracted from the argument name.\n\t\t\t\tif index then\n\t\t\t\t\tindex = tonumber(index)\n\t\t\t\t\t\
      name = pname\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal param = params[name]\n\t\t\n\t\t-- If a parameter without the trailing index was found, and\n\t\t-- require_index is set on the param, set the param to nil to treat it\n\t\t\
      -- as if it isn't recognized.\n\t\tif not index and param and param.require_index then\n\t\t\tparam = nil\n\t\tend\n\t\t\n\t\t-- If no index was found, use 1 as the default index.\n\t\t-- This makes list parameters like g, g2, g3 put g at index 1.\n\t\t\
      index = index or 1\n\t\t\n\t\t-- If the argument is not in the list of parameters, trigger an error.\n\t\t-- return_unknown suppresses the error, and stores it in a separate list instead.\n\t\tif not param then\n\t\t\tif return_unknown then\n\t\t\t\targs_unknown[name]\
      \ = val\n\t\t\telse\n\t\t\t\terror(\"The parameter \\\"\" .. name .. \"\\\" is not used by this template.\", 2)\n\t\t\tend\n\t\telse\n\t\t\t-- Remove leading and trailing whitespace unless allow_whitespace is true.\n\t\t\tif not param.allow_whitespace\
      \ then\n\t\t\t\tval = mw.text.trim(val)\n\t\t\tend\n\t\t\t\n\t\t\t-- Empty string is equivalent to nil unless allow_empty is true.\n\t\t\tif val == \"\" and not param.allow_empty then\n\t\t\t\tval = nil\n\t\t\tend\n\t\t\t\n\t\t\t-- Convert to proper type\
      \ if necessary.\n\t\t\tif param.type == \"boolean\" then\n\t\t\t\tval = not (not val or val == \"\" or val == \"0\" or val == \"no\" or val == \"n\" or val == \"false\")\n\t\t\telseif param.type == \"number\" then\n\t\t\t\tval = tonumber(val)\n\t\t\telseif\
      \ param.type then\n\t\t\t\trequire(\"Module:debug\").track {\n\t\t\t\t\t\"parameters/unrecognized type\",\n\t\t\t\t\t\"parameters/unrecognized type/\" .. tostring(param.type)\n\t\t\t\t}\n\t\t\tend\n\t\t\t\n\t\t\t-- Can't use \"if val\" alone, because val\
      \ may be a boolean false.\n\t\t\tif val ~= nil then\n\t\t\t\t-- Mark it as no longer required, as it is present.\n\t\t\t\trequired[param.alias_of or name] = nil\n\t\t\t\t\n\t\t\t\t-- Store the argument value.\n\t\t\t\tif param.list then\n\t\t\t\t\t-- If\
      \ the parameter is an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\t\targs_new[name][index] = val\n\t\t\t\t\t\t\n\t\t\t\t\t\t-- Store\
      \ the highest index we find.\n\t\t\t\t\t\targs_new[name].maxindex = math.max(index, args_new[name].maxindex)\n\t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\t\t\t\t\t\
      args_new[param.alias_of][index] = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest index we find.\n\t\t\t\t\t\t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of]\
      \ = val\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\t-- If the parameter is an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\
      \t\targs_new[name] = val\n\t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\t\t\t\t\targs_new[param.alias_of][1] = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest\
      \ index we find.\n\t\t\t\t\t\t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of] = val\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\
      \t\n\t-- The required table should now be empty.\n\t-- If any entry remains, trigger an error, unless we're in the template namespace.\n\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\tlocal list = {}\n\t\tfor name, param in pairs(required)\
      \ do\n\t\t\ttable.insert(list, name)\n\t\tend\n\t\t\n\t\tlocal count = #list\n\t\tif count == 1 then\n\t\t\terror('The parameter \"' .. list[1] .. '\" is required.', 2)\n\t\telseif count == 2 then\n\t\t\terror('The parameters \"' .. table.concat(list,\
      \ '\" and \"') .. '\" are required.', 2)\n\t\telseif count &gt; 2 then\n\t\t\terror('The parameters \"' .. mw.text.listToText(list, '\", \"', '\", and \"') .. '\" are required.', 2)\n\t\tend\n\tend\n\t\n\t-- Remove holes in any list parameters if needed.\n\
      \tfor name, val in pairs(args_new) do\n\t\tif type(val) == \"table\" and not params[name].allow_holes then\n\t\t\targs_new[name] = remove_holes(val)\n\t\tend\n\tend\n\t\n\tif return_unknown then\n\t\treturn args_new, args_unknown\n\telse\n\t\treturn args_new\n\
      \tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:01.204Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Astring&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58854 t=1555362601075110
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:01 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 581066230, 263230585, 706676066
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4099547\" pageid=\"4099547\" ns=\"828\" title=\"Module:string\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-10-18T08:33:33Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"okay for count to be nil\" xml:space=\"preserve\">local str = {}\n\n-- Cannot include null byte.\nlocal UTF8_char = \"[\\1-\\127\\194-\\244][\\128-\\191]*\"\n\n--[[\nulen\n\nCounts UTF-8 characters. Faster\
      \ than mw.ustring.len.\n\nAssumes that the encoding is correct. Unlike mw.ustring.len, does not return nil\nif encoding is invalid.\n\nDoes not count the bytes 192, 193, and 245-255. They are not used in UTF-8 and\nwill not occur if the string is valid.\
      \ They are replaced with the replacement\ncharacter (U+FFFD) on MediaWiki pages.\n--]]\nfunction str.ulen(text)\n\tlocal _, length = string.gsub(text, UTF8_char, \"\")\n\treturn length\nend\n\n--[[\nlen\n\nThis function returns the length of the target\
      \ string.\n\nUsage:\n{{#invoke:string|len|target_string|}}\nOR\n{{#invoke:string|len|s=target_string}}\n\nParameters\n    s: The string whose length to report\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing\
      \ whitespace from the target string.\n]]\nfunction str.len(frame)\n\tlocal new_args = str._getParameters(frame.args, { 's' });\n\tlocal s = new_args['s'] or '';\n\treturn mw.ustring.len(s)\nend\n\n--[[\nsub\n\nThis function returns a substring of the target\
      \ string at specified indices.\n\nUsage:\n{{#invoke:string|sub|target_string|start_index|end_index}}\nOR\n{{#invoke:string|sub|s=target_string|i=start_index|j=end_index}}\n\nParameters\n    s: The string to return a subset of\n    i: The fist index of\
      \ the substring to return, defaults to 1.\n    j: The last index of the string to return, defaults to the last character.\n    \nThe first character of the string is assigned an index of 1.  If either i or j\nis a negative value, it is interpreted the\
      \ same as selecting a character by\ncounting from the end of the string.  Hence, a value of -1 is the same as\nselecting the last character of the string.\n\nIf the requested indices are out of range for the given string, an error is\nreported.\n]]\nfunction\
      \ str.sub(frame)\n\tlocal new_args = str._getParameters(frame.args, { 's', 'i', 'j' });\n\tlocal s = new_args['s'] or '';\n\tlocal i = tonumber(new_args['i']) or 1;\n\tlocal j = tonumber(new_args['j']) or -1;\n\t\n\tlocal len = mw.ustring.len(s);\n\t\n\
      \t-- Convert negatives for range checking\n\tif i &lt; 0 then\n\t\ti = len + i + 1;\n\tend\n\tif j &lt; 0 then\n\t\tj = len + j + 1;\n\tend\n\t\n\tif i &gt; len or j &gt; len or i &lt; 1 or j &lt; 1 then\n\t\treturn str._error('String subset index out\
      \ of range');\n\tend\n\tif j &lt; i then\n\t\treturn str._error('String subset indices out of order');\n\tend\n\t\n\treturn mw.ustring.sub(s, i, j)\nend\n\n--[[\nThis function implements that features of {{str sub old}} and is kept in order\nto maintain\
      \ these older templates.\n]]\nfunction str.sublength(frame)\n\tlocal i = tonumber(frame.args.i) or 0\n\tlocal len = tonumber(frame.args.len)\n\treturn mw.ustring.sub(frame.args.s, i + 1, len and (i + len))\nend\n\n--[[\nmatch\n\nThis function returns a\
      \ substring from the source string that matches a\nspecified pattern.\n\nUsage:\n{{#invoke:string|match|source_string|pattern_string|start_index|match_number|plain_flag|nomatch_output}}\nOR\n{{#invoke:string|pos|s=source_string|pattern=pattern_string|start=start_index\n\
      \    |match=match_number|plain=plain_flag|nomatch=nomatch_output}}\n\nParameters\n    s: The string to search\n    pattern: The pattern or string to find within the string\n    start: The index within the source string to start the search.  The first\n\
      \        character of the string has index 1.  Defaults to 1.\n    match: In some cases it may be possible to make multiple matches on a single\n        string.  This specifies which match to return, where the first match is\n        match= 1.  If a negative\
      \ number is specified then a match is returned\n        counting from the last match.  Hence match = -1 is the same as requesting\n        the last match.  Defaults to 1.\n    plain: A flag indicating that the pattern should be understood as plain\n  \
      \      text.  Defaults to false.\n    nomatch: If no match is found, output the \"nomatch\" value rather than an error.\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from each string.  In\
      \ some circumstances this is desirable, in\nother cases one may want to preserve the whitespace.\n\nIf the match_number or start_index are out of range for the string being queried, then\nthis function generates an error.  An error is also generated if\
      \ no match is found.\nIf one adds the parameter ignore_errors=true, then the error will be suppressed and\nan empty string will be returned on any failure.\n\nFor information on constructing Lua patterns, a form of [regular expression], see:\n\n* http://www.lua.org/manual/5.1/manual.html#5.4.1\n\
      * http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Patterns\n* http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Ustring_patterns\n\n]]\nfunction str.match(frame)\n\tlocal new_args = str._getParameters(frame.args,\
      \ { 's', 'pattern', 'start', 'match', 'plain', 'nomatch' });\n\tlocal s = new_args['s'] or '';\n\tlocal start = tonumber(new_args['start']) or 1;\n\tlocal plain_flag = str._getBoolean(new_args['plain'] or false);\n\tlocal pattern = new_args['pattern']\
      \ or '';\n\tlocal match_index = math.floor(tonumber(new_args['match']) or 1);\n\tlocal nomatch = new_args['nomatch'];\n\t\n\tif s == '' then\n\t\treturn str._error('Target string is empty');\n\tend\n\tif pattern == '' then\n\t\treturn str._error('Pattern\
      \ string is empty');\n\tend\n\tif math.abs(start) &lt; 1 or math.abs(start) &gt; mw.ustring.len(s) then\n\t\treturn str._error('Requested start is out of range');\n\tend\n\tif match_index == 0 then\n\t\treturn str._error('Match index is out of range');\n\
      \tend\n\tif plain_flag then\n\t\tpattern = str.pattern_escape(pattern);\n\tend\n\t\n\tlocal result\n\tif match_index == 1 then\n\t\t-- Find first match is simple case\n\t\tresult = mw.ustring.match(s, pattern, start)\n\telse\n\t\tif start &gt; 1 then\n\
      \t\t\ts = mw.ustring.sub(s, start);\n\t\tend\n\t\t\n\t\tlocal iterator = mw.ustring.gmatch(s, pattern);\n\t\tif match_index &gt; 0 then\n\t\t\t-- Forward search\n\t\t\tfor w in iterator do\n\t\t\t\tmatch_index = match_index - 1;\n\t\t\t\tif match_index\
      \ == 0 then\n\t\t\t\t\tresult = w;\n\t\t\t\t\tbreak;\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\t-- Reverse search\n\t\t\tlocal result_table = {};\n\t\t\tlocal count = 1;\n\t\t\tfor w in iterator do\n\t\t\t\tresult_table[count] = w;\n\t\t\t\tcount = count\
      \ + 1;\n\t\t\tend\n\t\t\t\n\t\t\tresult = result_table[count + match_index];\n\t\tend\n\tend\n\t\n\tif result == nil then\n\t\tif nomatch == nil then\n\t\t\treturn str._error('Match not found');\n\t\telse\n\t\t\treturn nomatch;\n\t\tend\n\telse\n\t\treturn\
      \ result;\n\tend\nend\n\n--[[\npos\n\nThis function returns a single character from the target string at position pos.\n\nUsage:\n{{#invoke:string|pos|target_string|index_value}}\nOR\n{{#invoke:string|pos|target=target_string|pos=index_value}}\n\nParameters\n\
      \    target: The string to search\n    pos: The index for the character to return\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from the target string.  In some circumstances this is desirable,\
      \ in\nother cases one may want to preserve the whitespace.\n\nThe first character has an index value of 1.\n\nIf one requests a negative value, this function will select a character by counting backwards\nfrom the end of the string.  In other words pos\
      \ = -1 is the same as asking for the last character.\n\nA requested value of zero, or a value greater than the length of the string returns an error.\n]]\nfunction str.pos(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'target', 'pos' });\n\
      \tlocal target_str = new_args['target'] or '';\n\tlocal pos = tonumber(new_args['pos']) or 0;\n\t\n\tif pos == 0 or math.abs(pos) &gt; mw.ustring.len(target_str) then\n\t\treturn str._error('String index out of range');\n\tend\n\t\n\treturn mw.ustring.sub(target_str,\
      \ pos, pos);\nend\n\n--[[\nstr_find\n\nThis function duplicates the behavior of {{str_find}}, including all of its quirks.\nThis is provided in order to support existing templates, but is NOT RECOMMENDED for\nnew code and templates.  New code is recommended\
      \ to use the \"find\" function instead.\n\nReturns the first index in \"source\" that is a match to \"target\".  Indexing is 1-based,\nand the function returns -1 if the \"target\" string is not present in \"source\".\n\nImportant Note: If the \"target\"\
      \ string is empty / missing, this function returns a\nvalue of \"1\", which is generally unexpected behavior, and must be accounted for\nseparatetly.\n]]\nfunction str.str_find(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'source', 'target'\
      \ });\n\tlocal source_str = new_args['source'] or '';\n\tlocal target_str = new_args['target'] or '';\n\t\n\tif target_str == '' then\n\t\treturn 1;\n\tend\n\t\n\tlocal start = mw.ustring.find(source_str, target_str, 1, true)\n\tif start == nil then\n\t\
      \tstart = -1\n\tend\n\t\n\treturn start\nend\n\n--[[\nfind\n\nThis function allows one to search for a target string or pattern within another\nstring.\n\nUsage:\n{{#invoke:string|find|source_str|target_string|start_index|plain_flag}}\nOR\n{{#invoke:string|find|source=source_str|target=target_str|start=start_index|plain=plain_flag}}\n\
      \nParameters\n    source: The string to search\n    target: The string or pattern to find within source\n    start: The index within the source string to start the search, defaults to 1\n    plain: Boolean flag indicating that target should be understood\
      \ as plain\n        text and not as a Lua style regular expression, defaults to true\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from the parameter.  In some circumstances this is desirable,\
      \ in\nother cases one may want to preserve the whitespace.\n\nThis function returns the first index &gt;= \"start\" where \"target\" can be found\nwithin \"source\".  Indices are 1-based.  If \"target\" is not found, then this\nfunction returns an empty\
      \ string.  If either \"source\" or \"target\" are missing / empty, this\nfunction also returns an empty string.\n\nThis function should be safe for UTF-8 strings.\n]]\nfunction str.find(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2]\
      \ = { required = true },\n\t\t[3] = { type = \"number\" },\n\t\t[4] = { type = \"boolean\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\treturn mw.ustring.find(args[1], args[2], args[3], args[4])\nend\n\n\
      --[[\nreplace\n\nThis function allows one to replace a target string or pattern within another\nstring.\n\nUsage:\n{{#invoke:string|replace|source_str|pattern_string|replace_string|replacement_count|plain_flag}}\nOR\n{{#invoke:string|replace|source=source_string|pattern=pattern_string|replace=replace_string|\n\
      \   count=replacement_count|plain=plain_flag}}\n\nParameters\n    source: The string to search\n    pattern: The string or pattern to find within source\n    replace: The replacement text\n    count: The number of occurences to replace, defaults to all.\n\
      \    plain: Boolean flag indicating that pattern should be understood as plain\n        text and not as a Lua style regular expression, defaults to true\n]]\nfunction str.replace(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'source', 'pattern',\
      \ 'replace', 'count', 'plain' });\n\tlocal source_str = new_args['source'] or '';\n\tlocal pattern = new_args['pattern'] or '';\n\tlocal replace = new_args['replace'] or '';\n\tlocal count = tonumber(new_args['count']);\n\tlocal plain = new_args['plain']\
      \ or true;\n\t\n\tif source_str == '' or pattern == '' then\n\t\treturn source_str;\n\tend\n\tplain = str._getBoolean(plain);\n\t\n\tif plain then\n\t\tpattern = str.pattern_escape(pattern);\n\t\treplace = mw.ustring.gsub(replace, \"%%\", \"%%%%\"); --Only\
      \ need to escape replacement sequences.\n\tend\n\t\n\tlocal result;\n\t\n\tresult = mw.ustring.gsub(source_str, pattern, replace, count);\n\t\n\treturn result;\nend\n\n\nfunction str.gsub(frame)\n\tlocal params = {\n\t\t[1] = { required = true, allow_empty\
      \ = true },\n\t\t[2] = { required = true, allow_empty = true },\n\t\t[3] = { required = true, allow_empty = true },\n\t\t[4] = { type = \"number\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\treturn (mw.ustring.gsub(args[1],\
      \ args[2], args[3], args[4]))\nend\n\n\n--[[\n    simple function to pipe string.rep to templates.\n]]\n\nfunction str.rep(frame)\n\tlocal repetitions = tonumber(frame.args[2])\n\tif not repetitions then\n\t\treturn str._error('function rep expects a number\
      \ as second parameter, received \"' .. (frame.args[2] or '') .. '\"')\n\tend\n\treturn string.rep(frame.args[1] or '', repetitions)\nend\n\nfunction str.lower(frame)\n\tlocal text = frame.args[1] or ''\n\treturn mw.ustring.lower(text)\nend\n\nstr.lc =\
      \ str.lower\n\n--[[\nHelper function that populates the argument list given that user may need to use a mix of\nnamed and unnamed parameters.  This is relevant because named parameters are not\nidentical to unnamed parameters due to string trimming, and\
      \ when dealing with strings\nwe sometimes want to either preserve or remove that whitespace depending on the application.\n]]\nfunction str._getParameters(frame_args, arg_list)\n\tlocal new_args = {};\n\tlocal index = 1;\n\tlocal value;\n\t\n\tfor _, arg\
      \ in ipairs(arg_list) do\n\t\tvalue = frame_args[arg]\n\t\tif value == nil then\n\t\t\tvalue = frame_args[index];\n\t\t\tindex = index + 1;\n\t\tend\n\t\tnew_args[arg] = value;\n\tend\n\t\n\treturn new_args;\nend\n\n--[[\nHelper function to handle error\
      \ messages.\n]]\nfunction str._error(error_str)\n\tlocal frame = mw.getCurrentFrame();\n\tlocal error_category = frame.args.error_category or 'Errors reported by Module String';\n\tlocal ignore_errors = frame.args.ignore_errors or false;\n\tlocal no_category\
      \ = frame.args.no_category or false;\n\t\n\tif str._getBoolean(ignore_errors) then\n\t\treturn '';\n\tend\n\t\n\tlocal error_str = '&lt;strong class=\"error\"&gt;String Module Error: ' .. error_str .. '&lt;/strong&gt;';\n\tif error_category ~= '' and not\
      \ str._getBoolean(no_category) then\n\t\terror_str = '[[Category:' .. error_category .. ']]' .. error_str;\n\tend\n\t\n\treturn error_str;\nend\n\n--[[\nHelper Function to interpret boolean strings\n]]\nfunction str._getBoolean(boolean_str)\n\tlocal boolean_value;\n\
      \t\n\tif type(boolean_str) == 'string' then\n\t\tboolean_str = boolean_str:lower();\n\t\tif boolean_str == 'false' or boolean_str == 'no' or boolean_str == '0'\n\t\t\t\tor boolean_str == '' then\n\t\t\tboolean_value = false;\n\t\telse\n\t\t\tboolean_value\
      \ = true;\n\t\tend\n\telseif type(boolean_str) == 'boolean' then\n\t\tboolean_value = boolean_str;\n\telse\n\t\terror('No boolean value found');\n\tend\n\treturn boolean_value\nend\n\n--[[\nHelper function that escapes all pattern characters – ().%+-*?[^$]\
      \ – so that they will be treated\nas plain text.\n]]\nfunction str.pattern_escape(pattern_str)\n\tlocal invoked = false\n\t\n\tif type(pattern_str) == \"table\" then\n\t\tif pattern_str.args then\n\t\t\tlocal frame = pattern_str\n\t\t\tinvoked = true\n\
      \t\t\t\n\t\t\tif frame.args[1] then\n\t\t\t\tpattern_str = frame.args[1]\n\t\t\telse\n\t\t\t\tpattern_str = frame:getParent().args[1]\n\t\t\tend\n\t\telse\n\t\t\terror(\"First argument to pattern_escape should be a string, a number, or a frame object.\"\
      )\n\t\tend\n\telseif not (type(pattern_str) == \"string\" or type(pattern_str) == \"number\") then\n\t\terror(\"First argument to pattern_escape should be a string or a number.\")\n\tend\n\t\n\tif invoked then\n\t\tlocal escaped = mw.ustring.gsub(pattern_str,\
      \ \"([%(%)%.%%%+%-%*%?%[%^%$%]])\", \"%%%1\")\n\t\treturn escaped\n\telse\n\t\treturn mw.ustring.gsub(pattern_str, \"([%(%)%.%%%+%-%*%?%[%^%$%]])\", \"%%%1\");\n\tend\nend\n\nfunction str.count(text, pattern, plain)\n\tif not (type(text) == \"string\"\
      \ or type(text) == \"number\") then\n\t\terror('The first argument to the function \"count\" must be a string or a number, not a ' .. type(text) .. '.')\n\tend\n\t\n\tif not (type(pattern) == \"string\" or type(pattern) == \"number\") then\n\t\terror('The\
      \ first argument to the function \"count\" must be a string or a number, not a ' .. type(text) .. '.')\n\tend\n\t\n\tif plain then\n\t\tpattern = str.pattern_escape(pattern)\n\tend\n\t\n\tlocal _, count = mw.ustring.gsub(text, pattern, \"\")\n\t\n\treturn\
      \ count\nend\n\nfunction str.plain_gsub(text, pattern, replacement)\n\tlocal invoked = false\n\t\n\tif type(text) == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1]\
      \ = {},\n\t\t\t\t[2] = {},\n\t\t\t\t[3] = { allow_empty = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\t\t\treplacement = args[3]\n\t\t\
      else\n\t\t\terror(\"If the first argument to plain_gsub is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not (type(pattern) == \"string\" or type(pattern) == \"number\") then\n\t\t\terror(\"The second argument to plain_gsub should be\
      \ a string or a number.\")\n\t\tend\n\t\t\n\t\tif not (type(replacement) == \"string\" or type(replacement) == \"number\") then\n\t\t\terror(\"The third argument to plain_gsub should be a string or a number.\")\n\t\tend\n\tend\n\t\n\tpattern = str.pattern_escape(pattern)\n\
      \t\n\tif invoked then\n\t\ttext = mw.ustring.gsub(text, pattern, replacement)\n\t\treturn text\n\telse\n\t\treturn mw.ustring.gsub(text, pattern, replacement)\n\tend\nend\n\nfunction str.matchToArray(text, pattern)\n\tlocal invoked = false\n\t\n\tif type(text)\
      \ == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = { required = true },\n\t\t\t\t[2] = { required = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\"\
      ).process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\t\telse\n\t\t\terror(\"If the first argument to matchToArray is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not (type(pattern) == \"string\" or\
      \ type(pattern) == \"number\") then\n\t\t\terror(\"The second argument to matchToArray should be a string or a number.\")\n\t\tend\n\tend\n\t\n\tlocal matches = {}\n\tlocal i = 0\n\tfor match in mw.ustring.gmatch(text, pattern) do\n\t\ti = i + 1\n\t\t\
      matches[i] = match\n\tend\n\t\n\tif i &gt; 0 then\n\t\tif invoked then\n\t\t\treturn table.concat(matches, \", \")\n\t\telse\n\t\t\treturn matches\n\t\tend\n\telse\n\t\tif invoked then\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn nil\n\t\tend\n\tend\nend\n\
      \n--[=[\n\tSimilar to gmatch, but it returns the count of the match in addition to the\n\tlist of captures, something like ipairs().\n\t\n\tIf the pattern doesn't contain any captures, the whole match is returned.\n\t\n\tInvoke thus:\n\t\n\t\tfor i, whole_match\
      \ in require(\"Module:string\").imatch(text, pattern) do\n\t\t\t[ do something with i and whole_match ]\n\t\tend\n\t\n\tor\n\t\n\t\tfor i, capture1[, capture2[, capture3[, ...]]] in require(\"Module:string\").imatch(text, pattern) do\n\t\t\t[ do something\
      \ with i and capture1 ]\n\t\tend\n\t\n\tFor example, this code\n\t\tfor i, whole_match in require(\"Module:string\").imatch(\"a b c\", \"[a-z]\") do\n\t\t\tmw.log(i, whole_match)\n\t\tend\n\twill log\n\t\t1\ta\n\t\t2\tb\n\t\t3\tc\n]=]\nfunction str.imatch(text,\
      \ pattern, pos, plain, use_basic_Lua_function)\n\tlocal i = 0\n\tpos = pos or 0\n\tif not string.find(pattern, \"%b()\") then\n\t\tpattern = \"(\" .. pattern .. \")\"\n\tend\n\tlocal find = use_basic_Lua_function and string.find or mw.ustring.find\n\t\
      return function()\n\t\ti = i + 1\n\t\tlocal return_values = { find(text, pattern, pos, plain) }\n\t\tlocal j = return_values[2]\n\t\t\n\t\tif return_values[3] then\n\t\t\tpos = j + 1\n\t\t\t-- Skip the first two returned values, which are the indices of\
      \ the\n\t\t\t-- whole match.\n\t\t\treturn i, unpack(return_values, 3)\n\t\tend\n\tend\nend\n\nfunction str.escapebytes(s)\n\treturn (string.gsub(s,\n\t\t'.',\n\t\tfunction(char)\n\t\t\treturn ('\\\\%03d'):format(string.byte(char))\n\t\tend))\nend\n\n\
      function str.URIdecode(frame)\n\treturn mw.uri.decode(frame.args[1], frame.args[2] or \"PATH\")\nend\n\nreturn str</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:01.395Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Atable&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49522 t=1555362601276369
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:01 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 218695621, 559599924, 695695259
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5122966\" pageid=\"5122966\" ns=\"828\" title=\"Module:table\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-14T04:16:37Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"add deepEquals, deepEqualsList for deep comparisons\" xml:space=\"preserve\">--[[\n------------------------------------------------------------------------------------\n--                      table (formerly\
      \ TableTools)                               --\n--                                                                                --\n-- This module inclcudes a number of functions for dealing with Lua tables.        --\n-- It is a meta-module, meant to\
      \ be called from other Lua modules, and should     --\n-- not be called directly from #invoke.                                           --\n------------------------------------------------------------------------------------\n--]]\n\n--[[\n\tInserting\
      \ new values into a table using a local \"index\" variable, which is\n\tincremented each time, is faster than using \"table.insert(t, x)\" or\n\t\"t[#t + 1] = x\". See the talk page.\n]]\n\nlocal libraryUtil = require('libraryUtil')\n\nlocal export = {}\n\
      \n-- Define often-used variables and functions.\nlocal floor = math.floor\nlocal infinity = math.huge\nlocal checkType = libraryUtil.checkType\nlocal checkTypeMulti = libraryUtil.checkTypeMulti\n\nlocal function _check(funcName, expectType)\n\tif type(expectType)\
      \ == \"string\" then\n\t\treturn function(argIndex, arg, nilOk)\n\t\t\tcheckType(funcName, argIndex, arg, expectType, nilOk)\n\t\tend\n\telse\n\t\treturn function(argIndex, arg, expectType, nilOk)\n\t\t\tif type(expectType) == \"table\" then\n\t\t\t\t\
      checkTypeMulti(funcName, argIndex, arg, expectType, nilOk)\n\t\t\telse\n\t\t\t\tcheckType(funcName, argIndex, arg, expectType, nilOk)\n\t\t\tend\n\t\tend\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- isPositiveInteger\n--\n-- This function returns true if the given value is a positive integer, and false\n-- if not. Although it doesn't operate on tables, it is included here as it is\n-- useful for determining whether a given table key is in the array\
      \ part or the\n-- hash part of a table.\n------------------------------------------------------------------------------------\n--]]\nfunction export.isPositiveInteger(v)\n\treturn type(v) == 'number' and v &gt;= 1 and floor(v) == v and v &lt; infinity\n\
      end\n\n--[[\n------------------------------------------------------------------------------------\n-- isNan\n--\n-- This function returns true if the given number is a NaN value, and false\n-- if not. Although it doesn't operate on tables, it is included\
      \ here as it is\n-- useful for determining whether a value can be a valid table key. Lua will\n-- generate an error if a NaN is used as a table key.\n------------------------------------------------------------------------------------\n--]]\nfunction export.isNan(v)\n\
      \tif type(v) == 'number' and tostring(v) == '-nan' then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- shallowClone\n--\n-- This returns a clone of\
      \ a table. The value returned is a new table, but all\n-- subtables and functions are shared. Metamethods are respected, but the returned\n-- table will have no metatable of its own.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.shallowClone(t)\n\tlocal ret = {}\n\tfor k, v in pairs(t) do\n\t\tret[k] = v\n\tend\n\treturn ret\nend\n\n--[[\nShallow copy\n]]\nfunction export.shallowcopy(orig)\n\tlocal orig_type = type(orig)\n\tlocal copy\n\tif orig_type == 'table'\
      \ then\n\t\tcopy = {}\n\t\tfor orig_key, orig_value in pairs(orig) do\n\t\t\tcopy[orig_key] = orig_value\n\t\tend\n\telse -- number, string, boolean, etc\n\t\tcopy = orig\n\tend\n\treturn copy\nend\n\n--[[\n\tRecursive deep copy function\n\tEquivalent\
      \ to mw.clone?\n]]\nlocal function deepcopy(orig, includeMetatable, already_seen)\n\t-- Stores copies of tables indexed by the original table.\n\talready_seen = already_seen or {}\n\t\n\tlocal copy = already_seen[orig]\n\tif copy ~= nil then\n\t\treturn\
      \ copy\n\tend\n\t\n\tif type(orig) == 'table' then\n\t\tcopy = {}\n\t\tfor orig_key, orig_value in pairs(orig) do\n\t\t\tcopy[deepcopy(orig_key, includeMetatable, already_seen)] = deepcopy(orig_value, includeMetatable, already_seen)\n\t\tend\n\t\talready_seen[orig]\
      \ = copy\n\t\t\n\t\tif includeMetatable then\n\t\t\tlocal mt = getmetatable(orig)\n\t\t\tif mt ~= nil then\n\t\t\t\tlocal mt_copy = deepcopy(mt, includeMetatable, already_seen)\n\t\t\t\tsetmetatable(copy, mt_copy)\n\t\t\tend\n\t\tend\n\telse -- number,\
      \ string, boolean, etc\n\t\tcopy = orig\n\tend\n\treturn copy\nend\n\nfunction export.deepcopy(orig, noMetatable, already_seen)\n\tcheckType(\"deepcopy\", 3, already_seen, \"table\", true)\n\t\n\treturn deepcopy(orig, not noMetatable, already_seen)\nend\n\
      \n--[[\n------------------------------------------------------------------------------------\n-- removeDuplicates\n--\n-- This removes duplicate values from an array. Non-positive-integer keys are\n-- ignored. The earliest value is kept, and all subsequent\
      \ duplicate values are\n-- removed, but otherwise the array order is unchanged.\n------------------------------------------------------------------------------------\n--]]\nfunction export.removeDuplicates(t)\n\tcheckType('removeDuplicates', 1, t, 'table')\n\
      \tlocal isNan = export.isNan\n\tlocal ret, exists = {}, {}\n\tlocal index = 1\n\tfor _, v in ipairs(t) do\n\t\tif isNan(v) then\n\t\t\t-- NaNs can't be table keys, and they are also unique, so we don't need to check existence.\n\t\t\tret[index] = v\n\t\
      \t\tindex = index + 1\n\t\telse\n\t\t\tif not exists[v] then\n\t\t\t\tret[index] = v\n\t\t\t\tindex = index + 1\n\t\t\t\texists[v] = true\n\t\t\tend\n\t\tend\n\tend\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- numKeys\n--\n-- This takes a table and returns an array containing the numbers of any numerical\n-- keys that have non-nil values, sorted in numerical order.\n------------------------------------------------------------------------------------\n--]]\n\
      function export.numKeys(t, checked)\n\tif not checked then\n\t\tcheckType('numKeys', 1, t, 'table')\n\tend\n\tlocal isPositiveInteger = export.isPositiveInteger\n\tlocal nums = {}\n\tlocal index = 1\n\tfor k, _ in pairs(t) do\n\t\tif isPositiveInteger(k)\
      \ then\n\t\t\tnums[index] = k\n\t\t\tindex = index + 1\n\t\tend\n\tend\n\ttable.sort(nums)\n\treturn nums\nend\n\nfunction export.maxIndex(t)\n\tcheckType('maxIndex', 1, t, 'table')\n\tlocal positiveIntegerKeys = export.numKeys(t)\n\tif positiveIntegerKeys[1]\
      \ then\n\t\treturn math.max(unpack(positiveIntegerKeys))\n\telse\n\t\treturn 0 -- ???\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- affixNums\n--\n-- This takes a table and returns an array\
      \ containing the numbers of keys with the\n-- specified prefix and suffix.\n-- affixNums({a1 = 'foo', a3 = 'bar', a6 = 'baz'}, \"a\")\n--\t\t↓\n-- {1, 3, 6}.\n------------------------------------------------------------------------------------\n--]]\n\
      function export.affixNums(t, prefix, suffix)\n\tlocal check = _check('affixNums')\n\tcheck(1, t, 'table')\n\tcheck(2, prefix, 'string', true)\n\tcheck(3, suffix, 'string', true)\n\t\n\tlocal function cleanPattern(s)\n\t\t-- Cleans a pattern so that the\
      \ magic characters ()%.[]*+-?^$ are interpreted literally.\n\t\ts = s:gsub('([%(%)%%%.%[%]%*%+%-%?%^%$])', '%%%1')\n\t\treturn s\n\tend\n\t\n\tprefix = prefix or ''\n\tsuffix = suffix or ''\n\tprefix = cleanPattern(prefix)\n\tsuffix = cleanPattern(suffix)\n\
      \tlocal pattern = '^' .. prefix .. '([1-9]%d*)' .. suffix .. '$'\n\t\n\tlocal nums = {}\n\tlocal index = 1\n\tfor k, _ in pairs(t) do\n\t\tif type(k) == 'string' then\n\t\t\tlocal num = mw.ustring.match(k, pattern)\n\t\t\tif num then\n\t\t\t\tnums[index]\
      \ = tonumber(num)\n\t\t\t\tindex = index + 1\n\t\t\tend\n\t\tend\n\tend\n\ttable.sort(nums)\n\treturn nums\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- numData\n--\n-- Given a table with keys like\
      \ (\"foo1\", \"bar1\", \"foo2\", \"baz2\"), returns a table\n-- of subtables in the format\n-- { [1] = {foo = 'text', bar = 'text'}, [2] = {foo = 'text', baz = 'text'} }\n-- Keys that don't end with an integer are stored in a subtable named \"other\".\n\
      -- The compress option compresses the table so that it can be iterated over with\n-- ipairs.\n------------------------------------------------------------------------------------\n--]]\nfunction export.numData(t, compress)\n\tlocal check = _check('numData')\n\
      \tcheck(1, t, 'table')\n\tcheck(2, compress, 'boolean', true)\n\t\n\tlocal ret = {}\n\tfor k, v in pairs(t) do\n\t\tlocal prefix, num = tostring(k):match('^([^0-9]*)([1-9][0-9]*)$')\n\t\tif num then\n\t\t\tnum = tonumber(num)\n\t\t\tlocal subtable = ret[num]\
      \ or {}\n\t\t\tif prefix == '' then\n\t\t\t\t-- Positional parameters match the blank string; put them at the start of the subtable instead.\n\t\t\t\tprefix = 1\n\t\t\tend\n\t\t\tsubtable[prefix] = v\n\t\t\tret[num] = subtable\n\t\telse\n\t\t\tlocal subtable\
      \ = ret.other or {}\n\t\t\tsubtable[k] = v\n\t\t\tret.other = subtable\n\t\tend\n\tend\n\tif compress then\n\t\tlocal other = ret.other\n\t\tret = export.compressSparseArray(ret)\n\t\tret.other = other\n\tend\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- compressSparseArray\n--\n-- This takes an array with one or more nil values, and removes the nil values\n-- while preserving the order, so that the array can be safely traversed with\n-- ipairs.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.compressSparseArray(t)\n\tcheckType('compressSparseArray', 1, t, 'table')\n\tlocal ret = {}\n\tlocal index = 1\n\tlocal nums = export.numKeys(t)\n\tfor _, num in ipairs(nums) do\n\t\tret[index] = t[num]\n\t\tindex = index + 1\n\t\
      end\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- sparseIpairs\n--\n-- This is an iterator for sparse arrays. It can be used like ipairs, but can\n-- handle nil values.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.sparseIpairs(t)\n\tcheckType('sparseIpairs', 1, t, 'table')\n\tlocal nums = export.numKeys(t)\n\tlocal i = 0\n\treturn function()\n\t\ti = i + 1\n\t\tlocal key = nums[i]\n\t\tif key then\n\t\t\treturn key, t[key]\n\t\telse\n\t\t\t\
      return nil, nil\n\t\tend\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- size\n--\n-- This returns the size of a key/value pair table. It will also work on arrays,\n-- but for arrays it is more\
      \ efficient to use the # operator.\n------------------------------------------------------------------------------------\n--]]\nfunction export.size(t)\n\tcheckType('size', 1, t, 'table')\n\tlocal i = 0\n\tfor _ in pairs(t) do\n\t\ti = i + 1\n\tend\n\t\
      return i\nend\n\n--[[\n-- This returns the length of a table, or the first integer key n counting from\n-- 1 such that t[n + 1] is nil. It is similar to the operator #, but may return\n-- a different value when there are gaps in the array portion of the\
      \ table.\n-- Intended to be used on data loaded with mw.loadData. For other tables, use #.\n--]]\nfunction export.length(t)\n\tlocal i = 0\n\trepeat\n\t\ti = i + 1\n\tuntil t[i] == nil\n\treturn i - 1\nend\n\n--[[\nTakes table and a value to be found.\n\
      If the value is in the array portion of the table, return true.\nIf the value is in the hashmap or not in the table, return false.\n]]\nfunction export.contains(list, x)\n\tfor _, v in ipairs(list) do\n\t\tif v == x then return true end\n\tend\n\treturn\
      \ false\nend\n\n--[[\nRecursively compare two values that may be tables, including tables with\nnested tables as values. Return true if both values are structurally equal.\nNote that this handles arbitary levels of nesting. If all tables are known\nto\
      \ be lists (with only integral keys), use export.deepEqualsList, which will\nbe more efficient.\n\nNOTE: This is *NOT* smart enough to properly handle cycles; in such a case, it\nwill get into an infinite loop.\n]]\nfunction export.deepEquals(x, y)\n \
      \   if type(x) == \"table\" and type(y) == \"table\" then\n    \t-- Two tables are the same if they have the same number of elements\n    \t-- and all keys that are present in one of the tables compare equal\n    \t-- to the corresponding keys in the other\
      \ table, using structural\n    \t-- comparison.\n    \tlocal sizex = 0\n        for key, value in pairs(x) do\n            if not export.deepEquals(value, y[key]) then\n                return false\n            end\n            sizex = sizex + 1\n    \
      \    end\n        local sizey = export.size(y)\n        if sizex ~= sizey then\n            return false\n        end \n        return true\n    end\n    return x == y\nend\n\n--[[\nRecursively compare two values that may be lists (i.e. tables with integral\n\
      keys), including lists with nested lists as values. Return true if both values\nare structurally equal. Note that this handles arbitary levels of nesting.\nResults are undefined if tables with non-integral keys are present anywhere in\neither structure;\
      \ if that may be the case, use export.deepEquals, which will\nhandle such tables correctly but be less efficient on lists than\nexport.deepEqualsList.\n\nNOTE: This is *NOT* smart enough to properly handle cycles; in such a case, it\nwill get into an infinite\
      \ loop.\n]]\nfunction export.deepEqualsList(x, y)\n    if type(x) == \"table\" and type(y) == \"table\" then\n        if #x ~= #y then\n            return false\n        end \n        for key, value in ipairs(x) do\n            if not export.deepEqualsList(value,\
      \ y[key]) then\n                return false\n            end\n        end\n        return true\n    end\n    return x == y\nend\n\n--[[\n\tFinds key for specified value in a given table.\n\tRoughly equivalent to reversing the key-value pairs in the table\
      \ –\n\t\treversed_table = { [value1] = key1, [value2] = key2, ... }\n\t– and then returning reversed_table[valueToFind].\n\t\n\tThe value can only be a string or a number\n\t(not nil, a boolean, a table, or a function).\n\t\n\tOnly reliable if there is\
      \ just one key with the specified value.\n\tOtherwise, the function returns the first key found,\n\tand the output is unpredictable.\n]]\nfunction export.keyFor(t, valueToFind)\n\tlocal check = _check('keyFor')\n\tcheck(1, t, 'table')\n\tcheck(2, valueToFind,\
      \ { 'string', 'number' })\n\t\n\tfor key, value in pairs(t) do\n\t\tif value == valueToFind then\n\t\t\treturn key\n\t\tend\n\tend\n\t\n\treturn nil\nend\n\n--[[\n\tThe default sorting function used in export.keysToList if no keySort\n\tis defined.\n]]\n\
      local function defaultKeySort(key1, key2)\n\t-- \"number\" &lt; \"string\", so numbers will be sorted before strings.\n\tlocal type1, type2 = type(key1), type(key2)\n\tif type1 ~= type2 then\n\t\treturn type1 &lt; type2\n\telse\n\t\treturn key1 &lt; key2\n\
      \tend\nend\n\n--[[\n\tReturns a list of the keys in a table, sorted using either the default\n\ttable.sort function or a custom keySort function.\n\tIf there are only numerical keys, numKeys is probably more efficient.\n]]\nfunction export.keysToList(t,\
      \ keySort, checked)\n\tif not checked then\n\t\tlocal check = _check('keysToList')\n\t\tcheck(1, t, 'table')\n\t\tcheck(2, keySort, 'function', true)\n\tend\n\t\n\tlocal list = {}\n\tlocal index = 1\n\tfor key, _ in pairs(t) do\n\t\tlist[index] = key\n\
      \t\tindex = index + 1\n\tend\n\t\n\t-- Place numbers before strings, otherwise sort using &lt;.\n\tif not keySort then\n\t\tkeySort = defaultKeySort\n\tend\n\t\n\ttable.sort(list, keySort)\n\t\n\treturn list\nend\n\n--[[\n\tIterates through a table, with\
      \ the keys sorted using the keysToList function.\n\tIf there are only numerical keys, sparseIpairs is probably more efficient.\n]]\nfunction export.sortedPairs(t, keySort)\n\tlocal check = _check('keysToList')\n\tcheck(1, t, 'table')\n\tcheck(2, keySort,\
      \ 'function', true)\n\t\n\tlocal list = export.keysToList(t, keySort, true)\n\t\n\tlocal i = 0\n\treturn function()\n\t\ti = i + 1\n\t\tlocal key = list[i]\n\t\tif key ~= nil then\n\t\t\treturn key, t[key]\n\t\telse\n\t\t\treturn nil, nil\n\t\tend\n\t\
      end\nend\n\nfunction export.reverseIpairs(list)\n\tcheckType('reverse_ipairs', 1, list, 'table')\n\t\n\tlocal i = #list + 1\n\treturn function()\n\t\ti = i - 1\n\t\tif list[i] ~= nil then\n\t\t\treturn i, list[i]\n\t\telse\n\t\t\treturn nil, nil\n\t\t\
      end\n\tend\nend\n\n--[=[\n\tJoins an array with serial comma and serial conjunction, normally \"and\".\n\tAn improvement on mw.text.listToText, which doesn't properly handle serial\n\tcommas.\n\t\n\tOptions:\n\t\t- conj\n\t\t\tConjunction to use; defaults\
      \ to \"and\".\n\t\t- italicizeConj\n\t\t\tItalicize conjunction: for [[Module:Template:also]]\n\t\t- dontTag\n\t\t\tDon't tag the serial comma and serial \"and\". For error messages, in\n\t\t\twhich HTML cannot be used.\n]=]\nfunction export.serialCommaJoin(seq,\
      \ options)\n\tlocal check = _check(\"serialCommaJoin\", \"table\")\n\tcheck(1, seq)\n\tcheck(2, options, true)\n\t\n\tlocal length = #seq\n\t\n\tif not options then\n\t\toptions = {}\n\tend\n\t\n\tlocal conj\n\tif length &gt; 1 then\n\t\tconj = options.conj\
      \ or \"and\"\n\t\tif options.italicizeConj then\n\t\t\tconj = \"''\" .. conj .. \"''\"\n\t\tend\n\tend\n\t\n\tif length == 0 then\n\t\treturn \"\"\n\telseif length == 1 then\n\t\treturn seq[1] -- nothing to join\n\telseif length == 2 then\n\t\treturn seq[1]\
      \ .. \" \" .. conj .. \" \" .. seq[2]\n\telse\n\t\tlocal comma = options.dontTag and \",\" or '&lt;span class=\"serial-comma\"&gt;,&lt;/span&gt;'\n\t\tconj = options.dontTag and ' ' .. conj .. \" \" or '&lt;span class=\"serial-and\"&gt; ' .. conj .. '&lt;/span&gt;\
      \ '\n\t\treturn table.concat(seq, \", \", 1, length - 1) ..\n\t\t\t\tcomma .. conj .. seq[length]\n\tend\nend\n\n--[[\n\tConcatenates all values in the table that are indexed by a number, in order.\n\tsparseConcat{ a, nil, c, d }  =&gt;  \"acd\"\n\tsparseConcat{\
      \ nil, b, c, d }  =&gt;  \"bcd\"\n]]\nfunction export.sparseConcat(t, sep, i, j)\n\tlocal list = {}\n\t\n\tlocal list_i = 0\n\tfor _, v in export.sparseIpairs(t) do\n\t\tlist_i = list_i + 1\n\t\tlist[list_i] = v\n\tend\n\t\n\treturn table.concat(list,\
      \ sep, i, j)\nend\n\n--[[\n\tValues of numberic keys in array portion of table are reversed:\n\t{ \"a\", \"b\", \"c\" } -&gt; { \"c\", \"b\", \"a\" }\n--]]\nfunction export.reverse(t)\n\tcheckType(\"reverse\", 1, t, \"table\")\n\t\n\tlocal new_t = {}\n\
      \tlocal new_t_i = 1\n\tfor i = #t, 1, -1 do\n\t\tnew_t[new_t_i] = t[i]\n\t\tnew_t_i = new_t_i + 1\n\tend\n\treturn new_t\nend\n\nfunction export.reverseConcat(t, sep, i, j)\n\treturn table.concat(export.reverse(t), sep, i, j)\nend\n\n-- { \"a\", \"b\"\
      , \"c\" } -&gt; { a = 1, b = 2, c = 3 }\nfunction export.invert(array)\n\tcheckType(\"invert\", 1, array, \"table\")\n\t\n\tlocal map = {}\n\tfor i, v in ipairs(array) do\n\t\tmap[v] = i\n\tend\n\t\n\treturn map\nend\n\n--[[\n\t{ \"a\", \"b\", \"c\" }\
      \ -&gt; { [\"a\"] = true, [\"b\"] = true, [\"c\"] = true }\n--]]\nfunction export.listToSet(t)\n\tcheckType(\"listToSet\", 1, t, \"table\")\n\t\n\tlocal set = {}\n\tfor _, item in ipairs(t) do\n\t\tset[item] = true\n\tend\n\treturn set\nend\n\n--[[\n\t\
      Returns true if all keys in the table are consecutive integers starting at 1.\n--]]\nfunction export.isArray(t)\n\tcheckType(\"isArray\", 1, t, \"table\")\n\t\n\tlocal i = 0\n\tfor _ in pairs(t) do\n\t\ti = i + 1\n\t\tif t[i] == nil then\n\t\t\treturn\
      \ false\n\t\tend\n\tend\n\treturn true\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:01.582Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Awikimedia+languages&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=69433 t=1555362601466819
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:01 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1283.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 220889258, 559599926, 704942470
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4506944\" pageid=\"4506944\" ns=\"828\" title=\"Module:wikimedia languages\"><revisions><rev user=\"Rua\" timestamp=\"2015-01-26T16:00:55Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal WikimediaLanguage = {}\n\nfunction WikimediaLanguage:getCode()\n\treturn self._code\nend\n\nfunction WikimediaLanguage:getCanonicalName()\n\
      \treturn self._rawData.canonicalName\nend\n\n--function WikimediaLanguage:getAllNames()\n--\treturn self._rawData.names\n--end\n\nfunction WikimediaLanguage:getType()\n\treturn \"Wikimedia\"\nend\n\nfunction WikimediaLanguage:getWiktionaryLanguage()\n\t\
      if not self._wiktionaryLanguageObject then\n\t\tself._wiktionaryLanguageObject = require(\"Module:languages\").getByCode(self._rawData.wiktionary_code)\n\tend\n\t\n\treturn self._wiktionaryLanguageObject\nend\n\n-- Do NOT use this method!\n-- All uses\
      \ should be pre-approved on the talk page!\nfunction WikimediaLanguage:getRawData()\n\treturn self._rawData\nend\n\nWikimediaLanguage.__index = WikimediaLanguage\n\n\nfunction export.getByCode(code)\n\t-- Only accept codes the software recognises\n\tif\
      \ not mw.language.isKnownLanguageTag(code) then\n\t\treturn nil\n\tend\n\t\n\tlocal rawData = mw.loadData(\"Module:wikimedia languages/data\")[code]\n\t\n\t-- If there is no specific Wikimedia code, then \"borrow\" the information\n\t-- from the general\
      \ Wiktionary language code\n\tif not rawData then\n\t\tlocal lang = require(\"Module:languages\").getByCode(code)\n\t\t\n\t\tif not lang then\n\t\t\treturn nil\n\t\tend\n\t\t\n\t\trawData = {canonicalName = lang:getCanonicalName(), wiktionary_code = code}\n\
      \telseif not rawData.canonicalName then\n\t\trawData = {canonicalName = require(\"Module:languages\").getByCode(rawData.wiktionary_code):getCanonicalName(), wiktionary_code = rawData.wiktionary_code}\n\tend\n\t\n\treturn setmetatable({ _rawData = rawData,\
      \ _code = code }, WikimediaLanguage)\nend\n\nfunction export.getByCodeWithFallback(code)\n\tlocal object = export.getByCode(code)\n\t\n\tif object then\n\t\treturn object\n\tend\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(code)\n\t\n\t\
      if not lang then\n\t\treturn nil\n\tend\n\t\n\treturn lang:getWikimediaLanguages()[1]\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:01.776Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Awikimedia+languages%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=69364 t=1555362601662463
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:01 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1315.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 752727875, 559599928, 705890770
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4506945\" pageid=\"4506945\" ns=\"828\" title=\"Module:wikimedia languages/data\"><revisions><rev user=\"Daniel Carrero\" timestamp=\"\
      2015-11-24T03:34:30Z\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Reverted edits by [[Special:Contributions/Daniel Carrero|Daniel Carrero]]. If you think this rollback is in error, please leave a message on my talk page.\" xml:space=\"\
      preserve\">local m = {}\n\nm[\"als\"] = {\n\twiktionary_code = \"gsw\",\n}\n\nm[\"bat-smg\"] = {\n\twiktionary_code = \"sgs\",\n}\n\nm[\"bs\"] = {\n\tcanonicalName = \"Bosnian\",\n\twiktionary_code = \"sh\",\n}\n\nm[\"bxr\"] = {\n\twiktionary_code = \"\
      bua\",\n}\n\nm[\"diq\"] = {\n\twiktionary_code = \"zza\",\n}\n\nm[\"eml\"] = {\n\tcanonicalName = \"Emiliano-Romagnolo\",\n\twiktionary_code = \"egl\",\n}\n\nm[\"fiu-vro\"] = {\n\twiktionary_code = \"vro\",\n}\n\nm[\"hr\"] = {\n\tcanonicalName = \"Croatian\"\
      ,\n\twiktionary_code = \"sh\",\n}\n\nm[\"ksh\"] = {\n\twiktionary_code = \"gmw-cfr\",\n}\n\nm[\"mhr\"] = {\n\twiktionary_code = \"chm\",\n}\n\nm[\"nrm\"] = {\n\twiktionary_code = \"nrf\",\n}\n\nm[\"roa-rup\"] = {\n\twiktionary_code = \"rup\",\n}\n\nm[\"\
      roa-tara\"] = {\n\twiktionary_code = \"roa-tar\",\n}\n\nm[\"simple\"] = {\n\tcanonicalName = \"Simple English\",\n\twiktionary_code = \"en\",\n}\n\nm[\"sr\"] = {\n\tcanonicalName = \"Serbian\",\n\twiktionary_code = \"sh\",\n}\n\nm[\"zh-classical\"] = {\n\
      \twiktionary_code = \"ltc\",\n}\n\nm[\"zh-min-nan\"] = {\n\twiktionary_code = \"nan\",\n}\n\nm[\"zh-yue\"] = {\n\twiktionary_code = \"yue\",\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:01.987Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=68182 t=1555362601855796
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:01 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1278.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 598016155, 656638983, 706054560
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4453474\" pageid=\"4453474\" ns=\"828\" title=\"Module:languages\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-13T02:06:03Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add getNonEtymological\" xml:space=\"preserve\">local export = {}\n\n--[=[\tThis function checks for things that could plausibly be a language code:\n\t\ttwo or three lowercase letters,\
      \ two or three groups of three lowercase\n\t\tletters with hyphens between them. If such a pattern is not found,\n\t\tit is likely the editor simply forgot to enter a language code. ]=]\n\nfunction export.err(langCode, param, text, template_tag)\n\tlocal\
      \ ordinals = {\n\t\t\"first\", \"second\", \"third\", \"fourth\", \"fifth\", \"sixth\",\n\t\t\"seventh\", \"eighth\", \"ninth\", \"tenth\", \"eleventh\", \"twelfth\",\n\t\t\"thirteenth\", \"fourteenth\", \"fifteenth\", \"sixteenth\", \"seventeenth\",\n\
      \t\t\"eighteenth\", \"nineteenth\", \"twentieth\"\n\t}\n\t\n\tif not template_tag then\n\t\ttemplate_tag = \"\"\n\telse\n\t\tif type(template_tag) ~= \"string\" then\n\t\t\ttemplate_tag = template_tag()\n\t\tend\n\t\ttemplate_tag = \" (Original template:\
      \ \" .. template_tag .. \")\"\n\tend\n\tlocal paramType = type(param)\n\tif paramType == \"number\" then\n\t\tordinal = ordinals[param]\n\t\tparam = ordinal .. ' parameter'\n\telseif paramType == \"string\" then\n\t\tparam = 'parameter \"' .. param ..\
      \ '\"'\n\telse\n\t\terror(\"The parameter name is \"\n\t\t\t\t.. (paramType == \"table\" and \"a table\" or tostring(param))\n\t\t\t\t.. \", but it should be a number or a string.\" .. template_tag, 2)\n\tend\n\t\n\t-- Can use string.find because language\
      \ codes only contain ASCII.\n\tif not langCode or langCode == \"\" then\n\t\terror(\"The \" .. param .. \" (\" .. (text or \"language code\") .. \") is missing.\" .. template_tag, 2)\n\telseif langCode:find(\"^%l%l%l?$\")\n\t\t\tor langCode:find(\"^%l%l%l%-%l%l%l$\"\
      )\n\t\t\tor langCode:find(\"^%l%l%l%-%l%l%l%-%l%l%l$\") then\n\t\terror(\"The language code \\\"\" .. langCode .. \"\\\" is not valid.\" .. template_tag, 2)\n\telse\n\t\terror(\"Please enter a \" .. (text or \"language code\") .. \" in the \" .. param\
      \ .. \".\" .. template_tag, 2)\n\tend\nend\n\nlocal function do_entry_name_or_sort_key_replacements(text, replacements)\n\tif replacements.from then\n\t\tfor i, from in ipairs(replacements.from) do\n\t\t\tlocal to = replacements.to[i] or \"\"\n\t\t\ttext\
      \ = mw.ustring.gsub(text, from, to)\n\t\tend\n\tend\n\t\n\tif replacements.remove_diacritics then\n\t\ttext = mw.ustring.toNFD(text)\n\t\ttext = mw.ustring.gsub(text,\n\t\t\t'[' .. replacements.remove_diacritics .. ']',\n\t\t\t'')\n\t\ttext = mw.ustring.toNFC(text)\n\
      \tend\n\t\n\treturn text\nend\n\nlocal Language = {}\n\nfunction Language:getCode()\n\treturn self._code\nend\n\n\nfunction Language:getCanonicalName()\n\treturn self._rawData[1] or self._rawData.canonicalName\nend\n\n\nfunction Language:getOtherNames()\n\
      \treturn self._rawData.otherNames or {}\nend\n\n\nfunction Language:getType()\n\treturn self._rawData.type or \"regular\"\nend\n\n\nfunction Language:getWikimediaLanguages()\n\tif not self._wikimediaLanguageObjects then\n\t\tlocal m_wikimedia_languages\
      \ = require(\"Module:wikimedia languages\")\n\t\tself._wikimediaLanguageObjects = {}\n\t\tlocal wikimedia_codes = self._rawData.wikimedia_codes or { self._code }\n\t\t\n\t\tfor _, wlangcode in ipairs(wikimedia_codes) do\n\t\t\ttable.insert(self._wikimediaLanguageObjects,\
      \ m_wikimedia_languages.getByCode(wlangcode))\n\t\tend\n\tend\n\t\n\treturn self._wikimediaLanguageObjects\nend\n\nfunction Language:getWikipediaArticle()\n\tif self._rawData.wikipedia_article then\n\t\treturn self._rawData.wikipedia_article \n\telseif\
      \ self._wikipedia_article then\n\t\treturn self._wikipedia_article\n\telseif self:getWikidataItem() and mw.wikibase then\n\t\tself._wikipedia_article = mw.wikibase.sitelink(self:getWikidataItem(), 'enwiki')\n\tend\n\tif not self._wikipedia_article then\n\
      \t\tself._wikipedia_article = mw.ustring.gsub(self:getCategoryName(), \"Creole language\", \"Creole\")\n\tend\n\treturn self._wikipedia_article\nend\n\nfunction Language:makeWikipediaLink()\n\treturn \"[[w:\" .. self:getWikipediaArticle() .. \"|\" .. self:getCanonicalName()\
      \ .. \"]]\"\nend\n\nfunction Language:getWikidataItem()\n\treturn self._rawData[2] or self._rawData.wikidata_item\nend\n\nfunction Language:getScripts()\n\tif not self._scriptObjects then\n\t\tlocal m_scripts = require(\"Module:scripts\")\n\t\tself._scriptObjects\
      \ = {}\n\t\t\n\t\tfor _, sc in ipairs(self._rawData.scripts or { \"None\" }) do\n\t\t\ttable.insert(self._scriptObjects, m_scripts.getByCode(sc))\n\t\tend\n\tend\n\t\n\treturn self._scriptObjects\nend\n\nfunction Language:getScriptCodes()\n\treturn self._rawData.scripts\
      \ or { \"None\" }\nend\n\nfunction Language:getFamily()\n\tif self._familyObject then\n\t\treturn self._familyObject\n\tend\n\t\t\n\tlocal family = self._rawData[3] or self._rawData.family \n\tif family then\n\t\tself._familyObject = require(\"Module:families\"\
      ).getByCode(family)\n\tend\n\t\n\treturn self._familyObject\nend\n\n\nfunction Language:getAncestors()\n\tif not self._ancestorObjects then\n\t\tself._ancestorObjects = {}\n\t\t\n\t\tif self._rawData.ancestors then\n\t\t\tfor _, ancestor in ipairs(self._rawData.ancestors)\
      \ do\n\t\t\t\ttable.insert(self._ancestorObjects, export.getByCode(ancestor) or require(\"Module:etymology languages\").getByCode(ancestor))\n\t\t\tend\n\t\telse\n\t\t\tlocal fam = self:getFamily()\n\t\t\tlocal protoLang = fam and fam:getProtoLanguage()\
      \ or nil\n\t\t\t\n\t\t\t-- For the case where the current language is the proto-language\n\t\t\t-- of its family, we need to step up a level higher right from the start.\n\t\t\tif protoLang and protoLang:getCode() == self:getCode() then\n\t\t\t\tfam =\
      \ fam:getFamily()\n\t\t\t\tprotoLang = fam and fam:getProtoLanguage() or nil\n\t\t\tend\n\t\t\t\n\t\t\twhile not protoLang and not (not fam or fam:getCode() == \"qfa-not\") do\n\t\t\t\tfam = fam:getFamily()\n\t\t\t\tprotoLang = fam and fam:getProtoLanguage()\
      \ or nil\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(self._ancestorObjects, protoLang)\n\t\tend\n\tend\n\t\n\treturn self._ancestorObjects\nend\n\nlocal function iterateOverAncestorTree(node, func)\n\tfor _, ancestor in ipairs(node:getAncestors()) do\n\t\t\
      if ancestor then\n\t\t\tlocal ret = func(ancestor) or iterateOverAncestorTree(ancestor, func)\n\t\t\tif ret then\n\t\t\t\treturn ret\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction Language:getAncestorChain()\n\tif not self._ancestorChain then\n\t\tself._ancestorChain\
      \ = {}\n\t\tlocal step = #self:getAncestors() == 1 and self:getAncestors()[1] or nil\n\t\t\n\t\twhile step do\n\t\t\ttable.insert(self._ancestorChain, 1, step)\n\t\t\tstep = #step:getAncestors() == 1 and step:getAncestors()[1] or nil\n\t\tend\n\tend\n\t\
      \n\treturn self._ancestorChain\nend\n\n\nfunction Language:hasAncestor(otherlang)\n\tlocal function compare(ancestor)\n\t\treturn ancestor:getCode() == otherlang:getCode()\n\tend\n\t\n\treturn iterateOverAncestorTree(self, compare) or false\nend\n\n\n\
      function Language:getCategoryName()\n\tlocal name = self:getCanonicalName()\n\t\n\t-- If the name already has \"language\" in it, don't add it.\n\tif name:find(\"[Ll]anguage$\") then\n\t\treturn name\n\telse\n\t\treturn name .. \" language\"\n\tend\nend\n\
      \n\nfunction Language:getStandardCharacters()\n\treturn self._rawData.standardChars\nend\n\n\nfunction Language:makeEntryName(text)\n\ttext = mw.ustring.gsub(text, \"^[¿¡]\", \"\")\n\ttext = mw.ustring.gsub(text, \"(.)[؟?!;՛՜ ՞ ՟？！︖︕।॥။၊་།]$\", \"%1\"\
      )\n\t\n\tif self:getCode() == \"ar\" then\n\t\tlocal U = mw.ustring.char\n\t\tlocal taTwiil = U(0x640)\n\t\tlocal waSla = U(0x671)\n\t\t-- diacritics ordinarily removed by entry_name replacements\n\t\tlocal Arabic_diacritics = U(0x64B, 0x64C, 0x64D, 0x64E,\
      \ 0x64F, 0x650, 0x651, 0x652, 0x670)\n\t\t\n\t\tif text == waSla or mw.ustring.find(text, \"^\" .. taTwiil .. \"?[\" .. Arabic_diacritics .. \"]\" .. \"$\") then\n\t\t\treturn text\n\t\tend\n\tend\n\t\n\tif type(self._rawData.entry_name) == \"table\" then\n\
      \t\ttext = do_entry_name_or_sort_key_replacements(text, self._rawData.entry_name)\n\tend\n\t\n\treturn text\nend\n\n\n-- Add to data tables?\nlocal has_dotted_undotted_i = {\n\t[\"az\"] = true,\n\t[\"crh\"] = true,\n\t[\"gag\"] = true,\n\t[\"kaa\"] = true,\n\
      \t[\"tt\"] = true,\n\t[\"tr\"] = true,\n\t[\"zza\"] = true,\n}\n\nfunction Language:makeSortKey(name, sc)\n\tif has_dotted_undotted_i[self:getCode()] then\n\t\tname = name:gsub(\"I\", \"ı\")\n\tend\n\t\n\tname = mw.ustring.lower(name)\n\t\n\t-- Remove\
      \ initial hyphens and *\n\tlocal hyphens_regex = \"^[-־ـ*]+(.)\"\n\tname = mw.ustring.gsub(name, hyphens_regex, \"%1\")\n\t\n\t-- If there are language-specific rules to generate the key, use those\n\tif type(self._rawData.sort_key) == \"table\" then\n\
      \t\tname = do_entry_name_or_sort_key_replacements(name, self._rawData.sort_key)\n\telseif type(self._rawData.sort_key) == \"string\" then\n\t\tname = require(\"Module:\" .. self._rawData.sort_key).makeSortKey(name, self:getCode(), sc and sc:getCode())\n\
      \tend\n\t\n\t-- Remove parentheses, as long as they are either preceded or followed by something\n\tname = mw.ustring.gsub(name, \"(.)[()]+\", \"%1\")\n\tname = mw.ustring.gsub(name, \"[()]+(.)\", \"%1\")\n\t\n\tif has_dotted_undotted_i[self:getCode()]\
      \ then\n\t\tname = name:gsub(\"i\", \"İ\")\n\tend\n\t\n\treturn mw.ustring.upper(name)\nend\n\nfunction Language:overrideManualTranslit()\n\tif self._rawData.override_translit then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\n\nfunction Language:transliterate(text,\
      \ sc, module_override)\n\tif not ((module_override or self._rawData.translit_module) and text) then\n\t\treturn nil\n\tend\n\t\n\tif module_override then\n\t\trequire(\"Module:debug\").track(\"module_override\")\n\tend\n\t\n\treturn require(\"Module:\"\
      \ .. (module_override or self._rawData.translit_module)).tr(text, self:getCode(), sc and sc:getCode() or nil)\nend\n\nfunction Language:hasTranslit()\n\treturn self._rawData.translit_module and true or false\nend\n\n\nfunction Language:link_tr()\n\treturn\
      \ self._rawData.link_tr and true or false\nend\n\n\nfunction Language:toJSON()\n\tlocal entryNamePatterns = nil\n\tlocal entryNameRemoveDiacritics = nil\n\t\n\tif self._rawData.entry_name then\n\t\tentryNameRemoveDiacritics = self._rawData.entry_name.remove_diacritics\n\
      \t\tif self._rawData.entry_name.from then\n\t\t\tentryNamePatterns = {}\n\t\t\tfor i, from in ipairs(self._rawData.entry_name.from) do\n\t\t\t\tlocal to = self._rawData.entry_name.to[i] or \"\"\n\t\t\t\ttable.insert(entryNamePatterns, { from = from, to\
      \ = to })\n\t\t\tend\n\t\tend\n\tend\n\t\n\tlocal ret = {\n\t\tancestors = self._rawData.ancestors,\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\tentryNamePatterns = entryNamePatterns,\n\
      \t\tfamily = self._rawData[3] or self._rawData.family,\n\t\totherNames = self:getOtherNames(),\n\t\tscripts = self._rawData.scripts,\n\t\ttype = self:getType(),\n\t\twikimediaLanguages = self._rawData.wikimedia_codes,\n\t\twikidataItem = self:getWikidataItem(),\n\
      \t}\n\t\n\treturn require(\"Module:JSON\").toJSON(ret)\nend\n\n\n-- Do NOT use this method!\n-- All uses should be pre-approved on the talk page!\nfunction Language:getRawData()\n\treturn self._rawData\nend\n\nLanguage.__index = Language\n\n\nfunction\
      \ export.getDataModuleName(code)\n\tif code:find(\"^%l%l$\") then\n\t\treturn \"languages/data2\"\n\telseif code:find(\"^%l%l%l$\") then\n\t\tlocal prefix = code:sub(1, 1)\n\t\treturn \"languages/data3/\" .. prefix\n\telseif code:find(\"^[%l-]+$\") then\n\
      \t\treturn \"languages/datax\"\n\telse\n\t\treturn nil\n\tend\nend\n\n\nlocal function getRawLanguageData(code)\n\tlocal modulename = export.getDataModuleName(code)\n\treturn modulename and mw.loadData(\"Module:\" .. modulename)[code] or nil\nend\n\n\n\
      function export.makeObject(code, data)\n\tif data and data.deprecated then\n\t\trequire(\"Module:debug\").track {\n\t\t\t\"languages/deprecated\",\n\t\t\t\"languages/deprecated/\" .. code\n\t\t}\n\tend\n\t\n\treturn data and setmetatable({ _rawData = data,\
      \ _code = code }, Language) or nil\nend\n\n\nfunction export.getByCode(code)\n\tif type(code) ~= \"string\" then\n\t\terror(\"The function getByCode expects a string as its first argument, but received \" .. (code == nil and \"nil\" or \"a \" .. type(code))\
      \ .. \".\")\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.getByName(name)\n\tlocal byName = mw.loadData(\"Module:languages/by name\")\n\tlocal code = byName.all and byName.all[name] or byName[name]\n\t\
      \n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.getByCanonicalName(name)\n\tlocal byName = mw.loadData(\"Module:languages/canonical names\")\n\tlocal code = byName and\
      \ byName[name]\n\t\n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.iterateAll()\n\tmw.incrementExpensiveFunctionCount()\n\tlocal m_data = mw.loadData(\"Module:languages/alldata\"\
      )\n\tlocal func, t, var = pairs(m_data)\n\t\n\treturn function()\n\t\tlocal code, data = func(t, var)\n\t\treturn export.makeObject(code, data)\n\tend\nend\n\n--[[\tIf language is an etymology language, iterates through parent languages\n\t\tuntil it finds\
      \ a non-etymology language. ]]\nfunction export.getNonEtymological(lang)\n\twhile lang:getType() == \"etymology language\" do\n\t\tlocal parentCode = lang:getParentCode()\n\t\tlocal parent = export.getByCode(parentCode)\n\t\t\tor require(\"Module:etymology\
      \ languages\").getByCode(parentCode)\n\t\t\tor require(\"Module:families\").getByCode(parentCode)\n\t\t\n\t\tlang = parent\n--\t\tmw.log(terminfo.lang:getCode() .. \" \" .. terminfo.lang:getType())\n\tend\n\t\n\treturn lang\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:02.229Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata2&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45385 t=1555362602066074
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:02 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 676086493, 268108496, 691628183
    body: !!binary |-
      
- recorded: 2019-04-15T21:10:02.432Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45643 t=1555362602312577
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:02 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1224.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 206488505, 553477399, 687864450
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3935515\" pageid=\"3935515\" ns=\"828\" title=\"Module:links\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T18:59:00Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\t[[Unsupported titles]] and pages with high\n\tmemory usage are listed at [[Module:links/data]].\n\t\n\tOther modules used:\n\t\t[[Module:script utilities]]\n\
      \t\t[[Module:scripts]]\n\t\t[[Module:languages]] and its submodules\n\t\t[[Module:gender and number]]\n\t\t[[Module:utilities]]\n\t\t[[Module:string]]\n\t\t[[Module:debug]]\n]=]\n\n-- These are prefixed with u to avoid confusion with the default string\
      \ methods\n-- of the same name.\nlocal usub = mw.ustring.sub\n\nlocal table_insert = table.insert\nlocal table_concat = table.concat\n\nlocal ignore_cap = {\n\t[\"ko\"] = true,\n}\n\nlocal phonetic_extraction = {\n\t[\"th\"] = \"Module:th\",\n\t[\"km\"\
      ] = \"Module:km\",\n}\n\nlocal pos_tags = {\n\t[\"a\"] = \"adjective\",\n\t[\"adv\"] = \"adverb\",\n\t[\"int\"] = \"interjection\",\n\t[\"n\"] = \"noun\",\n\t[\"pron\"] = \"pronoun\",\n\t[\"v\"] = \"verb\",\n\t[\"vi\"] = \"intransitive verb\",\n\t[\"vt\"\
      ] = \"transitive verb\",\n\t[\"vti\"] = \"transitive and intransitive verb\",\n}\n\nlocal unsupported_titles\nfunction export.getLinkPage(target, lang)\n\tunsupported_titles = unsupported_titles or mw.loadData(\"Module:links/data\").unsupported_titles\n\
      \tif unsupported_titles[target] then\n\t\treturn \"Unsupported titles/\" .. unsupported_titles[target]\n\tend\n\t\n\t-- If the link contains unexpanded template parameters, then don't create a link.\n\tif target:find(\"{{{\") then\n\t\treturn nil\n\tend\n\
      \t\n\tif target:sub(1, 1) == \":\" or target:sub(1, 2) == \"w:\" or target:sub(1, 10) == \"wikipedia:\" then\n\t\treturn target\n\tend\n\t\n\t-- Remove diacritics from the page name\n\ttarget = lang:makeEntryName(target)\n\t\n\tif target:sub(1, 1) == \"\
      /\" then\n\t\treturn \":\" .. target\n\t\n\t-- Link to appendix for reconstructed terms and terms in appendix-only languages\n\telseif target:sub(1, 1) == \"*\" and #target &gt; 1 then\n\t\tif lang:getCode() == \"und\" then\n\t\t\treturn nil\n\t\tend\n\
      \t\t\n\t\ttarget = \"Reconstruction:\" .. lang:getCanonicalName() .. \"/\" .. usub(target, 2)\n\telseif lang:getType() == \"reconstructed\" then\n\t\terror(\"The specified language \" .. lang:getCanonicalName()\n\t\t\t.. \" is unattested, while the given\
      \ word is not marked with '*' to indicate that it is reconstructed\")\n\telseif lang:getType() == \"appendix-constructed\" then\n\t\ttarget = \"Appendix:\" .. lang:getCanonicalName() .. \"/\" .. target\n\tend\n\t\n\treturn target\nend\n\n-- Make a language-specific\
      \ link from given link's parts\nlocal function makeLangLink(link, lang, id, allowSelfLink)\n\t-- Temporary tracking code\n\tlocal langCode = lang:getCode()\n\tif langCode == \"se\" or langCode == \"sia\" or langCode:find(\"^sm[ajns]$\")\n\t\t\tor langCode:find(\"\
      ^sj[dektu]$\") then\n\t\tif link.display and link.display:find(\"'\") then\n\t\t\trequire(\"Module:debug\").track(\"links/Sami apostrophe display\")\n\t\telseif link.target and link.target:find(\"'\") then\n\t\t\trequire(\"Module:debug\").track(\"links/Sami\
      \ apostrophe target\")\n\t\tend\n\tend\n\t\n\t-- Find fragments (when link didn't come from parseLink).\n\t-- Prevents {{l|en|word#Etymology 2|word}} from linking to [[word#Etymology 2#English]].\n\tif link.fragment == nil then\n\t\t-- Replace numeric\
      \ character references with the corresponding character (&amp;#29; → '),\n\t\t-- as they contain #, which causes the numeric character reference to be\n\t\t-- misparsed (wa'a → wa&amp;#29;a → pagename wa&amp;, fragment 29;a).\n\t\tlink.target = link.target:gsub(\"\
      &amp;#(%d+);\",\n\t\t\tfunction(number) return mw.ustring.char(tonumber(number)) end)\n\t\tlocal first, second = link.target:match(\"^([^#]+)#(.+)$\")\n\t\tif first then\n\t\t\tlink.target, link.fragment = first, second\n\t\tend\n\tend\n\t\n\t-- If there\
      \ is no display form, then create a default one\n\tif not link.display then\n\t\tlink.display = link.target\n\t\t\n\t\t-- Strip the prefix from the displayed form\n\t\t-- TODO: other interwiki links?\n\t\tif link.display:sub(1, 1) == \":\" and not mw.loadData(\"\
      Module:links/data\").unsupported_titles[link.display] then\n\t\t\tlink.display = link.display:sub(2) -- remove colon from beginning\n\t\telse\n\t\t\tlocal prefix = link.display:match(\"^([^:]+):\")\n\t\t\tlocal prefixes = {\n\t\t\t\tw = true,\n\t\t\t\t\
      wikipedia = true,\n\t\t\t}\n\t\t\t\n\t\t\tif prefixes[prefix] then\n\t\t\t\tlink.display = link.display:sub(#prefix + 2) -- remove prefix plus colon\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Process the target\n\tlink.target = export.getLinkPage(link.target,\
      \ lang)\n\t\n\tif not link.target then\n\t\treturn link.display\n\tend\n\t\n\t-- If the target is the same as the current page and there is no sense id\n\t-- and linking to the same page hasn't been turned on, then return a \"self-link\"\n\t-- like the\
      \ software does.\n\tif not (allowSelfLink or id) and link.target:gsub(\"^:\", \"\") == mw.title.getCurrentTitle().prefixedText then\n\t\treturn \"&lt;strong class=\\\"selflink\\\"&gt;\" .. link.display .. \"&lt;/strong&gt;\"\n\tend\n\t\n\t--[[\n\t\tAdd\
      \ fragment\n\t\tDo not add a section link to \"Undetermined\", as such sections do not exist and are invalid.\n\t\tTabbedLanguages handles links without a section by linking to the \"last visited\" section,\n\t\tbut adding \"Undetermined\" would break\
      \ that feature.\n\t\tFor localized prefixes that make syntax error, please use the format: [\"xyz\"] = true,\n\t]]\n\tlocal prefix = link.target:match(\"^:?([^:]+):\")\n\tlocal prefixes = {\n\t\tw = true,\n\t\twikipedia = true,\n\t\tCategory = true,\n\t\
      }\n\t\n\tif not prefixes[prefix] then\n\t\tif link.fragment or link.target:find(\"#$\") then\n\t\t\trequire(\"Module:debug\").track {\n\t\t\t\t\"links/fragment\",\n\t\t\t\t\"links/fragment/\" .. lang:getCode()\n\t\t\t}\n\t\tend\n\t\t\n\t\tif not link.fragment\
      \ and lang:getCode() ~= \"und\" then\n\t\t\tif id then\n\t\t\t\tlink.fragment = require(\"Module:utilities\").make_id(lang, id)\n\t\t\telseif not mw.ustring.find(link.target, \"^Appendix:\")\n\t\t\t\t\tand not mw.ustring.find(link.target, \"^Reconstruction:\"\
      ) then\n\t\t\t\tlink.fragment = lang:getCanonicalName()\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- This allows linking to pages like [[sms:a]] without it being treated weirdly.\n\t\tlink.target = link.target:gsub(\":\", \"&amp;#x3a;\")\n\tend\n\t\n\treturn \"[[\"\
      \ .. link.target .. (link.fragment and \"#\" .. link.fragment or \"\") .. \"|\" .. link.display .. \"]]\"\nend\n\n\n-- Split a link into its parts\nlocal function parseLink(linktext)\n\tlocal link = { target = linktext }\n\tlocal first, second = link.target:match(\"\
      ^([^|]+)|(.+)$\")\n\t\n\tif first then\n\t\tlink.target = first\n\t\tlink.display = second\n\telse\n\t\tlink.display = link.target\n\tend\n\t\n\tfirst, second = link.target:match(\"^(.+)#(.+)$\")\n\t\n\tif first then\n\t\tlink.target = first\n\t\tlink.fragment\
      \ = second\n\telse\n\t\t-- So that makeLangLink does not look for a fragment again\n\t\tlink.fragment = false\n\tend\n\t\n\treturn link\nend\n\n\n-- Creates a basic wikilink to the given term. If the text already contains\n-- links, these are replaced\
      \ with links to the correct section.\nfunction export.language_link(data, allowSelfLink, dontLinkRecons)\n\tif type(data) ~= \"table\" then\n\t\terror(\"The first argument to the function language_link must be a table. See Module:links/documentation for\
      \ more information.\")\n\tend\n\t\n\tlocal text = data.term\n\t\n\tif ignore_cap[data.lang:getCode()] and text then\n\t\ttext = text:gsub(\"%^\", \"\")\n\tend\n\t\n\t-- If the text begins with * and another character,\n\t-- then act as if each link begins\
      \ with *\n\tlocal allReconstructed = false\n\t\n\tif text:find(\"^*.\") then\n\t\tallReconstructed = true\n\tend\n\t\n\t-- Do we have embedded wikilinks?\n\tif text:find(\"[[\", nil, true) then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/links/alt-ignored]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/links/id-ignored]]\n\t\t]=]\n\t\t\n\t\tif data.alt then\n\t\t\trequire(\"Module:debug\").track(\"links/alt-ignored\")\n\t\t\tmw.log(\"(from Module:links)\", \"text with embedded wikilinks:\", text,\n\t\t\t\t\
      \"ignored alt:\", data.alt, \"lang:\", data.lang:getCode())\n\t\tend\n\t\t\n\t\tif data.id then\n\t\t\trequire(\"Module:debug\").track(\"links/id-ignored\")\n\t\t\tmw.log(\"(from Module:links)\", \"text with embedded wikilinks:\", text,\n\t\t\t\t\"ignored\
      \ id:\", data.id, \"lang:\", data.lang:getCode())\n\t\tend\n\t\t\n\t\t-- Begins and ends with a wikilink tag\n\t\tif text:find(\"^%[%[(.+)%]%]$\") then\n\t\t\t-- There are no [ ] in between.\n\t\t\t-- This makes the wikilink tag redundant.\n\t\t\tif text:find(\"\
      ^%[%[[^%[%]]+%]%]$\") then\n\t\t\t\trequire(\"Module:debug\").track(\"links/redundant wikilink\")\n\t\t\telse\n\t\t\t\tlocal temp = text:gsub(\"^%[%[(.+)%]%]$\", \"%1\")\n\t\t\t\ttemp = temp:gsub(\"%]%], %[%[\", \"|\")\n\t\t\t\t\n\t\t\t\tif not temp:find(\"\
      [%[%]]\") then\n\t\t\t\t\trequire(\"Module:debug\").track(\"links/list\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\ttext = text:gsub(\"%[%[([^%]]+)%]%]\",\n\t\t\tfunction(linktext)\n\t\t\t\tlocal link = parseLink(linktext)\n\t\t\t\t\n\t\t\t\tif allReconstructed\
      \ then\n\t\t\t\t\tlink.target = \"*\" .. link.target\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\treturn makeLangLink(link, data.lang, data.id, allowSelfLink, dontLinkRecons)\n\t\t\tend)\n\t\t\n\t\t-- Remove the extra * at the beginning if it's immediately followed\n\
      \t\t-- by a link whose display begins with * too\n\t\tif allReconstructed then\n\t\t\ttext = text:gsub(\"^%*%[%[([^|%]]+)|%*\", \"[[%1|*\")\n\t\tend\n\telse\n\t\t-- There is no embedded wikilink, make a link using the parameters.\n\t\ttext = makeLangLink({\
      \ target = text, display = data.alt }, data.lang, data.id, allowSelfLink, dontLinkRecons)\n\tend\n\t\n\treturn text\nend\n\nfunction export.mark(text, itemType, face, lang)\n\tlocal tag = { \"\", \"\" }\n\t\n\tif itemType == \"gloss\" then\n\t\ttag = {\
      \ '&lt;span class=\"mention-gloss-double-quote\"&gt;“&lt;/span&gt;&lt;span class=\"mention-gloss\"&gt;',\n\t\t\t'&lt;/span&gt;&lt;span class=\"mention-gloss-double-quote\"&gt;”&lt;/span&gt;' }\n\telseif itemType == \"tr\" then\n\t\tif face == \"term\"\
      \ then\n\t\t\ttag = { '&lt;span lang=\"' .. lang:getCode() .. '\" class=\"tr mention-tr Latn\"&gt;',\n\t\t\t\t'&lt;/span&gt;' }\n\t\telse\n\t\t\ttag = { '&lt;span lang=\"' .. lang:getCode() .. '\" class=\"tr Latn\"&gt;', '&lt;/span&gt;' }\n\t\tend\n\t\
      elseif itemType == \"ts\" then\n\t\ttag = { '&lt;span class=\"ts mention-ts Latn\"&gt;/', '/&lt;/span&gt;' }\n\telseif itemType == \"pos\" then\n\t\ttag = { '&lt;span class=\"ann-pos\"&gt;', '&lt;/span&gt;' }\n\telseif itemType == \"annotations\" then\n\
      \t\ttag = { '&lt;span class=\"mention-gloss-paren annotation-paren\"&gt;(&lt;/span&gt;',\n\t\t\t'&lt;span class=\"mention-gloss-paren annotation-paren\"&gt;)&lt;/span&gt;' }\n\tend\n\t\n\tif type(text) == \"string\" then\n\t\treturn tag[1] .. text .. tag[2]\n\
      \telse\n\t\treturn \"\"\n\tend\nend\n\n-- Format the annotations (things following the linked term)\nfunction export.format_link_annotations(data, face)\n\tlocal output = {}\n\t\n\t-- Interwiki link\n\tif data.interwiki then\n\t\ttable_insert(output, data.interwiki)\n\
      \tend\n\t\n\t-- Genders\n\tif type(data.genders) ~= \"table\" then\n\t\tdata.genders = { data.genders }\n\tend\n\t\n\tif data.genders and #data.genders &gt; 0 then\n\t\tlocal m_gen = require(\"Module:gender and number\")\n\t\ttable_insert(output, \"&amp;nbsp;\"\
      \ .. m_gen.format_list(data.genders, data.lang))\n\tend\n\t\n\tlocal annotations = {}\n\t\n\t-- Transliteration and transcription\n\tif data.tr or data.ts then\n\t\tlocal kind\n\t\tif face == \"term\" then\n\t\t\tkind = face\n\t\telse\n\t\t\tkind = \"\
      default\"\n\t\tend\n\t\t\n\t\tif data.tr and data.ts then\n\t\t\ttable_insert(annotations,\n\t\t\t\trequire(\"Module:script utilities\").tag_translit(data.tr, data.lang, kind)\n\t\t\t\t.. \" \" .. export.mark(data.ts, \"ts\"))\n\t\telseif data.ts then\n\
      \t\t\ttable_insert(annotations, export.mark(data.ts, \"ts\"))\n\t\telse\n\t\t\ttable_insert(annotations,\n\t\t\t\trequire(\"Module:script utilities\").tag_translit(data.tr, data.lang, kind))\n\t\tend\n\tend\n\t\n\t-- Gloss/translation\n\tif data.gloss\
      \ then\n\t\ttable_insert(annotations, export.mark(data.gloss, \"gloss\"))\n\tend\n\t\n\t-- Part of speech\n\tif data.pos then\n\t\t-- debug category for pos= containing transcriptions\n\t\tif data.pos:find(\"/[^&gt;&lt;]*/\") then\n\t\t\tdata.pos = data.pos\
      \ .. \"[[Category:links likely containing transcriptions in pos]]\"\n\t\tend\n\n\t\ttable_insert(annotations, export.mark(pos_tags[data.pos] or data.pos, \"pos\"))\n\tend\n\t\n\t-- Literal/sum-of-parts meaning\n\tif data.lit then\n\t\ttable_insert(annotations,\
      \ \"literally \" .. export.mark(data.lit, \"gloss\"))\n\tend\n\t\n\tif #annotations &gt; 0 then\n\t\ttable_insert(output, \" \" .. export.mark(table_concat(annotations, \", \"), \"annotations\"))\n\tend\n\t\n\treturn table_concat(output)\nend\n\n-- A version\
      \ of {{l}} or {{m}} that can be called from other modules too\nfunction export.full_link(data, face, allowSelfLink, dontLinkRecons)\n\tif type(data) ~= \"table\" then\n\t\terror(\"The first argument to the function full_link must be a table. \"\n\t\t\t\
      .. \"See Module:links/documentation for more information.\")\n\tend\n\t\n\t-- Create the link\n\tlocal output = {}\n\tlocal categories = {}\n\tlocal link = \"\"\n\tlocal annotations\n\t\n\t--local m_utilities = require(\"Module:utilities\")\n\t\n\t-- Is\
      \ there any text to show?\n\tif (data.term or data.alt) then\n\t\t-- Try to detect the script if it was not provided\n\t\tif not data.sc then\n\t\t\tdata.sc = require(\"Module:scripts\").findBestScript(data.alt or data.term, data.lang)\n\t\telse\n\t\t\t\
      -- Track uses of sc parameter\n\t\t\tlocal best = require(\"Module:scripts\").findBestScript(data.alt or data.term, data.lang)\n\t\t\trequire(\"Module:debug\").track(\"links/sc\")\n\t\t\t\n\t\t\tif data.sc:getCode() == best:getCode() then\n\t\t\t\trequire(\"\
      Module:debug\").track(\"links/sc/redundant\")\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/redundant/\" .. data.sc:getCode())\n\t\t\telse\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/needed\")\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/needed/\"\
      \ .. data.sc:getCode())\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal class = \"\"\n\t\t\n\t\tif data.accel then\n\t\t\tlocal form = data.accel.form and data.accel.form .. \"-form-of\" or \"\"\n\t\t\tlocal gender = data.accel.gender and \"gender-\" .. data.accel.gender\
      \ or \"\"\n\t\t\tlocal translit = data.accel.translit and \"transliteration-\" .. data.accel.translit or \"\"\n\t\t\t-- This is decoded again by [[WT:ACCEL]].\n\t\t\tlocal lemma = data.accel.lemma and \"origin-\" .. data.accel.lemma:gsub(\"%%\", \".\"\
      ):gsub(\" \", \"_\") or \"\" \n\t\t\tlocal lemma_translit = data.accel.lemma_translit and \"origin-transliteration-\" .. data.accel.lemma_translit or \"\"\n\t\t\tlocal no_store = data.accel.no_store and \"form-of-nostore\" or \"\"\n\t\t\t\n\t\t\taccel\
      \ =\n\t\t\t\tform .. \" \" ..\n\t\t\t\tgender .. \" \" ..\n\t\t\t\ttranslit .. \" \" ..\n\t\t\t\tlemma .. \" \" ..\n\t\t\t\tlemma_translit .. \" \" ..\n\t\t\t\tno_store .. \" \"\n\t\t\t\n\t\t\tclass = \"form-of lang-\" .. data.lang:getCode() .. \" \" ..\
      \ accel\n\t\tend\n\t\t\n\t\t-- Only make a link if the term has been given, otherwise just show the alt text without a link\n\t\tlink = require(\"Module:script utilities\").tag_text(\n\t\t\tdata.term and export.language_link(data, allowSelfLink, dontLinkRecons)\n\
      \t\t\tor data.alt, data.lang, data.sc, face, class)\n\telse\n\t\t--[[\tNo term to show.\n\t\t\t\tIs there at least a transliteration we can work from?\t]]\n\t\tlink = require(\"Module:script utilities\").request_script(data.lang, data.sc)\n\t\t\n\t\tif\
      \ link == \"\" or not data.tr or data.tr == \"-\" then\n\t\t\t-- No link to show, and no transliteration either. Show a term request.\n\t\t\tlocal category = \"\"\n\t\t\t\n\t\t\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\t\t\ttable_insert(categories,\
      \ \"[[Category:\" .. data.lang:getCanonicalName() .. \" term requests]]\")\n\t\t\tend\n\t\t\t\n\t\t\tlink = \"&lt;small&gt;[Term?]&lt;/small&gt;\"\n\t\tend\n\tend\n\t\n\ttable_insert(output, link)\n\t\n\tif data.tr == \"\" or data.tr == \"-\" then\n\t\t\
      data.tr = nil\n\t\n\telseif phonetic_extraction[data.lang:getCode()] then\n\t\tlocal m_phonetic = require(phonetic_extraction[data.lang:getCode()])\n\t\tdata.tr = data.tr or m_phonetic.getTranslit(export.remove_links(data.term))\n\t\n\telseif (data.term\
      \ or data.alt) and not data.sc:getCode():find(\"Lati?n\") then\n\t\t\n\t\t-- Try to generate a transliteration, unless transliteration has been\n\t\t-- supplied and we are in a high-memory entry.\n\t\tif not (data.tr and mw.loadData(\"Module:links/data\"\
      ).high_memory_entries[mw.title.getCurrentTitle().text]) then\n\t\t\tlocal automated_tr = data.lang:transliterate(export.remove_links(data.alt or data.term), data.sc)\n\t\t\t\n\t\t\tif automated_tr then\n\t\t\t\tlocal manual_tr = data.tr\n\t\t\t\t\n\t\t\
      \t\tif manual_tr then\n\t\t\t\t\tif manual_tr == automated_tr then\n\t\t\t\t\t\ttable_insert(categories,\n\t\t\t\t\t\t\t\"[[Category:Terms with redundant transliterations]]\"\n\t\t\t\t\t\t\t\t\t.. \"[[Category:Terms with redundant transliterations/\" ..\
      \ data.lang:getCode() .. \"]]\")\n\t\t\t\t\telse\n\t\t\t\t\t\t-- Prevents Arabic root categories from flooding the tracking categories.\n\t\t\t\t\t\tif mw.title.getCurrentTitle().nsText ~= \"Category\" then\n\t\t\t\t\t\t\ttable_insert(categories,\n\t\t\
      \t\t\t\t\t\t\"[[Category:Terms with manual transliterations different from the automated ones]]\"\n\t\t\t\t\t\t\t\t\t\t.. \"[[Category:Terms with manual transliterations different from the automated ones/\" .. data.lang:getCode() .. \"]]\")\n\t\t\t\t\t\
      \tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif (not manual_tr) or data.lang:overrideManualTranslit() then\n\t\t\t\t\tdata.tr = automated_tr\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Link to the transliteration entry for languages that\
      \ require this\n\tif data.tr and data.lang:link_tr() then\n\t\tdata.tr = export.language_link { lang = data.lang, term = data.tr }\n\tend\n\t\n\ttable_insert(output, export.format_link_annotations(data, face))\n\t\n\treturn table_concat(output) .. table_concat(categories)\n\
      end\n\n\n--[[\tStrips links: deletes category links,\n\t\tthe targets of piped links,\n\t\tand all double square brackets.\t\t\t]]\nfunction export.remove_links(text)\n\tif type(text) == \"table\" then\n\t\ttext = text.args[1]\n\tend\n\t\n\tif not text\
      \ or text == \"\" then\n\t\treturn \"\"\n\tend\n\t\n\ttext = mw.ustring.gsub(text, \"%[%[Category:[^|%]]-|?[^|%]]-%]%]\", \"\")\n\ttext = text:gsub(\"%[%[[^|%]]-|\", \"\")\n\ttext = text:gsub(\"%[%[\", \"\")\n\ttext = text:gsub(\"%]%]\", \"\")\n\t\n\t\
      return text\nend\n\nfunction export.english_links(text)\n\tlocal lang = require(\"Module:languages\").getByCode(\"en\")\n\t\n\t-- Parentheses around function call to remove second return value, the\n\t-- number of replacements.\n\treturn (text:gsub(\"\
      %[%[([^%]]+)%]%]\",\n\t\tfunction(linktext)\n\t\t\tlocal link = parseLink(linktext)\n\t\t\treturn makeLangLink(link, lang, nil, true, false)\n\t\tend))\nend\n\nfunction export.light_link(data)\n\tlocal language_names = mw.loadData(\"Module:languages/code\
      \ to canonical name\")\n\tlocal script_codes = mw.loadData(\"Module:scripts/codes\")\n\t\n\tif data.langCode then\n\t\tdata.langName = language_names[data.langCode] or error('The language code \"' .. data.langCode .. '\" is not recognized.')\n\telse\n\t\
      \terror('Language code is required.')\n\tend\n\t\n\tif not data.term then\n\t\terror('Term to link to is required.')\n\tend\n\t\n\tif data.scCode then\n\t\tif not script_codes[data.scCode] then\n\t\t\terror('The script code \"' .. data.sc .. '\" is not\
      \ recognized.')\n\t\tend\n\telse\n\t\terror(\"The function light_link requires a script code.\")\n\tend\n\t\n\tlocal fragment\n\tif data.id then\n\t\tfragment = data.langName .. \"-\" .. mw.uri.encode(data.id, \"WIKI\")\n\telse\n\t\tfragment = data.langName\n\
      \tend\n\t\n\treturn table_concat {\n\t\t'&lt;span class=\"', data.scCode, '\" lang=\"', data.langCode,\n\t\t'\"&gt;[[', data.term, \"#\", fragment, \"|\", (data.alt or data.term), \"]]&lt;/span&gt;\"\n\t}\nend\n\n--[=[\n\tFor example, Norwegian_Bokm.C3.A5l\
      \ → Norwegian_Bokmål. 0xC3 and 0xA5 are the\n\thexadecimal-base representation of the two bytes used to encode the character\n\tå in the UTF-8 encoding:\n\t\t11000011 10100101\n\t\n\tNote that the bytes used to represent a character are actually different\
      \ from\n\tthe Unicode codepoint. For å, the codepoint is 0xE5. The bits (digits) that\n\tactually spell the codepoint are found in the brackets: 110[00011] 10[100101].\n\tFor further explanation, see [[w:UTF-8#Description]].\n]=]\n\n-- The character class\
      \ %x should not be used, as it includes the characters a-f,\n-- which do not occur in these anchor encodings.\nlocal capitalHex = \"[0-9A-F]\"\n\nlocal function decodeAnchor(anchor)\n\treturn (anchor:gsub(\"%.(\" .. capitalHex .. capitalHex .. \")\",\n\
      \t\tfunction(hexByte)\n\t\t\treturn string.char(tonumber(hexByte, 16))\n\t\tend))\nend\n\nfunction export.section_link(link)\n\tif type(link) ~= \"string\" then\n\t\terror(\"The first argument to section_link was a \" .. type(link) .. \", but it should\
      \ be a string.\")\n\tend\n\t\n\tlink = link:gsub(\"_\", \" \")\n\t\n\tlocal numberSigns = require(\"Module:string\").count(link, \"#\")\n\t\n\tif numberSigns &gt; 1 then\n\t\terror(\"The section link should only contain one number sign (#).\")\n\tend\n\
      \t\n\tlocal page, section = link:match(\"^([^#]+)#(.+)$\")\n\t\n\tif page and section then\n\t\tsection = decodeAnchor(section)\n\t\t\n\t\t-- URI-encode (percent-encode) section to allow square brackets, [],\n\t\t-- in section name. If not percent-encoded,\
      \ they prevent the parser from\n\t\t-- recognizing the link.\n\t\treturn table_concat { \"[[\", page, \"#\", mw.uri.encode(section, \"WIKI\"), \"|\", page, \" § \", section, \"]]\" }\n\telse\n\t\terror('The function \"' .. section_link .. '\" could not\
      \ find a number sign marking a section name.')\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:02.619Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=65215 t=1555362602503474
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:02 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 913339957, 650288640, 692869778
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4216643\" pageid=\"4216643\" ns=\"828\" title=\"Module:scripts\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-02-03T10:53:06Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"that was incorrect, but it turns out there aren&#039;t even any scripts whose canonical names contain &quot;script&quot;, so it didn&#039;t cause problems\" xml:space=\"preserve\">local export = {}\nlocal\
      \ Script = {}\n\nfunction Script:getCode()\n\treturn self._code\nend\n\nfunction Script:getCanonicalName()\n\treturn self._rawData.canonicalName\nend\n\nfunction Script:getOtherNames()\n\treturn self._rawData.otherNames or {}\nend\n\nfunction Script:getParent()\n\
      \treturn self._rawData.parent\nend\n\nfunction Script:getSystems()\n\tif not self._systemObjects then\n\t\tlocal m_systems = require(\"Module:writing systems\")\n\t\tself._systemObjects = {}\n\t\t\n\t\tfor _, sys in ipairs(self._rawData.systems or {})\
      \ do\n\t\t\ttable.insert(self._systemObjects, m_systems.getByCode(sys))\n\t\tend\n\tend\n\t\n\treturn self._systemObjects\nend\n\n--function Script:getAllNames()\n--\treturn self._rawData.names\n--end\n\n\nfunction Script:getType()\n\treturn \"script\"\
      \nend\n\n\nfunction Script:getCategoryName()\n\tlocal name = self._rawData.canonicalName\n\t\n\t-- If the name already has \"code\" or \"semaphore\" in it, don't add it.\n\t-- No names contain \"script\".\n\tif name:find(\"[Cc]ode$\") or name:find(\"[Ss]emaphore$\"\
      ) then\n\t\treturn name\n\telse\n\t\treturn name .. \" script\"\n\tend\nend\n\n\nfunction Script:getWikipediaArticle()\n\treturn self._rawData.wikipedia_article or self:getCategoryName()\nend\n\n\nfunction Script:getCharacters()\n\tif self._rawData.characters\
      \ then\n\t\treturn self._rawData.characters\n\telse\n\t\treturn nil\n\tend\nend\n\n\nfunction Script:countCharacters(text)\n\tif not self._rawData.characters then\n\t\treturn 0\n\telse\n\t\tlocal _, num = mw.ustring.gsub(text, \"[\" .. self._rawData.characters\
      \ .. \"]\", \"\")\n\t\treturn num\n\tend\nend\n\nfunction Script:getDirection()\n\tlocal direction = self._rawData.direction\n\tif not direction then\n\t\treturn nil\n\telse\n\t\treturn direction\n\tend\nend\n\n\nfunction Script:getRawData()\n\treturn\
      \ self._rawData\nend\n\n\nfunction Script:toJSON()\n\tlocal ret = {\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\totherNames = self:getOtherNames(),\n\t\ttype = self:getType(),\n\t\
      \t}\n\t\n\treturn require(\"Module:JSON\").toJSON(ret)\nend\n\n\nScript.__index = Script\n\n\nfunction export.makeObject(code, data)\n\treturn data and setmetatable({ _rawData = data, _code = code }, Script) or nil\nend\n\n\nfunction export.getByCode(code)\n\
      \tif code == \"IPAchar\" then\n\t\trequire(\"Module:debug\").track(\"IPAchar\")\n\tend\n\treturn export.makeObject(code, mw.loadData(\"Module:scripts/data\")[code])\nend\n\nfunction export.getByCanonicalName(name)\n\tlocal code = mw.loadData(\"Module:scripts/by\
      \ name\")[name]\n\t\n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, mw.loadData(\"Module:scripts/data\")[code])\nend\n\n-- Find the best script to use, based on the characters of a string.\nfunction export.findBestScript(text,\
      \ lang)\n\tif not text or not lang or not lang.getScripts then\n\t\treturn export.getByCode(\"None\")\n\tend\n\t\n\tlocal scripts = lang:getScripts()\n\t\n\tif not scripts[2] then\n\t\treturn scripts[1]\n\tend\n\t\n\t--[=[\n\t\tRemove any HTML entities;\
      \ catfix function in [[Module:utilities]]\n\t\tadds tagging to a no-break space (&amp;nbsp;), which contains Latin characters;\n\t\thence Latin was returned as the script if \"Latn\" is one of the language's scripts.\n\t]=]\n\ttext = string.gsub(text,\
      \ \"&amp;[a-zA-Z0-9]+;\", \"\")\n\t\n\t-- Try to match every script against the text,\n\t-- and return the one with the most matching characters.\n\tlocal bestcount = 0\n\tlocal bestscript = nil\n\t\n\t-- Get length of text minus any spacing or punctuation\
      \ characters.\n\t-- Counting instances of UTF-8 character pattern is faster than mw.ustring.len.\n\tlocal _, length = string.gsub(mw.ustring.gsub(text, \"[%s%p]+\", \"\"), \"[\\1-\\127\\194-\\244][\\128-\\191]*\", \"\")\n\t\n\tif length == 0 then\n\t\t\
      return export.getByCode(\"None\")\n\tend\n\t\n\tfor i, script in ipairs(scripts) do\n\t\tlocal count = script:countCharacters(text)\n\t\t\n\t\tif count &gt;= length then\n\t\t\treturn script\n\t\tend\n\t\t\n\t\tif count &gt; bestcount then\n\t\t\tbestcount\
      \ = count\n\t\t\tbestscript = script\n\t\tend\n\tend\n\t\n\tif bestscript then\n\t\treturn bestscript\n\tend\n\t\n\t-- No matching script was found. Return \"None\".\n\treturn export.getByCode(\"None\")\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:02.804Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43633 t=1555362602690250
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:02 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 428875680, 567256782, 697157403
    body: !!binary |-
      
- recorded: 2019-04-15T21:10:02.995Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41216 t=1555362602894313
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:02 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1228.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 204460610, 723581136, 703469000
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4099100\" pageid=\"4099100\" ns=\"828\" title=\"Module:script utilities\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T16:56:29Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 52248476 by [[Special:Contributions/Rua|Rua]] ([[User talk:Rua|talk]])\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\tModules used:\n\t[[Module:script utilities/data]]\n\
      \t[[Module:scripts]]\n\t[[Module:languages]]\n\t[[Module:parameters]]\n\t[[Module:utilities]]\n\t[[Module:debug]]\n]=]\n\nfunction export.is_Latin_script(sc)\n\t-- Latn, Latf, Latinx, nv-Latn, pjt-Latn\n\treturn sc:getCode():find(\"Lat\") and true or false\n\
      end\n\n-- Used by [[Template:lang]]\nfunction export.lang_t(frame)\n\tparams = {\n\t\t[1] = {},\n\t\t[2] = { allow_empty = true, default = \"\" },\n\t\t[\"sc\"] = {},\n\t\t[\"face\"] = {},\n\t\t[\"class\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\t\n\tlocal lang = args[1] or (NAMESPACE == \"Template\" and \"und\") or error(\"Language code has not been specified. Please pass parameter 1 to the template.\"\
      )\n\tlang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, 1)\n\t\n\tlocal text = args[2]\n\t\n\tlocal sc = args[\"sc\"]\n\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\
      \" .. sc .. \"\\\" is not valid.\")) or nil)\n\t\n\tlocal face = args[\"face\"]\n\t\n\treturn export.tag_text(text, lang, sc, face, class)\nend\n\n-- Ustring turns on the codepoint-aware string matching. The basic string function\n-- should be used for\
      \ simple sequences of characters, Ustring function for\n-- sets – [].\nlocal function trackPattern(text, pattern, tracking, ustring)\n\tlocal find = ustring and mw.ustring.find or string.find\n\tif pattern and find(text, pattern) then\n\t\trequire(\"Module:debug\"\
      ).track(\"script/\" .. tracking)\n\tend\nend\n\nlocal function track(text, lang, sc)\n\tlocal U = mw.ustring.char\n\t\n\tif lang and text then\n\t\tlocal langCode = lang:getCode()\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/ang/acute]]\n\
      \t\tif langCode == \"ang\" then\n\t\t\tlocal decomposed = mw.ustring.toNFD(text)\n\t\t\tlocal acute = U(0x301)\n\t\t\t\n\t\t\ttrackPattern(decomposed, acute, \"ang/acute\")\n\t\t\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-phi]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-theta]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-kappa]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-rho]]\n\t\t\tϑ, ϰ, ϱ, ϕ should generally\
      \ be replaced with θ, κ, ρ, φ.\n\t\t]=]\n\t\telseif langCode == \"el\" or langCode == \"grc\" then\n\t\t\ttrackPattern(text, \"ϑ\", \"Greek/wrong-theta\")\n\t\t\ttrackPattern(text, \"ϰ\", \"Greek/wrong-kappa\")\n\t\t\ttrackPattern(text, \"ϱ\", \"Greek/wrong-rho\"\
      )\n\t\t\ttrackPattern(text, \"ϕ\", \"Greek/wrong-phi\")\n\t\t\n\t\t\t--[=[\n\t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/spacing-coronis]]\n\t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/spacing-smooth-breathing]]\n\
      \t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/wrong-apostrophe]]\n\t\t\t\tWhen spacing coronis and spacing smooth breathing are used as apostrophes, \n\t\t\t\tthey should be replaced with right single quotation marks (’).\n\t\t\t\
      ]=]\n\t\t\tif langCode == \"grc\" then\n\t\t\t\ttrackPattern(text, U(0x1FBD), \"Ancient Greek/spacing-coronis\")\n\t\t\t\ttrackPattern(text, U(0x1FBF), \"Ancient Greek/spacing-smooth-breathing\")\n\t\t\t\ttrackPattern(text, \"[\" .. U(0x1FBD) .. U(0x1FBF)\
      \ .. \"]\", \"Ancient Greek/wrong-apostrophe\", true)\n\t\t\tend\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/Russian/grave-accent]]\n\t\telseif langCode == \"ru\" then\n\t\t\tlocal decomposed = mw.ustring.toNFD(text)\n\t\t\t\n\t\t\t\
      trackPattern(decomposed, U(0x300), \"Russian/grave-accent\")\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/Tibetan/trailing-punctuation]]\n\t\telseif langCode == \"bo\" then\n\t\t\ttrackPattern(text, \"[་།]$\", \"Tibetan/trailing-punctuation\"\
      , true)\n\t\t\ttrackPattern(text, \"[་།]%]%]$\", \"Tibetan/trailing-punctuation\", true)\n\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/broken-ae]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/broken-am]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/wrong-rue-lue]]\n\
      \t\t]=]\n\t\telseif langCode == \"th\" then\n\t\t\ttrackPattern(text, \"เ\"..\"เ\", \"Thai/broken-ae\")\n\t\t\ttrackPattern(text, \"ํ[่้๊๋]?า\", \"Thai/broken-am\", true)\n\t\t\ttrackPattern(text, \"[ฤฦ]า\", \"Thai/wrong-rue-lue\", true)\n\n\t\t--[=[\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Lao/broken-ae]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Lao/broken-am]]\n\t\t]=]\n\t\telseif langCode == \"lo\" then\n\t\t\ttrackPattern(text, \"ເ\"..\"ເ\", \"Lao/broken-ae\")\n\t\t\ttrackPattern(text,\
      \ \"ໍ[່້໊໋]?າ\", \"Lao/broken-am\", true)\n\t\tend\n\tend\nend\n\n-- Wrap text in the appropriate HTML tags with language and script class.\nfunction export.tag_text(text, lang, sc, face, class, id)\n\tif not sc then\n\t\tsc = require(\"Module:scripts\"\
      ).findBestScript(text, lang)\n\tend\n\t\n\ttrack(text, lang, sc)\n\t\t\n\t-- Replace space characters with newlines in Mongolian-script text, which is written top-to-bottom.\n\tif sc and sc:getDirection() == \"down\" then\n\t\t--[[\tFirst, escape targets\
      \ of wikilinks and HTML tags,\n\t\t\t\twhich should not have their spaces\n\t\t\t\treplaced with line breaks. ]]\n\t\tlocal escaped = {}\n\t\tlocal i = 0\n\t\tlocal escape_format = \"$%d\"\n\t\t\n\t\tlocal function escape(text, pattern, prefix)\n\t\t\t\
      return text:gsub(\n\t\t\t\tpattern,\n\t\t\t\tfunction(item)\n\t\t\t\t\ti = i + 1\n\t\t\t\t\tescaped[i] = item\n\t\t\t\t\treturn (prefix or \"\") .. escape_format:format(i)\n\t\t\t\tend)\n\t\tend\n\t\t\n\t\ttext = escape(text, \"%[%[([^|]+|)\", \"[[\")\n\
      \t\ttext = escape(text, \"&lt;[^&gt;]+&gt;\")\n\t\t\n\t\ttext = text:gsub(\" +\", \"&lt;br&gt;\")\n\t\t\n\t\t-- Unescape whatever was escaped.\n\t\ttext = text:gsub(\n\t\t\t\"$(%d)\",\n\t\t\tfunction(a)\n\t\t\t\ta = tonumber(a)\n\t\t\t\treturn escaped[a]\n\
      \t\t\tend\n\t\t)\n\tend\n\n\tif sc:getCode() == \"Imag\" then\n\t\tface = nil\n\tend\n\n\tlocal function class_attr(classes)\n\t\ttable.insert(classes, 1, sc:getCode())\n\t\tif class and class ~= '' then\n\t\t\ttable.insert(classes, class)\n\t\tend\n\t\
      \treturn 'class=\"' .. table.concat(classes, ' ') .. '\"'\n\tend\n\t\n\tlocal function tag_attr(...)\n\t\tlocal output = {}\n\t\tif id then\n\t\t\ttable.insert(output, 'id=\"' .. require(\"Module:utilities\").make_id(lang, id) .. '\"')\n\t\tend\n\t\t\n\
      \t\ttable.insert(output, class_attr({...}) )\n\t\t\n\t\tif lang then\n\t\t\ttable.insert(output, 'lang=\"' .. lang:getCode() .. '\"')\n\t\tend\n\t\t\n\t\treturn table.concat(output, \" \")\n\tend\n\t\n\tif face == \"hypothetical\" then\n\t-- [[Special:WhatLinksHere/Template:tracking/script-utilities/face/hypothetical]]\n\
      \t\trequire(\"Module:debug\").track(\"script-utilities/face/hypothetical\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").faces[face or \"nil\"]\n\t\n\tlocal post = \"\"\n\tif sc:getDirection() == \"rtl\" and (face == \"translation\"\
      \ or mw.ustring.find(text, \"%p$\")) then\n\t\tpost = \"&amp;lrm;\"\n\tend\n\t\n\t-- Add a script wrapper\n\tif data then\n\t\treturn ( data.prefix or \"\" ) .. '&lt;' .. data.tag .. ' ' .. tag_attr(data.class) .. '&gt;' .. text .. '&lt;/' .. data.tag\
      \ .. '&gt;' .. post\n\telse\n\t\terror('Invalid script face \"' .. face .. '\".')\n\tend\nend\n\nfunction export.tag_translit(translit, lang, kind, attributes, is_manual)\n\tif type(lang) == \"table\" then\n\t\tlang = lang.getCode and lang:getCode()\n\t\
      \t\tor error(\"Third argument to tag_translit should be a language code or language object.\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").translit[kind or \"default\"]\n\t\n\tlocal opening_tag = {}\n\t\n\ttable.insert(opening_tag,\
      \ data.tag)\n\tif lang == \"ja\" then\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. (is_manual and \"manual-tr \" or \"\") .. 'tr\"')\n\telse\n\t\ttable.insert(opening_tag, 'lang=\"' .. lang .. '-Latn\"\
      ')\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. (is_manual and \"manual-tr \" or \"\") .. 'tr Latn\"')\n\tend\n\t\n\tif data.dir then\n\t\ttable.insert(opening_tag, 'dir=\"' .. data.dir .. '\"')\n\tend\n\
      \t\n\ttable.insert(opening_tag, attributes)\n\t\n\treturn \"&lt;\" .. table.concat(opening_tag, \" \") .. \"&gt;\" .. translit .. \"&lt;/\" .. data.tag .. \"&gt;\"\nend\n\nfunction export.tag_transcription(transcription, lang, kind, attributes)\n\tif type(lang)\
      \ == \"table\" then\n\t\tlang = lang.getCode and lang:getCode()\n\t\t\tor error(\"Third argument to tag_translit should be a language code or language object.\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").transcription[kind\
      \ or \"default\"]\n\t\n\tlocal opening_tag = {}\n\t\n\ttable.insert(opening_tag, data.tag)\n\tif lang == \"ja\" then\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. 'ts\"')\n\telse\n\t\ttable.insert(opening_tag,\
      \ 'lang=\"' .. lang .. '-Latn\"')\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. 'ts Latn\"')\n\tend\n\t\n\tif data.dir then\n\t\ttable.insert(opening_tag, 'dir=\"' .. data.dir .. '\"')\n\tend\n\t\n\ttable.insert(opening_tag,\
      \ attributes)\n\t\n\treturn \"&lt;\" .. table.concat(opening_tag, \" \") .. \"&gt;\" .. transcription .. \"&lt;/\" .. data.tag .. \"&gt;\"\t\nend\n\n-- Add a notice to request the native script of a word\nfunction export.request_script(lang, sc)\n\tlocal\
      \ scripts = lang.getScripts and lang:getScripts() or error('The language \"' .. lang:getCode() .. '\" does not have the method getScripts. It may be unwritten.')\n\t\n\t-- By default, request for \"native\" script\n\tlocal cat_script = \"native\"\n\tlocal\
      \ disp_script = \"script\"\n\t\n\t-- If the script was not specified, and the language has only one script, use that.\n\tif not sc and #scripts == 1 then\n\t\tsc = scripts[1]\n\tend\n\t\n\t-- Is the script known?\n\tif sc then\n\t\t-- If the script is\
      \ Latin, return nothing.\n\t\tif export.is_Latin_script(sc) then\n\t\t\treturn \"\"\n\t\tend\n\t\t\n\t\tif sc:getCode() ~= scripts[1]:getCode() then\n\t\t\tdisp_script = sc:getCanonicalName()\n\t\tend\n\t\t\n\t\t-- The category needs to be specific to\
      \ script only if there is chance\n\t\t-- of ambiguity. This occurs when lang=und, or when the language has\n\t\t-- multiple scripts.\n\t\tif lang:getCode() == \"und\" or scripts[2] then\n\t\t\tcat_script = sc:getCanonicalName()\n\t\tend\n\telse\n\t\t--\
      \ The script is not known.\n\t\t-- Does the language have at least one non-Latin script in its list?\n\t\tlocal has_nonlatin = false\n\t\t\n\t\tfor i, val in ipairs(scripts) do\n\t\t\tif not export.is_Latin_script(val) then\n\t\t\t\thas_nonlatin = true\n\
      \t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- If there are non-Latin scripts, return nothing.\n\t\tif not has_nonlatin then\n\t\t\treturn \"\"\n\t\tend\n\tend\n\t\n\tlocal category = \"\"\n\t\n\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\
      \t\tcategory = \"[[Category:\" .. lang:getCanonicalName() .. \" terms needing \" .. cat_script .. \" script]]\"\n\tend\n\t\n\treturn \"&lt;small&gt;[\" .. disp_script .. \" needed]&lt;/small&gt;\" .. category\nend\n\nfunction export.template_rfscript(frame)\n\
      \tlocal args = frame.args\n\tlocal lang = args[1] or error(\"The first parameter (language code) has not been given\")\n\tlocal sc = args[\"sc\"]; if sc == \"\" then sc = nil end\n\tlang = require(\"Module:languages\").getByCode(lang) or error(\"The language\
      \ code \\\"\" .. lang .. \"\\\" is not valid.\")\n\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil)\n\t\n\tlocal ret = export.request_script(lang, sc)\n\t\n\tif ret ==\
      \ \"\" then\n\t\terror(\"This language is written in the Latin alphabet. It does not need a native script.\")\n\telse\n\t\treturn ret\n\tend\nend\n\nfunction export.checkScript(text, scriptCode, result)\n\tlocal scriptObject = require(\"Module:scripts\"\
      ).getByCode(scriptCode)\n\t\n\tif not scriptObject then\n\t\terror('The script code \"' .. scriptCode .. '\" is not recognized.')\n\tend\n\t\n\tlocal originalText = text\n\t\n\t-- Remove non-letter characters.\n\ttext = mw.ustring.gsub(text, \"[%A]\",\
      \ \"\")\n\t\n\t-- Remove all characters of the script in question.\n\ttext = mw.ustring.gsub(text, \"[\" .. scriptObject:getCharacters() .. \"]\", \"\")\n\t\n\tif text ~= \"\" then\n\t\tif type(result) == \"string\" then\n\t\t\terror(result)\n\t\telse\n\
      \t\t\terror('The text \"' .. originalText .. '\" contains the letters \"' .. text .. '\" that do not belong to the ' .. scriptObject:getCategoryName() .. '.', 2)\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:03.165Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38348 t=1555362603075853
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:03 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1280.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 516394606, 264343255, 685595281
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6246525\" pageid=\"6246525\" ns=\"828\" title=\"Module:links/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-03-13T02:26:26Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add [[Unsupported titles/MeToo]]\" xml:space=\"preserve\">local data = {}\n\ndata.high_memory_entries = {\n\t\"a\",\n\t\"animal\",\n\t\"book\",\n\t\"coffee\",\n\t\"do\",\n\t\"e\",\n\t\"\
      language\",\n\t\"night\",\n\t\"smoke\",\n\t\"son\",\n\t\"sun\",\n\t\"water\",\n\t\"wind\",\n}\n\n\nlocal U = mw.ustring.char\nlocal soft_hyphen = U(0xAD)\n\n--[[\tThe \"actual title\" is the page name with the prefix \"Unsupported titles/\" removed.\n\t\
      \t[\"displayed_title\"] = \"actual title\"\t]]\ndata.unsupported_titles = {\n\t[\" \"] = \"Space\",\n\t[\"{\"] = \"Left curly bracket\",\n\t[\"}\"] = \"Right curly bracket\",\n\t[\"[\"] = \"Left square bracket\",\n\t[\"]\"] = \"Right square bracket\",\n\
      \t[\"&lt;\"] = \"Less than\",\n\t[\"&gt;\"] = \"Greater than\",\n\t[\"=&lt;\"] = \"Equal less than\",\n\t[\"=&gt;\"] = \"Equal greater than\",\n\t[\"&gt;=\"] = \"Greater than equal\",\n\t[\"&lt;=\"] = \"Less than equal\",\n\t[\"-&gt;\"] = \"Hyphen greater\
      \ than\",\n\t[\"&lt;-\"] = \"Less than hyphen\",\n\t[\"&gt;_&lt;\"] = \"Greater than low line less than\",\n\t[\"::\"] = \"Double colon\",\n\t[\": :\"] = \"Enclosing colons\",\n\t[\":=\"] = \"Colon equals\",\n\t[\":Þ\"] = \"Colon capital thorn\",\n\t[\"\
      :(\"] = \"Colon left paren\",\n\t[\":)\"] = \"Colon right paren\",\n\t[\"&lt;&gt;\"] = \"Less than greater than\",\n\t[\"&lt;3\"] = \"Less than three\",\n\t[\"&lt;/3\"] = \"Less than slash three\",\n\t[\"&lt; &gt;\"] = \"Enclosing less than greater than\"\
      ,\n\t[\"&lt; /&gt;\"] = \"Less than trailing slash greater than\",\n\t[\"&lt; &gt; &lt;/ &gt;\"] = \"HTML start tag end tag\",\n\t[\"&lt;!-- --&gt;\"] = \"HTML comment\",\n\t[\"&lt;g&gt;\"] = \"g tag\",\n\t[\":-(\"] = \"Colon hyphen left paren\",\n\t[\"\
      :-)\"] = \"Colon hyphen right paren\",\n\t[\"|\"] = \"Vertical line\",\n\t[\"||\"] = \"Vertical line vertical line\",\n\t[\"| |\"] = \"Enclosing vertical lines\",\n\t[\"C#\"] = \"C sharp\",\n\t[\"#\"] = \"Number sign\",\n\t[\"# #\"] = \"Enclosing number\
      \ signs\",\n\t[\":\"] = \"Colon\",\n\t[\"..\"] = \"Double period\",\n\t[\".\"] = \"Full stop\",\n\t[\"_\"] = \"Low line\",\n\t[\"-_-\"] = \"Low line interfix\",\n\t[U(0xFFFD)] = \"Replacement character\",\n\t[U(0x1680)] = \"Ogham space\",\n\t[\"[ ]\"]\
      \ = \"Square brackets\",\n\t[\"{ }\"] = \"Curly brackets\",\n\t[\"[…]\"] = \"Square bracketed ellipsis\",\n\t[\"_ _\"] = \"Enclosing low lines\",\n\t[\"C|N&gt;K\"] = \"C through N to K\",\n\t[\"#MeToo\"] = \"MeToo\",\n\t[\"о/.\"] = \"о slash dot\",\n\t\
      [\"กรุงเทพมหานคร อมรรัตนโกสินทร์ มหินทรายุธยา มหาดิลกภพ นพรัตนราชธานีบูรีรมย์ อุดมราชนิเวศน์มหาสถาน อมรพิมานอวตารสถิต สักกะทัตติยวิษณุกรรมประสิทธิ์\"] = \"Thai name of Bangkok\",\n\t[\"λοπαδοτεμαχοσελαχογαλεοκρανιολειψανοδριμυποτριμματοσιλφιοκαραβομελι\
      τοκατακεχυμενοκιχλ\" .. soft_hyphen .. \"επικοσσυφοφαττοπεριστεραλεκτρυονοπτοκεφαλλιοκιγκλοπελειολαγῳοσιραιοβαφητραγανοπτερύγων\"] = \"Ancient Greek dish\",\n\t[\":≠\"] = \":≠\",\n\t[\"S:t\"] = \"S:t\",\n\t[\"S:ta\"] = \"S:ta\",\n\t[\"c:a\"] = \"c:a\"\
      ,\n\t[\"n:a\"] = \"n:a\",\n\t[\"n:o\"] = \"n:o\",\n\t[\"n:r\"] = \"n:r\",\n\t[\"s:a\"] = \"s:a\",\n\t[\"st:a\"] = \"st:a\",\n\t[\"v:a\"] = \"v:a\",\n}\n\nfor i, item in ipairs(data.high_memory_entries) do\n\tdata.high_memory_entries[i] = nil\n\tdata.high_memory_entries[item]\
      \ = true\nend\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:03.333Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42742 t=1555362603243703
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:03 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 756949435, 826134220, 695649114
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6149597\" pageid=\"6149597\" ns=\"828\" title=\"Module:script utilities/data\"><revisions><rev user=\"DTLHS\" timestamp=\"2018-03-12T01:54:08Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local data = {}\n\ndata.translit = {\n\t[\"term\"] = {\n--[=[\tcan't be done until Kana transliterations are correctly parsed by [[Module:links]]\n\t\t[\"tag\"\
      ] = \"i\",\n\t\t]=]\n\t\t[\"classes\"] = \"mention-tr\",\n\t},\n\t[\"usex\"] = {\n\t\t[\"tag\"] = \"i\",\n\t\t[\"classes\"] = \"e-transliteration\",\n\t},\n\t[\"head\"] = {\n\t\t[\"classes\"] = \"headword-tr\",\n\t\t[\"dir\"] = \"ltr\",\n\t},\n\t[\"default\"\
      ] = {},\n}\n\ndata.transcription = {\n\t[\"head\"] = {\n\t\t[\"tag\"] = \"span\",\n\t\t[\"classes\"] = \"headword-ts\",\n\t\t[\"dir\"] = \"ltr\",\n\t},\n\t[\"default\"] = {},\n}\n\nfor key, value in pairs(data.translit) do\n\tif not value.tag then\n\t\t\
      value.tag = \"span\"\n\tend\nend\n\ndata.faces = {\n\t[\"term\"] = {\n\t\ttag = \"i\",\n\t\tclass = \"mention\",\n\t},\n\t[\"head\"] = {\n\t\ttag = \"strong\",\n\t\tclass = \"headword\",\n\t},\n\t[\"hypothetical\"] = {\n\t\tprefix = '&lt;span class=\"\
      hypothetical-star\"&gt;*&lt;/span&gt;',\n\t\ttag = \"i\",\n\t\tclass = \"hypothetical\",\n\t},\n\t[\"bold\"] = {\n\t\ttag = \"b\",\n\t},\n\t[\"translation\"] = {\n\t\ttag = \"span\",\n\t},\n\t[\"nil\"] = {\n\t\ttag = \"span\",\n\t},\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:03.492Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3APIE+root&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=37072 t=1555362603409933
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1404'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:03 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1339.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 933242275, 488105254, 694273694
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4857581" pageid="4857581" ns="10" title="Template:PIE root"><revisions><rev user="Erutuon" timestamp="2019-03-06T09:30:51Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{catlangname|{{{1|&lt;noinclude&gt;und&lt;/noinclude&gt;}}}|terms derived from the PIE root *{{{2|&lt;noinclude&gt;h₁ed&lt;/noinclude&gt;}}}-{{#if:{{{id|{{{id1|}}}}}}|&amp;#32;({{{id|{{{id1|}}}}}})}}}}&lt;!--
      --&gt;{{#if:{{{3|}}}|{{catlangname|{{{1|}}}|terms derived from the PIE root *{{{3}}}-{{#if:{{{id2|}}}|&amp;#32;({{{id2|}}})}}}}}}&lt;!--
      --&gt;{{#if:{{{4|}}}|{{catlangname|{{{1|}}}|terms derived from the PIE root *{{{4}}}-{{#if:{{{id3|}}}|&amp;#32;({{{id3|}}})}}}}}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:03.667Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Acatlangname&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=61000 t=1555362603561449
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:03 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1280.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 422983627, 734606430, 706643969
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="2130756" pageid="2130756" ns="10" title="Template:catlangname"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T17:33:58Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:catlangname]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefi..." xml:space="preserve">{{#invoke:utilities|template_categorize|format=pos}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:03.855Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42399 t=1555362603757132
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:03 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1341.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 570569343, 268207173, 703666987
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4073440\" pageid=\"4073440\" ns=\"828\" title=\"Module:utilities\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-10-30T22:40:37Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"pipe doesn&#039;t have to be escaped\" xml:space=\"preserve\">local export = {}\n\nlocal data = mw.loadData(\"Module:utilities/data\")\nlocal notneeded = data.notneeded\nlocal neededhassubpage\
      \ = data.neededhassubpage\n\n-- A helper function to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nfunction export.pattern_escape(text)\n\tif type(text) == \"table\" then\n\t\ttext = text.args[1]\n\tend\n\ttext = mw.ustring.gsub(text,\
      \ \"([%^$()%%.%[%]*+%-?])\", \"%%%1\")\n\treturn text\nend\n\nfunction export.plain_gsub(text, pattern, replacement)\n\tlocal invoked = false\n\t\n\tif type(text) == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\
      \t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = {},\n\t\t\t\t[2] = {},\n\t\t\t\t[3] = { allow_empty = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\
      \t\t\treplacement = args[3]\n\t\telse\n\t\t\terror(\"If the first argument to plain_gsub is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not ( type(pattern) == \"string\" or type(pattern) == \"number\" ) then\n\t\t\terror(\"The second\
      \ argument to plain_gsub should be a string or a number.\")\n\t\tend\n\t\t\n\t\tif not ( type(replacement) == \"string\" or type(replacement) == \"number\" ) then\n\t\t\terror(\"The third argument to plain_gsub should be a string or a number.\")\n\t\t\
      end\n\tend\n\t\n\tpattern = export.pattern_escape(pattern)\n\t\n\tif invoked then\n\t\ttext = mw.ustring.gsub(text, pattern, replacement)\n\t\treturn text\n\telse\n\t\treturn mw.ustring.gsub(text, pattern, replacement)\n\tend\nend\n\n--[[\nFormat the categories\
      \ with the appropriate sort key. CATEGORIES is a list of\ncategories.\n\t-- LANG is an object encapsulating a language; if nil, the object for\n\t   language code 'und' (undetermined) will be used.\n\t-- SORT_KEY is placed in the category invocation, and\
      \ indicates how the\n\t   page will sort in the respective category. Normally this should be nil,\n\t   and a default sort key based on the subpage name (the part after the\n\t   colon) will be used.\n\t-- SORT_BASE lets you override the default sort key\
      \ used when SORT_KEY is\n\t   nil. Normally, this should be nil, and a language-specific default sort\n\t   key is computed from the subpage name (e.g. for Russian this converts\n\t   Cyrillic ё to a string consisting of Cyrillic е followed by U+10FFFF,\n\
      \t   so that effectively ё sorts after е instead of the default Wikimedia\n\t   sort, which (I think) is based on Unicode sort order and puts ё after я,\n\t   the last letter of the Cyrillic alphabet.\n\t-- FORCE_OUTPUT forces normal output in all namespaces.\
      \ Normally, nothing\n\t   is output if the page isn't in the main, Appendix:, Reconstruction: or\n\t   Citations: namespaces.\n]]\nfunction export.format_categories(categories, lang, sort_key, sort_base, force_output, sc)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\
      \t\n\tif type(lang) == \"table\" and not lang.getCode then\n\t\terror(\"The second argument to format_categories should be a language object.\")\n\tend\n\t\n\tif force_output or data.allowedNamespaces[NAMESPACE] then\n\t\tlocal PAGENAME = mw.title.getCurrentTitle().text\n\
      \t\tlocal SUBPAGENAME = mw.title.getCurrentTitle().subpageText\n\t\t\n\t\tif not lang then\n\t\t\tlang = require(\"Module:languages\").getByCode(\"und\")\n\t\tend\n\t\t\n\t\t-- Generate a default sort key\n\t\tsort_base = lang:makeSortKey(sort_base or\
      \ SUBPAGENAME, sc)\n\t\t\n\t\tif sort_key and sort_key ~= \"\" then\n\t\t\t-- Gather some statistics regarding sort keys\n\t\t\tif mw.ustring.upper(sort_key) == sort_base then\n\t\t\t\ttable.insert(categories, \"Sort key tracking/redundant\")\n\t\t\tend\n\
      \t\telse\n\t\t\tsort_key = sort_base\n\t\tend\n\t\t\n\t\t--[[\tIf the resulting key is the same as the wiki software's\n\t\t\t\tdefault, or if the sortkey is empty, remove it\t\t\t ]]\n\t\tif sort_key == PAGENAME or sort_key == \"\" then\n\t\t\tsort_key\
      \ = nil\n\t\tend\n\t\t\n\t\tlocal out_categories = {}\n\t\tfor key, cat in ipairs(categories) do\n\t\t\tout_categories[key] = \"[[Category:\" .. cat .. (sort_key and \"|\" .. sort_key or \"\") .. \"]]\"\n\t\tend\n\t\t\n\t\treturn table.concat(out_categories,\
      \ \"\")\n\telse\n\t\treturn \"\"\n\tend\nend\n\n-- Used by {{categorize}}\nfunction export.template_categorize(frame)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\tlocal format = frame.args[\"format\"]\n\tlocal args = frame:getParent().args\n\
      \t\n\tlocal langcode = args[1]; if langcode == \"\" then langcode = nil end\n\tlocal sort_key = args[\"sort\"]; if sort_key == \"\" then sort_key = nil end\n\tlocal categories = {}\n\t\n\tif not langcode then\n\t\tif NAMESPACE == \"Template\" then return\
      \ \"\" end\n\t\terror(\"Language code has not been specified. Please pass parameter 1 to the template.\")\n\tend\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(langcode)\n\t\n\tif not lang then\n\t\tif NAMESPACE == \"Template\" then return\
      \ \"\" end\n\t\terror(\"The language code \\\"\" .. langcode .. \"\\\" is not valid.\")\n\tend\n\t\n\tlocal prefix = \"\"\n\t\n\tif format == \"pos\" then\n\t\tprefix = lang:getCanonicalName() .. \" \"\n\telseif format == \"topic\" then\n\t\tprefix = lang:getCode()\
      \ .. \":\"\n\tend\n\t\n\tlocal i = 2\n\tlocal cat = args[i]\n\t\n\twhile cat do\n\t\tif cat ~= \"\" then\n\t\t\ttable.insert(categories, prefix .. cat)\n\t\tend\n\t\t\n\t\ti = i + 1\n\t\tcat = args[i]\n\tend\n\t\n\treturn export.format_categories(categories,\
      \ lang, sort_key)\nend\n\nfunction export.catfix(lang, sc)\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"catfix/no lang\")\n\t\treturn nil\n\telseif type(lang) ~= \"table\" then\n\t\trequire(\"Module:debug\").track(\"catfix/lang not table\"\
      )\n\t\treturn nil\n\tend\n\tlocal canonicalName = lang:getCanonicalName() or error('The first argument to the function \"catfix\" should be a language object from Module:languages.')\n\t\n\tif sc and not sc.getCode then\n\t\terror('The second argument\
      \ to the function \"catfix\" should be a script object from Module:scripts.')\n\tend\n\t\n\t-- To add script classes to links on pages created by category boilerplate templates.\n\tif not sc then\n\t\tsc = data.catfix_scripts[lang:getCode()]\n\t\tif sc\
      \ then\n\t\t\tsc = require(\"Module:scripts\").getByCode(sc)\n\t\tend\n\tend\n\t\n\treturn \"&lt;span id=\\\"catfix\\\" style=\\\"display:none;\\\" class=\\\"CATFIX-\" .. mw.uri.anchorEncode(canonicalName) .. \"\\\"&gt;\" ..\n\t\trequire(\"Module:script\
      \ utilities\").tag_text(\"&amp;nbsp;\", lang, sc, nil) ..\n\t\t\"&lt;/span&gt;\"\nend\n\nfunction export.catfix_template(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t\t[2] = { alias_of = \"sc\" },\n\t\t[\"sc\"] = {},\n\t}\n\t\n\tlocal args = require(\"\
      Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal sc = args.sc\n\tif sc then\n\t\tsc = require(\"Module:scripts\"\
      ).getByCode(sc) or error('The script code \"' .. sc .. '\", provided in the second parameter, is not valid.')\n\tend\n\t\n\treturn export.catfix(lang, sc)\nend\n\n-- Not exporting because it is not used yet.\nlocal function getDateTense(frame) \n\tlocal\
      \ name_num_mapping = {[\"January\"] = 1, [\"February\"] = 2, [\"March\"] = 3, [\"April\"] = 4, [\"May\"] = 5, [\"June\"] = 6, \n\t\t[\"July\"] = 7, [\"August\"] = 8, [\"September\"] = 9, [\"October\"] = 10, [\"November\"] = 11, [\"December\"] = 12, \n\t\
      \t[1] = 1, [2] = 2, [3] = 3, [4] = 4, [5] = 5, [6] = 6, [7] = 7, [8] = 8, [9] = 9, [10] = 10, [11] = 11, [12] = 12}\n\tlocal month = name_num_mapping[frame.args[2]]\n\tlocal date = os.time({year = frame.args[1], day = frame.args[3], month = month})\n\t\
      local today = os.time() -- 12 AM/PM\n\tlocal diff = os.difftime(date, today)\n\tlocal daylength = 24 * 3600\n\t\n\tif diff &lt; -daylength / 2 then return \"past\"\n\telse \n\t\tif diff &gt; daylength / 2  then return \"future\"\n\t\telse return \"present\"\
      \ end\n\tend\nend\n\nfunction export.make_id(lang, str)\n\t--[[\tIf called with invoke, first argument is a frame object.\n\t\t\tIf called by a module, first argument is a language object. ]]\n\tlocal invoked = false\n\t\n\tif type(lang) == \"table\" then\n\
      \t\tif lang.args then\n\t\t\tinvoked = true\n\t\t\t\n\t\t\tlocal frame = lang\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = {},\n\t\t\t\t[2] = {},\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\
      \t\t\t\n\t\t\tlocal langCode = args[1]\n\t\t\tstr = args[2]\n\t\t\t\n\t\t\tlocal m_languages = require(\"Module:languages\")\n\t\t\t\n\t\t\tlang = m_languages.getByCode(langCode) or m_languages.err(langCode, 1)\n\t\telseif not lang.getCanonicalName then\n\
      \t\t\terror(\"The first argument to make_id should be a language object.\")\n\t\tend\n\tend\n\n\tif not ( type(str) == \"string\" or type(str) == \"number\" ) then\n\t\terror(\"The second argument to make_id should be a string or a number.\")\n\tend\n\t\
      \n\tlocal canonicalName = lang:getCanonicalName()\n\t\n\tstr = mw.uri.encode(str, \"WIKI\")\n\t\n\tlocal id = canonicalName .. \"-\" .. str\n\t\n\tif invoked then\n\t\treturn '&lt;li class=\"senseid\" id=\"' .. id .. '\"&gt;'\n\telse\n\t\treturn id\n\t\
      end\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:04.036Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55890 t=1555362603933126
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1347.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 925352494, 561502757, 677769818
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6279245\" pageid=\"6279245\" ns=\"828\" title=\"Module:utilities/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-01-04T05:57:22Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 51192985 by [[Special:Contributions/2601:CD:C101:322D:F03C:8688:907:84|2601:CD:C101:322D:F03C:8688:907:84]] ([[User talk:2601:CD:C101:322D:F03C:8688:907:84|talk]]): ???\"\
      \ xml:space=\"preserve\">local data = {}\n\ndata.notneeded = {\n\t[\"und\"] = true,\n\t[\"cmn\"] = true,\n\t[\"ja\"] = true,\n\t[\"zu\"] = true,\n\t[\"nan\"] = true,\n\t[\"yue\"] = true,\n\t[\"ko\"] = true,\n}\n\ndata.neededhassubpage = {\n\t[\"ga\"] =\
      \ true,\n\t[\"gv\"] = true,\n\t[\"nv\"] = true,\n\t[\"roa-jer\"] = true,\n\t[\"fr\"] = true,\n\t[\"rm\"] = true,\n\t[\"prg\"] = true,\n\t[\"gd\"] = true,\n\t[\"twf\"] = true,\n\t[\"en\"] = true,\n\t[\"ro\"] = true,\n\t[\"egl\"] = true,\n\t[\"roa-tar\"\
      ] = true,\n\t[\"gl\"] = true,\n\t[\"ast\"] = true,\n\t[\"br\"] = true,\n}\n\n--[[\n\tScript that should be applied to links in categories.\n]]\ndata.catfix_scripts = {\n\t[\"ab\"] = \"Cyrl\",\n\t[\"ae\"] = \"Avst\",\n\t[\"ar\"] = \"Arab\",\n\t[\"ary\"\
      ] = \"Arab\",\n\t[\"be\"] = \"Cyrl\",\n\t[\"cu\"] = \"Cyrs\",\n\t[\"el\"] = \"Grek\",\n\t[\"grc\"] = \"polytonic\",\n\t[\"he\"] = \"Hebr\",\n\t[\"ka\"] = \"Geor\",\n\t[\"orv\"] = \"Cyrs\",\n\t[\"ru\"] = \"Cyrl\",\n\t[\"sa\"] = \"Deva\",\n\t[\"syl\"] =\
      \ \"Sylo\",\n\t[\"xfa\"] = \"Ital\",\n\t[\"zle-ono\"] = \"Cyrs\",\n\t[\"hi\"] = \"Deva\",\n\t[\"mr\"] = \"Deva\",\n--[[\n\t[\"\"] = \"\",\n]]\n}\n\n-- Namespaces in which format_categories will add categories.\ndata.allowedNamespaces = {\n\t[\"\"] = true,\n\
      \t[\"Appendix\"] = true,\n\t[\"Reconstruction\"] = true,\n\t[\"Citations\"] = true,\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:04.234Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ader&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49508 t=1555362604139028
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1283.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 686228757, 556031321, 702554082
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5021749" pageid="5021749" ns="10" title="Template:der"><revisions><rev user="Rua" timestamp="2015-10-19T13:33:41Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Redirected page to [[Template:derived]]" xml:space="preserve">#REDIRECT [[Template:derived]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:04.408Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aderived&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=59703 t=1555362604302755
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1224.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 829301561, 233697386, 699221403
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5021747" pageid="5021747" ns="10" title="Template:derived"><revisions><rev user="Daniel Carrero" timestamp="2016-06-30T12:20:18Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:etymology/templates|derived}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:04.613Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48137 t=1555362604492924
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 434209545, 835654965, 687633925
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4998801\" pageid=\"4998801\" ns=\"828\" title=\"Module:etymology/templates\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-04-07T01:31:40Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"remove term request category from [[Template:desc]] when hyphen (-) is term and there are annotations, for instance in [[σμίλη]]; see [[Wiktionary:Grease pit/2019/April#When a linking\
      \ template is permissibly used with the second parameter being a hyphen but a gloss parameter is present, which I think is not unbeseeming, it categorizes as a term request|Grease Pit discussion]]\" xml:space=\"preserve\">local export = {}\n\nlocal m_languages\
      \ = require(\"Module:languages\")\n\n\nlocal function fetch_lang(lang, parameter)\n\treturn m_languages.getByCode(lang) or m_languages.err(lang, parameter)\nend\n\n\nlocal function fetch_source(code, disallow_family)\n\tlocal source =\n\t\tm_languages.getByCode(code)\n\
      \t\tor require(\"Module:etymology languages\").getByCode(code)\n\t\tor not disallow_family and require(\"Module:families\").getByCode(code)\n\t\n\tif source then\n\t\treturn source\n\telse\n\t\terror(\"The language\" .. (not disallow_family and \", family\"\
      \ or \"\") .. \" or etymology language code \\\"\" .. code .. \"\\\" is not valid.\")\n\tend\nend\n\n\nlocal function fetch_script(sc)\n\tif sc then\n\t\treturn require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\"\
      \ is not valid.\")\n\telse\n\t\treturn nil\n\tend\nend\n\n\nfunction export.etyl(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args,\
      \ params)\n\t\n\tlocal source = fetch_source(args[1])\n\tlocal lang = args[2]\n\tlocal sort_key = args[\"sort\"]\n\t\n\t-- Empty language means English, but \"-\" means no language. Yes, confusing...\n\tif not lang then\n\t\tlang = \"en\"\n\telseif lang\
      \ == \"-\" then\n\t\tlang = nil\n\tend\n\tif lang then\n\t\tlang = fetch_lang(lang, 2)\n\tend\n\tif lang and (lang:getCode() == \"la\" or lang:getCode() == \"nl\") then\n\t\trequire(\"Module:debug\").track(\"etyl/\" .. lang:getCode())\n\t\trequire(\"Module:debug\"\
      ).track(\"etyl/\" .. lang:getCode() .. \"/\" .. source:getCode())\n\tend\n\t\n\treturn require(\"Module:etymology\").format_etyl(lang, source, sort_key)\nend\n\n\nfunction export.cognate(frame)\n\tlocal args = frame:getParent().args\n\t\n\tif args.gloss\
      \ then\n\t\trequire(\"Module:debug\").track(\"cognate/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {},\n\t\t[3] = {alias_of = \"alt\"},\n\t\t[4] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\
      \t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\targs\
      \ = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal source = fetch_source(args[1])\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").format_cognate(\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\t\
      term = args[2],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"]\n\t\t},\n\t\targs[\"\
      sort\"])\nend\n\n\nfunction export.noncognate(frame)\n\treturn export.cognate(frame)\nend\n\n\nfunction export.derived(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3]\
      \ = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\
      \t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\
      \tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_derived(\n\t\tlang, \n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"\
      g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"]\n\t\t},\n\t\targs[\"sort\"])\nend\n\n\nfunction export.inherited(frame)\n\tlocal params = {\n\t\t[1] = {required\
      \ = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"\
      },\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args,\
      \ params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2], \"no family\")\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").format_inherited(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\
      \t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"\
      ]\n\t\t},\n\t\targs[\"sort\"])\nend\n\n\nfunction export.borrowed(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of\
      \ = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\
      \t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\t\
      return require(\"Module:etymology\").format_borrowed(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts\
      \ = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], false, true, \"plain\")\nend\n\n\nfunction export.learned_borrowed(frame)\n\tlocal args = frame:getParent().args\n\t\n\t\
      if args.gloss then\n\t\trequire(\"Module:debug\").track(\"learned_borrowed/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of\
      \ = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"\
      ] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\
      \tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_borrowed(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\
      \tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"], \"\
      learned\")\nend\n\n\nfunction export.orthographic_borrowed(frame)\n\tlocal args = frame:getParent().args\n\t\n\tif args.gloss then\n\t\trequire(\"Module:debug\").track(\"orthographic_borrowed/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required\
      \ = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"\
      },\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\
      \t}\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_borrowed(\n\
      \t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos\
      \ = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"], \"orthographic\")\nend\n\n\nfunction export.unadapted_borrowed(frame)\n\tlocal args = frame:getParent().args\n\t\n\tif args.gloss then\n\t\t\
      require(\"Module:debug\").track(\"unadapted_borrowed/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5]\
      \ = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"\
      ] = {},\n\t\t\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source =\
      \ fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_borrowed(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"\
      id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"], \"unadapted\")\n\
      end\n\nfunction export.calque(frame)\n\tlocal args = frame:getParent().args\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t\
      [5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t\t[\"nocap\"] = {type\
      \ = \"boolean\"},\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t}\n\t\n\t-- More informative error message.\n\tif args[\"etyl lang\"] or args[\"etyl term\"] or args[\"etyl t\"] or args[\"etyl tr\"] then\n\t\terror(\"{{[[Template:calque|calque]]}} no longer\
      \ supports parameters beginning with etyl. \" ..\n\t\t\t\"The parameters supported are similar to those used by \" ..\n\t\t\t\"{{[[Template:der|der]]}}, {{[[Template:inh|inh]]}}, \" ..\n\t\t\t\"{{[[Template:bor|bor]]}}. See [[Template:calque/documentation]]\
      \ for more.\")\n\tend\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\t\n\treturn require(\"Module:etymology\").calque(\n\t\tlang,\n\t\t{\n\t\t\tlang\
      \ = source,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"\
      ],\n\t\targs[\"nocap\"],\n\t\targs[\"notext\"])\nend\n\nfunction export.semantic_loan(frame)\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of =\
      \ \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t\
      [\"nocap\"] = {type = \"boolean\"},\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t\t[\"ger\"] = {type = \"boolean\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang\
      \ = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").format_semantic_loan(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\
      \t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"\
      nocap\"], args[\"notext\"])\nend\n\nfunction export.psm(frame)\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of\
      \ = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"nocap\"] = {type = \"boolean\"\
      },\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal\
      \ sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").psm(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\t\
      tr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"])\nend\n\nlocal function qualifier(content)\n\tif content then\n\
      \t\treturn table.concat{\n\t\t\t'&lt;span class=\"ib-brac qualifier-brac\"&gt;(&lt;/span&gt;',\n\t\t\t'&lt;span class=\"ib-content qualifier-content\"&gt;',\n\t\t\tcontent,\n\t\t\t'&lt;/span&gt;',\n\t\t\t'&lt;span class=\"ib-brac qualifier-brac\"&gt;)&lt;/span&gt;'\n\
      \t\t}\n\tend\nend\n\n\nfunction export.descendant(frame)\n\tlocal namespace = mw.title.getCurrentTitle().nsText\n\t\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = { alias_of = \"gloss\" },\n\t\t[\"g\"] = {list\
      \ = true},\n\t\t[\"gloss\"] = {},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = { alias_of = \"gloss\" },\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"bor\"] = { type = \"boolean\" },\n\t\t[\"der\"\
      ] = { type = \"boolean\" },\n\t\t[\"clq\"] = { type = \"boolean\" },\n\t\t[\"cal\"] = { alias_of = \"clq\" },\n\t\t[\"calq\"] = { alias_of = \"clq\" },\n\t\t[\"calque\"] = { alias_of = \"clq\" },\n\t\t[\"sl\"] = { type = \"boolean\" },\n\t\t[\"semantic\
      \ loan\"] = { alias_of = \"sl\" },\n\t\t[\"alts\"] = { type = \"boolean\" },\n\t\t[\"sclb\"] = { type = \"boolean\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = args[1]\n\tlocal\
      \ term = args[2]\n\tlocal alt = args[3]\n\tlocal gloss = args[\"gloss\"]\n\tlocal tr = args[\"tr\"]\n\tlocal ts = args[\"ts\"]\n\tlocal sc = args[\"sc\"]\n\t\n\tif namespace == \"Template\" then\n\t\tif not ( sc or lang ) then\n\t\t\tsc = \"Latn\"\n\t\t\
      end\n\t\tif not lang then\n\t\t\tlang = \"en\"\n\t\tend\n\t\tif not term then\n\t\t\tterm = \"word\"\n\t\tend\n\tend\n\t\n\tlang = m_languages.getByCode(lang)\n\t\tor require(\"Module:etymology languages\").getByCode(lang)\n\t\tor m_languages.err(lang,\
      \ 1)\n\t\t\n\tlocal entryLang = require(\"Module:etymology\").getNonEtymological(lang)\n\t\n\tif lang:getCode() ~= entryLang:getCode() then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/descendant/etymological]]\n\t\trequire(\"Module:debug\").track(\"\
      descendant/etymological\")\n\t\trequire(\"Module:debug\").track(\"descendant/etymological/\" .. lang:getCode())\n\tend\n\t\n\tif sc then\n\t\tsc = require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\"\
      )\n\tend\n\t\n\tlocal languageName = lang:getCanonicalName()\n\tlanguageName = mw.ustring.gsub(languageName, \"^Proto%-\", \"\")\n\t\n\tlocal link = \"\"\n\t\n\tif term ~= \"-\" then\n\t\tlink = require(\"Module:links\").full_link(\n\t\t\t{\n\t\t\t\tlang\
      \ = entryLang,\n\t\t\t\tsc = sc,\n\t\t\t\tterm = term,\n\t\t\t\talt = alt,\n\t\t\t\tid = args[\"id\"],\n\t\t\t\ttr = tr,\n\t\t\t\tts = ts,\n\t\t\t\tgenders = args[\"g\"],\n\t\t\t\tgloss = gloss,\n\t\t\t\tpos = args[\"pos\"],\n\t\t\t\tlit = args[\"lit\"\
      ],\n\t\t\t},\n\t\t\tnil,\n\t\t\ttrue)\n\telseif ts or gloss then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/descendant/no term]]\n\t\trequire \"Module:debug\".track(\"descendant/no term\")\n\t\tlink = require(\"Module:links\").full_link(\n\t\t\t\
      {\n\t\t\t\tlang = entryLang,\n\t\t\t\tsc = sc,\n\t\t\t\tts = ts,\n\t\t\t\tgloss = gloss,\n\t\t\t},\n\t\t\tnil,\n\t\t\ttrue)\n\t\tlink = link\n\t\t\t:gsub(\"&lt;small&gt;%[Term%?%]&lt;/small&gt; \", \"\")\n\t\t\t:gsub(\"%[%[Category:[^%[%]]+ term requests%]%]\"\
      , \"\")\n\telse -- display no link at all\n\t\t-- [[Special:WhatLinksHere/Template:tracking/descendant/no term or annotations]]\n\t\trequire \"Module:debug\".track(\"descendant/no term or annotations\")\n\tend\n\t\n\tlocal function add_tooltip(text, tooltip)\n\
      \t\treturn '&lt;span title=\"' .. tooltip .. '\"&gt;' .. text .. '&lt;/span&gt;'\n\tend\n\t\n\tlocal label, arrow, alts, calque, semantic_loan\n\t\n\tif args[\"sclb\"] then\n\t\tif sc then\n\t\t\tlabel = sc:getCanonicalName()\n\t\telse\n\t\t\tlabel = require(\"\
      Module:scripts\").findBestScript(term, lang):getCanonicalName()\n\t\tend\n\telse\n\t\tlabel = languageName\n\tend\n\t\n\tif args[\"bor\"] then\n\t\tarrow = add_tooltip(\"→ \", \"borrowed\")\n\telseif args[\"clq\"] then\n\t\tarrow = add_tooltip(\"→ \",\
      \ \"calque\")\n\telseif args[\"sl\"] then\n\t\tarrow = add_tooltip(\"→ \", \"semantic loan\")\n\telseif args[\"der\"] then\n\t\tarrow = add_tooltip(\"⇒ \", \"derived by addition of morphemes\")\n\telse\n\t\tarrow = \"\"\n\tend\n\t\n\tif args[\"alts\"]\
      \ then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/desc/alts]]\n\t\trequire(\"Module:debug\").track(\"desc/alts\")\n\t\talts = require(\"Module:descendants tree\").getAlternativeForms(entryLang, term)\n\tend\n\t\n\tif args[\"clq\"] then\n\t\tcalque\
      \ = \" \" .. qualifier(\"calque\")\n\telse\n\t\tcalque = \"\"\n\tend\n\t\n\tif args[\"sl\"] then\n\t\tsemantic_loan = \" \" .. qualifier(\"semantic loan\")\n\telse\n\t\tsemantic_loan = \"\"\n\tend\n\t\n\treturn table.concat{arrow, label, \": \", link,\
      \ alts or \"\", calque, semantic_loan}\nend\n\nfunction export.misc_variant(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {},\n\t\t[3] = {alias_of = \"alt\"},\n\t\t[4] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"]\
      \ = {},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"nocap\"] = {type = \"\
      boolean\"}, -- should be processed in the template itself\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocat\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\
      \t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\tlocal parts = {}\n\tif not args[\"notext\"] then\n\t\ttable.insert(parts, frame.args[\"text\"])\n\tend\n\tif args[2] or args[\"alt\"] then\n\t\tif not args[\"notext\"\
      ] then\n\t\t\ttable.insert(parts, \" \")\n\t\t\ttable.insert(parts, frame.args[\"oftext\"] or \"of\")\n\t\t\ttable.insert(parts, \" \")\n\t\tend\n\t\ttable.insert(parts, require(\"Module:links\").full_link(\n\t\t\t{\n\t\t\t\tlang = lang,\n\t\t\t\tsc =\
      \ sc,\n\t\t\t\tterm = args[2],\n\t\t\t\talt = args[\"alt\"],\n\t\t\t\tid = args[\"id\"],\n\t\t\t\ttr = args[\"tr\"],\n\t\t\t\tts = args[\"ts\"],\n\t\t\t\tgenders = args[\"g\"],\n\t\t\t\tgloss = args[\"t\"],\n\t\t\t\tpos = args[\"pos\"],\n\t\t\t\tlit =\
      \ args[\"lit\"],\n\t\t\t},\n\t\t\t\"term\",\n\t\t\ttrue))\n\tend\n\tif not args[\"nocat\"] and frame.args[\"cat\"] then\n\t\tlocal categories = {}\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" \" .. frame.args[\"cat\"])\n\t\ttable.insert(parts,\
      \ require(\"Module:utilities\").format_categories(categories, lang, args[\"sort\"]))\n\tend\n\n\treturn table.concat(parts)\nend\n\nfunction export.misc_variant_no_link(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\n\t\t\
      [\"title\"] = {},\n\t\t[\"nocap\"] = {type = \"boolean\"}, -- should be processed in the template itself\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocat\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\n\tif frame.args[\"title2_alias\"]\
      \ then\n\t\tparams[2] = {alias_of = \"title\"}\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\n\tlocal parts = {}\n\tif not args[\"notext\"] then\n\t\ttable.insert(parts,\
      \ args[\"title\"] or frame.args[\"text\"])\n\tend\n\tif not args[\"nocat\"] and frame.args[\"cat\"] then\n\t\tlocal categories = {}\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" \" .. frame.args[\"cat\"])\n\t\ttable.insert(parts, require(\"\
      Module:utilities\").format_categories(categories, lang, args[\"sort\"]))\n\tend\n\n\treturn table.concat(parts)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:04.810Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53284 t=1555362604700127
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:04 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1283.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 762218260, 263852654, 705106763
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4998763\" pageid=\"4998763\" ns=\"828\" title=\"Module:etymology\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-09-01T22:35:52Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"show language code in error message\" xml:space=\"preserve\">local export = {}\n\n\n--[[\tIf language is an etymology language, iterates through parent languages\n\t\tuntil it finds a\
      \ non-etymology language. ]]\nfunction export.getNonEtymological(lang)\n\twhile lang:getType() == \"etymology language\" do\n\t\tlocal parentCode = lang:getParentCode()\n\t\tlocal parent = require(\"Module:languages\").getByCode(parentCode)\n\t\t\tor require(\"\
      Module:etymology languages\").getByCode(parentCode)\n\t\t\tor require(\"Module:families\").getByCode(parentCode)\n\t\t\n\t\tlang = parent\n--\t\tmw.log(terminfo.lang:getCode() .. \" \" .. terminfo.lang:getType())\n\tend\n\t\n\treturn lang\nend\n\n\nlocal\
      \ function termError(terminfo)\n\tif terminfo.lang:getType() == \"family\" then\n\t\tif terminfo.term and terminfo.term ~= \"-\" then\n\t\t\trequire(\"Module:debug\").track(\"etymology/family/has-term\")\n\t\tend\n\t\t\n\t\tterminfo.term = \"-\"\n\tend\n\
      \treturn terminfo\nend\n\n\nlocal function createLink(terminfo, templateName)\n\tlocal link = \"\"\n\t\n\tif terminfo.term == \"-\" then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/cognate/no-term]]\n\t\t[[Special:WhatLinksHere/Template:tracking/derived/no-term]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/borrowed/no-term]]\n\t\t[[Special:WhatLinksHere/Template:tracking/calque/no-term]]\n\t\t]=]\n\t\trequire(\"Module:debug\").track(templateName .. \"/no-term\")\n\telse\n--\t\tmw.log(terminfo.term)\n\t\tlink\
      \ = \" \" .. require(\"Module:links\").full_link(terminfo, \"term\", true)\n\tend\n\t\n\treturn link\nend\n\n\nfunction export.format_etyl(lang, source, sort_key, categories)\n\tlocal info = {}\n\t\n\t\n\t-- [[Special:WhatLinksHere/Template:tracking/etymology/sortkey]]\n\
      \tif sort_key then\n\t\trequire(\"Module:debug\").track(\"etymology/sortkey\")\n\tend\n\t\n\tif not categories then\n\t\tcategories = {}\n\tend\n\t\n\tif source:getCode() == \"und\" then\n\t\tinfo = {\n\t\t\tdisplay = \"undetermined\",\n\t\t\tcat_name\
      \ = \"other languages\",\n\t\t}\n\telseif source:getCode() == \"mul-tax\" then\n\t\tinfo = {\n\t\t\tdisplay = \"[[w:taxonomic name|taxonomic name]]\",\n\t\t\tcat_name = \"taxonomic names\",\n\t\t}\n\telse\n\t\tinfo.display = source:makeWikipediaLink()\n\
      \t\t\n\t\tif source:getType() == \"family\" then\n\t\t\tinfo.cat_name = source:getCategoryName()\n\t\telse\n\t\t\tinfo.cat_name = source:getCanonicalName()\n\t\tend\n\tend\n\t\n\t-- Add the categories, but only if there is a current language\n\t\n\tif\
      \ lang then\n\t\tlocal m_utilities = require(\"Module:utilities\")\n\t\t\n\t\tif lang:getCode() == source:getCode() then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" twice-borrowed terms\")\n\t\telse\n\t\t\ttable.insert(categories, lang:getCanonicalName()\
      \ .. \" terms derived from \" .. info.cat_name)\n\t\tend\n\t\t\n\t\tcategories = m_utilities.format_categories(categories, lang, sort_key)\n\telse\n\t\tcategories = \"\"\n\tend\n\t\n\treturn \"&lt;span class=\\\"etyl\\\"&gt;\" .. info.display .. categories\
      \ .. \"&lt;/span&gt;\"\nend\n\n\n-- Internal implementation of {{cognate|...}} template\nfunction export.format_cognate(terminfo, sort_key)\n\treturn export.format_derived(nil, terminfo, sort_key, \"cognate\")\nend\n\n\n-- Internal implementation of {{derived|...}}\
      \ template\nfunction export.format_derived(lang, terminfo, sort_key, templateName)\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\t\n\tlocal link = createLink(terminfo,\
      \ templateName or \"derived\")\n\t\n\treturn export.format_etyl(lang, source, sort_key) .. link\nend\n\n\n-- Internal implementation of {{inherited|...}} template\nfunction export.format_inherited(lang, terminfo, sort_key)\n\tlocal source = terminfo.lang\n\
      \n\tterminfo = termError(terminfo)\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tif not lang:hasAncestor(terminfo.lang) and mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\tlocal function showLanguage(lang)\n\t\t\treturn\
      \ (\"[[:Category:%s|%s]] (%s)\")\n\t\t\t\t:format(lang:getCategoryName(), lang:getCanonicalName(), lang:getCode())\n\t\tend\n\t\tlocal postscript\n\t\tlocal ancestors = lang:getAncestors()\n\t\tlocal moduleLink = \"[[Module:\"\n\t\t\t.. require(\"Module:languages\"\
      ).getDataModuleName(lang:getCode())\n\t\t\t.. \"]]\"\n\t\tif not ancestors[1] then\n\t\t\tpostscript = showLanguage(lang) .. \" has no ancestors.\"\n\t\telse\n\t\t\tlocal ancestorList = table.concat(\n\t\t\t\trequire(\"Module:fun\").map(\n\t\t\t\t\tshowLanguage,\n\
      \t\t\t\t\tancestors),\n\t\t\t\t\" and \")\n\t\t\tpostscript = (\"The ancestor%s of %s %s %s.\"):format(\n\t\t\t\tancestors[2] and \"s\" or \"\", lang:getCanonicalName(),\n\t\t\t\tancestors[2] and \"are\" or \"is\", ancestorList)\n\t\tend\n\t\terror((\"\
      %s is not set as an ancestor of %s in %s. %s\")\n\t\t\t:format(showLanguage(terminfo.lang), showLanguage(lang), moduleLink, postscript))\n\tend\n\t\n\tlocal categories = {}\n\t\n\tlocal link = createLink(terminfo, \"inherited\")\n\t\n\ttable.insert(categories,\
      \ lang:getCanonicalName() .. \" terms inherited from \" .. source:getCanonicalName())\n\t\n\treturn export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\n\n-- Internal implementation of {{borrowed|...}} template\nfunction export.format_borrowed(lang,\
      \ terminfo, sort_key, nocap, notext, borrowing_type)\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\t\n\tterminfo = termError(terminfo)\n\t\n\tlocal text = \"\"\n\tlocal categories = {}\n\n\tif lang:getCode()\
      \ == source:getCode() then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" twice-borrowed terms\")\n\telseif source:getType() == \"family\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms borrowed from \" .. source:getCategoryName())\n\
      \telse\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms borrowed from \" .. source:getCanonicalName())\n\tend\n\n\tif not notext then\n\t\tif borrowing_type == \"learned\" then\n\t\t\ttext = \"[[learned borrowing|\" .. (nocap and \"l\"\
      \ or \"L\") .. \"earned borrowing]] from \"\n\t\telseif borrowing_type == \"orthographic\" then\n\t\t\ttext = \"[[orthographic|\" .. (nocap and \"o\" or \"O\") .. \"rthographic]] [[Appendix:Glossary#borrowing|borrowing]] from \"\n\t\telseif borrowing_type\
      \ == \"unadapted\" then\n\t\t\ttext = \"[[Appendix:Glossary#unadapted borrowing|\" .. (nocap and \"u\" or \"U\") .. \"nadapted borrowing]] from \"\n\t\telse\n\t\t\ttext = \"[[Appendix:Glossary#loanword|Borrowing]] from \"\n\t\tend\n\tend\n\n\tif borrowing_type\
      \ == \"learned\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" learnedly borrowed terms\")\n\telseif borrowing_type == \"orthographic\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" orthographically borrowed terms\"\
      )\n\telseif borrowing_type == \"unadapted\" then\n\t\tif source:getType() == \"family\" then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" unadapted borrowings from \" .. source:getCategoryName())\n\t\telse\n\t\t\ttable.insert(categories,\
      \ lang:getCanonicalName() .. \" unadapted borrowings from \" .. source:getCanonicalName())\n\t\tend\n\tend\n\t\n\tlocal link = createLink(terminfo, \"borrowed\")\n\t\n\treturn text .. export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\
      \n\n-- Internal implementation of {{calque|...}} template\nfunction export.calque(lang, terminfo, sort_key, nocap, notext)\n\tlocal result = \"\"\n\t\n\tif not notext then\n\t\tresult = result .. \"[[Appendix:Glossary#calque|\" .. (nocap and \"c\" or \"\
      C\") .. \"alque]] of \"\n\tend\n\t\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\n\tlocal categories = {}\n\n\tif source:getType() == \"family\" then\n\t\ttable.insert(categories,\
      \ lang:getCanonicalName() .. \" terms calqued from \" .. source:getCategoryName())\n\telse\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms calqued from \" .. source:getCanonicalName())\n\tend\n\t\n\tlocal link = createLink(terminfo, \"\
      calque\")\n\t\n\tresult = result .. \" \" ..  export.format_etyl(lang, source, sort_key, categories) .. link\n\t\n\treturn result\nend\n\n\n-- Internal implementation of {{semantic loan|...}} template\nfunction export.format_semantic_loan(lang, terminfo,\
      \ sort_key, nocap, notext)\n\tif nocap then\n\t\trequire(\"Module:debug\").track(\"semantic_loan/nocap\")\n\tend\n\t\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\n\
      \tlocal text = \"\"\n\tlocal categories = {}\n\n\tif source:getType() == \"family\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" semantic loans from \" .. source:getCategoryName())\n\telse\n\t\ttable.insert(categories, lang:getCanonicalName()\
      \ .. \" semantic loans from \" .. source:getCanonicalName())\n\tend\n\t\n\tif not notext then\n\t\ttext = \"[[w:Semantic loan|\" .. (nocap and \"s\" or \"S\") .. \"emantic loan]] from \"\n\tend\n\t\n\tlocal link = createLink(terminfo, \"semantic_loan\"\
      )\n\t\n\treturn text .. export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\n-- Internal implementation of {{phono-semantic matching|...}} template\nfunction export.psm(lang, terminfo, sort_key, nocap, notext)\n\tif nocap then\n\t\trequire(\"\
      Module:debug\").track(\"psm/nocap\")\n\tend\n\t\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\n\tlocal text = \"\"\n\tlocal categories = {}\n\n\tif source:getType()\
      \ == \"family\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" phono-semantic matchings \")\n\telse\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" phono-semantic matchings \")\n\tend\n\t\n\tif not notext then\n\t\ttext =\
      \ \"[[w:Phono-semantic matching|\" .. (nocap and \"p\" or \"P\") .. \"hono-semantic matching]] of \"\n\tend\n\t\n\tlocal link = createLink(terminfo, \"psm\")\n\t\n\treturn text .. export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\n\
      return export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:05.032Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata3%2Fg&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43935 t=1555362604907529
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1316.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 428809431, 743507412, 701409157
    body: !!binary |-
      
- recorded: 2019-04-15T21:10:05.267Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Atranslit-redirect&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=85180 t=1555362605134772
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1222.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 205148668, 723679032, 706578180
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6114267\" pageid=\"6114267\" ns=\"828\" title=\"Module:translit-redirect\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-07-15T19:49:12Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"not sure &quot;wrong script&quot; error is wanted\" xml:space=\"preserve\">local export = {}\n\nfunction export.tr(text, lang, sc, debug_mode)\n\tif not sc then\n\t\tsc = require(\"Module:scripts\"\
      ).findBestScript(text, require(\"Module:languages\").getByCode(lang)):getCode()\n\tend\n\t\n\tlocal language_data = mw.loadData(\"Module:translit-redirect/data\")[lang]\n\t\n\tif language_data then\n\t\tscript_data = language_data[sc]\n\t\t\n\t\tif script_data\
      \ then\n\t\t\tif script_data.module then\n\t\t\t\tlocal success, translit_module = pcall(require, \"Module:\" .. script_data.module)\n\t\t\t\n\t\t\t\tif success then\n\t\t\t\t\treturn translit_module.tr(text, lang, sc, debug_mode)\n\t\t\t\telse\n\t\t\t\
      \t\terror(translit_module)\n\t\t\t\tend\n\t\t\telse\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\trequire(\"Module:debug\").track{\n\t\t\t\t\"translit-redirect/incorrect-script/\" .. lang,\n\t\t\t\t\"translit-redirect/incorrect-script/\" .. lang .. \"\
      /\" .. sc,\n\t\t\t}\n\t\t\tmw.log(\"script code (\" .. sc .. \") for language code \" .. lang .. \" not found in Module:translit-redirect/data; text: \" .. text)\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:05.441Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Atranslit-redirect%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47939 t=1555362605342927
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1280.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 431067500, 647441342, 704418743
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6313843\" pageid=\"6313843\" ns=\"828\" title=\"Module:translit-redirect/data\"><revisions><rev user=\"Sardarmann\" timestamp=\"2018-12-21T03:56:18Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">result = {\n\t[\"grc\"] = {\n\t\t[\"polytonic\"] = {\n\t\t\t[\"module\"] = \"grc-translit\",\n\t\t},\n\t\t[\"Cprt\"] = {\n\t\t\t[\"module\"] = \"Cprt-translit\"\
      ,\n\t\t},\n\t\t[\"noError\"] = true,\n\t},\n\t[\"khb\"] = {\n\t\t[\"Talu\"] = {\n\t\t\t[\"module\"] = \"Talu-translit\",\n\t\t},\n\t\t[\"Lana\"] = {\n--\t\t\t[\"module\"] = \"Lana-translit\",\n\t\t},\n\t},\n\t[\"ku\"] = {\n\t\t[\"Latn\"] = {\n\t\t},\n\t\
      \t[\"ku-Arab\"] = {\n\t\t\tmodule = \"ckb-translit\",\n\t\t},\n\t\t[\"Arab\"] = {\n\t\t},\n\t\t[\"Armn\"] = {\n\t\t\tmodule = \"Armn-translit\",\n\t\t},\n\t\t[\"Cyrl\"] = {\n\t\t\tmodule = \"kmr-translit\",\n\t\t},\n\t},\n\t[\"pa\"] = {\n\t\t[\"debug_mode\"\
      ] = true,\n\t\t[\"Guru\"] = {\n\t\t\t[\"module\"] = \"Guru-translit\",\n\t\t},\n\t\t[\"Deva\"] = {\n\t\t\t[\"module\"] = \"hi-translit\",\n\t\t},\n\t\t[\"pa-Arab\"] = {\n\t\t\t[\"module\"] = \"pa-Arab-translit\",\n\t\t},\n\t\t[\"Shah\"] = {\n\t\t\t[\"\
      module\"] = \"pa-Arab-translit\",\n\t\t},\n\t},\n\t[\"pal\"] = {\n\t\t[\"Latn\"] = {\n\t\t},\n\t\t[\"Phli\"] = {\n\t\t\t[\"module\"] = \"Phli-translit\",\n\t\t},\n\t\t[\"Avst\"] = {\n\t\t\t[\"module\"] = \"Avst-translit\",\n\t\t},\n\t\t[\"Mani\"] = {\n\
      \t\t\t[\"module\"] = \"Mani-translit\",\n\t\t},\n\t\t[\"Phlv\"] = {\n\t\t\t[\"module\"] = \"Phlv-translit\",\n\t\t},\n\t\t[\"Phlp\"] = {\n--\t\t\t[\"module\"] = \"Phlp-translit\",\n\t\t},\n\t},\n\t[\"pi\"] = {\n\t\t[\"Brah\"] = {\n\t\t\t[\"module\"] =\
      \ \"Brah-translit\",\n\t\t},\n\t\t[\"Deva\"] = {\n\t\t\t[\"module\"] = \"sa-translit\",\n\t\t},\n\t\t[\"Sinh\"] = {\n\t\t\t[\"module\"] = \"si-translit\",\n\t\t},\n\t},\n\t[\"qwm\"] = {\n\t\t[\"Latn\"] = {\n\t\t},\n\t\t[\"Arab\"] = {\n\t\t},\n\t\t[\"Armn\"\
      ] = {\n\t\t\t[\"module\"] = \"Armn-translit\",\n\t\t},\n\t},\n\t[\"rmi\"] = {\n\t\t[\"Latn\"] = {\n\t\t},\n\t\t[\"Armn\"] = {\n\t\t\t[\"module\"] = \"Armn-translit\",\n\t\t},\n\t},\n\t[\"sa\"] = {\n\t\t[\"Deva\"] = {\n\t\t\t[\"module\"] = \"sa-translit\"\
      ,\n\t\t},\n\t\t[\"Gujr\"] = {\n\t\t\t[\"module\"] = \"sa-Gujr-translit\",\n\t\t},\n\t\t[\"as-Beng\"] = {\n\t\t\t[\"module\"] = \"sa-Beng-translit\",\n\t\t},\n\t\t[\"Beng\"] = {\n\t\t\t[\"module\"] = \"sa-Beng-translit\",\n\t\t},\n\t\t[\"Orya\"] = {\n\t\
      \t\t[\"module\"] = \"sa-Orya-translit\",\n\t\t},\n\t\t[\"Java\"] = {\n\t\t\t[\"module\"] = \"sa-Java-translit\",\n\t\t},\n\t\t[\"noError\"] = true,\n\t},\n\t[\"udi\"] = {\n\t\t[\"Latn\"] = {\n\t\t},\n\t\t[\"Armn\"] = {\n\t\t\t[\"module\"] = \"Armn-translit\"\
      ,\n\t\t},\n\t\t[\"Geor\"] = {\n\t\t\t[\"module\"] = \"Geor-translit\",\n\t\t},\n\t\t[\"Cyrl\"] = {\n\t\t\t[\"module\"] = \"udi-translit\",\n\t\t},\n\t},\n\t[\"xpr\"] = {\n\t\t[\"Mani\"] = {\n\t\t\t[\"module\"] = \"Mani-translit\",\n\t\t},\n\t\t[\"Latn\"\
      ] = {\n\t\t},\n\t\t[\"Prti\"] = {\n\t\t\t[\"module\"] = \"Prti-translit\",\n\t\t},\n\t\t[\"Phlv\"] = {\n\t\t},\n\t\t[\"None\"] = {\n\t\t},\n\t},\n\t[\"sog\"] = {\n\t\t[\"Sogd\"] = {\n\t\t\t[\"module\"] = \"Sogd-translit\",\n\t\t},\n\t\t[\"Mani\"] = {\n\
      \t\t\t[\"module\"] = \"Mani-translit\",\n\t\t},\n\t\t[\"Sogo\"] = {\n\t\t},\n\t\t[\"Syrc\"] = {\n\t\t},\n\t},\n\t[\"inc-ash\"] = {\n\t\t[\"Brah\"] = {\n\t\t\t[\"module\"] = \"Brah-translit\",\n\t\t},\n\t\t[\"Khar\"] = {\n\t\t\t[\"module\"] = \"Khar-translit\"\
      ,\n\t\t},\n\t},\n\t[\"kok\"] = {\n\t\t[\"Deva\"] = {\n--\t\t\t[\"module\"] = \"kok-translit\",\n\t\t},\n\t\t[\"Knda\"] = {\n\t\t\t[\"module\"] = \"kn-translit\",\n\t\t},\n\t\t[\"Mlym\"] = {\n\t\t\t[\"module\"] = \"ml-translit\",\n\t\t},\n\t\t[\"Arab\"\
      ] = {\n--\t\t\t[\"module\"] = \"kok-Arab-translit\",\n\t\t},\n\t},\n\t[\"omr\"] = {\n\t\t[\"Deva\"] = {\n\t\t\t[\"module\"] = \"sa-translit\",\n\t\t},\n\t\t[\"Modi\"] = {\n\t\t\t[\"module\"] = \"Modi-translit\",\n\t\t},\n\t},\n\t[\"bho\"] = {\n\t\t[\"\
      Deva\"] = {\n\t\t\t[\"module\"] = \"bho-translit\",\n\t\t},\n\t\t[\"Kthi\"] = {\n\t\t\t[\"module\"] = \"bho-Kthi-translit\",\n\t\t},\n\t},\n\t[\"wbl\"] = {\n\t\t[\"Arab\"] = {\n--\t\t\t[\"module\"] = \"Arab-translit\",\n\t\t},\n\t\t[\"Cyrl\"] = {\n\t\t\
      \t[\"module\"] = \"tg-translit\",\n\t\t},\n\t\t[\"Latn\"] = {\n\t\t},\n\t},\n\t[\"ks\"] = {\n\t\t[\"ks-Arab\"] = {\n\t\t\t[\"module\"] = \"ks-Arab-translit\",\n\t\t},\n\t\t[\"Deva\"] = {\n\t\t\t[\"module\"] = \"ks-Deva-translit\",\n\t\t},\n\t\t[\"Shrd\"\
      ] = {\n\t\t\t[\"module\"] = \"Shrd-translit\",\n\t\t},\n\t\t[\"Latn\"] = {\n\t\t},\n\t},\n}\n\nresult[\"kmr\"] = result[\"ku\"]\n\nreturn result</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:05.615Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Agrc-translit&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47476 t=1555362605515345
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1339.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 678960540, 483065739, 706644057
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4134647\" pageid=\"4134647\" ns=\"828\" title=\"Module:grc-translit\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-01-05T23:24:23Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"remove Cprt support because only the testcases transclude the tracking template\" xml:space=\"preserve\">local export = {}\n\nlocal m_data = require('Module:grc-utilities/data')\nlocal\
      \ tokenize = require('Module:grc-utilities').tokenize\n\nlocal ufind = mw.ustring.find\nlocal ugsub = mw.ustring.gsub\nlocal U = mw.ustring.char\nlocal ulower = mw.ustring.lower\nlocal uupper = mw.ustring.upper\n\nlocal UTF8char = '[%z\\1-\\127\\194-\\\
      244][\\128-\\191]*'\n\n-- Diacritics\nlocal diacritics = m_data.named\n\n-- Greek\nlocal acute = diacritics.acute\nlocal grave = diacritics.grave\nlocal circumflex = diacritics.circum\nlocal diaeresis = diacritics.diaeresis\nlocal smooth = diacritics.smooth\n\
      local rough = diacritics.rough\nlocal macron = diacritics.macron\nlocal breve = diacritics.breve\nlocal subscript = diacritics.subscript\n\n-- Latin\nlocal hat = diacritics.Latin_circum\n\nlocal macron_diaeresis = macron .. diaeresis .. \"?\" .. hat\n\
      local a_subscript = '^[αΑ].*' .. subscript .. '$'\nlocal velar = 'κγχξ'\n\nlocal tt = {\n\t-- Vowels\n\t[\"α\"] = \"a\",\n\t[\"ε\"] = \"e\",\n\t[\"η\"] = \"e\" .. macron,\n\t[\"ι\"] = \"i\",\n\t[\"ο\"] = \"o\",\n\t[\"υ\"] = \"u\",\n\t[\"ω\"] = \"o\" ..\
      \ macron,\n\n\t-- Consonants\n\t[\"β\"] = \"b\",\n\t[\"γ\"] = \"g\",\n\t[\"δ\"] = \"d\",\n\t[\"ζ\"] = \"z\",\n\t[\"θ\"] = \"th\",\n\t[\"κ\"] = \"k\",\n\t[\"λ\"] = \"l\",\n\t[\"μ\"] = \"m\",\n\t[\"ν\"] = \"n\",\n\t[\"ξ\"] = \"x\",\n\t[\"π\"] = \"p\",\n\t\
      [\"ρ\"] = \"r\",\n\t[\"σ\"] = \"s\",\n\t[\"ς\"] = \"s\",\n\t[\"τ\"] = \"t\",\n\t[\"φ\"] = \"ph\",\n\t[\"χ\"] = \"kh\",\n\t[\"ψ\"] = \"ps\",\n\t\n\t-- Archaic letters\n\t[\"ϝ\"] = \"w\",\n\t[\"ϻ\"] = \"ś\",\n\t[\"ϙ\"] = \"q\",\n\t[\"ϡ\"] = \"š\",\n\t[\"\
      ͷ\"] = \"v\",\n\t\n\t-- Incorrect characters: see [[Wiktionary:About Ancient Greek#Miscellaneous]].\n\t-- These are tracked by [[Module:script utilities]].\n\t[\"ϐ\"] = \"b\",\n\t[\"ϑ\"] = \"th\",\n\t[\"ϰ\"] = \"k\",\n\t[\"ϱ\"] = \"r\",\n\t[\"ϲ\"] = \"\
      s\",\n\t[\"ϕ\"] = \"ph\",\n\t\n\t-- Diacritics\n\t-- unchanged: macron, diaeresis, grave, acute\n\t[breve] = '',\n\t[smooth] = '',\n\t[rough] = '',\n\t[circumflex] = hat,\n\t[subscript] = 'i',\n}\n\nfunction export.tr(text, lang, sc)\n\tif text == '῾'\
      \ then\n\t\treturn 'h'\n\tend\n\t\n\t--[[\n\t\tReplace semicolon or Greek question mark with regular question mark,\n\t\texcept after an ASCII alphanumeric character (to avoid converting\n\t\tsemicolons in HTML entities).\n\t]]\n\ttext = ugsub(text, \"\
      ([^A-Za-z0-9])[;\" .. U(0x37E) .. \"]\", \"%1?\")\n\t\n\t-- Handle the middle dot. It is equivalent to semicolon or colon, but semicolon is probably more common.\n\ttext = text:gsub(\"·\", \";\")\n\t\n\tlocal tokens = tokenize(text)\n\n\t--now read the\
      \ tokens\n\tlocal output = {}\n\tfor i, token in pairs(tokens) do\n\t\t-- Convert token to lowercase and substitute each character\n\t\t-- for its transliteration\n\t\tlocal translit = ulower(token):gsub(UTF8char, tt)\n\t\t\n\t\tlocal next_token = tokens[i\
      \ + 1]\n\t\t\n\t\tif token == 'γ' and next_token and velar:find(next_token, 1, true) then\n\t\t\t-- γ before a velar should be &lt;n&gt;\n\t\t\ttranslit = 'n'\n\t\telseif token == 'ρ' and tokens[i - 1] == 'ρ' then\n\t\t\t-- ρ after ρ should be &lt;rh&gt;\n\
      \t\t\ttranslit = 'rh'\n\t\telseif ufind(token, a_subscript) then\n\t\t\t-- add macron to ᾳ\n\t\t\ttranslit = ugsub(translit, '([aA])', '%1' .. macron)\n\t\tend\n\t\t\n\t\tif token:find(rough) then\n\t\t\tif ufind(token, '^[Ρρ]') then\n\t\t\t\ttranslit\
      \ = translit .. 'h'\n\t\t\telse -- vowel\n\t\t\t\ttranslit = 'h' .. translit\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Remove macron from a vowel that has a circumflex.\n\t\tif ufind(translit, macron_diaeresis) then\n\t\t\ttranslit = translit:gsub(macron, '')\n\
      \t\tend\n\t\t\n\t\t-- Capitalize first character of transliteration.\n\t\tif token ~= ulower(token) then\n\t\t\ttranslit = translit:gsub(\"^\" .. UTF8char, uupper)\n\t\tend\n\t\t\n\t\ttable.insert(output, translit)\n\tend\n\toutput = table.concat(output)\n\
      \t\n\treturn output\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:05.801Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Agrc-utilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=63265 t=1555362605684702
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1221.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 431493395, 246174256, 691984797
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6030412\" pageid=\"6030412\" ns=\"828\" title=\"Module:grc-utilities/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-10-22T23:20:51Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"making diacritical_conversions usable in &quot;replacement&quot; parameter of gsub\" xml:space=\"preserve\">local data = {}\n\nlocal U = mw.ustring.char\nlocal macron = U(0x304)\nlocal\
      \ spacing_macron = U(0xAF)\nlocal modifier_macron = U(0x2C9)\nlocal breve = U(0x306)\nlocal spacing_breve = U(0x2D8)\nlocal rough = U(0x314)\nlocal smooth = U(0x313)\nlocal diaeresis = U(0x308)\nlocal acute = U(0x301)\nlocal grave = U(0x300)\nlocal circum\
      \ = U(0x342)\nlocal Latin_circum = U(0x302)\nlocal coronis = U(0x343)\nlocal subscript = U(0x345)\nlocal undertie = mw.ustring.char(0x35C) -- actually \"combining double breve below\"\n\ndata[\"diacritics\"] = {\n\t[\"macron\"] = macron,\n\t[\"spacing_macron\"\
      ] = spacing_macron,\n\t[\"modifier_macron\"] = modifier_macron,\n\t[\"breve\"] = breve,\n\t[\"spacing_breve\"] = spacing_breve,\n\t[\"rough\"] = rough,\n\t[\"smooth\"] = smooth,\n\t[\"diaeresis\"] = diaeresis,\n\t[\"acute\"] = acute,\n\t[\"grave\"] = grave,\n\
      \t[\"circum\"] = circum,\n\t[\"Latin_circum\"] = Latin_circum,\n\t[\"coronis\"] = coronis,\n\t[\"subscript\"] = subscript,\n}\n\ndata.diacritics.all = \"\"\nfor name, diacritic in pairs(data.diacritics) do\n\tdata.diacritics.all = data.diacritics.all ..\
      \ diacritic\nend\n\ndata[\"named\"] = data[\"diacritics\"]\n\ndata[\"diacritic\"] = \"[\" .. data.diacritics.all .. \"]\"\ndata[\"all\"] = data[\"diacritic\"]\n\ndata[\"diacritic_groups\"] = {\n\t[1] = \"[\".. macron .. breve ..\"]\",\n\t[2] = \"[\"..\
      \ diaeresis .. smooth .. rough ..\"]\",\n\t[3] = \"[\".. acute .. grave .. circum .. \"]\",\n\t[4] = subscript,\n}\ndata[\"groups\"] = data[\"diacritic_groups\"]\ndata[\"diacritic_groups\"][\"accents\"] = data[\"groups\"][3]\n\ndata[\"diacritic_order\"\
      ] = {\n\t[macron] = 1,\n\t[breve] = 1,\n\t[rough] = 2,\n\t[smooth] = 2,\n\t[diaeresis] = 2,\n\t[acute] = 3,\n\t[grave] = 3,\n\t[circum] = 3,\n\t[subscript] = 4,\n}\n\ndata[\"diacritical_conversions\"] = {\n\t-- Convert spacing to combining diacritics\n\
      \t[spacing_macron] = macron, -- macron\n\t[modifier_macron] = macron,\n\t[spacing_breve] = breve, -- breve\n\t[\"῾\"] = rough, -- rough breathing, modifier letter reversed comma\n\t[\"ʽ\"] = rough,\n\t[\"᾿\"] = smooth, -- smooth breathing, modifier letter\
      \ apostrophe, coronis, combining coronis\n\t[\"ʼ\"] = smooth,\n\t[coronis] = smooth,\n\t[\"´\"] = acute, -- acute\n\t[\"`\"] = grave, -- grave\n\t[\"῀\"] = circum, -- Greek circumflex (perispomeni), circumflex, combining circumflex\n\t[\"ˆ\"] = circum,\n\
      \t[Latin_circum] = circum,\n\t[\"῎\"] = smooth ..  acute, -- smooth and acute\n\t[\"῍\"] = smooth ..  grave, -- smooth and grave\n\t[\"῏\"] = smooth ..  circum, -- smooth and circumflex\n\t[\"῞\"] = rough ..  acute, -- rough and acute\n\t[\"῝\"] = rough\
      \ ..  grave, -- rough and grave\n\t[\"῟\"] = rough ..  circum, -- rough and circumflex\n\t[\"¨\"] = diaeresis,\n\t[\"΅\"] = diaeresis ..  acute,\n\t[\"῭\"] = diaeresis ..  grave,\n\t[\"῁\"] = diaeresis ..  circum,\n}\ndata[\"conversions\"] = data[\"diacritical_conversions\"\
      ]\n\ndata[\"consonants\"] = \"ΒβΓγΔδΖζΘθΚκΛλΜμΝνΞξΠπΡρΣσςΤτΦφΧχΨψ\"\ndata[\"consonant\"] = \"[\" .. data.consonants .. \"]\"\ndata[\"vowels\"] = \"ΑαΕεΗηΙιΟοΥυΩω\"\ndata[\"vowel\"] = \"[\" .. data.vowels .. \"]\"\ndata[\"combining_diacritics\"] = table.concat{\n\
      \tmacron, breve,\n\trough, smooth, diaeresis,\n\tacute, grave, circum,\n\tsubscript\n}\ndata[\"combining_diacritic\"] = \"[\" .. data.combining_diacritics .. \"]\"\n\n-- Basic letters with and without diacritics\nlocal letters_with_diacritics = 'ΆΈ-ώϜϝ\
      ἀ-ᾼῂ-ῌῐ-' ..\n\t-- capital iota with oxia, normalized to capital iota with tonos if entered\n\t-- literally in a string\n\tU(0x1FDB) ..\n\t'Ὶῠ-Ῥῲ-ῼ'\ndata.word_characters = letters_with_diacritics .. data.combining_diacritics ..\n\tundertie\ndata.word_character\
      \ = \"[\" .. data.word_characters .. \"]\"\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:05.982Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Agrc-utilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46734 t=1555362605877642
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:05 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1347.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 605861516, 569385155, 696155082
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6027615\" pageid=\"6027615\" ns=\"828\" title=\"Module:grc-utilities\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-12-08T07:34:50Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"logging not needed\" xml:space=\"preserve\">local export = {}\n\nlocal m_script_utils = require(\"Module:script utilities\")\nlocal m_links = require(\"Module:links\")\nlocal lang = require(\"\
      Module:languages\").getByCode(\"grc\")\nlocal sc = require(\"Module:scripts\").getByCode(\"polytonic\")\n\nlocal m_data = mw.loadData(\"Module:grc-utilities/data\")\nlocal groups = m_data.groups\nlocal diacritic_order = m_data.diacritic_order\nlocal conversions\
      \ = m_data.conversions\nlocal diacritics = m_data.diacritics\nlocal diacritic = m_data.diacritic\nlocal macron = diacritics.macron\nlocal breve = diacritics.breve\nlocal spacing_macron = diacritics.spacing_macron\nlocal spacing_breve = diacritics.spacing_breve\n\
      local rough = diacritics.rough\nlocal smooth = diacritics.smooth\nlocal diaeresis = diacritics.diaeresis\nlocal acute = diacritics.acute\nlocal grave = diacritics.grave\nlocal circumflex = diacritics.circum\nlocal subscript = diacritics.subscript\nlocal\
      \ combining_diacritic = m_data.combining_diacritic\n\nlocal UTF8_char = \"[\\1-\\127\\194-\\244][\\128-\\191]*\"\nlocal basic_Greek = \"[\\206-\\207][\\128-\\191]\" -- excluding first line of Greek and Coptic block: ͰͱͲͳʹ͵Ͷͷͺͻͼͽ;Ϳ\n\nlocal find = mw.ustring.find\n\
      local match = mw.ustring.match\nlocal gmatch = mw.ustring.gmatch\nlocal sub = mw.ustring.sub\nlocal gsub = mw.ustring.gsub\nlocal toNFC = mw.ustring.toNFC\nlocal decompose = mw.ustring.toNFD\n\nlocal info = {}\n-- The tables are shared among different\
      \ characters so that they can be checked\n-- for equality if needed, and to use less space.\nlocal vowel_t = { vowel = true }\nlocal iota_t = { vowel = true, offglide = true }\nlocal upsilon_t = { vowel = true, offglide = true }\n-- These don't need any\
      \ contents.\nlocal rho_t = {}\n-- local consonant_t = {}\nlocal diacritic_t = { diacritic = true }\n-- Needed for equality comparisons.\nlocal breathing_t = { diacritic = true }\n\nlocal function add_info(characters, t)\n\tif type(characters) == \"string\"\
      \ then\n\t\tfor character in string.gmatch(characters, UTF8_char) do\n\t\t\tinfo[character] = t\n\t\tend\n\telse\n\t\tfor i, character in ipairs(characters) do\n\t\t\tinfo[character] = t\n\t\tend\n\tend\nend\n\nadd_info({ macron, breve,\n\t\tdiaeresis,\n\
      \t\tacute, grave, circumflex,\n\t\tsubscript,\n\t}, diacritic_t)\n\nadd_info({rough, smooth}, breathing_t)\nadd_info(\"ΑΕΗΟΩαεηοω\", vowel_t)\nadd_info(\"Ιι\", iota_t)\nadd_info(\"Υυ\", upsilon_t)\n-- add_info(\"ΒΓΔΖΘΚΛΜΝΞΠΡΣΤΦΧΨϜϘϺϷͶϠβγδζθκλμνξπρσςτφχ\
      ψϝϙϻϸͷϡ\", consonant_t)\nadd_info(\"Ρρ\", rho_t)\n\nlocal not_recognized = {}\nsetmetatable(info, { __index =\n\tfunction(t, key)\n\t\treturn not_recognized\n\tend\n})\n\nlocal sparseConcat = require(\"Module:table\").sparseConcat\n\nlocal checkType =\
      \ require \"libraryUtil\".checkType\n\nlocal function _check(funcName)\n\treturn function(argIndex, arg, expectType, nilOk)\n\t\treturn checkType(funcName, argIndex, arg, expectType, nilOk)\n\tend\nend\n\n-- Perform a function on each Unicode character\
      \ in a string.\nlocal function forEach(str, func)\n\tfor char in string.gmatch(str, UTF8_char) do\n\t\tfunc(char)\n\tend\nend\n\n-- This concatenates or inserts a character, then removes it from the text.\nlocal function add(list, index, chars, text)\n\
      \tif not chars then\n\t\terror(\"The function add cannot act on a nil character.\")\n\tend\n\tif list[index] then\n\t\tlist[index] = list[index] .. chars\n\telse\n\t\tlist[index] = chars\n\tend\n\t-- Basic string function works here.\n\treturn text:sub(#chars\
      \ + 1)\nend\n\nfunction export.tag(term, face)\n\treturn m_script_utils.tag_text(term, lang, sc, face)\nend\n\nfunction export.link(term, face, alt, tr)\n\treturn m_links.full_link( { term = term, alt = alt, lang = lang, sc = sc, tr = tr }, face)\nend\n\
      \nlocal function linkNoTag(term, alt)\n\treturn m_links.language_link{ term = term, lang = lang, alt = alt }\nend\n\n-- Convert spacing to combining diacritics, and nonstandard to standard polytonic Greek.\nfunction export.standardDiacritics(text)\n\t\
      text = decompose(text)\n\t\n\ttext = text:gsub(UTF8_char, conversions)\n\t\n\treturn text\nend\n\n--[=[\tThis function arranges diacritics in the following order:\n\t\t\t1. macron or breve\n\t\t\t2. breathings or diaeresis\n\t\t\t3. acute, circumflex,\
      \ or grave\n\t\t\t4. iota subscript\n\t\tUsed by [[Module:typing-aids]].\n\t\t\n\t\tReturns an error if a sequence of diacritics contains more than one\n\t\tof each category.\n]=]\nlocal function reorderDiacriticSequence(diacritics)\n\tlocal output = {}\n\
      \tforEach(diacritics,\n\t\tfunction (diacritic)\n\t\t\tlocal index = diacritic_order[diacritic]\n\t\t\tif not output[index] then\n\t\t\t\toutput[index] = diacritic\n\t\t\telse\n\t\t\t\t-- Place breve after macron.\n\t\t\t\tif diacritic == breve then\n\t\
      \t\t\t\tindex = index + 1\n\t\t\t\tend\n\t\t\t\t-- The following might have odd results when there\n\t\t\t\t-- are three or more diacritics.\n\t\t\t\ttable.insert(output, index, diacritic)\n\t\t\t\t-- [[Special:WhatLinksHere/Template:tracking/grc-utils/too\
      \ many diacritics]]\n\t\t\t\trequire(\"Module:debug\").track(\"grc-utils/too many diacritics\")\n\t\t\t\t--[[\n\t\t\t\tlocal m_templates = require(\"Module:grc-utilities/templates\")\n\t\t\t\terror(\"There are two diacritics, \" ..\n\t\t\t\t\t\tm_templates.addDottedCircle(output[index])\
      \ .. \" and \" ..\n\t\t\t\t\t\tm_templates.addDottedCircle(diacritic) ..\n\t\t\t\t\t\t\" that belong in the same position. There should be only one.\"\n\t\t\t\t)\n\t\t\t\t--]]\n\t\t\tend\n\t\tend)\n\treturn sparseConcat(output)\nend\n\nfunction export.reorderDiacritics(text)\n\
      \tlocal d = diacritics\n\t\n\treturn (gsub(decompose(text),\n\t\tcombining_diacritic .. combining_diacritic .. \"+\",\n\t\treorderDiacriticSequence))\nend\n\n--[=[\n\t\tThis breaks a word into meaningful \"tokens\", which are\n\t\tindividual letters or\
      \ diphthongs with their diacritics.\n\t\tUsed by [[Module:grc-accent]] and [[Module:grc-pronunciation]].\n--]=]\nlocal function make_tokens(text)\n\tlocal tokens, prev_info = {}, {}\n\tlocal token_i, vowel_count = 1, 0 -- Vowel count tracks .\n\tlocal\
      \ prev\n\tfor character in string.gmatch(decompose(text), UTF8_char) do\n\t\tlocal curr_info = info[character]\n\t\t-- Split vowels between tokens if not a diphthong.\n\t\tif curr_info.vowel then\n\t\t\tvowel_count = vowel_count + 1\n\t\t\tif prev and\
      \ (not (vowel_count == 2 and curr_info.offglide and prev_info.vowel)\n\t\t\t\t\t-- υυ → υ, υ\n\t\t\t\t\t-- ιυ → ι, υ\n\t\t\t\t\tor prev_info.offglide and curr_info == upsilon_t) then\n\t\t\t\ttoken_i = token_i + 1\n\t\t\t\tif prev_info.vowel then\n\t\t\
      \t\t\tvowel_count = 1\n\t\t\t\tend\n\t\t\telseif vowel_count == 2 then\n\t\t\t\tvowel_count = 0\n\t\t\tend\n\t\t\ttokens[token_i] = (tokens[token_i] or \"\") .. character\n\t\telseif curr_info.diacritic then\n\t\t\tvowel_count = 0\n\t\t\ttokens[token_i]\
      \ = (tokens[token_i] or \"\") .. character\n\t\t\tif prev_info.diacritic or prev_info.vowel then\n\t\t\t\tif character == diaeresis then\n\t\t\t\t\t-- Split the diphthong in the current token if a diaeresis was found:\n\t\t\t\t\t-- the first letter, then\
      \ the second letter plus any diacritics.\n\t\t\t\t\tlocal previous_vowel, vowel_with_diaeresis =\n\t\t\t\t\t\tstring.match(tokens[token_i],\n\t\t\t\t\t\t\t\"^(\" .. basic_Greek .. \")(\" .. basic_Greek .. \".+)\")\n\t\t\t\t\tif previous_vowel then\n\t\t\
      \t\t\t\ttokens[token_i], tokens[token_i + 1] = previous_vowel, vowel_with_diaeresis\n\t\t\t\t\t\ttoken_i = token_i + 1\n\t\t\t\t\telse\n\t\t\t\t\t\t-- The vowel preceding the vowel with the diaeresis will already be\n\t\t\t\t\t\t-- placed in the previous\
      \ token if it has a diacritic:\n\t\t\t\t\t\t-- Περικλῆῐ̈ → Π ε ρ ι κ λ ῆ ῐ̈\n\t\t\t\t\t\t--[[\n\t\t\t\t\t\tmw.log('Diaeresis was found in ' .. text .. ', but the previous token ' ..\n\t\t\t\t\t\t\trequire(\"Module:Unicode data\").add_dotted_circle(tokens[token_i])\
      \ ..\n\t\t\t\t\t\t\t' couldn’t be split because it does not consist of two Basic Greek characters followed by other characters.')\n\t\t\t\t\t\t--]]\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\telseif prev_info == rho_t then\n\t\t\t\tif curr_info ~= breathing_t then\n\
      \t\t\t\t\tmw.log(string.format(\"The character %s in %s should not have the accent %s on it.\",\n\t\t\t\t\t\tprev, text, require(\"Module:grc-utilities/templates\").addDottedCircle(character)))\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tmw.log(\"The character \"\
      \ .. prev .. \" cannot have a diacritic on it.\")\n\t\t\tend\n\t\telse\n\t\t\tvowel_count = 0\n\t\t\tif prev then\n\t\t\t\ttoken_i = token_i + 1\n\t\t\tend\n\t\t\ttokens[token_i] = (tokens[token_i] or \"\") .. character\n\t\tend\n\t\tprev = character\n\
      \t\tprev_info = curr_info\n\tend\n\treturn tokens\nend\n\nlocal cache = {}\nfunction export.tokenize(text)\n\tlocal decomposed = decompose(text)\n\tif not cache[decomposed] then\n\t\tcache[decomposed] = make_tokens(text)\n\tend\n\treturn cache[decomposed]\n\
      end\n\n--[=[\tPlaces diacritics in the following order:\n\t\t\t1. breathings or diaeresis\n\t\t\t2. acute, circumflex, or grave\n\t\t\t3. macron or breve\n\t\t\t4. iota subscript\n\t\tUsed by [[Module:grc-pronunciation]].\t\t]=]\nfunction export.pronunciationOrder(text)\n\
      \ttext = export.standardDiacritics(text)\n\t\n\tif find(text, groups[1]) then\n\t\n\t\ttext = gsub(text,\n\t\t\tdiacritic .. diacritic .. \"+\",\n\t\t\tfunction(sequence)\n\t\t\t\t-- Put breathing and diaeresis first, then accents, then macron or breve\n\
      \t\t\t\treturn table.concat{\n\t\t\t\t\tmatch(sequence, groups[2]) or \"\",\n\t\t\t\t\tmatch(sequence, groups[3]) or \"\",\n\t\t\t\t\tmatch(sequence, groups[1]) or \"\",\n\t\t\t\t\tmatch(sequence, groups[4]) or \"\"\n\t\t\t\t}\n\t\t\tend)\n\t\t\n\t\ttext\
      \ = gsub(text, macron, spacing_macron) -- combining to spacing macron\n\t\ttext = gsub(text, breve, spacing_breve) -- combining to spacing breve\n\tend\n\t\n\treturn toNFC(text)\nend\n\n\n-- Returns a table of any ambiguous vowels in the text, language-tagged.\n\
      function export.findAmbig(text, noTag)\n\tif (not text) or type(text) ~= \"string\" then\n\t\terror(\"The input to function findAmbig is nonexistent or not a string\")\n\tend\n\t\n\tlocal lengthDiacritic = \"[\" .. macron .. breve .. circumflex .. subscript\
      \ .. \"]\"\n\tlocal aiu_diacritic = \"^([\" .. \"αιυ\" .. \"])(\" .. diacritic .. \"*)$\"\n\t\n\t-- breaks the word into units\n\tlocal output, vowels = {}, {}\n\tfor _, token in ipairs(export.tokenize(text)) do\n\t\tif not find(token, m_data.consonant)\
      \ then\n\t\t\tlocal vowel, diacritics = match(\n\t\t\t\ttoken,\n\t\t\t\taiu_diacritic\n\t\t\t)\n\t\t\t\n\t\t\tif vowel and (diacritics == \"\" or\n\t\t\t\t\tnot find(diacritics, lengthDiacritic)) then\n\t\t\t\tlocal diacriticked_vowel\n\t\t\t\tif not noTag\
      \ then\n\t\t\t\t\tdiacriticked_vowel = export.tag(vowel .. diacritics)\n\t\t\t\telse\n\t\t\t\t\tdiacriticked_vowel = vowel\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\ttable.insert(output, diacriticked_vowel)\n\t\t\t\t\n\t\t\t\t-- Lists the vowel letters that are ambiguous,\
      \ for categorization purposes.\n\t\t\t\tvowels[mw.ustring.lower(vowel)] = true\n\t\t\tend\n\t\tend\n\tend\n\t\t\n\treturn output, vowels\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:06.283Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdatax&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=67669 t=1555362606077736
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:06 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1233.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 200897486, 511870758, 692282428
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5663709\" pageid=\"5663709\" ns=\"828\" title=\"Module:languages/datax\"><revisions><rev user=\"-sche\" timestamp=\"2019-04-14T18:37:40Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add Proto-Zapotecan omq-zap-pro and Proto-Zapotec omq-zpc-pro per GP request\" xml:space=\"preserve\">local u = mw.ustring.char\n\n-- UTF-8 encoded strings for some commonly-used diacritics\n\
      local GRAVE\t\t= u(0x0300)\nlocal ACUTE\t\t= u(0x0301)\nlocal CIRC\t\t= u(0x0302)\nlocal TILDE\t\t= u(0x0303)\nlocal MACRON\t= u(0x0304)\nlocal BREVE\t\t= u(0x0306)\nlocal DOTABOVE\t= u(0x0307)\nlocal DIAER\t\t= u(0x0308)\nlocal CARON\t\t= u(0x030C)\n\
      local DGRAVE\t= u(0x030F)\nlocal INVBREVE\t= u(0x0311)\nlocal DOTBELOW\t= u(0x0323)\nlocal RINGBELOW\t= u(0x0325)\nlocal CEDILLA\t= u(0x0327)\n\nlocal Latn = {\"Latn\"}\n\nlocal m = {}\n\nm[\"aav-pro\"] = { --The mkh-pro will merge into this.\n\t\"Proto-Austroasiatic\"\
      ,\n\tnil,\n\t\"aav\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"afa-pro\"] = {\n\t\"Proto-Afro-Asiatic\",\n\t\"Q269125\",\n\t\"afa\",\n\totherNames = {\"Hamito-Semitic\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\
      }\n\nm[\"alg-aga\"] = {\n\t\"Agawam\",\n\tnil,\n\t\"alg\",\n\totherNames = {\"Agwam\", \"Agaam\"},\n\tscripts = Latn,\n}\n\nm[\"alg-pro\"] = {\n\t\"Proto-Algonquian\",\n\t\"Q7251834\",\n\t\"alg\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\
      \tsort_key = {\n\t\tfrom = {\"·\"},\n\t\tto   = {\"\"}},\n}\n\nm[\"alv-ama\"] = {\n\t\"Amasi\",\n\t\"Q4740400\",\n\t\"nic-bco\",\n\tscripts = Latn,\n\tentry_name = {\n\t\tfrom = {\"[àáâãā]\", \"[èéêē]\", \"[ìíîī]\", \"[òóôõō]\", \"[ùúûũū]\", GRAVE, ACUTE,\
      \ CIRC, TILDE, MACRON},\n\t\tto   = {\"a\",       \"e\",      \"i\",      \"o\",       \"u\"}},\n}\n\nm[\"alv-bgu\"] = {\n\t\"Baïnounk Gubëeher\",\n\t\"Q17002646\",\n\t\"alv-sng\",\n\totherNames = {\"Gubëeher\", \"Nyun Gubëeher\", \"Nun Gubëeher\"},\n\t\
      scripts = Latn,\n}\n\nm[\"alv-edo-pro\"] = {\n\t\"Proto-Edoid\",\n\tnil,\n\t\"alv-edo\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"alv-gwa\"] = {\n\t\"Gwara\",\n\t\"Q16945580\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"alv-pro\"] =\
      \ {\n\t\"Proto-Atlantic-Congo\",\n\tnil,\n\t\"alv\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"apa-pro\"] = {\n\t\"Proto-Apachean\",\n\tnil,\n\t\"apa\",\n\totherNames = {\"Proto-Apache\", \"Proto-Southern Athabaskan\"},\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aql-pro\"] = {\n\t\"Proto-Algic\",\n\t\"Q18389588\",\n\t\"aql\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tsort_key = {\n\t\tfrom = {\"·\"},\n\t\tto   = {\"\"}},\n}\n\nm[\"art-blk\"] = {\n\t\"Bolak\"\
      ,\n\t\"Q2909283\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"art-bsp\"] = {\n\t\"Black Speech\",\n\t\"Q686210\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = {\"Latn\", \"Teng\"},\n}\n\nm[\"art-com\"]\
      \ = {\n\t\"Communicationssprache\",\n\t\"Q35227\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"art-dtk\"] = {\n\t\"Dothraki\",\n\t\"Q2914733\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"\
      art-elo\"] = {\n\t\"Eloi\",\n\tnil,\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"art-gld\"] = {\n\t\"Goa'uld\",\n\t\"Q19823\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = {\"Latn\", \"Egyp\", \"Mero\"},\n\
      }\n\nm[\"art-lap\"] = {\n\t\"Lapine\",\n\t\"Q6488195\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"art-man\"] = {\n\t\"Mandalorian\",\n\t\"Q54289\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n\
      }\n\nm[\"art-mun\"] = {\n\t\"Mundolinco\",\n\t\"Q851355\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"art-nav\"] = {\n\t\"Na'vi\",\n\t\"Q316939\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\
      \nm[\"art-nox\"] = {\n\t\"Noxilo\",\n\tnil,\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"art-top\"] = {\n\t\"Toki Pona\",\n\t\"Q36846\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"art-una\"\
      ] = {\n\t\"Unas\",\n\tnil,\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"ath-nic\"] = {\n\t\"Nicola\",\n\t\"Q20609\",\n\t\"ath-nor\",\n\tscripts = Latn,\n}\n\nm[\"ath-pro\"] = {\n\t\"Proto-Athabaskan\",\n\tnil,\n\t\"ath\"\
      ,\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"auf-pro\"] = {\n\t\"Proto-Arawa\",\n\tnil,\n\t\"auf\",\n\totherNames = {\"Proto-Arawan\", \"Proto-Arauan\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aus-alu\"\
      ] = {\n\t\"Alungul\",\n\t\"Q16827670\",\n\t\"aus-pmn\",\n\totherNames = {\"Ogh-Alungul\", \"Alngula\"},\n\tscripts = Latn,\n}\n\nm[\"aus-and\"] = {\n\t\"Andjingith\",\n\t\"Q4754509\",\n\t\"aus-pmn\",\n\totherNames = {\"Adithinngithigh\"},\n\tscripts =\
      \ Latn,\n}\n\nm[\"aus-ang\"] = {\n\t\"Angkula\",\n\t\"Q16828520\",\n\t\"aus-pmn\",\n\totherNames = {\"Ogh-Anggula\", \"Anggula\", \"Ogh-Anggul\", \"Anggul\"},\n\tscripts = Latn,\n}\n\nm[\"aus-arn-pro\"] = {\n\t\"Proto-Arnhem\",\n\tnil,\n\t\"aus-arn\",\n\
      \ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aus-bra\"] = {\n\t\"Barranbinya\",\n\t\"Q4863220\",\n\t\"aus-pmn\",\n\totherNames = {\"Barranbinja\", \"Baranbinya\", \"Burranbinya\", \"Burrumbiniya\", \"Burrunbinya\", \"Barrumbinya\",\
      \ \"Barren-binya\", \"Parran-binye\"},\n\tscripts = Latn,\n}\n\nm[\"aus-brm\"] = {\n\t\"Barunggam\",\n\t\"Q4865914\",\n\t\"aus-pmn\",\n\tscripts = Latn,\n}\n\nm[\"aus-bru\"] = {\n\t\"Bruny Island\",\n\t\"Q4979601\",\n\totherNames = {\"Bruny Island Tasmanian\"\
      , \"Nuenonne\", \"Nyunoni\"},\n\tscripts = Latn,\n}\n\nm[\"aus-cww-pro\"] = {\n\t\"Proto-Central New South Wales\",\n\tnil,\n\t\"aus-cww\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aus-dal-pro\"] = {\n\t\"Proto-Daly\",\n\tnil,\n\
      \t\"aus-dal\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aus-guw\"] = {\n\t\"Guwar\",\n\t\"Q6652138\",\n\t\"aus-pam\",\n\totherNames = {\"Gowar\", \"Goowar\", \"Gooar\", \"Guar\", \"Gowr-burra\", \"Ngugi\", \"Mugee\", \"Wogee\"\
      , \"Gnoogee\", \"Chunchiburri\", \"Booroo-geen-merrie\"},\n\tscripts = Latn,\n}\n\nm[\"aus-lsw\"] = {\n\t\"Little Swanport\",\n\t\"Q6652138\",\n\totherNames = {\"Little Swanport Tasmanian\"},\n\tscripts = Latn,\n}\n\nm[\"aus-nyu-pro\"] = {\n\t\"Proto-Nyulnyulan\"\
      ,\n\tnil,\n\t\"aus-nyu\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aus-pam-pro\"] = {\n\t\"Proto-Pama-Nyungan\",\n\t\"Q33942\",\n\t\"aus-pam\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aus-par\"] = {\n\t\
      \"Paredarerme\",\n\t\"Q7136678\",\n\totherNames = {\"Oyster Bay\", \"Oyster Bay Tasmanian\", \"Paritarami\", \"Big River\", \"Big River Tasmanian\", \"Lairmairrener\", \"Lemerina\"},\n\tscripts = Latn,\n}\n\nm[\"aus-pee\"] = {\n\t\"Peerapper\",\n\t\"Q7160431\"\
      ,\n\totherNames = {\"Pirapa\", \"Northwestern Tasmanian\"},\n\tscripts = Latn,\n}\n\nm[\"aus-psl\"] = {\n\t\"Port Sorell\",\n\t\"Q7230944\",\n\totherNames = {\"Port Sorell Tasmanian\"},\n\tscripts = Latn,\n}\n\nm[\"aus-pye\"] = {\n\t\"Pyemmairre\",\n\t\
      \"Q7262964\",\n\totherNames = {\"Northeastern Tasmanian\", \"North East Tasmanian\", \"Plangermaireener\", \"Plangamerina\", \"Cape Portland\", \"Ben Lomond\", \"Pipers River\"},\n\tscripts = Latn,\n}\n\nm[\"aus-set\"] = {\n\t\"Southeast Tasmanian\",\n\
      \t\"Q7068421\",\n\totherNames = {\"Mainland Southeast Tasmanian\", \"Nuenonne\", \"Nyunoni\"},\n\tscripts = Latn,\n}\n\nm[\"aus-tom\"] = {\n\t\"Tommeginne\",\n\t\"Q7819095\",\n\totherNames = {\"Tommeeginnee\", \"Northern Tasmanian\"},\n\tscripts = Latn,\n\
      }\n\nm[\"aus-too\"] = {\n\t\"Toogee\",\n\t\"Q7824008\",\n\totherNames = {\"Southwestern Tasmanian\"},\n\tscripts = Latn,\n}\n\nm[\"aus-uwi\"] = {\n\t\"Uwinymil\",\n\t\"Q7903995\",\n\t\"aus-arn\",\n\totherNames = {\"Uwinjmil\"},\n\tscripts = Latn,\n}\n\n\
      m[\"aus-wdj-pro\"] = {\n\t\"Proto-Iwaidjan\",\n\tnil,\n\t\"aus-wdj\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"aus-won\"] = {\n\t\"Wong-gie\",\n\tnil,\n\t\"aus-pam\",\n\tscripts = Latn,\n}\n\nm[\"aus-wul\"] = {\n\t\"Wulguru\",\n\
      \t\"Q8039196\",\n\t\"aus-dyb\",\n\totherNames = {\"Manbara\", \"Wulgurugaba\", \"Wulgurukaba\", \"Nhawalgaba\"},\n\tscripts = Latn,\n}\n\nm[\"aus-ynk\"] = { -- contrast nny\n\t\"Yangkaal\",\n\t\"Q3913770\",\n\t\"aus-tnk\",\n\tscripts = Latn,\n}\n\nm[\"\
      awd-amc-pro\"] = {\n\t\"Proto-Amuesha-Chamicuro\",\n\tnil,\n\t\"awd\",\n\totherNames = {\"Western Maipuran\"},\n\tscripts = Latn,\n\ttype = \"reconstructed\",\n\tancestors = {\"awd-pro\"},\n}\n\nm[\"awd-kmp-pro\"] = {\n\t\"Proto-Kampa\",\n\tnil,\n\t\"\
      awd\",\n\totherNames = {\"Campa\", \"Kampan\", \"Campan\", \"Pre-Andine Maipurean\"},\n\tscripts = Latn,\n\ttype = \"reconstructed\",\n\tancestors = {\"awd-pro\"},\n}\n\nm[\"awd-prw-pro\"] = {\n\t\"Proto-Paresi-Waura\",\n\tnil,\n\t\"awd\",\n\totherNames\
      \ = {\"Paresí-Waurá\", \"Parecí–Xingú\", \"Paresí–Xingu\", \"Central Arawak\", \"Central Maipurean\"},\n\tscripts = Latn,\n\ttype = \"reconstructed\",\n\tancestors = {\"awd-pro\"},\n}\n\nm[\"awd-ama\"] = {\n\t\"Amarizana\",\n\t\"Q16827787\",\n\t\"awd\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"awd-ana\"] = {\n\t\"Anauyá\",\n\t\"Q16828252\",\n\t\"awd\",\n\totherNames = {\"Anauya\"},\n\tscripts = Latn,\n}\n\nm[\"awd-apo\"] = {\n\t\"Apolista\",\n\t\"Q16916645\",\n\t\"awd\",\n\totherNames = {\"Lapachu\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"awd-cav\"] = {\n\t\"Cavere\",\n\tnil,\n\t\"awd\",\n\totherNames = {\"Cabre\", \"Cabere\", \"Cávere\"},\n\tscripts = Latn,\n}\n\nm[\"awd-gnu\"] = {\n\t\"Guinau\",\n\t\"Q3504087\",\n\t\"awd\",\n\totherNames = {\"Guinao\", \"Inao\", \"\
      Guniare\", \"Quinhau\", \"Guiano\"},\n\tscripts = Latn,\n}\n\nm[\"awd-kar\"] = {\n\t\"Cariay\",\n\t\"Q16920253\",\n\t\"awd\",\n\totherNames = {\"Kariaí\", \"Kariai\", \"Cariyai\", \"Carihiahy\"},\n\tscripts = Latn,\n}\n\nm[\"awd-kaw\"] = {\n\t\"Kawishana\"\
      ,\n\t\"Q6379993\",\n\t\"awd-nwk\",\n\totherNames = {\"Cawishana\", \"Cayuishana\", \"Kaishana\", \"Cauixana\"},\n\tscripts = Latn,\n}\n\nm[\"awd-kus\"] = {\n\t\"Kustenau\",\n\t\"Q5196293\",\n\t\"awd\",\n\totherNames = {\" Kustenaú\", \"Custenau\", \"Kutenabu\"\
      },\n\tscripts = Latn,\n}\n\nm[\"awd-man\"] = {\n\t\"Manao\",\n\t\"Q6746920\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"awd-mar\"] = {\n\t\"Marawan\",\n\t\"Q6755108\",\n\t\"awd\",\n\totherNames = {\"Marawán\"},\n\tscripts = Latn,\n}\n\nm[\"awd-mpr\"] =\
      \ {\n\t\"Maypure\",\n\tnil,\n\t\"awd\",\n\totherNames = {\"Maipure\"},\n\tscripts = Latn,\n}\n\nm[\"awd-mrt\"] = {\n\t\"Mariaté\",\n\t\"Q16910017\",\n\t\"awd-nwk\",\n\totherNames = {\"Mariate\"},\n\tscripts = Latn,\n}\n\nm[\"awd-nwk-pro\"] = {\n\t\"Proto-Nawiki\"\
      ,\n\tnil,\n\t\"awd-nwk\",\n\totherNames = {\"Proto-Newiki\"},\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"awd-pai\"] = {\n\t\"Paikoneka\",\n\tnil,\n\t\"awd\",\n\totherNames = {\"Paiconeca\", \"Paicone\"},\n\tscripts = Latn,\n}\n\nm[\"awd-pas\"\
      ] = {\n\t\"Passé\",\n\tnil,\n\t\"awd-nwk\",\n\totherNames = {\"Pasé\", \"Pazé\"},\n\tscripts = Latn,\n}\n\nm[\"awd-pro\"] = {\n\t\"Proto-Arawak\",\n\tnil,\n\t\"awd\",\n\totherNames = {\"Proto-Arawakan\", \"Proto-Maipurean\", \"Proto-Maipuran\"},\n\ttype\
      \ = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"awd-she\"] = {\n\t\"Shebayo\",\n\t\"Q7492248\",\n\t\"awd\",\n\totherNames = {\"Shebaya\", \"Shebaye\"},\n\tscripts = Latn,\n}\n\nm[\"awd-taa-pro\"] = {\n\t\"Proto-Ta-Arawak\",\n\tnil,\n\t\"awd-taa\",\n\
      \totherNames = {\"Proto-Ta-Arawakan\", \"Proto-Caribbean Northern Arawak\"},\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"awd-wai\"] = {\n\t\"Wainumá\",\n\t\"Q16910017\",\n\t\"awd-nwk\",\n\totherNames = {\"Wainuma\", \"Wai\", \"Waima\", \"\
      Wainumi\", \"Wainambí\", \"Waiwana\", \"Waipi\", \"Yanuma\"},\n\tscripts = Latn,\n}\n\nm[\"awd-yum\"] = {\n\t\"Yumana\",\n\t\"Q8061062\",\n\t\"awd-nwk\",\n\totherNames = {\"Jumana\"},\n\tscripts = Latn,\n}\n\nm[\"azc-caz\"] = {\n\t\"Cazcan\",\n\t\"Q5055514\"\
      ,\n\t\"azc\",\n\totherNames = {\"Caxcan\", \"Kaskán\"},\n\tscripts = Latn,\n}\n\nm[\"azc-cup-pro\"] = {\n\t\"Proto-Cupan\",\n\tnil,\n\t\"azc-cup\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"azc-ktn\"] = {\n\t\"Kitanemuk\",\n\t\"\
      Q3197558\",\n\t\"azc-tak\",\n\totherNames = {\"Gitanemuk\"},\n\tscripts = Latn,\n}\n\nm[\"azc-nah-pro\"] = {\n\t\"Proto-Nahuan\",\n\t\"Q7251860\",\n\t\"azc-nah\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"azc-num-pro\"] = {\n\t\"\
      Proto-Numic\",\n\tnil,\n\t\"azc-num\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"azc-pro\"] = {\n\t\"Proto-Uto-Aztecan\",\n\t\"Q34073\",\n\t\"azc\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"azc-tak-pro\"\
      ] = {\n\t\"Proto-Takic\",\n\tnil,\n\t\"azc-tak\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"azc-tat\"] = {\n\t\"Tataviam\",\n\t\"Q743736\",\n\t\"azc\",\n\tscripts = Latn,\n}\n\nm[\"ber-pro\"] = {\n\t\"Proto-Berber\",\n\t\"Q2855698\"\
      ,\n\t\"ber\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"bnt-cmw\"] = {\n\t\"Chimwiini\",\n\t\"Q4958328\",\n\t\"bnt\",\n\totherNames = {\"Bravanese\", \"Mwiini\", \"Mwini\", \"Chimwini\", \"Chimini\", \"Brava\"},\n\tscripts = Latn,\n\
      }\n\nm[\"bnt-ind\"] = {\n\t\"Indanga\",\n\t\"Q51412803\",\n\t\"bnt\",\n\totherNames = {\"Kɔlɔmɔnyi\", \"Kɔlɛ\", \"Kasaï Oriental\"},\n\tscripts = Latn,\n}\n\nm[\"bnt-ngu-pro\"] = {\n\t\"Proto-Nguni\",\n\t\"Q961559\",\n\t\"bnt-ngu\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n\tsort_key = {\n                from = {\"[àáâǎ]\", \"[èéêě]\", \"[ìíîǐ]\", \"[òóôǒ]\", \"[ùúûǔ]\", \"ḿ\", \"[ǹńň]\", ACUTE, GRAVE, CIRC, CARON},\n                to   = {\"a\"     , \"e\"     , \"i\"     , \"o\"     , \"\
      u\"     , \"m\", \"n\"    }},\n}\n\nm[\"bnt-phu\"] = {\n\t\"Phuthi\",\n\t\"Q33796\",\n\t\"bnt-ngu\",\n\totherNames = {\"Siphuthi\"},\n\tscripts = Latn,\n\tentry_name = {\n\t\tfrom = {\"[àá]\", \"[èé]\", \"[ìí]\", \"[òó]\", \"[ùú]\", \"ḿ\", \"[ǹń]\", ACUTE,\
      \ GRAVE},\n\t\tto   = {\"a\"   , \"e\"   , \"i\"   , \"o\"   , \"u\"   , \"m\", \"n\"   }},\n}\n\nm[\"bnt-pro\"] = {\n\t\"Proto-Bantu\",\n\t\"Q3408025\",\n\t\"bnt\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tsort_key = {\n            \
      \    from = {\"[àá]\", \"[èé]\", \"[ìí]\", \"[òó]\", \"[ùú]\", \"[ǹń]\", \"ɪ\" , \"ʊ\" , ACUTE, GRAVE},\n                to   = {\"a\"   , \"e\"   , \"i2\"  , \"o\"   , \"u2\"  , \"n\"   , \"i1\", \"u1\"}},\n}\n\nm[\"bnt-sts-pro\"] = {\n\t\"Proto-Sotho-Tswana\"\
      ,\n\tnil,\n\t\"bnt-sts\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"btk-pro\"] = {\n\t\"Proto-Batak\",\n\tnil,\n\t\"btk\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-abz-pro\"] = {\n\t\"Proto-Abkhaz-Abaza\",\n\
      \t\"Q7251831\",\n\t\"cau-abz\",\n\totherNames = {\"Proto-Abazgi\", \"Proto-Abkhaz-Tapanta\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-ava-pro\"] = {\n\t\"Proto-Avaro-Andian\",\n\tnil,\n\t\"cau-ava\",\n\totherNames = {\"Proto-Avar-Andian\"\
      , \"Proto-Avar-Andi\", \"Proto-Avar-Andic\", \"Proto-Andian\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-cir-pro\"] = {\n\t\"Proto-Circassian\",\n\t\"Q7251838\",\n\t\"cau-cir\",\n\totherNames = {\"Proto-Adyghe-Kabardian\",\
      \ \"Proto-Adyghe-Circassian\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-drg-pro\"] = {\n\t\"Proto-Dargwa\",\n\tnil,\n\t\"cau-drg\",\n\totherNames = {\"Proto-Dargin\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"\
      },\n}\n\nm[\"cau-lzg-pro\"] = {\n\t\"Proto-Lezghian\",\n\tnil,\n\t\"cau-lzg\",\n\totherNames = {\"Proto-Lezgi\", \"Proto-Lezgian\", \"Proto-Lezgic\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-nec-pro\"] = {\n\t\"Proto-Northeast\
      \ Caucasian\",\n\tnil,\n\t\"cau-nec\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-nkh-pro\"] = {\n\t\"Proto-Nakh\",\n\tnil,\n\t\"cau-nkh\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-nwc-pro\"] = {\n\
      \t\"Proto-Northwest Caucasian\",\n\t\"Q7251861\",\n\t\"cau-nwc\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cau-tsz-pro\"] = {\n\t\"Proto-Tsezian\",\n\tnil,\n\t\"cau-tsz\",\n\totherNames = {\"Proto-Tsezic\", \"Proto-Didoic\"},\n\
      \ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cba-ata\"] = {\n\t\"Atanques\",\n\t\"Q4812783\",\n\t\"cba\",\n\totherNames = {\"Atanque\", \"Cancuamo\", \"Kankuamo\", \"Kankwe\", \"Kankuí\", \"Atanke\"},\n\tscripts = Latn,\n}\n\nm[\"cba-cat\"\
      ] = {\n\t\"Catío Chibcha\",\n\t\"Q7083619\",\n\t\"cba\",\n\totherNames = {\"Catio Chibcha\", \"Old Catio\"},\n\tscripts = Latn,\n}\n\nm[\"cba-dor\"] = {\n\t\"Dorasque\",\n\t\"Q5297532\",\n\t\"cba\",\n\totherNames = {\"Chumulu\", \"Changuena\", \"Changuina\"\
      , \"Chánguena\", \"Gualaca\"},\n\tscripts = Latn,\n}\n\nm[\"cba-dui\"] = {\n\t\"Duit\",\n\t\"Q3041061\",\n\t\"cba\",\n\tscripts = Latn,\n}\n\nm[\"cba-hue\"] = {\n\t\"Huetar\",\n\t\"Q35514\",\n\t\"cba\",\n\totherNames = {\"Güetar\", \"Guetar\", \"Brusela\"\
      },\n\tscripts = Latn,\n}\n\nm[\"cba-nut\"] = {\n\t\"Nutabe\",\n\t\"Q7070405\",\n\t\"cba\",\n\totherNames = {\"Nutabane\"},\n\tscripts = Latn,\n}\n\nm[\"cba-pro\"] = {\n\t\"Proto-Chibchan\",\n\tnil,\n\t\"cba\",\n\ttype = \"reconstructed\",\n\tscripts =\
      \ {\"Latinx\"},\n}\n\nm[\"ccn-pro\"] = {\n\t\"Proto-North Caucasian\",\n\tnil,\n\t\"ccn\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ccs-pro\"] = {\n\t\"Proto-Kartvelian\",\n\t\"Q2608203\",\n\t\"ccs\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n\tentry_name = {\n\t\tfrom = {\"q̣\", \"p̣\", \"ʓ\", \"ċ\"},\n\t\tto   = {\"q̇\", \"ṗ\", \"ʒ\", \"c̣\"}},\n}\n\nm[\"ccs-gzn-pro\"] = {\n\t\"Proto-Georgian-Zan\",\n\t\"Q23808119\",\n\t\"ccs-gzn\",\n\totherNames = {\"Proto-Karto-Zan\"\
      },\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tentry_name = {\n\t\tfrom = {\"q̣\", \"p̣\", \"ʓ\", \"ċ\"},\n\t\tto   = {\"q̇\", \"ṗ\", \"ʒ\", \"c̣\"}},\n}\n\nm[\"cdc-cbm-pro\"] = {\n\t\"Proto-Central Chadic\",\n\tnil,\n\t\"cdc-cbm\",\n\t\
      otherNames = {\"Proto-Central-Chadic\", \"Proto-Biu-Mandara\"},\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"cdc-pro\"] = {\n\t\"Proto-Chadic\",\n\tnil,\n\t\"cdc\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"cdd-pro\"] = {\n\
      \t\"Proto-Caddoan\",\n\tnil,\n\t\"cdd\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cel-bry-pro\"] = {\n\t\"Proto-Brythonic\",\n\t\"Q156877\",\n\t\"cel-bry\",\n\totherNames = {\"Proto-Brittonic\"},\n\tscripts = {\"Latinx\"},\n}\n\
      \nm[\"cel-gal\"] = {\n\t\"Gallaecian\",\n\t\"Q3094789\",\n\t\"cel\",\n}\n\nm[\"cel-gau\"] = {\n\t\"Gaulish\",\n\t\"Q29977\",\n\t\"cel\",\n\tscripts = {\"Latn\", \"Grek\"},\n}\n\nm[\"cel-pro\"] = {\n\t\"Proto-Celtic\",\n\t\"Q653649\",\n\t\"cel\",\n\ttype\
      \ = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tsort_key = {\n\t\tfrom = {\"ā\", \"ē\", \"[ɸφ]\", \"ī\", \"ū\", \"ʷ\"},\n\t\tto   = {\"a\", \"e\", \"f\",    \"i\", \"u\", \"¯w\"}},\n}\n\nm[\"chi-pro\"] = {\n\t\"Proto-Chimakuan\",\n\tnil,\n\t\"chi\"\
      ,\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cmc-pro\"] = {\n\t\"Proto-Chamic\",\n\tnil,\n\t\"cmc\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cpe-mar\"] = {\n\t\"Maroon Spirit Language\",\n\t\"Q1093206\"\
      ,\n\t\"crp\",\n\totherNames = {\"Jamaican Maroon Spirit Possession Language\"},\n\tscripts = Latn,\n\tancestors = {\"en\"},\n}\n\nm[\"cpe-spp\"] = {\n\t\"Samoan Plantation Pidgin\",\n\t\"Q7409948\",\n\t\"crp\",\n\tscripts = Latn,\n\tancestors = {\"en\"\
      },\n}\n\nm[\"crp-gep\"] = {\n\t\"Greenlandic Pidgin\",\n\t\"Q17036301\",\n\t\"crp\",\n\totherNames = {\"West Greenlandic Pidgin\", \"Greenlandic Eskimo Pidgin\"},\n\tscripts = Latn,\n}\n\nm[\"crp-rsn\"] = {\n\t\"Russenorsk\",\n\t\"Q505125\",\n\t\"crp\"\
      ,\n\tscripts = {\"Cyrl\", \"Latn\"},\n\tancestors = {\"no\", \"ru\"},\n}\n\nm[\"crp-tpr\"] = {\n\t\"Taimyr Pidgin Russian\",\n\t\"Q16930506\",\n\t\"crp\",\n\tscripts = {\"Cyrl\"},\n}\n\nm[\"csu-sar-pro\"] = {\n\t\"Proto-Sara\",\n\tnil,\n\t\"csu-sar\",\n\
      \ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"cus-pro\"] = {\n\t\"Proto-Cushitic\",\n\tnil,\n\t\"cus\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"dra-mkn\"] = {\n\t\"Nadugannada\",\n\tnil,\n\t\"dra\",\n\totherNames\
      \ = {\"Middle Kannada\"},\n\tscripts = {\"Knda\"},\n\tancestors = {\"dra-okn\"},\n}\n\nm[\"dra-okn\"] = {\n\t\"Halegannada\",\n\t\"Q15723156\",\n\t\"dra\",\n\totherNames = {\"Old Kannada\"},\n\tscripts = {\"Knda\"},\n\tancestors = {\"dra-pro\"},\n}\n\n\
      m[\"dra-pro\"] = {\n\t\"Proto-Dravidian\",\n\t\"Q1702853\",\n\t\"dra\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"egx-dem\"] = {\n\t\"Demotic\",\n\t\"Q188519\",\n\t\"egx\",\n\totherNames = {\"Demotic Egyptian\", \"Enchorial\"},\n\
      \tscripts = {\"Latinx\", \"Egyd\"},\n\tancestors = {\"egy\"},\n}\n\nm[\"elu-prk\"] = {\n\t\"Helu\",\n\t\"Q15080869\",\n\t\"inc\",\n\totherNames = {\"Hela\", \"Elu Prakrit\", \"Helu Prakrit\", \"Hela Prakrit\", \"Eḷu\"},\n\tscripts = {\"Brah\"},\n\tancestors\
      \ = {\"sa\"},\n}\n\nm[\"dru-pro\"] = {\n\t\"Proto-Rukai\",\n\tnil,\n\t\"map\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"esx-esk-pro\"] = {\n\t\"Proto-Eskimo\",\n\t\"Q7251842\",\n\t\"esx-esk\",\n\ttype = \"reconstructed\",\n\tscripts\
      \ = {\"Latinx\"},\n}\n\nm[\"esx-inu-pro\"] = {\n\t\"Proto-Inuit\",\n\tnil,\n\t\"esx-inu\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"esx-pro\"] = {\n\t\"Proto-Eskimo-Aleut\",\n\t\"Q7251843\",\n\t\"esx\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n}\n\nm[\"euq-pro\"] = {\n\t\"Proto-Basque\",\n\t\"Q938011\",\n\t\"euq\",\n\totherNames = {\"Proto-Vasconic\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"fiu-fin-pro\"] = {\n\t\"Proto-Finnic\",\n\t\"\
      Q11883720\",\n\t\"fiu-fin\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"gem-bur\"] = {\n\t\"Burgundian\",\n\tnil,\n\t\"gme\",\n\totherNames = {\"Burgundish\", \"Burgundic\"},\n\tscripts = Latn,\n}\n\nm[\"gem-pro\"] = {\n\t\"Proto-Germanic\"\
      ,\n\t\"Q669623\",\n\t\"gem\",\n\totherNames = {\"Common Germanic\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tsort_key = {\n\t\tfrom = {\"ā\", \"[ēê]\", \"ī\", \"[ōô]\", \"ū\", \"ą\" , \"į\" , \"ǫ\" , \"ų\" , CIRC, MACRON},\n\t\tto  \
      \ = {\"a\" , \"e\"  , \"i\", \"o\"   , \"u\", \"an\", \"in\", \"on\", \"un\"}},\n}\n\nm[\"gme-cgo\"] = {\n\t\"Crimean Gothic\",\n\t\"Q36211\",\n\t\"gme\",\n\tscripts = Latn,\n}\n\nm[\"gmq-bot\"] = {\n\t\"Westrobothnian\",\n\t\"Q7989641\",\n\t\"gmq\",\n\
      \tscripts = Latn,\n\tancestors = {\"non\"},\n}\n\nm[\"gmq-gut\"] = {\n\t\"Gutnish\",\n\t\"Q1256646\",\n\t\"gmq\",\n\tscripts = Latn,\n\tancestors = {\"non\"},\n}\n\nm[\"gmq-jmk\"] = {\n\t\"Jamtish\",\n\tnil,\n\t\"gmq\",\n\totherNames = {\"Jamtlandic\"\
      },\n\tscripts = Latn,\n\tancestors = {\"non\"},\n}\n\nm[\"gmq-mno\"] = {\n\t\"Middle Norwegian\",\n\t\"Q3417070\",\n\t\"gmq\",\n\tscripts = Latn,\n\tancestors = {\"non\"},\n}\n\n-- Used for both gmq-oda (Old Danish) and gmq-osw (Old Swedish).\n-- Ensure\
      \ any changes are appropriate for both languages, or copy to each\n-- language's table before making any changes.\nlocal gmq_oda_entry_name = {\n\tfrom = {\"Ā\", \"ā\", \"Ē\", \"ē\", \"Ī\", \"ī\", \"Ō\", \"ō\", \"Ū\", \"ū\", \"Ȳ\", \"ȳ\", \"Ǣ\", \"ǣ\"\
      , MACRON},\n\tto   = {\"A\", \"a\", \"E\", \"e\", \"I\", \"i\", \"O\", \"o\", \"U\", \"u\", \"Y\", \"y\", \"Æ\", \"æ\"}}\n\nm[\"gmq-oda\"] = {\n\t\"Old Danish\",\n\tnil,\n\t\"gmq\",\n\tscripts = Latn,\n\tancestors = {\"non\"},\n\tentry_name = gmq_oda_entry_name,\n\
      }\n\nm[\"gmq-osw\"] = {\n\t\"Old Swedish\",\n\t\"Q2417210\",\n\t\"gmq\",\n\tscripts = Latn,\n\tancestors = {\"non\"},\n\tentry_name = gmq_oda_entry_name,\n}\n\nm[\"gmq-pro\"] = {\n\t\"Proto-Norse\",\n\t\"Q1671294\",\n\t\"gmq\",\n\totherNames = {\"Proto-Scandinavian\"\
      , \"Primitive Norse\", \"Proto-Nordic\",\n\t\t\"Ancient Nordic\", \"Ancient Scandinavian\", \"Old Nordic\", \"Old Scandinavian\",\n\t\t\"Proto-North Germanic\", \"North Proto-Germanic\", \"Common Scandinavian\"},\n\tscripts = {\"Runr\"},\n\ttranslit_module\
      \ = \"Runr-translit\",\n}\n\nm[\"gmq-scy\"] = {\n\t\"Scanian\",\n\t\"Q768017\",\n\t\"gmq\",\n\tscripts = Latn,\n\tancestors = {\"non\"},\n}\n\nm[\"gmw-cfr\"] = {\n\t\"Central Franconian\",\n\tnil,\n\t\"gmw\",\n\totherNames = {\"Mittelfränkisch\", \"Ripuarian\"\
      , \"Moselle Franconian\", \"Colognian\", \"Kölsch\"},\n\tscripts = Latn,\n\tancestors = {\"gmh\"},\n\twikimedia_codes = {\"ksh\"},\n}\n\nm[\"gmw-ecg\"] = {\n\t\"East Central German\",\n\t\"Q499344\", -- subsumes Q699284, Q152965\n\t\"gmw\",\n\totherNames\
      \ = {\"Thuringian\", \"Thüringisch\", \"Upper Saxon\", \"Upper Saxon German\", \"Obersächsisch\", \"Lusatian\", \"Erzgebirgisch\", \"Silesian\", \"Silesian German\", \"High Prussian\"},\n\tscripts = Latn,\n\tancestors = {\"gmh\"},\n}\n\nm[\"gmw-gts\"]\
      \ = {\n\t\"Gottscheerish\",\n\t\"Q533109\",\n\t\"gmw\",\n\totherNames = {\"Gottscheerisch\"},\n\tscripts = Latn,\n\tancestors = {\"bar\"},\n}\n\nm[\"gmw-jdt\"] = {\n\t\"Jersey Dutch\",\n\t\"Q1687911\",\n\t\"gmw\",\n\tscripts = Latn,\n\tancestors = {\"\
      nl\"},\n}\n\nm[\"gmw-rfr\"] = {\n\t\"Rhine Franconian\",\n\t\"Q707007\",\n\t\"gmw\",\n\totherNames = {\"Rheinfränkisch\", \"Rhenish Franconian\", \"Hessian\", \"Lorraine Franconian\", \"Lorrainian\", \"Lothringisch\", \"Palatine German\", \"Pfälzisch\"\
      , \"Pälzisch\", \"Palatinate German\"},\n\tscripts = Latn,\n\tancestors = {\"gmh\"},\n}\n\nm[\"gmw-stm\"] = {\n\t\"Sathmar Swabian\",\n\t\"Q2223059\",\n\t\"gmw\",\n\totherNames = {\"Satu Mare Swabian\", \"Sathmarschwäbisch\", \"Sathmarisch\"},\n\tscripts\
      \ = Latn,\n\tancestors = {\"swg\"},\n}\n\nm[\"gmw-tsx\"] = {\n\t\"Transylvanian Saxon\",\n\t\"Q260942\",\n\t\"gmw\",\n\totherNames = {\"Siebenbürger Saxon\"},\n\tscripts = Latn,\n\tancestors = {\"gmw-cfr\"},\n}\n\nm[\"gmw-vog\"] = {\n\t\"Volga German\"\
      ,\n\t\"Q312574\",\n\t\"gmw\",\n\tscripts = Latn,\n\tancestors = {\"gmw-rfr\"},\n}\n\nm[\"gmw-zps\"] = {\n\t\"Zipser German\",\n\t\"Q205548\",\n\t\"gmw\",\n\totherNames = {\"Zipser\", \"Zipserisch\", \"Outzäpsersch\"},\n\tscripts = Latn,\n\tancestors =\
      \ {\"gmh\"},\n}\n\nm[\"grk-cal\"] = {\n\t\"Calabrian Greek\",\n\t\"Q1146398\",\n\t\"grk\",\n\totherNames = {\"Italian Greek\", \"Bova\"},\n\tscripts = Latn,\n\tancestors = {\"grc\"},\n}\n\nm[\"grk-ita\"] = {\n\t\"Italiot Greek\",\n\tnil,\n\t\"grk\",\n\t\
      otherNames = {\"Griko\", \"Grico\", \"Grecanic\"},\n\tscripts = {\"Latn\", \"Grek\"},\n\tancestors = {\"grc\"},\n}\n\nm[\"grk-mar\"] = {\n\t\"Mariupol Greek\",\n\t\"Q4400023\",\n\t\"grk\",\n\totherNames = {\"Mariupolitan Greek\", \"Rumeíka\", \"Rumeika\"\
      },\n\tscripts = {\"Cyrl\", \"Latn\", \"Grek\"},\n\tancestors = {\"grc\"},\n\tentry_name = {\n\t\tfrom = {ACUTE},\n\t\tto   = {}} ,\n}\n\nm[\"grk-pro\"] = {\n\t\"Proto-Hellenic\",\n\t\"Q1231805\",\n\t\"grk\",\n\ttype = \"reconstructed\",\n\tscripts = {\"\
      Latinx\"},\n}\n\nm[\"hmn-pro\"] = {\n\t\"Proto-Hmong\",\n\tnil,\n\t\"hmn\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"hmx-mie-pro\"] = {\n\t\"Proto-Mien\",\n\tnil,\n\t\"hmx-mie\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"\
      },\n}\n\nm[\"hmx-pro\"] = {\n\t\"Proto-Hmong-Mien\",\n\t\"Q7251846\",\n\t\"hmx\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"hyx-pro\"] = {\n\t\"Proto-Armenian\",\n\t\"Q3848498\",\n\t\"hyx\",\n\ttype = \"reconstructed\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"iir-nur-pro\"] = {\n\t\"Proto-Nuristani\",\n\tnil,\n\t\"iir-nur\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"iir-pro\"] = {\n\t\"Proto-Indo-Iranian\",\n\t\"Q966439\",\n\t\"iir\",\n\ttype = \"reconstructed\",\n\
      \tscripts = {\"Latinx\"},\n}\n\nm[\"inc-ash\"] = {\n\t\"Ashokan Prakrit\",\n\tnil,\n\t\"inc\",\n\tscripts = {\"Brah\", \"Khar\"},\n\tancestors = {\"sa\"},\n\ttranslit_module = \"translit-redirect\",\n}\n\nm[\"inc-gup\"] = {\n\t\"Gurjar Apabhramsa\",\n\t\
      nil,\n\t\"inc\",\n\tscripts = {\"Deva\"},\n\tancestors = {\"psu\"},\n}\n\nm[\"inc-mas\"] = {\n\t\"Middle Assamese\",\n\tnil,\n\t\"inc\",\n\tscripts = {\"Beng\"},\n\tancestors = {\"inc-oas\"},\n\ttranslit_module = \"inc-mas-translit\",\n}\n\nm[\"inc-mbn\"\
      ] = {\n\t\"Middle Bengali\",\n\tnil,\n\t\"inc\",\n\tscripts = {\"Beng\"},\n\tancestors = {\"inc-obn\"},\n}\n\nm[\"inc-mgd\"] = {\n\t\"Magadhi Prakrit\",\n\t\"Q2652214\",\n\t\"inc\",\n\tscripts = {\"Brah\"},\n\tancestors = {\"inc-ash\"},\n\ttranslit_module\
      \ = \"Brah-translit\",\n}\n\nm[\"inc-mgu\"] = {\n\t\"Middle Gujarati\",\n\t\"Q24907429\",\n\t\"inc\",\n\tscripts = {\"Deva\"},\n\tancestors = {\"inc-ogu\"},\n}\n\nm[\"inc-mor\"] = {\n\t\"Middle Oriya\",\n\tnil,\n\t\"inc\",\n\tscripts = {\"Orya\"},\n\t\
      ancestors = {\"inc-oor\"},\n}\n\nm[\"inc-oas\"] = {\n\t\"Old Assamese\",\n\tnil,\n\t\"inc\",\n\tscripts = {\"Beng\"},\n\tancestors = {\"inc-mgd\"},\n\ttranslit_module = \"inc-mas-translit\",\n}\n\nm[\"inc-obn\"] = {\n\t\"Old Bengali\",\n\tnil,\n\t\"inc\"\
      ,\n\tscripts = {\"Beng\"},\n\tancestors = {\"inc-mgd\"},\n}\n\nm[\"inc-ogu\"] = {\n\t\"Old Gujarati\",\n\t\"Q24907427\",\n\t\"inc\",\n\totherNames = {\"Old Western Rajasthani\"},\n\tscripts = {\"Deva\"},\n\tancestors = {\"inc-gup\"},\n}\n\nm[\"inc-ohi\"\
      ] = {\n\t\"Old Hindi\",\n\t\"Q48767781\",\n\t\"inc\",\n\tscripts = {\"Deva\"},\n\tancestors = {\"inc-sap\"},\n\ttranslit_module = \"sa-translit\",\n}\n\nm[\"inc-oor\"] = {\n\t\"Old Oriya\",\n\tnil,\n\t\"inc\",\n\tscripts = {\"Orya\"},\n\tancestors = {\"\
      inc-mgd\"},\n}\n\nm[\"inc-pro\"] = {\n\t\"Proto-Indo-Aryan\",\n\t\"Q23808344\",\n\t\"inc\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"inc-sap\"] = {\n\t\"Sauraseni Apabhramsa\",\n\tnil,\n\t\"inc\",\n\tscripts = {\"Deva\"},\n\tancestors\
      \ = {\"psu\"},\n}\n\nm[\"inc-dar-pro\"] = {\n\t\"Proto-Dardic\",\n\tnil,\n\t\"inc-dar\",\n\totherNames = {\"Proto-Rigvedic\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tancestors = {\"sa\"}, -- to be specific \"an unattested Old Indo-Aryan\
      \ dialect\"\n}\n\nm[\"ine-ana-pro\"] = {\n\t\"Proto-Anatolian\",\n\t\"Q7251833\",\n\t\"ine-ana\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ine-bsl-pro\"] = {\n\t\"Proto-Balto-Slavic\",\n\t\"Q1703347\",\n\t\"ine-bsl\",\n\ttype =\
      \ \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tsort_key = {\n\t\tfrom = {\"[áā]\", \"[éēḗ]\", \"[íī]\", \"[óōṓ]\", \"[úū]\", ACUTE, MACRON, \"ˀ\"},\n\t\tto   = {\"a\", \"e\", \"i\", \"o\", \"u\"}},\n}\n\nm[\"ine-pae\"] = {\n\t\"Paeonian\",\n\t\"Q2705672\"\
      ,\n\t\"ine\",\n\tscripts = {\"polytonic\"},\n\ttranslit_module = \"grc-translit\",\n\tsort_key = {  -- Keep this synchronized with grc and others synced to it\n\t\tfrom = {\"[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇᾱᾍ]\", \"[έὲἐἔἒἑἕἓ]\", \"[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗ]\",\
      \ \"[ίὶῖἰἴἲἶἱἵἳἷϊΐῒῗῑ]\", \"[όὸὀὄὂὁὅὃ]\", \"[ύὺῦὐὔὒὖὑὕὓὗϋΰῢῧῡ]\", \"[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧᾨ]\", \"ῥ\", \"ς\"},\n\t\tto   = {\"α\"\t\t\t\t\t\t, \"ε\"\t\t , \"η\"\t\t\t\t\t\t, \"ι\"\t\t\t\t, \"ο\"\t\t , \"υ\"\t\t\t\t, \"ω\"\t\t\t\t\t\t, \"ρ\", \"σ\"}},\n\
      \tentry_name = {\n\t\tfrom = {\"[ᾸᾹ]\", \"[ᾰᾱ]\", \"[ῘῙ]\", \"[ῐῑ]\", \"[ῨῩ]\", \"[ῠῡ]\"},\n\t\tto   = {\"Α\", \"α\", \"Ι\", \"ι\", \"Υ\", \"υ\"}},\n}\n\nm[\"ine-pro\"] = {\n\t\"Proto-Indo-European\",\n\t\"Q37178\",\n\t\"ine\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n\tsort_key = {\n\t\tfrom = {\"[áā]\", \"[éēḗ]\", \"[íī]\", \"[óōṓ]\", \"[úū]\", \"ĺ\", \"ḿ\", \"ń\", \"ŕ\", \"ǵ\" , \"ḱ\" , \"ʰ\", \"ʷ\", \"₁\", \"₂\", \"₃\", RINGBELOW, ACUTE, MACRON},\n\t\tto   = {\"a\"   , \"e\"\t, \"i\"\
      \   , \"o\"\t, \"u\"   , \"l\", \"m\", \"n\", \"r\", \"g'\", \"k'\", \"¯h\", \"¯w\", \"1\", \"2\", \"3\"}},\n}\n\nm[\"ine-toc-pro\"] = {\n\t\"Proto-Tocharian\",\n\t\"Q37029\",\n\t\"ine-toc\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\
      \nm[\"xme-old\"] = {\n\t\"Old Median\",\n\t\"Q36461\",\n\t\"xme\",\n\tscripts = {\"Grek\", \"Latn\"},\n}\n\nm[\"xme-mid\"] = {\n\t\"Middle Median\",\n\tnil,\n\t\"xme\",\n\tscripts = {\"Latn\"},\n\tancestors = {\"xme-old\"},\n}\n\nm[\"xme-ker\"] = {\n\t\
      \"Kermanic\",\n\t\"Q129850\",\n\t\"xme\",\n\totherNames = {\"Kermanian\", \"Central Dialects\", \"Central Iranian Dialects\", \"Central Plateau Dialects\", \"Central Iranian\", \"South Median\", \"Gazi\", \"Soi\", \"Sohi\", \"Abuzeydabadi\", \"Abyanehi\"\
      , \"Farizandi\", \"Jowshaqani\", \"Nashalji\", \"Qohrudi\", \"Yarandi\", \"Tari\", \"Sedehi\", \"Ardestani\", \"Zefrehi\", \"Isfahani\", \"Kafroni\", \"Varzenehi\", \"Khuri\", \"Nayini\", \"Anaraki\", \"Zoroastrian Dari\", \"Behdināni\", \"Behdinani\"\
      , \"Gabri\", \"Gavrŭni\", \"Gavruni\", \"Gabrōni\", \"Gabroni\", \"Kermani\", \"Yazdi\", \"Bidhandi\", \"Bijagani\", \"Chimehi\", \"Hanjani\", \"Komjani\", \"Naraqi\", \"Qalhari\", \"Varani\", \"Zori\"},\n\tscripts = {\"fa-Arab\"},\n\tancestors = {\"xme-mid\"\
      },\n}\n\nm[\"xme-ttc-pro\"] = {\n\t\"Proto-Tatic\",\n\tnil,\n\t\"xme-ttc\",\n\tscripts = {\"Latn\"},\n\tancestors = {\"xme-mid\"},\n}\n\nm[\"xme-kls\"] = {\n\t\"Kalasuri\",\n\tnil,\n\t\"xme-ttc\",\n\totherNames = {\"Kalāsuri\", \"Kalasur\", \"Kalāsur\"\
      },\n\tancestors = {\"xme-azr\"},\n}\n\nm[\"xme-klt\"] = {\n\t\"Kilit\",\n\t\"Q3612452\",\n\t\"xme-ttc\",\n\tscripts = {\"Cyrl\"}, -- and fa-Arab?\n\tancestors = {\"xme-azr\"},\n}\n\nm[\"xme-azr\"] = {\n\t\"Old Azari\",\n\t\"Q434697\",\n\t\"xme-ttc\",\n\
      \totherNames = {\"Old Azeri\", \"Azari\", \"Azeri\", \"Āḏarī\", \"Adari\", \"Adhari\"},\n\tscripts = {\"fa-Arab\"},\n\tancestors = {\"xme-ttc-pro\"},\n}\n\nm[\"ira-pro\"] = {\n\t\"Proto-Iranian\",\n\t\"Q4167865\",\n\t\"ira\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-mpr-pro\"] = {\n\t\"Proto-Medo-Parthian\",\n\tnil,\n\t\"ira-mpr\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-kms-pro\"] = {\n\t\"Proto-Komisenian\",\n\tnil,\n\t\"ira-kms\",\n\ttype\
      \ = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-zgr-pro\"] = {\n\t\"Proto-Zaza-Gorani\",\n\tnil,\n\t\"ira-zgr\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-pat-pro\"] = {\n\t\"Proto-Pathan\",\n\tnil,\n\t\"ira-pat\"\
      ,\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-sak-pro\"] = {\n\t\"Proto-Saka\",\n\tnil,\n\t\"ira-sak\",\n\totherNames = {\"Proto-Sakan\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tancestors = {\"xsc\"},\n}\n\n\
      m[\"ira-sym-pro\"] = {\n\t\"Proto-Shughni-Yazghulami-Munji\",\n\tnil,\n\t\"ira-sym\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-sgi-pro\"] = {\n\t\"Proto-Sanglechi-Ishkashimi\",\n\tnil,\n\t\"ira-sgi\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-mny-pro\"] = {\n\t\"Proto-Munji-Yidgha\",\n\tnil,\n\t\"ira-mny\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tancestors = {\"ira-sym-pro\"},\n}\n\nm[\"ira-shy-pro\"] = {\n\t\"Proto-Shughni-Yazgulami\"\
      ,\n\tnil,\n\t\"ira-shy\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tancestors = {\"ira-sym-pro\"},\n}\n\nm[\"ira-shr-pro\"] = {\n\t\"Proto-Shughni-Roshani\",\n\tnil,\n\t\"ira-shy\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"\
      },\n\tancestors = {\"ira-shy-pro\"},\n}\n\nm[\"ira-sgc-pro\"] = {\n\t\"Proto-Sogdic\",\n\tnil,\n\t\"ira-sgc\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ira-wnj\"] = {\n\t\"Vanji\",\n\tnil,\n\t\"ira-shy\",\n\totherNames = {\"Old\
      \ Vanji\", \"Vanchi\", \"Vanži\", \"Wanji\"},\n\tscripts = {\"Latinx\"},\n\tancestors = {\"ira-shy-pro\"},\n}\n\nm[\"iro-min\"] = {\n\t\"Mingo\",\n\t\"Q128531\",\n\t\"iro\",\n\tscripts = Latn,\n}\n\nm[\"iro-pro\"] = {\n\t\"Proto-Iroquoian\",\n\t\"Q7251852\"\
      ,\n\t\"iro\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"itc-ola\"] = {\n\t\"Old Latin\",\n\t\"Q12289\",\n\t\"itc\",\n\totherNames = {\"Archaic Latin\", \"Early Latin\", \"Pre-Classical Latin\", \"Ante-Classical Latin\"},\n\tscripts\
      \ = {\"Latn\", \"Ital\"},\n\tentry_name = {\n\t\tfrom = {\"Ā\", \"ā\", \"Ē\", \"ē\", \"Ī\", \"ī\", \"Ō\", \"ō\", \"Ū\", \"ū\", \"Ȳ\", \"ȳ\"},\n\t\tto   = {\"A\", \"a\", \"E\", \"e\", \"I\", \"i\", \"O\", \"o\", \"U\", \"u\", \"Y\", \"y\"}},\n\ttranslit_module\
      \ = \"Ital-translit\",\n}\n\nm[\"itc-pro\"] = {\n\t\"Proto-Italic\",\n\t\"Q17102720\",\n\t\"itc\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"jpx-pro\"] = {\n\t\"Proto-Japonic\",\n\tnil,\n\t\"jpx\",\n\ttype = \"reconstructed\",\n\
      \tscripts = {\"Latinx\"},\n}\n\nm[\"jpx-ryu-pro\"] = {\n\t\"Proto-Ryukyuan\",\n\tnil,\n\t\"jpx-ryu\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"kar-pro\"] = {\n\t\"Proto-Karen\",\n\tnil,\n\t\"kar\",\n\ttype = \"reconstructed\",\n\
      \tscripts = {\"Latinx\"},\n}\n\nm[\"khi-kho-pro\"] = {\n\t\"Proto-Khoe\",\n\tnil,\n\t\"khi-kho\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"khi-kun\"] = {\n\t\"ǃKung\",\n\t\"Q32904\",\n\t\"khi-kxa\",\n\totherNames = {\"ǃOǃKung\", \"ǃ'Oǃ\
      Kung\", \"Kung\", \"Ekoka ǃKung\", \"Ekoka Kung\", \"Sekele\"},\n\tscripts = Latn,\n}\n\nm[\"lic-pro\"] = {\n\t\"Proto-Hlai\",\n\t\"Q7251845\",\n\t\"qfa-lic\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"map-ata-pro\"] = {\n\t\"Proto-Atayalic\"\
      ,\n\tnil,\n\t\"map-ata\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"map-bms\"] = {\n\t\"Banyumasan\",\n\t\"Q33219\",\n\t\"map\",\n\tscripts = Latn,\n}\n\nm[\"map-pro\"] = {\n\t\"Proto-Austronesian\",\n\t\"Q49230\",\n\t\"map\",\n\
      \ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"mkh-ban-pro\"] = {\n\t\"Proto-Bahnaric\",\n\tnil,\n\t\"mkh-ban\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"mkh-khm-pro\"] = {\n\t\"Proto-Khmuic\",\n\tnil,\n\t\"mkh-khm\"\
      ,\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"mkh-mkm\"] = {\n\t\"Middle Khmer\",\n\t\"Q25226861\",\n\t\"mkh\",\n\tscripts = {\"Latinx\", \"Khmr\"},\n\tancestors = {\"mkh-okm\"},\n}\n\nm[\"mkh-mmn\"] = {\n\t\"Middle Mon\",\n\tnil,\n\t\"mkh\"\
      ,\n\tscripts = {\"Latinx\", \"Mymr\"},\n\tancestors = {\"omx\"},\n}\n\nm[\"mkh-mvi\"] = {\n\t\"Middle Vietnamese\",\n\t\"Q9199\",\n\t\"mkh-vie\",\n\tscripts = {\"Latinx\", \"Hani\"},\n}\n\nm[\"mkh-okm\"] = {\n\t\"Old Khmer\",\n\t\"Q9205\",\n\t\"mkh\",\n\
      \tscripts = {\"Latinx\", \"Khmr\"},\n}\n\nm[\"mkh-pro\"] = { --This will be merged into 2015 aav-pro.\n\t\"Proto-Mon-Khmer\",\n\t\"Q7251859\",\n\t\"mkh\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"mkh-kat-pro\"] = {\n\t\"Proto-Katuic\"\
      ,\n\tnil,\n\t\"mkh-kat\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"mkh-pal-pro\"] = {\n\t\"Proto-Palaungic\",\n\tnil,\n\t\"mkh-pal\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"mkh-pea-pro\"] = {\n\t\"Proto-Pearic\"\
      ,\n\tnil,\n\t\"mkh-pea\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"mkh-vie-pro\"] = {\n\t\"Proto-Vietic\",\n\tnil,\n\t\"mkh-vie\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"mun-pro\"] = {\n\t\"Proto-Munda\"\
      ,\n\tnil,\n\t\"mun\",\n\totherNames = {\"Proto-Mundan\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"myn-chl\"] = { -- the stage after ''emy''\n\t\"Ch'olti'\",\n\t\"Q873995\",\n\t\"myn\",\n\totherNames = {\"Cholti\", \"Colonial Ch'olti'\"\
      , \"Colonial Cholti\"},\n\tscripts = {\"Latinx\"},\n}\n\nm[\"myn-pro\"] = {\n\t\"Proto-Mayan\",\n\t\"Q3321532\",\n\t\"myn\",\n\totherNames = {\"Proto-Maya\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-ala\"] = {\n\t\"Alazapa\"\
      ,\n\tnil,\n\totherNames = {\"Alasapa\", \"Pinto\"},\n\tscripts = Latn,\n}\n\nm[\"nai-bay\"] = {\n\t\"Bayogoula\",\n\t\"Q1563704\",\n\totherNames = {\"Bayougoula\", \"Bayou Goula\", \"Ischenoca\"}, -- tribe merged with \"Mougulasha\", \"Mongoulacha\", \"\
      Mugulasha\", \"Mougulasha\", \"Muglahsa\", \"Muglasha\", \"Muguasha\", \"Imongolosha\", \"Houma\", \"Acolapissa\"\n\tscripts = Latn,\n}\n\nm[\"nai-bvy\"] = {\n\t\"Buena Vista Yokuts\",\n\t\"Q4985474\",\n\t\"nai-yok\",\n\totherNames = {\"Tulamni-Hometwoli\"\
      , \"Tulamni\", \"Tulamne\", \"Tuolumne\", \"Tawitchi\", \"Hometwoli\", \"Taneshach\"},\n\tscripts = Latn,\n}\n\nm[\"nai-cal\"] = {\n\t\"Calusa\",\n\t\"Q51782\",\n\tscripts = Latn,\n}\n\nm[\"nai-chi\"] = {\n\t\"Chiquimulilla\",\n\t\"Q25339627\",\n\t\"nai-xin\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"nai-chu-pro\"] = {\n\t\"Proto-Chumash\",\n\tnil,\n\t\"nai-chu\",\n\totherNames = {\"Proto-Chumashan\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-cig\"] = {\n\t\"Ciguayo\",\n\t\"Q20741700\",\n\t\
      scripts = Latn,\n}\n\nm[\"nai-ckn-pro\"] = {\n\t\"Proto-Chinookan\",\n\tnil,\n\t\"nai-ckn\",\n\totherNames = {\"Proto-Chinook\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-dly\"] = {\n\t\"Delta Yokuts\",\n\tnil,\n\t\"nai-yok\"\
      ,\n\totherNames = {\"Far Northern Valley Yokuts\", \"Yachikumne\", \"Yachikumni\", \"Chulamni\", \"Lower San Joaquin\", \"Lakisamni\", \"Tawalimni\"},\n\tscripts = Latn,\n}\n\nm[\"nai-gsy\"] = {\n\t\"Gashowu\",\n\tnil,\n\t\"nai-yok\",\n\tscripts = Latn,\n\
      }\n\nm[\"nai-guz\"] = {\n\t\"Guazacapán\",\n\t\"Q19572028\",\n\t\"nai-xin\",\n\totherNames = {\"Guazacapan\"},\n\tscripts = Latn,\n}\n\nm[\"nai-hit\"] = {\n\t\"Hitchiti\",\n\t\"Q1542882\",\n\t\"nai-mus\",\n\totherNames = {\"Atcik-hata\", \"At-pasha-shliha\"\
      },\n\tscripts = Latn,\n}\n\nm[\"nai-ipa\"] = {\n\t\"Ipai\",\n\t\"Q3027474\",\n\t\"nai-yuc\",\n\totherNames = {\"'Iipay 'aa\", \"Northern Diegueño\", \"Diegueño\"},\n\tscripts = Latn,\n}\n\nm[\"nai-jtp\"] = {\n\t\"Jutiapa\",\n\tnil,\n\t\"nai-xin\",\n\t\
      otherNames = {\"Xutiapa\", \"Jalapa\", \"Xalapa\"},\n\tscripts = Latn,\n}\n\nm[\"nai-jum\"] = {\n\t\"Jumaytepeque\",\n\t\"Q25339626\",\n\t\"nai-xin\",\n\totherNames = {\"Jumaitepeque\", \"Jumaytepec\"},\n\tscripts = Latn,\n}\n\nm[\"nai-kat\"] = {\n\t\"\
      Kathlamet\",\n\t\"Q6376639\",\n\t\"nai-ckn\",\n\totherNames = {\"Kathlamet Chinook\"},\n\tscripts = Latn,\n}\n\nm[\"nai-knm\"] = {\n\t\"Konomihu\",\n\t\"Q3198734\",\n\t\"nai-shs\",\n\tscripts = Latn,\n}\n\nm[\"nai-kry\"] = {\n\t\"Kings River Yokuts\",\n\
      \t\"Q6413014\",\n\t\"nai-yok\",\n\totherNames = {\"Choinimni\", \"Choynimni\", \"Ayticha\", \"Kocheyali\", \"Ayitcha\", \"Michahay\", \"Chukaymina\", \"Chukaimina\"},\n\tscripts = Latn,\n}\n\nm[\"nai-kum\"] = {\n\t\"Kumeyaay\",\n\t\"Q4910139\",\n\t\"nai-yuc\"\
      ,\n\totherNames = {\"Kumiai\", \"Central Diegueño\", \"Diegueño\"},\n\tscripts = Latn,\n}\n\nm[\"nai-mac\"] = {\n\t\"Macoris\",\n\t\"Q21070851\",\n\totherNames = {\"Macorís\", \"Macorix\", \"Mazorij\", \"Mazorig\", \"Mazoriges\"},\n\tscripts = Latn,\n\
      }\n\nm[\"nai-mdu-pro\"] = {\n\t\"Proto-Maidun\",\n\tnil,\n\t\"nai-mdu\",\n\totherNames = {\"Proto-Maiduan\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-miz-pro\"] = {\n\t\"Proto-Mixe-Zoque\",\n\tnil,\n\t\"nai-miz\",\n\totherNames\
      \ = {\"Proto-Mixe-Zoquean\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-nao\"] = {\n\t\"Naolan\",\n\t\"Q6964594\",\n\tscripts = Latn,\n}\n\nm[\"nai-nrs\"] = {\n\t\"New River Shasta\",\n\t\"Q7011254\",\n\t\"nai-shs\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"nai-nvy\"] = {\n\t\"Northern Valley Yokuts\",\n\tnil,\n\t\"nai-yok\",\n\totherNames = {\"Chukchansi\", \"Kechayi\", \"Dumna\", \"Chawchila\", \"Noptinte\", \"Nopṭinṭe\", \"Nopthrinthre\", \"Nopchinchi\", \"Takin\"},\n\tscripts = Latn,\n\
      }\n\nm[\"nai-okw\"] = {\n\t\"Okwanuchu\",\n\t\"Q3350126\",\n\t\"nai-shs\",\n\tscripts = Latn,\n}\n\nm[\"nai-per\"] = {\n\t\"Pericú\",\n\t\"Q3375369\",\n\tscripts = Latn,\n}\n\nm[\"nai-pic\"] = {\n\t\"Picuris\",\n\t\"Q7191257\",\n\t\"nai-kta\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"nai-ply\"] = {\n\t\"Palewyami\",\n\t\"Q2387391\",\n\t\"nai-yok\",\n\totherNames = {\"Paleuyami\", \"Altinin\", \"Poso Creek\", \"Poso Creek Yokuts\"},\n\tscripts = Latn,\n}\n\nm[\"nai-pom-pro\"] = {\n\t\"Proto-Pomo\",\n\tnil,\n\t\"\
      nai-pom\",\n\totherNames = {\"Proto-Pomoan\"},\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"nai-qng\"] = {\n\t\"Quinigua\",\n\t\"Q36360\",\n\tscripts = Latn,\n}\n\nm[\"nai-sca-pro\"] = { -- NB 'sio-pro' \"Proto-Siouan\" which is Proto-Western\
      \ Siouan\n\t\"Proto-Siouan-Catawban\",\n\tnil,\n\t\"nai-sca\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-sin\"] = {\n\t\"Sinacantán\",\n\t\"Q24190249\",\n\t\"nai-xin\",\n\totherNames = {\"Sinacantan\", \"Zinacantán\", \"Zinacantan\"\
      },\n\tscripts = Latn,\n}\n\nm[\"nai-sln\"] = {\n\t\"Salvadoran Lenca\",\n\t\"Q3229434\",\n\t\"nai-len\",\n\tscripts = Latn,\n}\n\nm[\"nai-spt\"] = {\n\t\"Sahaptin\",\n\t\"Q3833015\",\n\t\"nai-shp\",\n\totherNames = {\"Shahaptin\"},\n\tscripts = Latn,\n\
      }\n\nm[\"nai-svy\"] = {\n\t\"Southern Valley Yokuts\",\n\tnil,\n\t\"nai-yok\",\n\totherNames = {\"Yawelmani\", \"Tachi\", \"Koyeti\", \"Nutunutu\", \"Chunut\", \"Wo'lasi\", \"Choynok\", \"Choinok\", \"Wechihit\"},\n\tscripts = Latn,\n}\n\nm[\"nai-tap\"\
      ] = {\n\t\"Tapachultec\",\n\t\"Q7684401\",\n\t\"nai-miz\",\n\totherNames = {\"Tapachulteca\", \"Tapachulteco\", \"Tapachula\"},\n\tscripts = Latn,\n}\n\nm[\"nai-taw\"] = {\n\t\"Tawasa\",\n\t\"Q7689233\",\n\tscripts = Latn,\n}\n\nm[\"nai-teq\"] = {\n\t\"\
      Tequistlatec\",\n\t\"Q2964454\",\n\t\"nai-tqn\",\n\totherNames = {\"Tequistlateco\", \"Tequistlateca\", \"Chontal\", \"Chontol of Oaxaca\", \"Oaxaca Chontal\", \"Oaxacan Chontal\"},\n\tscripts = Latn,\n}\n\nm[\"nai-tip\"] = {\n\t\"Tipai\",\n\t\"Q3027471\"\
      ,\n\t\"nai-yuc\",\n\totherNames = {\"Tipay\", \"Tiipai\", \"Tiipay\", \"Jamul Tiipay\", \"Southern Digueño\", \"Diegueño\"},\n\tscripts = Latn,\n}\n\nm[\"nai-tky\"] = {\n\t\"Tule-Kaweah Yokuts\",\n\t\"Q7851988\",\n\t\"nai-yok\",\n\totherNames = {\"Wikchamni\"\
      , \"Wukchamni\", \"Wukchumni\", \"Yawdanchi\"},\n\tscripts = Latn,\n}\n\nm[\"nai-tot-pro\"] = {\n\t\"Proto-Totozoquean\",\n\tnil,\n\t\"nai-tot\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-utn-pro\"] = {\n\t\"Proto-Utian\",\n\
      \tnil,\n\t\"nai-utn\",\n\totherNames = {\"Proto-Miwok-Costanoan\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"nai-wai\"] = {\n\t\"Waikuri\",\n\t\"Q3118702\",\n\totherNames = {\"Guaycura\", \"Waicura\"},\n\tscripts = Latn,\n}\n\n\
      m[\"nai-yav\"] = {\n\t\"Yavapai\",\n\t\"Q34202\",\n\t\"nai-yuc\",\n\totherNames = {\"Kwevkepaya\", \"Wipukpaya\", \"Tolkepaya\", \"Yavepe\"},\n\tscripts = Latn,\n}\n\nm[\"nai-yup\"] = {\n\t\"Yupiltepeque\",\n\t\"Q25339628\",\n\t\"nai-xin\",\n\totherNames\
      \ = {\"Jupiltepeque\", \"Yupiltepec\", \"Jupiltepec\", \"Xupiltepec\"},\n\tscripts = Latn,\n}\n\nm[\"nds-de\"] = {\n\t\"German Low German\",\n\t\"Q25433\",\n\t\"gmw\",\n\tscripts = Latn,\n\tancestors = {\"nds\"},\n\twikimedia_codes = {\"nds\"},\n}\n\n\
      m[\"nds-nl\"] = {\n\t\"Dutch Low Saxon\",\n\t\"Q516137\",\n\t\"gmw\",\n\tscripts = Latn,\n\tancestors = {\"nds\"},\n}\n\nm[\"ngf-pro\"] = {\n\t\"Proto-Trans-New Guinea\",\n\tnil,\n\t\"ngf\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"nic-bco-pro\"\
      ] = {\n\t\"Proto-Benue-Congo\",\n\tnil,\n\t\"nic-bco\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"nic-bod-pro\"] = {\n\t\"Proto-Bantoid\",\n\tnil,\n\t\"nic-bod\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"nic-gur-pro\"]\
      \ = {\n\t\"Proto-Gur\",\n\tnil,\n\t\"nic-gur\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"nic-pro\"] = {\n\t\"Proto-Niger-Congo\",\n\tnil,\n\t\"nic\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"nic-ubg-pro\"] = {\n\t\"Proto-Ubangian\"\
      ,\n\tnil,\n\t\"nic-ubg\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"nub-har\"] = {\n\t\"Haraza\",\n\t\"Q19572059\",\n\t\"nub\",\n\totherNames = {\"Ḥarāza\"},\n\tscripts = {\"Arab\", \"Latn\"},\n}\n\nm[\"nub-pro\"] = {\n\t\"Proto-Nubian\"\
      ,\n\tnil,\n\t\"nub\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"omq-cha-pro\"] = {\n\t\"Proto-Chatino\",\n\tnil,\n\t\"omq-cha\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"omq-pro\"] = {\n\t\"Proto-Oto-Manguean\",\n\t\"Q33669\"\
      ,\n\t\"omq\",\n\totherNames = {\"Proto-Otomanguean\", \"Proto-Oto-Mangue\"},\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"omq-maz-pro\"] = {\n\t\"Proto-Mazatec\",\n\tnil,\n\t\"omq-maz\",\n\totherNames = {\"Proto-Mazatecan\"},\n\ttype = \"\
      reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"omq-mix-pro\"] = {\n\t\"Proto-Mixtecan\",\n\tnil,\n\t\"omq-mix\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"omq-otp-pro\"] = {\n\t\"Proto-Oto-Pamean\",\n\tnil,\n\t\"omq-otp\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = Latn,\n\tancestors = {\"omq-pro\"},\n}\n\nm[\"omq-teo\"] = {\n\t\"Teojomulco Chatino\",\n\t\"Q25340451\",\n\t\"omq-cha\",\n\tscripts = Latn,\n}\n\nm[\"omq-zap-pro\"] = {\n\t\"Proto-Zapotecan\",\n\tnil,\n\t\"omq-zap\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"omq-zpc-pro\"] = {\n\t\"Proto-Zapotec\",\n\tnil,\n\t\"omq-zpc\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"oto-otm-pro\"] = {\n\t\"Proto-Otomi\",\n\tnil,\n\t\"oto-otm\",\n\ttype = \"reconstructed\",\n\tscripts\
      \ = Latn,\n\tancestors = {\"oto-pro\"},\n}\n\nm[\"oto-pro\"] = {\n\t\"Proto-Otomian\",\n\tnil,\n\t\"oto\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n    ancestors = {\"omq-otp-pro\"},\n}\n\nm[\"paa-kom\"] = {\n\t\"Kómnzo\",\n\t\"Q18344310\",\n\t\
      \"paa-yam\",\n\totherNames = {\"Komnzo\", \"Kómnjo\", \"Komnjo\", \"Kamundjo\"},\n\tscripts = Latn,\n}\n\nm[\"paa-kwn\"] = {\n\t\"Kuwani\",\n\t\"Q6449056\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"paa-nun\"] = {\n\t\"Nungon\",\n\tnil,\n\t\"paa\",\n\t\
      scripts = Latn,\n}\n\nm[\"phi-din\"] = {\n\t\"Dinapigue Agta\",\n\t\"Q16945774\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"phi-kal-pro\"] = {\n\t\"Proto-Kalamian\",\n\tnil,\n\t\"phi-kal\",\n\totherNames = {\"Proto-Calamian\"},\n\ttype = \"reconstructed\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"phi-nag\"] = {\n\t\"Nagtipunan Agta\",\n\t\"Q16966111\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"phi-pro\"] = {\n\t\"Proto-Philippine\",\n\t\"Q18204898\",\n\t\"phi\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"\
      },\n}\n\nm[\"poz-abi\"] = {\n\t\"Abai\",\n\t\"Q19570729\",\n\t\"poz-san\",\n\totherNames = {\"Sembuak\", \"Tubu\"},\n\tscripts = Latn,\n}\n\nm[\"poz-bal\"] = {\n\t\"Baliledo\",\n\t\"Q4850912\",\n\t\"poz\",\n\tscripts = Latn,\n}\n\nm[\"poz-btk-pro\"] =\
      \ {\n\t\"Proto-Bungku-Tolaki\",\n\tnil,\n\t\"poz-btk\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-cet-pro\"] = {\n\t\"Proto-Central-Eastern Malayo-Polynesian\",\n\t\"Q2269883\",\n\t\"poz-cet\",\n\ttype = \"reconstructed\",\n\
      \tscripts = {\"Latinx\"},\n}\n\nm[\"poz-hce-pro\"] = {\n\t\"Proto-Halmahera-Cenderawasih\",\n\tnil,\n\t\"poz-hce\",\n\totherNames = {\"Proto-South Halmahera - West New Guinea\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-lgx-pro\"\
      ] = {\n\t\"Proto-Lampungic\",\n\tnil,\n\t\"poz-lgx\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-mcm-pro\"] = {\n\t\"Proto-Malayo-Chamic\",\n\tnil,\n\t\"poz-mcm\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\n\
      m[\"poz-mly-pro\"] = {\n\t\"Proto-Malayic\",\n\tnil,\n\t\"poz-mly\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-msa-pro\"] = {\n\t\"Proto-Malayo-Sumbawan\",\n\tnil,\n\t\"poz-msa\",\n\ttype = \"reconstructed\",\n\tscripts = {\"\
      Latinx\"},\n}\n\nm[\"poz-oce-pro\"] = {\n\t\"Proto-Oceanic\",\n\t\"Q141741\",\n\t\"poz-oce\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-pep-pro\"] = {\n\t\"Proto-Eastern Polynesian\",\n\tnil,\n\t\"poz-pep\",\n\totherNames =\
      \ {\"Proto-Eastern-Polynesian\", \"Proto-East Polynesian\", \"Proto-East-Polynesian\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-pnp-pro\"] = {\n\t\"Proto-Nuclear Polynesian\",\n\tnil,\n\t\"poz-pnp\",\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-pol-pro\"] = {\n\t\"Proto-Polynesian\",\n\t\"Q1658709\",\n\t\"poz-pol\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-pro\"] = {\n\t\"Proto-Malayo-Polynesian\",\n\t\"Q3832960\",\n\t\"\
      poz\",\n\totherNames = {\"Proto-Western Malayo-Polynesian\"}, -- Western is subsumed into general Proto-MP\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-ssw-pro\"] = {\n\t\"Proto-South Sulawesi\",\n\tnil,\n\t\"poz-ssw\",\n\ttype\
      \ = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-sus-pro\"] = {\n\t\"Proto-Sunda-Sulawesi\",\n\tnil,\n\t\"poz-sus\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"poz-swa-pro\"] = {\n\t\"Proto-North Sarawak\",\n\tnil,\n\
      \t\"poz-swa\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"pqe-pro\"] = {\n\t\"Proto-Eastern Malayo-Polynesian\",\n\t\"Q2269883\",\n\t\"pqe\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"qfa-cka-pro\"] = {\n\t\
      \"Proto-Chukotko-Kamchatkan\",\n\t\"Q7251837\",\n\t\"qfa-cka\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"qfa-hur-pro\"] = {\n\t\"Proto-Hurro-Urartian\",\n\tnil,\n\t\"qfa-hur\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"\
      },\n}\n\nm[\"qfa-kms-pro\"] = {\n\t\"Proto-Kam-Sui\",\n\tnil,\n\t\"qfa-kms\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"qfa-kor-pro\"] = {\n\t\"Proto-Korean\",\n\t\"Q467883\",\n\t\"qfa-kor\",\n\ttype = \"reconstructed\",\n\tscripts = {\"\
      Latinx\"},\n}\n\nm[\"qfa-tak-pro\"] = {\n\t\"Proto-Tai-Kadai\",\n\tnil,\n\t\"qfa-tak\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"qfa-yen-pro\"] = {\n\t\"Proto-Yeniseian\",\n\t\"Q27639\",\n\t\"qfa-yen\",\n\ttype = \"reconstructed\",\n\t\
      scripts = {\"Latinx\"},\n}\n\nm[\"qfa-yuk-pro\"] = {\n\t\"Proto-Yukaghir\",\n\tnil,\n\t\"qfa-yuk\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"qwe-kch\"] = {\n\t\"Kichwa\",\n\t\"Q1740805\",\n\t\"qwe\",\n\totherNames = {\"Kichwa shimi\"\
      , \"Runashimi\", \"Runa\", \"Quichua\", \"Quecha\", \"Inga\", \"Chimborazo\", \"Imbabura Highland Kichwa\", \"Cañar Highland Quecha\", \"Quechua\"},\n\tscripts = Latn,\n}\n\nm[\"roa-ang\"] = {\n\t\"Angevin\",\n\t\"Q56782\",\n\t\"roa-oil\",\n\totherNames\
      \ = {\"Craonnais\", \"Baugeois\", \"Saumurois\"},\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"œ\" , \"'\"},\n\t\tto   = {\"a\"\t    , \"e\"\t  , \"i\"\t    , \"\
      o\"\t  , \"u\"\t    , \"y\"\t  , \"c\", \"ae\", \"oe\"}},\n}\n\nm[\"roa-bbn\"] = {\n\t\"Bourbonnais-Berrichon\",\n\tnil,\n\t\"roa-oil\",\n\totherNames = {\"Bourbonnais\", \"Berrichon\", \"Moulins\", \"Allier\", \"Nivernais\", \"Haut-Berrichon\", \"Bas-Berrichon\"\
      },\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"œ\" , \"'\"},\n\t\tto   = {\"a\"\t    , \"e\"\t  , \"i\"\t    , \"o\"\t  , \"u\"\t    , \"y\"\t  , \"c\", \"ae\"\
      , \"oe\"}},\n}\n\nm[\"roa-brg\"] = {\n\t\"Bourguignon\",\n\t\"Q508332\",\n\t\"roa-oil\",\n\totherNames = {\"Burgundian\", \"Bregognon\", \"Dijonnais\", \"Morvandiau\", \"Morvandeau\", \"Morvan\", \"Bourguignon-Morvandiau\", \"Mâconnais\", \"Brionnais\"\
      , \"Brionnais-Charolais\", \"Auxerrois\", \"Beaunois\", \"Langrois\", \"Valsaônois\", \"Verduno-Chalonnais\", \"Sédelocien\"},\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\"\
      , \"'\"},\n\t\tto   = {\"a\"     , \"e\"     , \"i\"     , \"o\"     , \"u\"     , \"y\"     , \"c\"}},\n}\n\nm[\"roa-cha\"] = {\n\t\"Champenois\",\n\t\"Q430018\",\n\t\"roa-oil\",\n\totherNames = {\"Bassignot\", \"Langrois\", \"Sennonais\", \"Vallage\"\
      , \"Troyen\", \"Briard\", \"Der\", \"Perthois\", \"Rémois\", \"Argonnais\", \"Porcien\", \"Ardennais\", \"Sugny\"},\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"\
      œ\" , \"'\"},\n\t\tto   = {\"a\"\t    , \"e\"\t  , \"i\"\t    , \"o\"\t  , \"u\"\t    , \"y\"\t  , \"c\", \"ae\", \"oe\"}},\n}\n\nm[\"roa-fcm\"] = {\n\t\"Franc-Comtois\",\n\t\"Q510561\",\n\t\"roa-oil\",\n\totherNames = {\"Frainc-Comtou\", \"Comtois\",\
      \ \"Jurassien\", \"Ajoulot\", \"Vâdais\", \"Taignon\", \"Bisontin\", \"Bousbot\"},\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"œ\" , \"'\"},\n\t\tto   = {\"a\"\
      \t    , \"e\"\t  , \"i\"\t    , \"o\"\t  , \"u\"\t    , \"y\"\t  , \"c\", \"ae\", \"oe\"}},\n}\n\nm[\"roa-gal\"] = {\n\t\"Gallo\",\n\t\"Q37300\",\n\t\"roa-oil\",\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòô\
      ö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"'\"},\n\t\tto   = {\"a\"     , \"e\"     , \"i\"     , \"o\"     , \"u\"     , \"y\"     , \"c\"}},\n}\n\nm[\"roa-leo\"] = {\n\t\"Leonese\",\n\t\"Q34108\",\n\t\"roa-ibe\",\n\tscripts = Latn,\n\tancestors = {\"roa-ole\"\
      },\n}\n\nm[\"roa-lor\"] = {\n\t\"Lorrain\",\n\t\"Q671198\",\n\t\"roa-oil\",\n\totherNames = {\"Gaumais\", \"Vosgien\", \"Welche\", \"Argonnais\", \"Longovicien\", \"Messin\", \"Nancéien\", \"Spinalien\", \"Déodatien\"},\n\tscripts = Latn,\n\tsort_key =\
      \ {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"œ\" , \"'\"},\n\t\tto   = {\"a\"\t    , \"e\"\t  , \"i\"\t    , \"o\"\t  , \"u\"\t    , \"y\"\t  , \"c\", \"ae\", \"oe\"}},\n}\n\nm[\"roa-oan\"] =\
      \ {\n\t\"Navarro-Aragonese\",\n\t\"Q2736184\",\n\t\"roa-ibe\",\n\totherNames = {\"Old Aragonese\"},\n\tscripts = Latn,\n}\n\nm[\"roa-oca\"] = {\n\t\"Old Catalan\",\n\t\"Q15478520\",\n\t\"roa\",\n\tscripts = Latn,\n\tancestors = {\"pro\"},\n\tsort_key =\
      \ {\n\t\tfrom = {\"à\", \"[èé]\", \"[íï]\", \"[òó]\", \"[úü]\", \"ç\", \"·\"},\n\t\tto   = {\"a\", \"e\"   , \"i\"   , \"o\"   , \"u\"   , \"c\"}},\n}\n\nm[\"roa-ole\"] = {\n\t\"Old Leonese\",\n\tnil,\n\t\"roa-ibe\",\n\tscripts = Latn,\n}\n\nm[\"roa-opt\"\
      ] = {\n\t\"Old Portuguese\",\n\t\"Q1072111\",\n\t\"roa-ibe\",\n\totherNames = {\"Galician-Portuguese\", \"Galician Portuguese\", \"Medieval Galician\"},\n\tscripts = Latn,\n}\n\nm[\"roa-orl\"] = {\n\t\"Orléanais\",\n\tnil,\n\t\"roa-oil\",\n\totherNames\
      \ = {\"Beauceron\", \"Solognot\", \"Gâtinais\", \"Blaisois\", \"Vendômois\"},\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"œ\" , \"'\"},\n\t\tto   = {\"a\"\t  \
      \  , \"e\"\t  , \"i\"\t    , \"o\"\t  , \"u\"\t    , \"y\"\t  , \"c\", \"ae\", \"oe\"}},\n}\n\nm[\"roa-poi\"] = {\n\t\"Poitevin-Saintongeais\",\n\t\"Q514123\",\n\t\"roa-oil\",\n\totherNames = {\"Poitevin\", \"Saintongeais\", \"Maraîchin\"},\n\tscripts\
      \ = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"œ\" , \"'\"},\n\t\tto   = {\"a\"\t    , \"e\"\t  , \"i\"\t    , \"o\"\t  , \"u\"\t    , \"y\"\t  , \"c\", \"ae\", \"oe\"}},\n\
      }\n\nm[\"roa-tar\"] = {\n\t\"Tarantino\",\n\t\"Q695526\",\n\t\"roa-itd\",\n\tscripts = Latn,\n\tancestors = {\"nap\"},\n\twikimedia_codes = {\"roa-tara\"},\n}\n\nm[\"roa-tou\"] = {\n\t\"Tourangeau\",\n\tnil,\n\t\"roa-oil\",\n\totherNames = {\"Tourangian\"\
      , \"Tourangean\"},\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"œ\" , \"'\"},\n\t\tto   = {\"a\"\t    , \"e\"\t  , \"i\"\t    , \"o\"\t  , \"u\"\t    , \"y\"\t\
      \  , \"c\", \"ae\", \"oe\"}},\n}\n\nm[\"sai-ajg\"] = {\n\t\"Ajagua\",\n\tnil,\n\totherNames = {\"Axagua\", \"Jagua\"},\n\tscripts = Latn,\n}\n\nm[\"sai-all\"] = {\n\t\"Allentiac\",\n\t\"Q19570789\",\n\t\"sai-hrp\",\n\totherNames = {\"Alyentiyak\", \"Huarpe\"\
      , \"Warpe\"},\n\tscripts = Latn,\n}\n\nm[\"sai-and\"] = { -- not to be confused with 'cbc' or 'ano'\n\t\"Andoquero\",\n\t\"Q16828359\",\n\t\"sai-wit\",\n\totherNames = {\"Miranya\", \"Miranha\", \"Miranha Carapana-Tapuya\", \"Miraña-Carapana-Tapuyo\",\
      \ \"Andokero\", \"Miranya-Karapana-Tapuyo\", \"Miraña\", \"Carapana\"},\n\tscripts = Latn,\n}\n\nm[\"sai-ayo\"] = {\n\t\"Ayomán\",\n\t\"Q16937754\",\n\t\"sai-jir\",\n\totherNames = {\"Ayoman\", \"Ayamán\", \"Ayaman\"},\n\tscripts = Latn,\n}\n\nm[\"sai-bae\"\
      ] = {\n\t\"Baenan\",\n\t\"Q3401998\",\n\totherNames = {\"Baenã\", \"Baenán\", \"Baena\"},\n\tscripts = Latn,\n}\n\nm[\"sai-bag\"] = {\n\t\"Bagua\",\n\t\"Q5390321\",\n\totherNames = {\"Patagón de Bagua\"},\n\tscripts = Latn,\n}\n\nm[\"sai-bet\"] = {\n\t\
      \"Betoi\",\n\t\"Q926551\",\n\t\"qfa-iso\",\n\totherNames = {\"Betoy\", \"Betoya\", \"Betoye\", \"Betoi-Jirara\", \"Jirara\"},\n\tscripts = Latn,\n}\n\nm[\"sai-cac\"] = {\n\t\"Cacán\",\n\t\"Q945482\",\n\totherNames = {\"Kakán\", \"Diaguita\", \"Cacan\"\
      , \"Kakan\", \"Calchaquí\", \"Chaka\", \"Kaka\", \"Kaká\", \"Caca\", \"Caca-Diaguita\", \"Catamarcano\", \"Capayán\", \"Capayana\", \"Yacampis\"},\n\tscripts = Latn,\n}\n\nm[\"sai-caq\"] = {\n\t\"Caranqui\",\n\t\"Q2937753\",\n\t\"sai-bar\",\n\totherNames\
      \ = {\"Cara\", \"Kara\"},\n\tscripts = Latn,\n}\n\nm[\"sai-cat\"] = {\n\t\"Catacao\",\n\t\"Q5051136\",\n\t\"sai-ctc\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"sai-chi\"] = {\n\t\"Chirino\",\n\t\"Q5390321\",\n\tscripts = Latn,\n}\n\nm[\"sai-chn\"] = {\n\t\"\
      Chaná\",\n\t\"Q5072718\",\n\t\"sai-crn\",\n\totherNames = {\"Chana\"},\n\tscripts = Latn,\n}\n\nm[\"sai-chp\"] = {\n\t\"Chapacura\",\n\t\"Q5072884\",\n\t\"sai-cpc\",\n\totherNames = {\"Txapacura\", \"Xapacura\", \"Guapore\", \"Šapakura\", \"Txapakura\"\
      , \"Txapakúra\", \"Xapakúra\"},\n\tscripts = Latn,\n}\n\nm[\"sai-chr\"] = {\n\t\"Charrua\",\n\t\"Q5086680\",\n\t\"sai-crn\",\n\totherNames = {\"Charrúa\", \"Charruá\"},\n\tscripts = Latn,\n}\n\nm[\"sai-chu\"] = {\n\t\"Churuya\",\n\t\"Q5118339\",\n\t\"\
      sai-guh\",\n\totherNames = {\"Churoya\"},\n\tscripts = Latn,\n}\n\nm[\"sai-cmg\"] = {\n\t\"Comechingon\",\n\t\"Q6644203\",\n\totherNames = {\"Comechingón\", \"Comechingona\", \"Comechingone\"},\n\tscripts = Latn,\n}\n\nm[\"sai-cno\"] = {\n\t\"Chono\",\n\
      \t\"Q5104704\",\n\totherNames = {\"Chonos\", \"Caucau\"},\n\tscripts = Latn,\n}\n\nm[\"sai-cnr\"] = {\n\t\"Cañari\",\n\t\"Q5055572\",\n\totherNames = {\"Cañar\"},\n\tscripts = Latn,\n}\n\nm[\"sai-coe\"] = {\n\t\"Coeruna\",\n\t\"Q6425639\",\n\t\"sai-wit\"\
      ,\n\totherNames = {\"Koeruna\"},\n\tscripts = Latn,\n}\n\nm[\"sai-col\"] = {\n\t\"Colán\",\n\t\"Q5141893\",\n\t\"sai-ctc\",\n\totherNames = {\"Colan\"},\n\tscripts = {\"Latinx\"},\n}\n\nm[\"sai-cop\"] = {\n\t\"Copallén\",\n\t\"Q5390321\",\n\tscripts =\
      \ Latn,\n}\n\nm[\"sai-crd\"] = {\n\t\"Coroado Puri\",\n\t\"Q24191321\",\n\t\"sai-mje\",\n\totherNames = {\"Coroado\"},\n\tscripts = Latn,\n}\n\nm[\"sai-ctq\"] = {\n\t\"Catuquinaru\",\n\t\"Q16858455\",\n\totherNames = {\"Catuquinarú\", \"Katukinaru\"},\n\
      \tscripts = Latn,\n}\n\nm[\"sai-cul\"] = {\n\t\"Culli\",\n\t\"Q2879660\",\n\totherNames = {\"Culle\", \"Kulyi\", \"Ilinga\", \"Linga\"},\n\tscripts = Latn,\n}\n\nm[\"sai-cva\"] = {\n\t\"Cueva\",\n\tnil,\n\tscripts = Latn,\n}\n\nm[\"sai-esm\"] = {\n\t\"\
      Esmeralda\",\n\t\"Q3058083\",\n\totherNames = {\"Esmeraldeño\", \"Atacame\", \"Takame\"},\n\tscripts = Latn,\n}\n\nm[\"sai-ewa\"] = {\n\t\"Ewarhuyana\",\n\t\"Q16898104\",\n\tscripts = Latn,\n}\n\nm[\"sai-gay\"] = {\n\t\"Gayón\",\n\t\"Q5528902\",\n\t\"\
      sai-jir\",\n\totherNames = {\"Gayon\"},\n\tscripts = Latn,\n}\n\nm[\"sai-gmo\"] = {\n\t\"Guamo\",\n\t\"Q5613495\",\n\totherNames = {\"Wamo\", \"Santa Rosa\", \"San Jose\", \"Barinas\", \"Guamotey\", \"Guama\"},\n\tscripts = Latn,\n}\n\nm[\"sai-gue\"] =\
      \ {\n\t\"Güenoa\",\n\t\"Q5626799\",\n\t\"sai-crn\",\n\totherNames = {\"Guenoa\"},\n\tscripts = Latn,\n}\n\nm[\"sai-hau\"] = {\n\t\"Haush\",\n\t\"Q3128376\",\n\t\"sai-cho\",\n\totherNames = {\"Manek'enk\"},\n\tscripts = Latn,\n}\n\nm[\"sai-jko\"] = {\n\t\
      \"Jeikó\",\n\t\"Q6176527\",\n\t\"sai-mje\",\n\totherNames = {\"Geicó\", \"Jeicó\", \"Jaikó\", \"Geikó\", \"Yeikó\", \"Jeiko\", \"Geico\", \"Jeico\", \"Jaiko\", \"Geiko\", \"Yeiko\", \"Eyco\"},\n\tscripts = Latn,\n}\n\nm[\"sai-jrj\"] = {\n\t\"Jirajira\"\
      ,\n\tnil,\n\t\"sai-jir\",\n\tscripts = Latn,\n}\n\nm[\"sai-kat\"] = { -- contrast xoo, kzw, sai-xoc\n\t\"Katembri\",\n\t\"Q6375925\",\n\totherNames = {\"Catrimbi\", \"Catembri\", \"Kariri de Mirandela\", \"Mirandela\", \"Kariri\", \"Kiriri\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"sai-mal\"] = {\n\t\"Malalí\",\n\t\"Q6741212\",\n\totherNames = {\"Malali\"},\n\tscripts = Latn,\n}\n\nm[\"sai-mar\"] = {\n\t\"Maratino\",\n\t\"Q6755055\",\n\tscripts = Latn,\n}\n\nm[\"sai-mat\"] = {\n\t\"Matanawi\",\n\t\"Q6786047\"\
      ,\n\totherNames = {\"Matanauí\", \"Matanaui\", \"Matanawü\", \"Mitandua\", \"Moutoniway\"},\n\tscripts = Latn,\n}\n\nm[\"sai-mcn\"] = {\n\t\"Mocana\",\n\t\"Q3402048\",\n\totherNames = {\"Mokana\"},\n\tscripts = Latn,\n}\n\nm[\"sai-men\"] = {\n\t\"Menien\"\
      ,\n\t\"Q16890110\",\n\t\"sai-mje\",\n\totherNames = {\"Menién\"},\n\tscripts = Latn,\n}\n\nm[\"sai-mil\"] = {\n\t\"Millcayac\",\n\t\"Q19573012\",\n\t\"sai-hrp\",\n\totherNames = {\"Milykayak\", \"Huarpe\", \"Warpe\"},\n\tscripts = Latn,\n}\n\nm[\"sai-mlb\"\
      ] = {\n\t\"Malibu\",\n\t\"Q3402048\",\n\totherNames = {\"Malibú\", \"Malebú\"},\n\tscripts = Latn,\n}\n\nm[\"sai-msk\"] = {\n\t\"Masakará\",\n\t\"Q6782426\",\n\t\"sai-mje\",\n\totherNames = {\"Masakara\", \"Masacará\", \"Masacara\"},\n\tscripts = Latn,\n\
      }\n\nm[\"sai-muc\"] = {\n\t\"Mucuchí\",\n\tnil,\n\totherNames = {\"Mucuchi\", \"Mokochi\", \"Mocochí\", \"Mirripú\", \"Maripú\", \"Mucuchí-Maripú\"},\n\tscripts = Latn,\n}\n\nm[\"sai-mue\"] = {\n\t\"Muellama\",\n\t\"Q16886936\",\n\t\"sai-bar\",\n\totherNames\
      \ = {\"Muellamués\"},\n\tscripts = Latn,\n}\n\nm[\"sai-muz\"] = {\n\t\"Muzo\",\n\t\"Q6644203\",\n\tscripts = Latn,\n}\n\nm[\"sai-mys\"] = {\n\t\"Maynas\",\n\t\"Q16919393\",\n\totherNames = {\"Mayna\", \"Maina\", \"Rimachu\"},\n\tscripts = Latn,\n}\n\n\
      m[\"sai-nat\"] = {\n\t\"Natú\",\n\t\"Q9006749\",\n\totherNames = {\"Natu\", \"Peagaxinan\"},\n\tscripts = Latn,\n}\n\nm[\"sai-opo\"] = {\n\t\"Opón\",\n\t\"Q7099152\",\n\t\"sai-car\",\n\totherNames = {\"Opon\", \"Opón-Karare\", \"Opón-Carare\", \"Carare\"\
      , \"Carare-Opón\"},\n\tscripts = Latn,\n}\n\nm[\"sai-oto\"] = {\n\t\"Otomaco\",\n\t\"Q16879234\",\n\t\"sai-otm\",\n\totherNames = {\"Otomako\", \"Otomacan\", \"Otomac\", \"Otomak\"},\n\tscripts = Latn,\n}\n\nm[\"sai-pal\"] = {\n\t\"Palta\",\n\t\"Q3042978\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"sai-pam\"] = {\n\t\"Pamigua\",\n\t\"Q5908689\",\n\t\"sai-otm\",\n\totherNames = {\"Pamiwa\"},\n\tscripts = Latn,\n}\n\nm[\"sai-par\"] = {\n\t\"Paratió\",\n\t\"Q16890038\",\n\totherNames = {\"Paratio\", \"Prarto\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"sai-pnz\"] = {\n\t\"Panzaleo\",\n\t\"Q3123275\",\n\totherNames = {\"Pansaleo\"},\n\tscripts = Latn,\n}\n\nm[\"sai-prh\"] = {\n\t\"Puruhá\",\n\t\"Q3410994\",\n\tscripts = Latn,\n}\n\nm[\"sai-ptg\"] = {\n\t\"Patagón\",\n\tnil,\n\totherNames\
      \ = {\"Patagón de Perico\"},\n\tscripts = Latn,\n}\n\nm[\"sai-pur\"] = {\n\t\"Purukotó\",\n\t\"Q7261622\",\n\t\"sai-car\",\n\totherNames = {\"Purukoto\", \"Purucotó\", \"Purucoto\"},\n\tscripts = Latn,\n}\n\nm[\"sai-pyg\"] = {\n\t\"Payaguá\",\n\t\"Q7156643\"\
      ,\n\t\"sai-guc\",\n\totherNames = {\"Payawá\", \"Payagua\"},\n\tscripts = Latn,\n}\n\nm[\"sai-qmb\"] = {\n\t\"Quimbaya\",\n\t\"Q7272043\",\n\totherNames = {\"Kimbaya\", \"Quindío\", \"Quindio\", \"Quindo\"},\n\tscripts = Latn,\n}\n\nm[\"sai-qtm\"] = {\n\
      \t\"Quitemo\",\n\t\"Q7272651\",\n\t\"sai-cpc\",\n\totherNames = {\"Quitemoca\"},\n\tscripts = Latn,\n}\n\nm[\"sai-rab\"] = {\n\t\"Rabona\",\n\t\"Q6644203\",\n\tscripts = Latn,\n}\n\nm[\"sai-ram\"] = {\n\t\"Ramanos\",\n\t\"Q16902824\",\n\tscripts = Latn,\n\
      }\n\nm[\"sai-sac\"] = {\n\t\"Sácata\",\n\t\"Q5390321\",\n\totherNames = {\"Sacata\", \"Zácata\", \"Chillao\"},\n\tscripts = Latn,\n}\n\nm[\"sai-san\"] = {\n\t\"Sanaviron\",\n\t\"Q16895999\",\n\totherNames = {\"Sanavirón\", \"Sanabirón\", \"Sanabiron\"\
      , \"Sanavirona\", \"Zanavirona\"},\n\tscripts = Latn,\n}\n\nm[\"sai-sap\"] = {\n\t\"Sapará\",\n\t\"Q7420922\",\n\t\"sai-car\",\n\totherNames = {\"Zapará\", \"Zapara\"},\n\tscripts = Latn,\n}\n\nm[\"sai-sec\"] = {\n\t\"Sechura\",\n\t\"Q7442912\",\n\totherNames\
      \ = {\"Sek\", \"Sec\"},\n\tscripts = Latn,\n}\n\nm[\"sai-sin\"] = {\n\t\"Sinúfana\",\n\t\"Q7525275\",\n\totherNames = {\"Cenúfana\", \"Zenúfana\", \"Cinifaná\", \"Sinufana\", \"Sinú\", \"Cenú\", \"Zenú\", \"Finzenú\", \"Fincenú\", \"Pancenú\", \"Sutagao\"\
      },\n\tscripts = Latn,\n}\n\nm[\"sai-tab\"] = {\n\t\"Tabancale\",\n\t\"Q5390321\",\n\totherNames = {\"Aconipa\"},\n\tscripts = Latn,\n}\n\nm[\"sai-tal\"] = {\n\t\"Tallán\",\n\t\"Q16910468\",\n\totherNames = {\"Atalán\", \"Tallan\", \"Tallanca\", \"Atalan\"\
      , \"Sek\"},\n\tscripts = Latn,\n}\n\nm[\"sai-teu\"] = {\n\t\"Teushen\",\n\t\"Q3519243\",\n\totherNames = {\"Tehues\", \"Teuéx\"},\n\tscripts = Latn,\n}\n\nm[\"sai-tim\"] = {\n\t\"Timote\",\n\tnil,\n\totherNames = {\"Cuica\", \"Timote-Cuica\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"sai-tpr\"] = {\n\t\"Taparita\",\n\t\"Q7684460\",\n\t\"sai-otm\",\n\totherNames = {\"Taparito\"},\n\tscripts = Latn,\n}\n\nm[\"sai-trr\"] = {\n\t\"Tarairiú\",\n\t\"Q7685313\",\n\totherNames = {\"Caratiú\"},\n\tscripts = Latn,\n}\n\n\
      m[\"sai-wai\"] = {\n\t\"Waitaká\",\n\t\"Q16918610\",\n\totherNames = {\"Waitaka\", \"Waitacá\", \"Waitaca\", \"Goytacá\", \"Goitacá\", \"Guaitacá\", \"Guiatacá\", \"Guiatacás\", \"Goiatacá\", \"Goiatacás\", \"Guaiatacá\", \"Goytacaz\", \"Goitacaz\", \"\
      Goyataca\", \"Aitacaz\", \"Uetacaz\", \"Uetacá\", \"Outacá\", \"Ouetacá\", \"Eutacá\", \"Itacaz\", \"Vaitacá\"},\n\tscripts = Latn,\n}\n\nm[\"sai-way\"] = {\n\t\"Wayumará\",\n\tnil,\n\t\"sai-car\",\n\totherNames = {\"Wayumara\", \"Wajumará\", \"Wajumara\"\
      , \"Azumara\", \"Guimara\"},\n\tscripts = Latn,\n}\n\nm[\"sai-wnm\"] = {\n\t\"Wanham\",\n\t\"Q16879440\",\n\t\"sai-cpc\",\n\totherNames = {\"Wañam\", \"Wanyam\", \"Huanyam\", \"Uanham\", \"Abitana\"},\n\tscripts = Latn,\n}\n\nm[\"sai-xoc\"] = { -- contrast\
      \ xoo, kzw, sai-kat\n\t\"Xocó\",\n\t\"Q12953620\",\n\totherNames = {\"Xoco\", \"Chocó\", \"Shokó\", \"Shoko\", \"Shocó\", \"Shoco\", \"Choco\", \"Chocaz\", \"Kariri-Xocó\", \"Kariri-Xoco\", \"Kariri-Shoko\", \"Cariri-Chocó\", \"Xukuru-Kariri\", \"Xucuru-Kariri\"\
      , \"Xucuru-Cariri\", \"Xukurú-Kirirí\"},\n\tscripts = Latn,\n}\n\nm[\"sai-yao\"] = {\n\t\"Yao (South America)\",\n\tnil,\n\t\"sai-car\",\n\totherNames = {\"Yao\", \"Jaoi\", \"Yaoi\", \"Yaio\"},\n\tscripts = Latn,\n}\n\nm[\"sai-yar\"] = { -- not the same\
      \ family as 'suy'\n\t\"Yarumá\",\n\t\"Q3505859\",\n\t\"sai-car\",\n\totherNames = {\"Yaruma\"},\n\tscripts = Latn,\n}\n\nm[\"sai-yri\"] = {\n\t\"Yuri\",\n\tnil,\n\t\"sai-tyu\",\n\totherNames = {\"Jurí\"},\n\tscripts = Latn,\n}\n\nm[\"sai-yup\"] = {\n\t\
      \"Yupua\",\n\t\"Q8061430\",\n\t\"sai-tuc\",\n\totherNames = {\"Yupuá\", \"Yupúa\", \"Jupua\", \"Jupuá\", \"Jupúa\", \"Hiupiá\", \"Yupuá-Duriña\", \"Duriña\"},\n\tscripts = Latn,\n}\n\nm[\"sai-yur\"] = {\n\t\"Yurumanguí\",\n\t\"Q1281291\",\n\totherNames\
      \ = {\"Yurumangui\", \"Yurimangí\", \"Yurimangi\", \"Yurimanguí\", \"Yurimangui\"},\n\tscripts = Latn,\n}\n\nm[\"sal-pro\"] = {\n\t\"Proto-Salish\",\n\tnil,\n\t\"sal\",\n\totherNames = {\"Proto-Salishan\"},\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n\
      }\n\nm[\"sem-amm\"] = {\n\t\"Ammonite\",\n\t\"Q279181\",\n\t\"sem-can\",\n\tscripts = {\"Phnx\"},\n\ttranslit_module = \"Phnx-translit\",\n}\n\nm[\"sem-amo\"] = {\n\t\"Amorite\",\n\t\"Q35941\",\n\t\"sem-nwe\",\n\totherNames = {\"Amoritic\"},\n}\n\nm[\"\
      sem-cha\"] = {\n\t\"Chaha\",\n\tnil,\n\totherNames = {\"Cheha\"},\n\tscripts = {\"Ethi\"},\n\ttranslit_module = \"Ethi-translit\",\n}\n\nm[\"sem-dad\"] = {\n\t\"Dadanitic\",\n\t\"Q21838040\",\n\t\"sem-cen\",\n\totherNames = {\"Dadanite\", \"Lihyanite\"\
      , \"Lihyanitic\"},\n\tscripts = {\"Narb\", \"Latn\"}, -- last one if we want entries for transliterations\n}\n\nm[\"sem-dum\"] = {\n\t\"Dumaitic\",\n\tnil,\n\t\"sem-cen\",\n\tscripts = {\"Narb\", \"Latn\"}, -- last one if we want entries for transliterations\n\
      }\n\nm[\"sem-has\"] = {\n\t\"Hasaitic\",\n\t\"Q3541433\",\n\t\"sem-cen\",\n}\n\nm[\"sem-him\"] = {\n\t\"Himyaritic\",\n\t\"Q35604\",\n\t\"sem\",\n\totherNames = {\"Himyarite\", \"Himyari\", \"Himyaric\", \"Himyar\"},\n\tscripts = {\"Arab\", \"Sarb\", \"\
      Latn\"}, -- last one if we want entries for transliterations\n}\n\nm[\"sem-his\"] = {\n\t\"Hismaic\",\n\t\"Q22948260\",\n\t\"sem-cen\",\n\totherNames = {\"Thamudic E\"},\n\tscripts = {\"Narb\", \"Latn\"}, -- last one if we want entries for transliterations\n\
      }\n\nm[\"sem-mhr\"] = {\n\t\"Muher\",\n\t\"Q33743\",\n\t\"sem-eth\",\n\totherNames = {\"Muher Gurage\", \"Muxar\"},\n\tscripts = Latn,\n}\n\nm[\"sem-pro\"] = {\n\t\"Proto-Semitic\",\n\t\"Q1658554\",\n\t\"sem\",\n\ttype = \"reconstructed\",\n\tscripts =\
      \ {\"Latinx\"},\n}\n\nm[\"sem-saf\"] = {\n\t\"Safaitic\",\n\t\"Q472586\",\n\t\"sem-cen\",\n\tscripts = {\"Narb\", \"Latn\"}, -- last one if we want entries for transliterations\n}\n\nm[\"sem-srb\"] = {\n\t\"Old South Arabian\",\n\t\"Q35025\",\n\t\"sem-osa\"\
      ,\n\tscripts = {\"Sarb\"},\n}\n\nm[\"sem-tay\"] = {\n\t\"Taymanitic\",\n\t\"Q24912301\",\n\t\"sem-cen\",\n\totherNames = {\"Taymanite\", \"Thamudic A\"},\n\tscripts = {\"Narb\", \"Latn\"}, -- last one if we want entries for transliterations\n}\n\nm[\"\
      sem-tha\"] = {\n\t\"Thamudic\",\n\t\"Q843030\",\n\t\"sem-cen\",\n}\n\nm[\"sio-pro\"] = { -- NB this is not Proto-Siouan-Catawban 'nai-sca-pro'\n\t\"Proto-Siouan\",\n\t\"Q34181\",\n\t\"sio\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\n\
      m[\"sit-bok\"] = {\n\t\"Bokar\",\n\t\"Q4938727\",\n\t\"sit\",\n\totherNames = {\"Ramo\", \"Pailibo\"},\n\tscripts = Latn,\n}\n\nm[\"sit-cha\"] = {\n\t\"Chairel\",\n\t\"Q5068066\",\n\t\"sit\",\n\tscripts = Latn,\n}\n\nm[\"sit-gkh\"] = {\n\t\"Gokhy\",\n\t\
      \"Q5578069\",\n\t\"sit\",\n\totherNames = {\"Gɔkhý\", \"Gɔkhy\"},\n\tscripts = Latn,\n}\n\nm[\"sit-jap\"] = {\n\t\"Japhug\",\n\t\"Q3162245\",\n\t\"sit\",\n\totherNames = {\"Chabao\", \"rGyalrong\", \"Rgyalrong\", \"Jiarong\", \"Gyarung\", \"Kuru\"},\n\t\
      scripts = Latn,\n}\n\nm[\"sit-liz\"] = {\n\t\"Lizu\",\n\t\"Q6660653\",\n\t\"sit-qia\",\n\tscripts = Latn, -- and Ersu Shaba\n}\n\nm[\"sit-mor\"] = {\n\t\"Moran\",\n\t\"Q6909216\",\n\t\"sit\",\n\totherNames = {\"Morān\"},\n\tscripts = Latn,\n}\n\nm[\"sit-prn\"\
      ] = {\n\t\"Puiron\",\n\t\"Q7259048\",\n\t\"sit\",\n}\n\nm[\"sit-pro\"] = {\n\t\"Proto-Sino-Tibetan\",\n\t\"Q45961\",\n\t\"sit\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"sit-sit\"] = {\n\t\"Situ\",\n\t\"Q19840830\",\n\t\"sit\",\n\totherNames\
      \ = {\"Eastern rGyalrong\", \"rGyalrong\", \"Rgyalrong\", \"rGyalrongic\", \"Gyalrong\", \"Gyarong\", \"rGyarong\", \"Gyarung\", \"Jiarong\", \"Jiarongyu\", \"Jyarong\", \"Jyarung\", \"Yelong\", \"Kuru\"},\n\tscripts = Latn,\n}\n\nm[\"sit-tan-pro\"] =\
      \ {\n\t\"Proto-Tani\",\n\tnil,\n\t\"sit-tan\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\t-- needs verification\n}\n\nm[\"sit-tgm\"] = {\n\t\"Tangam\",\n\t\"Q17041370\",\n\t\"sit-tan\",\n\tscripts = Latn,\n}\n\nm[\"sit-tos\"] = {\n\t\"Tosu\",\n\t\
      \"Q7827899\",\n\t\"sit-qia\",\n\tscripts = Latn, -- also Ersu Shaba\n}\n\nm[\"sit-tsh\"] = {\n\t\"Tshobdun\",\n\t\"Q19840950\",\n\t\"sit\",\n\totherNames = {\"Caodeng\", \"Sidaba\", \"rGyalrong\", \"Rgyalrong\", \"Jiarong\", \"Gyarung\", \"Kuru\"},\n\t\
      scripts = Latn,\n}\n\nm[\"sit-zbu\"] = {\n\t\"Zbu\",\n\t\"Q19841106\",\n\t\"sit\",\n\totherNames = {\"Ribu\", \"Rdzong'bur\", \"Rdzongmbur\", \"Showu\", \"rGyalrong\", \"Rgyalrong\", \"Jiarong\", \"Gyarung\", \"Kuru\"},\n\tscripts = Latn,\n}\n\nm[\"sla-pro\"\
      ] = {\n\t\"Proto-Slavic\",\n\t\"Q747537\",\n\t\"sla\",\n\totherNames = {\"Common Slavic\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\tentry_name = {\n\t\tfrom = {\"[ÀÁÃĀȀȂ]\", \"[àáãāȁȃ]\", \"[ÈÉẼĒȄȆ]\", \"[èéẽēȅȇ]\", \"[ÌÍĨĪȈȊ]\", \"\
      [ìíĩīȉȋ]\", \"[ÒÓÕŌȌȎ]\", \"[òóõōȍȏ]\", \"[ÙÚŨŪȔȖ]\", \"[ùúũūȕȗ]\", \"[ỲÝỸȲ]\", \"[ỳýỹȳ]\", \"[Ǭ]\", \"[ǭ]\", GRAVE, ACUTE, TILDE, MACRON, DGRAVE, INVBREVE},\n\t\tto   = {\"A\", \"a\", \"E\", \"e\", \"I\", \"i\", \"O\", \"o\", \"U\", \"u\", \"Y\", \"y\"\
      , \"Ǫ\", \"ǫ\"}},\n}\n\nm[\"smi-pro\"] = {\n\t\"Proto-Samic\",\n\t\"Q7251862\",\n\t\"smi\",\n\totherNames = {\"Proto-Sami\"},\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"ā\", \"č\" , \"δ\", \"[ëē]\", \"ŋ\" , \"ń\" , \"\
      ō\", \"š\" , \"θ\" , \"%([^()]+%)\"},\n\t\tto   = {\"a\", \"c²\", \"d\", \"e\"   , \"n²\", \"n³\", \"o\", \"s²\", \"t²\"} },\n}\n\nm[\"son-pro\"] = {\n\t\"Proto-Songhay\",\n\tnil,\n\t\"son\",\n\totherNames = {\"Proto-Songhai\"},\n\ttype = \"reconstructed\"\
      ,\n\tscripts = {\"Latinx\"},\n}\n\nm[\"sqj-pro\"] = {\n\t\"Proto-Albanian\",\n\t\"Q18210846\",\n\t\"sqj\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"syd-fne\"] = {\n\t\"Forest Nenets\",\n\t\"Q1295107\",\n\t\"syd\",\n\tscripts =\
      \ {\"Cyrl\"},\n\tentry_name = {\n\t\tfrom = {\"Ӑ\", \"ӑ\", \"[ӖЀ]\", \"[ӗѐ]\", \"[ӢЍ]\", \"[ӣѝ]\", \"Ӯ\", \"ӯ\", BREVE, MACRON, GRAVE, ACUTE, DOTABOVE},\n\t\tto   = {\"А\", \"а\", \"Е\",    \"е\",    \"И\",    \"и\",    \"У\", \"у\"}},\n}\n\nm[\"syd-pro\"\
      ] = {\n\t\"Proto-Samoyedic\",\n\t\"Q7251863\",\n\t\"syd\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"tai-pro\"] = {\n\t\"Proto-Tai\",\n\t\"Q6583709\",\n\t\"tai\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"tai-swe-pro\"\
      ] = {\n\t\"Proto-Southwestern Tai\",\n\tnil,\n\t\"tai-swe\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"tbq-bdg-pro\"] = {\n\t\"Proto-Bodo-Garo\",\n\tnil,\n\t\"tbq-bdg\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\
      }\n\nm[\"tbq-kuk-pro\"] = {\n\t\"Proto-Kuki-Chin\",\n\tnil,\n\t\"tbq-kuk\",\n\totherNames = {\"Proto-Kukish\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"tbq-laz\"] = {\n\t\"Laze\",\n\t\"Q17007626\",\n\t\"tbq\",\n\totherNames =\
      \ {\"Lare\", \"Shuitianhua\"},\n}\n\nm[\"tbq-lol-pro\"] = {\n\t\"Proto-Loloish\",\n\t\"Q7251855\",\n\t\"tbq-lol\",\n\totherNames = {\"Proto-Nisoic\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"tbq-plg\"] = {\n\t\"Pai-lang\",\n\t\
      \"Q2879843\",\n\t\"tbq\",\n\totherNames = {\"Bai-lang\", \"Pailang\", \"Bailang\"},\n\tscripts = {\"Hani\", \"Latinx\"},\n}\n\nm[\"tbq-pro\"] = {\n\t\"Proto-Tibeto-Burman\",\n\t\"Q7251864\",\n\t\"tbq\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"\
      },\n}\n\nm[\"trk-dkh\"] = {\n\t\"Dukhan\",\n\tnil,\n\totherNames = {\"Dukha\"},\n\tscripts = {\"Latn\", \"Cyrl\", \"Mong\"},\n}\n\nm[\"trk-mmk\"] = {\n\t\"Mamluk-Kipchak\",\n\tnil,\n\t\"trk-kip\",\n\tscripts = {\"Latn\", \"Arab\"},\n}\n\nm[\"trk-oat\"\
      ] = {\n\t\"Old Anatolian Turkish\",\n\t\"Q7083390\",\n\t\"trk-ogz\",\n\tscripts = {\"ota-Arab\"},\n\tancestors = {\"trk-ogz-pro\"},\n}\n\nm[\"trk-pro\"] = {\n\t\"Proto-Turkic\",\n\t\"Q3657773\",\n\t\"trk\",\n\ttype = \"reconstructed\",\n\tscripts = {\"\
      Latinx\"},\n}\n\nm[\"tup-gua-pro\"] = {\n\t\"Proto-Tupi-Guarani\",\n\tnil,\n\t\"tup-gua\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"tup-kab\"] = {\n\t\"Kabishiana\",\n\t\"Q15302988\",\n\t\"tup\",\n\totherNames = {\"Kabixiana\"\
      , \"Cabixiana\", \"Cabishiana\", \"Kapishana\", \"Capishana\", \"Kapišana\", \"Cabichiana\", \"Capichana\", \"Capixana\"},\n\tscripts = Latn,\n}\n\nm[\"tup-pro\"] = {\n\t\"Proto-Tupian\",\n\t\"Q10354700\",\n\t\"tup\",\n\ttype = \"reconstructed\",\n\tscripts\
      \ = {\"Latinx\"},\n}\n\nm[\"tuw-pro\"] = {\n\t\"Proto-Tungusic\",\n\tnil,\n\t\"tuw\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"tuw-sol\"] = {\n\t\"Solon\",\n\t\"Q30004\",\n\t\"tuw\",\n}\n\nm[\"und-isa\"] = {\n\t\"Isaurian\",\n\t\
      \"Q16956868\",\n\t\"ine\",\n--\tscripts = {\"Xsux\", \"Hluw\", \"Latn\"},\n}\n\nm[\"und-kas\"] = {\n\t\"Kassite\",\n\t\"Q35612\",\n\totherNames = {\"Cassite\", \"Kassitic\", \"Kaššite\"},\n\tscripts = {\"Xsux\"},\n}\n\nm[\"und-mil\"] = {\n\t\"Milang\"\
      ,\n\t\"Q6850761\",\n\tscripts = {\"Deva\", \"Latn\"},\n}\n\nm[\"und-mmd\"] = {\n\t\"Mimi of Decorse\",\n\t\"Q6862206\",\n\totherNames = {\"Mimi of Gaudefroy-Demombynes\", \"Mimi-D\"},\n\tscripts = Latn,\n}\n\nm[\"und-mmn\"] = {\n\t\"Mimi of Nachtigal\"\
      ,\n\t\"Q6862207\",\n\totherNames = {\"Mimi-N\"},\n\tscripts = Latn,\n}\n\nm[\"und-phi\"] = {\n\t\"Philistine\",\n\t\"Q2230924\",\n\totherNames = {\"Philistian\", \"Philistinian\"},\n}\n\nm[\"und-wji\"] = {\n\t\"Western Jicaque\",\n\t\"Q3178610\",\n\t\"\
      hok\",\n\totherNames = {\"Jicaque of El Palmar\", \"Sula\"},\n\tscripts = Latn,\n}\n\nm[\"urj-mdv-pro\"] = {\n\t\"Proto-Mordvinic\",\n\tnil,\n\t\"urj-mdv\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"urj-prm-pro\"] = {\n\t\"Proto-Permic\"\
      ,\n\tnil,\n\t\"urj-prm\",\n\ttype = \"reconstructed\",\n\tscripts = Latn,\n}\n\nm[\"urj-pro\"] = {\n\t\"Proto-Uralic\",\n\t\"Q288765\",\n\t\"urj\",\n\totherNames = {\"Proto-Finno-Ugric\", \"Proto-Finno-Permic\"}, -- PFU and PFP are subsumed into PU per\
      \ [[Wiktionary:Beer parlour/2015/January#Merging Finno-Volgaic, Finno-Samic, Finno-Permic and Finno-Ugric into Uralic]]\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"urj-ugr-pro\"] = {\n\t\"Proto-Ugric\",\n\t\"Q156631\",\n\t\"urj-ugr\"\
      ,\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"xnd-pro\"] = {\n\t\"Proto-Na-Dene\",\n\tnil,\n\t\"xnd\",\n\totherNames = {\"Proto-Na-Dené\", \"Proto-Athabaskan-Eyak-Tlingit\"},\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n\
      }\n\nm[\"xgn-kha\"] = {\n\t\"Khamnigan Mongol\",\n\t\"Q3196052\",\n\t\"xgn\",\n\totherNames = {\"Khamnigan\", \"Khamnigan Buryat\"},\n\tscripts = {\"Mong\", \"Latn\", \"Cyrl\"},\n}\n\nm[\"xgn-mgr\"] = {\n\t\"Mangghuer\",\n\t\"Q34214\",\n\t\"xgn\",\n\t\
      otherNames = {\"Monguor\", \"Mongour\", \"Mongor\"},\n\tscripts = Latn, -- also \"Mong\", \"Cyrl\" ?\n}\n\nm[\"xgn-mgl\"] = {\n\t\"Mongghul\",\n\t\"Q34214\",\n\t\"xgn\",\n\totherNames = {\"Monguor\", \"Mongour\", \"Mongor\"},\n\tscripts = Latn, -- also\
      \ \"Mong\", \"Cyrl\" ?\n}\n\nm[\"xgn-pro\"] = {\n\t\"Proto-Mongolic\",\n\t\"Q2493677\",\n\t\"xgn\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"ypk-pro\"] = {\n\t\"Proto-Yupik\",\n\tnil,\n\t\"ypk\",\n\ttype = \"reconstructed\",\n\t\
      scripts = {\"Latinx\"},\n}\n\nm[\"zhx-min-pro\"] = {\n\t\"Proto-Min\",\n\t\"Q19646347\",\n\t\"zhx-min\",\n\ttype = \"reconstructed\",\n\tscripts = {\"Latinx\"},\n}\n\nm[\"zhx-sht\"] = {\n\t\"Shaozhou Tuhua\",\n\t\"Q1920769\",\n\t\"zhx\",\n\totherNames\
      \ = {\"Xiangnan Tuhua\", \"Yuebei Tuhua\", \"Shipo\", \"Shina\"},\n\tscripts = {\"Nshu\"},\n}\n\nm[\"zhx-tai\"] = {\n\t\"Taishanese\",\n\t\"Q2208940\",\n\t\"zhx\",\n\totherNames = {\"Toishanese\"},\n\tscripts = {\"Hani\"},\n\tancestors = {\"yue\"},\n}\n\
      \nm[\"zhx-teo\"] = {\n\t\"Teochew\",\n\t\"Q36759\",\n\t\"zhx-min-hai\",\n\totherNames = {\"Chiuchow\"},\n\tscripts = {\"Hani\"},\n\tancestors = {\"nan\"},\n}\n\nm[\"zle-ono\"] = {\n\t\"Old Novgorodian\",\n\t\"Q162013\",\n\t\"zle\",\n\tscripts = {\"Cyrs\"\
      , \"Glag\"},\n\ttranslit_module = \"Cyrs-Glag-translit\",\n\tentry_name = {\n\t\tfrom = {u(0x0484)}, -- kamora\n\t\tto   = {}},\n\tsort_key = {\n\t\tfrom = {\"оу\"},\n\t\tto   = {\"у\" }},\n}\n\nm[\"zlw-ocs\"] = {\n\t\"Old Czech\",\n\t\"Q593096\",\n\t\"\
      zlw\",\n\tscripts = Latn,\n}\n\nm[\"zlw-opl\"] = {\n\t\"Old Polish\",\n\t\"Q149838\",\n\t\"zlw\",\n\tscripts = Latn,\n}\n\nm[\"zlw-pom\"] = {\n\t\"Pomeranian\",\n\t\"Q149588\",\n\t\"zlw\",\n\tscripts = Latn,\n}\n\nm[\"zlw-slv\"] = {\n\t\"Slovincian\",\n\
      \t\"Q36822\",\n\t\"zlw\",\n\tscripts = Latn,\n\tancestors = {\"zlw-pom\"},\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:06.483Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Am&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51785 t=1555362606383176
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:06 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 680699509, 233697413, 702029543
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4580450" pageid="4580450" ns="10" title="Template:m"><revisions><rev user="Surjection" timestamp="2018-11-27T19:42:02Z" contentformat="text/x-wiki" contentmodel="wikitext"
      comment="Protected &quot;[[Template:m]]&quot;: Highly visible template/module: even if it is just a redirect ([Edit=Allow only autoconfirmed users] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">#REDIRECT
      [[Template:mention]]</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:10:06.652Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Amention&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44066 t=1555362606557935
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:06 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1223.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 213655124, 255930252, 696174749
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4064248\" pageid=\"4064248\" ns=\"10\" title=\"Template:mention\"><revisions><rev user=\"Vahagn Petrosyan\" timestamp=\"2018-01-04T20:12:00Z\"\
      \ contentformat=\"text/x-wiki\" contentmodel=\"wikitext\" comment=\"Protected &quot;[[Template:mention]]&quot;: Highly visible template/module ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators]\
      \ (indefinite))\" xml:space=\"preserve\">{{#invoke:links/templates|l_term_t|face=term&lt;noinclude&gt;|demo=term&lt;/noinclude&gt;}}&lt;!--\n\n--&gt;{{#if:{{{lang|}}}|[[Category:m with lang]]}}&lt;!--\n\n--&gt;{{#ifeq:{{PAGENAME}}|RecentChanges||&lt;!--\n\
      \    --&gt;{{#ifeq:{{{1|}}}|und|[[Category:Undetermined language links]]}}&lt;!--\n--&gt;}}&lt;!--\n\n--&gt;{{redlink category|{{{1|}}}|{{{2|}}}|template=m}}&lt;!--\n\n--&gt;&lt;noinclude&gt;{{documentation}}&lt;templatedata&gt;\n{\n\t\"params\": {\n\t\
      \t\"1\": {\n\t\t\t\"label\": \"language code\",\n\t\t\t\"example\": \"en\",\n\t\t\t\"type\": \"string\",\n\t\t\t\"required\": true,\n\t\t\t\"aliases\": [\n\t\t\t\t\"The language code (see [[Wiktionary:Languages]]) for the language that the term is in.\"\
      \n\t\t\t]\n\t\t},\n\t\t\"2\": {\n\t\t\t\"label\": \"term\",\n\t\t\t\"example\": \"example\",\n\t\t\t\"type\": \"wiki-page-name\",\n\t\t\t\"description\": \"The page name to be linked to.\"\n\t\t},\n\t\t\"3\": {\n\t\t\t\"label\": \"alternate text\",\n\t\
      \t\t\"description\": \" Alternate text to display as the link title, if different from the page name. Please do not use this only for adding diacritics or punctuation to the word, as the template can automatically remove these. \",\n\t\t\t\"type\": \"\
      string\"\n\t\t},\n\t\t\"t\": {\n\t\t\t\"description\": \"A gloss or short translation of the word. \",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"lit\": {\n\t\t\t\"description\": \" A literal translation for the term.\"\n\t\t},\n\t\t\"id\": {\n\t\t\t\"\
      label\": \"sense id\",\n\t\t\t\"description\": \"A sense id for the term, which links to anchors on the page set by the {{senseid}} template.\",\n\t\t\t\"example\": \"house\",\n\t\t\t\"type\": \"string\"\n\t\t}\n\t},\n\t\"format\": \"inline\",\n\t\"description\"\
      : \"This template generates a link to an entry in a given language. It links to a specific language-section on the target page, and applies language-specific formatting. It can also show a number of annotations after the linked term.\"\n}\n&lt;/templatedata&gt;\n\
      &lt;/noinclude&gt;</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:06.827Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42980 t=1555362606729262
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:06 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 686359530, 573637428, 699741571
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4282542\" pageid=\"4282542\" ns=\"828\" title=\"Module:links/templates\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T18:56:49Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\tModules used:\n\t[[Module:links]]\n\t[[Module:languages]]\n\t[[Module:scripts]]\n\t[[Module:parameters]]\n\t[[Module:debug]]\n]=]\n\
      \n-- Used in [[Template:l]] and [[Template:m]].\nfunction export.l_term_t(frame)\n\tlocal face = frame.args[\"face\"]\n\tlocal allowSelfLink = frame.args[\"notself\"]; allowSelfLink = not allowSelfLink or allowSelfLink == \"\"\n\t\n\tlocal params = {\n\
      \t\t[1] = {required = true},\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"gloss\"},\n\t\t[\"accel-form\"] = {},\n\t\t[\"accel-nostore\"] = {type = \"boolean\"},\n\t\t[\"accel-translit\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] =\
      \ {},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {alias_of = \"gloss\"},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t}\n\t\n\t-- Compatibility mode for {{term}}.\n\t-- If given a nonempty value, the\
      \ function uses lang= to specify the\n\t-- language, and all the positional parameters shift one number lower.\n\tlocal compat = (frame.args[\"compat\"] or \"\") ~= \"\"\n\t\n\tif compat then\n\t\tparams[\"lang\"] = {},\n\t\ttable.remove(params, 1)\n\t\
      end\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = args[compat and \"lang\" or 1]\n\t\n\t-- Tracking for missing language or und\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"\
      link/no lang\")\n\telseif lang == \"und\" then\n\t\trequire(\"Module:debug\").track(\"link/und\")\n\tend\n\t\n\tlang = lang or \"und\"\n\tlocal sc = args[\"sc\"]\n\t\n\tlocal term = args[(compat and 1 or 2)]\n\tlocal alt = args[(compat and 2 or 3)]\n\t\
      \n\t-- Check parameters\n\tlang = require(\"Module:languages\").getByCode(lang) or\n\t\trequire(\"Module:languages\").err(lang, 1)\n\t\n\tif sc then\n\t\tsc = require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is\
      \ not valid.\")\n\tend\n\t\n\tif not term and not alt and frame.args[\"demo\"] then\n\t\tterm = frame.args[\"demo\"]\n\tend\n\t\n\t-- Forward the information to full_link\n\treturn require(\"Module:links\").full_link( \n\t\t{\n\t\t\tlang = lang, \n\t\t\
      \tsc = sc, \n\t\t\tterm = term,\n\t\t\talt = alt, \n\t\t\tid = args[\"id\"], \n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgenders = args[\"g\"], \n\t\t\tgloss = args[\"gloss\"], \n\t\t\tpos = args[\"pos\"], \n\t\t\tlit = args[\"lit\"],\n\
      \t\t\taccel = args[\"accel-form\"] and {\n\t\t\t\tform = args[\"accel-form\"],\n\t\t\t\tnostore = args[\"accel-nostore\"],\n\t\t\t\ttranslit = args[\"accel-translit\"],\n\t\t\t} or nil,\n\t\t},\n\t\tface,\n\t\tallowSelfLink\n\t)\nend\n\n-- Used in [[Template:ll]].\n\
      function export.ll(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2] = { allow_empty = true },\n\t\t[3] = {},\n\t\t[\"notself\"] = { type = \"boolean\", default = false },\n\t\t[\"id\"] = {},\n\t}\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\tlocal allowSelfLink = not args[\"notself\"]\n\t\n\tlocal lang = args[1]\n\tlang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, 1)\n\t\n\tlocal text = args[2]\n\tlocal\
      \ alt = args[3]\n\tif text == \"\" then\n\t\treturn alt or \"\"\n\tend\n\t\n\tlocal id = args[\"id\"]\n\t\n\treturn require(\"Module:links\").language_link(\n\t\t{\n\t\t\tterm = text,\n\t\t\talt = alt,\n\t\t\tlang = lang,\n\t\t\tid = id\n\t\t},\n\t\tallowSelfLink\n\
      \t)\nend\n\nfunction export.def_t(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn require(\"Module:links\").english_links(args[1])\n\
      end\n\n\nfunction export.linkify_t(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\targs[1] = mw.text.trim(args[1])\n\t\n\tif\
      \ args[1] == \"\" or args[1]:find(\"[[\", nil, true) then\n\t\treturn args[1]\n\telse\n\t\treturn \"[[\" .. args[1] .. \"]]\"\n\tend\nend\n\nfunction export.section_link_t(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\t\n\treturn require(\"Module:links\").section_link(args[1])\nend\n\nfunction export.language_name_link_t(frame)\n\tlocal face = frame.args[\"face\"]\n\tlocal allowSelfLink = frame.args[\"notself\"]; allowSelfLink\
      \ = not allowSelfLink or allowSelfLink == \"\"\n\t\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"gloss\"},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"\
      ] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {alias_of = \"gloss\"},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"w\"] = { type = \"boolean\", default = false },\n\t}\n\t\n\t-- Compatibility mode for {{term}}.\n\t-- If given a nonempty\
      \ value, the function uses lang= to specify the\n\t-- language, and all the positional parameters shift one number lower.\n\tlocal compat = (frame.args[\"compat\"] or \"\") ~= \"\"\n\t\n\tif compat then\n\t\tparams[\"lang\"] = {},\n\t\ttable.remove(params,\
      \ 1)\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = args[compat and \"lang\" or 1]\n\t\n\t-- Tracking for missing language or und\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"\
      link/no lang\")\n\telseif lang == \"und\" then\n\t\trequire(\"Module:debug\").track(\"link/und\")\n\tend\n\t\n\tlang = lang or \"und\"\n\tlocal sc = args[\"sc\"]\n\t\n\tlocal term = args[(compat and 1 or 2)]\n\tlocal alt = args[(compat and 2 or 3)]\n\t\
      \n\t-- Check parameters\n\tlang = require(\"Module:languages\").getByCode(lang) or\n\t\trequire(\"Module:languages\").err(lang, 1)\n\tif sc then\n\t\tsc = require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not\
      \ valid.\")\n\tend\n\t\n\tif not term and not alt and frame.args[\"demo\"] then\n\t\tterm = frame.args[\"demo\"]\n\tend\n\t\n\t--[[\n\t\tAdd a language name, linked to Wikipedia if the Wikipedia parameter is set to true.\n\t\tForward the information to\
      \ full_link.\n\t]]\n\tlocal language_name = args.w and lang:makeWikipediaLink() or lang:getCanonicalName()\n\t\n\tif term == \"-\" then\n\t\treturn language_name\n\telse\n\t\treturn language_name .. \" \" ..\n\t\t\trequire(\"Module:links\").full_link(\
      \ \n\t\t\t\t{\n\t\t\t\t\tlang = lang, \n\t\t\t\t\tsc = sc, \n\t\t\t\t\tterm = term, \n\t\t\t\t\talt = alt, \n\t\t\t\t\tid = args[\"id\"], \n\t\t\t\t\ttr = args[\"tr\"], \n\t\t\t\t\tts = args[\"ts\"], \n\t\t\t\t\tgenders = args[\"g\"], \n\t\t\t\t\tgloss\
      \ = args[\"gloss\"], \n\t\t\t\t\tpos = args[\"pos\"], \n\t\t\t\t\tlit = args[\"lit\"]\n\t\t\t\t},\n\t\t\t\tface,\n\t\t\t\tallowSelfLink\n\t\t\t)\n\tend\nend\n\nfunction export.light_link_t(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t\
      [2] = { required = true },\n\t\t[3] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"langname\"] = { required = true },\n\t}\n\t\n\tlocal args = frame:getParent().args\n\t\n\tfor key, value in pairs (params) do\n\t\tif value.required then\n\t\t\tif not args[key] then\n\
      \t\t\t\terror('Parameter \"' .. key .. '\" is required.')\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn require(\"Module:links\").light_link{  \n\t\tlangCode = args[1], \n\t\tterm = args[2], \n\t\talt = args[3], \n\t\tscCode = args.sc or \"Latn\",  \n\t\tlangName\
      \ = args.langname\n\t}\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:07.022Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aredlink+category&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56853 t=1555362606916290
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:07 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1231.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 758290198, 566535933, 689259562
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5379564" pageid="5379564" ns="10" title="Template:redlink category"><revisions><rev user="Mnemosientje" timestamp="2019-03-07T14:12:31Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">&lt;!--
      This is a list of entries that won't be checked for redlinks. Usually, they are large entries, where redlink checking can cause module errors.
      --&gt;{{#switch:{{PAGENAME}}|-ere|a|and|animal|book|box|do|dog|fish|heart|e|gold|green|I|iron|language|light|man|me|mies|mouth|one|salt|smoke|sun|te|tea|water|wind|一|人|母|女|水|目|Spanish diminutives of given names|Common Russian verbs|Ancient Greek Swadesh list|Frequency dictionary of the modern Russian language (the Russian National Corpus)/1|Frequency dictionary of the modern Russian language (the Russian National Corpus)/8|=|&lt;!--

      The last five refer to Appendix:Spanish diminutives of given names, Appendix:Common Russian verbs, Appendix:Frequency dictionary of the modern Russian language (the Russian National Corpus)/1, Appendix:Frequency dictionary of the modern Russian language (the Russian National Corpus)/8; the namespace has been stripped.

          --&gt;{{#switch:{{NAMESPACE}}||Reconstruction|Appendix=&lt;!--

              This is the list of languages with redlink checking enabled.
              --&gt;{{#switch:{{{1}}}|afa-pro|ang|cel-pro|egy|es|fi|gem-pro|gml|got|grc|iir-pro|ine-pro|it|itc-pro|map-pro|non|poz-pro|poz-pol-pro|pt|ru|sem-pro|sit-pro|sla-pro|te|zh|cmn|yue|nan|hak=&lt;!-- testing
                  --&gt;{{#ifeq:{{isValidPageName|{{{2|}}}}}|valid|&lt;!--
                      --&gt;{{#invoke:redlink category|cat|{{{1}}}|{{{2}}}|template={{{template|-}}}}}&lt;!--
                  --&gt;}}&lt;!--
              --&gt;}}&lt;!--
          --&gt;}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:07.188Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AisValidPageName&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41244 t=1555362607099565
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:07 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1226.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 500681231, 643580167, 706774140
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="288906" pageid="288906" ns="10" title="Template:isValidPageName"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T18:15:16Z" contentformat="text/x-wiki"
      contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:isValidPageName]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite)
      [Move=Allow only template editors and administrators] (in..." xml:space="preserve">{{#ifeq:{{{1}}}|-||{{#invoke:ugly hacks|is_valid_page_name|{{{1}}}}}}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:10:07.361Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Augly+hacks&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=37878 t=1555362607273729
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:07 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 685966558, 645347959, 703927995
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4300282\" pageid=\"4300282\" ns=\"828\" title=\"Module:ugly hacks\"><revisions><rev user=\"Rua\" timestamp=\"2018-01-04T23:40:32Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"Removed some unused functions\" xml:space=\"preserve\">local export = {}\n\nfunction export.explode(frame)\n\tlocal wanted_index = tonumber(frame.args[3])\n \n\tlocal count = 1\n\tfor item in mw.text.gsplit(frame.args[1],\
      \ frame.args[2], true) do\n\t\tif count == wanted_index then\n\t\t\treturn item\n\t\tend\n\t\tcount = count + 1\t\n\tend\n\t\n\treturn \"\"\nend\n\nfunction export.substr(frame)\n\treturn mw.ustring.sub(frame.args[1] or \"\", tonumber(frame.args[2]) or\
      \ 1, tonumber(frame.args[3]) or -1)\nend\n\nfunction export.find(frame)\n\treturn mw.ustring.find(frame.args[1] or \"\", frame.args[2] or \"\", 1, true) or \"\"\nend\n\nfunction export.find_pattern(frame)\n\treturn mw.ustring.find(frame.args[1] or \"\"\
      , frame.args[2] or \"\", 1, false) or \"\"\nend\n\nfunction export.replace(frame)\n\treturn (mw.ustring.gsub(frame.args[1] or \"\", frame.args[2] or \"\", frame.args[3] or \"\"))\nend\n\nfunction export.match(frame)\n\treturn (mw.ustring.match(frame.args[1]\
      \ or \"\", frame.args[2] or \"\"))\nend\n\nfunction export.escape_wiki(frame)\n\treturn mw.text.nowiki(frame.args[1] or \"\")\nend\n\nfunction export.escape_html(frame)\n\treturn mw.text.encode(frame.args[1] or \"\")\nend\n\nfunction export.is_valid_page_name(frame)\n\
      \tlocal res = mw.title.new(frame.args[1])\n\tif res then\n\t\treturn \"valid\"\n\telse\n\t\treturn \"\"\n\tend\nend\n\nreturn setmetatable({ }, {\n\t__index = function(self, key)\n\t\tlocal m_debug = require('Module:debug')\n\t\tlocal frame = mw.getCurrentFrame()\n\
      \t\tlocal pframe = frame:getParent()\n\t\tlocal tname = pframe and pframe:getTitle()\n\n\t\tm_debug.track('ugly hacks/' .. key)\n\t\tif pframe then\n\t\t\tm_debug.track('ugly hacks/' .. key .. '/from ' .. tname)\n\t\telse\n\t\t\tmw.log(debug.traceback('ugly\
      \ hacks: parent frame not available'))\n\t\tend\n\t\treturn export[key]\t\n\tend\n})</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:07.532Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Adebug&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41609 t=1555362607435093
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:07 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1234.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 206748633, 500970002, 705923289
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4109235\" pageid=\"4109235\" ns=\"828\" title=\"Module:debug\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-12-25T05:19:47Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 51139735 by [[Special:Contributions/Erutuon|Erutuon]] ([[User talk:Erutuon|talk]]): restore if needed\" xml:space=\"preserve\">local export = {}\n\nlocal escape\ndo\n\tlocal escapes = {\n\t\
      \t[\"\\a\"] = \"a\", [\"\\b\"] = \"b\", [\"\\f\"] = \"f\", [\"\\n\"] = \"n\", [\"\\r\"] = \"r\",\n\t\t[\"\\t\"] = \"t\", [\"\\v\"] = \"v\", [\"\\\\\"] = \"\\\\\", [\"\\\"\"] = '\"', [\"'\"] = \"'\",\n\t}\n\t\n\tlocal function helper(char)\n\t\treturn escapes[char]\
      \ and \"\\\\\" .. escapes[char]\n\t\t\tor (\"\\\\%03d\"):format(char:byte())\n\tend\n\t\n\t-- Escape control characters, backslash, double quote, and bytes that aren't\n\t-- used in UTF-8.\n\t-- Escape stuff that can't be saved in a MediaWiki page, like\
      \ invalid UTF-8\n\t-- and NFD character sequences? Hard.\n\t-- Similar to string.format(\"%q\", str), which does not use C-like simple\n\t-- escapes and does not escape bytes that are not used in UTF-8.\n\tescape = function (str)\n\t\treturn (str:gsub(\"\
      [%z\\1-\\31\\\\\\\"\\127\\192\\193\\245-\\255]\", helper))\n\tend\nend\n\nexport.escape = escape\n\n-- Convert a value to a string\nfunction export.dump(value, prefix, tsort)\n\tlocal t = type(value)\n\t\n\tprefix = prefix or \"\"\n\t\n\tif t == \"string\"\
      \ then\n\t\treturn '\"' .. escape(value) .. '\"'\n\telseif t == \"table\" then\n\t\tlocal str_table = {}\n\t\t\n\t\ttable.insert(str_table, \" {\")\n\t\t\n\t\tfor key, val in require(\"Module:table\").sortedPairs(value, tsort) do\n\t\t\ttable.insert(str_table,\
      \ \" \" .. prefix .. \"\\t[\" .. export.dump(key, prefix .. \"\\t\") .. \"] = \" .. export.dump(val, prefix .. \"\\t\"):gsub(\"^ \", \"\") .. \",\")\n\t\tend\n\t\t\n\t\ttable.insert(str_table, \" \" .. prefix .. \"}\")\n\t\t\n\t\treturn table.concat(str_table,\
      \ \"\\n\")\n\telse\n\t\treturn tostring(value)\n\tend\nend\n\n\nfunction export.highlight_dump(value, prefix, tsort, options)\n\toptions = options or {}\n\t\n\tlocal func = options.modified and \"modified_dump\" or \"dump\"\n\t\n\tlocal dump = export[func](value,\
      \ prefix, tsort)\n\t\n\t-- Remove spaces at beginnings of lines (which are simply to force a &lt;pre&gt;&lt;/pre&gt; tag).\n\tdump = dump:gsub(\"^ \", \"\")\n\tdump = dump:gsub(\"\\n \", \"\\n\")\n\t\n\treturn export.highlight(dump)\nend\n\n\n-- Returns\
      \ true if table contains a table as one of its values\nlocal function containsTable(t)\n\tfor key, value in pairs(t) do\n\t\tif type(value) == \"table\" then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\n\n\nlocal function containsTablesWithSize(t,\
      \ size)\n\tfor key, value in pairs(t) do\n\t\tif type(value) == \"table\" and require(\"Module:table\").size(value) ~= size then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\t\n\n\n--[=[\n\tConvert a value to a string.\n\tLike dump below, but\
      \ if a table has consecutive numbered keys and does not\n\thave a table as one of its values, it will be placed on a single line.\n\tUsed by [[Module:User:Erutuon/script recognition]].\n]=]\nfunction export.modified_dump(value, prefix, tsort)\n\tlocal\
      \ t = type(value)\n\t\n\tprefix = prefix or \"\"\n\t\n\tif t == \"string\" then\n\t\treturn '\"' .. value .. '\"'\n\telseif t == \"table\" then\n\t\tlocal str_table = {}\n\t\t\n\t\tlocal containsTable = containsTable(value)\n\t\tlocal consecutive = require(\"\
      Module:table\").isArray(value)\n\t\tif consecutive and not containsTable or containsTable and containsTablesWithSize(value, 3) then\n\t\t\ttable.insert(str_table, \"{\")\n\t\t\t\n\t\t\tfor key, val in require(\"Module:table\").sortedPairs(value, tsort)\
      \ do\n\t\t\t\tif containsTable then\n\t\t\t\t\ttable.insert(str_table, \"\\n\\t\" .. prefix)\n\t\t\t\telse\n\t\t\t\t\ttable.insert(str_table, \" \")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif type(key) == \"string\" then\n\t\t\t\t\ttable.insert(str_table, \"[\"\
      \ .. export.modified_dump(key) .. \"] = \")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\ttable.insert(str_table, type(key) == \"number\" and type(val) == \"number\" and string.format(\"0x%05X\", val) or export.modified_dump(val))\n\t\t\t\t\n\t\t\t\tif not (consecutive\
      \ and #value == 3) or type(key) == \"number\" and value[key + 1] then\n\t\t\t\t\ttable.insert(str_table, \",\")\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif containsTable then\n\t\t\t\ttable.insert(str_table, \"\\n\" .. prefix)\n\t\t\telse\n\t\t\t\ttable.insert(str_table,\
      \ \" \")\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(str_table, \"}\")\n\t\t\treturn table.concat(str_table)\n\t\tend\n\t\t\n\t\ttable.insert(str_table, \" {\")\n\t\t\n\t\tfor key, val in require(\"Module:table\").sortedPairs(value, tsort) do\n\t\t\ttable.insert(str_table,\
      \ \" \" .. prefix .. \"\\t[\" .. export.modified_dump(key, prefix .. \"\\t\") .. \"] = \" .. export.modified_dump(val, prefix .. \"\\t\"):gsub(\"^ \", \"\") .. \",\")\n\t\tend\n\t\t\n\t\ttable.insert(str_table, \" \" .. prefix .. \"}\")\n\t\t\n\t\treturn\
      \ table.concat(str_table, \"\\n\")\n\telseif t == \"number\" and value &gt; 46 then\n\t\treturn string.format(\"0x%05X\", value)\n\telse\n\t\treturn tostring(value)\n\tend\nend\n\t\n\nfunction export.track(key)\n\tlocal frame = mw.getCurrentFrame()\n\t\
      if key then\n\t\tif type(key) ~= \"table\" then\n\t\t\tkey = { key }\n\t\tend\n\t\t\n\t\tfor i, value in pairs(key) do\n\t\t\tpcall(frame.expandTemplate, frame, { title = 'tracking/' .. value })\n\t\tend\n\telse\n\t\terror('No tracking key supplied to\
      \ the function \"' .. track .. '\".')\n\tend\nend\n\n\n-- Trigger a script error from a template\nfunction export.error(frame)\n\terror(frame.args[1] or \"(no message specified)\")\nend\n\n--[[\n\tConvenience function for generating syntaxhighlight tags.\n\
      \tDisplay defaults to block.\n\tOptions is a table. To display inline text with HTML highlighting:\n\t\t{ inline = true, lang = \"html\" }\n]]\nfunction export.highlight(content, options)\n\tif type(content) == \"table\" then\n\t\toptions = content\n\t\
      \toptions = {\n\t\t\tlang = options.lang or \"lua\",\n\t\t\tinline = options.inline and true\n\t\t}\n\t\treturn function(content)\n\t\t\treturn mw.getCurrentFrame():extensionTag{\n\t\t\t\tname = \"syntaxhighlight\",\n\t\t\t\tcontent = content,\n\t\t\t\t\
      args = options\n\t\t\t}\n\t\tend\n\telse\n\t\treturn mw.getCurrentFrame():extensionTag{\n\t\t\tname = \"syntaxhighlight\",\n\t\t\tcontent = content,\n\t\t\targs = {\n\t\t\t\tlang = options and options.lang or \"lua\",\n\t\t\t\tinline = options and options.inline\
      \ and true or nil\n\t\t\t}\n\t\t}\n\tend\nend\n\nfunction export.track_unrecognized_args(args, template_name)\n\tlocal function track(code)\n\t\texport.track(template_name .. \"/\" .. code)\n\tend\n\t\n    track(\"unrecognized arg\")\n\t\n\tlocal arg_list\
      \ = {}\n\tfor arg, value in pairs(args) do\n\t\ttrack(\"unrecognized arg/\" .. arg)\n\t\ttable.insert(arg_list, (\"|%s=%s\"):format(arg, value))\n\tend\n\t\n\tmw.log(\n\t\t(\"Unrecognized parameter%s in {{%s}}: %s.\"):format(\n\t\t\targ_list[2] and \"\
      s\" or \"\",\n\t\t\ttemplate_name,\n\t\t\ttable.concat(arg_list, \", \")))\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:32.758Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fis_valid_page_name&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42888 t=1555362632662758
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 687081243, 244048270, 703863110
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/is_valid_page_name" to="Template:tracking/ugly hacks/is valid page name" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/is valid page name" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:10:32.982Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fis_valid_page_name%2Ffrom+Template%3AisValidPageName&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=106867 t=1555362632819850
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1231.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 213883324, 566017802, 695326329
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/is_valid_page_name/from Template:isValidPageName" to="Template:tracking/ugly hacks/is valid page name/from Template:isValidPageName" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/is valid page name/from Template:isValidPageName" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:10:08.363Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aredlink+category&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38054 t=1555362608275858
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:08 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1228.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 195949692, 633201306, 701081214
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5376702\" pageid=\"5376702\" ns=\"828\" title=\"Module:redlink category\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-01-27T00:37:29Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"protected-calling mw.incrementExpensiveFunctionCount doesn&#039;t really work as a way to test if the expensive function count is at or above the limit; index link_object.exists in a protected\
      \ function instead\" xml:space=\"preserve\">local export = {}\n\nfunction export.cat (frame)\n\tlocal redlink_category = \"\"\n\n\tlocal m_languages = require(\"Module:languages\")\n\tlocal code = frame.args[1] -- language code\n\tlocal template = frame.args[\"\
      template\"]\n\n\tlocal lang = m_languages.getByCode(frame.args[1])\n\tlocal entry = require(\"Module:links\").getLinkPage(frame.args[2], lang) -- entry name (parameter 2 in Template:m, Template:l)\n\n\tlocal link_object = mw.title.new (entry)\n\t\n\t--\
      \ Prevent an expensive parser function error. Unfortunately, we can't check\n\t-- the expensive parser function count before running the preceding code\n\t-- in this function.\n\tlocal success, exists\n\tif link_object then\n\t\tsuccess, exists = pcall(function\
      \ () return link_object.exists end)\n\tend\n\n\tif success and not exists then\n\t\tlocal langname = lang:getCanonicalName()\n\t\t\n\t\tredlink_category = \"[[Category:\" .. langname .. \" redlinks]]\"\n\t\tif template and template ~= \"-\" then\n\t\t\t\
      redlink_category = redlink_category .. \"[[Category:\" .. langname .. \" redlinks/\" .. template .. \"]]\"\n\t\tend\n\tend\n\n\treturn redlink_category\n\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:08.534Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aa&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=36164 t=1555362608448243
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:08 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1235.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 934482474, 631076457, 700755357
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5658976" pageid="5658976" ns="10" title="Template:a"><revisions><rev user="-sche" timestamp="2016-07-02T23:45:24Z" contentformat="text/x-wiki" contentmodel="wikitext"
      comment="-sche moved page [[Template:a]] to [[Template:accent]]: per RFM" xml:space="preserve">#REDIRECT [[Template:accent]]</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:10:08.708Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aaccent&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=59267 t=1555362608600805
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:08 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 676247665, 723873868, 686718174
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="55584" pageid="55584" ns="10" title="Template:accent"><revisions><rev user="Erutuon" timestamp="2017-04-25T20:23:34Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="renamed module" xml:space="preserve">{{#invoke:accent qualifier|show}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:08.908Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aaccent+qualifier&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=64818 t=1555362608793284
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:08 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1233.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 926762818, 738499595, 706021731
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4830341\" pageid=\"4830341\" ns=\"828\" title=\"Module:accent qualifier\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-07-09T19:52:04Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"convert to using aliases table\" xml:space=\"preserve\">local export = {}\nlocal m_qualifier = require(\"Module:qualifier\")\n\nfunction export.format_qualifiers(qualifiers)\n\tlocal m_data\
      \ = mw.loadData(\"Module:accent qualifier/data\")\n\t\n\tif type(qualifiers) ~= \"table\" then\n\t\tqualifiers = { qualifiers }\n\tend\n\t\n\tlocal accents = {}\n\tlocal categories = {}\n\t\n\tfor _, accent in ipairs(qualifiers) do\n\t\tlocal data\n\t\t\
      \n\t\t-- Replace an alias with the label that has a data table.\n\t\tif m_data.aliases[accent] then\n\t\t\taccent = m_data.aliases[accent]\n\t\tend\n\t\t\n\t\t-- Retrieve the label's data table.\n\t\tif m_data.labels[accent] then\n\t\t\tdata = m_data.labels[accent]\n\
      \t\tend\n\t\t\n\t\t-- Use the link and displayed text in the data table, if they exist.\n\t\tif data then\n\t\t\tif data.link then\n\t\t\t\ttable.insert(accents, \"[[w:\" .. data.link .. \"|\" ..\n\t\t\t\t\t(data.display or data.link) .. \"]]\")\n\t\t\t\
      elseif data.display then\n\t\t\t\ttable.insert(accents, data.display)\n\t\t\tend\n\t\t\t\n\t\t\t--[[\n\t\t\tif data[accent] then\n\t\t\t\tif data[accent].type == \"sound change\" then\n\t\t\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms\
      \ with pronunciations exhibiting \" .. accent)\n\t\t\t\tend\n\t\t\tend\n\t\t\t]]\n\t\telse\n\t\t\ttable.insert(accents, accent)\n\t\tend\n\tend\n\t\n\treturn m_qualifier.format_qualifier(accents)\nend\n\n-- Called by {{accent}} or {{a}}.\nfunction export.show(frame)\n\
      \tlocal args = frame.getParent and frame:getParent().args or frame\n\t\n\tif (not args[1] or args[1] == \"\") and mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\treturn m_qualifier.format_qualifier{ '{{{1}}}' }\n\tend\n\t\n\tlocal params =\
      \ {\n\t\t[1] = {required = true, list = true}\n\t}\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\treturn export.format_qualifiers(args[1])\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:09.077Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aqualifier&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44408 t=1555362608983052
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:09 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 674156984, 241167595, 697025978
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6098679\" pageid=\"6098679\" ns=\"828\" title=\"Module:qualifier\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-05-08T23:55:07Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"allow string to be supplied to format_qualifier\" xml:space=\"preserve\">local export = {}\n\nfunction export.format_qualifier(list)\n\tif type(list) ~= \"table\" then\n\t\tlist = { list\
      \ }\n\tend\n\t\n\tif #list == 0 then\n\t\treturn ''\n\tend\n\n\treturn '&lt;span class=\"ib-brac qualifier-brac\"&gt;(&lt;/span&gt;' ..\n\t       '&lt;span class=\"ib-content qualifier-content\"&gt;' ..\n\t       table.concat(list, '&lt;span class=\"ib-comma\
      \ qualifier-comma\"&gt;,&lt;/span&gt; ') ..\n\t\t   '&lt;/span&gt;&lt;span class=\"ib-brac qualifier-brac\"&gt;)&lt;/span&gt;'\nend\n\nfunction export.qualifier_t(frame)\n\tlocal params = {\n\t   [1] = {list = true, required = true},\n\t}\n\t\n\tlocal\
      \ args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal subvarieties = mw.loadData(\"Module:qualifier/subvarieties\")\n\t\n\tfor i, label in ipairs(args[1]) do\n\t\tif subvarieties[label] then\n\t\t\trequire(\"Module:debug\"\
      ).track(\"qualifier/subvarieties\")\n\t\t\t--[[\n\t\t\t\tcurrently not working:\n\t\t\tlocal lang = subvarieties[label].languages[1]\n\t\t\trequire(\"Module:debug\").track(\"qualifier/subvarieties/\" .. lang)\n\t\t\t]]\n\t\tend\n\tend\n\n\treturn export.format_qualifier(args[1])\n\
      end\n\nfunction export.sense_t(frame)\n\tlocal params = {\n\t   [1] = {list = true, required = true},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn export.format_qualifier(args[1])\n\t\t.. '&lt;span\
      \ class=\"ib-colon sense-qualifier-colon\"&gt;:&lt;/span&gt;'\nend\n\nfunction export.gloss_t(frame)\n\tlocal params = {\n\t   [1] = {required = true},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\t\
      return '&lt;span class=\"gloss-brac\"&gt;(&lt;/span&gt;&lt;span class=\"gloss-content\"&gt;' ..\n\t\t\targs[1] .. '&lt;/span&gt;&lt;span class=\"gloss-brac\"&gt;)&lt;/span&gt;'\nend\n\nfunction export.non_gloss_definition_t(frame)\n\tlocal params = {\n\
      \t   [1] = {required = true},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn '&lt;span class=\"use-with-mention\"&gt;' .. require(\"Module:links\").english_links(args[1]) .. '&lt;/span&gt;'\nend\n\
      \t\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:09.280Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aaccent+qualifier%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50648 t=1555362609153792
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:09 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1234.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 677360691, 826396736, 704942903
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4830339\" pageid=\"4830339\" ns=\"828\" title=\"Module:accent qualifier/data\"><revisions><rev user=\"Knyȝt\" timestamp=\"2019-04-06T17:47:51Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\n\nlocal CE = '&lt;small class=\"ce-date2\"&gt;CE&lt;/small&gt;'\nlocal BCE = '&lt;small class=\"ce-date2\"&gt;BCE&lt;/small&gt;'\n\
      \n-- A\n\nlabels[\"AAVE\"] = {\n\tlink = \"African American Vernacular English\",\n\tdisplay = \"AAVE\"\n}\n\nlabels[\"æ-tensing\"] = {\n\tlink = \"æ-tensing\",\n\ttype = \"sound change\"\n}\naliases[\"ae-tensing\"] = \"æ-tensing\"\n\nlabels[\"Anglicised\"\
      ] = {\n\tlink = \"Anglicisation#Anglicisation of non-English-language vocabulary and names\",\n\tdisplay = \"Anglicised\"\n}\naliases[\"Anglicized\"] = \"Anglicised\"\n\nlabels[\"Aran\"] = {\n\tlink = \"Aran Islands\",\n\tdisplay = \"Aran\"\n}\n\nlabels[\"\
      ar-Cairene\"] = {\n\tlink = \"Egyptian Arabic\",\n\tdisplay = \"Cairene\"\n}\naliases[\"Cairene\"] = \"ar-Cairene\"\n\nlabels[\"Arvanite\"] = {\n\tlink = \"Arvanitika\",\n\tdisplay = \"Arvanite\"\n}\n\nlabels[\"Ashkenazi Hebrew\"] = {\n\tlink = \"Ashkenazi\
      \ Hebrew\",\n\tdisplay = \"Ashkenazi Hebrew\"\n}\naliases[\"Ashkenazi\"] = \"Ashkenazi Hebrew\"\n\nlabels[\"Australia\"] = {\n\tlink = \"Australian English phonology\",\n\tdisplay = \"General Australian\"\n}\naliases[\"AU\"] = \"Australia\"\naliases[\"\
      AuE\"] = \"Australia\"\naliases[\"Aus\"] = \"Australia\"\naliases[\"AusE\"] = \"Australia\"\naliases[\"GenAus\"] = \"Australia\"\naliases[\"General Australian\"] = \"Australia\"\n\n-- B\n\nlabels[\"BE-nl\"] = {\n\tlink = \"Belgian Dutch\",\n\tdisplay =\
      \ \"Belgium\"\n}\naliases[\"BE\"] = \"BE-nl\"\n\nlabels[\"Beijing\"] = {\n\tlink = \"Beijing dialect\",\n\tdisplay = \"Beijing\"\n}\n\nlabels[\"Bosnia\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\",\n\
      \tdisplay = \"Bosnia\"\n}\naliases[\"Bosnian\"] = \"Bosnia\"\n\nlabels[\"Boston\"] = {\n\tlink = \"Boston English\",\n\tdisplay = \"Boston\"\n}\naliases[\"Bos\"] = \"Boston\"\n\nlabels[\"Brazil\"] = {\n\tlink = \"Brazilian Portuguese\",\n\tdisplay = \"\
      Brazil\"\n}\naliases[\"BP\"] = \"Brazil\"\naliases[\"BR\"] = \"Brazil\"\naliases[\"Brazilian Portuguese\"] = \"Brazil\"\n\nlabels[\"Burträsk\"] = {\n\tlink = \"Burträsk\",\n}\n\nlabels[\"Bygdeå\"] = {\n\tlink = \"Bygdeå\",\n}\n\n-- C\n\nlabels[\"Canada\"\
      ] = {\n\tlink = \"Canadian English\",\n\tdisplay = \"Canada\"\n}\naliases[\"CA\"] = \"Canada\"\naliases[\"Canadian\"] = \"Canada\"\n\nlabels[\"Canadian Shift\"] = {\n\tlink = \"Canadian Shift\",\n\tdisplay = \"Canadian Vowel Shift\",\n\ttype = \"sound\
      \ change\"\n}\naliases[\"Canadian shift\"] = \"Canadian Shift\"\naliases[\"Canadian Vowel Shift\"] = \"Canadian Shift\"\naliases[\"Canadian vowel shift\"] = \"Canadian Shift\"\n\nlabels[\"Carioca\"] = {\n\tlink = \"Carioca#Carioca Dialect\",\n\tdisplay\
      \ = \"Carioca\"\n}\naliases[\"RJ\"] = \"Carioca\"\n\nlabels[\"Castilian\"] = {\n\tlink = \"Castilian Spanish\",\n\tdisplay = \"Castilian\"\n}\naliases[\"Spain\"] = \"Castilian\"\n\nlabels[\"Central Catalan\"] = {\n\tlink = \"Central Catalan\",\n\tdisplay\
      \ = \"Central\",\n}\n\nlabels[\"central Germany\"] = {\n\tdisplay = \"central Germany\"\n}\naliases[\"central German\"] = \"central Germany\"\naliases[\"Central German\"] = \"central Germany\"\naliases[\"Central Germany\"] = \"central Germany\"\n\nlabels[\"\
      central Italy\"] = {\n\tlink = \"Central Italian\",\n\tdisplay = \"central Italy\"\n}\naliases[\"central Italian\"] = \"central Italy\"\naliases[\"Central Italian\"] = \"central Italy\"\naliases[\"Central Italy\"] = \"central Italy\"\n\nlabels[\"Central\
      \ Scotland\"] = {\n\tlink = \"Central Scots\",\n\tdisplay = \"Central Scotland\"\n}\n\nlabels[\"ceceo\"] = {\n\tlink = \"ceceo\",\n\tdisplay = \"''ceceo'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Classical\"] = {\n\tlink = \"Classical Latin\"\
      ,\n\tdisplay = \"Classical\"\n}\n\nlabels[\"Classical Sanskrit\"] = {\n\tlink = \"Sanskrit#Classical Sanskrit\",\n\tdisplay = \"Classical\"\n}\n\nlabels[\"Cois Fharraige\"] = {\n   link = \"Gaeltacht Cois Fharraige\",\n   display = \"Cois Fharraige\"\n\
      }\naliases[\"CF\"] = \"Cois Fharraige\"\n\nlabels[\"Connacht\"] = {\n\tlink = \"Connacht Irish\",\n\tdisplay = \"Connacht\"\n}\n\nlabels[\"Cork\"] = {\n\tlink = \"Gaeltacht#Cork Gaeltacht\",\n\tdisplay = \"Cork\"\n}\n\nlabels[\"cot-caught\"] = {\n\tlink\
      \ = \"Cot–caught merger\",\n\tdisplay = \"''cot''–''caught'' merger\",\n\ttype = \"sound change\"\n}\naliases[\"caught-cot\"] = \"cot-caught\"\n\nlabels[\"Croatia\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\"\
      ,\n\tdisplay = \"Croatia\"\n}\naliases[\"Croatian\"] = \"Croatia\"\n\nlabels[\"cure-force\"] = {\n\tlink = \"w:Cure–force merger\",\n\tdisplay = \"''cure''–''force'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"cy-N\"] = {\n\tlink = \"Welsh language#Dialects\"\
      ,\n\tdisplay = \"North Wales\"\n}\naliases[\"cy-g\"] = \"cy-N\"\n\nlabels[\"cy-S\"] = {\n\tlink = \"Welsh language#Dialects\",\n\tdisplay = \"South Wales\"\n}\naliases[\"cy-h\"] = \"cy-S\"\n\n-- D\n\nlabels[\"Dari\"] = {\n\tlink = \"Dari Persian\",\n\t\
      display = \"Dari\"\n}\n\nlabels[\"Delhi\"] = {\n    display = \"Delhi Hindi\"\n}\n\nlabels[\"distinción\"] = {\n\tlink = \"distinción\",\n\tdisplay = \"''z''-''s'' distinction\",\n\ttype = \"sound change\"\n}\naliases[\"distincion\"] = \"distinción\"\n\
      \n\n-- E\n\nlabels[\"Ecclesiastical\"] = {\n\tlink = \"Ecclesiastical Latin\",\n\tdisplay = \"Ecclesiastical\"\n}\n\nlabels[\"Egyptological\"] = {\n\tlink = \"Egyptian language#Egyptological pronunciation\",\n\tdisplay = \"modern Egyptological\"\n}\naliases[\"\
      modern Egyptological\"] = \"Egyptological\"\n\nlabels[\"Estuary English\"] = {\n\tlink = \"Estuary English\"\n}\n\n-- F\n\nlabels[\"father-bother\"] = {\n\tlink = \"Father–bother merger\",\n\tdisplay = \"''father''-''bother'' merger\",\n\ttype = \"sound\
      \ change\"\n}\n\nlabels[\"FS\"] = {\n\tlink = \"Standard French\",\n\tdisplay = \"FS\"\n}\n\nlabels[\"FV\"] = {\n\tlink = \"French Flemish\",\n\tdisplay = \"French Flanders\"\n}\n\n-- G\n\nlabels[\"GenAm\"] = {\n\tlink = \"General American\"\n}\naliases[\"\
      GA\"] = \"GenAm\"\naliases[\"General American\"] = \"GenAm\"\n\nlabels[\"Geordie\"] = {\n\tlink = \"Geordie\"\n}\n\nlabels[\"Gheg\"] = {\n\tlink = \"Gheg Albanian\",\n\tdisplay = \"Gheg\"\n}\n\nlabels[\"Givi\"] = {\n\tlink = \"Giv, South Khorasan\",\n\t\
      display = \"Givi\"\n}\n\nlabels[\"Glenties\"] = {\n\tlink = \"Glenties\",\n\tdisplay = \"The Glenties\"\n}\n\nlabels[\"grc-byz1\"] = {\n\tlink = \"Medieval Greek\",\n\tdisplay = '10&lt;sup&gt;th&lt;/sup&gt; ' .. CE .. ' Byzantine'\n}\n\nlabels[\"grc-byz2\"\
      ] = {\n\tlink = \"Medieval Greek\",\n\tdisplay = '15&lt;sup&gt;th&lt;/sup&gt; ' .. CE .. ' Constantinopolitan'\n}\n\nlabels[\"grc-cla\"] = {\n\tlink = \"Ancient Greek phonology\",\n\tdisplay = '5&lt;sup&gt;th&lt;/sup&gt; ' .. BCE .. ' Attic'\n}\n\nlabels[\"\
      grc-koi1\"] = {\n\tlink = \"Koine Greek phonology\",\n\tdisplay = '1&lt;sup&gt;st&lt;/sup&gt; ' .. CE .. ' Egyptian'\n}\n\nlabels[\"grc-koi2\"] = {\n\tlink = \"Koine Greek phonology\",\n\tdisplay = '4&lt;sup&gt;th&lt;/sup&gt; ' .. CE .. ' Koine'\n}\n\n\
      -- H\n\nlabels[\"hbo\"] = {\n\tlink = \"Biblical Hebrew#Phonology\",\n\tdisplay = \"Biblical Hebrew\"\n}\naliases[\"Biblical Hebrew\"] = \"hbo\"\n\nlabels[\"Hong Kong\"] = {\n\tlink = \"Hong Kong English\",\n\tdisplay = \"Hong Kong\"\n}\naliases[\"HK\"\
      ] = \"Hong Kong\"\n\nlabels[\"horse-hoarse\"] = {\n    link = \"horse–hoarse merger\",\n    display = \"without the ''horse''–''hoarse'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Hössjö\"] = {\n\tlink = \"sv:Hössjö\",\n}\n\nlabels[\"hy-E\"] =\
      \ {\n\tlink = \"Eastern Armenian language\",\n\tdisplay = \"Eastern Armenian\"\n}\n\nlabels[\"hy-IR\"] = {\n\tlink = \"Armenian Iranians#Culture and language\",\n\tdisplay = \"Eastern Armenian - Iran\"\n}\n\nlabels[\"hy-W\"] = {\n\tlink = \"Western Armenian\
      \ language\",\n\tdisplay = \"Western Armenian\"\n}\n\nlabels[\"hy-Y\"] = {\n\tlink = \"Yerevan\",\n\tdisplay = \"Eastern Armenian - Yerevan\"\n}\n\n-- I\n\nlabels[\"IL\"] = {\n\tlink = \"Modern Hebrew phonology\",\n\tdisplay = \"Modern Israeli Hebrew\"\
      \n}\naliases[\"Israeli Hebrew\"] = \"IL\"\naliases[\"Modern Hebrew\"] = \"IL\"\naliases[\"Modern Israeli\"] = \"IL\"\naliases[\"Modern Israeli Hebrew\"] = \"IL\"\naliases[\"Modern/Israeli Hebrew\"] = \"IL\"\n\nlabels[\"InE\"] = {\n\tlink = \"Indian English\"\
      ,\n\tdisplay = \"Indian English\"\n}\n\nlabels[\"IR\"] = {\n\tlink = \"Western Persian\",\n\tdisplay = \"Iranian Persian\"\n}\n\nlabels[\"Ireland\"] = {\n\tlink = \"Hiberno-English\",\n\tdisplay = \"Ireland\"\n}\naliases[\"HE\"] = \"Ireland\"\naliases[\"\
      IE\"] = \"Ireland\"\n\nlabels[\"Italian Hebrew\"] = {\n\tlink = \"Italian Hebrew\",\n\tdisplay = \"Italian Hebrew\"\n}\n\n-- J\n\nlabels[\"Johor-Selangor\"] = {\n\tlink = \"Malayan languages\",\n\tdisplay = \"Johor-Selangor\"\n}\n\n-- K\n\nlabels[\"Kabul,\
      \ Peshawar\"] = {\n\tlink = \"Pashto dialects\",\n\tdisplay = \"Kabul, Peshawar\"\n}\n\nlabels[\"Kalix\"] = {\n\tlink = \"Kalix\",\n}\n\nlabels[\"Kandahar\"] = {\n\tlink = \"Kandahari Pashto\",\n\tdisplay = \"Kandahar\"\n}\naliases[\"ps-Kandahar\"] = \"\
      Kandahar\"\n\nlabels[\"Kerry\"] = {\n\tlink = \"Gaeltacht#Kerry Gaeltacht\",\n\tdisplay = \"Kerry\"\n}\n\nlabels[\"xme-ham\"] = {\n\tdisplay = \"Hamadani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-mah\"] = {\n\tdisplay = \"Mahallati\",\n\t\
      link = \"Kermanic languages\",\n}\n\nlabels[\"xme-von\"] = {\n\tdisplay = \"Vonishuni\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-del\"] = {\n\tdisplay = \"Delijani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-kas\"] = {\n\tdisplay\
      \ = \"Kashani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-kes\"] = {\n\tdisplay = \"Kese'i\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-mey\"] = {\n\tdisplay = \"Meyme'i\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-abz\"\
      ] = {\n\tdisplay = \"Abuzeydabadi\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-aby\"] = {\n\tdisplay = \"Abyanehi\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-far\"] = {\n\tdisplay = \"Farizandi\",\n\tlink = \"Kermanic languages\"\
      ,\n}\n\nlabels[\"xme-jow\"] = {\n\tdisplay = \"Jowshaqani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-qoh\"] = {\n\tdisplay = \"Qohrudi\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-yar\"] = {\n\tdisplay = \"Yarandi\",\n\tlink = \"\
      Kermanic languages\",\n}\n\nlabels[\"xme-tar\"] = {\n\tdisplay = \"Tari\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-sed\"] = {\n\tdisplay = \"Sedehi\",\n\tlink = \"Kermanic languages\",\n}\n\n\nlabels[\"xme-ard\"] = {\n\tdisplay = \"Ardestani\"\
      ,\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-zef\"] = {\n\tdisplay = \"Zefre'i\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-isf\"] = {\n\tdisplay = \"Isfahani\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-kaf\"] = {\n\tdisplay\
      \ = \"Kafroni\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-var\"] = {\n\tdisplay = \"Varzenei\",\n\tlink = \"Kermanic languages\",\n}\n\nlabels[\"xme-nay\"] = {\n\tdisplay = \"Nayini\",\n\tlink = \"Nayini language\",\n}\n\nlabels[\"xme-vaf\"\
      ] = {\n\tdisplay = \"Vafsi\",\n\tlink = \"Vafsi dialect\",\n}\n\nlabels[\"xme-ast\"] = {\n\tdisplay = \"Ashtiani language\",\n\tlink = \"nyq\",\n}\n\nlabels[\"xme-xun\"] = {\n\tdisplay = \"Khunsari\",\n\tlink = \"Khunsari language\",\n}\n\nlabels[\"xme-nat\"\
      ] = {\n\tdisplay = \"Natanzi\",\n\tlink = \"Natanzi language\",\n}\n\nlabels[\"xme-soi\"] = {\n\tdisplay = \"Soi\",\n\tlink = \"Soi language\",\n}\n\nlabels[\"xme-gaz\"] = {\n\tdisplay = \"Gazi\",\n\tlink = \"Gazi language\",\n}\n\nlabels[\"xme-ana\"]\
      \ = {\n\tdisplay = \"Anaraki\",\n\tlink = \"Nayini language\",\n}\n\nlabels[\"xme-ker\"] = {\n\tdisplay = \"Kermani\",\n\tlink = \"Zoroastrian Dari language\",\n}\n\nlabels[\"xme-yaz\"] = {\n\tdisplay = \"Yazdi\",\n\tlink = \"Zoroastrian Dari language\"\
      ,\n}\n\n-- L\n\nlabels[\"LAm\"] = {\n\tlink = \"Spanish language in the Americas\",\n\tdisplay = \"Latin American\"\n}\n\nlabels[\"Late Egyptian\"] = {\n\tlink = \"Late Egyptian language\",\n\tdisplay = \"reconstructed Late Egyptian\"\n}\n\nlabels[\"Latinate\"\
      ] = {\n\tlink = \"Latin#Phonology\",\n\tdisplay = \"Latinate\"\n}\n\nlabels[\"lleísmo\"] = {\n\tlink = \"Yeísmo\",\n\tdisplay = \"''ll''-''y'' distinction\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Lövånger\"] = {\n\tlink = \"Lövånger\",\n}\n\nlabels[\"\
      Luleå\"] = {\n\tlink = \"Luleå\",\n}\n\n-- M\n\nlabels[\"Mary-marry-merry\"] = {\n\tlink = \"Mary–marry–merry merger\",\n\tdisplay = \"''Mary''–''marry''–''merry'' merger\",\n\ttype = \"sound change\"\n}\naliases[\"Mmmm\"] = \"Mary-marry-merry\"\n\nlabels[\"\
      Mayo\"] = {\n\tlink = \"Gaeltacht Iorrais agus Acaill\",\n\tdisplay = \"Mayo\"\n}\n\nlabels[\"Medio-Late Egyptian\"] = {\n\tlink = \"Late Egyptian language\",\n\tdisplay = \"reconstructed Medio-Late Egyptian\"\n}\n\nlabels[\"Middle Egyptian\"] = {\n\t\
      link = \"Egyptian language#Middle Egyptian\",\n\tdisplay = \"reconstructed Middle Egyptian\"\n}\n\nlabels[\"Midwestern US\"] = {\n\tlink = \"Midwestern United States#Linguistic characteristics\",\n\tdisplay = \"Midwestern US\"\n}\naliases[\"Midwest US\"\
      ] = \"Midwestern US\"\naliases[\"Midwest US English\"] = \"Midwestern US\"\naliases[\"Midwestern US English\"] = \"Midwestern US\"\n\nlabels[\"Mizrahi Hebrew\"] = {\n\tlink = \"Mizrahi Hebrew\",\n\tdisplay = \"Mizrahi Hebrew\"\n}\naliases[\"Mizrahi\"]\
      \ = \"Mizrahi Hebrew\"\naliases[\"Mizrakhi\"] = \"Mizrahi Hebrew\"\naliases[\"Mizrachi\"] = \"Mizrahi Hebrew\"\naliases[\"Mizrakhi Hebrew\"] = \"Mizrahi Hebrew\"\naliases[\"Mizrachi Hebrew\"] = \"Mizrahi Hebrew\"\n\nlabels[\"MLE\"] = {\n\tlink = \"Multicultural\
      \ London English\",\n\tdisplay = \"MLE\"\n}\n\nlabels[\"Montenegro\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\",\n\tdisplay = \"Montenegro\"\n}\naliases[\"Montenegrin\"] = \"Montenegro\"\n\nlabels[\"\
      Munster\"] = {\n\tlink = \"Munster Irish\",\n\tdisplay = \"Munster\"\n}\n\n-- N\n\nlabels[\"Netherlands\"] = {\n\tlink = \"Dutch phonology\",\n\tdisplay = \"Netherlands\"\n}\naliases[\"NL\"] = \"Netherlands\"\n\nlabels[\"New Latin\"] = {\n\tlink = \"New\
      \ Latin\"\n}\n\nlabels[\"New York\"] = {\n\tlink = \"New York dialect#Linguistic features\",\n\tdisplay = \"NYC\"\n}\naliases[\"NY\"] = \"New York\"\naliases[\"NYC\"] = \"New York\"\n\nlabels[\"New Zealand\"] = {\n\tlink = \"New Zealand English phonology\"\
      ,\n\tdisplay = \"General New Zealand\"\n}\naliases[\"NZ\"] = \"New Zealand\"\naliases[\"GNZ\"] = \"New Zealand\"\naliases[\"General New Zealand\"] = \"New Zealand\"\n\nlabels[\"non-Mary-marry-merry\"] = {\n\tlink = \"Mary–marry–merry merger\",\n\tdisplay\
      \ = \"''Mary''–''marry''–''merry'' distinction\",\n\ttype = \"sound change\"\n}\naliases[\"nMmmm\"] = \"non-Mary-marry-merry\"\n\nlabels[\"non-rhotic\"] = {\n\tlink = \"Rhoticity in English\",\n\tdisplay = \"non-rhotic\"\n}\naliases[\"nonrhotic\"] = \"\
      non-rhotic\"\n\nlabels[\"non-weak vowel\"] = {\n\tlink = \"Weak vowel merger\",\n\tdisplay = \"weak vowel distinction\",\n\ttype = \"sound change\"\n}\n\nlabels[\"northern and central Germany\"] = {\n\tdisplay = \"northern Germany, central Germany\"\n\
      }\naliases[\"north and central German\"] = \"northern and central Germany\"\naliases[\"North and Central German\"] = \"northern and central Germany\"\naliases[\"north and central Germany\"] = \"northern and central Germany\"\naliases[\"North and Central\
      \ Germany\"] = \"northern and central Germany\"\naliases[\"northern and central German\"] = \"northern and central Germany\"\naliases[\"Northern and Central German\"] = \"northern and central Germany\"\naliases[\"Northern and Central Germany\"] = \"northern\
      \ and central Germany\"\n\nlabels[\"Northern England\"] = {\n\tlink = \"English language in Northern England\",\n\tdisplay = \"Northern England\"\n}\naliases[\"North England\"] = \"Northern England\"\n\nlabels[\"northern Germany\"] = {\n\tdisplay = \"\
      northern Germany\"\n}\naliases[\"north German\"] = \"northern Germany\"\naliases[\"North German\"] = \"northern Germany\"\naliases[\"north Germany\"] = \"northern Germany\"\naliases[\"North Germany\"] = \"northern Germany\"\naliases[\"northern German\"\
      ] = \"northern Germany\"\naliases[\"Northern German\"] = \"northern Germany\"\naliases[\"Northern Germany\"] = \"northern Germany\"\n\nlabels[\"Northern Scotland\"] = {\n\tlink = \"Northern Scots\",\n\tdisplay = \"Northern Scotland\"\n}\n\n-- O\n\nlabels[\"\
      Old Egyptian\"] = {\n\tlink = \"Egyptian language#Old Egyptian\",\n\tdisplay = \"reconstructed Old Egyptian\"\n}\n\nlabels[\"Osaka\"] = {\n\tlink = \"Kansai dialect\",\n\tdisplay = \"Osaka\"\n}\n\n-- P\n\nlabels[\"Palestinian Hebrew\"] = {\n\tlink = \"\
      Palestinian vocalization\",\n\tdisplay = \"Palestinian Hebrew\"\n}\n\nlabels[\"pin-pen\"] = {\n\tlink = \"pin–pen merger\",\n\tdisplay = \"''pin''–''pen'' merger\",\n\ttype = \"sound change\"\n}\naliases[\"pen-pin\"] = \"pin-pen\"\n\nlabels[\"Philippine\"\
      ] = {\n\tlink = \"Philippine English\",\n\tdisplay = \"Philippine\"\n}\naliases[\"Philippines\"] = \"Philippine\"\n\nlabels[\"Portugal\"] = {\n\tlink = \"European Portuguese\",\n\tdisplay = \"Portugal\"\n}\naliases[\"EP\"] = \"Portugal\"\naliases[\"PT\"\
      ] = \"Portugal\"\n\nlabels[\"ps-Kabul\"] = {\n\tlink = \"Pashto dialects\",\n\tdisplay = \"Kabuli\"\n}\n\n-- Q\n\nlabels[\"Quanzhou\"] = {\n\tlink = \"Quanzhou\"\n}\n\nlabels[\"Quetta\"] = {\n\tlink = \"Pashto dialects\",\n\tdisplay = \"Quetta\"\n}\n\n\
      -- R\n\nlabels[\"r-dissimilation\"] = {\n\tlink = \"Dissimilation\",\n\tdisplay = \"''r''-dissimilation\",\n\ttype = \"sound change\"\n}\n\nlabels[\"rhotic\"] = {\n\tlink = \"Rhotic and non-rhotic accents\",\n\tdisplay = \"rhotic\",\n\ttype = \"sound change\"\
      \n}\n\nlabels[\"Riau-Lingga\"] = {\n\tlink = \"Riau-Lingga Sultanate\",\n\tdisplay = \"Riau-Lingga\"\n}\n\nlabels[\"Rioplatense\"] = {\n\tlink = \"Rioplatense Spanish\",\n\tdisplay = \"Rioplatense\"\n}\n\nlabels[\"RP\"] = {\n\tlink = \"Received Pronunciation\"\
      \n}\naliases[\"Received Pronunciation\"] = \"RP\"\n\n-- S\n\nlabels[\"São Paulo\"] = {\n\tlink = \"Brazilian Portuguese\",\n\tdisplay = \"São Paulo\"\n}\n\nlabels[\"Scotland\"] = {\n\tlink = \"Scottish English\",\n\tdisplay = \"Scotland\"\n}\n\nlabels[\"\
      Sephardi Hebrew\"] = {\n\tlink = \"Sephardi Hebrew\",\n\tdisplay = \"Sephardi Hebrew\"\n}\naliases[\"Sephardi\"] = \"Sephardi Hebrew\"\n\nlabels[\"Serbia\"] = {\n\tlink = \"Comparison of standard Bosnian, Croatian, Montenegrin and Serbian#Accentuation\"\
      ,\n\tdisplay = \"Serbia\"\n}\naliases[\"Serbian\"] = \"Serbia\"\n\nlabels[\"seseo\"] = {\n\tlink = \"seseo\",\n\tdisplay = \"''seseo'' merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Sistani\"] = {\n\tlink = \"Sistani dialect\",\n\tdisplay = \"Sistani\"\
      \n}\n\nlabels[\"Skellefteå\"] = {\n\tlink = \"Skellefteå\"\n}\n\nlabels[\"South Africa\"] = {\n\tlink = \"South African English phonology\",\n\tdisplay = \"General South African\"\n}\naliases[\"SAE\"] = \"South Africa\"\naliases[\"GSAE\"] = \"South Africa\"\
      \naliases[\"GenSAE\"] = \"South Africa\"\naliases[\"General South African\"] = \"South Africa\"\n\nlabels[\"Southern American English\"] = {\n\tlink = \"Southern American English\"\n}\naliases[\"Southern US\"] = \"Southern American English\"\naliases[\"\
      Southern US English\"] = \"Southern American English\"\naliases[\"Southern U.S. English\"] = \"Southern American English\"\n\nlabels[\"South Brazil\"] = {\n\tlink = \"Brazilian Portuguese\",\n\tdisplay = \"South Brazil\"\n}\n\nlabels[\"southern Germany\"\
      ] = {\n\tdisplay = \"southern Germany\"\n}\naliases[\"south German\"] = \"southern Germany\"\naliases[\"South German\"] = \"southern Germany\"\naliases[\"south Germany\"] = \"southern Germany\"\naliases[\"South Germany\"] = \"southern Germany\"\naliases[\"\
      southern German\"] = \"southern Germany\"\naliases[\"Southern German\"] = \"southern Germany\"\naliases[\"Southern Germany\"] = \"southern Germany\"\n\nlabels[\"Southern Scotland\"] = {\n\tlink = \"Southern Scots\",\n\tdisplay = \"Southern Scotland\"\n\
      }\naliases[\"Southern Scots\"] = \"Southern Scotland\"\n\nlabels[\"St. Louis\"] = {\n\tlink = \"North American regional phonology#St. Louis and vicinity\",\n\tdisplay = \"St. Louis (Missouri)\"\n}\naliases[\"STL\"] = \"St. Louis\"\n\nlabels[\"standard\"\
      ] = {\n\tdisplay = \"standard\"\n}\naliases[\"Standard\"] = \"standard\"\n\nlabels[\"Standard Zhuang\"] = {\n\tlink = \"Standard Zhuang\",\n\tdisplay = \"Standard Zhuang\"\n}\n\nlabels[\"Swedish\"] = {\n\tlink = \"Swedish pronunciation\",\n\tdisplay =\
      \ \"Swedish\"\n}\n\nlabels[\"Syrian Hebrew\"] = {\n\tlink = \"Syrian Jews#Pronunciation of Hebrew\",\n\tdisplay = \"Syrian Hebrew\"\n}\n\n-- T\n\nlabels[\"t-glottalization\"] = {\n   link = \"T-glottalization\",\n   display = \"''t''-glottalization\",\n\
      \ttype = \"sound change\"\n}\naliases[\"t-glottaling\"] = \"t-glottalization\"\n\nlabels[\"Tajik\"] = {\n\tlink = \"Tajik language\",\n\tdisplay = \"Tajik\"\n}\naliases[\"Tajiki\"] = \"Tajik\"\n\nlabels[\"Tehrani\"] = {\n\tlink = \"Tehrani accent\",\n\t\
      display = \"Tehrani\"\n}\n\nlabels[\"Tiberian Hebrew\"] = {\n\tlink = \"Tiberian Hebrew\",\n\tdisplay = \"Tiberian Hebrew\"\n}\naliases[\"Tiberian\"] = \"Tiberian Hebrew\"\n\nlabels[\"Tosk\"] = {\n\tlink = \"Tosk Albanian\",\n\tdisplay = \"Tosk\"\n}\n\n\
      -- U\n\nlabels[\"UK\"] = {\n\tlink = \"British English\",\n\tdisplay = \"UK\"\n}\naliases[\"British\"] = \"UK\"\naliases[\"U.K.\"] = \"UK\"\n\nlabels[\"Ulaanbaatar\"] = {\n\tlink = \"Ulaanbaatar\"\n}\naliases[\"UlaanBaatar\"] = \"Ulaanbaatar\"\n\nlabels[\"\
      Ulster\"] = {\n\tlink = \"Ulster Irish\",\n\tdisplay = \"Ulster\"\n}\naliases[\"Donegal\"] = \"Ulster\"\n\nlabels[\"Umeå\"] = {\n\tlink = \"Umeå\",\n}\n\nlabels[\"US\"] = {\n\tlink = \"American English\",\n\tdisplay = \"US\"\n}\naliases[\"U.S.\"] = \"\
      US\"\n\n-- V\n\nlabels[\"Valencia\"] = {\n\tlink = \"Valencian\"\n}\naliases[\"Valencian\"] = \"Valencia\"\n\nlabels[\"Vedic Sanskrit\"] = {\n\tlink = \"Vedic Sanskrit\",\n\tdisplay = \"Vedic\"\n}\naliases[\"Vedic\"] = \"Vedic Sanskrit\"\naliases[\"Rigvedic\"\
      ] = \"Vedic Sanskrit\"\n\nlabels[\"Vulgar\"] = {\n\tlink = \"Vulgar Latin\",\n\tdisplay = \"Vulgar\"\n}\n\n-- W\n\nlabels[\"Wales\"] = {\n\tlink = \"Welsh English\",\n\tdisplay = \"Wales\"\n}\naliases[\"Welsh\"] = \"Wales\"\n\nlabels[\"Wardak\"] = {\n\t\
      link = \"Pashto dialects\",\n\tdisplay = \"Wardak\"\n}\n\nlabels[\"Waterford\"] = {\n\tlink = \"Gaeltacht na nDéise\",\n\tdisplay = \"Waterford\"\n}\n\nlabels[\"Wazirwola\"] = {\n\tlink = \"Wazirwola dialect\",\n\tdisplay = \"Wazirwola\"\n}\n\nlabels[\"\
      weak vowel\"] = {\n\tlink = \"Weak vowel merger\",\n\tdisplay = \"weak vowel merger\",\n\ttype = \"sound change\"\n}\n\nlabels[\"wine/whine\"] = {\n    link = \"wine–whine merger\",\n    display = \"without the ''wine''–''whine'' merger\",\n    type =\
      \ \"sound change\"\n}\n\n-- X\n\nlabels[\"Xiamen\"] = {\n\tlink = \"Xiamen\"\n}\n\n-- Y\n\nlabels[\"yeísmo\"] = {\n\tlink = \"Yeísmo\",\n\tdisplay = \"''ll''-''y'' neutralization\",\n\ttype = \"sound change\"\n}\n\nlabels[\"Yemenite Hebrew\"] = {\n\tlink\
      \ = \"Yemenite Hebrew\",\n\tdisplay = \"Yemenite Hebrew\"\n}\n\nlabels[\"YIVO\"] = {\n\tlink = \"YIVO\"\n}\n\nlabels[\"yod-coalescence\"] = {\n\tlink = \"yod-coalescence\",\n\tdisplay = \"yod-coalescence\",\n\ttype = \"sound change\"\n}\n\n-- Z\n\nlabels[\"\
      Zhangzhou\"] = {\n\tlink = \"Zhangzhou\"\n}\n\nreturn { labels = labels, aliases = aliases }</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:09.453Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AIPA&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45947 t=1555362609358640
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:09 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1343.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 203021995, 239168276, 699840145
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="82468" pageid="82468" ns="10" title="Template:IPA"><revisions><rev user="Rua" timestamp="2019-03-31T20:37:23Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:IPA/templates|IPA}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:09.629Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=32887 t=1555362609536336
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:09 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 518489934, 635853337, 690740471
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4463906\" pageid=\"4463906\" ns=\"828\" title=\"Module:IPA/templates\"><revisions><rev user=\"Rua\" timestamp=\"2019-03-31T20:38:27Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal m_IPA = require(\"Module:IPA\")\n\nlocal U = mw.ustring.char\nlocal syllabic = U(0x0329)\n\n-- Used for [[Template:IPA]].\nfunction\
      \ export.IPA(frame)\n\tlocal parent_args = frame.getParent and frame:getParent().args or frame\n\tlocal compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default =\
      \ \"\"},\n\t\t[1 + offset] = {list = true, allow_holes = true},\n\t\t[\"n\"] = {list = true, allow_holes = true},\n\t\t[\"qual\"] = {list = true, allow_holes = true},\n\t\t[\"nocount\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args\
      \ = require(\"Module:parameters\").process(parent_args, params)\n\tlocal langarg = args[compat and \"lang\" or 1]\n\tlocal lang = mw.title.getCurrentTitle().nsText == \"Template\" and \"en\" or langarg\n\tlang = require(\"Module:languages\").getByCode(lang)\n\
      \n\t-- [[Special:WhatLinksHere/Template:tracking/IPA/grc]]\n\tif lang and lang:getCode() == \"grc\" then\n\t\trequire(\"Module:debug\").track(\"IPA/grc\")\n\tend\n\t\n\tlocal items = {}\n\t\n\tfor i = 1, math.max(args[1 + offset].maxindex, args[\"n\"].maxindex)\
      \ do\n\t\tlocal pron = args[1 + offset][i]\n\t\tlocal note = args[\"n\"][i]\n\t\tlocal qual = args[\"qual\"][i]\n\t\t\n\t\tif lang then\n\t\t\trequire(\"Module:IPA/tracking\").run_tracking(pron, lang)\n\t\tend\n\t\t\n\t\tif pron or note or qual then\n\t\
      \t\ttable.insert(items, {pron = pron, note = note, qualifiers = {qual}})\n\t\tend\n\tend\n\t\n\treturn m_IPA.format_IPA_full(lang, items, nil, nil, args.sort, args.nocount)\nend\n\n-- Used for [[Template:IPAchar]].\nfunction export.IPAchar(frame)\n\tlocal\
      \ params = {\n\t\t[1] = {list = true, allow_holes = true},\n\t\t[\"n\"] = {list = true, allow_holes = true},\n\t\t[\"lang\"] = {}, -- This parameter is not used and does nothing, but is allowed for futureproofing.\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame.getParent and frame:getParent().args or frame, params)\n\t\n\tlocal items = {}\n\t\n\tfor i = 1, math.max(args[1].maxindex, args[\"n\"].maxindex) do\n\t\tlocal pron = args[1][i]\n\t\tlocal note = args[\"n\"][i]\n\t\t\n\t\tif pron or note\
      \ then\n\t\t\ttable.insert(items, {pron = pron, note = note})\n\t\tend\n\tend\n\t\n\t-- Format\n\treturn m_IPA.format_IPA_multiple(nil, items)\nend\n\nfunction export.XSAMPA(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t}\n\tlocal args\
      \ = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn m_IPA.XSAMPA_to_IPA(args[1] or \"[Eg'zA:mp5=]\")\nend\n\n-- Used by [[Template:X2IPA]]\nfunction export.X2IPAtemplate(frame)\n\tlocal parent_args = frame.getParent\
      \ and frame:getParent().args or frame\n\tlocal compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default = \"und\"},\n\t\t[1 + offset] = {list = true, allow_holes\
      \ = true},\n\t\t[\"n\"] = { list = true, allow_holes = true },\n\t\t[\"qual\"] = { list = true, allow_holes = true },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(parent_args, params)\n\t\n\tlocal m_XSAMPA = require(\"Module:IPA/X-SAMPA\"\
      )\n\t\n\tpronunciations, notes, qualifiers, lang = args[1 + offset], args[\"n\"], args[\"qual\"], args[compat and \"lang\" or 1]\n\t\n\tlocal output = {}\n\ttable.insert(output, \"{{IPA\")\n\t\n\ttable.insert(output, \"|\" .. lang)\n\n\tfor i = 1, math.max(pronunciations.maxindex,\
      \ notes.maxindex, qualifiers.maxindex) do\n\t\tif pronunciations[i] then\n\t\t\ttable.insert(output, \"|\"..m_XSAMPA.XSAMPA_to_IPA(pronunciations[i]))\n\t\tend\n\t\tif notes[i] then\n\t\t\ttable.insert(output, \"|n\"..i..\"=\"..notes[i])\n\t\tend\n\t\t\
      if qualifiers[i] then\n\t\t\ttable.insert(output, \"|qual\"..i..\"=\"..qualifiers[i])\n\t\tend\n\tend\n\t\n\ttable.insert(output, \"}}\")\n\n\treturn table.concat(output)\nend\n\n-- Used by [[Template:X2IPAchar]]\nfunction export.X2IPAchar(frame)\n\tlocal\
      \ params = {\n\t\t[1] = { list = true, allow_holes = true },\n\t\t[\"n\"] = { list = true, allow_holes = true },\n\t\t[\"lang\"] = { },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal m_XSAMPA\
      \ = require(\"Module:IPA/X-SAMPA\")\n\t\n\tpronunciations, notes, lang = args[1], args[\"n\"], args[\"lang\"]\n\t\n\tlocal output = {}\n\ttable.insert(output, \"{{IPAchar\")\n\t\n\tfor i = 1, math.max(pronunciations.maxindex, notes.maxindex) do\n\t\tif\
      \ pronunciations[i] then\n\t\t\ttable.insert(output, \"|\"..m_XSAMPA.XSAMPA_to_IPA(pronunciations[i]))\n\t\tend\n\t\tif notes[i] then\n\t\t\ttable.insert(output, \"|n\"..i..\"=\"..notes[i])\n\t\tend\n\tend\n\t\n\tif lang then\n\t\ttable.insert(output,\
      \ \"|lang=\"..lang)\n\tend\n\t\n\ttable.insert(output, \"}}\")\n\t\n\treturn table.concat(output)\nend\n\n-- Used by [[Template:x2rhymes]]\nfunction export.X2rhymes(frame)\n\tlocal parent_args = frame.getParent and frame:getParent().args or frame\n\tlocal\
      \ compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default = \"und\"},\n\t\t[1 + offset] = {required = true, list = true, allow_holes = true},\n\t}\n\t\n\tlocal\
      \ args = require(\"Module:parameters\").process(parent_args, params)\n\t\n\tlocal m_XSAMPA = require(\"Module:IPA/X-SAMPA\")\n\t\n\tpronunciations, lang = args[1 + offset], args[compat and \"lang\" or 1]\n\t\n\tlocal output =  {}\n\ttable.insert(output,\
      \ \"{{rhymes\")\n\t\n\ttable.insert(output, \"|\" .. lang)\n\n\tfor i = 1, pronunciations.maxindex do\n\t\tif pronunciations[i] then\n\t\t\ttable.insert(output, \"|\"..m_XSAMPA.XSAMPA_to_IPA(pronunciations[i]))\n\t\tend\n\tend\n\t\n\ttable.insert(output,\
      \ \"}}\")\n\t\n\treturn table.concat(output)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:09.820Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48414 t=1555362609704577
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:09 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1344.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 757046910, 651991722, 686682411
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3923940\" pageid=\"3923940\" ns=\"828\" title=\"Module:IPA\"><revisions><rev user=\"Suzukaze-c\" timestamp=\"2019-02-27T02:22:09Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"move leading space inside .previewonly.error\" xml:space=\"preserve\">local export = {}\n-- [[Module:IPA/data]]\n\nlocal m_data = mw.loadData('Module:IPA/data') -- [[Module:IPA/data]]\nlocal m_symbols =\
      \ mw.loadData('Module:IPA/data/symbols') -- [[Module:IPA/data/symbols]]\nlocal m_syllables -- [[Module:syllables]]; loaded below if needed\n\nlocal sub = mw.ustring.sub\nlocal find = mw.ustring.find\nlocal gsub = mw.ustring.gsub\nlocal match = mw.ustring.match\n\
      local gmatch = mw.ustring.gmatch\nlocal U = mw.ustring.char\n\nfunction export.format_IPA_full(lang, items, err, separator, sortKey, no_count)\n\tlocal IPA_key, key_link, err_text, prefix, IPAs, category\n\tlocal hasKey = m_data.langs_with_infopages\n\t\
      local namespace = mw.title.getCurrentTitle().nsText\n\t\n\tif err then\n\t\terr_text = '&lt;span class=\"error\"&gt;' .. err .. '&lt;/span&gt;'\n\telse\n\t\tif hasKey[lang:getCode()] then\n\t\t\tIPA_key = \"Appendix:\" .. lang:getCanonicalName() .. \"\
      \ pronunciation\"\n\t\telse\n\t\t\tIPA_key = \"wikipedia:\" .. lang:getCanonicalName() .. \" phonology\"\n\t\tend\n\t\t\n\t\tkey_link = \"[[\" .. IPA_key .. \"|key]]\"\n\tend\n\n\t\n\tlocal prefix = \"[[Wiktionary:International Phonetic Alphabet|IPA]]&lt;sup&gt;(\"\
      \ .. ( key_link or err_text ) .. \")&lt;/sup&gt;:&amp;#32;\"\n\t\n\tIPAs = export.format_IPA_multiple(lang, items, separator, no_count)\n\t\n\tif lang and (namespace == \"\" or namespace == \"Reconstruction\") then\n\t\tsortKey = sortKey or lang:makeSortKey(mw.title.getCurrentTitle().text)\n\
      \t\tsortKey = sortKey and (\"|\" .. sortKey) or \"\"\n\t\tcategory = \"[[Category:\" .. lang:getCanonicalName() .. \" terms with IPA pronunciation\" .. sortKey .. \"]]\"\n\telse\n\t\tcategory = \"\"\n\tend\n\n\treturn prefix .. IPAs .. category\nend\n\n\
      local function determine_repr(pron)\n\tlocal repr_mark = {}\n\tlocal repr, reconstructed\n\t\n\t-- remove initial asterisk before representation marks, used on some Reconstruction pages\n\tif find(pron, \"^%*\") then\n\t\treconstructed = true\n\t\tpron\
      \ = sub(pron, 2)\n\tend\n\t\n\tlocal representation_types = {\n\t\t['/'] = { right = '/', type = 'phonemic', },\n\t\t['['] = { right = ']', type = 'phonetic', },\n\t\t['⟨'] = { right = '⟩', type = 'orthographic', },\n\t\t['-'] = { type = 'rhyme' },\n\t\
      }\n\t\n\trepr_mark.i, repr_mark.f, repr_mark.left, repr_mark.right = find(pron, '^(.).-(.)$')\n\t\n\tlocal representation_type = representation_types[repr_mark.left]\n\t\n\tif representation_type then\n\t\tif representation_type.right then\n\t\t\tif repr_mark.right\
      \ == representation_type.right then\n\t\t\t\trepr = representation_type.type\n\t\t\tend\n\t\telse\n\t\t\trepr = representation_type.type\n\t\tend\n\telse\n\t\trepr = nil\n\tend\n\t\n\treturn repr, reconstructed\nend\n\nlocal function hasInvalidSeparators(transcription)\n\
      \tif find(transcription, \"%.[ˈˌ]\") then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\nfunction export.format_IPA_multiple(lang, items, separator, no_count)\n\tlocal notes = {}\n\tlocal categories = {}\n\tseparator = separator or ', '\n\t\n\
      \t-- Format\n\tif not items[1] then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\ttable.insert(items, {pron = \"/aɪ piː ˈeɪ/\"})\n\t\telse\n\t\t\ttable.insert(categories, \"[[Category:Pronunciation templates without a pronunciation]]\"\
      )\n\t\tend\n\tend\n\t\n\tlocal bits = {}\n\t\n\tfor _, item in ipairs(items) do\n\t\tlocal bit = export.format_IPA(lang, item.pron)\n\t\t\n\t\tif item.qualifiers and item.qualifiers[1] then\n\t\t\tbit = require(\"Module:qualifier\").format_qualifier(item.qualifiers)\
      \ .. \" \" .. bit\n\t\tend\n\t\t\n\t\tif item.note then\n\t\t\tbit = bit .. mw.getCurrentFrame():extensionTag(\"ref\", item.note)\n\t\tend\n\t\t\n\t\ttable.insert(bits, bit)\n\t\t\n\t\t--[=[\t[[Special:WhatLinksHere/Template:tracking/IPA/syntax-error]]\n\
      \t\t\t\tThe length or gemination symbol should not appear after a syllable break or stress symbol.\t]=]\n\t\t\n\t\tif find(item.pron, \"[ˈˌ%.][ːˑ]\") then\n\t\t\trequire(\"Module:debug\").track(\"IPA/syntax-error\")\n\t\tend\n\t\t\n\t\tif lang then\n\t\
      \t\t-- Add syllable count if the language's diphthongs are listed in [[Module:syllables]].\n\t\t\tif not no_count and mw.title.getCurrentTitle().namespace == 0 then\n\t\t\t\tm_syllables = m_syllables or require('Module:syllables')\n\t\t\t\tif m_syllables.hasDiphthongs(lang)\
      \ then\n\t\t\t\t\tif determine_repr(item.pron) == \"phonemic\" or lang:getCode() == \"ru\" then\n\t\t\t\t\t\tlocal syllable_count = m_syllables.getVowels(item.pron, lang)\n\t\t\t\t\t\tif syllable_count then\n\t\t\t\t\t\t\ttable.insert(categories, \"[[Category:\"\
      \ .. lang:getCanonicalName() .. \" \" .. syllable_count .. \"-syllable words]]\")\n\t\t\t\t\t\tend\t\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tif lang:getCode() == \"en\" then\n\t\t\t\tif hasInvalidSeparators(item.pron) then\n\t\t\t\t\ttable.insert(categories,\
      \ \"[[Category:IPA for English using .ˈ or .ˌ]]\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\n\treturn table.concat(bits, separator) .. table.concat(categories)\nend\n\n-- Takes an IPA pronunciation and formats it and adds cleanup categories.\nfunction\
      \ export.format_IPA(lang, pron, split_output)\n\tlocal err = {}\n\tlocal categories = {}\n\t\n\t-- Remove wikilinks, so that wikilink brackets are not misinterpreted as\n\t-- indicating phonemic transcription\n\tlocal str_gsub = string.gsub\n\tlocal without_links\
      \ = str_gsub(pron, '%[%[[^|%]]+|([^%]]+)%]%]', '%1')\n\twithout_links = str_gsub(without_links, '%[%[[^%]]+%]%]', '%1')\n\t\n\t-- Detect whether this is a phonemic or phonetic transcription\n\tlocal repr, reconstructed = determine_repr(without_links)\n\
      \t\n\tif reconstructed then\n\t\tpron = sub(pron, 2)\n\tend\n\t\n\t-- If valid, strip the representation marks\n\tif repr == \"phonemic\" then\n\t\tpron = sub(pron, 2, -2)\n\t\twithout_links = sub(without_links, 2, -2)\n\telseif repr == \"phonetic\" then\n\
      \t\tpron = sub(pron, 2, -2)\n\t\twithout_links = sub(without_links, 2, -2)\n\telseif repr == \"orthographic\" then\n\t\tpron = sub(pron, 2, -2)\n\t\twithout_links = sub(without_links, 2, -2)\n\telseif repr == \"rhyme\" then\n\t\tpron = sub(pron, 2)\n\t\
      \twithout_links = sub(without_links, 2)\n\telse\n\t\ttable.insert(categories, \"[[Category:IPA pronunciations with invalid representation marks]]\")\n\t\t-- table.insert(err, \"invalid representation marks\")\n\t\t-- Removed because it's annoying when\
      \ previewing pronunciation pages.\n\tend\n\t\n\t-- Check for obsolete and nonstandard symbols\n\tfor i, symbol in ipairs(m_data.nonstandard) do\n\t\tlocal result\n\t\tfor nonstandard in gmatch(pron, symbol) do\n\t\t\tif not result then\n\t\t\t\tresult\
      \ = {}\n\t\t\tend\n\t\t\ttable.insert(result, nonstandard)\n\t\t\ttable.insert(categories, \"[[Category:IPA pronunciations with obsolete or nonstandard characters|\" .. nonstandard .. \"]]\")\n\t\tend\n\t\t\n\t\tif result then\n\t\t\ttable.insert(err,\
      \ \"obsolete or nonstandard characters (\" .. table.concat(result) .. \")\")\n\t\t\tbreak\n\t\tend\n\tend\n\t\n\t--[[ Check for invalid symbols after removing the following:\n\t\t\t1. wikilinks (handled above)\n\t\t\t2. paired HTML tags\n\t\t\t3. bolding\n\
      \t\t\t4. italics\n\t\t\t5. HTML entity for space\n\t\t\t6. asterisk at beginning of transcription\n\t\t\t7. comma followed by spacing characters\n\t\t\t8. superscripts enclosed in superscript parentheses\t\t]]\n\tlocal found_HTML\n\tlocal result = str_gsub(without_links,\
      \ \"&lt;(%a+)[^&gt;]*&gt;([^&lt;]+)&lt;/%1&gt;\",\n\t\tfunction(tagName, content)\n\t\t\tfound_HTML = true\n\t\t\treturn content\n\t\tend)\n\tresult = str_gsub(result, \"'''([^']*)'''\", \"%1\")\n\tresult = str_gsub(result, \"''([^']*)''\", \"%1\")\n\t\
      result = str_gsub(result, \"&amp;[^;]+;\", \"\") -- This may catch things that are not valid character entities.\n\tresult = str_gsub(result, \"^%*\", \"\")\n\tresult = gsub(result, \",%s+\", \"\")\n\tresult = gsub(result, \"⁽[\".. m_symbols.superscripts\
      \ .. \"]+⁾\", \"\")\n\tresult = gsub(result, '[' .. m_symbols.valid .. ']', '')\n\tif result ~= '' then\n\t\tlocal suggestions = {}\n\t\tmw.log(pron, result)\n\t\tlocal namespace = mw.title.getCurrentTitle().namespace\n\t\tlocal category\n\t\tif namespace\
      \ == 0 then\n\t\t\t-- main namespace\n\t\t\tcategory = \"IPA pronunciations with invalid IPA characters\"\n\t\telseif namespace == 118 then\n\t\t\t-- reconstruction namespace\n\t\t\tcategory = \"IPA pronunciations with invalid IPA characters/reconstruction\"\
      \n\t\telse\n\t\t\tcategory = \"IPA pronunciations with invalid IPA characters/non_mainspace\"\n\t\tend\n\t\tfor character in gmatch(result, \".\") do\n\t\t\tlocal suggestion = m_symbols.suggestions[character]\n\t\t\tif suggestion then\n\t\t\t\ttable.insert(suggestions,\
      \ character .. \" with \" .. suggestion)\n\t\t\tend\n\t\t\ttable.insert(categories, \"[[Category:\" .. category .. \"|\" .. character .. \"]]\")\n\t\tend\n\t\ttable.insert(err, \"invalid IPA characters (\" .. result .. \")\")\n\t\tif suggestions[1] then\n\
      \t\t\ttable.insert(err, \"replace \" .. table.concat(suggestions, \", \"))\n\t\tend\n\tend\n\t\n\tif found_HTML then\n\t\ttable.insert(categories, \"[[Category:IPA pronunciations with paired HTML tags]]\")\n\tend\n\t\n\t-- Reference inside IPA template\
      \ usage\n\t-- FIXME: Doesn't work; you can't put HTML in module output.\n\t--if mw.ustring.find(pron, '&lt;/ref&gt;') then\n\t--\ttable.insert(categories, \"[[Category:IPA pronunciations with reference]]\")\n\t--end\n\t\n\tif repr == \"phonemic\" or repr\
      \ == \"rhyme\" then\n\t\tif lang and m_data.phonemes[lang:getCode()] then\n\t\t\tlocal valid_phonemes = m_data.phonemes[lang:getCode()]\n\t\t\tlocal rest = pron\n\t\t\tlocal phonemes = {}\n\t\t\t\n\t\t\twhile mw.ustring.len(rest) &gt; 0 do\n\t\t\t\tlocal\
      \ longestmatch = \"\"\n\t\t\t\t\n\t\t\t\tif sub(rest, 1, 1) == \"(\" or sub(rest, 1, 1) == \")\" then\n\t\t\t\t\tlongestmatch = sub(rest, 1, 1)\n\t\t\t\telse\n\t\t\t\t\tfor _, phoneme in ipairs(valid_phonemes) do\n\t\t\t\t\t\tif mw.ustring.len(phoneme)\
      \ &gt; mw.ustring.len(longestmatch) and sub(rest, 1, mw.ustring.len(phoneme)) == phoneme then\n\t\t\t\t\t\t\tlongestmatch = phoneme\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif mw.ustring.len(longestmatch) &gt; 0 then\n\t\t\t\t\t\
      table.insert(phonemes, longestmatch)\n\t\t\t\t\trest = sub(rest, mw.ustring.len(longestmatch) + 1)\n\t\t\t\telse\n\t\t\t\t\tlocal phoneme = sub(rest, 1, 1)\n\t\t\t\t\ttable.insert(phonemes, \"&lt;span style=\\\"color: red\\\"&gt;\" .. phoneme .. \"&lt;/span&gt;\"\
      )\n\t\t\t\t\trest = sub(rest, 2)\n\t\t\t\t\ttable.insert(categories, \"[[Category:IPA pronunciations with invalid phonemes/\" .. lang:getCode() .. \"]]\")\n\t\t\t\t\trequire(\"Module:debug\").track(\"IPA/invalid phonemes/\" .. phoneme)\n\t\t\t\tend\n\t\
      \t\tend\n\t\t\t\n\t\t\tpron = table.concat(phonemes)\n\t\tend\n\t\t\n\t\tif repr == \"phonemic\" then\n\t\t\tpron = \"/\" .. pron .. \"/\"\n\t\telse\n\t\t\tpron = \"-\" .. pron\n\t\tend\n\telseif repr == \"phonetic\" then\n\t\tpron = \"[\" .. pron .. \"\
      ]\"\n\telseif repr == \"orthographic\" then\n\t\tpron = \"⟨\" .. pron .. \"⟩\"\n\tend\n\t\n\tif reconstructed then\n\t\tpron = \"*\" .. pron\n\tend\n\t\n\tif err[1] then\n\t\terr = '&lt;span class=\"previewonly error\" style=\"font-size: small;&gt;&amp;#32;'\
      \ .. table.concat(err, ', ') .. '&lt;/span&gt;'\n\telse\n\t\terr = \"\"\n\tend\n\t\n\tif split_output then -- for use of IPA in links \n\t\treturn '&lt;span class=\"IPA\"&gt;' .. pron .. '&lt;/span&gt;', table.concat(categories), err\n\telse\n\t\treturn\
      \ '&lt;span class=\"IPA\"&gt;' .. pron .. '&lt;/span&gt;' .. err .. table.concat(categories)\n\tend\nend\n\nfunction export.example(frame)\n\tlocal output = {}\n\t\n\tlocal m_links = require('Module:links')\n\tlocal m_languages = require('Module:languages')\n\
      \t\n\ttable.insert(\n\t\toutput,\n[[\n{| class=\"wikitable\"\n! Term !! IPA !! Generated X-SAMPA !! Regenerated IPA !! Matched?\n]]\n\t)\n\tlocal row =\n[[\n|-\n| link || IPA || XSAMPA || regenerated_IPA || matched\n]]\n\t\n\tlocal examples = mw.text.split(frame.args[1],\
      \ \",%s*\")\n\t\n\tlocal m_XSAMPA = require(\"Module:IPA/X-SAMPA\")\n\t\n\tfor _, example in pairs(examples) do\n\t\tlocal lang, word = match(example, \"(%l%l%l?):(.+) [/%[]\")\n\t\t\n\t\tif lang then\n\t\t\tlang = m_languages.getByCode(lang) or error('\"\
      ' .. lang .. '\" is not a valid language code.')\n\t\tend\n\t\t\n\t\tlocal IPA = match(example, \"/[^/]+/\")\n\t\t\tor match(example, \"%[[^%]]+%]\")\n\t\t\tor error('No IPA transcription found in \"' .. example .. '\".')\n\t\tlocal XSAMPA = m_XSAMPA.IPA_to_XSAMPA(IPA)\n\
      \t\tlocal regenerated_IPA = m_XSAMPA.XSAMPA_to_IPA(XSAMPA)\n\t\t\n\t\tcontent = {\n\t\t\tlink = lang and word and m_links.full_link{ term = word, lang = lang },\n\t\t\tmatched = IPA == regenerated_IPA\n\t\t\t\tand '&lt;span style=\"color: green;\"&gt;yes&lt;/span&gt;'\n\
      \t\t\t\tor '&lt;span style=\"color: red;\"&gt;no&lt;/span&gt;',\n\t\t\tIPA = '&lt;span class=\"IPA\"&gt;' .. IPA .. '&lt;/span&gt;',\n\t\t\tXSAMPA = '&lt;code&gt;' .. XSAMPA .. '&lt;/span&gt;',\n\t\t\tregenerated_IPA = '&lt;span class=\"IPA\"&gt;' .. regenerated_IPA\
      \ .. '&lt;/span&gt;'\n\t\t}\n\t\t\n\t\tlocal function add_content(item)\n\t\t\treturn content[item] or \"\"\n\t\tend\n\t\tlocal row = gsub(row, \"[%a_]+\", add_content)\n\t\ttable.insert(output, row)\n\tend\n\t\n\ttable.insert(output, \"|}\")\n\t\n\treturn\
      \ table.concat(output)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:10.020Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=73623 t=1555362609895946
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:10 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1222.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 585188676, 499563532, 706054902
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4118506\" pageid=\"4118506\" ns=\"828\" title=\"Module:IPA/data\"><revisions><rev user=\"Mahagaja\" timestamp=\"2019-02-27T13:31:09Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"mfe now exists\" xml:space=\"preserve\">local data = {}\n\n--[=[\tPlease add language codes for new pronunciation keys to the list below.\n\t\tThis will allow [[Template:IPA]] and the\
      \ functions in [[Module:IPA]] to\n\t\tautomatically link to the key.\t]=]\nlocal langcodes = {\n\t\"ca\",\n    \"cy\",\n\t\"de\",\n    \"dsb\",\n    \"el\",\n\t\"en\",\n    \"eo\",\n    \"es\",\n    \"fr\",\n    \"ga\",\n    \"gd\",\n    \"got\",\n   \
      \ \"hu\",\n    \"it\",\n    \"la\",\n    \"liv\",\n    \"mdf\",\n    \"mfe\",\n    \"my\",\n    \"nci\",\n\t\"nl\",\n    \"no\",\n    \"pjt\",\n    \"pl\",\n    \"pt\",\n    \"sl\",\n    \"sga\",\n    \"sv\",\n    \"ug\",\n    \"wlm\",\n    \"yi\",\n}\n\
      \ndata.langs_with_infopages = {}\n\n--[=[\tThis goes through the list of langcodes, and fills\n\t\tthe table data.langs_with_infopages with items\n\t\tsuch as [\"ca\"] = true, [\"cy\"] = true, ... ,\n\t\tso that [[Module:IPA]] can easily access them. ]=]\n\
      for _, langcode in ipairs(langcodes) do\n\tdata.langs_with_infopages[langcode] = true\nend\n\n-- Non-standard or obsolete IPA symbols.\ndata.nonstandard = {\n\t--[[\tThe following symbols consist of more than one character,\n\t\t\tso we can't put them\
      \ in the line below.\t\t]]\n\t\"ɑ̢\", \"d̂\", \"t̂\", \"n̂\", \"l̂\", \"k̫\", \"ɔ̗\", \"ɔ̖\",\n\t\n\t\"[ʦʣʧʤʨʥ?ƍσƺƪƻƾƞᶀᶁᶂᶃᶄᶅᶆᶈᶇᶉᶊᶋƫᶌᶍᶎʓʆλƛłščžǰǧǯẋᵻᵿⱻʚ\"\n\t.. \"ɷωıȹȸ∅ØƥƭƈƙʠʇʗʖʞɩɼȣяɿʅʮʯᴀᴀᴇGRŒQȡȶȵȴKPT]\"\n}\n\n-- See valid IPA characters at [[Module:IPA/data/symbols]].\n\
      \ndata.phonemes = {}\ndata.phonemes[\"nl\"] = {\n\t\"m\", \"n\", \"ŋ\",\n\t\"p\", \"b\", \"t\", \"d\", \"k\", \"ɡ\",\n\t\"f\", \"v\", \"s\", \"z\", \"ʃ\", \"ʒ\", \"x\", \"ɣ\", \"ɦ\",\n\t\"ʋ\", \"l\", \"j\", \"r\",\n\t\"ɪ\", \"ʏ\", \"ɛ\", \"ə\", \"ɔ\",\
      \ \"ɑ\",\n\t\"i\", \"iː\", \"y\", \"yː\", \"u\", \"uː\", \"eː\", \"øː\", \"oː\", \"ɛː\", \"œː\", \"ɔː\", \"aː\",\n\t\"ɛi̯\", \"œy̯\", \"ɔi̯\", \"ɑu̯\", \"ɑi̯\",\n\t\"iu̯\", \"yu̯\", \"ui̯\", \"eːu̯\", \"oːi̯\", \"aːi̯\",\n\t\"ˈ\", \"ˌ\", \".\", \" \",\n\
      \t}\ndata.phonemes[\"hy\"] = {\n\t\"ɑ\", \"b\", \"ɡ\", \"d\", \"ɛ\", \"z\", \"ɛ\", \"ə\", \"tʰ\", \"ʒ\", \"i\", \"l\", \"χ\", \"t͡s\",\n\t\"k\", \"h\", \"d͡z\", \"ʁ\", \"t͡ʃ\", \"m\", \"j\", \"n\", \"ʃ\", \"ɔ\", \"t͡ʃʰ\", \"p\", \"d͡ʒ\",\n\t\"r\", \"s\"\
      , \"v\", \"t\", \"ɾ\", \"t͡sʰ\", \"v\", \"pʰ\", \"kʰ\", \"ɔ\", \"f\", \"ŋɡ\", \"ŋk\",\n\t\"ŋχ\", \"u\", \"ˈ\", \"ˌ\", \".\", \" \", \"ː\",\n\t}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:10.239Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Fdata%2Fsymbols&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55097 t=1555362610096290
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:10 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 677360789, 743113858, 696894043
    body: !!binary |-
      
- recorded: 2019-04-15T21:10:10.426Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Ftracking&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50438 t=1555362610323782
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:10 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 756754511, 724955092, 688979621
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6315460\" pageid=\"6315460\" ns=\"828\" title=\"Module:IPA/tracking\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-11-21T19:51:11Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"fixing module error in [[pianoforte]]\" xml:space=\"preserve\">local export = {}\n\n--[[\n\tsymb is what is tracked. It can be a literal symbol or a Lua pattern.\n\tIf it is a table, tracking\
      \ is added for any of the symbols in the list.\n\t\n\tcat is the subtemplate that is added to the default path \"IPA/\" + language code + \"/\".\n]]\n\nlocal U = mw.ustring.char\n\nlocal syllabic = U(0x329)\n\nexport.tracking = {\n\ten = {\n\t\t{\n\t\t\
      \tsymb = \"iə\",\n\t\t\tcat = \"ambig\",\n\t\t},\n\t\t{\n\t\t\tsymb = { \"ɪi\", \"ʊu\", \"ɪj\", \"ʊw\" },\n\t\t\tcat = \"eeoo\",\n\t\t},\n\t\t{\n\t\t\tsymb = { \"r\" },\n\t\t\tcat = \"plain r\",\n\t\t},\n\t},\n\tcs = {\n\t\t{\n\t\t\tsymb = \"[mnrl]\" ..\
      \ syllabic,\n\t\t\tcat = \"syllabic-consonant\",\n\t\t},\n\t},\n\tps = {\n\t\t{\n\t\t\tsymb = \"ɤ\",\n\t\t\tcat = \"Pashto\",\n\t\t},\n\t},\n\tfa = {\n\t\t{\n\t\t\tsymb = \"ʔ\",\n\t\t\tcat = \"glottal-stop\",\n\t\t},\n\t},\n\t{\n\t\t{\n\t\t\tsymb = \"\"\
      ,\n\t\t\tcat = \"\",\n\t\t},\n\t},\n}\n\nfunction export.run_tracking(IPA, lang)\n\tif not IPA or IPA == \"\" then\n\t\treturn nil\n\tend\n\t\n\tlang = lang:getCode()\n\t\n\tif not export.tracking[lang] or type(export.tracking[lang]) ~= \"table\" then\n\
      \t\treturn nil\n\tend\n\t\n\tfor i, arguments in ipairs(export.tracking[lang]) do\n\t\tif type(arguments) == \"table\" then\n\t\t\tlocal required = { \"symb\", \"cat\" }\n\t\t\t\n\t\t\thasArgs = true\n\t\t\t\n\t\t\tfor i, arg in pairs(required) do\n\t\t\
      \t\tif not arguments[arg] or arguments[arg] == \"\" then\n\t\t\t\t\thasArgs = false\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif hasArgs == true then\n\t\t\t\tlocal symbols = arguments.symb\n\t\t\t\tlocal category = arguments.cat\n\t\t\t\t\n\t\t\t\tif type(symbols)\
      \ == \"string\" then\n\t\t\t\t\tsymbols = { symbols }\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tfor _, symbol in pairs(symbols) do\n\t\t\t\t\tif type(symbol) ~= \"string\" then\n\t\t\t\t\t\treturn nil\n\t\t\t\t\tend\n\t\t\t\t\tif mw.ustring.find(IPA, symbol) then\n\
      \t\t\t\t\t\trequire(\"Module:debug\").track(\"IPA/\" .. lang .. \"/\" .. category)\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:10.607Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Asyllables&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44680 t=1555362610502299
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:10 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1221.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 682727414, 569023988, 706741959
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5882110\" pageid=\"5882110\" ns=\"828\" title=\"Module:syllables\"><revisions><rev user=\"Hazarasp\" timestamp=\"2018-08-21T12:20:37Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal vowels = mw.loadData(\"Module:IPA/data/symbols\").vowels .. \"ᵻ\" .. \"ᵿ\"\n\nlocal U = mw.ustring.char\n\n--[[\nAdd diphthongs to\
      \ the list if they do not contain semivowel symbols: /j w ɰ ɥ/.\nDo not include non-syllabic diacritics: /au/, not /au̯/.\nThe module automatically does not count vowels with non-syllabic diacritics.\n]]--\nlocal diphthongs = {\n\t[\"de\"] = {\n\t\t\"\
      a[ɪʊ]\",\n\t\t\"ɔ[ʏɪ]\",\n\t\t},\n\t[\"ca\"] = {\t-- Catalan has diphthongs, but they are generally transcribed using\n\t\t\t\t-- /w/ and /j/, so do not need to be listed (see [[w:Catalan language#Diphthongs and triphthongs]].\n\t\t},\n\t[\"cs\"] = { --\
      \ [[w:Czech phonology#Diphthongs]]\n\t\t\"[aeo]u\",\n\t\t},\n\t[\"en\"] = { -- from [[Appendix:English pronunciation]] mostly, but /ʌɪ/ is from the OED\n\t\t\"[aɑeɛoɔʌ][ɪi]\",\n\t\t\"[ɑɒæo]e\",\n\t\t\"[əɐ]ʉ\",\n\t\t\"[aɒəoɔʌ]ʊ\",\n\t\t\"æo\",\n\t\t\"[ɛ\
      eɪiɔʊʉ]ə\",\t-- /iə/ is a diphthong in NZE, but a disyllabic sequence in GA.\n\t\t\t\t\t\t-- /ɪə/ is both a disyllabic sequence and a diphthong in old-fashioned RP.\n\t\t\"[aʌ][ʊɪ]ə\",\t-- May be a disyllabic sequence in some or all dialects?\n\t\t},\n\
      \t[\"fi\"] = {\t\t\t-- [[w:Finnish phonology#Diphthongs]]\n\t\t\"[ɑeouyæø]i\",\n\t\t\"[ɑoei]u\",\n\t\t\"[eiæø]y\",\n\t\t\"uo\",\n\t\t\"ie\",\n\t\t\"yø\",\n\t\t},\n\t[\"fr\"] = {\t\t\t-- French has diphthongs, but they are transcribed\n\t\t},\t\t\t\t--\
      \ with semivowel symbols: [[w:French phonology#Glides and diphthongs]].\n\t[\"grc\"] = {\n\t\t\"[aeyo]i\",\n\t\t\"[ae]u\",\n\t\t\"[ɛɔa]ː[iu]\",\n\t\t},\n\t[\"is\"] = {\t\t\t-- [[w:Icelandic phonology#Vowels]]\n\t\t\"[aeø][iɪy]\",\t-- Wikipedia is oddly\
      \ specific about the second element: ei and ai, but øɪ.\n\t\t\"[ao]u\",\n\t\t},\n\t[\"it\"] = {\n\t\t\"[aeɛoɔu]i\",\n\t\t\"[aeɛioɔ]u\",\n\t\t},\n\t[\"la\"] = {\n\t\t\"[eaou]i\",\n\t\t\"[eao]u\",\n\t\t\"[ao]e\",\n\t\t},\n\t[\"lb\"] = {\n\t\t\"[iu]ə\",\n\
      \t\t\"[ɜoæɑ]ɪ\",\n\t\t\"[əæɑ]ʊ\",\n\t},\n\t[\"sl\"] = {\t\t\t-- No diphthongs, properly speaking; sequences of a vowel, /j/ and /w/ though\n\t},\n\t[\"sk\"] = {\t\t\t-- Slovak has rising diphthongs, /i̯e, i̯a, i̯u, u̯o/, which are probably always spelled\
      \ with the nonsyllabic diacritic, so do not need to be listed.\n\t},\n\t[\"ru\"] = {\t\t\t-- No diphthongs, properly speaking; sequences of a vowel and /j/ though.\n\t},\n\t[\"sq\"] = {\t\t\t-- [[w:Albanian language#Vowels]] doesn't mention anything about\
      \ diphthongs.\n\t},\n\t[\"ug\"] = {\t\t\t-- No diphthongs.\n\t},\n}\n\n--[[ No use for this at the moment, though it is an interesting catalogue.\n\tIt might be usable for phonetic transcriptions.\n\tDiacritics added to vowels:\n\tinverted breve above,\
      \ inverted breve below,\n\tup tack, down tack,\n\tleft tack, right tack,\n\tdiaeresis (above), diaeresis below,\n\tright half ring, left half ring,\n\tplus sign below, minus sign below,\n\tcombining x above, rhotic hook,\n\ttilde (above), tilde below\n\
      \tligature tie (combining double breve), ligature tie below\n\t]]\nlocal diacritics = U(0x311)..U(0x32F)\n\t..U(0x31D)..U(0x31E)\n\t..U(0x318)..U(0x319)\n\t..U(0x308)..U(0x324)\n\t..U(0x339)..U(0x31C)\n\t..U(0x31F)..U(0x320)\n\t..U(0x33D)..U(0x2DE)\n\t\
      ..U(0x303)..U(0x330)\n\t..U(0x361)..U(0x35C)\n\n--[[\ncombining acute and grave tone marks, circumflex\n]]--\nlocal tone = \"[\" .. U(0x341) .. U(0x340) ..U (0x302) .. \"]\"\nlocal nonsyllabicDiacritics = U(0x311) .. U(0x32F)\nlocal syllabicDiacritics\
      \ = U(0x0329) .. U(0x030D)\nlocal ties = U(0x361) .. U(0x35C)\n\n-- long, half-long, extra short\nlocal lengthDiacritics = U(0x2D0) .. U(0x2D1) .. U(0x306)\nlocal vowel = \"[\" .. vowels .. \"]\" .. tone .. \"?\"\nlocal tie = \"[\" .. ties .. \"]\"\nlocal\
      \ nonsyllabicDiacritic = \"[\" .. nonsyllabicDiacritics .. \"]\"\nlocal syllabicDiacritic = \"[\" .. syllabicDiacritics .. \"]\"\n\nlocal UTF8Char = \"[\\1-\\127\\194-\\244][\\128-\\191]*\"\n\n\nfunction export.getVowels(remainder, lang)\n\tif string.find(remainder,\
      \ \"^[%\\[/]?%-\") or string.find(remainder, \"%-[%\\[/]?$\") then\n\t\treturn nil\n\tend\t-- If a hyphen is at the beginning or end of the transcription, do not count syllables.\n\t\n\tlocal count = 0\n\tlocal diphs = diphthongs[lang:getCode()] or {}\n\
      \t\n\tremainder = mw.ustring.toNFD(remainder)\n\tremainder = string.gsub(remainder, \"%((.*)%)\", \"%1\") -- Remove parentheses.\n\n\twhile remainder ~= \"\" do\n\t\t-- Ignore nonsyllabic vowels\n\t\tremainder = mw.ustring.gsub(remainder, \"^\" .. vowel\
      \ .. nonsyllabicDiacritic, \"\")\n\t\t\n\t\tlocal m =\n\t\t\tmw.ustring.match(remainder, \"^.\" .. syllabicDiacritic) or  -- Syllabic consonant\n\t\t\tmw.ustring.match(remainder, \"^\" .. vowel .. tie .. vowel)  -- Tie bar\n\t\t\n\t\t-- Starts with a recognised\
      \ diphthong?\n\t\tfor _, diph in ipairs(diphs) do\n\t\t\tif m then\n\t\t\t\tbreak\n\t\t\tend\n\t\t\t\n\t\t\tm = m or mw.ustring.match(remainder, \"^\" .. diph)\n\t\tend\n\t\t\n\t\t-- If we haven't found anything yet, just match on a single vowel\n\t\t\
      m = m or mw.ustring.match(remainder, \"^\" .. vowel)\n\t\t\n\t\tif m then\n\t\t\t-- Found a vowel, add it\n\t\t\tcount = count + 1\n\t\t\tremainder = string.sub(remainder, #m + 1)\n\t\telse\n\t\t\t-- Found a non-vowel, skip it\n\t\t\tremainder = string.gsub(remainder,\
      \ \"^\" .. UTF8Char, \"\")\n\t\tend\n\tend\n\t\n\tif count ~= 0 then return count end\n\t\n\treturn nil\n\t\nend\n\n\nfunction export.countVowels2Test(frame)\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {default = \"\"},\n\t}\n\t\n\tlocal\
      \ args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal count = export.getVowels(args[2], lang)\n\t\n\treturn\
      \ 'The text \"' .. args[2] .. '\" contains ' .. count .. ' vowels.'\nend\n\n\nlocal function countVowels(text)\n\ttext = mw.ustring.toNFD(text) or error(\"Invalid UTF-8\")\n\t\n\tlocal _, count = mw.ustring.gsub(text, vowel, \"\")\n\tlocal _, sequenceCount\
      \ = mw.ustring.gsub(text, vowel..\"+\", \"\")\n\tlocal _, nonsyllabicCount = mw.ustring.gsub(text, vowel .. nonsyllabicDiacritic, \"\")\n\tlocal _, tieCount = mw.ustring.gsub(text, vowel .. tie .. vowel, \"\")\n\t\n\tlocal diphthongCount = count - (nonsyllabicCount\
      \ + tieCount)\n\t\n\treturn count, sequenceCount, diphthongCount\nend\n\n\nlocal function countDiphthongs(text, lang)\n\ttext = mw.ustring.toNFD(text) or error(\"Invalid UTF-8\")\n\t\n\tlocal diphthongs = diphthongs[lang:getCode()] or {}\n\t\n\tlocal _,\
      \ count\n\tlocal total = 0\n\t\n\tif diphthongs then\n\t\tfor i, diphthong in pairs(diphthongs) do\n\t\t\t_, count = mw.ustring.gsub(text, diphthong, \"\")\n\t\t\ttotal = total + count\n\t\tend\n\tend\n\t\n\treturn total\nend\n\n-- Used by [[Module:IPA]]\n\
      function export.hasDiphthongs(lang)\n\tif  (diphthongs[lang:getCode()]) then\n\t\treturn true\n\tend\n\treturn false\nend\n\nfunction export.countVowels(frame)\n\tlocal params = {\n\t\t[1] = {default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame.args, params)\n\t\n\tlocal count, sequenceCount, diphthongCount = countVowels(args[1])\n\t\n\tlocal outputs = {}\n\ttable.insert(outputs, (count or 'an unknown number of') .. ' vowels')\n\ttable.insert(outputs, (sequenceCount or 'an unknown\
      \ number of') .. ' vowel sequences')\n\ttable.insert(outputs, (diphthongCount or 'an unknown number of') .. ' vowels or vowels and diphthongs')\n\t\n\treturn 'The text \"' .. args[1] .. '\" contains ' .. mw.text.listToText(outputs) .. \".\"\nend\n\n\n\
      function export.countVowelsDiphthongs(frame)\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\tlocal lang = require(\"Module:languages\"\
      ).getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal vowels = countVowels(args[2])\n\tlocal count = vowels - countDiphthongs(args[2], lang) or 0\n\t\n\tlocal out = 'The text \"' .. args[2] .. '\" contains ' .. (count or 'an\
      \ unknown number of')\n\t\n\tif count == 1 then\n\t\tout = out .. ' vowel or diphthong.'\n\telse\n\t\tout = out .. ' vowels or diphthongs.'\n\tend\n\t\n\treturn out\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:10.847Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ahyphenation&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47812 t=1555362610730852
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:10 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 197590964, 838405336, 702390211
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="680556" pageid="680556" ns="10" title="Template:hyphenation"><revisions><rev user="Rua" timestamp="2016-10-17T16:57:24Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Replaced content with &quot;{{#invoke:hyphenation|hyphenation}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&quot;" xml:space="preserve">{{#invoke:hyphenation|hyphenation}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:11.042Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ahyphenation&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=61607 t=1555362610929469
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:11 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 674320423, 816935168, 702980277
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5878916\" pageid=\"5878916\" ns=\"828\" title=\"Module:hyphenation\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-27T14:53:04Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"support 1= for language as well as lang=\" xml:space=\"preserve\">local export = {}\n\nlocal categorise_syllables = {\n\t[\"es\"] = true,\n\t[\"fr\"] = true,\n\t[\"it\"] = true,\n\t[\"\
      pt\"] = true,\n}\n\nfunction export.hyphenation(frame)\n\tlocal parent_args = frame:getParent().args\n\tlocal compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default\
      \ = \"und\"},\n\t\t[1 + offset] = {list = true, required = true, default = \"{{{2}}}\"},\n\t\t\n\t\t[\"caption\"] = {},\n\t\t[\"nocaption\"] = {type = \"boolean\"},\n\t\t[\"sc\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(parent_args,\
      \ params)\n\t\n\tlocal lang = args[compat and \"lang\" or 1]\n\tlocal lang = require(\"Module:languages\").getByCode(lang) or error(\"The language code \\\"\" .. lang .. \"\\\" is not valid.\")\n\tlocal sc = args[\"sc\"] and (require(\"Module:scripts\"\
      ).getByCode(args[\"sc\"]) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil\n\t\n\tlocal text = require(\"Module:links\").full_link({lang = lang, sc = sc, alt = table.concat(args[1 + offset], \"‧\"), tr = \"-\"})\n\tlocal category\
      \ = \"\"\n\t\n\tif categorise_syllables[lang:getCode()] then\n\t\tcategory = require(\"Module:utilities\").format_categories({lang:getCanonicalName() .. \" \" .. tostring(#args[1 + offset]) .. \"-syllable words\"}, lang)\n\tend\n\t\n\treturn (args[\"nocaption\"\
      ] and \"\" or (args[\"caption\"] or \"Hyphenation\") .. \": \") .. text .. category\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:11.221Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aen-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44379 t=1555362611127641
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:11 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 514857205, 741871869, 706021847
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="286438" pageid="286438" ns="10" title="Template:en-noun"><revisions><rev user="Rua" timestamp="2018-09-28T11:31:43Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Undo revision 50399302 by [[Special:Contributions/Rua|Rua]] ([[User talk:Rua|talk]])" xml:space="preserve">{{#invoke:en-headword|show|nouns}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:11.432Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aen-headword&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49263 t=1555362611302490
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:11 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1344.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 206424794, 646195718, 698039974
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4091555\" pageid=\"4091555\" ns=\"828\" title=\"Module:en-headword\"><revisions><rev user=\"Quesotiotyo\" timestamp=\"2019-02-16T03:02:16Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"fixed matching pattern for Category:English words containing three consecutive instances of the same letter (entries with three consecutive numbers or punctuation marks shouldn&#039;t\
      \ be included)\" xml:space=\"preserve\">local export = {}\nlocal pos_functions = {}\n\nlocal lang = require(\"Module:languages\").getByCode(\"en\")\n\nlocal function glossary_link(entry, text)\n\ttext = text or entry\n\treturn \"[[Appendix:Glossary#\"\
      \ .. entry .. \"|\" .. text .. \"]]\"\nend\n\n-- The main entry point.\n-- This is the only function that can be invoked from a template.\nfunction export.show(frame)\n\tPAGENAME = mw.title.getCurrentTitle().text\n\t\n\tlocal poscat = frame.args[1] or\
      \ error(\"Part of speech has not been specified. Please pass parameter 1 to the module invocation.\")\n\t\n\tlocal params = {\n\t\t[\"head\"] = {list = true, default = \"\"},\n\t\t[\"suff\"] = {type = \"boolean\"},\n\t}\n\t\n\tif pos_functions[poscat]\
      \ then\n\t\tfor key, val in pairs(pos_functions[poscat].params) do\n\t\t\tparams[key] = val\n\t\tend\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\tlocal data = {lang = lang, pos_category = poscat,\
      \ categories = {}, heads = args[\"head\"], inflections = {}}\n\t\n\tif args[\"suff\"] then\n\t\tdata.pos_category = \"suffixes\"\n\t\t\n\t\tif poscat == \"adjectives\" or poscat == \"adverbs\" or poscat == \"nouns\" or poscat == \"verbs\" then\n\t\t\t\
      table.insert(data.categories, (\"%s %s-forming suffixes\")\n\t\t\t\t:format(lang:getCanonicalName(), poscat:gsub(\"s$\", \"\")))\n\t\telse\n\t\t\terror(\"No category exists for suffixes forming \" .. poscat .. \".\")\n\t\tend\n\tend\n\t\n\tif pos_functions[poscat]\
      \ then\n\t\tpos_functions[poscat].func(args, data)\n\tend\n\t\n\tlocal pagename = mw.title.getCurrentTitle().text\n\tif pagename:find(\"[Qq][^Uu]\") or pagename:find(\"[Qq]$\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" words\
      \ containing Q not followed by U\")\n\tend\n\tif pagename:find(\"([A-Za-z])%1%1\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" words containing three consecutive instances of the same letter\")\n\tend\n\tif pagename:find(\"[^c]ie\"\
      ) or pagename:find(\"cei\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" words following the I before E except after C rule\")\n\tend\n\tif pagename:find(\"[^c]ei\") or pagename:find(\"cie\") then\n\t\ttable.insert(data.categories,\
      \ lang:getCanonicalName() .. \" words not following the I before E except after C rule\")\n\tend\n\tif not mw.ustring.toNFD(pagename):lower():find(\"[aeiouy]\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" words without vowels\"\
      )\n\tend\n\tif pagename:find(\"yre$\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. ' words ending in \"-yre\"')\n\tend\n\tif not pagename:find(\" \") and pagename:len() &gt; 25 then\n\t\ttable.insert(data.categories, \"Long \" ..\
      \ lang:getCanonicalName() .. ' words')\n\tend\n\tif pagename:find(\"^[^aeiou ]*a[^aeiou ]*e[^aeiou ]*i[^aeiou ]*o[^aeiou ]*u[^aeiou ]*$\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. ' words that use all vowels in alphabetical order')\n\
      \tend\n\treturn require(\"Module:headword\").full_headword(data)\nend\n\n-- This function does the common work between adjectives and adverbs\nfunction make_comparatives(params, data)\n\tlocal comp_parts = {label = glossary_link(\"comparable\", \"comparative\"\
      ), accel = {form = \"comparative\"}}\n\tlocal sup_parts = {label = glossary_link(\"comparable\", \"superlative\"), accel = {form = \"superlative\"}}\n\t\n\tif #params == 0 then\n\t\ttable.insert(params, {\"more\"})\n\tend\n\t\n\t-- To form the stem, replace\
      \ -(e)y with -i and remove a final -e.\n\tlocal stem = PAGENAME:gsub(\"([^aeiou])e?y$\", \"%1i\"):gsub(\"e$\", \"\")\n\t\n\t-- Go over each parameter given and create a comparative and superlative form\n\tfor i, val in ipairs(params) do\n\t\tlocal comp\
      \ = val[1]\n\t\tlocal sup = val[2]\n\t\t\n\t\tif comp == \"more\" and PAGENAME ~= \"many\" and PAGENAME ~= \"much\" then\n\t\t\ttable.insert(comp_parts, \"[[more]] \" .. PAGENAME)\n\t\t\ttable.insert(sup_parts, \"[[most]] \" .. PAGENAME)\n\t\telseif comp\
      \ == \"further\" and PAGENAME ~= \"far\" then\n\t\t\ttable.insert(comp_parts, \"[[further]] \" .. PAGENAME)\n\t\t\ttable.insert(sup_parts, \"[[furthest]] \" .. PAGENAME)\n\t\telseif comp == \"er\" then\n\t\t\ttable.insert(comp_parts, stem .. \"er\")\n\t\
      \t\ttable.insert(sup_parts, stem .. \"est\")\n\t\telseif comp == \"-\" or sup == \"-\" then\n\t\t\t-- Allowing '-' makes it more flexible to not have some forms\n\t\t\tif comp ~= \"-\" then\n\t\t\t\ttable.insert(comp_parts, comp)\n\t\t\tend\n\t\t\tif sup\
      \ ~= \"-\" then\n\t\t\t\ttable.insert(sup_parts, sup)\n\t\t\tend\n\t\telse\n\t\t\t-- If the full comparative was given, but no superlative, then\n\t\t\t-- create it by replacing the ending -er with -est.\n\t\t\tif not sup then\n\t\t\t\tif comp:find(\"\
      er$\") then\n\t\t\t\t\tsup = comp:gsub(\"er$\", \"est\")\n\t\t\t\telse\n\t\t\t\t\terror(\"The superlative of \\\"\" .. comp .. \"\\\" cannot be generated automatically. Please provide it with the \\\"sup\" .. (i == 1 and \"\" or i) .. \"=\\\" parameter.\"\
      )\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(comp_parts, comp)\n\t\t\ttable.insert(sup_parts, sup)\n\t\tend\n\tend\n\t\n\ttable.insert(data.inflections, comp_parts)\n\ttable.insert(data.inflections, sup_parts)\nend\n\npos_functions[\"adjectives\"\
      ] = {\n\tparams = {\n\t\t[1] = {list = true, allow_holes = true},\n\t\t[\"sup\"] = {list = true, allow_holes = true},\n\t\t},\n\tfunc = function(args, data)\n\t\tlocal shift = 0\n\t\tlocal is_not_comparable = false\n\t\tlocal is_comparative_only = false\n\
      \t\t\n\t\t-- If the first parameter is ?, then don't show anything, just return.\n\t\tif args[1][1] == \"?\" then\n\t\t\treturn\n\t\t-- If the first parameter is -, then move all parameters up one position.\n\t\telseif args[1][1] == \"-\" then\n\t\t\t\
      shift = 1\n\t\t\tis_not_comparable = true\n\t\t-- If the only argument is +, then remember this and clear parameters\n\t\telseif args[1][1] == \"+\" and args[1].maxindex == 1 then\n\t\t\tshift = 1\n\t\t\tis_comparative_only = true\n\t\tend\n\t\t\n\t\t\
      -- Gather all the comparative and superlative parameters.\n\t\tlocal params = {}\n\t\t\n\t\tfor i = 1, args[1].maxindex - shift do\n\t\t\tlocal comp = args[1][i + shift]\n\t\t\tlocal sup = args[\"sup\"][i]\n\t\t\t\n\t\t\tif comp or sup then\n\t\t\t\ttable.insert(params,\
      \ {comp, sup})\n\t\t\tend\n\t\tend\n\t\t\n\t\tif shift == 1 then\n\t\t\t-- If the first parameter is \"-\" but there are no parameters,\n\t\t\t-- then show \"not comparable\" only and return.\n\t\t\t-- If there are parameters, then show \"not generally\
      \ comparable\"\n\t\t\t-- before the forms.\n\t\t\tif #params == 0 then\n\t\t\t\tif is_not_comparable then\n\t\t\t\t\ttable.insert(data.inflections, {label = \"not \" .. glossary_link(\"comparable\")})\n\t\t\t\t\ttable.insert(data.categories, lang:getCanonicalName()\
      \ .. \" uncomparable adjectives\")\n\t\t\t\t\treturn\n\t\t\t\tend\n\t\t\t\tif is_comparative_only then\n\t\t\t\t\ttable.insert(data.inflections, {label = glossary_link(\"comparable\", \"comparative\") .. \" form only\"})\n\t\t\t\t\ttable.insert(data.categories,\
      \ lang:getCanonicalName() .. \" comparative-only adjectives\")\n\t\t\t\t\treturn\n\t\t\t\tend\n\t\t\telse\n\t\t\t\ttable.insert(data.inflections, {label = \"not generally \" .. glossary_link(\"comparable\")})\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Process the\
      \ parameters\n\t\tmake_comparatives(params, data)\n\tend\n}\n\npos_functions[\"adverbs\"] = {\n\tparams = {\n\t\t[1] = {list = true, allow_holes = true},\n\t\t[\"sup\"] = {list = true, allow_holes = true},\n\t\t},\n\tfunc = function(args, data)\n\t\tlocal\
      \ shift = 0\n\t\t\n\t\t-- If the first parameter is ?, then don't show anything, just return.\n\t\tif args[1][1] == \"?\" then\n\t\t\treturn\n\t\t-- If the first parameter is -, then move all parameters up one position.\n\t\telseif args[1][1] == \"-\"\
      \ then\n\t\t\tshift = 1\n\t\tend\n\t\t\n\t\t-- Gather all the comparative and superlative parameters.\n\t\tlocal params = {}\n\t\t\n\t\tfor i = 1, args[1].maxindex - shift do\n\t\t\tlocal comp = args[1][i + shift]\n\t\t\tlocal sup = args[\"sup\"][i]\n\t\
      \t\t\n\t\t\tif comp or sup then\n\t\t\t\ttable.insert(params, {comp, sup})\n\t\t\tend\n\t\tend\n\t\t\n\t\tif shift == 1 then\n\t\t\t-- If the first parameter is \"-\" but there are no parameters,\n\t\t\t-- then show \"not comparable\" only and return.\
      \ If there are parameters,\n\t\t\t-- then show \"not generally comparable\" before the forms.\n\t\t\tif #params == 0 then\n\t\t\t\ttable.insert(data.inflections, {label = \"not \" .. glossary_link(\"comparable\")})\n\t\t\t\ttable.insert(data.categories,\
      \ lang:getCanonicalName() .. \" uncomparable adverbs\")\n\t\t\t\treturn\n\t\t\telse\n\t\t\t\ttable.insert(data.inflections, {label = \"not generally \" .. glossary_link(\"comparable\")})\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Process the parameters\n\t\tmake_comparatives(params,\
      \ data)\n\tend\n}\n\npos_functions[\"nouns\"] = {\n\tparams = {\n\t\t[1] = {list = true, allow_holes = true},\n\t\t\n\t\t-- TODO: This should really be a list parameter too...\n\t\t[\"plqual\"] = {},\n\t\t[\"pl2qual\"] = {},\n\t\t[\"pl3qual\"] = {},\n\t\
      \t[\"pl4qual\"] = {},\n\t\t[\"pl5qual\"] = {},\n\t\t},\n\tfunc = function(args, data)\n\t\t-- Gather all the plural parameters from the numbered parameters.\n\t\tlocal plurals = {}\n\t\t\n\t\tfor i = 1, args[1].maxindex do\n\t\t\tlocal pl = args[1][i]\n\
      \t\t\t\n\t\t\tif pl then\n\t\t\t\tlocal qual = args[\"pl\" .. (i == 1 and \"\" or i) .. \"qual\"]\n\t\t\t\t\n\t\t\t\tif qual then\n\t\t\t\t\ttable.insert(plurals, {term = pl, qualifiers = {qual}})\n\t\t\t\telse\n\t\t\t\t\ttable.insert(plurals, pl)\n\t\t\
      \t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Decide what to do next...\n\t\tlocal mode = nil\n\t\t\n\t\tif plurals[1] == \"?\" or plurals[1] == \"!\" or plurals[1] == \"-\" or plurals[1] == \"~\" then\n\t\t\tmode = plurals[1]\n\t\t\ttable.remove(plurals,\
      \ 1)  -- Remove the mode parameter\n\t\tend\n\t\t\n\t\t-- Plural is unknown\n\t\tif mode == \"?\" then\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" nouns with unknown or uncertain plurals\")\n\t\t\treturn\n\t\t-- Plural is not attested\n\
      \t\telseif mode == \"!\" then\n\t\t\ttable.insert(data.inflections, {label = \"plural not attested\"})\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" nouns with unattested plurals\")\n\t\t\treturn\n\t\t-- Uncountable noun; may occasionally\
      \ have a plural\n\t\telseif mode == \"-\" then\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" uncountable nouns\")\n\t\t\t\n\t\t\t-- If plural forms were given explicitly, then show \"usually\"\n\t\t\tif #plurals &gt; 0 then\n\t\t\t\
      \ttable.insert(data.inflections, {label = \"usually \" .. glossary_link(\"uncountable\")})\n\t\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable nouns\")\n\t\t\telse\n\t\t\t\ttable.insert(data.inflections, {label = glossary_link(\"\
      uncountable\")})\n\t\t\tend\n\t\t-- Mixed countable/uncountable noun, always has a plural\n\t\telseif mode == \"~\" then\n\t\t\ttable.insert(data.inflections, {label = glossary_link(\"countable\") .. \" and \" .. glossary_link(\"uncountable\")})\n\t\t\t\
      table.insert(data.categories, lang:getCanonicalName() .. \" uncountable nouns\")\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable nouns\")\n\t\t\t\n\t\t\t-- If no plural was given, add a default one now\n\t\t\tif #plurals ==\
      \ 0 then\n\t\t\t\tplurals = {\"s\"}\n\t\t\tend\n\t\t-- The default, always has a plural\n\t\telse\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable nouns\")\n\t\t\t\n\t\t\t-- If no plural was given, add a default one now\n\t\t\
      \tif #plurals == 0 then\n\t\t\t\tplurals = {\"s\"}\n\t\t\tend\n\t\t\tif plural and not mw.title.new(plural).exists then\n\t\t\t\ttable.insert(categories, \"English nouns with missing plurals\")\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- If there are no plurals\
      \ to show, return now\n\t\tif #plurals == 0 then\n\t\t\treturn\n\t\tend\n\t\t\n\t\t-- There are plural forms to show, so show them\n\t\tlocal pl_parts = {label = \"plural\", accel = {form = \"p\"}}\n\t\t\n\t\tlocal function check_ies(pl, stem)\n\t\t\t\
      local newplural, nummatches = stem:gsub(\"([^aeiou])y$\",\"%1ies\")\n\t\t\treturn nummatches &gt; 0 and pl == newplural\n\t\tend\n\t\tlocal stem = PAGENAME\n\t\tlocal irregular = false\n\t\tfor i, pl in ipairs(plurals) do\n\t\t\tif pl == \"s\" then\n\t\
      \t\t\ttable.insert(pl_parts, stem .. \"s\")\n\t\t\telseif pl == \"es\" then\n\t\t\t\ttable.insert(pl_parts, stem .. \"es\")\n\t\t\telse\n\t\t\t\ttable.insert(pl_parts, pl)\n\t\t\t\tif type(pl) == \"table\" then\n\t\t\t\t\tpl = pl.term\n\t\t\t\tend\n\t\t\
      \t\tif not stem:find(\" \") and not (pl == stem .. \"s\" or pl == stem .. \"es\" or check_ies(pl, stem)) then\n\t\t\t\t\tirregular = true\n\t\t\t\t\tif pl == stem then\n\t\t\t\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" invariant nouns\"\
      )\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\tif irregular then\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" nouns with irregular plurals\")\n\t\tend\n\t\t\n\t\ttable.insert(data.inflections, pl_parts)\n\tend\n}\n\npos_functions[\"\
      proper nouns\"] = {\n\tparams = {\n\t\t[1] = {list = true},\n\t\t},\n\tfunc = function(args, data)\n\t\tlocal plurals = args[1]\n\t\t\n\t\t-- Decide what to do next...\n\t\tlocal mode = nil\n\t\t\n\t\tif plurals[1] == \"?\" or plurals[1] == \"!\" or plurals[1]\
      \ == \"-\" or plurals[1] == \"~\" then\n\t\t\tmode = plurals[1]\n\t\t\ttable.remove(plurals, 1)  -- Remove the mode parameter\n\t\tend\n\t\t\n\t\t-- Plural is unknown\n\t\tif mode == \"?\" then\n\t\t\ttable.insert(data.categories, lang:getCanonicalName()\
      \ .. \" proper nouns with unknown or uncertain plurals\")\n\t\t\treturn\n\t\t-- Plural is not attested\n\t\telseif mode == \"!\" then\n\t\t\ttable.insert(data.inflections, {label = \"plural not attested\"})\n\t\t\ttable.insert(data.categories, lang:getCanonicalName()\
      \ .. \" proper nouns with unattested plurals\")\n\t\t\treturn\n\t\t-- Uncountable noun; may occasionally have a plural\n\t\telseif mode == \"-\" then\n\t\t\t-- If plural forms were given explicitly, then show \"usually\"\n\t\t\tif #plurals &gt; 0 then\n\
      \t\t\t\ttable.insert(data.inflections, {label = \"usually \" .. glossary_link(\"uncountable\")})\n\t\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable proper nouns\")\n\t\t\telse\n\t\t\t\ttable.insert(data.inflections, {label =\
      \ glossary_link(\"uncountable\")})\n\t\t\tend\n\t\t-- Mixed countable/uncountable noun, always has a plural\n\t\telseif mode == \"~\" then\n\t\t\ttable.insert(data.inflections, {label = glossary_link(\"countable\") .. \" and \" .. glossary_link(\"uncountable\"\
      )})\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable proper nouns\")\n\t\t\t\n\t\t\t-- If no plural was given, add a default one now\n\t\t\tif #plurals == 0 then\n\t\t\t\tplurals = {\"s\"}\n\t\t\tend\n\t\telseif #plurals &gt;\
      \ 0 then\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable proper nouns\")\n\t\tend\n\t\t\n\t\t-- If there are no plurals to show, return now\n\t\tif #plurals == 0 then\n\t\t\treturn\n\t\tend\n\t\t\n\t\t-- There are plural forms\
      \ to show, so show them\n\t\tlocal pl_parts = {label = \"plural\", accel = {form = \"p\"}}\n\t\t\n\t\tlocal stem = PAGENAME\n\t\t\n\t\tfor i, pl in ipairs(plurals) do\n\t\t\tif pl == \"s\" then\n\t\t\t\ttable.insert(pl_parts, stem .. \"s\")\n\t\t\telseif\
      \ pl == \"es\" then\n\t\t\t\ttable.insert(pl_parts, stem .. \"es\")\n\t\t\telse\n\t\t\t\ttable.insert(pl_parts, pl)\n\t\t\tend\n\t\n\t\tend\n\t\t\n\t\ttable.insert(data.inflections, pl_parts)\n\tend\n}\n\npos_functions[\"verbs\"] = {\n\tparams = {\n\t\t\
      [1] = {list = \"pres_3sg\", allow_holes = true},\n\t\t\n\t\t[\"pres_3sg_qual\"] = {},\n\t\t[\"pres_3sg2_qual\"] = {},\n\t\t[\"pres_3sg3_qual\"] = {},\n\t\t[\"pres_3sg4_qual\"] = {},\n\t\t[\"pres_3sg5_qual\"] = {},\n\t\t\n\t\t[2] = {list = \"pres_ptc\"\
      , allow_holes = true},\n\t\t\n\t\t[\"pres_ptc_qual\"] = {},\n\t\t[\"pres_ptc2_qual\"] = {},\n\t\t[\"pres_ptc3_qual\"] = {},\n\t\t[\"pres_ptc4_qual\"] = {},\n\t\t[\"pres_ptc5_qual\"] = {},\n\t\t\n\t\t[3] = {list = \"past\", allow_holes = true},\n\t\t\n\t\
      \t[\"past_qual\"] = {},\n\t\t[\"past2_qual\"] = {},\n\t\t[\"past3_qual\"] = {},\n\t\t[\"past4_qual\"] = {},\n\t\t[\"past5_qual\"] = {},\n\t\t\n\t\t[4] = {list = \"past_ptc\", allow_holes = true},\n\t\t\n\t\t[\"past_ptc_qual\"] = {},\n\t\t[\"past_ptc2_qual\"\
      ] = {},\n\t\t[\"past_ptc3_qual\"] = {},\n\t\t[\"past_ptc4_qual\"] = {},\n\t\t[\"past_ptc5_qual\"] = {},\n\t\t},\n\tfunc = function(args, data)\n\t\t-- Get parameters\n\t\tlocal par1 = args[1][1]\n\t\tlocal par2 = args[2][1]\n\t\tlocal par3 = args[3][1]\n\
      \t\tlocal par4 = args[4][1]\n\t\t\n\t\tlocal pres_3sg_forms = {label = \"third-person singular simple present\", accel = {form = \"3|s|pres\"}}\n\t\tlocal pres_ptc_forms = {label = \"present participle\", accel = {form = \"pres|ptcp\"}}\n\t\tlocal past_forms\
      \ = {label = \"simple past\", accel = {form = \"past\"}}\n\t\tlocal pres_3sg_form = par1 or PAGENAME .. \"s\"\n\t\tlocal pres_ptc_form = par2 or PAGENAME .. \"ing\"\n\t\tlocal past_form = par3 or PAGENAME .. \"ed\"\n\t\t\n\t\tif par1 and not par2 and not\
      \ par3 then\n\t\t\t-- This is the \"new\" format, which uses only the first parameter.\n\t\t\tif par1 == \"es\" then\n\t\t\t\tpres_3sg_form = PAGENAME .. \"es\"\n\t\t\t\tpres_ptc_form = PAGENAME .. \"ing\"\n\t\t\t\tpast_form = PAGENAME .. \"ed\"\n\t\t\t\
      elseif par1 == \"ies\" then\n\t\t\t\tif not mw.ustring.find(PAGENAME, \"y$\") then\n\t\t\t\t\terror(\"The first parameter is \\\"ies\\\" but the verb does not end in -y.\")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tlocal stem = mw.ustring.gsub(PAGENAME, \"y$\",\
      \ \"\")\n\t\t\t\tpres_3sg_form = stem .. \"ies\"\n\t\t\t\tpres_ptc_form = stem .. \"ying\"\n\t\t\t\tpast_form = stem .. \"ied\"\n\t\t\telseif par1 == \"d\" then\n\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\tpres_ptc_form = PAGENAME .. \"ing\"\n\t\
      \t\t\tpast_form = PAGENAME .. \"d\"\n\t\t\telse\n\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\tpres_ptc_form = par1 .. \"ing\"\n\t\t\t\tpast_form = par1 .. \"ed\"\n\t\t\tend\n\t\telse\n\t\t\t-- This is the \"legacy\" format, using the second and third\
      \ parameters as well.\n\t\t\t-- It is included here for backwards compatibility and to ease the transition.\n\t\t\tif par3 then\n\t\t\t\tif par3 == \"es\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/es3\")\n\t\t\t\t\tpres_3sg_form = par1\
      \ .. par2 .. \"es\"\n\t\t\t\t\tpres_ptc_form = par1 .. par2 .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. par2 .. \"ed\"\n\t\t\t\telseif par3 == \"ing\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ing3\")\n\t\t\t\t\tpres_3sg_form = PAGENAME\
      \ .. \"s\"\n\t\t\t\t\tpres_ptc_form = par1 .. par2 .. \"ing\"\n\t\t\t\t\t\n\t\t\t\t\tif par2 == \"y\" then\n\t\t\t\t\t\tpast_form = PAGENAME .. \"d\"\n\t\t\t\t\telse\n\t\t\t\t\t\tpast_form = par1 .. par2 .. \"ed\"\n\t\t\t\t\tend\n\t\t\t\telseif par3 ==\
      \ \"ed\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ed3\")\n\t\t\t\t\t\n\t\t\t\t\tif par2 == \"i\" then\n\t\t\t\t\t\tpres_3sg_form = par1 .. par2 .. \"es\"\n\t\t\t\t\t\tpres_ptc_form = PAGENAME .. \"ing\"\n\t\t\t\t\telse\n\t\t\t\t\t\t\
      pres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\t\t\tpres_ptc_form = par1 .. par2 .. \"ing\"\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tpast_form = par1 .. par2 .. \"ed\"\n\t\t\t\telseif par3 == \"d\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/d3\"\
      )\n\t\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\t\tpres_ptc_form = par1 .. par2 .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. par2 .. \"d\"\n\t\t\t\telse\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/xxx3\")\n\t\t\t\tend\n\t\t\telse\n\t\t\
      \t\tif par2 == \"es\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/es2\")\n\t\t\t\t\tpres_3sg_form = par1 .. \"es\"\n\t\t\t\t\tpres_ptc_form = par1 .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. \"ed\"\n\t\t\t\telseif par2 == \"ies\" then\n\
      \t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ies2\")\n\t\t\t\t\t\n\t\t\t\t\tif par1 .. \"y\" ~= PAGENAME then\n\t\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ies2/par1 not pagename\")\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tpres_3sg_form\
      \ = par1 .. \"ies\"\n\t\t\t\t\tpres_ptc_form = par1 .. \"ying\"\n\t\t\t\t\tpast_form = par1 .. \"ied\"\n\t\t\t\telseif par2 == \"ing\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ing2\")\n\t\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\
      \t\t\t\tpres_ptc_form = par1 .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. \"ed\"\n\t\t\t\telseif par2 == \"ed\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ed2\")\n\t\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\t\tpres_ptc_form = par1\
      \ .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. \"ed\"\n\t\t\t\telseif par2 == \"d\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/d2\")\n\t\t\t\t\t\n\t\t\t\t\tif par1 ~= PAGENAME then\n\t\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/d2/par1\
      \ not pagename\")\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\t\tpres_ptc_form = par1 .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. \"d\"\n\t\t\t\telse\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/xxx2\")\n\t\
      \t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal pres_3sg_qual = args[\"pres_3sg_qual\"]\n\t\tlocal pres_ptc_qual = args[\"pres_ptc_qual\"]\n\t\tlocal past_qual = args[\"past_qual\"]\n\t\t\n\t\ttable.insert(pres_ptc_forms, {term = pres_ptc_form, qualifiers\
      \ = {pres_ptc_qual}})\n\t\ttable.insert(pres_3sg_forms, {term = pres_3sg_form, qualifiers = {pres_3sg_qual}})\n\t\ttable.insert(past_forms, {term = past_form, qualifiers = {past_qual}})\n\t\t\n\t\t-- Present 3rd singular\n\t\tfor i = 2, args[1].maxindex\
      \ do\n\t\t\tlocal form = args[1][i]\n\t\t\tlocal qual = args[\"pres_3sg\" .. i .. \"_qual\"]\n\t\t\t\n\t\t\tif form then\n\t\t\t\ttable.insert(pres_3sg_forms, {term = form, qualifiers = {qual}})\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Present participle\n\t\t\
      for i = 2, args[2].maxindex do\n\t\t\tlocal form = args[2][i]\n\t\t\tlocal qual = args[\"pres_ptc\" .. i .. \"_qual\"]\n\t\t\t\n\t\t\tif form then\n\t\t\t\ttable.insert(pres_ptc_forms, {term = form, qualifiers = {qual}})\n\t\t\tend\n\t\tend\n\t\t\n\t\t\
      -- Past\n\t\tfor i = 2, args[3].maxindex do\n\t\t\tlocal form = args[3][i]\n\t\t\tlocal qual = args[\"past\" .. i .. \"_qual\"]\n\t\t\t\n\t\t\tif form then\n\t\t\t\ttable.insert(past_forms, {term = form, qualifiers = {qual}})\n\t\t\tend\n\t\tend\n\t\t\n\
      \t\t-- Past participle\n\t\tlocal found_past_ptc = false\n\t\tlocal past_ptc_forms = {label = \"past participle\", accel = {form = \"past|ptcp\"}}\n\t\tlocal qual = args[\"past_ptc_qual\"]; if qual == \"\" then qual = nil end\n\t\ttable.insert(past_ptc_forms,\
      \ {term = par4 or past_form, qualifiers = {qual}})\n\t\tif par4 or qual then\n\t\t\tfound_past_ptc = true\n\t\tend\n\t\tfor i = 2, args[4].maxindex do\n\t\t\tlocal form = args[4][i]\n\t\t\tlocal qual = args[\"past_ptc\" .. i .. \"_qual\"]\n\t\t\tif form\
      \ then\n\t\t\t\ttable.insert(past_ptc_forms, {term = form, qualifiers = {qual}})\n\t\t\t\tfound_past_ptc = true\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Are the past forms identical to the past participle forms?\n\t\tlocal identical = true\n\t\t\n\t\tif #past_forms\
      \ ~= #past_ptc_forms then\n\t\t\tidentical = false\n\t\telse\n\t\t\tfor key, val in ipairs(past_forms) do\n\t\t\t\tif past_ptc_forms[key].term ~= val.term or past_ptc_forms[key].qual ~= val.qual then\n\t\t\t\t\tidentical = false\n\t\t\t\t\tbreak\n\t\t\t\
      \tend\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Insert the forms\n\t\ttable.insert(data.inflections, pres_3sg_forms)\n\t\ttable.insert(data.inflections, pres_ptc_forms)\n\t\t\n\t\tif not found_past_ptc or identical then\n\t\t\tpast_forms.label = \"simple past\
      \ and past participle\"\n\t\t\tpast_forms.accel = {form = \"past|and|past|ptcp\"}\n\t\t\ttable.insert(data.inflections, past_forms)\n\t\telse\n\t\t\ttable.insert(data.inflections, past_forms)\n\t\t\ttable.insert(data.inflections, past_ptc_forms)\n\t\t\
      end\n\tend\n}\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:11.638Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50315 t=1555362611516693
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:11 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1316.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 676772287, 645477678, 702195142
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3989053\" pageid=\"3989053\" ns=\"828\" title=\"Module:headword\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-04T11:34:46Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal m_data = mw.loadData(\"Module:headword/data\")\n\nlocal title = mw.title.getCurrentTitle()\n\nlocal isLemma = m_data.lemmas\nlocal isNonLemma = m_data.nonlemmas\n\
      local notranslit = m_data.notranslit\nlocal toBeTagged = m_data.toBeTagged\n\nlocal parameters = {\n\tlang = { type = \"object\" },\n\tscript = { type = \"object\" },\n\theads = { type = \"table\" },\n\ttranslits = { type = \"table\" },\n\ttranscriptions\
      \ = { type = \"table\" },\n\tinflections = { type = \"table\" },\n\tgenders = { type = \"table\" },\n\tcategories = { type = \"table\" },\n\tpos_category = { type = \"string\" },\n\tsort_key = { type = \"string\" },\n\tid = { type = \"string\" },\n}\n\n\
      local function test_script(text, script_code)\n\tif type(text) == \"string\" and type(script_code) == \"string\" then\n\t\tlocal sc = require(\"Module:scripts\").getByCode(script_code)\n\t\tlocal characters\n\t\tif sc then\n\t\t\tcharacters = sc:getCharacters()\n\
      \t\tend\n\t\t\n\t\tlocal out\n\t\tif characters then\n\t\t\ttext = mw.ustring.gsub(text, \"%W\", \"\")\n\t\t\tout = mw.ustring.find(text, \"[\" .. characters .. \"]\")\n\t\tend\n\t\t\n\t\tif out then\n\t\t\treturn true\n\t\telse\n\t\t\treturn false\n\t\
      \tend\n\telse\n\t\tmw.log(\"Parameters to test_script were incorrect.\")\n\t\treturn nil\n\tend\nend\n\n\nlocal function preprocess(data)\n\t--[=[\n\t[[Special:WhatLinksHere/Template:tracking/headword/heads-not-table]]\n\t[[Special:WhatLinksHere/Template:tracking/headword/translits-not-table]]\n\
      \t]=]\n\tif type(data.heads) ~= \"table\" then\n\t\tif data.heads then\n\t\t\trequire(\"Module:debug\").track(\"headword/heads-not-table\")\n\t\tend\n\t\t\n\t\tdata.heads = { data.heads }\n\tend\n\t\n\tif type(data.translits) ~= \"table\" then\n\t\tif\
      \ data.translits then\n\t\t\trequire(\"Module:debug\").track(\"headword/translits-not-table\")\n\t\tend\n\t\t\n\t\tdata.translits = { data.translits }\n\tend\n\t\n\tif type(data.transcriptions) ~= \"table\" then\n\t\tif data.transcriptions then\n\t\t\t\
      require(\"Module:debug\").track(\"headword/transcriptions-not-table\")\n\t\tend\n\t\t\n\t\tdata.transcriptions = { data.transcriptions }\n\tend\n\t\n\tif not data.heads or #data.heads == 0 then\n\t\tdata.heads = {\"\"}\n\tend\n\t\n\t-- Determine if term\
      \ is reconstructed\n\tlocal is_reconstructed = data.lang:getType() == \"reconstructed\"\n\t\tor title.nsText == \"Reconstruction\"\n\t\n\t-- Create a default headword.\n\tlocal subpagename = title.subpageText\n\tlocal pagename = title.text\n\tlocal default_head\n\
      \tif is_reconstructed then\n\t\tdefault_head = require(\"Module:utilities\").plain_gsub(pagename, data.lang:getCanonicalName() .. \"/\", \"\")\n\telse\n\t\tdefault_head = subpagename\n\tend\n\t\n\t-- Add links to multi-word page names when appropriate\n\
      \tif data.lang:getCode() ~= \"zh\" then\n\t\tlocal spacingPunctuation = \"([%s%p]+)\"\n\t\t--[[ \tVariable containing anything that is\n\t\t\t\tnot a punctuation character found inside of words.\n\t\t\t\tUsed to exclude characters from the above regex.\t\
      ]]\n\t\tlocal notWordPunc = \"([^-־׳״'.·*’]+)\"\n\t\tlocal contains_words = false\n\t\t\n\t\tfor possibleWordBreak in mw.ustring.gmatch(default_head, spacingPunctuation) do\n\t\t\tif mw.ustring.find(possibleWordBreak, notWordPunc) then\n\t\t\t\tcontains_words\
      \ = true\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\n\t\tif (not is_reconstructed) and contains_words then\n\t\t\tlocal function workaround_to_exclude_chars(s)\n\t\t\t\treturn mw.ustring.gsub(s, notWordPunc, \"]]%1[[\")\n\t\t\tend\n\t\t\t\n\t\t\tdefault_head\
      \ = \"[[\"\n\t\t\t\t.. mw.ustring.gsub(\n\t\t\t\t\tdefault_head,\n\t\t\t\t\tspacingPunctuation,\n\t\t\t\t\tworkaround_to_exclude_chars\n\t\t\t\t\t)\n\t\t\t\t.. \"]]\"\n\t\t\t--[=[\n\t\t\tuse this when workaround is no longer needed:\n\t\t\tdefault_head\
      \ = \"[[\"\n\t\t\t\t.. mw.ustring.gsub(default_head, WORDBREAKCHARS, \"]]%1[[\")\n\t\t\t\t.. \"]]\"\n\t\t\t\n\t\t\tRemove any empty links, which could have been created above\n\t\t\tat the beginning or end of the string.\n\t\t\t]=]\n\t\t\tdefault_head\
      \ = mw.ustring.gsub(default_head, \"%[%[%]%]\", \"\")\n\t\tend\n\tend\n\t\n\tif is_reconstructed then\n\t\tdefault_head = \"*\" .. default_head\n\tend\n\t\n\t-- If a head is the empty string \"\", then replace it with the default\n\tfor i, head in ipairs(data.heads)\
      \ do\n\t\tif head == \"\" then\n\t\t\thead = default_head\n\t\telse\n\t\t\tif head == default_head and data.lang:getCanonicalName() == \"English\" then\n\t\t\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" terms with redundant head\
      \ parameter\")\n\t\t\tend\t\t\t\n\t\tend\n\t\tdata.heads[i] = head\n\tend\n\t\n\t--[[\tTry to detect the script if it was not provided\n\t\t\tWe use the first headword for this, and assume\n\t\t\tthat all of them have the same script\n\t\t\tThis *should*\
      \ always be true, right?\t\t]]\n\tif not data.sc then\n\t\tdata.sc = require(\"Module:scripts\").findBestScript(data.heads[1], data.lang)\n\tend\n\t\n\tfor i, val in pairs(data.translits) do\n\t\tdata.translits[i] = {display = val, is_manual = true}\n\t\
      end\n\t\n\t-- Make transliterations\n\tfor i, head in ipairs(data.heads) do\n\t\tlocal translit = data.translits[i]\n\t\t\n\t\t-- Try to generate a transliteration if necessary\n\t\t-- Generate it if the script is not Latn or similar, and if no transliteration\
      \ was provided\n\t\tif translit and translit.display == \"-\" then\n\t\t\ttranslit = nil\n\t\telseif not translit and not (data.sc:getCode():find(\"Latn\", nil, true) or data.sc:getCode() == \"Latinx\" or data.sc:getCode() == \"None\") and (not data.sc\
      \ or data.sc:getCode() ~= \"Imag\") then\n\t\t\ttranslit = data.lang:transliterate(require(\"Module:links\").remove_links(head), data.sc)\n\t\t\t\n\t\t\t-- There is still no transliteration?\n\t\t\t-- Add the entry to a cleanup category.\n\t\t\tif not\
      \ translit and not notranslit[data.lang:getCode()] then\n\t\t\t\ttranslit = \"&lt;small&gt;transliteration needed&lt;/small&gt;\"\n\t\t\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" terms needing transliteration\")\n\t\t\tend\n\t\t\
      \t\n\t\t\tif translit then\n\t\t\t\ttranslit = {display = translit, is_manual = false}\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Link to the transliteration entry for languages that require this\n\t\tif translit and data.lang:link_tr() then\n\t\t\ttranslit.display\
      \ = require(\"Module:links\").full_link{\n\t\t\t\tterm = translit.display,\n\t\t\t\tlang = data.lang,\n\t\t\t\tsc = require(\"Module:scripts\").getByCode(\"Latn\"),\n\t\t\t\ttr = \"-\"\n\t\t\t\t}\n\t\tend\n\t\t\n\t\tdata.translits[i] = translit\n\tend\n\
      \t\n\tif data.id and type(data.id) ~= \"string\" then\n\t\terror(\"The id in the data table should be a string.\")\n\tend\nend\n\n\n-- Format a headword with transliterations\nlocal function format_headword(data)\n\tlocal m_links = require(\"Module:links\"\
      )\n\tlocal m_scriptutils = require(\"Module:script utilities\")\n\t\n\t-- Are there non-empty transliterations?\n\t-- Need to do it this way because translit[1] might be nil while translit[2] is not\n\tlocal has_translits = false\n\t\n\t-- Format the headwords\n\
      \tfor i, head in ipairs(data.heads) do\n\t\tif data.translits[i] or data.transcriptions[i] then\n\t\t\thas_translits = true\n\t\tend\n\t\t\n\t\t-- Apply processing to the headword, for formatting links and such\n\t\tif head:find(\"[[\", nil, true) and\
      \ (not data.sc or data.sc:getCode() ~= \"Imag\") then\n\t\t\thead = m_links.language_link({term = head, lang = data.lang}, false)\n\t\tend\n\t\t\n\t\t-- Add language and script wrapper\n\t\tif i == 1 then\n\t\t\thead = m_scriptutils.tag_text(head, data.lang,\
      \ data.sc, \"head\", nil, data.id)\n\t\telse\n\t\t\thead = m_scriptutils.tag_text(head, data.lang, data.sc, \"head\", nil)\n\t\tend\n\t\t\n\t\tdata.heads[i] = head\n\tend\n\t\n\tlocal translits_formatted = \"\"\n\t\n\tif has_translits then\n\t\t-- Format\
      \ the transliterations\n\t\tlocal translits = data.translits\n\t\tlocal transcriptions = data.transcriptions\n\t\t\n\t\tif translits then\n\t\t\t-- using pairs() instead of ipairs() in case there is a gap\n\t\t\tfor i, _ in pairs(translits) do\n\t\t\t\t\
      if type(i) == \"number\" then\n\t\t\t\t\ttranslits[i] = m_scriptutils.tag_translit(translits[i].display, data.lang:getCode(), \"head\", nil, translits[i].is_manual)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\tif transcriptions then\n\t\t\tfor i, _ in pairs(transcriptions)\
      \ do\n\t\t\t\tif type(i) == \"number\" then\n\t\t\t\t\ttranscriptions[i] = m_scriptutils.tag_transcription(transcriptions[i], data.lang:getCode(), \"head\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\tfor i = 1, math.max(#translits, #transcriptions) do\n\t\
      \t\tlocal translits_formatted = {}\n\t\t\ttable.insert(translits_formatted, translits[i] and translits[i] or \"\")\n\t\t\ttable.insert(translits_formatted, (translits[i] and transcriptions[i]) and \" \" or \"\")\n\t\t\ttable.insert(translits_formatted,\
      \ transcriptions[i] and \"/\" .. transcriptions[i] .. \"/\" or \"\")\n\t\t\tdata.translits[i] = table.concat(translits_formatted)\n\t\tend\n\t\t\n\t\ttranslits_formatted = \" (\" .. table.concat(data.translits, \" &lt;i&gt;or&lt;/i&gt; \") .. \")\"\n\t\
      \t\n\t\tlocal transliteration_page = mw.title.new(data.lang:getCanonicalName() .. \" transliteration\", \"Wiktionary\")\n\t\t\n\t\tif transliteration_page then\n\t\t\tlocal success, exists = pcall(function () return transliteration_page.exists end)\n\t\
      \t\tif success and exists then\n\t\t\t\ttranslits_formatted = \" [[Wiktionary:\" .. data.lang:getCanonicalName() .. \" transliteration|•]]\" .. translits_formatted\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn table.concat(data.heads, \" &lt;i&gt;or&lt;/i&gt;\
      \ \") .. translits_formatted\nend\n\n\nlocal function format_genders(data)\n\tif data.genders and #data.genders &gt; 0 then\n\t\tlocal gen = require(\"Module:gender and number\")\n\t\treturn \"&amp;nbsp;\" .. gen.format_list(data.genders, data.lang)\n\t\
      else\n\t\treturn \"\"\n\tend\nend\n\n\nlocal function format_inflection_parts(data, parts)\n\tlocal m_links = require(\"Module:links\")\n\t\n\tfor key, part in ipairs(parts) do\n\t\tif type(part) ~= \"table\" then\n\t\t\tpart = {term = part}\n\t\tend\n\
      \t\t\n\t\tlocal qualifiers = \"\"\n\t\t\n\t\tif part.qualifiers and #part.qualifiers &gt; 0 then\n\t\t\tqualifiers = require(\"Module:qualifier\").format_qualifier(part.qualifiers) .. \" \"\n\t\t\t\n\t\t\t-- [[Special:WhatLinksHere/Template:tracking/headword/qualifier]]\n\
      \t\t\trequire(\"Module:debug\").track(\"headword/qualifier\")\n\t\tend\n\t\t\n\t\tlocal partaccel = part.accel\n\t\tlocal face = part.hypothetical and \"hypothetical\" or \"bold\"\n\t\tlocal nolink = part.hypothetical or part.nolink\n\t\t\n\t\t-- Convert\
      \ the term into a full link\n\t\t-- Don't show a transliteration here, the consensus seems to be not to\n\t\t-- show them in headword lines to avoid clutter.\n\t\tpart = m_links.full_link(\n\t\t\t{\n\t\t\t\tterm = not nolink and part.term or nil,\n\t\t\
      \t\talt = part.alt or (nolink and part.term or nil),\n\t\t\t\tlang = part.lang or data.lang,\n\t\t\t\tsc = part.sc or parts.sc or (not part.lang and data.sc),\n\t\t\t\tid = part.id,\n\t\t\t\tgenders = part.genders,\n\t\t\t\ttr = part.translit or (not (parts.enable_auto_translit\
      \ or data.inflections.enable_auto_translit) and \"-\" or nil),\n\t\t\t\tts = part.transcription,\n\t\t\t\taccel = parts.accel or partaccel,\n\t\t\t},\n\t\t\tface,\n\t\t\tfalse\n\t\t\t)\n\t\t\n\t\tpart = qualifiers .. part\n\t\t\n\t\tparts[key] = part\n\
      \tend\n\t\n\tlocal parts_output = \"\"\n\t\n\tif #parts &gt; 0 then\n\t\tparts_output = \" \" .. table.concat(parts, \" &lt;i&gt;or&lt;/i&gt; \")\n\telseif parts.request then\n\t\tparts_output = \" &lt;small&gt;[please provide]&lt;/small&gt;\"\n\t\t\t\
      .. require(\"Module:utilities\").format_categories(\n\t\t\t\t{data.lang:getCanonicalName() .. \" entries needing inflection\"},\n\t\t\t\tlang,\n\t\t\t\tnil,\n\t\t\t\tnil,\n\t\t\t\tdata.force_cat_output,\n\t\t\t\tdata.sc\n\t\t\t\t)\n\tend\n\t\n\treturn\
      \ \"&lt;i&gt;\" .. parts.label .. \"&lt;/i&gt;\" .. parts_output\nend\n\n-- Format the inflections following the headword\nlocal function format_inflections(data)\n\tif data.inflections and #data.inflections &gt; 0 then\n\t\t-- Format each inflection individually\n\
      \t\tfor key, infl in ipairs(data.inflections) do\n\t\t\tdata.inflections[key] = format_inflection_parts(data, infl)\n\t\tend\n\t\t\n\t\treturn \" (\" .. table.concat(data.inflections, \", \") .. \")\"\n\telse\n\t\treturn \"\"\n\tend\nend\n\nlocal function\
      \ show_headword_line(data)\n\tlocal namespace = title.nsText\n\n\t-- Check the namespace against the language type\n\tif namespace == \"\" then\n\t\tif data.lang:getType() == \"reconstructed\" then\n\t\t\terror(\"Entries for this language must be placed\
      \ in the Reconstruction: namespace.\")\n\t\telseif data.lang:getType() == \"appendix-constructed\" then\n\t\t\terror(\"Entries for this language must be placed in the Appendix: namespace.\")\n\t\tend\n\tend\n\t\n\tlocal tracking_categories = {}\n\n\tif\
      \ not data.noposcat then\t\n\t\tlocal pos_category = data.lang:getCanonicalName() .. \" \" .. data.pos_category\n\t\tif pos_category ~= \"Translingual Han characters\" then\n\t\t\ttable.insert(data.categories, 1, pos_category)\n\t\tend\n\tend\n\t\n\t--\
      \ Is it a lemma category?\n\tif isLemma[data.pos_category] or isLemma[data.pos_category:gsub(\"^reconstructed \", \"\")] then\n\t\tif not data.noposcat then\n\t\t\ttable.insert(data.categories, 1, data.lang:getCanonicalName() .. \" lemmas\")\n\t\tend\n\
      \t-- Is it a nonlemma category?\n\telseif isNonLemma[data.pos_category]\n\t\tor isNonLemma[data.pos_category:gsub(\"^reconstructed \", \"\")]\n\t\tor isLemma[data.pos_category:gsub(\"^mutated \", \"\")]\n\t\tor isNonLemma[data.pos_category:gsub(\"^mutated\
      \ \", \"\")] then\n\t\t\n\t\tif not data.noposcat then\n\t\t\ttable.insert(data.categories, 1, data.lang:getCanonicalName() .. \" non-lemma forms\")\n\t\tend\n\t-- It's neither; we don't know what this category is, so tag it with a tracking category.\n\
      \telse\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/headword/unrecognized pos]]\n\t\t]=]\n\t\ttable.insert(tracking_categories, \"head tracking/unrecognized pos\")\n\t\trequire(\"Module:debug\").track{\n\t\t\t\"headword/unrecognized pos\"\
      ,\n\t\t\t\"headword/unrecognized pos/lang/\" .. data.lang:getCode(),\n\t\t\t\"headword/unrecognized pos/pos/\" .. data.pos_category\n\t\t}\n\tend\n\t\n\t-- Preprocess\n\tpreprocess(data)\n\t\n\tlocal m_links = require(\"Module:links\")\n\t\n\tif namespace\
      \ == \"\" and data.lang:getType() ~= \"reconstructed\" then\n\t\tfor _, head in ipairs(data.heads) do\n\t\t\tif title.prefixedText ~= m_links.getLinkPage(m_links.remove_links(head), data.lang) then\n\t\t\t\t--[=[\n\t\t\t\t[[Special:WhatLinksHere/Template:tracking/headword/pagename\
      \ spelling mismatch]]\n\t\t\t\t]=]\n\t\t\t\trequire(\"Module:debug\").track{\n\t\t\t\t\t\"headword/pagename spelling mismatch\",\n\t\t\t\t\t\"headword/pagename spelling mismatch/\" .. data.lang:getCode()\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\
      end\n\t\n\t-- Format and return all the gathered information\n\treturn\n\t\tformat_headword(data) ..\n\t\tformat_genders(data) ..\n\t\tformat_inflections(data) ..\n\t\trequire(\"Module:utilities\").format_categories(\n\t\t\ttracking_categories, data.lang,\
      \ data.sort_key, nil, data.force_cat_output, data.sc\n\t\t\t)\nend\n\nfunction export.full_headword(data)\n\tlocal tracking_categories = {}\n\t\n\t-- Script-tags the topmost header.\n\tlocal pagename = title.text\n\tlocal fullPagename = title.fullText\n\
      \tlocal namespace = title.nsText\n\t\n\tif not data.lang or type(data.lang) ~= \"table\" or not data.lang.getCode then\n\t\terror(\"In data, the first argument to full_headword, data.lang should be a language object.\")\n\tend\n\t\n\tif not data.sc then\n\
      \t\tdata.sc = require(\"Module:scripts\").findBestScript(data.heads and data.heads[1] ~= \"\" and data.heads[1] or pagename, data.lang)\n\telse\n\t\t-- Track uses of sc parameter\n\t\tlocal best = require(\"Module:scripts\").findBestScript(pagename, data.lang)\n\
      \t\trequire(\"Module:debug\").track(\"headword/sc\")\n\t\t\n\t\tif data.sc:getCode() == best:getCode() then\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/redundant\")\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/redundant/\" .. data.sc:getCode())\n\
      \t\telse\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/needed\")\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/needed/\" .. data.sc:getCode())\n\t\tend\n\tend\n\t\n\tlocal displayTitle\n\t-- Assumes that the scripts in \"toBeTagged\" will\
      \ never occur in the Reconstruction namespace.\n\tif namespace == \"\" and data.sc and toBeTagged[data.sc:getCode()] or\n\t\t\tdata.sc:getCode() == \"Jpan\" and (test_script(pagename, \"Hira\") or test_script(pagename, \"Kana\")) then\n\t\tdisplayTitle\
      \ = '&lt;span class=\"' .. data.sc:getCode() .. '\"&gt;' .. pagename .. '&lt;/span&gt;'\n\telseif namespace == \"Reconstruction\" then\n\t\tdisplayTitle, matched = mw.ustring.gsub(\n\t\t\tfullPagename,\n\t\t\t\"^(Reconstruction:[^/]+/)(.+)$\",\n\t\t\t\
      function(before, term)\n\t\t\t\treturn before ..\n\t\t\t\t\trequire(\"Module:script utilities\").tag_text(\n\t\t\t\t\t\tterm,\n\t\t\t\t\t\tdata.lang,\n\t\t\t\t\t\tdata.sc\n\t\t\t\t\t)\n\t\t\tend\n\t\t)\n\t\t\n\t\tif matched == 0 then\n\t\t\tdisplayTitle\
      \ = nil\n\t\tend\n\tend\n\t\n\tif displayTitle then\n\t\tlocal frame = mw.getCurrentFrame()\n\t\tframe:callParserFunction(\n\t\t\t\"DISPLAYTITLE\",\n\t\t\tdisplayTitle\n\t\t)\n\tend\n\t\n\tif data.force_cat_output then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/headword/force\
      \ cat output]]\n\t\t]=]\n\t\trequire(\"Module:debug\").track(\"headword/force cat output\")\n\tend\n\t\n\tif data.getCanonicalName then\n\t\terror('The \"data\" variable supplied to \"full_headword\" should not be a language object.')\n\tend\n\t\t\n\t\
      -- Were any categories specified?\n\tif data.categories and #data.categories &gt; 0 then\n\t\tlocal lang_name = require(\"Module:string\").pattern_escape(data.lang:getCanonicalName())\n\t\tfor _, cat in ipairs(data.categories) do\n\t\t\t-- Does the category\
      \ begin with the language name? If not, tag it with a tracking category.\n\t\t\tif not mw.ustring.find(cat, \"^\" .. lang_name) then\n\t\t\t\tmw.log(cat, data.lang:getCanonicalName())\n\t\t\t\ttable.insert(tracking_categories, \"head tracking/no lang category\"\
      )\n\t\t\t\t\n\t\t\t\t--[=[\n\t\t\t\t[[Special:WhatLinksHere/Template:tracking/head tracking/no lang category]]\n\t\t\t\t]=]\n\t\t\t\trequire(\"Module:debug\").track{\n\t\t\t\t\t\"headword/no lang category\",\n\t\t\t\t\t\"headword/no lang category/lang/\"\
      \ .. data.lang:getCode()\n\t\t\t\t}\n\t\t\tend\n\t\tend\n\t\t\n\t\tif not data.pos_category\n\t\t\tand mw.ustring.find(data.categories[1], \"^\" .. data.lang:getCanonicalName())\n\t\t\t\tthen\n\t\t\tdata.pos_category = mw.ustring.gsub(data.categories[1],\
      \ \"^\" .. data.lang:getCanonicalName() .. \" \", \"\")\n\t\t\ttable.remove(data.categories, 1)\n\t\tend\n\tend\n\t\n\tif not data.pos_category then\n\t\terror(\n\t\t\t'No valid part-of-speech categories were found in the list '\n\t\t\t.. 'of categories\
      \ passed to the function \"full_headword\". '\n\t\t\t.. 'The part-of-speech category should consist of a language\\'s '\n\t\t\t.. 'canonical name plus a part of speech.'\n\t\t\t)\n\tend\n\t\n\t-- Categorise for unusual characters\n\tlocal standard = data.lang:getStandardCharacters()\n\
      \t\n\tif standard then\n\t\tif mw.ustring.len(title.subpageText) ~= 1 and not mw.ustring.match(title.text, \"^Unsupported titles/\") then\n\t\t\tfor character in mw.ustring.gmatch(title.subpageText, \"([^\" .. standard .. \"])\") do\n\t\t\t\tlocal upper\
      \ = mw.ustring.upper(character)\n\t\t\t\tif not mw.ustring.find(upper, \"[\" .. standard .. \"]\") then\n\t\t\t\t\tcharacter = upper\n\t\t\t\tend\n\t\t\t\ttable.insert(\n\t\t\t\t\tdata.categories,\n\t\t\t\t\tdata.lang:getCanonicalName() .. \" terms spelled\
      \ with \" .. character\n\t\t\t\t)\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Categorise for palindromes\n\tif title.nsText ~= \"Reconstruction\"\n\t\tand require('Module:palindromes').is_palindrome(\n\t\t\ttitle.subpageText, data.lang, data.sc\n\t\t\t) then\n\
      \t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" palindromes\")\n\tend\n\t\n\treturn\n\t\tshow_headword_line(data) ..\n\t\trequire(\"Module:utilities\").format_categories(\n\t\t\tdata.categories, data.lang, data.sort_key, nil, data.force_cat_output,\
      \ data.sc\n\t\t\t) ..\n\t\trequire(\"Module:utilities\").format_categories(\n\t\t\ttracking_categories, data.lang, data.sort_key, nil, data.force_cat_output, data.sc\n\t\t\t)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:11.803Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=34036 t=1555362611713902
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:11 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1228.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 919661085, 504308360, 677770090
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6074448\" pageid=\"6074448\" ns=\"828\" title=\"Module:headword/data\"><revisions><rev user=\"Surjection\" timestamp=\"2019-01-11T21:27:17Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"they are not lemmas just because you say they are\" xml:space=\"preserve\">local data = {}\n\ndata.invariable = {\n\t\"cmavo\",\n\t\"cmene\",\n\t\"fu'ivla\",\n\t\"gismu\",\n\t\"Han tu\"\
      ,\n\t\"hanzi\",\n\t\"hanja\",\n\t\"jyutping\",\n\t\"kanji\",\n\t\"lujvo\",\n\t\"phrasebook\",\n\t\"pinyin\",\n\t\"rafsi\",\n\t\"romaji\",\n}\n\ndata.lemmas = {\n\t\"abbreviations\",\n\t\"acronyms\",\n\t\"adjectives\",\n\t\"adnominals\",\n\t\"adpositions\"\
      ,\n\t\"adverbs\",\n\t\"affixes\",\n\t\"ambipositions\",\n\t\"articles\",\n\t\"circumfixes\",\n\t\"circumpositions\",\n\t\"classifiers\",\n\t\"cmavo\",\n\t\"cmavo clusters\",\n\t\"cmene\",\n\t\"combining forms\",\n\t\"conjunctions\",\n\t\"counters\",\n\t\
      \"determiners\",\n\t\"diacritical marks\",\n\t\"equative adjectives\",\n\t\"fu'ivla\",\n\t\"gismu\",\n\t\"Han characters\",\n\t\"Han tu\",\n\t\"hanzi\",\n\t\"hanja\",\n\t\"idioms\",\n\t\"infixes\",\n\t\"interfixes\",\n\t\"initialisms\",\n\t\"interjections\"\
      ,\n\t\"kanji\",\n\t\"letters\",\n\t\"ligatures\",\n\t\"lujvo\",\n\t\"morphemes\",\n\t\"non-constituents\",\n\t\"nouns\",\n\t\"numbers\",\n\t\"numeral symbols\",\n\t\"numerals\",\n\t\"particles\",\n\t\"phrases\",\n\t\"postpositions\",\n\t\"predicatives\"\
      ,\n\t\"prefixes\",\n\t\"prepositions\",\n\t\"prepositional phrases\",\n\t\"preverbs\",\n\t\"pronominal adverbs\",\n\t\"pronouns\",\n\t\"proverbs\",\n\t\"proper nouns\",\n\t\"punctuation marks\",\n\t\"relatives\",\n\t\"roots\",\n\t\"stems\",\n\t\"suffixes\"\
      ,\n\t\"syllables\",\n\t\"symbols\",\n\t\"verbs\",\n}\n\ndata.nonlemmas = {\n\t\"active participles\",\n\t\"adjectival participles\",\n\t\"adjective forms\",\n\t\"adjective comparative forms\", -- TODO: replace with \"comparative adjectives\" or \"comparative\
      \ adjective forms\", depending on which one the word is\n\t\"adjective feminine forms\",\n\t\"adjective equative forms\",\n\t\"adjective plural forms\",\n\t\"adjective superlative forms\", -- TODO: replace with \"superlative adjectives\" or \"superlative\
      \ adjective forms\", depending on which one the word is\n\t\"adverb forms\",\n\t\"adverb comparative forms\", -- TODO: replace with \"comparative adverbs\" or \"comparative adverb forms\", depending on which one the word is\n\t\"adverb superlative forms\"\
      , -- TODO: replace with \"superlative adverbs\" or \"superlative adverb forms\", depending on which one the word is\n\t\"adverbial participles\",\n\t\"agent participles\",\n\t\"article forms\",\n\t\"circumfix forms\",\n\t\"combined forms\",\n\t\"comparative\
      \ adjective forms\",\n\t\"comparative adjectives\",\n\t\"comparative adverb forms\",\n\t\"comparative adverbs\",\n\t\"contractions\",\n\t\"converbs\",\n\t\"determiner comparative forms\",\n\t\"determiner forms\",\n\t\"determiner superlative forms\",\n\t\
      \"diminutive nouns\",\n\t\"future participles\",\n\t\"gerunds\",\n\t\"infinitive forms\",\n\t\"infinitives\",\n\t\"interjection forms\",\n\t\"jyutping\",\n\t\"kanji readings\",\n\t\"misspellings\",\n\t\"negative participles\",\n\t\"nominal participles\"\
      ,\n\t\"noun case forms\",\n\t\"noun dual forms\",\n\t\"noun forms\",\n\t\"noun plural forms\",\n\t\"noun possessive forms\",\n\t\"noun singulative forms\",\n\t\"numeral forms\",\n\t\"participles\",\n\t\"participle forms\",\n\t\"particle forms\",\n\t\"\
      passive participles\",\n\t\"past active participles\",\n\t\"past participles\",\n\t\"past participle forms\",\n\t\"past passive participles\",\n\t\"perfect active participles\",\n\t\"perfect participles\",\n\t\"perfect passive participles\",\n\t\"pinyin\"\
      ,\n\t\"plurals\",\n\t\"postposition forms\",\n\t\"prefix forms\",\n\t\"preposition contractions\",\n\t\"preposition forms\",\n\t\"prepositional pronouns\",\n\t\"present active participles\",\n\t\"present participles\",\n\t\"present passive participles\"\
      ,\n\t\"pronoun forms\",\n\t\"pronoun possessive forms\",\n\t\"proper noun forms\",\n\t\"proper noun plural forms\",\n\t\"rafsi\",\n\t\"romanizations\",\n        \"root forms\",\n\t\"singulatives\",\n\t\"suffix forms\",\n\t\"superlative adjective forms\"\
      ,\n\t\"superlative adjectives\",\n\t\"superlative adverb forms\",\n\t\"superlative adverbs\",\n\t\"verb forms\",\n\t\"verbal nouns\",\n}\n\ndata.notranslit = {\n\t\"ams\",\n\t\"az\",\n\t\"bbc\",\n\t\"bug\",\n\t\"cia\",\n\t\"cjm\",\n\t\"cmn\",\n\t\"hak\"\
      ,\n\t\"ja\",\n\t\"kzg\",\n\t\"lad\",\n\t\"lzh\",\n\t\"ms\",\n\t\"mul\",\n\t\"mvi\",\n\t\"nan\",\n\t\"oj\",\n\t\"okn\",\n\t\"pi\",\n\t\"ro\",\n\t\"ryn\",\n\t\"rys\",\n\t\"ryu\",\n\t\"sh\",\n\t\"tgt\",\n\t\"th\",\n\t\"tkn\",\n\t\"tly\",\n\t\"und\",\n\t\"\
      vi\",\n\t\"xug\",\n\t\"yue\",\n\t\"yoi\",\n\t\"yox\",\n\t\"za\",\n\t\"zh\",\n}\n\n-- Script codes for which a script-tagged display title will be added.\t\ndata.toBeTagged = {\n\t\"Ahom\",\n\t\"Arab\",\n\t\"Avst\",\n\t\"Bali\",\n\t\"Cham\",\n\t\"Copt\"\
      ,\n\t\"Kali\",\n\t\"Hani\",\n\t\"Hebr\",\n\t\"Lana\",\n\t\"Linb\",\n\t\"Mand\",\n\t\"Mong\",\n\t\"polytonic\",\n\t\"Rjng\",\n\t\"Samr\",\n\t\"Sund\",\n\t\"Sylo\",\n\t\"Tang\",\n\t\"Tavt\",\n\t\"Xsux\",\n}\n\nfor key, list in pairs(data) do\n\tdata[key]\
      \ = require(\"Module:utils\").list_to_set(list)\nend\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:11.971Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autils&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41001 t=1555362611876335
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:11 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1225.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 669739233, 573964873, 704714218
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4882600\" pageid=\"4882600\" ns=\"828\" title=\"Module:utils\"><revisions><rev user=\"Metaknowledge\" timestamp=\"2017-09-23T01:00:56Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Protected &quot;[[Module:utils]]&quot;: Highly visible template/module ([Edit=Allow only autoconfirmed users] (indefinite) [Move=Allow only autoconfirmed users] (indefinite))\" xml:space=\"\
      preserve\">--[=[\n  Module:utils v0.3.1\n  Date: 2015-08-14\n\n  This module contains some common useful functions.\n  Fill free to add another universal functions here.\n]=]--\n\nlocal export = {}\n\n-- Function to clone table (sometimes it works better\
      \ then mw.clone)\nfunction export.clone(original)\n    local copy = {}\n    for key, value in pairs(original) do\n        copy[key] = value\n    end\n    return copy\nend\n\n-- Function to get current PAGENAME and related\nfunction export.get_base()\n\t\
      local PAGENAME = mw.title.getCurrentTitle().text\n\tlocal SUBPAGENAME = mw.title.getCurrentTitle().subpageText\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\t\n\tif NAMESPACE == 'User' or NAMESPACE == 'Участник' then\n\t\treturn SUBPAGENAME\n\
      \tend\n\treturn PAGENAME\nend\n\n-- Function to iterate table with sorted keys (sorting function can be different)\nfunction export.spairs(t, order)\n    -- collect the keys\n    local keys = {}\n    for k in pairs(t) do keys[#keys+1] = k end\n    -- sort\n\
      \    if order then\n        table.sort(keys, function(a,b) return order(t, a, b) end)\n    else\n        table.sort(keys)\n    end\n    -- return the iterator function\n    local i = 0\n    return function()\n        i = i + 1\n        if keys[i] then\n\
      \            return keys[i], t[keys[i]]\n        end\n    end\nend\n\n-- Functions to measure working time of scripts (start)\nfunction export.start()\n\texport.started = os.clock()\nend\n\n-- Functions to measure working time of scripts (stop)\nfunction\
      \ export.stop(desc)\n\texport.stoped = os.clock()\n\texport.delta = export.stoped - export.started\n\tif desc == nil then\n\t\tdesc = 'time delta'\n\tend\n\tmw.log('™ ' .. desc .. ' = ' .. export.delta)\nend\n\n-- Function to find common part (length)\
      \ of two strings\n-- (common part from the beginning of strings)\nfunction export.find_common(str_1, str_2)\n\tif not str_1 or not str_2 then\n\t\treturn 1\n\tend\n\tfor pos = 1, #str_1 do\n\t    local char_1 = str_1:sub(pos, pos)\n\t    local char_2 =\
      \ str_2:sub(pos, pos)\n\t    if char_1 ~= char_2 then\n\t    \treturn pos\n\t    end\n\tend\n\treturn 1\nend\n\n-- Function that allows easily add values into dict of dicts of lists\n-- Example of this structure:\n--   dict = {\n--     key1 = {\n--   \
      \    sub_key1 = {value1, value2, value3},\n--       sub_key2 = {value4, value5},\n--     },\n--     key2 = {\n--       sub_key3 = {value6},\n--       sub_key4 = {value7, value8},\n--     },\n--   }\nfunction export.put_value(dict, key, sub_key, value)\n\
      \tif not dict[key] then\n\t\tdict[key] = {}\n\tend\n\tif not dict[key][sub_key] then\n\t\tdict[key][sub_key] = {}\n\tend\n\ttable.insert(dict[key][sub_key], value)\nend\n\n-- Compare two items, recursively comparing lists.\n-- FIXME, doesn't work for tables\
      \ that aren't lists.\nfunction export.equals(x, y)\n    if type(x) == \"table\" and type(y) == \"table\" then\n        if #x ~= #y then\n            return false\n        end \n        for key, value in ipairs(x) do\n            if not export.equals(value,\
      \ y[key]) then\n                return false\n            end\n        end\n        return true\n    end\n    return x == y\nend\n\n-- true if list contains item\nfunction export.contains(tab, item)\n    for _, value in pairs(tab) do\n        if export.equals(value,\
      \ item) then\n            return true\n        end\n    end\n    return false\nend\n\n-- append to list if element not already present\nfunction export.insert_if_not(tab, item)\n    if not export.contains(tab, item) then\n        table.insert(tab, item)\n\
      \    end\nend\n\n-- convert list to set\nfunction export.list_to_set(list)\n\tlocal set = {}\n\tfor _, item in ipairs(list) do\n\t\tset[item] = true\n\tend\n\treturn set\nend\n\n-- Inhibit Regular Expression magic characters ^$()%.[]*+-?)\nfunction export.escape(value)\n\
      \    -- Prefix every non-alphanumeric character (%W) with a % escape character, \n    -- where %% is the % escape, and %1 is original character\n    return mw.ustring.gsub(value, \"(%W)\",\"%%%1\")\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:12.152Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Apalindromes&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51443 t=1555362612047676
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:12 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 504443265, 501723744, 697125546
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5783859\" pageid=\"5783859\" ns=\"828\" title=\"Module:palindromes\"><revisions><rev user=\"TheDaveRoss\" timestamp=\"2016-10-25T20:04:19Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Changed protection level for &quot;[[Module:palindromes]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors\
      \ and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefini...\" xml:space=\"preserve\">local export = {}\n\nlocal data = mw.loadData(\"Module:palindromes/data\")\n\nlocal function ignoreCharacters(term, lang, sc,\
      \ langdata)\n\tterm = mw.ustring.lower(term)\n\tterm = mw.ustring.gsub(term, \"[ ,%.%?!%%%-'\\\"]\", \"\")\n\t\n\t-- Language-specific substitutions\n\n\t-- Ignore entire scripts (e.g. romaji in Japanese)\n\tif langdata.ignore then\n\t\tsc_name = sc and\
      \ sc:getCode() or require(\"Module:scripts\").findBestScript(term, lang):getCode()\n\t\tfor _, script in ipairs(langdata.ignore) do\n\t\t\tif script == sc_name then\n\t\t\t\treturn \"\"\n\t\t\tend\n\t\tend\n\tend\n\t\n\tfor i, from in ipairs(langdata.from\
      \ or {}) do\n\t\tterm = mw.ustring.gsub(term, from, langdata.to[i] or \"\")\n\tend\n\t\n\treturn term\nend\n\nfunction export.is_palindrome(term, lang, sc)\n\tlocal langdata = data[lang:getCode()] or {}\n\n\t-- Affixes aren't palindromes\n\tif mw.ustring.find(term,\
      \ \"^%-\") or mw.ustring.find(term, \"%-$\") then\n\t\treturn false\n\tend\n\t\n\t-- Remove punctuation and casing\n\tterm = ignoreCharacters(term, lang, sc, langdata)\n\tlocal len = mw.ustring.len(term)\n\t\n\tif langdata.allow_repeated_char then\n\t\t\
      -- Ignore single-character terms\n\t\tif len &lt; 2 then\n\t\t\treturn false\n\t\tend\n\telse\n\t\t-- Ignore terms that consist of just one character repeated\n\t\t-- This also excludes terms consisting of fewer than 3 characters\n\t\tif term == mw.ustring.rep(mw.ustring.sub(term,\
      \ 1, 1), len) then\n\t\t\treturn false\n\t\tend\n\tend\n\t\n\tlocal charlist = {}\n\t\n\tfor c in mw.ustring.gmatch(term, \".\") do\n\t\ttable.insert(charlist, c)\n\tend\n\t\n\tfor i = 1, math.floor(len / 2) do\n        if charlist[i] ~= charlist[len -\
      \ i + 1] then\n        \treturn false\n        end\n    end\n    \n    return true\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:12.347Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Apalindromes%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=66595 t=1555362612225180
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:12 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1341.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 929477573, 825482263, 701900832
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5786862\" pageid=\"5786862\" ns=\"828\" title=\"Module:palindromes/data\"><revisions><rev user=\"PiefPafPier\" timestamp=\"2018-08-08T16:43:32Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"from [[:fy:Module:palindromes/data]]\" xml:space=\"preserve\">local u = mw.ustring.char\n\nlocal data = {\n\t[\"ar\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"[أإآ]\"\
      ,\n\t\t\t\"ؤ\",\n\t\t\t\"[ئى]\",\n\t\t\t\"ة\",\n\t\t\t\"ء\",\n\t\t},\n\t\tto = {\n\t\t\t\"ا\",\n\t\t\t\"و\",\n\t\t\t\"ي\",\n\t\t\t\"ه\",\n\t\t},\n\t},\n\t[\"arc\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"ם\",\n\t\t\t\"ן\",\n\t\t\t\"\
      ך\",\n\t\t\t\"ף\",\n\t\t\t\"ץ\",\n\t\t\t\"ﭏ\",\n\t\t\t\"װ\",\n\t\t\t\"ױ\",\n\t\t\t\"ײ\",\n\t\t\t\"[״׳־]\",\n\t\t},\n\t\tto = {\n\t\t\t\"מ\",\n\t\t\t\"נ\",\n\t\t\t\"כ\", \n\t\t\t\"פ\",\n\t\t\t\"צ\",\n\t\t\t\"אל\",\n\t\t\t\"וו\",\n\t\t\t\"וי\",\n\t\t\t\"\
      יי\",\n\t\t}\n\t},\n\t[\"axm\"] = {\n\t\tfrom = {\"ու\"},\n\t\tto   = {\"ŭ\"},\n\t},\n\t[\"ca\"] = {\n\t\tfrom = {\"à\", \"[èé]\", \"[íï]\", \"[òó]\", \"[úü]\", \"ç\", \"l·l\"},\n\t\tto   = {\"a\", \"e\",    \"i\",    \"o\",    \"u\",    \"c\", \"ll\"\
      },\n\t},\n\t[\"cmn\"] = {ignore = {\"Latn\"}},\n\t[\"cs\"] = {\n\t\tfrom = {\"á\", \"é\", \"í\", \"ó\", \"[úů]\", \"ý\", \"ch\"},\n\t\tto   = {\"a\", \"e\", \"i\", \"o\", \"u\",    \"y\", \"χ\"},\n\t},\n\t[\"de\"] = {\n\t\tfrom = {\"ä\", \"ö\", \"ü\",\
      \ \"[ßẞ]\"},\n\t\tto   = {\"a\", \"o\", \"u\", \"ss\"},\n\t},\n\t[\"el\"] = {\n\t\tfrom = {\n\t\t\t\"[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇᾱᾰἈᾈἌᾌἊᾊἎᾎἉᾉἍᾍἋᾋἏᾏᾹᾸ]\", --uppercase characters are included due to this bug: https://bugs.php.net/bug.php?id=69267\n\t\t\t\"[έ\
      ὲἐἔἒἑἕἓἘἜἚἙἝἛ]\",\n\t\t\t\"[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗἨᾘἬᾜἪᾚἮᾞἩᾙἭᾝἫᾛἯᾟ]\",\n\t\t\t\"[ίὶῖἰἴἲἶἱἵἳἷϊΐῒῗῑῐἸἼἺἾἹἽἻἿῙῘ]\", \n\t\t\t\"[όὸὀὄὂὁὅὃὈὌὊὉὍὋ]\",\n\t\t\t\"[ύὺῦὐὔὒὖὑὕὓὗϋΰῢῧῡῠὙὝὛὟῩῨ]\",\n\t\t\t\"[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧὨᾨὬᾬὪᾪὮᾮὩᾩὭᾭὫᾫὯᾯ]\",\n\t\t\t\"[ῥῤῬ]\"\
      ,\n\t\t\t\"[ς]\",\n\t\t\t\"[́͂]\"\n\t\t},\n\t\tto = {\n\t\t\t\"α\",\n\t\t\t\"ε\",\n\t\t\t\"η\",\n\t\t\t\"ι\",\n\t\t\t\"ο\",\n\t\t\t\"υ\",\n\t\t\t\"ω\",\n\t\t\t\"ρ\",\n\t\t\t\"σ\"\n\t\t},\n\t},\n\t[\"en\"] = {\n\t\tfrom = {\"[äàáâåā]\", \"[ëèéêē]\", \"\
      [ïìíîī]\", \"[öòóôō]\", \"[üùúûū]\", \"æ\" , \"œ\" , \"[çč]\", \"ñ\", \"'\"},\n\t\tto   = {\"a\",        \"e\",       \"i\",       \"o\",       \"u\",       \"ae\", \"oe\", \"c\",    \"n\"},\n\t},\n\t[\"fr\"] = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"\
      [íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\",  \"œ\", \"'\"},\n\t\tto   = {\"a\",       \"e\",     \"i\",      \"o\",      \"u\",      \"y\",      \"c\", \"ae\", \"oe\"},\n\t},\n\t[\"fy\"] = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï\
      ]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"æ\",  \"'\"},\n\t\tto   = {\"a\",       \"e\",     \"i\",      \"o\",      \"u\",      \"y\",      \"ae\"},\n\t},\n\t[\"grc\"] = {\n\t\tfrom = {\n\t\t\t\"[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇᾱᾰἈᾈἌᾌἊᾊἎᾎἉᾉἍᾍἋᾋἏᾏᾹᾸ]\", --uppercase\
      \ characters are included due to this bug: https://bugs.php.net/bug.php?id=69267\n\t\t\t\"[έὲἐἔἒἑἕἓἘἜἚἙἝἛ]\",\n\t\t\t\"[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗἨᾘἬᾜἪᾚἮᾞἩᾙἭᾝἫᾛἯᾟ]\",\n\t\t\t\"[ίὶῖἰἴἲἶἱἵἳἷϊΐῒῗῑῐἸἼἺἾἹἽἻἿῙῘ]\", \n\t\t\t\"[όὸὀὄὂὁὅὃὈὌὊὉὍὋ]\",\n\t\t\t\"[ύὺῦὐὔὒ\
      ὖὑὕὓὗϋΰῢῧῡῠὙὝὛὟῩῨ]\",\n\t\t\t\"[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧὨᾨὬᾬὪᾪὮᾮὩᾩὭᾭὫᾫὯᾯ]\",\n\t\t\t\"[ῥῤῬ]\",\n\t\t\t\"[ς]\",\n\t\t\t\"[́͂]\"\n\t\t},\n\t\tto = {\n\t\t\t\"α\",\n\t\t\t\"ε\",\n\t\t\t\"η\",\n\t\t\t\"ι\",\n\t\t\t\"ο\",\n\t\t\t\"υ\",\n\t\t\t\"ω\",\n\t\t\t\"\
      ρ\",\n\t\t\t\"σ\"\n\t\t}\n\t},\n\t[\"he\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"ם\",\n\t\t\t\"ן\",\n\t\t\t\"ך\",\n\t\t\t\"ף\",\n\t\t\t\"ץ\",\n\t\t\t\"ﭏ\",\n\t\t\t\"װ\",\n\t\t\t\"ױ\",\n\t\t\t\"ײ\",\n\t\t\t\"[״׳־]\",\n\t\t},\n\t\t\
      to = {\n\t\t\t\"מ\",\n\t\t\t\"נ\",\n\t\t\t\"כ\", \n\t\t\t\"פ\",\n\t\t\t\"צ\",\n\t\t\t\"אל\",\n\t\t\t\"וו\",\n\t\t\t\"וי\",\n\t\t\t\"יי\",\n\t\t}\n\t},\n\t[\"hu\"] = {\n\t\tfrom = {\"á\", \"é\", \"í\", \"ó\", \"ú\", \"ő\", \"ű\", \"cs\", \"dz\", \"gy\"\
      , \"ly\", \"ny\", \"sz\", \"ty\", \"zs\", \"dzs\"},\n\t\tto   = {\"a\", \"e\", \"i\", \"o\", \"u\", \"ö\", \"ü\", \"č\",  \"ď\",  \"ǰ\",  \"ľ\",  \"ň\",  \"š\",  \"ť\",  \"ž\",  \"ǯ\"},\n\t},\n\t[\"hy\"] = {\n\t\tfrom = {\"ու\", \"եւ\"},\n\t\tto   = {\"\
      ŭ\",  \"և\"},\n\t},\n\t[\"ja\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {'が', 'ぎ', 'ぐ', 'げ', 'ご', 'ざ', 'じ', 'ず', 'ぜ', 'ぞ', 'だ', 'ぢ', 'づ', 'で', 'ど', 'ば', 'び', 'ぶ', 'べ', 'ぼ', 'ぱ', 'ぴ', 'ぷ', 'ぺ', 'ぽ', 'ゔ'},\n\t\tto   = {'か', 'き', 'く', 'け', 'こ', 'さ\
      ', 'し', 'す', 'せ', 'そ', 'た', 'ち', 'つ', 'て', 'と', 'は', 'ひ', 'ふ', 'へ', 'ほ', 'は', 'ひ', 'ふ', 'へ', 'ほ', 'う'},\n\t\tignore = {\"Latn\"},\n\t},\n\t[\"la\"] = {\n\t\tfrom = {\"v\", \"j\"},\n\t\tto   = {\"u\", \"i\"}\n\t},\n\t[\"nl\"] = {\n\t\tfrom = {\"[áàä]\"\
      , \"[éèë]\", \"[íìï]\", \"[óòö]\", \"[úùü]\"},\n\t\tto   = {\"a\",     \"e\",     \"i\",     \"o\",     \"u\"},\n\t},\n\t[\"pl\"] = {\n\t\tfrom = {\"ć\", \"ę\", \"ł\", \"ń\", \"ó\", \"ś\", \"[źż]\"},\n\t\tto   = {\"c\", \"e\", \"l\", \"n\", \"o\", \"s\"\
      , \"z\"},\n\t},\n\t[\"ru\"] = {\n\t\tfrom = {\"ё\"},\n\t\tto   = {\"е\"},\n\t},\n\t[\"xcl\"] = {\n\t\tfrom = {\"ու\"},\n\t\tto   = {\"ŭ\"},\n\t},\n\t[\"yi\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"ם\",\n\t\t\t\"ן\",\n\t\t\t\"ך\",\n\
      \t\t\t\"ף\",\n\t\t\t\"ץ\",\n\t\t\t\"ﭏ\",\n\t\t\t\"װ\",\n\t\t\t\"ױ\",\n\t\t\t\"ײ\",\n\t\t\t\"[״׳־]\",\n\t\t\t\"[ִַָּֿׁׂ]\",\n\t\t},\n\t\tto = {\n\t\t\t\"מ\",\n\t\t\t\"נ\",\n\t\t\t\"כ\", \n\t\t\t\"פ\",\n\t\t\t\"צ\",\n\t\t\t\"אל\",\n\t\t\t\"וו\",\n\t\t\t\"\
      וי\",\n\t\t\t\"יי\",\n\t\t}\n\t},\n\t[\"zh\"] = {\n\t\tignore = {\"Latn\"},\n\t},\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:29.597Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=61522 t=1555362629482306
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '151'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 219220231, 514131853, 705563777
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:10:29.754Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc%2Fredundant&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42831 t=1555362629659227
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1281.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 573439751, 497861066, 701279755
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc/redundant" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:10:29.906Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc%2Fredundant%2FLatn&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=35209 t=1555362629816043
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 671011079, 647800558, 698856358
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc/redundant/Latn" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:10:13.035Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alb&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=73488 t=1555362612910091
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:13 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 506409035, 839321110, 696730479
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4376313" pageid="4376313" ns="10" title="Template:lb"><revisions><rev user="-sche" timestamp="2016-09-15T04:39:16Z" contentformat="text/x-wiki" contentmodel="wikitext"
      comment="Protected &quot;[[Template:lb]]&quot;: Highly visible template/module: if for some reason someone needs to edit this, post in the [[WT:GP]] or [[WT:BP]] ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))"
      xml:space="preserve">#REDIRECT [[Template:label]]</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:10:13.204Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alabel&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45614 t=1555362613107105
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:13 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 602425550, 485064485, 697446916
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="3734544" pageid="3734544" ns="10" title="Template:label"><revisions><rev user="Ungoliant MMDCCLXIV" timestamp="2017-09-15T19:24:35Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Protected &quot;[[Template:label]]&quot;: Highly visible template/module ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:labels/templates|show}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:13.377Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=39514 t=1555362613283506
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:13 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1227.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 592029651, 728717796, 704549760
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4393059\" pageid=\"4393059\" ns=\"828\" title=\"Module:labels/templates\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-31T04:12:12Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"when compat=1 in show(), allow language code in either lang= or 1=; otherwise only in lang=\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\tModules used:\n\t[[Module:labels]]\n\t\
      [[Module:parameters]]\n\t[[Module:utilities]]\n\t[[Module:languages]]\n\t[[Module:template_link]]\n]=]\n\nfunction export.show(frame)\n\tlocal parent_args = frame:getParent().args\n\tlocal compat = (frame.args[\"compat\"] or \"\") ~= \"\" and parent_args[\"\
      lang\"]\n\tlocal term_mode = (frame.args[\"term\"] or \"\") ~= \"\"\n\t\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {list = true},\n\t\t[\"nocat\"] = {type = \"boolean\"},\n\t\t[\"script\"] = {},\n\t\t[\"script2\"] = {},\n\t\t[\"sort\"\
      ] = {},\n\t\t[\"sort2\"] = {},\n\t}\n\t\n\tif compat then\n\t\tparams[1] = params[2]\n\t\tparams[2] = nil\n\t\tparams[\"lang\"] = {required = true}\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(parent_args, params)\n\t\n\t-- Gather\
      \ parameters\n\tlocal lang = args[compat and \"lang\" or 1]\n\tlocal labels = args[compat and 1 or 2]\n\tlocal nocat = args[\"nocat\"]\n\tlocal script = args[\"script\"]\n\tlocal script2 = args[\"script2\"]\n\tlocal sort_key = args[\"sort\"]\n\tlocal sort_key2\
      \ = args[\"sort2\"]\n\n\tif not lang then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tlang = \"und\"\n\t\telse\n\t\t\terror(\"Language code has not been specified. Please provide it to the template using the first parameter.\"\
      )\n\t\tend\n\tend\n\t\n\tlang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, compat and \"lang\" or 1)\n\t\n\treturn require(\"Module:labels\").show_labels(labels, lang, script, script2, sort_key, sort_key2,\
      \ nocat, term_mode)\nend\n\n--[[\ttemporary. intentionally undocumented.\n\t\tthis function is only to be used in\n\t\t{{alternative spelling of}},\n\t\t{{eye dialect of}}\n\t\tand similar templates\t\t\t\t\t]]\nfunction export.show_from(frame)\n\tlocal\
      \ m_labeldata = require('Module:labels/data')\n\t\n\tlocal froms = {}\n\tlocal categories = {}\n\tlocal args = frame:getParent().args\n\tlocal nocat = args[\"nocat\"]\n\tlocal lang = frame.args[\"lang\"] or args[\"lang\"] or args[1] or \"en\"\n\tlocal\
      \ limit = frame.args.limit and tonumber(frame.args.limit) or 99999\n\t\n\tlocal m_languages = require(\"Module:languages\")\n\tlang = m_languages.getByCode(lang) or m_languages.err(lang, \"lang\")\n\n\tlocal key, i = 'from', 1\n\twhile args[key] do\n\t\
      \tlocal k = args[key]\n\t\tk = m_labeldata.aliases[k] or k\n\t\tlocal data = m_labeldata.labels[k]\n\t\tlocal label = data and data.display or k\n\t\tlocal category1, category2\n\t\t\n\t\tif not nocat and data then\n\t\t\tif data.regional_categories then\n\
      \t\t\t\tfor j, cat in ipairs(data.regional_categories) do\n\t\t\t\t\tcategory1 = cat .. ' ' .. lang:getCanonicalName()\n\t\t\t\tend\n\t\t\tend\n\t\t\n\t\t\tif data.plain_categories then\n\t\t\t\tfor j, cat in ipairs(data.plain_categories) do\n\t\t\t\t\t\
      category2 = cat\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\ttable.insert(froms, label)\n\t\ttable.insert(categories, category1)\n\t\ttable.insert(categories, category2)\n\t\ti = i + 1\n\t\tif i &gt; limit then\n\t\t\tbreak\t\n\t\tend\n\t\tkey = 'from' .. i\n\
      \tend\n\t\n\tcategories = require(\"Module:utilities\").format_categories(categories, lang)\n\t\n\tif #froms == 0 then\n\t\treturn frame.args.default\n\tend\n\t\n\tif #froms == 2 then\n\t\treturn froms[1] .. \" and \" .. froms[2] .. categories\n\tend\n\
      \t\n\tlocal results = {}\n\tfor i, item in ipairs(froms) do\n\t\tif i == 1 then\n\t\t\t-- nothing\n\t\telseif i == #froms then\n\t\t\ttable.insert(results, '&lt;span class=\"serial-comma\"&gt;,&lt;/span&gt; &lt;span class=\"serial-and\"&gt; and&lt;/span&gt;\
      \ ')\n\t\telse\n\t\t\ttable.insert(results, ', ')\n\t\tend\n\t\t\n\t\ttable.insert(results, item)\n\tend\n\treturn table.concat(results) .. categories\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:13.564Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42807 t=1555362613460537
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:13 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1282.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 406945447, 837226921, 705399787
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4073701\" pageid=\"4073701\" ns=\"828\" title=\"Module:labels\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-12-13T07:19:15Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"perhaps better: hide duplicate label only if it has categories; that will exclude the previously mentioned &quot;labels&quot;\" xml:space=\"preserve\">local m_labeldata = mw.loadData(\"Module:labels/data\"\
      )\nlocal m_utilities = require(\"Module:utilities\")\nlocal m_links = require(\"Module:links\")\n\nlocal export = {}\n\nlocal function show_categories(data, lang, script, sort_key, script2, sort_key2, term_mode)\n\tlocal categories = {}\n\tlocal categories2\
      \ = {}\n\t\n\tlocal lang_code = lang:getCode()\n\tlocal canonical_name = lang:getCanonicalName()\n\t\n\tlocal topical_categories = data.topical_categories or {}\n\tlocal sense_categories = data.sense_categories or {}\n\tlocal pos_categories = data.pos_categories\
      \ or {}\n\tlocal regional_categories = data.regional_categories or {}\n\tlocal plain_categories = data.plain_categories or {}\n\t\n\tfor i, cat in ipairs(topical_categories) do\n\t\ttable.insert(categories, lang_code .. \":\" .. cat)\n\t\t\n\t\tif script\
      \ then\n\t\t\ttable.insert(categories, lang_code .. \":\" .. cat .. \" in \" .. script .. \" script\")\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, lang_code .. \":\" .. cat .. \" in \" .. script2 .. \" script\")\n\t\tend\n\tend\n\
      \t\n\tfor i, cat in ipairs(sense_categories) do\n\t\tcat = (term_mode and cat .. \" terms\" ) or \"terms with \" .. cat .. \" senses\"\n\t\ttable.insert(categories, canonical_name .. \" \" .. cat)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories,\
      \ canonical_name .. \" \" .. cat .. \" in \" .. script .. \" script\")\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, canonical_name .. \" \" .. cat .. \" in \" .. script2 .. \" script\")\n\t\tend\n\tend\n\n\tfor i, cat in ipairs(pos_categories)\
      \ do\n\t\ttable.insert(categories, canonical_name .. \" \" .. cat)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories, canonical_name .. \" \" .. cat .. \" in \" .. script .. \" script\")\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2,\
      \ canonical_name .. \" \" .. cat .. \" in \" .. script2 .. \" script\")\n\t\tend\n\tend\n\t\n\tfor i, cat in ipairs(regional_categories) do\n\t\ttable.insert(categories, cat .. \" \" .. canonical_name)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories,\
      \ cat .. \" \" .. canonical_name .. \" in \" .. script .. \" script\")\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, cat .. \" \" .. canonical_name .. \" in \" .. script2 .. \" script\")\n\t\tend\n\tend\n\t\n\tfor i, cat in ipairs(plain_categories)\
      \ do\n\t\ttable.insert(categories, cat)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories, cat .. \" in \" .. script .. \" script\")\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, cat .. \" in \" .. script2 .. \" script\")\n\
      \t\tend\n\tend\n\t\n\treturn\tm_utilities.format_categories(categories, lang, sort_key) ..\n\t\t\tm_utilities.format_categories(categories2, lang, sort_key2)\nend\n\nfunction export.show_labels(labels, lang, script, script2, sort_key, sort_key2, nocat,\
      \ term_mode)\n\tif not labels[1] then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tlabels = {\"example\"}\n\t\telse\n\t\t\terror(\"You must specify at least one label.\")\n\t\tend\n\tend\n\t\n\t-- Show the labels\n\tlocal omit_preComma\
      \ = false\n\tlocal omit_postComma = true\n\tlocal omit_preSpace = false\n\tlocal omit_postSpace = true\n\t\n\tlocal lang_code = lang:getCode()\n\tlocal canonical_name = lang:getCanonicalName()\n\t\n\tlocal alias\n\tlocal already_seen = {}\n\t\n\tfor i,\
      \ label in ipairs(labels) do\n\t\tomit_preComma = omit_postComma\n\t\tomit_postComma = false\n\t\tomit_preSpace = omit_postSpace\n\t\tomit_postSpace = false\n\t\t\n\t\tlocal deprecated = false\n\t\tif m_labeldata.deprecated[label] then\n\t\t\tdeprecated\
      \ = true\n\t\tend\n\t\tif m_labeldata.aliases[label] then\n\t\t\talias = label\n\t\t\tlabel = m_labeldata.aliases[label]\n\t\tend\n\t\tif m_labeldata.deprecated[label] then\n\t\t\tdeprecated = true\n\t\tend\n\t\t\n\t\tlocal data = m_labeldata.labels[label]\
      \ or {}\n\t\t\n\t\tif data.track then\n\t\t\trequire(\"Module:debug\").track(\"labels/label/\" .. label)\n\t\tend\n\t\t\n\t\t--[=[\n\t\t\tDo not use the data in the table if the current language\n\t\t\tis not in the \"languages\" list.\n\t\t\t\n\t\t\t\
      If the original label was an alias, and was redirected to a label\n\t\t\twith a data file, go back to the original label.\n\t\t\t\n\t\t\tFor example, suppose the label \"Rome\" is used with the language code \"en\" (English).\n\t\t\t\"Rome\" redirects\
      \ to \"Romanesco\" in [[Module:labels/data/regional]].\n\t\t\tThe only language in the \"languages\" list is \"it\" (Italian).\n\t\t\tBecause the language code provided to the template was not \"it\",\n\t\t\tthe label's data file will not be used,\n\t\t\
      \tand the label will display as \"Rome\".\n\t\t\t\n\t\t\ttracking:\t[[Special:WhatLinksHere/Template:tracking/labels/incorrect-language]]\n\t\t\t\t\t\t[[Special:WhatLinksHere/Template:tracking/labels/redirect-undone]]\n\t\t]=]\n\t\tlocal languages = data.languages\n\
      \t\tif languages and not languages[lang_code] then\n\t\t\trequire(\"Module:debug\").track(\"labels/incorrect-language\")\n\t\t\tmw.log(\"incorrect language in label template \" .. lang_code .. \":\" .. label)\n\t\t\t\n\t\t\tif alias and label ~= alias\
      \ then\n\t\t\t\trequire(\"Module:debug\").track(\"labels/redirect-undone\")\n\t\t\t\tmw.log(\"redirect undone in label template \" .. lang_code .. \":\" .. label .. \" &gt; \" .. alias)\n\t\t\t\tlabel = alias\n\t\t\tend\n\t\t\t\n\t\t\tdata = {}\n\t\tend\n\
      \t\t\n\t\tif data.special_display then\n\t\t\tlocal function add_language_name(str)\n\t\t\t\tif str == \"canonical_name\" then\n\t\t\t\t\treturn canonical_name\n\t\t\t\telse\n\t\t\t\t\treturn \"\"\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tlabel = mw.ustring.gsub(data.special_display,\
      \ \"&lt;([^&gt;]+)&gt;\", add_language_name)\n\t\telse\n\t\t\t--[[\n\t\t\t\tIf data.glossary or data.Wikipedia are set to true, there is a glossary definition\n\t\t\t\twith an anchor identical to the label, or a Wikipedia article with a title\n\t\t\t\t\
      identical to the label.\n\t\t\t\t\tFor example, the code\n\t\t\t\t\t\tlabels[\"formal\"] = {\n\t\t\t\t\t\t\tglossary = true,\n\t\t\t\t\t\t}\n\t\t\t\t\tindicates that there is a glossary entry for \"formal\".\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\tOtherwise, data.glossary\
      \ and data.Wikipedia specify the title or the anchor.\n\t\t\t]]\n\t\t\tif data.glossary then\n\t\t\t\tlocal glossary_entry = type(data.glossary) == \"string\" and data.glossary or label\n\t\t\t\tlabel = \"[[Appendix:Glossary#\" .. glossary_entry .. \"\
      |\" .. ( data.display or label ) .. \"]]\"\n\t\t\telseif data.Wikipedia then\n\t\t\t\tWikipedia_entry = type(data.Wikipedia) == \"string\" and data.Wikipedia or label\n\t\t\t\tlabel = \"[[w:\" .. Wikipedia_entry .. \"|\" .. ( data.display or label ) ..\
      \ \"]]\"\n\t\t\telse\n\t\t\t\tlabel = data.display or label\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal omit_comma = omit_preComma or data.omit_preComma\n\t\tomit_postComma = data.omit_postComma\n\t\tlocal omit_space = omit_preSpace or data.omit_preSpace\n\t\t\
      omit_postSpace = data.omit_postSpace\n\t\t\n\t\tif deprecated then\n\t\t\tlabel = '&lt;span class=\"deprecated-label\"&gt;' .. label .. '&lt;/span&gt;'\n\t\t\tif not nocat then\n\t\t\t\tlabel = label .. m_utilities.format_categories({ \"Entries with deprecated\
      \ labels\" }, lang)\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal label_without_comma_or_space =\n\t\t\t(data.topical_categories or data.regional_categories\n\t\t\tor data.plain_categories or data.pos_categories\n\t\t\tor data.sense_categories) and label\n\t\t\t\
      or nil\n\t\t\n\t\tlabel = (omit_comma and \"\" or '&lt;span class=\"ib-comma\"&gt;,&lt;/span&gt;') ..\n\t\t\t\t(omit_space and \"\" or \"&amp;#32;\") ..\n\t\t\t\tlabel\n\t\t\n\t\t-- Track label text. If label text was previously used, don't show it,\n\t\
      \t-- but include the categories.\n\t\t-- For an example, see [[hypocretin]].\n\t\tif already_seen[label_without_comma_or_space] then\n\t\t\tlabels[i] = nocat and \"\" or\n\t\t\t\tshow_categories(data, lang, script, sort_key, script2, sort_key2, term_mode)\n\
      \t\telse\n\t\t\tlabels[i] = label .. (\n\t\t\t\tnocat and \"\" or\n\t\t\t\tshow_categories(data, lang, script, sort_key, script2, sort_key2, term_mode)\n\t\t\t)\n\t\tend\n\t\t\n\t\tif label_without_comma_or_space then\n\t\t\talready_seen[label_without_comma_or_space]\
      \ = true\n\t\tend\n\tend\n\t\n\treturn\n\t\t\"&lt;span class=\\\"ib-brac\\\"&gt;(&lt;/span&gt;&lt;span class=\\\"ib-content\\\"&gt;\" ..\n\t\ttable.concat(labels, \"\") ..\n\t\t\"&lt;/span&gt;&lt;span class=\\\"ib-brac\\\"&gt;)&lt;/span&gt;\"\nend\n\n\
      return export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:13.777Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54064 t=1555362613637783
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:13 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1227.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 498991051, 234714216, 699281906
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4077514\" pageid=\"4077514\" ns=\"828\" title=\"Module:labels/data\"><revisions><rev user=\"Mnemosientje\" timestamp=\"2019-04-10T19:23:30Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Reverted edits by [[Special:Contributions/User123o987name|User123o987name]]. If you think this rollback is in error, please leave a message on my talk page.\" xml:space=\"preserve\">local\
      \ labels = {}\nlocal aliases = {}\nlocal deprecated = {}\nlocal replacements = {\n\tlabels = {},\n\taliases = {},\n\tdeprecated = {},\n}\n\n\n--  Helper labels\n\nlabels['_'] = {\n\tdisplay = '',\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\n\n\
      labels['also'] = {\n\tomit_postComma = true,\n}\n\nlabels['and'] = {\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\naliases['&amp;'] = 'and'\n\nlabels['or'] = {\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\n\nlabels[';'] = {\n\tomit_preComma\
      \ = true,\n\tomit_postComma = true,\n\tomit_preSpace = true,\n}\n\n-- combine with 'except in', 'outside'? or retain for entries like \"wnuczę\"?\nlabels['except'] = {\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\n\nlabels['outside'] = {\n\tomit_preComma\
      \ = true,\n\tomit_postComma = true,\n}\naliases['except in'] = 'outside'\n\n-- Qualifier labels\n\nlabels['chiefly'] = {\n\tomit_postComma = true,\n}\naliases['mainly'] = 'chiefly'\naliases['mostly'] = 'chiefly'\naliases['primarily'] = 'chiefly'\n\nlabels['especially']\
      \ = {\n\tomit_postComma = true,\n}\n\nlabels['particularly'] = {\n\tomit_postComma = true,\n}\n\nlabels['excluding'] = {\n\tomit_postComma = true,\n}\n\nlabels['extremely'] = {\n\tomit_postComma = true,\n}\n\nlabels['frequently'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['humorously'] = { omit_postComma = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"jocular terms\" },\n}\n\nlabels['including'] = {\n\tomit_postComma = true,\n\
      }\n\nlabels['many'] = {\n\tomit_postComma = true,\n} -- e.g. \"many dialects\"\n\nlabels['markedly'] = {\n\tomit_postComma = true,\n}\n\nlabels['mildly'] = {\n\tomit_postComma = true,\n}\n\nlabels['now'] = {\n\tomit_postComma = true,\n}\naliases['nowadays']\
      \ = 'now'\n\nlabels['of'] = {\n\tomit_postComma = true,\n}\n\nlabels['of a'] = {\n\tomit_postComma = true,\n}\n\nlabels['of an'] = {\n\tomit_postComma = true,\n}\n\nlabels['often'] = {\n\tomit_postComma = true,\n}\n\nlabels['originally'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['possibly'] = {\n\tomit_postComma = true,\n}\n-- aliases['perhaps'] = 'possibly'\n\nlabels['rarely'] = {\n\tomit_postComma = true,\n}\n\nlabels['slightly'] = {\n\tomit_postComma = true,\n}\n\nlabels['sometimes'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['somewhat'] = {\n\tomit_postComma = true,\n}\n\nlabels['strongly'] = {\n\tomit_postComma = true,\n}\n\nlabels['then'] = {\n\tomit_postComma = true,\n} -- e.g. \"then colloquial, now dated\"\n\nlabels['typically'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['usually'] = {\n\tomit_postComma = true,\n}\n\nlabels['very'] = {\n\tomit_postComma = true,\n}\n\n\n-- Grammatical labels\n\nlabels[\"abbreviation\"] = {\n\tdisplay = \"[[abbreviation]]\",\n\tpos_categories = { \"abbreviations\"\
      \ },\n}\n\nlabels[\"acronym\"] = {\n\tdisplay = \"[[acronym]]\",\n\tpos_categories = { \"acronyms\" },\n}\n\nlabels[\"active\"] = {\n\tWikipedia = \"Active voice\",\n}\naliases[\"active voice\"] = \"active\"\naliases[\"in the active\"] = \"active\"\n\n\
      labels[\"ambitransitive\"] = {\n\tdisplay = \"[[transitive]], [[intransitive]]\",\n\tpos_categories = { \"transitive verbs\", \"intransitive verbs\" },\n}\n\nlabels[\"archaic-verb-form\"] = {\n\tglossary = \"archaic\",\n\tpos_categories = { \"archaic verb\
      \ forms\" },\n}\n\nlabels[\"attributive\"] = {\n\tdisplay = \"[[Appendix:English nouns#Attributive|attributive]]\",\n}\n\nlabels[\"attributively\"] = {\n\tdisplay = \"[[Appendix:English nouns#Attributive|attributively]]\",\n}\n\nlabels[\"auxiliary\"] =\
      \ {\n\tglossary = true,\n\tpos_categories = { \"auxiliary verbs\" }\n}\n\nlabels[\"by ellipsis\"] = {\n\tdisplay = \"by [[ellipsis]]\",\n\tpos_categories = { \"ellipses\" },\n}\n\nlabels[\"by extension\"] = {}\n\nlabels[\"cardinal\"] = {\n\tdisplay = \"\
      [[cardinal number|cardinal]]\",\n\tpos_categories = { \"cardinal numbers\" },\n}\ndeprecated[\"cardinal\"] = true\n\nlabels[\"causative\"] = {\n\tdisplay = \"[[causative]]\" }\n\nlabels[\"cognate object\"] = {\n\tdisplay = \"with [[w:Cognate object|cognate\
      \ object]]\",\n\tpos_categories = { \"verbs used with cognate objects\" },\n}\naliases[\"with cognate object\"] = \"cognate object\"\n\nlabels[\"collective\"] = {\n\tglossary = true,\n\tdisplay = \"collective\",\n\tpos_categories = { \"collective nouns\"\
      \ },\n}\n\nlabels[\"collectively\"] = {\n\tdisplay = \"collectively\",\n\tpos_categories = { \"collective nouns\" },\n}\n\nlabels[\"control verb\"] = {\n\tWikipedia = true,\n\tpos_categories = { \"control verbs\" },\n}\naliases[\"control\"] = \"control\
      \ verb\"\n\nlabels[\"common\"] = {\n\tglossary = true\n}\n\nlabels[\"comparable\"] = {\n\tglossary = true\n}\n\nlabels[\"copulative\"] = {\n\tdisplay = \"[[copular verb|copulative]]\",\n\tpos_categories = { \"copulative verbs\" },\n}\naliases[\"copular\"\
      ] = \"copulative\"\n\nlabels[\"countable\"] = {\n\tglossary = true,\n\tpos_categories = { \"countable nouns\" },\n}\n\nlabels[\"ditransitive\"] = {\n\tglossary = true,\n\tpos_categories = { \"ditransitive verbs\" },\n}\n\nlabels[\"dysphemistic\"] = {\n\
      \twikipedia = \"Dysphemism\",\n\tpos_categories = { \"dysphemisms\" },\n}\naliases[\"dysphemism\"] = \"dysphemistic\"\n\nlabels[\"emphatic\"] = {\n\tglossary = true\n}\n\nlabels[\"ergative\"] = {\n\tglossary = true,\n\tpos_categories = { \"ergative verbs\"\
      \ },\n}\n\nlabels[\"feminine\"] = {\n\tglossary = true\n}\n\nlabels[\"focus\"] = {\n\tglossary = true,\n\tpos_categories = { \"focus adverbs\" },\n}\n\nlabels[\"fractional\"] = {\n\tpos_categories = { \"fractional numbers\" },\n}\n\nlabels[\"hedge\"] =\
      \ {\n\tglossary = true,\n\tpos_categories = { \"hedges\" },\n}\naliases[\"hedges\"] = \"hedge\"\n\nlabels[\"ideophonic\"] = {\n\tglossary = true,\n}\naliases[\"ideophone\"] = \"ideophonic\"\n\nlabels[\"idiomatic\"] = {\n\tglossary = true,\n\tpos_categories\
      \ = { \"idioms\" },\n}\naliases[\"idiom\"] = \"idiomatic\"\n\nlabels[\"impersonal\"] = {\n\tglossary = true,\n\tpos_categories = { \"impersonal verbs\" },\n}\n\nlabels[\"in the singular\"] = {\n\tdisplay = \"in the [[singular]]\",\n}\naliases[\"in singular\"\
      ] = \"in the singular\"\n\nlabels[\"in the dual\"] = {\n\tdisplay = \"in the [[dual]]\",\n}\naliases[\"in dual\"] = \"in the dual\"\n\nlabels[\"in the plural\"] = {\n\tdisplay = \"in the [[Appendix:Glossary#plural|plural]]\",\n}\naliases[\"in plural\"\
      ] = \"in the plural\"\n\nlabels[\"in the mediopassive\"] = {\n\tdisplay = \"in the [[mediopassive]]\" }\naliases[\"in mediopassive\"] = \"in the mediopassive\"\naliases[\"mediopassive\"] = \"in the mediopassive\"\n\nlabels[\"inanimate\"] = {\n\tglossary\
      \ = true\n}\n\naliases[\"indef\"] = \"indefinite\"\n\nlabels[\"initialism\"] = {\n\tdisplay = \"[[initialism]]\",\n\tpos_categories = { \"initialisms\" },\n}\n\nlabels[\"intransitive\"] = {\n\tglossary = true,\n\tpos_categories = { \"intransitive verbs\"\
      \ },\n}\n\n-- Japanese inflecting suffixes\nlabels[\"jodōshi\"] = {\n\tdisplay = \"[[助動詞#Japanese|jodōshi]]\",\n\tpos_categories = { \"auxiliary verbs in traditional grammar\" },\n}\n\naliases[\"jodoshi\"] = \"jodōshi\"\naliases[\"jodoushi\"] = \"jodō\
      shi\"\n\nlabels[\"not comparable\"] = {\n\tdisplay = \"[[Appendix:Glossary#uncomparable|not comparable]]\"\n}\naliases[\"notcomp\"] = \"not comparable\"\naliases[\"uncomparable\"] = \"not comparable\"\n\nlabels[\"masculine\"] = {\n\tglossary = true\n}\n\
      \nlabels[\"middle\"] = {\n\tWikipedia = \"Voice (grammar)#Middle\",\n}\naliases[\"middle voice\"] = \"middle\"\naliases[\"in the middle\"] = \"middle\"\naliases[\"in the middle voice\"] = \"middle\"\n\nlabels[\"mnemonic\"] = {\n\tdisplay = '[[mnemonic]]',\n\
      \tpos_categories = { \"mnemonics\" },\n}\n\nlabels[\"neuter\"] = {\n\tglossary = true\n}\n\nlabels[\"onomatopoeia\"] = {\n\tdisplay = \"[[onomatopoeia]]\",\n\tpos_categories = { \"onomatopoeias\" },\n}\n\nlabels[\"ordinal\"] = {\n\tpos_categories = { \"\
      ordinal numbers\" },\n}\ndeprecated[\"ordinal\"] = true\n\ndeprecated[\"plural\"] = true\n\nlabels[\"passive\"] = {\n\tWikipedia = \"Passive voice\",\n}\naliases[\"passive voice\"] = \"passive\"\naliases[\"in the passive\"] = \"passive\"\n\nlabels[\"plural\
      \ only\"] = {\n\tpos_categories = { \"pluralia tantum\" },\n}\naliases[\"pluralonly\"] = \"plural only\"\naliases[\"plurale tantum\"] = \"plural only\"\n\nlabels[\"possessive pronoun\"] = {\n\tdisplay = \"possessive\",\n\tpos_categories = { \"possessive\
      \ pronouns\" },\n}\n\nlabels[\"postpositive\"] = {\n\tglossary = true\n}\n\nlabels[\"productive\"] = {\n\tdisplay = \"[[productive]]\" }\n\n-- TODO: This label is probably inappropriate for many languages\nlabels[\"pronominal\"] = {\n\tdisplay = \"takes\
      \ a [[Appendix:Glossary#reflexive|reflexive pronoun]]\",\n}\n\nlabels[\"pro-verb\"] = {\n\tWikipedia = true\n}\n\nlabels[\"reciprocal\"] = {\n\tdisplay = \"[[Appendix:Glossary#reciprocal|reciprocal]]\",\n\tpos_categories = { \"reciprocal verbs\" },\n}\n\
      \nlabels[\"reflexive\"] = {\n\tdisplay = \"[[Appendix:Glossary#reflexive|reflexive]]\",\n\tpos_categories = { \"reflexive verbs\" },\n}\n\nlabels[\"reflexive pronoun\"] = {\n\tdisplay = \"[[Appendix:Glossary#reflexive|reflexive]]\",\n\tpos_categories =\
      \ { \"reflexive pronouns\" }\n}\n\nlabels[\"relational\"] = {\n\tdisplay = \"[[Appendix:Glossary#relational|relational]]\",\n\tpos_categories = { \"relational adjectives\" },\n}\n\nlabels[\"rhetorical question\"] = {\n\tglossary = true,\n\tpos_categories\
      \ = { \"rhetorical questions\" },\n}\n\nlabels[\"set phrase\"] = {\n\tdisplay = \"[[set phrase]]\" }\n\nlabels[\"simile\"] = {\n\tglossary = true,\n\tpos_categories = { \"similes\" },\n}\n\ndeprecated[\"singular\"] = true\n\nlabels[\"singular only\"] =\
      \ {\n\tdisplay = \"singular only\",\n\tpos_categories = { \"singularia tantum\" },\n}\naliases[\"singulare tantum\"] = \"singular only\"\naliases[\"no plural\"] = \"singular only\"\n\nlabels[\"snowclone\"] = {\n\tglossary = true,\n\tpos_categories = {\
      \ \"snowclones\" },\n}\n\nlabels[\"stative\"] = {\n\tWikipedia = \"stative verb\",\n\tpos_categories = { \"stative verbs\" },\n}\naliases[\"stative verb\"] = \"stative\"\n\nlabels[\"substantive\"] = {\n\ttrack = true\n}\n\nlabels[\"transitive\"] = {\n\t\
      glossary = true,\n\tpos_categories = { \"transitive verbs\" },\n}\n\nlabels[\"unaccusative\"] = {\n\tWikipedia = \"Unaccusative verb\",\n}\n\nlabels[\"uncountable\"] = {\n\tglossary = true,\n\tpos_categories = { \"uncountable nouns\" },\n}\n\nlabels[\"\
      unergative\"] = {\n\tWikipedia = \"Unergative verb\",\n}\n\nlabels[\"usually plural\"] = {\n\tdisplay = \"usually in the [[plural]]\",\n}\naliases[\"usually in the plural\"] = \"usually plural\"\naliases[\"usually in plural\"] = \"usually plural\"\n\n\n\
      -- Usage labels\n\nlabels[\"ACG\"] = {\n\tdisplay = \"[[ACG]]\",\n\t-- see also \"fandom slang\"\n\tpos_categories = { \"fandom slang\" },\n}\n\nlabels[\"advertising slang\"] = {\n\tpos_categories = { \"advertising slang\" },\n}\naliases[\"ad slang\"]\
      \ = \"advertising slang\"\naliases[\"cosmo\"] = \"advertising slang\"\n\nlabels[\"affectionate\"] = {\n\tdisplay = \"[[affectionate]]\",\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"affectionate\
      \ terms\" },\n}\naliases[\"endearing\"] = \"affectionate\"\n\nlabels[\"pre-classical\"] = {\n\tdisplay = \"pre-classical\",\n\tregional_categories = { \"Pre-classical\" },\n}\naliases[\"ante-classical\"] = \"pre-classical\"\n\nlabels[\"archaic\"] = {\n\
      \tglossary = true,\n\tsense_categories = { \"archaic\" },\n}\n\nlabels[\"Australian slang\"] = {\n\tregional_categories = { \"Australian\" },\n\tplain_categories = { \"Australian slang\" },\n}\n\nlabels[\"avoidance\"] = {\n\tglossary = true\n}\n\nlabels[\"\
      back slang\"] = {\n\tdisplay = \"[[Appendix:Glossary#backslang|back slang]]\",\n\tpos_categories = { \"back slang\" },\n}\naliases[\"backslang\"] = \"back slang\"\naliases[\"back-slang\"] = \"back slang\"\n\nlabels[\"Bargoens\"] = {\n\tWikipedia = true,\n\
      \tplain_categories = { \"Bargoens\" },\n}\n\nlabels[\"Braille\"] = {\n\tWikipedia = true,\n}\n\nlabels[\"British slang\"] = {\n\tplain_categories = { \"British slang\" },\n}\naliases[\"UK slang\"] = \"British slang\"\n\nlabels[\"buzzword\"] = {\n\tdisplay\
      \ = \"[[buzzword]]\",\n\tpos_categories = { \"buzzwords\" },\n}\n\nlabels[\"Cambridge University slang\"] = {\n\tplain_categories = { \"Cambridge University slang\" },\n}\naliases[\"Cambridge University\"] = \"Cambridge University slang\"\n\nlabels[\"\
      cant\"] = {\n\tdisplay = \"[[cant]]\",\n\tpos_categories = { \"cant\" },\n}\naliases[\"argot\"] = \"cant\"\naliases[\"cryptolect\"] = \"cant\"\n\nlabels[\"capitalized\"] = {\n\tdisplay = \"[[capitalisation|capitalized]]\" }\n\nlabels[\"childish\"] = {\n\
      \tdisplay = \"[[childish]]\",\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"childish terms\" },\n}\naliases[\"baby talk\"] = \"childish\"\naliases[\"child language\"] = \"childish\"\n\nlabels[\"\
      chu Nom\"] = {\n\tdisplay = \"[[Vietnamese]] [[chữ Nôm]]\",\n\tplain_categories = { \"Vietnamese Han tu\" },\n}\n\nlabels[\"Classic 1811 Dictionary of the i Tongue\"] = {\n\tdisplay = \"[[Appendix:Glossary#archaic|archaic]], [[Appendix:Glossary#slang|slang]]\"\
      ,\n\tplain_categories = { \"Classic 1811 Dictionary of the Vulgar Tongue\" },\n}\naliases[\"1811\"] = \"Classic 1811 Dictionary of the Vulgar Tongue\"\n\nlabels[\"Cockney rhyming slang\"] = {\n\tdisplay = \"[[Cockney rhyming slang]]\",\n\tplain_categories\
      \ = { \"Cockney rhyming slang\" },\n}\n\nlabels[\"colloquial\"] = {\n\tglossary = true,\n\tpos_categories = { \"colloquialisms\" },\n}\naliases[\"colloquially\"] = \"colloquial\"\n\nlabels[\"colloquial-um\"] = {\n\tglossary = \"colloquial\",\n\tpos_categories\
      \ = { \"colloquialisms containing sequence um\" },\n}\n\nlabels[\"colloquial-un\"] = {\n\tglossary = \"colloquial\",\n\tpos_categories = { \"colloquialisms containing sequence un\" },\n}\n\nlabels[\"costermongers\"] = {\n\tdisplay = \"[[Appendix:Costermongers'\
      \ back slang|costermongers]]\",\n\tplain_categories = { \"Costermongers' back slang\" },\n}\naliases[\"coster\"] = \"costermongers\"\naliases[\"costers\"] = \"costermongers\"\naliases[\"costermonger\"] = \"costermongers\"\naliases[\"costermongers back\
      \ slang\"] = \"costermongers\"\naliases[\"costermongers' back slang\"] = \"costermongers\"\n\nlabels[\"dated\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"dated\
      \ terms\" },\n}\n\nlabels[\"dated form\"] = {\n\tglossary = \"dated\",\n\tpos_categories = { \"dated forms\" },\n}\n\nlabels[\"dated sense\"] = {\n\tglossary = \"dated\",\n\tsense_categories = { \"dated\" },\n} -- combine with previous\n\n\nlabels[\"derogatory\"\
      ] = {\n\tdisplay = \"[[derogatory]]\",\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"derogatory terms\" },\n}\naliases[\"pejorative\"] = \"derogatory\"\naliases[\"disparaging\"] = \"derogatory\"\
      \n\nlabels[\"dialectal\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"dialectal terms\" },\n}\naliases[\"dialect\"] = \"dialectal\"\naliases[\"dialects\"] = \"dialectal\"\
      \n\nlabels[\"dismissal\"] = {\n\tdisplay = \"[[dismissal]]\",\n\tpos_categories = { \"dismissals\" },\n}\n\nlabels[\"ethnic slur\"] = {\n\tdisplay = \"[[ethnic]] [[slur]]\",\n\tpos_categories = { \"ethnic slurs\" },\n}\naliases[\"racial slur\"] = \"ethnic\
      \ slur\"\n\nlabels[\"euphemistic\"] = {\n\tglossary = \"euphemism\",\n\tpos_categories = { \"euphemisms\" },\n}\naliases[\"euphemism\"] = \"euphemistic\"\n\nlabels[\"eye dialect\"] = {\n\tpos_categories = { \"eye dialect\" },\n}\n\nlabels[\"familiar\"\
      ] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"familiar terms\" },\n}\n\nlabels[\"fandom slang\"] = {\n\tpos_categories = { \"fandom slang\" },\n}\naliases[\"fandom\"\
      ] = \"fandom slang\"\n\nlabels[\"figuratively\"] = {\n\tglossary = \"figurative\" }\naliases[\"figurative\"] = \"figuratively\"\naliases[\"metaphorically\"] = \"figuratively\"\naliases[\"metaphorical\"] = \"figuratively\"\naliases[\"metaphor\"] = \"figuratively\"\
      \n\nlabels[\"folk poetic\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"folk poetic terms\", \"poetic terms\" },\n}\n\nlabels[\"formal\"] = {\n\tglossary = true,\n\t-- should be \"terms\
      \ with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"formal terms\" },\n}\n\nlabels[\"gay slang\"] = {\n\tpos_categories = { \"gay slang\" },\n}\n\nlabels['hapax legomenon'] = {\n\tdisplay = \"hapax legomenon\",\n\t\
      pos_categories = { \"hapax legomena\" },\n\tglossary = true,\n}\n\nlabels[\"historical\"] = {\n\tglossary = true,\n\tsense_categories = { \"historical\" },\n}\naliases[\"historic\"] = \"historical\"\naliases[\"history\"] = \"historical\"\n\nlabels[\"non-native\
      \ speakers\"] = {\n\tdisplay = \"[[non-native speaker]]s\", -- so it can be preceded by \"used by\", \"an error by children and\", etc\n\tregional_categories = { \"Non-native speakers'\" },\n}\naliases[\"NNES\"] = \"non-native speakers\"\naliases[\"NNS\"\
      ] = \"non-native speakers\"\n\n-- used exclusively by languages that use the “Jpan” script code\nlabels[\"historical hiragana\"] = {\n\tpos_categories = { \"historical hiragana\" },\n}\n\n-- used exclusively by languages that use the “Jpan” script code\n\
      labels[\"historical katakana\"] = {\n\tpos_categories = { \"historical katakana\" },\n}\n\n-- applies to Japanese and Korean, etc., please do not confuse with \"polite\"\nlabels[\"honorific\"] = {\n\tWikipedia = \"Honorifics (linguistics)\",\n\t-- should\
      \ be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"honorific terms\" },\n}\n\n-- for Ancient Greek\nlabels['Homeric epithet'] = {\n  display = \"[[Homeric Greek|Homeric]] [[w:Homeric epithets|epithet]]\"\
      ,\n  plain_categories = { \"Epic Ancient Greek\" },\n  omit_postComma = true,\n}\n\n-- applies to Japanese and Korean, etc.\nlabels[\"humble\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tdisplay = \"[[humble]]\"\
      ,\n\tpos_categories = { \"humble terms\" },\n}\n\nlabels[\"humorous\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp; NB and cf a similar \"jocular\" label further up on this page\n\tdisplay = \"[[humorous]]\"\
      ,\n\tpos_categories = { \"jocular terms\" },\n}\naliases[\"jocular\"] = \"humorous\"\n\nlabels[\"hyperbolic\"] = {\n\tpos_categories = { \"hyperboles\" },\n}\naliases[\"hyperbole\"] = \"hyperbolic\"\n\nlabels[\"hypercorrect\"] = {\n\tglossary = true,\n\
      \tpos_categories = { \"hypercorrections\" },\n}\n\nlabels[\"hyperforeign\"] = {\n\tglossary = true,\n\tpos_categories = { \"hyperforeign terms\" },\n}\n\nlabels[\"informal\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X\
      \ terms\" to the term-context temp\n\tpos_categories = { \"informal terms\" },\n}\naliases[\"informally\"] = \"informal\"\n\nlabels[\"Internet slang\"] = {\n\tdisplay = \"[[Internet]] [[slang]]\",\n\tpos_categories = { \"internet slang\" },\n}\n\naliases[\"\
      internet slang\"] = \"Internet slang\"\n\nlabels[\"IRC\"] = {\n\tdisplay = \"[[IRC]]\",\n\tpos_categories = { \"internet slang\" },\n}\n\nlabels[\"ironic\"] = {}\n\nlabels[\"leet\"] = {\n\tdisplay = \"[[leetspeak]]\",\n\tpos_categories = { \"leet\" },\n\
      }\naliases[\"leetspeak\"] = \"leet\"\n\nlabels['literally'] = {\n\tglossary = \"literally\" }\naliases['literal'] = 'literally'\n\nlabels[\"literary\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tglossary\
      \ = true,\n\tpos_categories = { \"literary terms\" },\n}\naliases[\"bookish\"] = \"literary\"\n\nlabels[\"loosely\"] = {\n\tglossary = true\n}\n\nlabels[\"Lubunyaca\"] = {\n\tdisplay = \"[[Lubunyaca]]\",\n\tpos_categories = { \"Lubunyaca\" },\n}\n\nlabels[\"\
      medical slang\"] = {\n\tdisplay = \"[[medical]] [[slang]]\",\n\tpos_categories = { \"medical slang\" },\n}\n\n-- for Awetí, Karajá, etc., where men and women use different words\nlabels[\"men's speech\"] = {\n\tglossary = \"men's speech\",\n\tpos_categories\
      \ = { \"men's speech terms\" },\n}\naliases[\"male speech\"] = \"men's speech\"\n\nlabels[\"metonymically\"] = {\n\tglossary = true,\n\tpos_categories = { \"metonyms\" },\n}\naliases[\"metonymic\"] = \"metonymically\"\naliases[\"metonymy\"] = \"metonymically\"\
      \naliases[\"metonym\"] = \"metonymically\"\n\nlabels[\"military slang\"] = {\n\tpos_categories = { \"military slang\" },\n}\n\nlabels[\"minced oath\"] = {\n\tdisplay = \"[[minced oath]]\",\n\tpos_categories = { \"euphemisms\" },\n}\n\nlabels[\"neologism\"\
      ] = {\n\tglossary = true,\n\tpos_categories = { \"neologisms\" },\n}\naliases[\"neologistic\"] = \"neologism\"\n\nlabels[\"New Julfa\"] = {\n\tregional_categories = { \"New Julfa\" },\n}\naliases[\"Jugha\"] = \"New Julfa\"\n\nlabels[\"no longer productive\"\
      ] = {\n\tdisplay = \"no longer [[Appendix:Glossary#productive|productive]]\",\n}\n\nlabels[\"nonce word\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tdisplay = \"[[Appendix:Glossary#nonce word|nonce word]]\"\
      ,\n\tpos_categories = { \"nonce terms\" },\n}\naliases[\"nonce\"] = \"nonce word\"\n\nlabels[\"nonstandard\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"nonstandard\
      \ terms\" },\n}\naliases[\"non-standard\"] = \"nonstandard\"\n\nlabels[\"nonstandard form\"] = {\n\tglossary = \"nonstandard\",\n\tpos_categories = { \"nonstandard forms\" },\n}\n\nlabels[\"obsolete\"] = {\n\tglossary = true,\n\tsense_categories = { \"\
      obsolete\" },\n}\n\nlabels[\"obsolete term\"] = {\n\tglossary = \"obsolete\",\n\t-- combine with previous two, q.v.\n\tpos_categories = { \"obsolete terms\" },\n}\n\nlabels[\"offensive\"] = {\n\tdisplay = \"[[offensive]]\",\n\t-- should be \"terms with\
      \ X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"offensive terms\" },\n}\n\nlabels[\"officialese\"] = {\n\tdisplay = \"[[officialese]]\",\n\tpos_categories = { \"officialese terms\" },\n}\n\nlabels[\"Oxbridge slang\"]\
      \ = {\n\tdisplay = \"[[Oxbridge]] slang\",\n\tplain_categories = { \"Cambridge University slang\", \"Oxford University slang\" },\n}\naliases[\"Oxbridge\"] = \"Oxbridge slang\"\n\nlabels[\"Oxford University slang\"] = {\n\tplain_categories = { \"Oxford\
      \ University slang\" },\n}\naliases[\"Oxford University\"] = \"Oxford University slang\"\n\nlabels[\"poetic\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tdisplay = \"[[poetic]]\",\n\tpos_categories = {\
      \ \"poetic terms\" },\n}\n\nlabels[\"Polari\"] = {\n\tdisplay = \"[[Polari]]\",\n\tpos_categories = { \"Polari slang\" },\n}\n\nlabels[\"polite\"] = {\n\tpos_categories = { \"polite terms\" },\n}\n\nlabels[\"post-classical\"] = {\n\tdisplay = \"post-classical\"\
      ,\n\tregional_categories = { \"Post-classical\" },\n}\naliases[\"Post-classical\"] = \"post-classical\"\naliases[\"post-Classical\"] = \"post-classical\"\naliases[\"Post-Classical\"] = \"post-classical\"\naliases[\"Postclassical\"] = \"post-classical\"\
      \naliases[\"postclassical\"] = \"post-classical\"\n\nlabels[\"proscribed\"] = {\n\tglossary = true,\n\tpos_categories = { \"disputed terms\" },\n}\n\nlabels[\"radio slang\"] = {\n\tpos_categories = { \"radio slang\" },\n}\n\nlabels[\"rare\"] = {\n\tsense_categories\
      \ = { \"rare\" },\n}\naliases[\"rare sense\"] = \"rare\"\n\nlabels[\"rare term\"] = {\n\tdisplay = \"rare\",\n\t-- see comments about \"obsolete\"\n\tpos_categories = { \"rare terms\" },\n}\n\nlabels[\"religious slur\"] = {\n\tdisplay = \"[[religious]]\
      \ [[slur]]\",\n\tpos_categories = { \"religious slurs\" },\n}\naliases[\"sectarian slur\"] = \"religious slur\"\n\nlabels[\"retronym\"] = {\n\tdisplay = \"[[retronym]]\",\n\tpos_categories = { \"retronyms\" },\n}\n\nlabels[\"sarcastic\"] = {\n\tdisplay\
      \ = \"[[sarcastic]]\",\n\tpos_categories = { \"sarcastic terms\" },\n}\n\nlabels[\"school slang\"] = {\n\tpos_categories = { \"school slang\" },\n}\naliases[\"public school slang\"] = \"school slang\"\n\nlabels[\"slang\"] = {\n\tglossary = true,\n\tpos_categories\
      \ = { \"slang\" },\n}\n\nlabels[\"college slang\"] = {\n\tpos_categories = { \"student slang\" },\n}\naliases[\"university slang\"] = \"college slang\"\naliases[\"student slang\"] = \"college slang\"\n\nlabels[\"swear word\"] = {\n\tpos_categories = {\
      \ \"swear words\" },\n}\naliases[\"profanity\"] = \"swear word\"\naliases[\"expletive\"] = \"swear word\"\n\nlabels[\"text messaging\"] = {\n\tdisplay = \"[[text messaging]]\",\n\tpos_categories = { \"text messaging slang\" },\n}\naliases[\"texting\"]\
      \ = \"text messaging\"\n\nlabels[\"thieves' cant\"] = {\n\tWikipedia = true,\n\tplain_categories = { \"Thieves' cant\" },\n}\naliases[\"thieves cant\"] = \"thieves' cant\"\naliases[\"thieves'\"] = \"thieves' cant\"\naliases[\"thieves\"] = \"thieves' cant\"\
      \n\nlabels[\"trademark\"] = {\n\tdisplay = \"[[trademark]]\",\n\tpos_categories = { \"trademarks\" },\n}\n\nlabels[\"transferred sense\"] = {\n\tglossary = true,\n\tpos_categories = { \"terms with transferred senses\" },\n}\n\nlabels[\"transferred senses\"\
      ] = {\n\tdisplay = \"[[transferred sense#English|transferred senses]]\",\n\tpos_categories = { \"terms with transferred senses\" },\n}\n\nlabels[\"uds.\"] = {\n\tdisplay = \"[[Appendix:Spanish pronouns#Ustedes and vosotros|used formally in Spain]]\" }\n\
      \nlabels[\"uncommon\"] = {\n\tpos_categories = { \"rare forms\" },\n}\n\nlabels[\"verlan\"] = {\n\tdisplay = \"[[Appendix:Glossary#verlan|verlan]]\",\n\tplain_categories = { \"Verlan\" },\n}\n\nlabels[\"very rare\"] = {\n\tpos_categories = { \"rare forms\"\
      \ },\n}\n\nlabels[\"vulgar\"] = {\n\tglossary = true,\n\tpos_categories = { \"vulgarities\" },\n}\naliases[\"coarse\"] = \"vulgar\"\naliases[\"obscene\"] = \"vulgar\"\naliases[\"profane\"] = \"vulgar\"\n\nlabels[\"vesre\"] = {\n\tplain_categories = { \"\
      Vesre\" },\n}\n\n-- for Awetí, Karajá, etc., where men &amp; women use different words\nlabels[\"women's speech\"] = {\n\tglossary = \"women's speech\",\n\tpos_categories = { \"women's speech terms\" },\n}\naliases[\"female speech\"] = \"women's speech\"\
      \n\nlabels[\"example1\"] = {\n\tWikipedia = \"Wu Chinese\"\n}\n\nlabels[\"example2\"] = {\n\tglossary = \"palatalization\"\n}\n\n\n-- Regional labels\nlocal m_regional = require(\"Module:labels/data/regional\")\n\nfor key, val in pairs(m_regional.labels)\
      \ do\n\tlabels[key] = val\nend\n\nfor key, val in pairs(m_regional.aliases) do\n\taliases[key] = val\nend\n\nfor key, val in pairs(m_regional.deprecated) do\n\tdeprecated[key] = val\nend\n\n\n-- Topical labels\n\nlocal m_topical = require(\"Module:labels/data/topical\"\
      )\n\nfor key, val in pairs(m_topical.labels) do\n\tlabels[key] = val\nend\n\nfor key, val in pairs(m_topical.aliases) do\n\taliases[key] = val\nend\n\nfor key, val in pairs(m_topical.deprecated) do\n\tdeprecated[key] = val\nend\n\n--[[\tAdd subvariety\
      \ labels and the corresponding aliases\n\t\tand deprecated labels if they have a language code\n\t\tin the \"languages\" field.\t\t\t\t\t\t\t\t]]\nlocal m_subvarieties = require(\"Module:labels/data/subvarieties\")\n\nfor key, val in pairs(m_subvarieties.labels)\
      \ do\n\tif labels[key] then\n\t\treplacements.labels[key] = labels[key]\n\tend\n\t\n\tif val.languages then\n\t\tlabels[key] = val\n\tend\nend\n\nfor key, val in pairs(m_subvarieties.aliases) do\n\tif aliases[key] then\n\t\treplacements.aliases[key] =\
      \ aliases[key]\n\tend\n\t\n\tif labels[val] then\n\t\taliases[key] = val\n\tend\nend\n\nfor key, val in pairs(m_subvarieties.deprecated) do\n\tif deprecated[key] then\n\t\treplacements.deprecated[key] = deprecated[key]\n\tend\n\t\n\tif labels[key] then\n\
      \t\tdeprecated[key] = val\n\tend\nend\n\nreturn {\n\t[\"labels\"] = labels,\n\t[\"aliases\"] = aliases,\n\t[\"deprecated\"] = deprecated,\n\t[\"replacements\"] = replacements,\n}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:14.199Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Fregional&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=72203 t=1555362613856478
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:14 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1284.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 931373968, 511247996, 692015238
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4952140\" pageid=\"4952140\" ns=\"828\" title=\"Module:labels/data/regional\"><revisions><rev user=\"Fay Freak\" timestamp=\"2019-04-08T01:27:43Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Add Chad, Mali, Mauritania.\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\nlocal deprecated = {}\n\nlocal m_data_functions = require(\"Module:labels/data/functions\")\n\
      \n-- Generic\n\n--not sure where to put this\nlabels[\"Classical\"] = {\n\tspecial_display = \"[[Classical &lt;canonical_name&gt;]]\",\n\tregional_categories = {\"Classical\"},\n}\naliases[\"classical\"] = \"Classical\"\n\nlabels[\"regional\"] = {\n\t\
      regional_categories = {\"Regional\"},\n}\n\n\n-- Africa\n\nlabels[\"Africa\"] = {\n\tregional_categories = {\"African\"},\n}\naliases[\"African\"] = \"Africa\"\n\nlabels[\"Algeria\"] = {\n\tdisplay = \"Algeria\",\n\tregional_categories = {\"Algerian\"\
      },\n}\naliases[\"Algerian\"] = \"Algeria\"\n\nlabels[\"Angola\"] = {\n\tregional_categories = {\"Angolan\"},\n}\naliases[\"Angolan\"] = \"Angola\"\n\nlabels[\"Botswana\"] = {\n\tregional_categories = {\"Botswanan\"},\n}\n\nlabels[\"Cape Verde\"] = {\n\t\
      regional_categories = {\"Cape Verdean\"},\n}\naliases[\"Cape Verdean\"] = \"Cape Verde\"\n\nlabels[\"Chad\"] = {\n\tdisplay = \"Chad\",\n\tregional_categories = {\"Chadian\"},\n}\naliases[\"Chadian\"] = \"Chad\"\n\nlabels[\"Congo\"] = {\n\tdisplay = \"\
      Congo\",\n\tregional_categories = {\"Congolese\"},\n} -- these could be split if need be\naliases[\"Democratic Republic of the Congo\"] = \"Congo\"\naliases[\"Democratic Republic of Congo\"] = \"Congo\"\naliases[\"DR Congo\"] = \"Congo\"\naliases[\"Congo-Kinshasa\"\
      ] = \"Congo\"\naliases[\"Republic of the Congo\"] = \"Congo\"\naliases[\"Republic of Congo\"] = \"Congo\"\naliases[\"Congo-Brazzaville\"] = \"Congo\"\naliases[\"Congolese\"] = \"Congolese\"\n\nlabels[\"Durban\"] = {\n\tdisplay = \"[[Durban]]\",\n\tregional_categories\
      \ = {\"Durban\"},\n}\n\nlabels[\"East Africa\"] = {\n\tregional_categories = {\"East African\"},\n}\naliases[\"East African\"] = \"East Africa\"\n\nlabels[\"Egypt\"] = {\n\tregional_categories = {\"Egyptian\"},\n}\naliases[\"Egyptian\"] = \"Egypt\"\n\n\
      labels[\"Equatorial Guinea\"] = {\n    display = \"[[w:Equatorial Guinea|Equatorial Guinea]]\",\n\tregional_categories = {\"Equatorial Guinean\"},\n}\naliases[\"Equatorial Guinean\"] = \"Equatorial Guinea\"\naliases[\"Equatoguinean\"] = \"Equatorial Guinea\"\
      \n\nlabels[\"Ghana\"] = {\n\tregional_categories = {\"Ghanaian\"},\n}\n\nlabels[\"Haketia\"] = {\n    display = \"[[w:Haketia|Haketia]]\",\n    plain_categories = {\"Haketia\"},\n}\naliases[\"Hakitia\"] = \"Haketia\"\naliases[\"Haquitía\"] = \"Haketia\"\
      \n\nlabels[\"Kenya\"] = {\n\tregional_categories = {\"Kenyan\"},\n}\naliases[\"Kenyan\"] = \"Kenya\"\n\nlabels[\"Liberia\"] = {\n\tregional_categories = {\"Liberian\"},\n}\naliases[\"Liberian\"] = \"Liberia\"\n\nlabels[\"Mali\"] = {\n\tdisplay = \"Mali\"\
      ,\n\tregional_categories = {\"Malian\"},\n}\naliases[\"Malian\"] = \"Mali\"\n\nlabels[\"Mauritania\"] = {\n\tdisplay = \"Mauritania\",\n\tregional_categories = {\"Mauritanian\"},\n}\naliases[\"Mauritanian\"] = \"Mauritania\"\n\nlabels[\"Morocco\"] = {\n\
      \tregional_categories = {\"Moroccan\"},\n}\naliases[\"Moroccan\"] = \"Morocco\"\n\nlabels[\"Mozambique\"] = {\n\tregional_categories = {\"Mozambican\"},\n}\naliases[\"Mozambican\"] = \"Mozambique\"\n\nlabels[\"Namibia\"] = {\n\tregional_categories = {\"\
      Namibian\"},\n}\naliases[\"Namibian\"] = \"Namibia\"\n\nlabels[\"Natal\"] = {\n\tdisplay = \"[[Natal]]\",\n\tregional_categories = {\"Natal\"},\n}\n\nlabels[\"Niger\"] = {\n\tregional_categories = {\"Nigerien\"},\n}\naliases[\"Nigerien\"] = \"Niger\"\n\
      \nlabels[\"Nigeria\"] = {\n\tregional_categories = {\"Nigerian\"},\n}\naliases[\"Nigerian\"] = \"Nigeria\"\n\nlabels[\"Rhodesia\"] = {\n\tdisplay = \"[[w:Rhodesia|Rhodesia]]\",\n\tregional_categories = {\"Rhodesian\"},\n}\naliases[\"Rhodesian\"] = \"Rhodesia\"\
      \n\nlabels[\"Rwanda\"] = {\n\tdisplay = \"Rwanda\",\n\tregional_categories = {\"Rwandan\"},\n}\n\nlabels[\"Réunion\"] = {\n\tregional_categories = {\"Réunion\"},\n}\n\nlabels[\"South Africa\"] = {\n\tdisplay = \"[[w:South Africa|South Africa]]\",\n\tregional_categories\
      \ = {\"South African\"},\n}\naliases[\"South African\"] = \"South Africa\"\n\nlabels[\"Sudan\"] = {\n\tdisplay = \"[[w:Sudan|Sudan]]\",\n\tregional_categories = {\"Sudanese\"},\n}\naliases[\"Sudanese\"] = \"Sudan\"\n\nlabels[\"Tanzania\"] = {\n\tregional_categories\
      \ = {\"Tanzanian\"},\n}\n\nlabels[\"Tunisian\"] = {\n\tdisplay = \"Tunisia\",\n\tregional_categories = {\"Tunisian\"} }\naliases[\"Tunisia\"] = \"Tunisian\"\n\nlabels[\"Uganda\"] = {\n\tregional_categories = {\"Ugandan\"}\n}\n\nlabels[\"West Africa\"]\
      \ = {\n\tregional_categories = {\"West African\"},\n}\naliases[\"West African\"] = \"West Africa\"\n\nlabels[\"Zimbabwe\"] = {\n\tdisplay = \"[[Zimbabwe]]\",\n\tregional_categories = {\"Zimbabwe\"},\n}\n\nlabels[\"Zululand\"] = {\n\tdisplay = \"[[Zululand]]\"\
      ,\n\tregional_categories = {\"Zululand\"},\n}\n\n\n-- North America\n\nlabels[\"Acadia\"] = {\n\tdisplay = \"Acadian\",\n\tregional_categories = {\"Acadian\"},\n}\n\nlabels[\"Alberta\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Appalachia\"\
      ] = {\n\tdisplay = \"[[Appalachia]]\",\n\tregional_categories = {\"Appalachian\"},\n}\naliases[\"Appalachian\"] = \"Appalachia\"\n\nlabels[\"Atlantic Canada\"] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"British Columbia\"] = {\n\
      \tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Cajun\"] = {\n\tdisplay = \"[[w:Cajun|Louisiana]]\",\n\tregional_categories = {\"Louisiana\"},\n}\n\nlabels[\"Canada\"] = {\n\tdisplay = \"[[w:Canada|Canada]]\",\n\tregional_categories = {\"Canadian\"\
      },\n}\naliases[\"Canadian\"] = \"Canada\"\n\nlabels[\"Canadian Prairies\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Georgia\"] = {\n\tdisplay = \"[[w:Georgia (U.S. state)|Georgia]]\",\n\tregional_categories = {\"Georgian\"},\n}\n\nlabels[\"\
      Indiana\"] = {\n\tdisplay = \"[[w:Indiana|Indiana]]\",\n\tregional_categories = {\"Indiana\"},\n}\naliases[\"Indianan\"] = \"Indiana\"\naliases[\"Indianian\"] = \"Indiana\"\n\nlabels[\"Labrador\"] = {\n\tdisplay = \"[[Labrador]]\",\n\tregional_categories\
      \ = {\"Labrador\"},\n}\n\nlabels[\"Louisiana\"] = {\n\tregional_categories = {\"Louisiana\"},\n}\naliases[\"New Orleans\"] = \"Louisiana\"\n\nlabels[\"Manitoba\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Maryland\"] = {\n\tdisplay =\
      \ \"[[w:Maryland|Maryland]]\",\n\tregional_categories = {\"Maryland\"},\n}\n\nlabels[\"Mecayapan\"] = {\n\tregional_categories = {\"Mecayapan\"},\n}\n\nlabels[\"Mexico\"] = {\n\tregional_categories = {\"Mexican\"},\n}\naliases[\"Mexican\"] = \"Mexico\"\
      \n\nlabels[\"Midland US\"] = {\n\tdisplay = \"[[w:Midland American English|Midland US]]\", -- for lack of a better link target\n\tregional_categories = {\"Midland US\"},\n}\naliases[\"North Midland US\"] = \"Midland US\" -- split North and South off?\n\
      aliases[\"Northern Midland US\"] = \"Midland US\"\naliases[\"South Midland US\"] = \"Midland US\"\naliases[\"Southern Midland US\"] = \"Midland US\"\n\nlabels[\"Midwest US\"] = {\n\tdisplay = \"[[w:Midwestern United States|Midwestern US]]\",\n\tregional_categories\
      \ = {\"Midwest US\"},\n}\naliases[\"Midwestern US\"] = \"Midwest US\"\n\nlabels[\"Missouri\"] = {\n\tdisplay = \"[[w:Missouri|Missouri]]\",\n\tregional_categories = {\"Missourian\"},\n}\naliases[\"St Louis, Missouri\"] = \"Missouri\"\naliases[\"St. Louis,\
      \ Missouri\"] = \"Missouri\"\n\nlabels[\"New Brunswick\"] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"New England\"] = {\n\tdisplay = \"[[w:New England|New England]]\",\n\tregional_categories = {\"New England\"},\n}\n\nlabels[\"\
      New Jersey\"] = {\n\tdisplay = \"[[w:New Jersey|New Jersey]]\",\n\tregional_categories = {\"New Jersey\"},\n}\n\nlabels[\"New York\"] = {\n\tdisplay = \"[[w:New York|New York]]\",\n\tregional_categories = {\"New York\"},\n}\naliases[\"NY\"] = \"New York\"\
      \n\nlabels[\"New York City\"] = {\n\tdisplay = \"[[w:New York City|New York City]]\",\n\tregional_categories = {\"New York City\"},\n}\naliases[\"NYC\"] = \"New York City\"\naliases[\"New York city\"] = \"New York City\"\n\nlabels[\"Newfoundland\"] = {\n\
      \tdisplay = \"[[Newfoundland English|Newfoundland]]\",\n\tregional_categories = {\"Newfoundland\"},\n}\n\nlabels[\"North America\"] = {\n\tdisplay = \"[[Canada]], [[American English|US]]\",\n\tregional_categories = {\"Canadian\", \"American\"},\n}\naliases[\"\
      North American\"] = \"North America\"\n\nlabels[\"North Carolina\"] = {\n\tdisplay = \"[[w:North Carolina|North Carolina]]\",\n\tregional_categories = {\"North Carolinian\"},\n}\n\nlabels[\"North India\"] = {\n\tdisplay = \"[[w:North India|North India]]\"\
      ,\n\tregional_categories = {\"North Indian\"},\n}\n\nlabels[\"Northwest Territories\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Northwestern US\"] = {\n\tdisplay = \"[[w:Northwestern United States|Northwestern US]]\",\n\tregional_categories\
      \ = {\"Northwestern US\"},\n}\naliases[\"northwestern US\"] = \"Northwestern US\"\n\nlabels[\"Nova Scotia\"] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"Nunavut\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Ohio\"\
      ] = {\n\tdisplay = \"[[Ohio]]\",\n\tregional_categories = {\"Ohioan\"},\n}\n\nlabels[\"Ontario\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Pennsylvania\"] = {\n\tdisplay = \"[[w:Pennsylvania|Pennsylvania]]\",\n\tregional_categories =\
      \ {\"Pennsylvanian\"},\n}\n\nlabels[\"Pittsburgh\"] = {\n\tdisplay = \"[[w:Pittsburgh|Pittsburgh]]\",\n\tregional_categories = {\"Pennsylvanian\"},\n} -- can be split off if enough entries in it arise; group with PA for now\n\nlabels[\"Prince Edward Island\"\
      ] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"Quebec\"] = {\n\tregional_categories = {\"Quebec\"},\n}\naliases[\"Québec\"] = \"Quebec\"\n\nlabels[\"Saskatchewan\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Southern\
      \ US\"] = {\n\tdisplay = \"[[w:Southern United States|Southern US]]\",\n\tregional_categories = {\"Southern US\"},\n}\naliases[\"southern US\"] = \"Southern US\"\naliases[\"US South\"] = \"Southern US\"\naliases[\"US Southern\"] = \"Southern US\"\n\nlabels[\"\
      Southwestern US\"] = {\n\tdisplay = \"[[w:Southwestern United States|Southwestern US]]\",\n\tregional_categories = {\"Southwestern US\"},\n}\naliases[\"Southwest US\"] = \"Southwestern US\"\naliases[\"southwest US\"] = \"Southwestern US\"\naliases[\"southwestern\
      \ US\"] = \"Southwestern US\"\n\nlabels[\"Texas\"] = {\n\tdisplay = \"[[w:Texas|Texas]]\",\n\tregional_categories = {\"Texan\"},\n}\naliases[\"TX\"] = \"Texas\"\n\nlabels[\"Upper Midwest US\"] = {\n\tdisplay = \"[[w:Upper Midwest|Upper Midwestern US]]\"\
      ,\n\tregional_categories = {\"Upper Midwest US\"},\n}\naliases[\"Upper Midwestern US\"] = \"Upper Midwest US\"\n\nlabels[\"US\"] = {\n\tdisplay = \"[[w:United States|US]]\",\n\tregional_categories = {\"American\"},\n}\naliases[\"U.S.\"] = \"US\"\naliases[\"\
      United States\"] = \"US\"\naliases[\"United States of America\"] = \"US\"\naliases[\"USA\"] = \"US\"\naliases[\"America\"] = \"US\" -- or should these be aliases of 'North America'?\naliases[\"American\"] = \"US\"\n\nlabels[\"Virginia\"] = {\n\tdisplay\
      \ = \"[[w:Virginia|Virginia]]\",\n\tregional_categories = {\"Virginian\"},\n}\n\nlabels[\"Yukon\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\n-- Yokuts tribal varieties\n\nlabels[\"Chawchila\"] = {\n\tregional_categories = {\"Chawchila\"},\n}\n\
      \nlabels[\"Choinimni\"] = {\n\tregional_categories = {\"Choinimni\"},\n}\naliases[\"Choynimni\"] = \"Choinimni\"\n\nlabels[\"Choinok\"] = {\n\tregional_categories = {\"Choinok\"},\n}\naliases[\"Choynok\"] = \"Choinok\"\n\n\nlabels[\"Chukaimina\"] = {\n\
      \tregional_categories = {\"Chukaimina\"},\n}\naliases[\"Chukaymina\"] = \"Chukaimina\"\n\nlabels[\"Chukchansi\"] = {\n\tregional_categories = {\"Chukchansi\"},\n}\n\nlabels[\"Chulamni\"] = {\n\tregional_categories = {\"Chulamni\"},\n}\naliases[\"Yachikumne\"\
      ] = \"Chulamni\"\naliases[\"Yachikumni\"] = \"Chulamni\"\n\nlabels[\"Dumna\"] = {\n\tregional_categories = {\"Dumna\"},\n}\n\nlabels[\"Hometwoli\"] = {\n\tregional_categories = {\"Hometwoli\"},\n}\n\nlabels[\"Kechayi\"] = {\n\tregional_categories = {\"\
      Kechayi\"},\n}\n\nlabels[\"Kocheyali\"] = {\n\tregional_categories = {\"Kocheyali\"},\n}\naliases[\"Ayitcha\"] = \"Kocheyali\"\naliases[\"Ayticha\"] = \"Kocheyali\"\n\nlabels[\"Koyeti\"] = {\n\tregional_categories = {\"Koyeti\"},\n}\n\nlabels[\"Lakisamni\"\
      ] = {\n\tregional_categories = {\"Lakisamni\"},\n}\n\nlabels[\"Michahay\"] = {\n\tregional_categories = {\"Michahay\"},\n}\n\nlabels[\"Noptinte\"] = {\n\tregional_categories = {\"Noptinte\"},\n}\naliases[\"Nopṭinṭe\"] = \"Noptinte\"\naliases[\"Nopthrinthre\"\
      ] = \"Noptinte\"\naliases[\"Nopchinchi\"] = \"Noptinte\"\n\nlabels[\"Tachi\"] = {\n\tregional_categories = {\"Tachi\"},\n}\n\nlabels[\"Tawalimni\"] = {\n\tregional_categories = {\"Tawalimni\"},\n}\n\nlabels[\"Tulamni\"] = {\n\tregional_categories = {\"\
      Tulamni\"},\n}\naliases[\"Tulamne\"] = \"Tulamni\"\n\nlabels[\"Wechihit\"] = {\n\tregional_categories = {\"Wechihit\"},\n}\n\nlabels[\"Wo'lasi\"] = {\n\tregional_categories = {\"Wo'lasi\"},\n}\n\nlabels[\"Wukchumni\"] = {\n\tregional_categories = {\"Wukchumni\"\
      },\n}\naliases[\"Wukchamni\"] = \"Wukchumni\"\naliases[\"Wikchamni\"] = \"Wukchumni\"\n\nlabels[\"Yawdanchi\"] = {\n\tregional_categories = {\"Yawdanchi\"},\n}\n\nlabels[\"Yawelmani\"] = {\n\tregional_categories = {\"Yawelmani\"},\n}\n\n\n-- Central America\
      \ and Caribbean\n\nlabels[\"Barbados\"] = {\n\tregional_categories = {\"Barbadian\"},\n}\naliases[\"Barbadian\"] = \"Barbados\"\n\nlabels[\"Belize\"] = {\n\tdisplay = \"[[w:Belize|Belize]]\",\n\tregional_categories = {\"Belizean\"},\n}\naliases[\"Belizean\"\
      ] = \"Belize\"\n\nlabels[\"Caribbean\"] = {\n\tdisplay = \"[[Caribbean]]\",\n\tregional_categories = {\"Caribbean\"},\n}\n\nlabels[\"Central America\"] = {\n\tregional_categories = {\"Central American\"},\n}\n\nlabels[\"Cincinnati\"] = {\n\tdisplay = \"\
      [[Cincinnati]]\",\n\tregional_categories = {\"Cincinnati\"},\n}\n\nlabels[\"Cirebon\"] = {\n\tplain_categories = {\"Cirebon Javanese\"},\n}\n\nlabels[\"Costa Rica\"] = {\n\tregional_categories = {\"Costa Rican\"},\n}\n\nlabels[\"Cuba\"] = {\n\tregional_categories\
      \ = {\"Cuban\"},\n}\n\nlabels[\"Dominican Republic\"] = {\n\tregional_categories = {\"Dominican\"},\n}\n\nlabels[\"El Salvador\"] = {\n\tregional_categories = {\"Salvadorian\"},\n}\n\nlabels[\"Guatemala\"] = {\n\tregional_categories = {\"Guatemalan\"},\n\
      }\n\nlabels[\"Honduras\"] = {\n\tregional_categories = {\"Honduran\"},\n}\n\nlabels[\"Jamaica\"] = {\n\tdisplay = \"[[w:Jamaica|Jamaica]]\",\n\tregional_categories = {\"Jamaican\"},\n}\naliases[\"Jamaican\"] = \"Jamaica\"\n\nlabels[\"Nicaragua\"] = {\n\
      \tregional_categories = {\"Nicaraguan\"},\n}\n\nlabels[\"Panama\"] = {\n\tregional_categories = {\"Panamanian\"},\n}\n\n\n-- South America\n\nlabels[\"Argentina\"] = {\n\tregional_categories = {\"Argentinian\"},\n}\n\nlabels[\"Bolivia\"] = {\n\tregional_categories\
      \ = {\"Bolivian\"},\n}\n\nlabels[\"Brazil\"] = {\n\tdisplay = \"[[w:Brazil|Brazil]]\",\n\tregional_categories = {\"Brazilian\"},\n}\n\nlabels[\"Chile\"] = {\n\tregional_categories = {\"Chilean\"},\n}\n\nlabels[\"Colombia\"] = {\n\tregional_categories =\
      \ {\"Colombian\"},\n}\n\nlabels[\"Ecuador\"] = {\n\tregional_categories = {\"Ecuadorian\"},\n}\n\nlabels[\"Guyana\"] = {\n\tregional_categories = {\"Guyanese\"},\n}\n\nlabels[\"Northeast Brazil\"] = {\n\tregional_categories = {\"Northeastern Brazilian\"\
      } \n}\naliases[\"Nordestino\"] = \"Northeast Brazil\"\naliases[\"Nordeste\"] = \"Northeast Brazil\"\naliases[\"Northeastern Brazilian\"] = \"South Brazil\"\naliases[\"Northeast Brazilian\"] = \"South Brazil\"\n\nlabels[\"Paraguay\"] = {\n\tregional_categories\
      \ = {\"Paraguayan\"},\n}\n\nlabels[\"Paraná\"] = {\n\tdisplay = \"[[w:Paraná (state)|Paraná]]\",\n\tregional_categories = {\"Paranaense\"},\n}\naliases[\"Paranaense\"] = \"Paraná\"\n\nlabels[\"Peru\"] = {\n\tregional_categories = {\"Peruvian\"},\n}\n\n\
      labels[\"Rio de Janeiro\"] = {\n\tdisplay = \"[[w:Rio de Janeiro|Rio de Janeiro]]\",\n\tregional_categories = {\"Carioca\"},\n}\naliases[\"Fluminense\"] = \"Rio de Janeiro\"\naliases[\"Carioca\"] = \"Rio de Janeiro\"\n\nlabels[\"Rio Grande do Sul\"] =\
      \ {\n\tregional_categories = {\"Gaúcho\"} \n}\naliases[\"Gaúcho\"] = \"Rio Grande do Sul\"\naliases[\"Gaucho\"] = \"Rio Grande do Sul\"\n\nlabels[\"São Paulo\"] = {\n\tdisplay = \"[[w:São Paulo (state)|São Paulo]]\",\n\tregional_categories = {\"Paulista\"\
      },\n}\naliases[\"Sao Paulo\"] = \"São Paulo\"\naliases[\"Paulista\"] = \"São Paulo\"\n\nlabels[\"South Brazil\"] = {\n\tregional_categories = {\"Southern Brazilian\"} \n}\naliases[\"Southern Brazilian\"] = \"South Brazil\"\naliases[\"South Brazilian\"\
      ] = \"South Brazil\"\n\nlabels[\"Trinidad and Tobago\"] = {\n\tdisplay = \"[[Trinidad and Tobago]]\",\n\tregional_categories = {\"Trinidad and Tobago\"},\n}\n\nlabels[\"Uruguay\"] = {\n\tregional_categories = {\"Uruguayan\"},\n}\n\nlabels[\"Suriname\"\
      ] = {\n\tdisplay = \"[[w:Suriname|Suriname]]\",\n\tregional_categories = {\"Surinamese\"},\n}\n\nlabels[\"Venezuela\"] = {\n\tregional_categories = {\"Venezuelan\"},\n}\naliases[\"Venezuelan\"] = \"Venezuela\"\n\n\n-- Asia\n\nlabels[\"Adana\"] = {\n\t\
      display = \"[[w:Adana|Adana]]\",\n\tregional_categories = {\"Adana\"},\n}\naliases[\"Atana\"] = \"Adana\"\n\nlabels[\"Afyonkarahisar\"] = {\n\tdisplay = \"[[w:Afyonkarahisar|Afyonkarahisar]]\",\n\tregional_categories = {\"Afyonkarahisar\"},\n}\naliases[\"\
      Afyon\"] = \"Afyonkarahisar\"\n\nlabels[\"Ağın\"] = {\n\tdisplay = \"[[w:Ağın|Ağın]]\",\t\n\tregional_categories = {\"Ağın\"},\n}\naliases[\"Aghin\"] = \"Ağın\"\naliases[\"Vaghaver\"] = \"Ağın\"\n\nlabels[\"Ağrı\"] = {\n\tdisplay = \"[[w:Ağrı|Ağrı]]\"\
      ,\n\tregional_categories = {\"Ağrı\"},\n}\naliases[\"Aghri\"] = \"Ağrı\"\naliases[\"Karaköse\"] = \"Ağrı\"\n\nlabels[\"Ahlat\"] = {\n\tdisplay = \"[[w:Ahlat|Ahlat]]\",\n\tregional_categories = {\"Ahlat\"},\n}\naliases[\"Khlat\"] = \"Ahlat\"\naliases[\"\
      Xlat\"] = \"Ahlat\"\n\nlabels[\"Akhalkalaki\"] = {\n\tdisplay = \"[[w:Akhalkalaki|Akhalkalaki]]\",\n\tregional_categories = {\"Akhalkalaki\"},\n}\naliases[\"Akhalkalak\"] = \"Akhalkalaki\"\naliases[\"Akhlkalak\"] = \"Akhalkalaki\"\n\nlabels[\"Akn\"] =\
      \ {\n\tdisplay = \"[[w:Kemaliye|Akn]]\",\n\tregional_categories = {\"Akn\"},\n}\naliases[\"Egin\"] = \"Akn\"\naliases[\"Eğin\"] = \"Akn\"\n\nlabels[\"Alashkert\"] = {\n\tdisplay = \"[[w:Eleşkirt|Alashkert]]\",\n\tregional_categories = {\"Alashkert\"},\n\
      }\naliases[\"Eleşkirt\"] = \"Alashkert\"\naliases[\"Alaškert\"] = \"Alashkert\"\n\nlabels[\"Amur\"] = {\n\tdisplay = \"[[w:Amur|Amur]]\",\n\tregional_categories = {\"Amur\"},\n}\n\nlabels[\"Angkorian\"] = {\n\tdisplay = \"[[w:Khmer language#Historical\
      \ periods|Angkorian]]\",\n\tregional_categories = {\"Angkorian\"},\n}\n\nlabels[\"Ankara\"] = {\n\tdisplay = \"[[w:Ankara|Ankara]]\",\n\tregional_categories = {\"Ankara\"},\n}\n\nlabels[\"Antalya\"] = {\n\tdisplay = \"[[w:Antalya|Antalya]]\",\n\tregional_categories\
      \ = {\"Antalya\"},\n}\n\nlabels[\"Arapgir\"] = {\n\tdisplay = \"[[w:Arapgir|Arapgir]]\",\n\tregional_categories = {\"Arapgir\"},\n}\naliases[\"Arapkir\"] = \"Arapgir\"\naliases[\"Arabkir\"] = \"Arapgir\"\n\nlabels[\"Ardanuç\"] = {\n\tdisplay = \"[[w:Ardanuç\
      |Ardanuç]]\",\n\tregional_categories = {\"Ardanuç\"},\n}\naliases[\"Artanuj\"] = \"Ardanuç\"\naliases[\"Ardanuji\"] = \"Ardanuç\"\n\nlabels[\"Artvin\"] = {\n\tdisplay = \"[[w:Artvin|Artvin]]\",\n\tregional_categories = {\"Artvin\"},\n}\naliases[\"Ardvin\"\
      ] = \"Artvin\"\naliases[\"Ardvini\"] = \"Artvin\"\n\nlabels[\"Banten\"] = {\n\tdisplay = \"[[w:Bantenese|Banten]]\",\n\tregional_categories = {\"Banten\"},\n}\naliases[\"Bantenese\"] = \"Banten\"\n\nlabels[\"Beijing\"] = {\n\tdisplay = \"[[w:Beijing dialect|Beijing]]\"\
      ,\n\tregional_categories = {\"Beijing\"},\n}\naliases[\"Peking\"] = \"Beijing\"\naliases[\"Pekingese\"] = \"Beijing\"\naliases[\"Beijing Mandarin\"] = \"Beijing\"\n\nlabels[\"Balıkesir\"] = {\n\tdisplay = \"[[w:Balıkesir|Balıkesir]]\",\n\tregional_categories\
      \ = {\"Balıkesir\"},\n}\n\nlabels[\"Bình Định\"] = {\n\tdisplay = \"[[w:Bình Định|Bình Định dialect]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Binh Dinh\"] = \"Bình Định\"\naliases[\"Bình Định dialect\"] = \"Bình Định\"\naliases[\"Binh\
      \ Dinh dialect\"] = \"Bình Định\"\n\nlabels[\"Bitlis\"] = {\n\tdisplay = \"[[w:Bitlis|Bitlis]]\",\n\tregional_categories = {\"Bitlis\"},\n}\naliases[\"Baghesh\"] = \"Bitlis\"\n\nlabels[\"hbo\"] = {\n    display = \"[[w:Biblical Hebrew|Biblical Hebrew]]\"\
      ,\n    plain_categories = {\"Biblical Hebrew\"},\n}\naliases[\"Biblical Hebrew\"] = \"hbo\"\naliases[\"Classical Hebrew\"] = \"hbo\"\naliases[\"Ancient Hebrew\"] = \"hbo\"\naliases[\"Old Hebrew\"] = \"hbo\"\n\nlabels[\"Bogor\"] = {\n\tregional_categories\
      \ = {\"Bogor\"},\n}\n\nlabels[\"Brebes\"] = {\n\tregional_categories = {\"Brebes\"},\n}\naliases[\"Brebian\"] = \"Brebes\"\n\nlabels[\"Brunei\"] = {\n\tdisplay = \"[[w:Brunei|Brunei]]\",\n\tregional_categories = {\"Bruneian\"},\n}\n\nlabels[\"Burdur\"\
      ] = {\n\tdisplay = \"[[w:Burdur|Burdur]]\",\n\tregional_categories = {\"Burdur\"},\n}\n\nlabels[\"Bursa\"] = {\n\tdisplay = \"[[w:Bursa|Bursa]]\",\n\tregional_categories = {\"Bursa\"},\n}\n\nlabels[\"Çanakkale\"] = {\n\tdisplay = \"[[w:Çanakkale|Çanakkale]]\"\
      ,\n\tregional_categories = {\"Çanakkale\"},\n}\n\nlabels[\"Çemişgezek\"] = {\n\tdisplay = \"[[w:Çemişgezek|Çemişgezek]]\",\n\tregional_categories = {\"Çemişgezek\"},\n}\naliases[\"Chmshkatsag\"] = \"Çemişgezek\"\naliases[\"Çemişkezek\"] = \"Çemişgezek\"\
      \naliases[\"Čmškacag\"] = \"Çemişgezek\"\n\nlabels[\"central Assam\"] = {\n\tdisplay = \"Central Assam\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Central Assam\"] = \"central Assam\"\naliases[\"Central Assamese\"] = \"central Assam\"\naliases[\"\
      central Assamese\"] = \"central Assam\"\n\nlabels[\"central Vietnam\"] = {\n\tdisplay = \"[[w:Central Vietnam|Central Vietnam]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Central Vietnam\"] = \"central Vietnam\"\naliases[\"central Vietnamese\"\
      ] = \"central Vietnam\"\naliases[\"Central Vietnamese\"] = \"central Vietnam\"\n\nlabels[\"China\"] = {\n\tdisplay = \"[[w:China|China]]\",\n\tregional_categories = {\"Chinese\"},\n}\n\nlabels[\"Cirebon\"] = {\n\tregional_categories = {\"Cirebon\"},\n\
      }\naliases[\"Cirebonese\"] = \"Cirebon\"\n\nlabels[\"Cypriot\"] = {\n\tdisplay = \"[[w:Cyprus|Cyprus]]\",\n\tregional_categories = {\"Cypriot\"},\n}\naliases['cypriot'] = 'Cypriot'\n\nlabels[\"Delhi\"] = {\n\tdisplay = \"[[w:Delhi|Delhi]]\",\n\tregional_categories\
      \ = {\"Delhi\"},\n}\n\nlabels[\"Divriği\"] = {\n\tdisplay = \"[[w:Divriği|Divriği]]\",\n\tregional_categories = {\"Divriği\"},\n}\naliases[\"Tevrik\"] = \"Divriği\"\naliases[\"Tewrik\"] = \"Divriği\"\naliases[\"Dewrik\"] = \"Divriği\"\naliases[\"Devrik\"\
      ] = \"Divriği\"\naliases[\"Devrike\"] = \"Divriği\"\naliases[\"Dewrike\"] = \"Divriği\"\n\nlabels[\"Denizli\"] = {\n\tdisplay = \"[[w:Denizli|Denizli]]\",\n\tregional_categories = {\"Denizli\"},\n}\n\nlabels[\"Diyarbakır\"] = {\n\tdisplay = \"[[w:Diyarbakı\
      r|Diyarbakır]]\",\n\tregional_categories = {\"Diyarbakır\"},\n}\naliases[\"Diyarbakir\"] = \"Diyarbakır\"\naliases[\"Diyarbekir\"] = \"Diyarbakır\"\naliases[\"Tigranakert\"] = \"Diyarbakır\"\n\nlabels[\"East Sakhalin\"] = {\n\tdisplay = \"East [[w:Sakhalin|Sakhalin]]\"\
      , \n\tregional_categories = {\"East Sakhalin\"},\n}\n\nlabels[\"Elazığ\"] = {\n\tdisplay = \"[[w:Elazığ|Elazığ]]\",\n\tregional_categories = {\"Elazığ\"},\n}\naliases[\"Elazig\"] = \"Elazığ\"\naliases[\"Elazigh\"] = \"Elazığ\"\n\nlabels[\"Erciş\"] = {\n\
      \tdisplay = \"[[w:Erciş|Erciş]]\",\n\tregional_categories = {\"Erciş\"},\n}\naliases[\"Ercis\"] = \"Erciş\"\naliases[\"Archesh\"] = \"Erciş\"\naliases[\"Artchesh\"] = \"Erciş\"\naliases[\"Erdîş\"] = \"Erciş\"\n\nlabels[\"Erzurum\"] = {\n\tdisplay = \"\
      [[w:Erzurum|Erzurum]]\",\n\tregional_categories = {\"Erzurum\"},\n}\naliases[\"Karin\"] = \"Erzurum\"\naliases[\"Erzrum\"] = \"Erzurum\"\n\nlabels[\"Eskişehir\"] = {\n\tdisplay = \"[[w:Eskişehir|Eskişehir]]\",\n\tregional_categories = {\"Eskişehir\"},\n\
      }\n\nlabels[\"Fengkai\"] = {\n\tdisplay = \"[[w:Fengkai County|Fengkai]]\",\n\tregional_categories = {\"Fengkai\"},\n}\n\nlabels[\"Fuzuli\"] = {\n\tdisplay = \"[[w:Fuzuli District|Fuzuli]]\",\n\tregional_categories = {\"Fuzuli\"},\n}\naliases[\"Füzuli\"\
      ] = \"Fuzuli\"\naliases[\"Fizuli\"] = \"Fuzuli\"\n\nlabels[\"Gadabay\"] = {\n\tdisplay = \"[[w:Gadabay District|Gadabay]]\",\n\tregional_categories = {\"Gadabay\"},\n}\naliases[\"Gədəbəy\"] = \"Gadabay\"\naliases[\"Getabek\"] = \"Gadabay\"\n\nlabels[\"\
      Ganja\"] = {\n\tdisplay = \"[[w:Ganja, Azerbaijan|Ganja]]\",\n\tregional_categories = {\"Ganja\"},\n}\naliases[\"Gandzak\"] = \"Ganja\"\n\nlabels[\"Gansu\"] = {\n\tdisplay = \"[[w:Gansu, China|Gansu]]\",\n\tregional_categories = {\"Gansu\"},\n}\n\nlabels[\"\
      Giresun\"] = {\n\tdisplay = \"[[w:Giresun|Giresun]]\",\n\tregional_categories = {\"Giresun\"},\n}\n\nlabels[\"Goris\"] = {\n\tdisplay = \"[[w:Goris|Goris]]\",\n\tregional_categories = {\"Goris\"},\n}\n\nlabels[\"Hải Phòng\"] = {\n\tdisplay = \"[[w:Haiphong|Hả\
      i Phòng dialect]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"Hai Phong\"] = \"Hải Phòng\"\naliases[\"Haiphong\"] = \"Hải Phòng\"\naliases[\"Hải Phòng dialect\"] = \"Hải Phòng\"\naliases[\"Hai Phong dialect\"] = \"Hải Phòng\"\n\nlabels[\"\
      Haiti\"] = {\n\tdisplay = \"[[w:Haiti|Haiti]]\",\n\tregional_categories = {\"Haitian\"},\n}\n\nlabels[\"Hakkari\"] = {\n\tdisplay = \"[[w:Hakkari|Hakkari]]\",\t\n\tregional_categories = {\"Hakkari\"},\n}\naliases[\"Hakkiari\"] = \"Hakkari\"\naliases[\"\
      Hakari\"] = \"Hakkari\"\naliases[\"Hakiari\"] = \"Hakkari\"\naliases[\"Hakkâri\"] = \"Hakkari\"\n\nlabels[\"Hà Tĩnh\"] = {\n\tdisplay = \"[[w:Hà Tĩnh|Hà Tĩnh dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Ha Tinh\"] = \"Hà Tĩnh\"\n\
      aliases[\"Hà Tĩnh dialect\"] = \"Hà Tĩnh\"\naliases[\"Ha Tinh dialect\"] = \"Hà Tĩnh\"\n\nlabels[\"Hemşin\"] = {\n\tdisplay = \"[[w:Hemşin|Hemşin]]\",\n\tregional_categories = {\"Hemşin\"},\n}\n\nlabels[\"Hong Kong\"] = {\n\tdisplay = \"[[w:Hong Kong|Hong\
      \ Kong]]\",\n\tregional_categories = {\"Hong Kong\"},\n}\n\nlabels[\"Huế\"] = {\n\tdisplay = \"[[w:Huế|Huế dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Hue\"] = \"Huế\"\naliases[\"Huế dialect\"] = \"Huế\"\naliases[\"Hue dialect\"\
      ] = \"Huế\"\n\nlabels[\"Hyderabad\"] = {\n\tdisplay = \"[[w:Hyderabad|Hyderabad]]\",\n\tregional_categories = {\"Hyderabadi\"},\n}\n\nlabels[\"İçel\"] = {\n\tdisplay = \"[[w:Mersin Province|İçel]]\",\n\tregional_categories = {\"İçel\"},\n}\naliases[\"\
      Içel\"] = \"İçel\"\n\nlabels[\"India\"] = {\n\tdisplay = \"[[w:India|India]]\",\n\tregional_categories = {\"Indian\"},\n}\naliases[\"Indian\"] = \"India\"\n\nlabels[\"Indore\"] = {\n\tdisplay = \"[[Indore|Indore]]\",\n\tregional_categories = {\"Indore\"\
      },\n}\n\nlabels[\"Indonesia\"] = {\n\tdisplay = \"[[w:Indonesia|Indonesia]]\",\n\tregional_categories = {\"Indonesian\"},\n}\n\nlabels[\"Iran\"] = {\n\tdisplay = \"[[w:Iran|Iran]]\",\n\tregional_categories = {\"Iranian\"},\n}\n\nlabels[\"Iraqi\"] = {\n\
      \tdisplay = \"Iraq\",\n\tregional_categories = {\"Iraqi\"} }\naliases[\"Iraq\"] = \"Iraqi\"\n\nlabels[\"Isparta\"] = {\n\tdisplay = \"[[w:Isparta|Isparta]]\",\n\tregional_categories = {\"Isparta\"},\n}\n\nlabels[\"Israel\"] = {\n\tdisplay = \"[[w:Israel|Israel]]\"\
      ,\n\tregional_categories = {\"Israeli\"},\n}\naliases[\"Israeli\"] = \"Israel\"\n\nlabels[\"Ivory Coast\"] = {\n\tdisplay = \"[[w:Ivory Coast|Ivory Coast]]\",\n\tregional_categories = {\"Ivorian\"},\n}\naliases[\"Côte d’Ivoire\"] = \"Ivory Coast\"\naliases[\"\
      Côte d'Ivoire\"] = \"Ivory Coast\"\naliases[\"Ivorian\"] = \"Ivory Coast\"\n\nlabels[\"İzmir\"] = {\n\tdisplay = \"[[w:İzmir|İzmir]]\",\n\tregional_categories = {\"İzmir\"},\n}\naliases[\"Izmir\"] = \"İzmir\"\n\nlabels[\"İzmit\"] = {\n\tdisplay = \"[[w:İ\
      zmit|İzmit]]\",\n\tregional_categories = {\"İzmit\"},\n}\naliases[\"Izmit\"] = \"İzmit\"\naliases[\"Nicomedia\"] = \"İzmit\"\naliases[\"Nikomedia\"] = \"İzmit\"\n\nlabels[\"Jakarta\"] = {\n\tdisplay = \"[[w:Jakarta|Jakarta]]\",\n\tregional_categories =\
      \ {\"Jakarta\"},\n}\n\nlabels[\"Java\"] = {\n\tdisplay = \"[[w:Java|Java]]\",\n\tregional_categories = {\"Javanese\"},\n}\naliases[\"Javanese\"] = \"Java\"\n\nlabels[\"Jordanian\"] = {\n\tdisplay = \"Jordan\",\n\tregional_categories = {\"Jordanian\"} }\n\
      aliases[\"Jordan\"] = \"Jordanian\"\n\nlabels[\"Kaptanpaşa\"] = {\n\tdisplay = \"[[w:tr:Kaptanpaşa, Çayeli|Kaptanpaşa]]\",\n\tregional_categories = {\"Rize\"},\n}\n\nlabels[\"Kars\"] = {\n\tdisplay = \"[[w:Kars|Kars]]\",\n\tregional_categories = {\"Kars\"\
      },\n}\naliases[\"Ghars\"] = \"Kars\"\n\nlabels[\"Kathiyawadi\"] = {\n\tdisplay = \"[[w:Kathiawar|Kathiyawadi]]\",\n\tregional_categories = {\"Kathiyawadi\"},\n}\naliases[\"Kathiawadi\"] = \"Kathiyawadi\"\naliases[\"Sorathi\"] = \"Kathiyawadi\"\naliases[\"\
      Bhawnagari\"] = \"Kathiyawadi\"\naliases[\"Gohilwadi\"] = \"Kathiyawadi\"\naliases[\"Holadi\"] = \"Kathiyawadi\"\naliases[\"Jhalawadi\"] = \"Kathiyawadi\"\n\nlabels[\"Kayseri\"] = {\n\tdisplay = \"[[w:Kayseri|Kayseri]]\",\n\tregional_categories = {\"Kayseri\"\
      },\n}\naliases[\"Kesaria\"] = \"Kayseri\"\n\nlabels[\"Kazym\"] = {\n\tregional_categories = {\"Kazym\"},\n}\n\nlabels[\"Kemaliye\"] = {\n\tdisplay = \"[[w:Kemaliye|Kemaliye]]\",\n\tregional_categories = {\"Kemaliye\"},\n}\n\nlabels[\"Kharberd\"] = {\n\t\
      display = \"[[w:Elazığ|Kharberd]]\",\n\tregional_categories = {\"Kharberd\"},\n}\naliases[\"Kharpert\"] = \"Kharberd\"\naliases[\"Kharput\"] = \"Kharberd\"\naliases[\"Harput\"] = \"Kharberd\"\n\nlabels[\"Khevsureti\"] = {\n\tdisplay = \"[[w:Khevsureti|Khevsureti]]\"\
      ,\n\tregional_categories = {\"Khevsureti\"},\n}\naliases[\"Khevsuria\"] = \"Khevsureti\"\n\nlabels[\"Khotorjur\"] = {\n\tdisplay = \"[[w:Khotorjur|Khotorjur]]\",\n\tregional_categories = {\"Khotorjur\"},\n}\naliases[\"Khodorchur\"] = \"Khotorjur\"\naliases[\"\
      Hodiçor\"] = \"Khotorjur\"\naliases[\"Xodiçur\"] = \"Khotorjur\"\naliases[\"Xodrçur\"] = \"Khotorjur\"\naliases[\"Xodorçur\"] = \"Khotorjur\"\naliases[\"Sırakonak\"] = \"Khotorjur\"\n\nlabels[\"Konya\"] = {\n\tdisplay = \"[[w:Konya|Konya]]\",\n\tregional_categories\
      \ = {\"Konya\"},\n}\n\nlabels[\"Lachin\"] = {\n\tdisplay = \"[[w:Lachin District|Lachin]]\",\n\tregional_categories = {\"Lachin\"},\n}\naliases[\"Laçın\"] = \"Lachin\"\naliases[\"Laçîn\"] = \"Lachin\"\n\nlabels[\"Lebanese\"] = {\n\tdisplay = \"Lebanon\"\
      ,\n\tregional_categories = {\"Lebanese\"} }\naliases[\"Lebanon\"] = \"Lebanese\"\n\nlabels[\"Levantine\"] = {\n\tdisplay = \"[[w:Levant|Levantine]]\",\n\tregional_categories = {\"Levantine\"},\n}\naliases[\"Levant\"] = \"Levantine\"\n\nlabels[\"Libya\"\
      ] = {\n\tdisplay = \"Libya\",\n\tregional_categories = {\"Libyan\"} }\naliases[\"Libyan\"] = \"Libya\"\n\nlabels[\"Lisan ud-Dawat\"] = {\n\tdisplay = \"[[w:Lisan ud-Dawat|LDA]]\",\n\tregional_categories = {\"Lisan ud-Dawat\"},\n}\naliases[\"LDA\"] = \"\
      Lisan ud-Dawat\"\naliases[\"Lisaan ud-Da'wat\"] = \"Lisan ud-Dawat\"\naliases[\"Lisaan ud-Da'wat il-'Alaviyah\"] = \"Lisan ud-Dawat\"\n\nlabels[\"Lucknow\"] = {\n\tregional_categories = {\"Lucknow\"},\n}\n\nlabels[\"Macau\"] = {\n\tdisplay = \"[[w:Macau|Macau]]\"\
      ,\n\tregional_categories = {\"Macanese\"},\n}\naliases[\"Macao\"] = \"Macau\"\nlabels[\"Mainland China\"] = {\n\tdisplay = \"[[w:Mainland China|Mainland China]]\",\n\tregional_categories = {\"Mainland China\"},\n}\naliases[\"Mainland\"] = \"Mainland China\"\
      \naliases[\"mainland\"] = \"Mainland China\"\naliases[\"mainland China\"] = \"Mainland China\"\n\nlabels[\"Malatya\"] = {\n\tdisplay = \"[[w:Malatya|Malatya]]\",\n\tregional_categories = {\"Malatya\"},\n}\naliases[\"Malatia\"] = \"Malatya\"\n\nlabels[\"\
      Malayeri\"] = {\n\tdisplay = \"[[w:Malayer|Malayeri]]\",\n\tregional_categories = {\"Malayeri\"},\n}\n\nlabels[\"Malaysia\"] = {\n\tdisplay = \"[[w:Malaysia|Malaysia]]\",\n\tregional_categories = {\"Malaysian\"},\n}\naliases[\"Malaysian\"] = \"Malaysia\"\
      \n\nlabels[\"Medieval Hebrew\"] = {\n    display = \"[[w:Medieval Hebrew|Medieval Hebrew]]\",\n    plain_categories = {\"Medieval Hebrew\"},\n}\n\nlabels[\"Mehsani\"] = {\n\tdisplay = \"[[w:Mehsana|Mehsani]]\",\n\tregional_categories = {\"Mehsani\"},\n\
      }\naliases[\"Mahesani\"] = \"Mehsani\"\n\nlabels[\"Mekong Delta\"] = {\n\tdisplay = \"[[w:Mekong Delta|Mekong Delta dialect]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Mekong Delta dialect\"] = \"Mekong Delta\"\n\nlabels[\"Mesudiye\"] =\
      \ {\n\tdisplay = \"[[w:Mesudiye, Ordu|Mesudiye]]\",\n\tregional_categories = {\"Mesudiye\"},\n}\n\nlabels[\"Mishnaic Hebrew\"] = {\n    display = \"[[w:Mishnaic Hebrew|Mishnaic Hebrew]]\",\n    plain_categories = {\"Mishnaic Hebrew\"},\n}\naliases[\"Mishnaic\"\
      ] = \"Mishnaic Hebrew\"\n\nlabels[\"Moks\"] = {\n\tdisplay = \"[[w:Bahçesaray (District), Van|Moks]]\",\n\tregional_categories = {\"Moks\"},\n}\naliases[\"Müküs\"] = \"Moks\"\naliases[\"Miks\"] = \"Moks\"\n\nlabels[\"Muğla\"] = {\n\tdisplay = \"[[w:Muğ\
      la|Muğla]]\",\n\tregional_categories = {\"Muğla\"},\n}\n\nlabels[\"Mumbai\"] = {\n\tregional_categories = {\"Mumbai\"},\n}\n\nlabels[\"Muş\"] = {\n\tdisplay = \"[[w:Muş|Muş]]\",\n\tregional_categories = {\"Muş\"},\n}\naliases[\"Mush\"] = \"Muş\"\n\nlabels[\"\
      Nakhchivan\"] = {\n\tdisplay = \"[[w:Nakhchivan|Nakhchivan]]\",\n\tregional_categories = {\"Nakhchivan\"},\n}\naliases[\"Naxçıvan\"] = \"Nakhchivan\"\naliases[\"Nakhichevan\"] = \"Nakhchivan\"\naliases[\"Nakhijevan\"] = \"Nakhchivan\"\naliases[\"Nahçı\
      van\"] = \"Nakhchivan\"\n\nlabels[\"Negeri Sembilan\"] = {\n\tdisplay = \"[[w:Negeri Sembilan|Negeri Sembilan]]\",\n\tregional_categories = {\"Negeri Sembilan\"},\n}\n\nlabels[\"Nepal\"] = {\n\tdisplay = \"[[w:Nepal|Nepal]]\",\n\tregional_categories =\
      \ {\"Nepali\"},\n}\n\nlabels[\"Nghệ An\"] = {\n\tdisplay = \"[[w:Nghệ An|Nghệ An dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Nghe An\"] = \"Nghệ An\"\naliases[\"Nghệ An dialect\"] = \"Nghệ An\"\naliases[\"Nghe An dialect\"] = \"\
      Nghệ An\"\n\nlabels[\"Nghệ Tĩnh\"] = {\n\tdisplay = \"[[w:Nghệ Tĩnh|Nghệ Tĩnh dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Nghe Tinh\"] = \"Nghệ Tĩnh\"\naliases[\"Nghệ Tinh dialect\"] = \"Nghệ Tĩnh\"\naliases[\"Nghe Tinh dialect\"\
      ] = \"Nghệ Tĩnh\"\n\nlabels[\"Niğde\"] = {\n\tdisplay = \"[[w:Niğde|Niğde]]\",\n\tregional_categories = {\"Niğde\"},\n}\naliases[\"Nigde\"] = \"Niğde\"\n\nlabels[\"Nor Bayazet\"] = {\n\tdisplay = \"[[w:Nor Bayazet|Nor Bayazet]]\",\n\tregional_categories\
      \ = {\"Nor Bayazet\"},\n}\naliases[\"Novo-Bayazet\"] = \"Nor Bayazet\"\naliases[\"Gavar\"] = \"Nor Bayazet\"\n\nlabels[\"Nor Nakhichevan\"] = {\n\tdisplay = \"[[w:Nakhichevan-on-Don|Nor Nakhichevan]]\",\n\tregional_categories = {\"Nor Nakhichevan\"},\n\
      }\naliases[\"New Nakhichevan\"] = \"Nor Nakhichevan\"\naliases[\"Nor Nakhijevan\"] = \"Nor Nakhichevan\"\naliases[\"Nakhichevan-on-Don\"] = \"Nor Nakhichevan\"\n\nlabels[\"North Korea\"] = {\n\tdisplay = \"[[w:North Korea|North Korea]]\",\n\tregional_categories\
      \ = {\"North\"},\n}\n\nlabels[\"North Sakhalin\"] = {\n\tdisplay = \"North [[w:Sakhalin|Sakhalin]]\", \n\tregional_categories = {\"North Sakhalin\"},\n}\n\nlabels[\"North Central Vietnam\"] = {\n\tdisplay = \"[[w:North Central Coast|North Central Vietnam]]\"\
      ,\n\tregional_categories = {\"Central\"},\n}\naliases[\"North-Central Vietnam\"] = \"North Central Vietnam\"\n\nlabels[\"northern Vietnam\"] = {\n\tdisplay = \"[[w:Northern Vietnam|Northern Vietnam]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"\
      north Vietnam\"] = \"northern Vietnam\"\naliases[\"North Vietnam\"] = \"northern Vietnam\"\naliases[\"north Vietnamese\"] = \"northern Vietnam\"\naliases[\"North Vietnamese\"] = \"northern Vietnam\"\naliases[\"Northern Vietnam\"] = \"northern Vietnam\"\
      \naliases[\"northern Vietnamese\"] = \"northern Vietnam\"\naliases[\"Northern Vietnamese\"] = \"northern Vietnam\"\n\nlabels[\"Oman\"] = {\n\tdisplay = \"Oman\",\n\tregional_categories = {\"Omani\"},\n}\naliases[\"Omani\"] = \"Oman\"\n\nlabels[\"overseas\
      \ Vietnamese\"] = {\n\tdisplay = \"[[w:Overseas Vietnamese|Overseas Vietnamese]]\",\n\tregional_categories = {\"Overseas\"},\n}\naliases[\"Overseas Vietnamese\"] = \"overseas Vietnamese\"\n\nlabels[\"Pahang\"] = {\n\tdisplay = \"[[w:Pahang|Pahang]]\",\n\
      \tregional_categories = {\"Pahang\"},\n}\n\nlabels[\"Pakistan\"] = {\n\tdisplay = \"[[w:Pakistan|Pakistan]]\",\n\tregional_categories = {\"Pakistani\"},\n}\n\nlabels[\"Palestinian\"] = {\n\tdisplay = \"Palestine\",\n\tregional_categories = {\"Palestinian\"\
      } }\naliases[\"Palestine\"] = \"Palestinian\"\n\nlabels[\"Partizak\"] = {\n\tdisplay = \"[[w:hy:Պարտիզակ (Քոջաելի)|Partizak]]\",\n\tregional_categories = {\"Partizak\"},\n}\naliases[\"Bardizag\"] = \"Partizak\"\n\nlabels[\"Perak\"] = {\n\tdisplay = \"\
      [[w:Perak|Perak]]\",\n\tregional_categories = {\"Perak\"},\n}\n\nlabels[\"Philadelphia\"] = {\n\tdisplay = \"[[w:Philadelphia|Philadelphia]]\",\n\tregional_categories = {\"Pennsylvanian\"},\n} -- can be split off if enough entries in it arise; group with\
      \ PA for now\n\nlabels[\"Philippines\"] = {\n\tdisplay = \"[[w:Philippines|Philippines]]\",\n\tregional_categories = {\"Philippine\"},\n}\n\nlabels[\"Phú Yên\"] = {\n\tdisplay = \"[[w:Phú Yên|Phú Yên dialect]]\",\n\tregional_categories = {\"Southern\"\
      },\n}\naliases[\"Phu Yen\"] = \"Phú Yên\"\naliases[\"Phú Yên dialect\"] = \"Phú Yên\"\naliases[\"Phu Yen dialect\"] = \"Phú Yên\"\n\nlabels[\"Pre-Angkorian\"] = {\n\tdisplay = \"[[w:Khmer language#Historical periods|Pre-Angkorian]]\",\n\tregional_categories\
      \ = {\"Pre-Angkorian\"},\n}\n\nlabels[\"Priangan\"] = {\n\tregional_categories = {\"Priangan\"},\n}\n\nlabels[\"Pshavi\"] = {\n\tdisplay = \"[[w:Pshavi|Pshavi]]\",\n\tregional_categories = {\"Pshavi\"},\n}\n\nlabels[\"Pulur\"] = {\n\tdisplay = \"[[w:Ovacı\
      k, Dersim|Pulur]]\",\n\tregional_categories = {\"Pulur\"},\n}\n\nlabels[\"Qakh\"] = {\n\tdisplay = \"[[w:Qakh District|Qakh]]\",\n\tregional_categories = {\"Qakh\"},\n}\naliases[\"Kakhi\"] = \"Qakh\"\naliases[\"Gakh\"] = \"Qakh\"\naliases[\"Qax\"] = \"\
      Qakh\"\n\nlabels[\"Qinghai\"] = {\n\tdisplay = \"[[w:Qinghai, China|Qinghai]]\",\n\tregional_categories = {\"Qinghai\"},\n}\n\nlabels[\"Quảng Bình\"] = {\n\tdisplay = \"[[w:Quảng Bình|Quảng Bình dialect]]\",\n\tregional_categories = {\"Central\"},\n}\n\
      aliases[\"Quang Binh\"] = \"Quảng Bình\"\naliases[\"Quảng Bình dialect\"] = \"Quảng Bình\"\naliases[\"Quang Binh dialect\"] = \"Quảng Bình\"\n\nlabels[\"Quảng Nam\"] = {\n\tdisplay = \"[[w:Quảng Nam|Quảng Nam dialect]]\",\n\tregional_categories = {\"Southern\"\
      },\n}\naliases[\"Quang Nam\"] = \"Quảng Nam\"\naliases[\"Quảng Nam dialect\"] = \"Quảng Nam\"\naliases[\"Quang Nam dialect\"] = \"Quảng Nam\"\n\nlabels[\"Quảng Ngãi\"] = {\n\tdisplay = \"[[w:Quảng Ngãi|Quảng Ngãi dialect]]\",\n\tregional_categories = {\"\
      Southern\"},\n}\naliases[\"Quang Ngai\"] = \"Quảng Ngãi\"\naliases[\"Quảng Ngãi dialect\"] = \"Quảng Ngãi\"\naliases[\"Quang Ngai dialect\"] = \"Quảng Ngãi\"\n\nlabels[\"Quảng Trị\"] = {\n\tdisplay = \"[[w:Quảng Trị|Quảng Trị dialect]]\",\n\tregional_categories\
      \ = {\"Central\"},\n}\naliases[\"Quang Tri\"] = \"Quảng Trị\"\naliases[\"Quảng Trị dialect\"] = \"Quảng Trị\"\naliases[\"Quang Tri dialect\"] = \"Quảng Trị\"\n\nlabels[\"Rize\"] = {\n\tdisplay = \"[[w:Rize|Rize]]\",\n\tregional_categories = {\"Rize\"},\n\
      }\n\nlabels[\"Sakhalin\"] = {\n\tdisplay = \"[[w:Sakhalin|Sakhalin]]\",\n\tregional_categories = {\"Sakhalin\"},\n}\n\nlabels[\"Salyan\"] = {\n\tdisplay = \"[[w:Salyan District, Azerbaijan|Salyan]]\",\n\tregional_categories = {\"Salyan\"},\n}\n\nlabels[\"\
      Sasun\"] = {\n\tdisplay = \"[[w:Sason|Sasun]]\",\n\tregional_categories = {\"Sasun\"},\n}\naliases[\"Sason\"] = \"Sasun\"\naliases[\"Sassoun\"] = \"Sasun\"\n\nlabels[\"Shamakhi\"] = {\n\tdisplay = \"[[w:Shamakhi|Shamakhi]]\",\n\tregional_categories = {\"\
      Shamakhi\"},\n}\naliases[\"Şamaxı\"] = \"Shamakhi\"\n\nlabels[\"Shanghai\"] = {\n\tdisplay = \"[[w:Shanghai|Shanghai]]\",\n\tregional_categories = {\"Shanghainese\"},\n}\naliases[\"Shanghainese\"] = \"Shanghai\"\n\nlabels[\"Sheki\"] = {\n\tdisplay = \"\
      [[w:Sheki, Azerbaijan|Sheki]]\",\n\tregional_categories = {\"Sheki\"},\n}\naliases[\"Şəki\"] = \"Sheki\"\naliases[\"Shaki\"] = \"Sheki\"\n\nlabels[\"Shidong\"] = {\n\tdisplay = \"[[w:Shidong|Shidong]]\",\n\tregional_categories = {\"Shidong\"},\n}\n\nlabels[\"\
      Shuryshkar\"] = {\n\tregional_categories = {\"Shuryshkar\"},\n}\naliases[\"Shurishkar\"] = \"Shuryshkar\"\n\nlabels[\"Singapore\"] = {\n\tdisplay = \"[[w:Singapore|Singapore]]\",\n\tregional_categories = {\"Singapore\"},\n}\naliases[\"Singaporian\"] =\
      \ \"Singapore\"\n\nlabels[\"Sivas\"] = {\n\tdisplay = \"[[w:Sivas|Sivas]]\",\n\tregional_categories = {\"Sivas\"},\n}\naliases[\"Sebastia\"] = \"Sivas\"\naliases[\"Sebastea\"] = \"Sivas\"\n\nlabels[\"South Korea\"] = {\n\tdisplay = \"[[w:South Korea|South\
      \ Korea]]\",\n\tregional_categories = {\"South\"},\n}\n\nlabels[\"South Sakhalin\"] = {\n\tdisplay = \"South [[w:Sakhalin|Sakhalin]]\", \n\tregional_categories = {\"South Sakhalin\"},\n}\n\nlabels[\"southern Vietnam\"] = {\n\tdisplay = \"[[w:Southern Vietnam|Southern\
      \ Vietnam]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"south Vietnam\"] = \"southern Vietnam\"\naliases[\"South Vietnam\"] = \"southern Vietnam\"\naliases[\"south Vietnamese\"] = \"southern Vietnam\"\naliases[\"South Vietnamese\"] = \"southern\
      \ Vietnam\"\naliases[\"Southern Vietnam\"] = \"southern Vietnam\"\naliases[\"southern Vietnamese\"] = \"southern Vietnam\"\naliases[\"Southern Vietnamese\"] = \"southern Vietnam\"\n\nlabels[\"Sri Lanka\"] = {\n\tdisplay = \"[[Sri Lanka]]\",\n\tregional_categories\
      \ = {\"Sri Lankan\"},\n}\n\nlabels[\"Surati\"] = {\n\tdisplay = \"[[w:Surat district|Surati]]\",\n\tregional_categories = {\"Surati\"},\n}\n\nlabels[\"Surgut\"] = {\n\tdisplay = \"[[w:Surgut|Surgut]]\",\n\tregional_categories = {\"Surgut\"},\n}\n\nlabels[\"\
      Suzhou\"] = {\n\tdisplay = \"[[w:Suzhou|Suzhou]]\",\n\tregional_categories = {\"Suzhounese\"},\n}\naliases[\"Suzhounese\"] = \"Suzhou\"\n\nlabels[\"Syrian\"] = {\n\tdisplay = \"Syria\",\n\tregional_categories = {\"Syrian\"} }\naliases[\"Syria\"] = \"Syrian\"\
      \n\nlabels[\"Taiwan\"] = {\n\tdisplay = \"[[w:Taiwan|Taiwan]]\",\n\tregional_categories = {\"Taiwanese\"},\n}\naliases[\"Taiwanese\"] = \"Taiwan\"\n\nlabels[\"Tbilisi\"] = {\n\tdisplay = \"[[w:Tbilisi|Tbilisi]]\",\n\tregional_categories = {\"Tbilisi\"\
      },\n}\naliases[\"Tiflis\"] = \"Tbilisi\"\n\nlabels[\"Thailand\"] = {\n\tdisplay = \"[[w:Thailand|Thailand]]\",\n\tregional_categories = {\"Thai\"},\n}\n\nlabels[\"Thanh Hoá\"] = {\n\tdisplay = \"[[w:Thanh Hoá|Thanh Hoá dialect]]\",\n\tregional_categories\
      \ = {\"Central\"},\n}\naliases[\"Thanh Hoa\"] = \"Thanh Hoá\"\naliases[\"Thanh Hoá dialect\"] = \"Thanh Hoá\"\naliases[\"Thanh Hoa dialect\"] = \"Thanh Hoá\"\n\nlabels[\"Tianjin\"] = {\n\tdisplay = \"[[w:Tianjin dialect|Tianjin]]\",\n\tplain_categories\
      \ = {\"Mandarin Chinese\"},\n}\naliases[\"Tianjin dialect\"] = \"Tianjin\"\naliases[\"Tianjin Mandarin\"] = \"Tianjin\"\naliases[\"Tianjinese\"] = \"Tianjin\"\n\nlabels[\"Tokat\"] = {\n\tdisplay = \"[[w:Tokat|Tokat]]\",\n\tregional_categories = {\"Tokat\"\
      },\n}\naliases[\"Evdokia\"] = \"Tokat\"\n\nlabels[\"Trabzon\"] = {\n\tdisplay = \"[[w:Trabzon|Trabzon]]\",\n\tregional_categories = {\"Trabzon\"},\n}\naliases[\"Trapizon\"] = \"Trabzon\"\n\nlabels[\"Urfa\"] = {\n\tdisplay = \"[[w:Şanlıurfa|Urfa]]\",\n\t\
      regional_categories = {\"Urfa\"},\n}\naliases[\"Urha\"] = \"Urfa\"\naliases[\"Şanlıurfa\"] = \"Urfa\"\n\nlabels[\"Uşak\"] = {\n\tdisplay = \"[[w:Uşak|Uşak]]\",\n\tregional_categories = {\"Uşak\"},\n}\n\nlabels[\"Van\"] = {\n\tdisplay = \"[[w:Van, Turkey|Van]]\"\
      ,\n\tregional_categories = {\"Van\"},\n}\n\nlabels[\"Vietnam\"] = {\n\tdisplay = \"[[w:Vietnam|Vietnam]]\",\n\tregional_categories = {\"Vietnamese\"},\n}\n\nlabels[\"Wuhan\"] = {\n\tdisplay = \"[[w:Wuhan dialect|Wuhan]]\",\n\tregional_categories = {\"\
      Wuhan\"},\n}\naliases[\"Hankou\"] = \"Wuhan\"\naliases[\"Hankow\"] = \"Wuhan\"\naliases[\"Wuhan dialect\"] = \"Wuhan\"\n\nlabels[\"Yanbian\"] = {\n\tdisplay = \"[[w:Korean language in China|Yanbian dialect]]\",\n\tregional_categories = {\"Yanbian\"},\n\
      }\n\nlabels[\"Yemen\"] = {\n\tdisplay = \"Yemen\",\n\tregional_categories = {\"Yemeni\"},\n}\naliases[\"Yemeni\"] = \"Yemen\"\naliases[\"Yemenite\"] = \"Yemen\"\n\nlabels[\"Yerevan\"] = {\n\tdisplay = \"[[w:Yerevan|Yerevan]]\",\n\tregional_categories =\
      \ {\"Yerevan\"},\n}\naliases[\"İrəvan\"] = \"Yerevan\"\n\nlabels[\"Yonggu\"] = {\n\tdisplay = \"[[w:Yonggu, Guangdong|Yonggu]]\",\n\tregional_categories = {\"Yonggu\"},\n}\n\nlabels[\"Zangilan\"] = {\n\tdisplay = \"[[w:Zəngilan|Zangilan]]\",\n\tregional_categories\
      \ = {\"Zangilan\"},\n}\naliases[\"Zəngilan\"] = \"Zangilan\"\naliases[\"Zangelan\"] = \"Zangilan\"\n\nlabels[\"Zanjan\"] = {\n\tdisplay = \"[[w:Zanjan, Iran|Zanjan]]\",\n\tregional_categories = {\"Zanjan\"},\n}\naliases[\"Zәncan\"] = \"Zanjan\"\naliases[\"\
      Zәngan\"] = \"Zanjan\"\n\nlabels[\"Zaqatala\"] = {\n\tdisplay = \"[[w:Zaqatala District|Zaqatala]]\",\n\tregional_categories = {\"Zaqatala\"},\n}\naliases[\"Zakatala\"] = \"Zaqatala\"\naliases[\"Zagatala\"] = \"Zaqatala\"\n\n\n-- Europe\n\nlabels[\"Aachen\"\
      ] = {\n\tdisplay = \"[[w:Aachen dialect|Aachen]]\",\n\tregional_categories = {\"Aachen\"},\n}\n\nlabels[\"Alghero\"] = {\n\tdisplay = \"[[w:Alghero|Alghero]]\",\n\tregional_categories = {\"Algherese\"},\n}\n\nlabels[\"Alsatian\"] = {\n\tdisplay = \"[[w:Alsatian\
      \ dialect|Alsatian]]\",\n\tregional_categories = {\"Alsatian\"},\n}\naliases[\"Alsace\"] = \"Alsatian\"\naliases[\"Alsacien\"] = \"Alsatian\"\naliases[\"Alsatian German\"] = \"Alsatian\"\naliases[\"Elsässisch\"] = \"Alsatian\"\n\nlabels[\"Al-Andalus\"\
      ] = {\n\tdisplay = \"[[w:al-Andalus|al-Andalus]]\",\n\tregional_categories = {\"Andalusian\"},\n}\naliases[\"al-Andalus\"] = \"Al-Andalus\"\n\nlabels[\"Andalusia\"] = {\n\tdisplay = \"[[w:Andalusia|Andalusia]]\",\n\tregional_categories = {\"Andalusian\"\
      },\n}\nlabels[\"Antrim\"] = {\n\tdisplay = \"[[w:County Antrim|Antrim]]\",\n\tregional_categories = {\"Ulster\"},\n}\n\nlabels[\"Aragón\"] = {\n\tregional_categories = {\"Aragonese\"},\n}\n\nlabels[\"Aran\"] = {\n\tdisplay = \"[[w:Aran Islands|Aran]]\"\
      ,\n\tregional_categories = {\"Connacht\"},\n}\n\nlabels[\"Arran\"] = {\n\tdisplay = \"[[w:Isle of Arran|Arran]]\",\n\tregional_categories = {\"Arran\"},\n}\n\nlabels[\"Arvanitika\"] = {\n\tdisplay = \"[[w:Arvanitika|Arvanitika]]\",\n\tregional_categories\
      \ = {\"Arvanitika\"},\n}\n\nlabels[\"Asturias\"] = {\n\tregional_categories = {\"Asturian\"},\n}\n\nlabels[\"Austria\"] = {\n\tdisplay = \"[[w:Austria|Austria]]\",\n\tregional_categories = {\"Austrian\"},\n}\naliases[\"Austrian\"] = \"Austria\"\n\nlabels[\"\
      Auvergne\"] = {\n\tdisplay = \"[[w:Auvergnat (language)|Auvergne]]\",\n\tregional_categories = {\"Auvergnese\"},\n}\n\nlabels[\"Bedfordshire\"] = {\n\tdisplay = \"[[w:Bedfordshire|Bedfordshire]]\",\n\tregional_categories = {\"Bedfordshire\"},\n}\naliases[\"\
      Bedfordshire dialect\"] = \"Bedfordshire\"\n\nlabels[\"Berkshire\"] = {\n\tdisplay = \"[[w:Berkshire|Berkshire]]\",\n\tregional_categories = {\"Berkshire\"},\n}\naliases[\"Berkshire dialect\"] = \"Berkshire\"\n\nlabels[\"Balearics\"] = {\n\tdisplay = \"\
      [[w:Balearic Islands|Balearics]]\",\n\tregional_categories = {\"Balearic\"},\n}\n\nlabels[\"Banat\"] = {\n\tdisplay = \"[[w:Banat|Banat]]\",\n\tregional_categories = {\"Banat\"},\n}\n\nlabels[\"Batavia\"] = {\n\tdisplay = \"[[w:Betawi language|Batavian\
      \ Malay]]\",\n\tplain_categories = {\"Batavian Malay\"},\n}\naliases[\"Batavian\"] = \"Batavia\"\naliases[\"Betawi\"] = \"Batavia\"\n\nlabels[\"Belgium\"] = {\n\tdisplay = \"[[w:Belgium|Belgium]]\",\n\tregional_categories = {\"Belgian\"},\n}\naliases[\"\
      Belgian\"] = \"Belgium\"\n\naliases[\"Bologna\"] = \"Bolognese\"\nlabels[\"Bolognese\"] = {\n\tdisplay = \"[[Bolognese]]\",\n\tregional_categories = {\"Bolognese\"},\n}\n\nlabels[\"Bosnia\"] = {\n\tdisplay = \"[[w:Bosnia|Bosnia]]\",\n\tregional_categories\
      \ = {\"Bosnian\"},\n}\naliases[\"Bosnian\"] = \"Bosnia\"\n\nlabels[\"Brabant\"] = {\n\tdisplay = \"[[w:Brabant|Brabant]]\",\n\tregional_categories = {\"Brabantian\"},\n}\n\nlabels[\"Bristol\"] = {\n\tdisplay = \"[[w:Bristol|Bristol]]\",\n\tregional_categories\
      \ = {\"Bristolian\"},\n}\naliases[\"Bristolian\"] = \"Bristol\"\n\nlabels[\"Britain\"] = {\n\tdisplay = \"[[w:Britain|Britain]]\",\n\tregional_categories = {\"British\"},\n}\naliases[\"Brit\"] = \"Britain\"\naliases[\"British\"] = \"Britain\"\naliases[\"\
      Great Britain\"] = \"Britain\"\naliases[\"UK\"] = \"Britain\"\naliases[\"United Kingdom\"] = \"Britain\"\n\nlabels[\"Bukovina\"] = {\n\tdisplay = \"[[w:Bukovina|Bukovina]]\",\n\tregional_categories = {\"Bukovinian\"},\n}\naliases[\"Bucovina\"] = \"Bukovina\"\
      \naliases[\"Bukovinian\"] = \"Bukovina\"\n\nlabels[\"Burgos\"] = {\n\tregional_categories = {\"Burgos\"},\n}\n\nlabels[\"Campello Monti\"] = {\n\tdisplay = \"[[:it:w:Campello Monti|Campello Monti]]\",\n\tplain_categories = {\"Campello Monti Walser\"},\n\
      }\n\nlabels[\"Carcoforo\"] = {\n\tdisplay = \"[[w:Carcoforo|Carcoforo]]\",\n\tplain_categories = {\"Carcoforo Walser\"},\n}\n\naliases[\"Carpi\"] = \"Carpigiano\"\nlabels[\"Carpigiano\"] = {\n\tdisplay = \"[[w:Carpi, Emilia-Romagna|Carpigiano]]\",\n\t\
      regional_categories = {\"Carpigiano\"},\n}\n\nlabels[\"Central Germany\"] = {\n\tdisplay = \"central Germany\",\n\tregional_categories = {\"Central German\"},\n}\naliases[\"Central German\"] = \"Central Germany\"\naliases[\"central Germany\"] = \"Central\
      \ Germany\"\naliases[\"central German\"] = \"Central Germany\"\n\nlabels[\"Central Italy\"] = {\n\tdisplay = \"[[w:Central Italian|central Italy]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Central Italian\"] = \"Central Italy\"\naliases[\"\
      central Italy\"] = \"Central Italy\"\naliases[\"central Italian\"] = \"Central Italy\"\n\nlabels[\"Channel Islands\"] = {\n\tdisplay = \"[[w:Channel Islands|Channel Islands]]\",\n\tregional_categories = {\"Channel Islands\"},\n}\n\nlabels[\"Chungcheong\"\
      ] = {\n\tdisplay = \"[[w:Chungcheong dialect|Chungcheong dialect]]\",\n\tregional_categories = {\"Chungcheong\"},\n}\n\nlabels[\"Chungnam\"] = {\n\tdisplay = \"[[w:Chungcheong dialect|Chungnam dialect]]\",\n\tregional_categories = {\"Chungcheong\"},\n\
      }\n\nlabels[\"Connacht\"] = {\n\tdisplay = \"[[w:Connacht|Connacht]]\",\n\tregional_categories = {\"Connacht\"},\n}\n\nlabels[\"Connemara\"] = {\n\tdisplay = \"[[w:Connemara|Connemara]]\",\n\tregional_categories = {\"Connacht\"},\n}\n\nlabels[\"Cornwall\"\
      ] = {\n\tdisplay = \"[[w:Cornwall|Cornwall]]\",\n\tregional_categories = {\"Cornish\"},\n}\naliases[\"Cornish\"] = \"Cornwall\"\naliases[\"Cornish dialect\"] = \"Cornwall\"\n\nlabels[\"Crimea\"] = {\n\tdisplay = \"[[w:Crimea|Crimea]]\",\n\tregional_categories\
      \ = {\"Crimean\"},\n}\naliases[\"Crimean\"] = \"Crimea\"\n\nlabels[\"Croatia\"] = {\n\tdisplay = \"[[w:Croatia|Croatia]]\",\n\tregional_categories = {\"Croatian\"},\n}\naliases[\"Croatian\"] = \"Croatia\"\n\nlabels[\"Cumbria\"] = {\n\tdisplay = \"[[w:Cumbria|Cumbria]]\"\
      ,\n\tregional_categories = {\"Cumbrian\"},\n}\naliases[\"Cumbrian\"] = \"Cumbria\"\n\nlabels[\"DDR\"] = {\n\tdisplay = \"[[w:German Democratic Republic|East Germany]]\",\n\tregional_categories = {\"DDR\"},\n}\naliases[\"GDR\"] = \"DDR\"\naliases[\"East\
      \ German\"] = \"DDR\"\naliases[\"East Germany\"] = \"DDR\"\n\nlabels[\"Dalmatia\"] = {\n\tdisplay = \"[[w:Dalmatia|Dalmatia]]\",\n\tregional_categories = {\"Dalmatian\"},\n}\n\nlabels[\"Derbyshire\"] = {\n\tdisplay = \"[[w:Derbyshire|Derbyshire]]\",\n\t\
      regional_categories = {\"Derbyshire\"},\n}\naliases[\"Derbyshire dialect\"] = \"Derbyshire\"\n\nlabels[\"Devon\"] = {\n\tdisplay = \"[[w:Devon|Devon]]\",\n\tregional_categories = {\"Devonian\"},\n}\naliases[\"Devonian\"] = \"Devon\"\naliases[\"Devonian\
      \ dialect\"] = \"Devon\"\naliases[\"Devonshire\"] = \"Devon\"\naliases[\"Devonshire dialect\"] = \"Devon\"\n\nlabels[\"Dobruja\"] = {\n\tdisplay = \"[[w:Dobruja|Dobruja]]\",\n\tregional_categories = {\"Dobrujan\"},\n}\naliases[\"Dobrogea\"] = \"Dobruja\"\
      \naliases[\"Dobrujan\"] = \"Dobruja\"\n\nlabels[\"Dorset\"] = {\n\tdisplay = \"[[w:Dorset|Dorset]]\",\n\tregional_categories = {\"Dorset\"},\n}\naliases[\"Dorset dialect\"] = \"Dorset\"\n\nlabels[\"Dublin\"] = {\n\tdisplay = \"[[w:Dublin|Dublin]]\",\n\t\
      regional_categories = {\"Dublin\"},\n}\n\nlabels[\"Durham\"] = {\n\tdisplay = \"[[w:County Durham|Durham]]\",\n\tregional_categories = {\"Durham\"},\n}\n\nlabels[\"East Anglia\"] = {\n\tdisplay = \"[[w:East Anglia|East Anglia]]\",\n\tregional_categories\
      \ = {\"East Anglian\"},\n}\naliases[\"East Anglian\"] = \"East Anglia\"\naliases[\"East Anglian dialect\"] = \"East Anglia\"\n\nlabels[\"East Midlands\"] = {\n\tdisplay = \"[[w:East Midlands|East Midlands]]\",\n\tregional_categories = {\"East Midlands\"\
      },\n}\naliases[\"East Midlands dialect\"] = \"East Midlands\"\n\nlabels[\"East Palatine\"] = {\n\tdisplay = \"[[w:Palatine German language|Vorderpfälzisch]]\",\n\tregional_categories = {\"East Palatine\"},\n}\naliases[\"Vorderpfälzisch\"] = \"East Palatine\"\
      \n\nlabels[\"Edirne\"] = {\n\tdisplay = \"[[w:Edirne|Edirne]]\",\n\tregional_categories = {\"Edirne\"},\n}\naliases[\"Adrianople\"] = \"Edirne\"\naliases[\"Odrin\"] = \"Edirne\"\n\nlabels[\"England\"] = {\n\tdisplay = \"[[w:England|England]]\",\n\tregional_categories\
      \ = {\"English\"},\n}\n\nlabels[\"Essex\"] = {\n\tdisplay = \"[[w:Essex|Essex]]\",\n\tregional_categories = {\"Essex\"},\n}\naliases[\"Essex dialect\"] = \"Essex\"\n\nlabels[\"Europe\"] = {\n\tdisplay = \"[[w:Europe|Europe]]\",\n\tregional_categories =\
      \ {\"European\"},\n}\n\nlabels[\"Exmoor\"] = {\n\tdisplay = \"[[w:Exmoor|Exmoor]]\",\n\tregional_categories = {\"Devonian\", \"Somerset\"},\n}\n\nlabels[\"Finland\"] = {\n\tdisplay = \"[[w:Finland|Finland]]\",\n\tregional_categories = {\"Finland\"},\n\
      }\naliases[\"Finnish\"] = \"Finland\"\n\nlabels[\"France\"] = {\n\tdisplay = \"[[w:France|France]]\",\n\tregional_categories = {\"French\"},\n}\n\nlabels[\"Föhr-Amrum\"] = {\n\tdisplay = \"[[w:Föhr-Amrum|Föhr-Amrum]]\",\n\tregional_categories = {\"Föhr-Amrum\"\
      },\n}\naliases[\"Föhr-Amrum dialect\"] = \"Föhr-Amrum\"\naliases[\"Feer\"] = \"Föhr-Amrum\"\naliases[\"Fering\"] = \"Föhr-Amrum\"\naliases[\"Oomram\"] = \"Föhr-Amrum\"\naliases[\"Öömrang\"] = \"Föhr-Amrum\"\n\nlabels[\"Formazza\"] = {\n\tdisplay = \"[[w:Formazza|Formazza]]\"\
      ,\n\tplain_categories = {\"Formazza Walser\"},\n}\n\nlabels[\"Galicia\"] = {\n\tregional_categories = {\"Galician\"},\n}\nlabels[\"Galway\"] = {\n\tdisplay = \"[[w:County Galway|Galway]]\",\n\tregional_categories = {\"Galway\"},\n}\n\nlabels[\"Gangwon\"\
      ] = {\n\tdisplay = \"[[w:Gangwon dialect|Gangwon dialect]]\",\n\tregional_categories = {\"Gangwon\"},\n}\naliases[\"Kangwon\"] = \"Gangwon\"\naliases[\"Kangwŏn\"] = \"Gangwon\"\n\nlabels[\"Gascony\"] = {\n\tdisplay = \"[[w:Gascon language|Gascony]]\",\n\
      \tregional_categories = {\"Gascon\"},\n}\n\nlabels[\"Germany\"] = {\n\tregional_categories = {\"German\"},\n}\naliases[\"German\"] = \"Germany\" -- comment this alias out if it causes problems\n\nlabels[\"Gloucestershire\"] = {\n\tdisplay = \"[[w:Gloucestershire|Gloucestershire]]\"\
      ,\n\tregional_categories = {\"Gloucestershire\"},\n}\naliases[\"Gloucestershire dialect\"] = \"Gloucestershire\"\naliases[\"Glos\"] = \"Gloucestershire\"\n\nlabels[\"Granada\"] = {\n\tregional_categories = {\"Granada\"},\n}\nlabels[\"Gressoney\"] = {\n\
      \tdisplay = \"[[w:Gressoney|Gressoney]]\", -- disambig page :-/\n\tplain_categories = {\"Gressoney Walser\"},\n}\n\nlabels[\"Guernsey\"] = {\n\tdisplay = \"[[w:Guernsey|Guernsey]]\",\n\tregional_categories = {\"Guernsey\"},\n}\n\nlabels[\"Gyeonggi\"] =\
      \ {\n\tdisplay = \"[[w:Gyeonggi dialect|Gyeonggi dialect]]\",\n\tregional_categories = {\"Gyeonggi\"},\n}\n\nlabels[\"Gyeongsang\"] = {\n\tdisplay = \"[[w:Gyeongsang dialect|Gyeongsang dialect]]\",\n\tregional_categories = {\"Gyeongsang\"},\n}\n\nlabels[\"\
      The Hague\"] = {\n\tdisplay = \"[[w:The Hague|The Hague]]\",\n\tregional_categories = {\"Hague\"},\n}\naliases[\"Hague\"] = \"The Hague\"\naliases[\"Den Haag\"] = \"The Hague\"\n\nlabels[\"Hamgyŏng\"] = {\n\tdisplay = \"[[w:Hamgyŏng dialect|Hamgyŏng dialect]]\"\
      ,\n\tregional_categories = {\"Hamgyŏng\"},\n}\naliases[\"Hamgyong\"] = \"Hamgyŏng\"\naliases[\"Hamgyeong\"] = \"Hamgyŏng\"\n\nlabels[\"Hartlepool\"] = {\n\tdisplay = \"[[w:Hartlepool|Hartlepool]]\",\n\tregional_categories = {\"Teesside\"},\n}\n\nlabels[\"\
      Heligoland\"] = {\n\tdisplay = \"[[w:Heligoland|Heligoland]]\",\n\tregional_categories = {\"Heligolandic\"},\n}\naliases[\"Heligoland dialect\"] = \"Heligoland\"\naliases[\"Halunder\"] = \"Heligoland\"\naliases[\"Heligolandic\"] = \"Heligoland\"\naliases[\"\
      Helgoland\"] = \"Heligoland\"\naliases[\"Helgoland dialect\"] = \"Heligoland\"\n\nlabels[\"Herefordshire\"] = {\n\tdisplay = \"[[w:Herefordshire|Herefordshire]]\",\n\tregional_categories = {\"Herefordshire\"},\n}\naliases[\"Herefordshire dialect\"] = \"\
      Herefordshire\"\n\nlabels[\"Hessian\"] = {\n\tdisplay = \"[[w:Hessian dialects|Hessian]]\",\n\tregional_categories = {\"Hessian\"},\n}\naliases[\"Hesse\"] = \"Hessian\"\naliases[\"Hessen\"] = \"Hessian\"\naliases[\"Hessisch\"] = \"Hessian\"\n\nlabels[\"\
      Holland\"] = {\n\tdisplay = \"[[w:Holland|Holland]]\",\n\tregional_categories = {\"Hollandic\"},\n}\naliases[\"Hollandic\"] = \"Holland\"\n\nlabels[\"Hwanghae\"] = {\n\tdisplay = \"[[w:Hwanghae dialect|Hwanghae dialect]]\",\n\tregional_categories = {\"\
      Hwanghae\"},\n}\n\nlabels[\"Ireland\"] = {\n\tdisplay = \"[[w:Ireland|Ireland]]\",\n\tregional_categories = {\"Irish\"},\n}\naliases[\"Irish\"] = \"Ireland\"\n\nlabels[\"Isle of Man\"] = {\n\tdisplay = \"[[w:Isle of Man|Isle of Man]]\",\n\tregional_categories\
      \ = {\"Manx\"},\n}\naliases[\"Manx\"] = \"Isle of Man\"\naliases[\"Isle of Mann\"] = \"Isle of Man\"\n\nlabels[\"Isle of Wight\"] = {\n\tdisplay = \"[[w:Isle of Wight|Isle of Wight]]\",\n\tregional_categories = {\"Isle of Wight\"},\n}\n\nlabels[\"Issime\"\
      ] = {\n\tdisplay = \"[[w:Issime|Issime]]\",\n\tplain_categories = {\"Issime Walser\"},\n}\n\nlabels[\"Istanbul\"] = {\n\tdisplay = \"[[w:Istanbul|Istanbul]]\",\n\tregional_categories = {\"Istanbul\"},\n}\naliases[\"İstanbul\"] = \"Istanbul\"\naliases[\"\
      Polis\"] = \"Istanbul\"\n\nlabels[\"Jeju\"] = {\n\tdisplay = \"[[w:Jeju dialect|Jeju dialect]]\",\n\tregional_categories = {\"Jeju\"},\n}\n\nlabels[\"Jeolla\"] = {\n\tdisplay = \"[[w:Jeolla dialect|Jeolla dialect]]\",\n\tregional_categories = {\"Jeolla\"\
      },\n}\n\nlabels[\"Jersey\"] = {\n\tdisplay = \"[[w:Jersey|Jersey]]\",\n\tregional_categories = {\"Jersey\"},\n}\n\nlabels[\"Kazan\"] = {\n\tdisplay = \"[[w:Kazan|Kazan]]\",\n\tregional_categories = {\"Kazan\"},\n}\n\nlabels[\"Kent\"] = {\n\tdisplay = \"\
      [[w:Kent|Kent]]\",\n\tregional_categories = {\"Kentish\"},\n}\naliases[\"Kentish\"] = \"Kent\"\naliases[\"Kentish dialect\"] = \"Kent\"\naliases[\"Kent dialect\"] = \"Kent\"\n\nlabels[\"Kerry\"] = {\n\tdisplay = \"[[w:Gaeltacht#Kerry Gaeltacht|Kerry]]\"\
      ,\n\tregional_categories = {\"Munster\"},\n}\n\nlabels[\"Kırklareli\"] = {\n\tdisplay = \"[[w:Kırklareli|Kırklareli]]\",\n\tregional_categories = {\"Kırklareli\"},\n}\naliases[\"Kirklareli\"] = \"Kırklareli\"\n\nlabels[\"Kölsch\"] = {\n\tdisplay = \"[[w:Colognian\
      \ language|Kölsch]]\",\n\tregional_categories = {\"Kölsch\"},\n}\naliases[\"Colognian\"] = \"Kölsch\"\naliases[\"Cologne\"] = \"Kölsch\"\naliases[\"Köln\"] = \"Kölsch\"\n\nlabels[\"Kukkuzi\"] = {\n\tdisplay = \"[[w:Kukkuzi|Kukkuzi]]\",\n\tregional_categories\
      \ = {\"Kukkuzi\"},\n}\n\nlabels[\"Lancashire\"] = {\n\tdisplay = \"[[w:Lancashire|Lancashire]]\",\n\tregional_categories = {\"Lancashire\"},\n}\n\nlabels[\"Languedoc\"] = {\n\tdisplay = \"[[w:Languedocien dialect|Languedoc]]\",\n\tregional_categories =\
      \ {\"Languedocian\"},\n}\n\nlabels[\"Liechtenstein\"] = {\n\tdisplay = \"[[w:Liechenstein|Liechtenstein]]\",\n\tregional_categories = {\"Liechtenstein\"},\n}\n\nlabels[\"Limousin\"] = {\n\tdisplay = \"[[w:Limousin dialect|Limousin]]\",\n\tregional_categories\
      \ = {\"Limousin\"},\n}\n\nlabels[\"Lincolnshire\"] = {\n\tdisplay = \"[[w:Lincolnshire|Lincolnshire]]\",\n\tregional_categories = {\"Lincolnshire\"},\n}\n\nlabels[\"Liverpool\"] = {\n\tdisplay = \"[[w:Liverpool|Liverpudlian]]\",\n\tregional_categories\
      \ = {\"Liverpudlian\"},\n}\naliases[\"Scouse\"] = \"Liverpool\"\n\nlabels[\"Lombardic\"] = {\n\tdisplay = \"[[w:Lombardic language|Lombardic]]\",\n\tplain_categories = {\"Lombardic\"},\n}\n\nlabels[\"London\"] = {\n\tdisplay = \"[[w:London|London]]\",\n\
      \tregional_categories = {\"London\"},\n}\n\nlabels[\"Lorraine\"] = {\n\tdisplay = \"[[w:Lorraine|Lorraine]]\",\n\tregional_categories = {\"Lorraine\"},\n}\n\nlabels[\"Luserna\"] = {\n\tdisplay = \"[[w:Luserna|Luserna]]\",\n\tregional_categories = {\"Luserna\"\
      },\n}\n\nlabels[\"Luxembourg\"] = {\n\tdisplay = \"[[w:Luxembourg|Luxembourg]]\",\n\tregional_categories = {\"Luxembourgish\"},\n}\naliases[\"Luxembourgish\"] = \"Luxembourg\"\naliases[\"Luxemburg\"] = \"Luxembourg\"\naliases[\"Luxemburgish\"] = \"Luxembourg\"\
      \n\nlabels[\"Lviv\"] = {\n\tdisplay = \"[[w:Lviv|Lviv]]\",\n\tregional_categories = {\"Lviv\"},\n}\naliases[\"Lvov\"] = \"Lviv\"\n\nlabels[\"Maastrichtian\"] = {\n\tdisplay = \"[[w:Maastrichtian dialect|Maastrichtian]]\",\n\tplain_categories = {\"Maastrichtian\
      \ Limburgish\"},\n}\n\nlabels[\"Mallorca\"] = {\n\tdisplay = \"[[w:Mallorca|Mallorca]]\",\n\tregional_categories = {\"Mallorcan\"},\n}\n\nlabels[\"Malta\"] = {\n\tregional_categories = {\"Maltese\"},\n}\n\nlabels[\"Mancunian\"] = {\n\tdisplay = \"[[w:Manchester|Mancunian]]\"\
      ,\n\tregional_categories = {\"Mancunian\"},\n}\naliases[\"Manchester\"] = \"Mancunian\"\naliases[\"Manc\"] = \"Mancunian\"\n\naliases[\"Mantua\"] = \"Mantovano\"\nlabels[\"Mantovano\"] = {\n\tdisplay = \"[[w:Mantua|Mantovano]]\",\n\tregional_categories\
      \ = {\"Mantovano\"},\n}\n\nlabels[\"Maramureș\"] = {\n\tdisplay = \"[[w:Maramureș|Maramureș]]\",\n\tregional_categories = {\"Maramureș\"},\n}\naliases[\"Maramures\"] = \"Maramureș\"\n\nlabels[\"Marseille\"] = {\n\tdisplay = \"[[w:Marseille|Marseille]]\"\
      ,\n\tregional_categories = {\"Marseille\"},\n}\n\nlabels[\"Midlands\"] = {\n\tdisplay = \"[[w:The Midlands|Midlands]]\",\n\tregional_categories = {\"Midlands\"},\n}\naliases[\"Midlands dialect\"] = \"Midlands\"\naliases[\"South Midlands\"] = \"Midlands\"\
      \ -- OK as alias? or a subvariety worth distinguishing?\n\nlabels[\"Minangkabau\"] = {\n\tdisplay = \"[[w:Minangkabau language|Minangkabau Malay]]\",\n\tplain_categories = {\"Minangkabau Malay\"},\n}\n\naliases[\"Mirandola\"] = \"Mirandolese\"\nlabels[\"\
      Mirandolese\"] = {\n\tdisplay = \"[[w:Mirandola|Mirandolese]]\",\n\tregional_categories = {\"Mirandolese\"},\n}\n\naliases[\"Modena\"] = \"Modenese\"\nlabels[\"Modenese\"] = {\n\tdisplay = \"[[w:Modena|Modenese]]\",\n\tregional_categories = {\"Modenese\"\
      },\n}\n\nlabels[\"Moldavia\"] = {\n\tdisplay = \"[[w:Moldavia|Moldavia]]\",\n\tregional_categories = {\"Moldavian\"},\n}\naliases[\"Moldavian\"] = \"Moldavia\"\naliases[\"Moldova\"] = \"Moldavia\"\naliases[\"Moldovan\"] = \"Moldavia\"\n\n\nlabels[\"Montenegro\"\
      ] = {\n\tdisplay = \"[[w:Montenegro|Montenegro]]\",\n\tregional_categories = {\"Montenegrin\"},\n}\naliases[\"Montenegrin\"] = \"Montenegro\"\n\nlabels[\"Moscow\"] = {\n\tdisplay = \"[[w:Moscow|Moscow]]\",\n\tregional_categories = {\"Moscow\"},\n}\n\n\
      labels[\"Moselle Franconian\"] = {\n\tdisplay = \"[[w:Moselle Franconian dialects|Moselle Franconian]]\",\n\tregional_categories = {\"Moselle\"},\n}\naliases[\"Moselfränkisch\"] = \"Moselle Franconian\"\n\nlabels[\"Munster\"] = {\n\tdisplay = \"[[w:Munster|Munster]]\"\
      ,\n\tregional_categories = {\"Munster\"},\n}\n\nlabels[\"Muntenia\"] = {\n\tdisplay = \"[[w:Muntenia|Muntenia]]\",\n\tregional_categories = {\"Muntenian\"},\n}\naliases[\"Muntenian\"] = \"Muntenia\"\n\nlabels[\"Murcia\"] = {\n\tregional_categories = {\"\
      Murcian\"},\n}\n\nlabels[\"Naples\"] = {\n\tdisplay = \"[[w:Naples|Naples]]\",\n\tregional_categories = {\"Neapolitan\"},\n}\naliases[\"Neapolitan\"] = \"Naples\"\n\nlabels[\"Navarre\"] = {\n\tregional_categories = {\"Navarre\"},\n}\nlabels[\"Netherlands\"\
      ] = {\n\tdisplay = \"[[w:Netherlands|Netherlands]]\",\n\tregional_categories = {\"Netherlands\"},\n}\n\nlabels[\"Norfolk\"] = {\n\tdisplay = \"[[w:Norfolk|Norfolk]]\",\n\tregional_categories = {\"Norfolk\"},\n}\n\nlabels[\"North Wales\"] = {\n\tdisplay\
      \ = \"[[w:North Wales|North Wales]]\",\n\tregional_categories = {\"North Wales\"},\n}\n\nlabels[\"Northern and Central Germany\"] = {\n\tdisplay = \"[[w:Northern Germany|northern]] and central Germany\",\n\tregional_categories = {\"Northern\", \"Central\"\
      },\n}\naliases[\"northern and central Germany\"] = \"Northern and Central Germany\"\naliases[\"Northern and Central German\"] = \"Northern and Central Germany\"\naliases[\"northern and central German\"] = \"Northern and Central Germany\"\naliases[\"North\
      \ and Central Germany\"] = \"Northern and Central Germany\"\naliases[\"north and central Germany\"] = \"Northern and Central Germany\"\naliases[\"North and Central German\"] = \"Northern and Central Germany\"\naliases[\"north and central German\"] = \"\
      Northern and Central Germany\"\n\nlabels[\"Northern Crimea\"] = {\n\tdisplay = \"Northern [[w:Crimea|Crimea]]\",\n\tregional_categories = {\"Northern\"},\n}\n\nlabels[\"Northern England\"] = {\n\tdisplay = \"[[w:Northern England|Northern England]]\",\n\
      \tregional_categories = {\"Northern England\"},\n}\naliases[\"northern England\"] = \"Northern England\"\naliases[\"North England\"] = \"Northern England\"\naliases[\"north England\"] = \"Northern England\"\n\nlabels[\"Northern Germany\"] = {\n\tdisplay\
      \ = \"[[w:Northern Germany|Northern Germany]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"northern Germany\"] = \"Northern Germany\"\naliases[\"Northern German\"] = \"Northern Germany\"\naliases[\"northern German\"] = \"Northern Germany\"\
      \naliases[\"North Germany\"] = \"Northern Germany\"\naliases[\"north Germany\"] = \"Northern Germany\"\naliases[\"North German\"] = \"Northern Germany\"\naliases[\"north German\"] = \"Northern Germany\"\n\nlabels[\"Northern Ireland\"] = {\n\tdisplay =\
      \ \"[[w:Northern Ireland|Northern Ireland]]\",\n\tregional_categories = {\"Ulster\"},\n}\naliases[\"Northern Irish\"] = \"Northern Ireland\"\n\nlabels[\"Northern Isles\"] = {\n\tdisplay = \"[[w:Orkney|Orkney]], [[w:Shetland|Shetland]]\",\n\tregional_categories\
      \ = {\"Orkney\", \"Shetland\"},\n}\naliases[\"Insular Scots\"] = \"Northern Isles\"\n\nlabels[\"Northern Italy\"] = {\n\tdisplay = \"[[w:Northern Italy|northern Italy]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"Northern Italian\"] = \"\
      Northern Italy\"\naliases[\"northern Italy\"] = \"Northern Italy\"\naliases[\"northern Italian\"] = \"Northern Italy\"\n\nlabels[\"Northumbria\"] = {\n\tdisplay = \"[[w:Northumbria|Northumbria]]\",\n\tregional_categories = {\"Northumbrian\"},\n}\naliases[\"\
      Northumbrian\"] = \"Northumbria\"\naliases[\"Northumberland\"] = \"Northumbria\"\naliases[\"Northeast England\"] = \"Northumbria\"\naliases[\"North-East England\"] = \"Northumbria\"\naliases[\"North East England\"] = \"Northumbria\"\n\nlabels[\"Nottinghamshire\"\
      ] = {\n\tdisplay = \"[[w:Nottinghamshire|Nottinghamshire]]\",\n\tregional_categories = {\"Nottinghamshire\"},\n}\naliases[\"Nottinghamshire dialect\"] = \"Nottinghamshire\"\n\nlabels[\"Oltenia\"] = {\n\tdisplay = \"[[w:Oltenia|Oltenia]]\",\n\tregional_categories\
      \ = {\"Oltenian\"},\n}\naliases[\"Oltenian\"] = \"Oltenia\"\n\nlabels[\"Orenburg\"] = {\n\tdisplay = \"[[w:Orenburg|Orenburg]]\",\n\tregional_categories = {\"Orenburg\"},\n}\n\nlabels[\"Orkney\"] = {\n\tdisplay = \"[[w:Orkney|Orkney]]\",\n\tregional_categories\
      \ = {\"Orkney\"},\n}\naliases[\"Orcadian\"] = \"Orkney\"\n\nlabels[\"Oxfordshire\"] = {\n\tdisplay = \"[[w:Oxfordshire|Oxfordshire]]\",\n\tregional_categories = {\"Oxfordshire\"},\n}\naliases[\"Oxfordshire dialect\"] = \"Oxfordshire\"\n\nlabels[\"Pahang\"\
      ] = {\n\tdisplay = \"[[w:Pahang Malay|Pahang Malay]]\",\n\tplain_categories = {\"Pahang Malay\"},\n}\n\nlabels[\"Palatine German\"] = {\n\tdisplay = \"[[w:Palatine German language|Palatine]]\",\n\tregional_categories = {\"Palatine\"},\n}\naliases[\"Palatinate\
      \ German\"] = \"Palatine German\"\naliases[\"Palatinate\"] = \"Palatine German\"\naliases[\"Palatine\"] = \"Palatine German\" -- remove if other languages have 'palatine' varieties\naliases[\"Pälzisch\"] = \"Palatine German\"\naliases[\"Pfälzisch\"] =\
      \ \"Palatine German\"\n\naliases[\"Parma\"] = \"Parmigiano\"\nlabels[\"Parmigiano\"] = {\n\tdisplay = \"[[w:Parma|Parmigiano]]\",\n\tregional_categories = {\"Parmigiano\"},\n}\n\naliases[\"Piacenza\"] = \"Piacentino\"\nlabels[\"Piacentino\"] = {\n\tdisplay\
      \ = \"[[w:Piacenza|Piacentino]]\",\n\tregional_categories = {\"Piacentino\"},\n}\n\nlabels[\"Picardy\"] = {\n\tdisplay = \"[[w:Picardy|Picardy]]\",\n\tregional_categories = {\"Picard\"},\n}\n\nlabels[\"Portugal\"] = {\n\tdisplay = \"[[w:Portugal|Portugal]]\"\
      ,\n\tregional_categories = {\"Portuguese\"},\n}\n\nlabels[\"Provence\"] = {\n\tdisplay = \"[[w:Provençal dialect|Provence]]\",\n\tregional_categories = {\"Provençal\"},\n}\n\nlabels[\"Prussia\"] = {\n\tdisplay = \"[[w:Prussia (region)|Prussia]]\",\n\t\
      regional_categories = {\"Prussian\"},\n}\naliases[\"Prussian\"] = \"Prussia\"\naliases[\"East Prussia\"] = \"Prussia\" -- aliased for now; if many entries use it, it can be separated\naliases[\"East Prussian\"] = \"Prussia\"\naliases[\"West Prussia\"]\
      \ = \"Prussia\"\naliases[\"West Prussian\"] = \"Prussia\"\n\nlabels[\"Pskov\"] = {\n\tdisplay = \"[[w:Pskov|Pskov]]\",\n\tregional_categories = {\"Pskov\"},\n}\naliases[\"Reggio Emilia\"] = \"Reggiano\"\n\nlabels[\"P'yŏng'an\"] = {\n\tdisplay = \"[[w:Pyongan\
      \ dialect|P'yŏng'an dialect]]\",\n\tregional_categories = {\"P'yŏng'an\"},\n}\naliases[\"Pyongan\"] = \"P'yŏng'an\"\naliases[\"Pyong'an\"] = \"P'yŏng'an\"\naliases[\"Pyŏngan\"] = \"P'yŏng'an\"\naliases[\"P'yŏngan\"] = \"P'yŏng'an\"\naliases[\"Pyeongan\"\
      ] = \"P'yŏng'an\"\naliases[\"Pyeong'an\"] = \"P'yŏng'an\"\naliases[\"Pyeong-an\"] = \"P'yŏng'an\"\n\nlabels[\"Reggiano\"] = {\n\tdisplay = \"[[w:Reggio Emilia|Reggiano]]\",\n\tregional_categories = {\"Reggiano\"},\n}\n\nlabels[\"Rimella\"] = {\n\tdisplay\
      \ = \"[[w:Rimella|Rimella]]\",\n\tplain_categories = {\"Rimella Walser\"},\n}\n\nlabels[\"Ripuarian\"] = {\n\tdisplay = \"[[w:Ripuarian language|Ripuarian]]\",\n\tregional_categories = {\"Ripuarian\"},\n}\naliases[\"Ripuarian Franconian\"] = \"Ripuarian\"\
      \naliases[\"Ripuarisch\"] = \"Ripuarian\"\n\nlabels[\"Romanesco\"] = {\n\tdisplay = \"[[w:Romanesco dialect|Rome]]\",\n\tregional_categories = {\"Romanesco\"},\n\tlanguages = { \"it\" },\n}\naliases[\"Roman Italian\"] = \"Romanesco\"\naliases[\"Romanesco\
      \ Italian\"] = \"Romanesco\"\naliases[\"Roman\"] = \"Romanesco\"\naliases[\"Rome\"] = \"Romanesco\"\n\nlabels[\"Rotterdam\"] = {\n\tdisplay = \"[[w:Rotterdam|Rotterdam]]\",\n\tregional_categories = {\"Rotterdam\"},\n}\naliases[\"Rotterdams\"] = \"Rotterdam\"\
      \n\nlabels[\"Saint Ouen\"] = {\n\tdisplay = \"[[w:Saint Ouen, Jersey|Saint Ouën]]\",\n\tregional_categories = {\"Saint Ouënnais\"},\n}\n\nlabels[\"Saint Petersburg\"] = {\n\tdisplay = \"[[w:Saint Petersburg|Saint Petersburg]]\",\n\tregional_categories\
      \ = {\"Saint Petersburg\"},\n}\naliases[\"St Petersburg\"] = \"Saint Petersburg\"\naliases[\"St. Petersburg\"] = \"Saint Petersburg\"\n\nlabels[\"Sappada\"] = {\n\tdisplay = \"[[w:Sappada|Sappada]]\",\n\tregional_categories = {\"Sappada\"},\n}\n\nlabels[\"\
      Sark\"] = {\n\tdisplay = \"[[w:Sercquiais|Sark]]\",\n\tregional_categories = {\"Sarkese\"},\n}\n\nlabels[\"Sauris\"] = {\n\tdisplay = \"[[w:Sauris|Sauris]]\",\n\tregional_categories = {\"Sauris\"},\n}\n\nlabels[\"Scania\"] = {\n\tdisplay = \"[[w:Scania|Scania]]\"\
      ,\n\tregional_categories = {\"Scanian\"},\n}\naliases[\"Skanian\"] = \"Scania\"\naliases[\"Skåne\"] = \"Scania\"\n\nlabels[\"Scotland\"] = {\n\tdisplay = \"[[w:Scotland|Scotland]]\",\n\tregional_categories = {\"Scottish\"},\n}\naliases[\"Scottish\"] =\
      \ \"Scotland\"\n\nlabels[\"Sense\"] = {\n\tdisplay = \"[[w:Sense District|Sense]]\",\n\tregional_categories = {\"Sensler\"},\n}\naliases[\"Sensler\"] = \"Sense\"\naliases[\"Sense District\"] = \"Sense\"\naliases[\"Senslerdeutsch\"] = \"Sense\"\n\nlabels[\"\
      Serbia\"] = {\n\tdisplay = \"[[w:Serbia|Serbia]]\",\n\tregional_categories = {\"Serbian\"},\n}\naliases[\"Serbian\"] = \"Serbia\"\n\nlabels[\"Sette Comuni\"] = {\n\tdisplay = \"[[w:Sette Comuni|Sette Comuni]]\",\n\tplain_categories = {\"Sette Comuni Cimbrian\"\
      },\n}\naliases[\"7\"] = \"Sette Comuni\"\naliases[\"Seven Comunes\"] = \"Sette Comuni\"\n\nlabels[\"Shetland\"] = {\n\tdisplay = \"[[w:Shetland|Shetland]]\",\n\tregional_categories = {\"Shetland\"},\n}\naliases[\"Shetland islands\"] = \"Shetland\"\naliases[\"\
      Shetland Islands\"] = \"Shetland\"\naliases[\"Shetlandic\"] = \"Shetland\"\naliases[\"Shetlands\"] = \"Shetland\"\n\nlabels[\"Silesia\"] = {\n\tdisplay = \"[[w:Silesia|Silesia]]\",\n\tregional_categories = {\"Silesian\"},\n}\naliases[\"Silesian\"] = \"\
      Silesia\"\naliases[\"Silesian German\"] = \"Silesia\" -- might be appropriate to split German/Polish? but why?\naliases[\"Lower Silesian\"] = \"Silesia\" -- ... would any entries be categorized different?\naliases[\"Upper Silesian\"] = \"Silesia\"\n\n\
      labels[\"Somerset\"] = {\n\tdisplay = \"[[w:Somerset|Somerset]]\",\n\tregional_categories = {\"Somerset\"},\n}\naliases[\"Somerset dialect\"] = \"Somerset\"\n\nlabels[\"South Asia\"] = {\n\tdisplay = \"[[w:South Asia|South Asia]]\",\n\tregional_categories\
      \ = {\"South Asian\"},\n}\n\nlabels[\"South Hessian\"] = {\n\tdisplay = \"South Hessian\",\n\tregional_categories = {\"South Hessian\"},\n}\naliases[\"South Hesse\"] = \"South Hessian\"\naliases[\"south Hesse\"] = \"South Hessian\"\naliases[\"South Hessen\"\
      ] = \"South Hessian\"\naliases[\"south Hessen\"] = \"South Hessian\"\naliases[\"south Hessian\"] = \"South Hessian\"\naliases[\"Südhessisch\"] = \"South Hessian\"\n\nlabels[\"South Wales\"] = {\n\tdisplay = \"[[w:South Wales|South Wales]]\",\n\tregional_categories\
      \ = {\"South Wales\"},\n}\n\nlabels[\"Southern England\"] = {\n\tdisplay = \"[[w:Southern England|Southern England]]\",\n\tregional_categories = {\"Southern England\"},\n}\naliases[\"southern England\"] = \"Southern England\"\naliases[\"South England\"\
      ] = \"Southern England\"\naliases[\"south England\"] = \"Southern England\"\n\nlabels[\"Southern Italy\"] = {\n\tdisplay = \"[[w:Southern Italy|southern Italy]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Southern Italian\"] = \"Southern\
      \ Italy\"\naliases[\"southern Italy\"] = \"Southern Italy\"\naliases[\"southern Italian\"] = \"Southern Italy\"\n\nlabels[\"Southern Russia\"] = {\n\tdisplay = \"[[w:Southern Russia|Southern Russia]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"\
      South of Russia\"] = \"Southern Russia\"\naliases[\"south of Russia\"] = \"Southern Russia\"\naliases[\"South Russia\"] = \"Southern Russia\"\naliases[\"Southern Russian\"] = \"Southern Russia\"\naliases[\"southern Russia\"] = \"Southern Russia\"\naliases[\"\
      southern Russian\"] = \"Southern Russia\"\n\nlabels[\"South Tyrol\"] = {\n\tdisplay = \"[[w:South Tyrol|South Tyrol]]\",\n\tregional_categories = {\"South Tyrolean\"},\n}\naliases[\"Alto Adige\"] = \"South Tyrol\"\naliases[\"South Tirol\"] = \"South Tyrol\"\
      \naliases[\"South Tirolean\"] = \"South Tyrol\"\naliases[\"South Tirolese\"] = \"South Tyrol\"\naliases[\"South Tyrolean\"] = \"South Tyrol\"\naliases[\"South Tyrolese\"] = \"South Tyrol\"\n\nlabels[\"Spain\"] = {\n\tdisplay = \"[[w:Spain|Spain]]\",\n\t\
      regional_categories = {\"Spanish\"},\n}\n\nlabels[\"Suffolk\"] = {\n\tdisplay = \"[[w:Suffolk|Suffolk]]\",\n\tregional_categories = {\"Suffolk\"},\n}\naliases[\"Suffolk dialect\"] = \"Suffolk\"\n\nlabels[\"Suðuroy\"] = {\n\tdisplay = \"[[w:Suðuroy|Suð\
      uroy]]\",\n\tregional_categories = {\"Suðuroy\"},\n}\n\nlabels[\"Sweden\"] = {\n\tdisplay = \"[[w:Sweden|Sweden]]\",\n\tregional_categories = {\"Swedish\"},\n}\n\nlabels[\"Switzerland\"] = {\n\tdisplay = \"[[w:Switzerland|Switzerland]]\",\n\tregional_categories\
      \ = {\"Switzerland\"},\n}\naliases[\"Swiss\"] = \"Switzerland\"\naliases[\"Swiss German\"] = \"Switzerland\" -- some German entries use this alias; let -sche know if it causes problems\n\nlabels[\"Sylt\"] = {\n\tdisplay = \"[[w:Sylt|Sylt]]\",\n\tregional_categories\
      \ = {\"Sylt\"},\n}\naliases[\"Söl\"] = \"Sylt\"\naliases[\"Sölring\"] = \"Sylt\"\naliases[\"Söl'\"] = \"Sylt\"\naliases[\"Söl'ring\"] = \"Sylt\"\n\nlabels[\"Teesside\"] = {\n\tdisplay = \"[[w:Teesside|Teesside]]\",\n\tregional_categories = {\"Teesside\"\
      },\n}\n\nlabels[\"Terengganu\"] = {\n\tdisplay = \"[[w:Terengganu Malay|Terengganu Malay]]\",\n\tplain_categories = {\"Terengganu Malay\"},\n}\n\nlabels[\"Thirteen Communities\"] = {\n\tdisplay = \"[[w:Thirteen Communities|Thirteen Communities]]\",\n\t\
      plain_categories = {\"Thirteen Communities Cimbrian\"},\n}\naliases[\"13\"] = \"Thirteen Communities\"\naliases[\"13 Communities\"] = \"Thirteen Communities\"\n\nlabels[\"Timau\"] = {\n\tdisplay = \"[[w:Paluzza|Timau]]\",\n\tregional_categories = {\"Timau\"\
      },\n}\n\nlabels[\"Torlakian\"] = {\n        display = \"[[w:Torlakian dialect|Torlakian]]\",\n        plain_categories = {\"Torlakian Serbo-Croatian\"},\n}\n\nlabels[\"Transylvania\"] = {\n\tdisplay = \"[[w:Transylvania|Transylvania]]\",\n\tregional_categories\
      \ = {\"Transylvanian\"},\n}\naliases[\"Transilvania\"] = \"Transylvania\"\naliases[\"Transylvanian\"] = \"Transylvania\"\n\nlabels[\"Tuscany\"] = {\n\tdisplay = \"[[w:Tuscan dialect|Tuscany]]\",\n\tregional_categories = {\"Tuscan\"},\n}\naliases[\"Tuscan\"\
      ] = \"Tuscany\"\n\nlabels[\"Ukraine\"] = {\n\tdisplay = \"[[w:Ukraine|Ukraine]]\",\n\tregional_categories = {\"Ukrainian\"},\n}\n\nlabels[\"Ulster\"] = {\n\tdisplay = \"[[w:Ulster|Ulster]]\",\n\tregional_categories = {\"Ulster\"},\n}\n\nlabels[\"Upper\
      \ Saxony\"] = {\n\tdisplay = \"[[w:Upper Saxony|Upper Saxony]]\",\n\tregional_categories = {\"Upper Saxon\"},\n}\naliases[\"Upper Saxon\"] = \"Upper Saxony\"\naliases[\"Upper Saxon German\"] = \"Upper Saxony\" -- gmw-ecg dialect; cf Silesian; move to data/subvarieties?\n\
      \nlabels[\"Uri\"] = {\n\tdisplay = \"[[w:Canton of Uri|Uri]]\",\n\tregional_categories = {\"Urner\"},\n}\naliases[\"Urseren\"] = \"Uri\"\naliases[\"Urner\"] = \"Uri\"\naliases[\"Urnerdeutsch\"] = \"Uri\"\n\nlabels[\"Valencia\"] = {\n\tdisplay = \"[[w:Valencia|Valencia]]\"\
      ,\n\tregional_categories = {\"Valencian\"},\n}\naliases[\"Valencian\"] = \"Valencia\"\n\nlabels[\"Venice\"] = {\n\tdisplay = \"[[w:Venice|Venice]]\",\n\tregional_categories = {\"Venetian\"},\n}\naliases[\"Venetian\"] = \"Venice\"\n\nlabels[\"Vienna\"]\
      \ = {\n\tdisplay = \"[[w:Vienna|Vienna]]\",\n\tregional_categories = {\"Viennese\"},\n}\naliases[\"Viennese\"] = \"Vienna\"\n\nlabels[\"Vojvodina\"] = {\n\tdisplay = \"[[w:Vojvodina|Vojvodina]]\",\n\tregional_categories = {\"Vojvodina\"},\n}\n\nlabels[\"\
      Wales\"] = {\n\tdisplay = \"[[w:Wales|Wales]]\",\n\tregional_categories = {\"Welsh\"},\n}\naliases[\"Welsh\"] = \"Wales\"\n\nlabels[\"Wallonia\"] = {\n\tdisplay = \"[[w:Wallonia|Wallonia]]\",\n\tregional_categories = {\"Wallonian\"},\n}\n\nlabels[\"Waterford\"\
      ] = {\n\tdisplay = \"[[w:Gaeltacht na nDéise|Waterford]]\",\n\tregional_categories = {\"Munster\"},\n}\n\nlabels[\"Wearside\"] = {\n\tdisplay = \"[[w:Wearside|Wearside]]\",\n\tregional_categories = {\"Wearside\"},\n}\n\nlabels[\"Wenzhou\"] = {\n\tdisplay\
      \ = \"[[w:Wenzhounese|Wenzhou]]\",\n\tregional_categories = {\"Wenzhounese\"},\n}\naliases[\"Wenzhounese\"] = \"Wenzhou\"\naliases[\"Wenzhou Wu\"] = \"Wenzhou\"\naliases[\"Oujiang\"] = \"Wenzhou\"\n\nlabels[\"West Country\"] = {\n\tdisplay = \"[[w:West\
      \ Country|West Country]]\",\n\tregional_categories = {\"West Country\"},\n}\naliases[\"West England\"] = \"West Country\"\naliases[\"west England\"] = \"West Country\"\naliases[\"Western England\"] = \"West Country\"\naliases[\"western England\"] = \"\
      West Country\"\naliases[\"West of England\"] = \"West Country\"\n\nlabels[\"West Midlands\"] = {\n\tdisplay = \"[[w:West Midlands|West Midlands]]\",\n\tregional_categories = {\"West Midlands\"},\n}\n\nlabels[\"West Palatine\"] = {\n\tdisplay = \"[[w:Palatine\
      \ German language|Westpfälzisch]]\",\n\tregional_categories = {\"West Palatine\"},\n}\naliases[\"Westpfälzisch\"] = \"West Palatine\"\n\nlabels[\"Western Ukraine\"] = {\n\tdisplay = \"[[w:Western Ukraine|Western Ukraine]]\",\n\tregional_categories = {\"\
      Western\"},\n}\n\nlabels[\"Wiltshire\"] = {\n\tdisplay = \"[[w:Wiltshire|Wiltshire]]\",\n\tregional_categories = {\"Wiltshire\"},\n}\naliases[\"Wiltshire dialect\"] = \"Wiltshire\"\naliases[\"Wilts\"] = \"Wiltshire\"\naliases[\"Wilts dialect\"] = \"Wiltshire\"\
      \n\nlabels[\"Yorkshire\"] = {\n\tdisplay = \"[[w:Yorkshire|Yorkshire]]\",\n\tregional_categories = {\"Yorkshire\"},\n}\n\n\n-- Australia and Oceania\n\nlabels[\"Australia\"] = {\n\tdisplay = \"[[w:Australia|Australia]]\",\n\tregional_categories = {\"Australian\"\
      },\n}\naliases[\"AU\"] = \"Australia\"\naliases[\"Australian\"] = \"Australia\"\n\nlabels[\"Hawaii\"] = {\n\tdisplay = \"[[w:Hawaii|Hawaii]]\",\n\tregional_categories = {\"Hawaiian\"},\n}\n\nlabels[\"Kauaʻi\"] = {\n\tdisplay = \"[[w:Kauai|Kauaʻi]]\",\n\
      \tregional_categories = {\"Kauaʻi\"},\n}\naliases[\"Kauai\"] = \"Kauaʻi\"\naliases[\"Kaua'i\"] = \"Kauaʻi\"\n\nlabels[\"Lānaʻi\"] = {\n\tdisplay = \"[[w:Lanai|Lānaʻi]]\",\n\tregional_categories = {\"Lānaʻi\"},\n}\naliases[\"Lanaʻi\"] = \"Lānaʻi\"\naliases[\"\
      Lanai\"] = \"Lānaʻi\"\naliases[\"Lāna'i\"] = \"Lānaʻi\"\naliases[\"Lana'i\"] = \"Lānaʻi\"\n\nlabels[\"Maui\"] = {\n\tdisplay = \"[[w:Maui|Maui]]\",\n\tregional_categories = {\"Maui\"},\n}\n\nlabels[\"Mekong Delta\"] = {\n\tdisplay = \"[[w:Mekong Delta|Mekong\
      \ Delta dialect]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Mekong Delta dialect\"] = \"Mekong Delta\"\n\nlabels[\"Molokaʻi\"] = {\n\tdisplay = \"[[w:Molokai|Molokaʻi]]\",\n\tregional_categories = {\"Molokaʻi\"},\n}\naliases[\"Molokai\"\
      ] = \"Molokaʻi\"\naliases[\"Moloka'i\"] = \"Molokaʻi\"\n\nlabels[\"New Zealand\"] = {\n\tdisplay = \"[[w:New Zealand|New Zealand]]\",\n\tregional_categories = {\"New Zealand\"},\n}\naliases[\"NZ\"] = \"New Zealand\"\n\nlabels[\"Niʻihau\"] = {\n\tdisplay\
      \ = \"[[w:Niihau|Niʻihau]]\",\n\tregional_categories = {\"Niʻihau\"},\n}\naliases[\"Ni'ihau\"] = \"Niʻihau\"\naliases[\"Niihau\"] = \"Niʻihau\"\n\n\n-- Other/unclear\n\nlabels[\"Antarctica\"] = {\n\tdisplay = \"[[w:Antarctica|Antarctica]]\",\n\tregional_categories\
      \ = {\"Antarctic\"},\n}\naliases[\"Antarctic\"] = \"Antarctica\"\naliases[\"South Pole\"] = \"Antarctica\"\n\nlabels[\"Antilles\"] = {\n\tregional_categories = {\"Antilles\"},\n}\n\nlabels[\"Commonwealth\"] = {\n\tdisplay = \"[[Commonwealth of Nations]]\"\
      ,\n\tregional_categories = {\"Commonwealth\"},\n}\n\nlabels[\"Kitti\"] = {\n\tregional_categories = {\"Kitti\"},\n}\n\n\n-- Language specific\n\nlabels[\"African American Vernacular English\"] = {\n\tdisplay = \"[[w:African American Vernacular English|African\
      \ American Vernacular]]\",\n\tregional_categories = {\"African American Vernacular\"},\n}\naliases[\"AAVE\"] = \"African American Vernacular English\"\naliases[\"ebonics\"] = \"African American Vernacular English\"\n\nlabels[\"Anglo-Norman\"] = {\n\tdisplay\
      \ = \"[[w:Anglo-Norman language|Anglo-Norman]]\",\n\tplain_categories = {\"Anglo-Norman Old French\"},\n}\n\nlabels[\"Australian English\"] = {\n\tdisplay = \"[[w:Australian English|Australia]]\",\n\tplain_categories = {\"Australian English\"},\n}\n\n\
      labels[\"Akhmimic\"] = {\n\tdisplay = \"[[w:Coptic language#Akhmimic|Akhmimic]]\",\n\tplain_categories = {\"Akhmimic Coptic\"},\n}\n\nlabels[\"Ararat\"] = {\n\tdisplay = \"[[w:Araratian dialect|Ararat]]\",\n\tplain_categories = {\"Ararat Armenian\"},\n\
      }\n\nlabels[\"Balhae\"] = {\n\tplain_categories = {\"Balhae Old Korean\"},\n}\n\nlabels[\"Balkar\"] = {\n\tplain_categories = {\"Balkar\"},\n}\n\nlabels[\"Birmingham\"] = {\n\tdisplay = \"[[wikipedia:Brummie|Birmingham]]\",\n\tplain_categories = {\"Birmingham\
      \ English\"},\n}\naliases[\"Brummie\"] = \"Birmingham\"\naliases[\"Brummy\"] = \"Birmingham\"\n\nlabels[\"Bohairic\"] = {\n\tdisplay = \"[[w:Coptic language#Bohairic|Bohairic]]\",\n\tplain_categories = {\"Bohairic Coptic\"},\n}\naliases[\"Memphitic\"]\
      \ = \"Bohairic\"\n\nlabels[\"Bokmål\"] = {\n\tdisplay = \"[[w:Bokmål|Bokmål]]\",\n\tplain_categories = {\"Norwegian Bokmål\"},\n}\n\nlabels[\"Border Scots\"] = {\n\tplain_categories = {\"Border Scots\"},\n}\n\nlabels[\"British Contemporary Latin\"] = {\n\
      \tdisplay = \"British [[w:Contemporary Latin|Contemporary Latin]]\",\n\tplain_categories = {\"British Contemporary Latin\"},\n}\naliases[\"Contemporary Anglo-Latin\"] = \"British Contemporary Latin\"\naliases[\"Contemporary British\"] = \"British Contemporary\
      \ Latin\"\n\nlabels[\"British Late Latin\"] = {\n\tdisplay = \"British [[w:Late Latin|Late Latin]]\",\n\tplain_categories = {\"British Late Latin\"},\n}\naliases[\"Late Anglo-Latin\"] = \"British Late Latin\"\naliases[\"Late British\"] = \"British Late\
      \ Latin\"\n\nlabels[\"British Medieval Latin\"] = {\n\tdisplay = \"British [[w:Medieval Latin|Medieval Latin]]\",\n\tplain_categories = {\"British Medieval Latin\"},\n}\naliases[\"British Mediaeval Latin\"] = \"British Medieval Latin\"\naliases[\"Mediaeval\
      \ Anglo-Latin\"] = \"British Medieval Latin\"\naliases[\"Mediaeval British\"] = \"British Medieval Latin\"\naliases[\"Medieval Anglo-Latin\"] = \"British Medieval Latin\"\naliases[\"Medieval British\"] = \"British Medieval Latin\"\n\nlabels[\"British New\
      \ Latin\"] = {\n\tdisplay = \"British [[w:New Latin|New Latin]]\",\n\tplain_categories = {\"British New Latin\"},\n}\naliases[\"New Anglo-Latin\"] = \"British New Latin\"\naliases[\"New British\"] = \"British New Latin\"\n\nlabels[\"British Renaissance\
      \ Latin\"] = {\n\tdisplay = \"British [[w:Renaissance Latin|Renaissance Latin]]\",\n\tplain_categories = {\"British Renaissance Latin\"},\n}\naliases[\"Renaissance Anglo-Latin\"] = \"British Renaissance Latin\"\naliases[\"Renaissance British\"] = \"British\
      \ Renaissance Latin\"\n\nlabels[\"British Vulgar Latin\"] = {\n\tdisplay = \"[[w:British Vulgar Latin|British Vulgar Latin]]\",\n\tplain_categories = {\"British Vulgar Latin\"},\n}\naliases[\"Vulgar Anglo-Latin\"] = \"British Vulgar Latin\"\naliases[\"\
      Vulgar British\"] = \"British Vulgar Latin\"\n\nlabels[\"Canadian English\"] = {\n\tdisplay = \"[[w:Canadian English|Canada]]\",\n\tplain_categories = {\"Canadian English\"},\n}\n\nlabels[\"Canadian spelling\"] = {\n\tdisplay = \"[[w:Canadian spelling|Canadian]]\"\
      ,\n\tplain_categories = {\"Canadian English forms\"},\n}\n\nlabels[\"Cantonese\"] = {\n\tdisplay = \"[[w:Cantonese|Cantonese]]\",\n\tplain_categories = {\"Cantonese Chinese\"},\n}\n\nlabels[\"Central Plains Mandarin\"] = {\n\tdisplay = \"[[w:Central Plains\
      \ Mandarin|Central Plains Mandarin]]\",\n\tplain_categories = {\"Central Plains Mandarin\"},\n}\naliases[\"Zhongyuan Mandarin\"] = \"Central Plains Mandarin\"\n\nlabels[\"Chakavian\"] = {\n\tdisplay = \"[[Chakavian]]\",\n\tplain_categories = {\"Chakavian\
      \ Serbo-Croatian\"},\n}\naliases[\"Čakavian\"] = \"Chakavian\"\n\nlabels[\"Cham Albanian\"] = {\n\tdisplay = \"[[w:Cham Albanian dialect|Cham]]\",\n\tplain_categories = {\"Cham Albanian\"},\n}\n\nlabels[\"Chinglish\"] = {\n\tdisplay = \"[[w:Chinglish|Chinglish]]\"\
      ,\n\tplain_categories = {\"Chinglish\"},\n}\n\nlabels[\"Cockney\"] = {\n\tdisplay = \"[[w:Cockney#Speech|Cockney]]\",\n\tplain_categories = {\"Cockney English\"},\n}\n\nlabels[\"Cois Fharraige\"] = {\n\tdisplay = \"[[w:Gaeltacht Cois Fharraige|Cois Fharraige]]\"\
      ,\n\tplain_categories = {\"Cois Fharraige Irish\"},\n}\naliases[\"Cois Fhairrge\"] = \"Cois Fharraige\"\n\nlabels[\"Dari\"] = {\n\tdisplay = \"[[w:Dari (Persian)|Dari (Afghanistan)]]\",\n\tplain_categories = {\"Dari Persian\"},\n}\n\nlabels[\"De'kwana\"\
      ] = {\n\tdisplay = \"De'kwana dialect\",\n\tplain_categories = {\"De'kwana Maquiritari\"},\n}\naliases[\"De'kwana dialect\"] = \"De'kwana\"\n\nlabels[\"dialectal Mandarin\"] = {\n\tdisplay = \"dialectal [[Mandarin]]\",\n\tplain_categories = {\"Mandarin\
      \ Chinese\"},\n}\nlabels[\"dialectal Cantonese\"] = {\n\tdisplay = \"dialectal [[Cantonese]]\",\n\tplain_categories = {\"Cantonese Chinese\"},\n}\nlabels[\"dialectal Hakka\"] = {\n\tdisplay = \"dialectal [[Hakka]]\",\n\tplain_categories = {\"Hakka Chinese\"\
      },\n}\nlabels[\"dialectal Gan\"] = {\n\tdisplay = \"dialectal [[Gan]]\",\n\tplain_categories = {\"Gan Chinese\"},\n}\nlabels[\"dialectal Jin\"] = {\n\tdisplay = \"dialectal [[Jin]]\",\n\tplain_categories = {\"Jin Chinese\"},\n}\nlabels[\"dialectal Min\
      \ Dong\"] = {\n\tdisplay = \"dialectal [[Min Dong]]\",\n\tplain_categories = {\"Min Dong Chinese\"},\n}\nlabels[\"dialectal Min Nan\"] = {\n\tdisplay = \"dialectal [[Min Nan]]\",\n\tplain_categories = {\"Min Nan Chinese\"},\n}\nlabels[\"dialectal Wu\"\
      ] = {\n\tdisplay = \"dialectal [[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n}\nlabels[\"dialectal Xiang\"] = {\n\tdisplay = \"dialectal [[Xiang]]\",\n\tplain_categories = {\"Xiang Chinese\"},\n}\n\nlabels[\"Digor\"] = {\n\tdisplay = \"Digor dialect\"\
      ,\n\tplain_categories = {\"Digor Ossetian\"},\n}\naliases[\"Digor dialect\"] = \"Digor\"\n\nlabels[\"Doric Scots\"] = {\n\tdisplay = \"[[w:Doric dialect (Scotland)|Doric]]\",\n\tplain_categories = {\"Doric Scots\"},\n}\n\nlabels[\"East Anglian English\"\
      ] = {\n\tdisplay = \"[[w:East Anglian English|East Anglia]]\",\n\tplain_categories = {\"East Anglian English\"},\n}\n\nlabels[\"East Frisian\"] = {\n\tdisplay = \"[[w:East Frisian Low Saxon|East Frisian]]\",\n\tplain_categories = {\"East Frisian Low German\"\
      },\n} -- for East Frisian dialectal German Low German, not the Frisianic language\n\nlabels[\"East Germanic\"] = {\n\tdisplay = \"[[w:East Germanic languages|East Germanic]]\",\n\tplain_categories = {\"East Proto-Germanic\"},\n}\n\nlabels[\"East Midlands\
      \ English\"] = {\n\tdisplay = \"[[w:East Midlands English|East Midlands]]\",\n\tplain_categories = {\"East Midlands English\"},\n}\n\nlabels[\"Eastern Armenian\"] = {\n\tdisplay = \"[[w:Eastern Armenian|Eastern Armenian]]\",\n\tplain_categories = {\"Eastern\
      \ Armenian\"},\n}\n\nlabels[\"Eastern Catalan\"] = {\n\tdisplay = \"[[w:Catalan dialects|Eastern Catalan]]\",\n\tplain_categories = {\"Eastern Catalan\"},\n}\n\nlabels[\"Ecclesiastical Latin\"] = {\n\tdisplay = \"[[w:Ecclesiastical Latin|Ecclesiastical\
      \ Latin]]\",\n\tplain_categories = {\"Ecclesiastical Latin\"},\n}\naliases[\"Church Latin\"] = \"Ecclesiastical Latin\"\n\nlabels[\"Dungan\"] = {\n\tdisplay = \"[[w:Dungan language|Dungan]]\",\n\tplain_categories = {\"Dungan Chinese\"},\n}\n\nlabels[\"\
      Ekavian\"] = {\n\tdisplay = \"[[Ekavian]]\",\n}\n\nlabels[\"European French\"] = {\n\tdisplay = \"[[w:European French|Europe]]\",\n\tplain_categories = {\"European French\"},\n}\n\nlabels[\"Fayyumic\"] = {\n\tdisplay = \"[[w:Coptic language#Fayyumic|Fayyumic]]\"\
      ,\n\tplain_categories = {\"Fayyumic Coptic\"},\n}\naliases[\"Faiyumic\"] = \"Fayyumic\"\naliases[\"Bashmuric\"] = \"Fayyumic\"\n\nlabels[\"East and West Flanders\"] = {\n\tdisplay = \"[[w:East Flanders|East]] and [[w:West Flanders|West Flanders]]\",\n\t\
      plain_categories = {\"East and West Flemish Dutch\"},\n}\naliases[\"Flanders\"] = \"East and West Flanders\"\naliases[\"Flemish\"] = \"East and West Flanders\"\n\nlabels[\"Gan\"] = {\n\tdisplay = \"[[w:Gan Chinese|Gan]]\",\n\tplain_categories = {\"Gan\
      \ Chinese\"},\n}\n\nlabels[\"Geordie\"] = {\n\tdisplay = \"[[w:Geordie|Geordie]]\",\n\tplain_categories = {\"Geordie English\"},\n}\n\nlabels[\"Gheg\"] = {\n\tdisplay = \"[[w:Gheg Albanian|Gheg]]\",\n\tplain_categories = {\"Gheg Albanian\"},\n}\n\nlabels[\"\
      Guardiol\"] = {\n\tdisplay = \"[[w:Guardia Piemontese|Guardiol]]\",\n\tplain_categories = {\"Guardiol Occitan\"},\n}\n\nlabels[\"Hakka\"] = {\n\tdisplay = \"[[w:Hakka Chinese|Hakka]]\",\n\tplain_categories = {\"Hakka Chinese\"},\n}\n\nlabels[\"Hamburgisch\"\
      ] = {\n\tdisplay = \"[[w:Hamburgisch dialect|Hamburgisch]]\",\n\tplain_categories = {\"Hamburgisch Low German\"},\n}\n\nlabels[\"Hamshen\"] = {\n\tdisplay = \"[[w:Homshetsi dialect|Hamshen]]\",\n\tplain_categories = {\"Hamshen Armenian\"},\n}\naliases[\"\
      Homshetsi\"] = \"Hamshen\"\naliases[\"Homshetsma\"] = \"Hamshen\"\n\nlabels[\"Helsinki slang\"] = {\n\tdisplay = \"[[w:Helsinki slang|Helsinki slang]]\",\n\tplain_categories = {\"Helsinki slang\"},\n}\n\nlabels[\"Hokkien\"] = {\n\tdisplay = \"[[w:Hokkien|Hokkien]]\"\
      ,\n\tplain_categories = {\"Hokkien Chinese\"},\n}\n\nlabels[\"Hong Kong Cantonese\"] = {\n\tdisplay = \"[[w:Hong Kong Cantonese|Hong Kong Cantonese]]\",\n\tplain_categories = {\"Hong Kong Cantonese\"},\n}\n\nlabels[\"Hubei\"] = {\n\tdisplay = \"[[w:Hubei|Hubei]]\"\
      ,\n}\n\nlabels[\"Hulu Pahang\"] = {\n\tplain_categories = {\"Hulu Pahang Malay\"},\n}\n\nlabels[\"Ikavian\"] = {\n\tdisplay = \"[[Ikavian]]\",\n\tplain_categories = {\"Ikavian Serbo-Croatian\"},\n}\n\nlabels[\"Indian English\"] = {\n\tdisplay = \"[[w:Indian\
      \ English|India]]\",\n\tplain_categories = {\"Indian English\"},\n}\n\nlabels[\"Ingilo\"] = {\n\tdisplay = \"[[w:Ingiloy people|Ingilo]]\",\n\tplain_categories = {\"Ingilo Georgian\"},\n}\naliases[\"Ingiloy\"] = \"Ingilo\"\naliases[\"Saingilo\"] = \"Ingilo\"\
      \n\nlabels[\"Inner Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About Mbugu|Ma'a]]\",\n\tplain_categories = {\"Inner Mbugu\"},\n}\naliases[\"inner Mbugu\"] = \"Inner Mbugu\"\n\nlabels[\"Inuktun\"] = {\n\tplain_categories = {\"Inuktun Inuktitut\"},\n}\naliases[\"\
      Polar Eskimo\"] = \"Inuktun\"\n\nlabels[\"Inuttut\"] = {\n\tplain_categories = {\"Inuttut Inuktitut\"},\n}\naliases[\"Nunatsiavummiutut\"] = \"Inuttut\"\naliases[\"Labradorimiutut\"] = \"Inuttut\"\naliases[\"Inuttitut\"] = \"Inuttut\"\n\nlabels[\"Irish\
      \ English\"] = {\n\tdisplay = \"[[w:Irish English|Ireland]]\",\n\tplain_categories = {\"Irish English\"},\n}\n\nlabels[\"Iron\"] = {\n\tdisplay = \"Iron dialect\",\n\tplain_categories = {\"Iron Ossetian\"},\n}\naliases[\"Iron dialect\"] = \"Iron\"\n\n\
      labels[\"Itivimuit\"] = {\n\tplain_categories = {\"Itivimuit Inuktitut\"},\n}\n\nlabels[\"Jianghuai Mandarin\"] = {\n\tdisplay = \"[[w:Lower Yangtze Mandarin|Jianghuai Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"Jiang-Huai\
      \ Mandarin\"] = \"Jianghuai Mandarin\"\naliases[\"Lower Yangtze Mandarin\"] = \"Jianghuai Mandarin\"\n\nlabels[\"Jiaoliao Mandarin\"] = {\n\tdisplay = \"[[w:Jiaoliao Mandarin|Jiaoliao Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"\
      Jiao-Liao Mandarin\"] = \"Jiaoliao Mandarin\"\n\nlabels[\"Jilu Mandarin\"] = {\n\tdisplay = \"[[w:Jilu Mandarin|Jilu Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"Ji-Lu Mandarin\"] = \"Jilu Mandarin\"\n\nlabels[\"Jin\"] = {\n\
      \tdisplay = \"[[w:Jin Chinese|Jin]]\",\n\tregional_categories = {\"Jin\"},\n}\n\nlabels[\"Kajkavian\"] = {\n\tdisplay = \"[[Kajkavian]]\",\n\tplain_categories = {\"Kajkavian Serbo-Croatian\"},\n}\n\nlabels[\"Karabakh\"] = {\n\tdisplay = \"[[w:Karabakh\
      \ dialect (Armenian)|Karabakh]]\",\n\tplain_categories = {\"Karabakh Armenian\"},\n}\naliases[\"Gharabagh\"] = \"Karabakh\"\naliases[\"Artsakh\"] = \"Karabakh\"\n\nlabels[\"Kansai\"] = {\n\tdisplay = \"[[w:Kansai dialect|Kansai]]\",\n\tplain_categories\
      \ = {\"Kansai Japanese\"},\n}\n\nlabels[\"Karachay\"] = {\n\tplain_categories = {\"Karachay\"},\n}\n\nlabels[\"Kichwa\"] = {\n\tdisplay = \"[[w:Kichwa language|Standard Ecuadorian Kichwa]]\",\n\tplain_categories = {\"Standard Kichwa\"},\n}\n\nlabels[\"\
      Kromanti\"] = {\n\tdisplay = \"[[w:Jamaican Maroon spirit-possession language|Kromanti spirit possession language]]\",\n\tplain_categories = {\"Kromanti Akan\"},\n}\n\nlabels[\"Lanyin Mandarin\"] = {\n\tdisplay = \"[[w:Lanyin Mandarin|Lanyin Mandarin]]\"\
      ,\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"Lan-Yin Mandarin\"] = \"Lanyin Mandarin\"\n\nlabels[\"Late Latin\"] = {\n\tdisplay = \"[[w:Late Latin|Late Latin]]\",\n\tplain_categories = {\"Late Latin\"},\n}\n\nlabels[\"Latin America\"]\
      \ = {\n\tdisplay = \"[[w:Latin America|Latin America]]\",\n\tplain_categories = {\"Latin American Spanish\"},\n}\naliases[\"Latin American Spanish\"] = \"Latin America\"\n\nlabels[\"Louisiana French\"] = {\n\tdisplay = \"[[w:Cajun French|Louisiana]]\"\
      ,\n\tplain_categories = {\"Louisiana French\"},\n}\n\nlabels[\"Low Prussian\"] = {\n\tdisplay = \"[[w:Low Prussian dialect|Low Prussian]]\",\n\tplain_categories = {\"Low Prussian Low German\"},\n}\n\nlabels[\"Lowlands Scots\"] = {\n\tplain_categories =\
      \ {\"Lowlands Scots\"},\n}\n\nlabels[\"Lycopolitan\"] = {\n\tdisplay = \"[[w:Coptic language#Lycopolitan|Lycopolitan]]\",\n\tplain_categories = {\"Lycopolitan Coptic\"},\n}\naliases[\"Subakhmimic\"] = \"Lycopolitan\"\naliases[\"Assiutic\"] = \"Lycopolitan\"\
      \n\nlabels[\"Mecklenburgisch Low German\"] = {\n\tdisplay = \"[[w:Mecklenburgisch dialect|Mecklenburgisch]]\",\n\tplain_categories = {\"Mecklenburgisch Low German\"},\n}\naliases[\"Mecklenburgisch\"] = \"Mecklenburgisch Low German\"\naliases[\"Mecklenburg\"\
      ] = \"Mecklenburgisch Low German\"\n\nlabels[\"Medieval Latin\"] = {\n\tdisplay = \"[[w:Medieval Latin|Medieval Latin]]\",\n\tplain_categories = {\"Medieval Latin\"},\n}\n\nlabels[\"Midlands English\"] = {\n\tdisplay = \"[[w:Midlands English|Midlands]]\"\
      ,\n\tplain_categories = {\"Midlands English\"},\n}\n\nlabels[\"Min\"] = {\n\tdisplay = \"[[w:Min Chinese|Min]]\",\n\tplain_categories = {\"Min Chinese\"},\n}\n\nlabels[\"Min Bei\"] = {\n\tdisplay = \"[[w:Northern Min|Min Bei]]\",\n\tplain_categories =\
      \ {\"Min Bei Chinese\"},\n}\n\nlabels[\"Min Dong\"] = {\n\tdisplay = \"[[w:Eastern Min|Min Dong]]\",\n\tplain_categories = {\"Min Dong Chinese\"},\n}\n\nlabels[\"Min Nan\"] = {\n\tdisplay = \"[[w:Southern Min|Min Nan]]\",\n\tplain_categories = {\"Min Nan\
      \ Chinese\"},\n}\n\nlabels[\"Min Zhong\"] = {\n\tdisplay = \"[[w:Central Min|Min Zhong]]\",\n\tplain_categories = {\"Min Zhong Chinese\"},\n}\n\nlabels[\"Mistralian\"] = {\n\tdisplay = \"[[w:Occitan language#Writing system|Mistralian]]\",\n\tplain_categories\
      \ = {\"Mistralian Occitan\"},\n}\n\nlabels[\"Mooring\"] = {\n\tdisplay = \"[[w:Mooring (North Frisian dialect)|Mooring]]\",\n\tplain_categories = {\"Mooring North Frisian\"},\n}\naliases[\"Mooring dialect\"] = \"Mooring\"\n\nlabels[\"Multicultural London\
      \ English\"] = {\n\tdisplay = \"[[w:Multicultural London English|MLE]]\",\n\tplain_categories = {\"Multicultural London English\"},\n}\naliases[\"MLE\"] = \"Multicultural London English\"\n\nlabels[\"New Latin\"] = {\n\tdisplay = \"[[w:New Latin|New Latin]]\"\
      ,\n\tplain_categories = {\"New Latin\"},\n}\n\nlabels[\"New Zealand English\"] = {\n\tdisplay = \"[[w:New Zealand English|New Zealand]]\",\n\tplain_categories = {\"New Zealand English\"},\n}\n\nlabels[\"Non-Oxford British spelling\"] = {\n\tdisplay = \"\
      Non-[[w:Oxford spelling|Oxford]] [[British English]]\",\n\tplain_categories = {\"British English forms\"},\n}\naliases[\"non-Oxford British spelling\"] = \"Non-Oxford British spelling\"\naliases[\"Non-Oxford\"] = \"Non-Oxford British spelling\"\naliases[\"\
      non-Oxford\"] = \"Non-Oxford British spelling\"\n\nlabels[\"Normal Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About Mbugu|Mbugu]]\",\n\tplain_categories = {\"Normal Mbugu\"},\n}\naliases[\"normal Mbugu\"] = \"Normal Mbugu\"\n\nlabels[\"North Germanic\"]\
      \ = {\n\tdisplay = \"[[w:North Germanic languages|North Germanic]]\",\n\tplain_categories = {\"North Proto-Germanic\"},\n}\n\nlabels[\"Northeastern Mandarin\"] = {\n\tdisplay = \"[[w:Northeastern Mandarin|Northeastern Mandarin]]\",\n\tplain_categories\
      \ = {\"Mandarin Chinese\"},\n}\naliases[\"northeastern Mandarin\"] = \"Northeastern Mandarin\"\n\nlabels[\"Northern Dutch\"] = {\n\tdisplay = \"[[w:Dutch dialects|Northern]]\",\n\tplain_categories = {\"Northern Dutch\"},\n}\n\nlabels[\"Northern England\
      \ English\"] = {\n\tdisplay = \"[[w:Northern England English|Northern England]]\",\n\tplain_categories = {\"Northern England English\"},\n}\naliases[\"Northern English dialect\"] = \"Northern England English\"\naliases[\"northern English\"] = \"Northern\
      \ England English\"\naliases[\"North English\"] = \"Northern England English\"\naliases[\"north English\"] = \"Northern England English\"\n\nlabels[\"Northern Finnic\"] = {\n\tplain_categories = {\"Northern Proto-Finnic\"},\n}\n\nlabels[\"Northern Wu\"\
      ] = {\n\tdisplay = \"Northern [[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n}\n\nlabels[\"Northwest Germanic\"] = {\n\tdisplay = \"[[w:Northwest Germanic languages|Northwest Germanic]]\",\n\tplain_categories = {\"Northwest Proto-Germanic\"},\n}\n\n\
      labels[\"Nynorsk\"] = {\n\tdisplay = \"Nynorsk\",\n\tplain_categories = {\"Norwegian Nynorsk\"},\n}\n\nlabels[\"Oxford British spelling\"] = {\n\tdisplay = \"[[w:Oxford spelling|Oxford]] [[British English]]\",\n\tplain_categories = {\"Oxford spellings\"\
      },\n}\naliases[\"Oxford\"] = \"Oxford British spelling\"\n\nlabels[\"Oxyrhynchite\"] = {\n\tdisplay = \"[[w:Coptic language#Oxyrhynchite|Oxyrhynchite]]\",\n\tplain_categories = {\"Oxyrhynchite Coptic\"},\n}\naliases[\"Mesokemic\"] = \"Oxyrhynchite\"\n\n\
      labels[\"Pennsylvania Dutch English\"] = {\n\tdisplay = \"[[w:Pennsylvania Dutch English|Pennsylvania Dutch English]]\",\n\tplain_categories = {\"Pennsylvania Dutch English\"},\n}\n\nlabels[\"Pomeranian Low German\"] = {\n\tdisplay = \"[[w:Pomeranian Low\
      \ German|Pomeranian]]\",\n\tplain_categories = {\"Pomeranian Low German\"},\n}\naliases[\"Pomeranian LG\"] = \"Pomeranian Low German\"\n\nlabels[\"Potteries\"] = {\n\tdisplay = \"[[w:Potteries dialect|Potteries]]\",\n\tplain_categories = {\"Potteries English\"\
      },\n}\naliases[\"Potteries dialect\"] = \"Potteries\"\n\nlabels[\"Punjab\"] = {\n\tdisplay = \"[[w:Punjab|Punjab]]\",\n\tregional_categories = {\"Punjabi\"},\n}\n\nlabels[\"Puter\"] = {\n\tdisplay = \"[[w:Putèr|Puter]]\",\n\tplain_categories = {\"Puter\
      \ Romansch\"},\n}\n\nlabels[\"Puxian Min\"] = {\n\tdisplay = \"[[w:Pu-Xian Min|Puxian Min]]\",\n\tplain_categories = {\"Puxian Min Chinese\"},\n}\naliases[\"Puxian\"] = \"Puxian Min\"\naliases[\"Pu-Xian Min\"] = \"Puxian Min\"\naliases[\"Pu-Xian\"] = \"\
      Puxian Min\"\naliases[\"Xinghua\"] = \"Puxian Min\"\naliases[\"Hinghwa\"] = \"Puxian Min\"\n\nlabels[\"Quanzhou\"] = {\n\tdisplay = \"[[w:Quanzhou dialect|Quanzhou]]\",\n\tplain_categories = {\"Hokkien Chinese\"},\n}\naliases[\"Quanzhou dialect\"] = \"\
      Quanzhou\"\naliases[\"Chinchew\"] = \"Quanzhou\"\naliases[\"Chinchew dialect\"] = \"Quanzhou\"\naliases[\"Choanchew\"] = \"Quanzhou\"\naliases[\"Choanchew dialect\"] = \"Quanzhou\"\n\nlabels[\"Renaissance Latin\"] = {\n\tdisplay = \"[[w:Renaissance Latin|Renaissance\
      \ Latin]]\",\n\tplain_categories = {\"Renaissance Latin\"},\n}\n\nlabels[\"Royal Thai\"] = {\n\tdisplay = \"royal\",\n\tplain_categories = {\"Thai royal vocabulary\"},\n}\n\nlabels[\"Rumantsch Grischun\"] = {\n\tdisplay = \"[[w:Rumantsch Grischun|Rumantsch\
      \ Grischun]]\",\n}\n\nlabels[\"Saarland\"] = {\n\tdisplay = \"Saarland\",\n\tregional_categories = {\"Saarland\"},\n}\naliases[\"Saarländisch\"] = \"Saarland\"\naliases[\"Saarlandic\"] = \"Saarland\"\naliases[\"Saarlandish\"] = \"Saarland\"\n\nlabels[\"\
      Sahidic\"] = {\n\tdisplay = \"[[w:Coptic language#Sahidic|Sahidic]]\",\n\tplain_categories = {\"Sahidic Coptic\"},\n}\naliases[\"Thebaic\"] = \"Sahidic\"\n\nlabels[\"Saigon\"] = {\n\tdisplay = \"[[w:Saigon|Saigon]]\",\n\tregional_categories = {\"Southern\"\
      },\n}\naliases[\"Saigonese\"] = \"Saigon\"\n\nlabels[\"Scottish English\"] = {\n\tdisplay = \"[[w:Scottish English|Scotland]]\",\n\tplain_categories = {\"Scottish English\"},\n}\n\nlabels[\"Shapsug\"] = {\n\tdisplay = \"[[w:Shapsug Adyghe dialect|Shapsug\
      \ dialect]]\",\n\tplain_categories = {\"Shapsug Adyghe\"},\n}\n\nlabels[\"Shopski\"] = {\n\tdisplay = \"[[w:Shopi#Dialects|Shopski]]\",\n\tplain_categories = {\"Shopski Bulgarian\"},\n}\n\nlabels[\"Sichuan\"] = {\n\tdisplay = \"[[w:Sichuanese dialects|Sichuan]]\"\
      ,\n\tplain_categories = {\"Sichuanese Chinese\"},\n}\naliases[\"Sichuanese\"] = \"Sichuan\"\n\nlabels[\"Silla\"] = {\n\tplain_categories = {\"Silla Old Korean\"},\n}\n\nlabels[\"Sistani\"] = {\n\tdisplay = \"[[w:Sistani dialect|Sistani]]\",\n\tplain_categories\
      \ = {\"Sistani Persian\"},\n}\n\nlabels[\"Shropshire\"] = {\n\tdisplay = \"[[w:Shropshire|Shropshire]]\",\n\tregional_categories = {\"Shropshire\"},\n}\naliases[\"Shropshire dialect\"] = \"Shropshire\"\naliases[\"Shrops\"] = \"Shropshire\"\naliases[\"\
      Salop\"] = \"Shropshire\"\naliases[\"Salopian\"] = \"Shropshire\"\n\nlabels[\"Skiri Pawnee\"] = {\n\tplain_categories = {\"Skiri Pawnee\"},\n}\n\nlabels[\"South African English\"] = {\n\tdisplay = \"[[w:South African English|South Africa]]\",\n\tplain_categories\
      \ = {\"South African English\"},\n}\n\nlabels[\"South Scots\"] = {\n\tdisplay = \"[[w:Southern Scots|South Scots]]\",\n\tplain_categories = {\"South Scots\"},\n}\n\nlabels[\"Southern Dutch\"] = {\n\tdisplay = \"[[w:Dutch dialects|Southern]]\",\n\tplain_categories\
      \ = {\"Southern Dutch\"},\n}\n\nlabels[\"Southern England English\"] = {\n\tdisplay = \"[[w:English in southern England|Southern England]]\",\n\tplain_categories = {\"Southern England English\"},\n}\naliases[\"Southern English\"] = \"Southern England English\"\
      \naliases[\"Southern English dialect\"] = \"Southern England English\"\n\nlabels[\"Southern Germany\"] = {\n\tdisplay = \"[[w:Southern Germany|southern Germany]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"southern Germany\"] = \"southern\
      \ Germany\"\naliases[\"Southern German\"] = \"southern Germany\"\naliases[\"southern German\"] = \"southern Germany\"\naliases[\"South Germany\"] = \"southern Germany\"\naliases[\"south Germany\"] = \"southern Germany\"\naliases[\"South German\"] = \"\
      southern Germany\"\naliases[\"south German\"] = \"southern Germany\"\n\nlabels[\"Southern US English\"] = {\n\tdisplay = \"[[w:Southern American English|Southern US]]\",\n\tplain_categories = {\"Southern US English\"},\n}\naliases[\"Southern American English\"\
      ] = \"Southern US English\"\n\nlabels[\"Southern Wu\"] = {\n\tdisplay = \"Southern [[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n}\n\nlabels[\"Southwestern Mandarin\"] = {\n\tdisplay = \"[[w:Southwestern Mandarin|Southwestern Mandarin]]\",\n\tplain_categories\
      \ = {\"Southwestern Mandarin\"},\n}\naliases[\"southwestern Mandarin\"] = \"Southwestern Mandarin\"\naliases[\"Upper Yangtze Mandarin\"] = \"Southwestern Mandarin\"\naliases[\"Southwest Mandarin\"] = \"Southwestern Mandarin\"\n\naliases[\"Spilamberto\"\
      ] = \"Spilambertese\"\nlabels[\"Spilambertese\"] = {\n\tdisplay = \"[[w:Spilamberto|Spilambertese]]\",\n\tregional_categories = {\"Spilambertese\"},\n}\n\nlabels[\"Surmiran\"] = {\n\tdisplay = \"[[w:Surmiran dialect|Surmiran]]\",\n\tplain_categories =\
      \ {\"Surmiran Romansch\"},\n}\n\nlabels[\"Sursilvan\"] = {\n\tdisplay = \"[[w:Sursilvan dialects (Romansh)|Sursilvan]]\",\n\tplain_categories = {\"Sursilvan Romansch\"},\n}\n\nlabels[\"Sussex\"] = {\n\tdisplay = \"[[w:Sussex dialect|Sussex]]\",\n\tplain_categories\
      \ = {\"Sussex English\"},\n}\n\nlabels[\"Sutsilvan\"] = {\n\tdisplay = \"[[w:Sutsilvan dialects (Romansh)|Sutsilvan]]\",\n\tplain_categories = {\"Sutsilvan Romansch\"},\n}\n\nlabels[\"Switzerland and Liechtenstein spelling\"] = {\n\tdisplay = \"[[Switzerland]]\
      \ and [[Liechtenstein]]\",\n\tplain_categories = {\"Switzerland and Liechtenstein German forms\"},\n}\naliases[\"SLDE\"] = \"Switzerland and Liechtenstein spelling\"\n\nlabels[\"Tosk\"] = {\n\tdisplay = \"[[w:Tosk Albanian|Tosk]]\",\n\tplain_categories\
      \ = {\"Tosk Albanian\"},\n}\n\nlabels[\"Trás-os-Montes\"] = {\n\tdisplay = \"[[Trás-os-Montes]]\",\n\tplain_categories = {\"Transmontane Portuguese\"},\n}\n\nlabels[\"Tyneside\"] = {\n\tplain_categories = {\"Geordie English\"},\n}\n\nlabels[\"Ulster Scots\"\
      ] = {\n\tdisplay = \"[[w:Ulster Scots dialects|Ulster Scots]]\",\n\tplain_categories = {\"Ulster Scots\"},\n}\naliases[\"Ullans\"] = \"Ulster Scots\"\n\nlabels[\"Uttar Pradesh\"] = {\n\tdisplay = \"[[w:Uttar Pradesh|Uttar Pradesh]]\",\n\tregional_categories\
      \ = {\"Uttar Pradeshi\"},\n}\n\nlabels[\"Vallader\"] = {\n\tdisplay = \"[[w:Vallader dialect (Romansh)|Vallader]]\",\n\tplain_categories = {\"Vallader Romansch\"},\n}\n\nlabels[\"Vivaro-Alpine\"] = {\n\tdisplay = \"[[w:Vivaro-Alpine dialect|Vivaro-Alpine]]\"\
      ,\n\tplain_categories = {\"Vivaro-Alpine Occitan\"},\n}\n\nlabels[\"Vulgar Latin\"] = {\n\tdisplay = \"[[w:Vulgar Latin|Vulgar Latin]]\",\n\tplain_categories = {\"Vulgar Latin\"},\n}\n\nlabels[\"West Country English\"] = {\n\tdisplay = \"[[w:West Country\
      \ English|West Country]]\",\n\tplain_categories = {\"West Country English\"},\n}\naliases[\"West Country dialect\"] = \"West Country English\"\n\nlabels[\"West Germanic\"] = {\n\tdisplay = \"[[w:West Germanic languages|West Germanic]]\",\n\tplain_categories\
      \ = {\"West Proto-Germanic\"},\n}\n\nlabels[\"West Midlands English\"] = {\n\tdisplay = \"[[w:West Midlands English|West Midlands]]\",\n\tplain_categories = {\"West Midlands English\"},\n}\naliases[\"West Midlands dialect\"] = \"West Midlands English\"\
      \n\nlabels[\"Western Armenian\"] = {\n\tdisplay = \"[[w:Western Armenian|Western Armenian]]\",\n\tplain_categories = {\"Western Armenian\"},\n}\n\nlabels[\"Western Catalan\"] = {\n\tdisplay = \"[[w:Catalan dialects|Western Catalan]]\",\n\tplain_categories\
      \ = {\"Western Catalan\"},\n}\n\nlabels[\"Western Malayo-Polynesian\"] = {\n\tdisplay = \"[[w:Western Malayo-Polynesian languages|Western Malayo-Polynesian]]\",\n\tplain_categories = {\"Western Proto-Malayo-Polynesian\"},\n}\n\nlabels[\"Western Pomeranian\
      \ Low German\"] = {\n\tdisplay = \"Western Pomeranian\",\n\tplain_categories = {\"Western Pomeranian Low German\"},\n}\naliases[\"West Pomeranian Low German\"] = \"Western Pomeranian Low German\"\naliases[\"Western Pomeranian LG\"] = \"Western Pomeranian\
      \ Low German\"\naliases[\"West Pomeranian LG\"] = \"Western Pomeranian Low German\"\n\nlabels[\"Western Samic\"] = {\n\tplain_categories = {\"Western Proto-Samic\"},\n}\n\nlabels[\"Wu\"] = {\n\tdisplay = \"[[w:Wu Chinese|Wu]]\",\n\tplain_categories = {\"\
      Wu Chinese\"},\n}\n\nlabels[\"Xiamen\"] = {\n\tdisplay = \"[[w:Amoy dialect|Xiamen]]\",\n\tplain_categories = {\"Hokkien Chinese\"},\n}\naliases[\"Xiamen dialect\"] = \"Xiamen\"\naliases[\"Amoy\"] = \"Xiamen\"\naliases[\"Amoy dialect\"] = \"Xiamen\"\n\n\
      labels[\"Xiang\"] = {\n\tdisplay = \"[[w:Xiang Chinese|Xiang]]\",\n\tplain_categories = {\"Xiang Chinese\"},\n}\n\nlabels[\"Ye'kwana\"] = {\n\tdisplay = \"Ye'kwana dialect\",\n\tplain_categories = {\"Ye'kwana Maquiritari\"},\n}\naliases[\"Ye'kwana dialect\"\
      ] = \"Ye'kwana\"\n\nlabels[\"Zhangzhou\"] = {\n\tdisplay = \"[[w:Zhangzhou dialect|Zhangzhou]]\",\n\tplain_categories = {\"Hokkien Chinese\"},\n}\naliases[\"Zhangzhou dialect\"] = \"Zhangzhou\"\naliases[\"Changchew\"] = \"Zhangzhou\"\naliases[\"Changchew\
      \ dialect\"] = \"Zhangzhou\"\n\n-- Adds labels[label][\"languages\"][language_code] = true for members of \"languages\" field.\nm_data_functions.handle_languages(labels)\n\nreturn {labels = labels, aliases = aliases, deprecated = deprecated}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:14.396Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Ffunctions&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44640 t=1555362614301320
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:14 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 600744058, 484959248, 705107044
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6052562\" pageid=\"6052562\" ns=\"828\" title=\"Module:labels/data/functions\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-02-26T03:03:38Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"need to declare field &quot;languages&quot; as table\" xml:space=\"preserve\">export = {}\n\nfunction export.handle_languages(labels)\n\tif type(labels) ~= \"table\" then\n\t\terror('The\
      \ function \"handle_languages\" requires a table as argument.')\n\tend\n\t\n\tfor label, data in pairs(labels) do\n\t\tif data[\"languages\"] then\n\t\t\tfor key, language in ipairs(data[\"languages\"] or {}) do\n\t\t\t\tlabels[label][\"languages\"][language]\
      \ = true\n\t\t\tend\n\t\telseif data[\"language\"] and data[\"language\"] ~= \"\" then\n\t\t\tlabels[label][\"languages\"] = {}\n\t\t\tlabels[label][\"languages\"][data[\"language\"]] = true\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:14.701Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Ftopical&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50613 t=1555362614471019
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:14 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1312.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 599350939, 512821258, 690151403
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5967302\" pageid=\"5967302\" ns=\"828\" title=\"Module:labels/data/topical\"><revisions><rev user=\"King of Hearts\" timestamp=\"2019-04-09T07:56:12Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"better link for bridge\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\nlocal deprecated = {}\n\n-- This file is split into two sections: topical labels and labels for set-type\
      \ categories.\n-- Each section is sorted alphabetically.\n\n\n-- Topical labels\n\nlabels[\"accounting\"] = {\n\tdisplay = \"[[accounting#Noun|accounting]]\",\n\ttopical_categories = {\"Accounting\"},\n}\n\nlabels[\"acoustics\"] = {\n\tdisplay = \"[[acoustics]]\"\
      ,\n\ttopical_categories = {\"Acoustics\"},\n}\n\nlabels[\"acting\"] = {\n\tdisplay = \"[[acting#Noun|acting]]\",\n\ttopical_categories = {\"Acting\"},\n}\n\nlabels[\"advertising\"] = {\n\tdisplay = \"[[advertising#Noun|advertising]]\",\n\ttopical_categories\
      \ = {\"Advertising\"},\n}\n\nlabels[\"aeronautics\"] = {\n\tdisplay = \"[[aeronautics]]\",\n\ttopical_categories = {\"Aeronautics\"},\n}\n\nlabels[\"aerospace\"] = {\n\tdisplay = \"[[aeronautics]], [[space science|space]]\",\n\ttopical_categories = {\"\
      Aerospace\"},\n}\n\nlabels[\"agriculture\"] = {\n\tdisplay = \"[[agriculture]]\",\n\ttopical_categories = {\"Agriculture\"},\n}\n\nlabels[\"aircraft\"] = {\n\tdisplay = \"[[aircraft]]\",\n\ttopical_categories = {\"Aircraft\"},\n}\n\nlabels[\"alchemy\"\
      ] = {\n\tdisplay = \"[[alchemy]]\",\n\ttopical_categories = {\"Alchemy\"},\n}\n\nlabels[\"alcoholism\"] = {\n\tdisplay = \"[[alcoholism]]\",\n\ttopical_categories = {\"Alcoholism\"},\n}\naliases[\"alcohol\"] = \"alcoholism\"\n\nlabels[\"algebra\"] = {\n\
      \tdisplay = \"[[algebra]]\",\n\ttopical_categories = {\"Algebra\"},\n}\n\nlabels[\"algebraic geometry\"] = {\n\tdisplay = \"[[algebraic geometry]]\",\n\ttopical_categories = {\"Algebraic geometry\"},\n}\n\nlabels[\"alternative medicine\"] = {\n\tdisplay\
      \ = \"[[alternative medicine]]\",\n\ttopical_categories = {\"Alternative medicine\"},\n}\n\nlabels[\"amateur radio\"] = {\n\tdisplay = \"[[amateur radio]]\",\n\ttopical_categories = {\"Amateur radio\"},\n}\naliases[\"ham radio\"] = \"amateur radio\"\n\n\
      labels[\"American football\"] = {\n\tdisplay = \"[[American football]]\",\n\ttopical_categories = {\"Football (American)\"},\n}\n\nlabels[\"analytic geometry\"] = {\n\tdisplay = \"[[analytic geometry]]\",\n\ttopical_categories = {\"Geometry\"},\n}\n\n\
      labels[\"analytical chemistry\"] = {\n\tdisplay = \"[[analytical]] [[chemistry]]\",\n\ttopical_categories = {\"Analytical chemistry\"},\n}\n\nlabels[\"anarchism\"] = {\n\tdisplay = \"[[anarchism]]\",\n\ttopical_categories = {\"Anarchism\"},\n}\n\nlabels[\"\
      anatomy\"] = {\n\tdisplay = \"[[anatomy]]\",\n\ttopical_categories = {\"Anatomy\"},\n}\n\nlabels[\"Ancient Greece\"] = {\n\tdisplay = \"[[Ancient Greece]]\",\n\ttopical_categories = {\"Ancient Greece\"},\n}\n\nlabels[\"Ancient Rome\"] = {\n\tdisplay =\
      \ \"[[Ancient Rome]]\",\n\ttopical_categories = {\"Ancient Rome\"},\n}\n\nlabels[\"Anglicanism\"] = {\n\tdisplay = \"[[Anglicanism]]\",\n\ttopical_categories = {\"Anglicanism\"},\n}\n\nlabels[\"animation\"] = {\n\tdisplay = \"[[animation]]\",\n\ttopical_categories\
      \ = {\"Animation\"},\n}\n\nlabels[\"anime\"] = {\n\tdisplay = \"[[anime]]\",\n\ttopical_categories = {\"Japanese fiction\"},\n}\n\nlabels[\"anthropology\"] = {\n\tdisplay = \"[[anthropology]]\",\n\ttopical_categories = {\"Anthropology\"},\n}\n\nlabels[\"\
      arachnology\"] = {\n\tdisplay = \"[[arachnology]]\",\n\ttopical_categories = {\"Arachnology\"},\n}\n\nlabels[\"archaeology\"] = {\n\tdisplay = \"[[archaeology]]\",\n\ttopical_categories = {\"Archaeology\"},\n}\n\nlabels[\"archery\"] = {\n\tdisplay = \"\
      [[archery]]\",\n\ttopical_categories = {\"Archery\"},\n}\n\nlabels[\"architecture\"] = {\n\tdisplay = \"[[architecture]]\",\n\ttopical_categories = {\"Architecture\"},\n}\n\nlabels[\"arithmetic\"] = {\n\tdisplay = \"[[arithmetic]]\",\n\ttopical_categories\
      \ = {\"Arithmetic\"},\n}\n\nlabels[\"Armenian mythology\"] = {\n\tdisplay = \"[[Armenian]] [[mythology]]\",\n\ttopical_categories = {\"Armenian mythology\"},\n}\n\nlabels[\"art\"] = {\n\tdisplay = \"[[art]]\",\n\ttopical_categories = {\"Art\"},\n}\naliases[\"\
      arts\"] = \"art\"\n\nlabels[\"artificial intelligence\"] = {\n\tdisplay = \"[[artificial intelligence]]\",\n\ttopical_categories = {\"Artificial intelligence\"},\n}\n\nlabels[\"Arthurian legend\"] = {\n\tdisplay = \"[[w:Arthurian legend|Arthurian legend]]\"\
      ,\n\ttopical_categories = {\"Arthurian mythology\"},\n}\naliases[\"Arthurian mythology\"] = \"Arthurian legend\"\n\nlabels[\"astrology\"] = {\n\tdisplay = \"[[astrology]]\",\n\ttopical_categories = {\"Astrology\"},\n}\naliases[\"horoscope\"] = \"astrology\"\
      \naliases[\"zodiac\"] = \"astrology\"\n\nlabels[\"astronautics\"] = {\n\tdisplay = \"[[astronautics]]\",\n\ttopical_categories = {\"Astronautics\"},\n}\n\nlabels[\"astronomy\"] = {\n\tdisplay = \"[[astronomy]]\",\n\ttopical_categories = {\"Astronomy\"\
      },\n}\n\nlabels[\"astrophysics\"] = {\n\tdisplay = \"[[astrophysics]]\",\n\ttopical_categories = {\"Astrophysics\"},\n}\n\nlabels[\"Asturian mythology\"] = {\n\tdisplay = \"[[Asturian]] [[mythology]]\",\n\ttopical_categories = {\"Asturian mythology\"},\n\
      }\n\nlabels[\"athletics\"] = {\n\tdisplay = \"[[athletics]]\",\n\ttopical_categories = {\"Athletics\"},\n}\n\nlabels[\"Australian Aboriginal mythology\"] = {\n\tdisplay = \"[[w:Australian Aboriginal religion and mythology|Australian Aboriginal mythology]]\"\
      ,\n\ttopical_categories = {\"Australian Aboriginal mythology\"},\n}\n\nlabels[\"Australian rules football\"] = {\n\tdisplay = \"[[Australian rules football]]\",\n\ttopical_categories = {\"Australian rules football\"},\n}\n\nlabels[\"automotive\"] = {\n\
      \tdisplay = \"[[automotive]]\",\n\ttopical_categories = {\"Automotive\"},\n}\naliases[\"automotives\"] = \"automotive\"\n\nlabels[\"aviation\"] = {\n\tdisplay = \"[[aviation]]\",\n\ttopical_categories = {\"Aviation\"},\n}\n\nlabels[\"backgammon\"] = {\n\
      \tdisplay = \"[[backgammon]]\",\n\ttopical_categories = {\"Backgammon\"},\n}\n\nlabels[\"bacteriology\"] = {\n\tdisplay = \"[[bacteriology]]\",\n\ttopical_categories = {\"Bacteriology\"},\n}\naliases[\"bacteria\"] = \"bacteriology\"\n\nlabels[\"badminton\"\
      ] = {\n\tdisplay = \"[[badminton]]\",\n\ttopical_categories = {\"Badminton\"},\n}\n\nlabels[\"baking\"] = {\n\tdisplay = \"[[baking#Noun|baking]]\",\n\ttopical_categories = {\"Baking\"},\n}\n\nlabels[\"ball games\"] = {\n\tdisplay = \"[[ball game]]s\"\
      ,\n\ttopical_categories = {\"Ball games\"},\n}\n\nlabels[\"ballet\"] = {\n\tdisplay = \"[[ballet]]\",\n\ttopical_categories = {\"Ballet\"},\n}\n\nlabels[\"banking\"] = {\n\tdisplay = \"[[banking#Noun|banking]]\",\n\ttopical_categories = {\"Banking\"},\n\
      }\n\nlabels[\"baseball\"] = {\n\tdisplay = \"[[baseball]]\",\n\ttopical_categories = {\"Baseball\"},\n}\n\nlabels[\"basketball\"] = {\n\tdisplay = \"[[basketball]]\",\n\ttopical_categories = {\"Basketball\"},\n}\n\nlabels[\"BDSM\"] = {\n\tdisplay = \"\
      [[BDSM]]\",\n\ttopical_categories = {\"BDSM\"},\n}\n\nlabels[\"beekeeping\"] = {\n\tdisplay = \"[[beekeeping]]\",\n\ttopical_categories = {\"Beekeeping\"},\n}\n\nlabels[\"beer\"] = {\n\tdisplay = \"[[beer]]\",\n\ttopical_categories = {\"Beer\"},\n}\n\n\
      labels[\"betting\"] = {\n\tdisplay = \"[[gambling#Noun|gambling]]\",\n\ttopical_categories = {\"Betting\"},\n}\n\nlabels[\"biblical\"] = {\n\tdisplay = \"[[Bible|biblical]]\",\n\ttopical_categories = {\"Bible\"},\n}\naliases[\"Bible\"] = \"biblical\"\n\
      aliases[\"Biblical\"] = \"biblical\"\n\nlabels[\"billiards\"] = {\n\tdisplay = \"[[billiards]]\",\n\ttopical_categories = {\"Billiards\"},\n}\n\nlabels[\"bingo\"] = {\n\tdisplay = \"[[bingo]]\",\n\ttopical_categories = {\"Bingo\"},\n}\n\nlabels[\"biochemistry\"\
      ] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Biochemistry\"},\n}\n\nlabels[\"biology\"] = {\n\tdisplay = \"[[biology]]\",\n\ttopical_categories = {\"Biology\"},\n}\n\nlabels[\"biotechnology\"] = {\n\tdisplay = \"[[biotechnology]]\"\
      ,\n\ttopical_categories = {\"Biotechnology\"},\n}\n\nlabels[\"birdwatching\"] = {\n\tdisplay = \"[[birdwatching#Noun|birdwatching]]\",\n\ttopical_categories = {\"Birdwatching\"},\n}\n\nlabels[\"blogging\"] = {\n\tdisplay = \"[[blogging#Noun|blogging]]\"\
      ,\n\ttopical_categories = {\"Internet\"},\n}\n\nlabels[\"board games\"] = {\n\tdisplay = \"[[board game]]s\",\n\ttopical_categories = {\"Board games\"},\n}\naliases[\"board game\"] = \"board games\"\n\nlabels[\"board sports\"] = {\n\tdisplay = \"[[boardsport|board\
      \ sports]]\",\n\ttopical_categories = {\"Board sports\"},\n}\n\nlabels[\"bodybuilding\"] = {\n\tdisplay = \"[[bodybuilding#Noun|bodybuilding]]\",\n\ttopical_categories = {\"Bodybuilding\"},\n}\n\nlabels[\"botany\"] = {\n\tdisplay = \"[[botany]]\",\n\t\
      topical_categories = {\"Botany\"},\n}\n\nlabels[\"bowling\"] = {\n\tdisplay = \"[[bowling#Noun|bowling]]\",\n\ttopical_categories = {\"Bowling\"},\n}\n\nlabels[\"boxing\"] = {\n\tdisplay = \"[[boxing#Noun|boxing]]\",\n\ttopical_categories = {\"Boxing\"\
      },\n}\n\nlabels[\"brewing\"] = {\n\tdisplay = \"[[brewing#Noun|brewing]]\",\n\ttopical_categories = {\"Brewing\"},\n}\n\nlabels[\"bridge\"] = {\n\tdisplay = \"[[bridge#English-game|bridge]]\",\n\ttopical_categories = {\"Bridge\"},\n}\n\nlabels[\"broadcasting\"\
      ] = {\n\tdisplay = \"[[broadcasting#Noun|broadcasting]]\",\n\ttopical_categories = {\"Broadcasting\"},\n}\n\nlabels[\"bryology\"] = {\n\tdisplay = \"[[bryology]]\",\n\ttopical_categories = {\"Bryology\"},\n}\n\nlabels[\"Buddhism\"] = {\n\tdisplay = \"\
      [[Buddhism]]\",\n\ttopical_categories = {\"Buddhism\"},\n}\n\nlabels[\"bullfighting\"] = {\n\tdisplay = \"[[bullfighting]]\",\n\ttopical_categories = {\"Bullfighting\"},\n}\n\nlabels[\"business\"] = {\n\tdisplay = \"[[business]]\",\n\ttopical_categories\
      \ = {\"Business\"},\n}\n\nlabels[\"Byzantine Empire\"] = {\n\tdisplay = \"[[Byzantine Empire]]\",\n\ttopical_categories = {\"Byzantine Empire\"},\n}\n\nlabels[\"calculus\"] = {\n\tdisplay = \"[[calculus]]\",\n\ttopical_categories = {\"Calculus\"},\n}\n\
      \nlabels[\"calligraphy\"] = {\n\tdisplay = \"[[calligraphy]]\",\n\ttopical_categories = {\"Calligraphy\"},\n}\n\nlabels[\"Canadian football\"] = {\n\tdisplay = \"[[Canadian football]]\",\n\ttopical_categories = {\"Canadian football\"},\n}\n\nlabels[\"\
      canoeing\"] = {\n\tdisplay = \"[[canoeing#Noun|canoeing]]\",\n\ttopical_categories = {\"Water sports\"},\n}\n\nlabels[\"card games\"] = {\n\tdisplay = \"[[card game]]s\",\n\ttopical_categories = {\"Card games\"},\n}\naliases[\"cards\"] = \"card games\"\
      \naliases[\"playing card\"] = \"card games\"\n\nlabels[\"cardiology\"] = {\n\tdisplay = \"[[cardiology]]\",\n\ttopical_categories = {\"Cardiology\"},\n}\n\nlabels[\"carpentry\"] = {\n\tdisplay = \"[[carpentry]]\",\n\ttopical_categories = {\"Carpentry\"\
      },\n}\n\nlabels[\"cartography\"] = {\n\tdisplay = \"[[cartography]]\",\n\ttopical_categories = {\"Cartography\"},\n}\n\nlabels[\"cartomancy\"] = {\n\tdisplay = \"[[cartomancy]]\",\n\ttopical_categories = {\"Cartomancy\"},\n}\n\nlabels[\"category theory\"\
      ] = {\n\tdisplay = \"[[category theory]]\",\n\ttopical_categories = {\"Category theory\"},\n}\n\nlabels[\"Catholicism\"] = {\n\tdisplay = \"[[Catholicism]]\",\n\ttopical_categories = {\"Catholicism\"},\n}\naliases[\"Catholic\"] = \"Catholicism\"\n\nlabels[\"\
      caving\"] = {\n\tdisplay = \"[[caving#Noun|caving]]\",\n\ttopical_categories = {\"Caving\"},\n}\n\nlabels[\"Celtic mythology\"] = {\n\tdisplay = \"[[Celtic]] [[mythology]]\",\n\ttopical_categories = {\"Celtic mythology\"},\n}\n\nlabels[\"ceramics\"] =\
      \ {\n\tdisplay = \"[[ceramics]]\",\n\ttopical_categories = {\"Ceramics\"},\n}\n\nlabels[\"cheerleading\"] = {\n\tdisplay = \"[[cheerleading#Noun|cheerleading]]\",\n\ttopical_categories = {\"Cheerleading\"},\n}\n\nlabels[\"chemical element\"] = {\n\tdisplay\
      \ = \"[[chemistry]]\",\n\ttopical_categories = {\"Chemical elements\"},\n}\n\nlabels[\"chemical engineering\"] = {\n\tdisplay = \"[[chemical engineering]]\",\n\ttopical_categories = {\"Chemical engineering\"},\n}\n\nlabels[\"chemistry\"] = {\n\tdisplay\
      \ = \"[[chemistry]]\",\n\ttopical_categories = {\"Chemistry\"},\n}\n\nlabels[\"chess\"] = {\n\tdisplay = \"[[chess]]\",\n\ttopical_categories = {\"Chess\"},\n}\n\nlabels[\"Chinese astronomy\"] = {\n\tdisplay = \"[[Chinese]] [[astronomy]]\",\n\ttopical_categories\
      \ = {\"Chinese astronomy\"},\n}\n\nlabels[\"Chinese calligraphy\"] = {\n\tdisplay = \"[[Chinese]] [[calligraphy]]\",\n\ttopical_categories = {\"Calligraphy\"},\n}\n\nlabels[\"Chinese constellation\"] = {\n\tdisplay = \"[[Chinese]] [[astronomy]]\",\n\t\
      topical_categories = {\"Constellations\"},\n}\n\nlabels[\"Chinese folk religion\"] = {\n\tdisplay = \"[[Chinese]] [[folk religion]]\",\n\ttopical_categories = {\"Religion\"},\n}\n\nlabels[\"Chinese linguistics\"] = {\n\tdisplay = \"[[Chinese]] [[linguistics]]\"\
      ,\n\ttopical_categories = {\"Linguistics\"},\n}\n\nlabels[\"Chinese mythology\"] = {\n\tdisplay = \"[[Chinese]] [[mythology]]\",\n\ttopical_categories = {\"Chinese mythology\"},\n}\n\nlabels[\"Chinese philosophy\"] = {\n\tdisplay = \"[[Chinese]] [[philosophy]]\"\
      ,\n\ttopical_categories = {\"Chinese philosophy\"},\n}\n\nlabels[\"Chinese phonetics\"] = {\n\tdisplay = \"[[Chinese]] [[phonetics]]\",\n\ttopical_categories = {\"Phonetics\"},\n}\n\nlabels[\"Chinese religion\"] = {\n\tdisplay = \"[[Chinese]] [[religion]]\"\
      ,\n\ttopical_categories = {\"Religion\"},\n}\n\nlabels[\"Chinese star\"] = {\n\tdisplay = \"[[Chinese]] [[astronomy]]\",\n\ttopical_categories = {\"Stars\"},\n}\n\nlabels[\"Christianity\"] = {\n\tdisplay = \"[[Christianity]]\",\n\ttopical_categories =\
      \ {\"Christianity\"},\n}\naliases[\"christianity\"] = \"Christianity\"\ndeprecated[\"christianity\"] = true\n\nlabels[\"cinematography\"] = {\n\tdisplay = \"[[cinematography]]\",\n\ttopical_categories = {\"Cinematography\"},\n}\naliases[\"filmology\"]\
      \ = \"cinematography\"\n\nlabels[\"cladistics\"] = {\n\tdisplay = \"[[cladistics]]\",\n\ttopical_categories = {\"Systematics\"},\n}\n\nlabels[\"classical mechanics\"] = {\n\tdisplay = \"[[classical mechanics]]\",\n\ttopical_categories = {\"Classical mechanics\"\
      },\n}\n\nlabels[\"classical studies\"] = {\n\tdisplay = \"[[classical studies]]\",\n\ttopical_categories = {\"Classical studies\"},\n}\n\nlabels[\"climatology\"] = {\n\tdisplay = \"[[climatology]]\",\n\ttopical_categories = {\"Climatology\"},\n}\n\nlabels[\"\
      climbing\"] = {\n\tdisplay = \"[[climbing#Noun|climbing]]\",\n\ttopical_categories = {\"Climbing\"},\n}\n\nlabels[\"clinical psychology\"] = {\n\tdisplay = \"[[clinical]] [[psychology]]\",\n\ttopical_categories = {\"Clinical psychology\"},\n}\n\nlabels[\"\
      clothing\"] = {\n\tdisplay = \"[[clothing#Noun|clothing]]\",\n\ttopical_categories = {\"Clothing\"},\n}\n\nlabels[\"color\"] = {\n\tdisplay = \"[[color]]\",\n\ttopical_categories = {\"Colors\"},\n}\n\nlabels[\"colour\"] = {\n   \tdisplay = \"[[colour]]\"\
      ,\n   topical_categories = {\"Colors\"},\n}\n\nlabels[\"combinatorics\"] = {\n\tdisplay = \"[[combinatorics]]\",\n\ttopical_categories = {\"Combinatorics\"},\n}\n\nlabels[\"comedy\"] = {\n\tdisplay = \"[[comedy]]\",\n\ttopical_categories = {\"Comedy\"\
      },\n}\n\nlabels[\"commercial law\"] = {\n\tdisplay = \"[[commercial#Adjective|commercial]] [[law]]\",\n\ttopical_categories = {\"Commercial law\"},\n}\nlabels[\"comics\"] = {\n\tdisplay = \"[[comics]]\",\n\ttopical_categories = {\"Comics\"},\n}\n\nlabels[\"\
      communication\"] = {\n\tdisplay = \"[[communication]]\",\n\ttopical_categories = {\"Communication\"},\n}\naliases[\"communications\"] = \"communication\"\n\nlabels[\"communism\"] = {\n\tdisplay = \"[[communism]]\",\n\ttopical_categories = {\"Communism\"\
      },\n}\naliases[\"Communism\"] = \"communism\"\n\nlabels[\"compilation\"] = {\n\tdisplay = \"[[software]] [[compilation]]\",\n\ttopical_categories = {\"Compilation\"},\n}\n\nlabels[\"complex analysis\"] = {\n\tdisplay = \"[[complex analysis]]\",\n\ttopical_categories\
      \ = {\"Complex analysis\"},\n}\n\nlabels[\"computational linguistics\"] = {\n\tdisplay = \"[[computational linguistics]]\",\n\ttopical_categories = {\"Computational linguistics\"},\n}\n\t\nlabels[\"computer games\"] = {\n\tdisplay = \"[[computer game]]s\"\
      ,\n\ttopical_categories = {\"Video games\"},\n}\n\nlabels[\"computer graphics\"] = {\n\tdisplay = \"[[computer graphics]]\",\n\ttopical_categories = {\"Computer graphics\"},\n}\n\nlabels[\"computer hardware\"] = {\n\tdisplay = \"[[computer]] [[hardware]]\"\
      ,\n\ttopical_categories = {\"Computer hardware\"},\n}\n\nlabels[\"computer languages\"] = {\n\tdisplay = \"[[computer language]]s\",\n\ttopical_categories = {\"Computer languages\"},\n}\naliases[\"computer language\"] = \"computer languages\"\n\nlabels[\"\
      computer science\"] = {\n\tdisplay = \"[[computer science]]\",\n\ttopical_categories = {\"Computer science\"},\n}\naliases[\"comp sci\"] = \"computer science\"\n\nlabels[\"computer security\"] = {\n\tdisplay = \"[[computer security]]\",\n\ttopical_categories\
      \ = {\"Computer security\"},\n}\n\nlabels[\"computing\"] = {\n\tdisplay = \"[[computing#Noun|computing]]\",\n\ttopical_categories = {\"Computing\"},\n}\naliases[\"computer\"] = \"computing\"\naliases[\"computers\"] = \"computing\"\n\nlabels[\"computing\
      \ theory\"] = {\n\tdisplay = \"[[computing#Noun|computing]] [[theory]]\",\n\ttopical_categories = {\"Theory of computing\"},\n}\naliases[\"comptheory\"] = \"computing theory\"\n\nlabels[\"conchology\"] = {\n\tdisplay = \"[[conchology]]\",\n\ttopical_categories\
      \ = {\"Conchology\"},\n}\n\nlabels[\"Confucianism\"] = {\n\tdisplay = \"[[Confucianism]]\",\n\ttopical_categories = {\"Confucianism\"},\n}\n\nlabels[\"construction\"] = {\n\tdisplay = \"[[construction]]\",\n\ttopical_categories = {\"Construction\"},\n\
      }\n\nlabels[\"cooking\"] = {\n\tdisplay = \"[[cooking#Noun|cooking]]\",\n\ttopical_categories = {\"Cooking\"},\n}\naliases[\"culinary\"] = \"cooking\"\naliases[\"cuisine\"] = \"cooking\"\naliases[\"cookery\"] = \"cooking\"\naliases[\"gastronomy\"] = \"\
      cooking\"\n\nlabels[\"copyright\"] = {\n\tdisplay = \"[[copyright]] [[law]]\",\n\ttopical_categories = {\"Copyright\"},\n}\n\nlabels[\"cosmetics\"] = {\n\tdisplay = \"[[cosmetics]]\",\n\ttopical_categories = {\"Cosmetics\"},\n}\naliases[\"cosmetology\"\
      ] = \"cosmetics\"\n\nlabels[\"cribbage\"] = {\n\tdisplay = \"[[cribbage]]\",\n\ttopical_categories = {\"Cribbage\"},\n}\n\nlabels[\"cricket\"] = {\n\tdisplay = \"[[cricket]]\",\n\ttopical_categories = {\"Cricket\"},\n}\n\nlabels[\"crime\"] = {\n\tdisplay\
      \ = \"[[crime]]\",\n\ttopical_categories = {\"Crime\"},\n}\n\nlabels[\"criminal law\"] = {\n\tdisplay = \"[[criminal law]]\",\n\ttopical_categories = {\"Criminal law\"},\n}\n\nlabels[\"criminology\"] = {\n\tdisplay = \"[[criminology]]\",\n\ttopical_categories\
      \ = {\"Criminology\"},\n}\n\nlabels[\"cryptography\"] = {\n\tdisplay = \"[[cryptography]]\",\n\ttopical_categories = {\"Cryptography\"},\n}\n\nlabels[\"cryptozoology\"] = {\n\tdisplay = \"[[cryptozoology]]\",\n\ttopical_categories = {\"Cryptozoology\"\
      },\n}\n\nlabels[\"crystallography\"] = {\n\tdisplay = \"[[crystallography]]\",\n\ttopical_categories = {\"Crystallography\"},\n}\n\nlabels[\"cultural anthropology\"] = {\n\tdisplay = \"[[cultural anthropology]]\",\n\ttopical_categories = {\"Cultural anthropology\"\
      },\n}\n\nlabels[\"curling\"] = {\n\tdisplay = \"[[curling]]\",\n\ttopical_categories = {\"Curling\"},\n}\n\nlabels[\"cybernetics\"] = {\n\tdisplay = \"[[cybernetics]]\",\n\ttopical_categories = {\"Cybernetics\"},\n}\n\nlabels[\"cycle racing\"] = {\n\t\
      display = \"[[w:cycle sport|cycle racing]]\",\n\ttopical_categories = {\"Cycle racing\"},\n}\n\nlabels[\"cycling\"] = {\n\tdisplay = \"[[cycling#Noun|cycling]]\",\n\ttopical_categories = {\"Cycling\"},\n}\n\nlabels[\"cytology\"] = {\n\tdisplay = \"[[cytology]]\"\
      ,\n\ttopical_categories = {\"Cytology\"},\n}\n\nlabels[\"dance\"] = {\n\tdisplay = \"[[dance#Noun|dance]]\",\n\ttopical_categories = {\"Dance\"},\n}\n\nlabels[\"darts\"] = {\n\tdisplay = \"[[darts]]\",\n\ttopical_categories = {\"Darts\"},\n}\n\nlabels[\"\
      data management\"] = {\n\tdisplay = \"[[data management]]\",\n\ttopical_categories = {\"Data management\"},\n}\n\nlabels[\"data modeling\"] = {\n\tdisplay = \"[[data modeling]]\",\n\ttopical_categories = {\"Data modeling\"},\n}\n\nlabels[\"databases\"\
      ] = {\n\tdisplay = \"[[database]]s\",\n\ttopical_categories = {\"Databases\"},\n}\naliases[\"database\"] = \"databases\"\n\nlabels[\"deltiology\"] = {\n\tdisplay = \"[[deltiology]]\",\n\ttopical_categories = {\"Deltiology\"},\n}\n\nlabels[\"demography\"\
      ] = {\n\tdisplay = \"[[demography]]\",\n\ttopical_categories = {\"Demography\"},\n}\n\nlabels[\"demoscene\"] = {\n\ttopical_categories = {\"Demoscene\"},\n}\n\nlabels[\"dentistry\"] = {\n\tdisplay = \"[[dentistry]]\",\n\ttopical_categories = {\"Dentistry\"\
      },\n}\n\nlabels[\"dermatology\"] = {\n\tdisplay = \"[[dermatology]]\",\n\ttopical_categories = {\"Dermatology\"},\n}\n\nlabels[\"design\"] = {\n\tdisplay = \"[[design#Noun|design]]\",\n\ttopical_categories = {\"Design\"},\n}\n\nlabels[\"dice games\"] =\
      \ {\n\tdisplay = \"[[dice game]]s\",\n\ttopical_categories = {\"Dice games\"},\n}\naliases[\"dice\"] = \"dice games\"\n\nlabels[\"dictation\"] = {\n\tdisplay = \"[[dictation]]\",\n\ttopical_categories = {\"Dictation\"},\n}\n\nlabels[\"diplomacy\"] = {\n\
      \tdisplay = \"[[diplomacy]]\",\n\ttopical_categories = {\"Diplomacy\"},\n}\n\nlabels[\"disc golf\"] = {\n\tdisplay = \"[[disc golf]]\",\n\ttopical_categories = {\"Disc golf\"},\n}\n\nlabels[\"divination\"] = {\n\tdisplay = \"[[divination]]\",\n\ttopical_categories\
      \ = {\"Divination\"},\n}\n\nlabels[\"diving\"] = {\n\tdisplay = \"[[diving#Noun|diving]]\",\n\ttopical_categories = {\"Diving\"},\n}\n\nlabels[\"dominoes\"] = {\n\tdisplay = \"[[dominoes]]\",\n\ttopical_categories = {\"Dominoes\"},\n}\n\nlabels[\"drama\"\
      ] = {\n\tdisplay = \"[[drama]]\",\n\ttopical_categories = {\"Drama\"},\n}\n\nlabels[\"dressage\"] = {\n\tdisplay = \"[[dressage]]\",\n\ttopical_categories = {\"Dressage\"},\n}\n\nlabels[\"earth science\"] = {\n\tdisplay = \"[[earth science]]\",\n\ttopical_categories\
      \ = {\"Earth sciences\"},\n}\n\nlabels[\"Eastern Catholicism\"] = {\n\tdisplay = \"[[w:Eastern Catholic Churches|Eastern Catholicism]]\",\n\ttopical_categories = {\"Eastern Catholicism\"},\n}\naliases[\"Eastern Catholic\"] = \"Eastern Catholicism\"\n\n\
      labels[\"Eastern Orthodoxy\"] = {\n\tdisplay = \"[[Eastern Orthodoxy]]\",\n\ttopical_categories = {\"Eastern Orthodoxy\"},\n}\n\nlabels[\"ecclesiastical\"] = {\n\tdisplay = \"[[ecclesiastical]]\",\n\ttopical_categories = {\"Christianity\"},\n}\n\nlabels[\"\
      ecology\"] = {\n\tdisplay = \"[[ecology]]\",\n\ttopical_categories = {\"Ecology\"},\n}\n\nlabels[\"economics\"] = {\n\tdisplay = \"[[economics]]\",\n\ttopical_categories = {\"Economics\"},\n}\n\nlabels[\"education\"] = {\n\tdisplay = \"[[education]]\"\
      ,\n\ttopical_categories = {\"Education\"},\n}\n\nlabels[\"Egyptian mythology\"] = {\n\tdisplay = \"[[Egyptian]] [[mythology]]\",\n\ttopical_categories = {\"Egyptian mythology\"},\n}\n\nlabels[\"Egyptology\"] = {\n\tdisplay = \"[[Egyptology]]\",\n\ttopical_categories\
      \ = {\"Ancient Egypt\"},\n}\n\nlabels[\"electrencephalography\"] = {\n\tdisplay = \"[[electrencephalography]]\",\n\ttopical_categories = {\"Electrencephalography\"},\n}\n\nlabels[\"electrical engineering\"] = {\n\tdisplay = \"[[electrical engineering]]\"\
      ,\n\ttopical_categories = {\"Electrical engineering\"},\n}\n\nlabels[\"electricity\"] = {\n\tdisplay = \"[[electricity]]\",\n\ttopical_categories = {\"Electricity\"},\n}\n\nlabels[\"electrodynamics\"] = {\n\tdisplay = \"[[electrodynamics]]\",\n\ttopical_categories\
      \ = {\"Electrodynamics\"},\n}\n\nlabels[\"electromagnetism\"] = {\n\tdisplay = \"[[electromagnetism]]\",\n\ttopical_categories = {\"Electromagnetism\"},\n}\n\nlabels[\"electronics\"] = {\n\tdisplay = \"[[electronics]]\",\n\ttopical_categories = {\"Electronics\"\
      },\n}\n\nlabels[\"embryology\"] = {\n\tdisplay = \"[[embryology]]\",\n\ttopical_categories = {\"Embryology\"},\n}\n\nlabels[\"emergency medicine\"] = {\n\tdisplay = \"[[emergency medicine]]\",\n\ttopical_categories = {\"Emergency medicine\"},\n}\naliases[\"\
      emergency\"] = \"emergency medicine\"\n\nlabels[\"endocrinology\"] = {\n\tdisplay = \"[[endocrinology]]\",\n\ttopical_categories = {\"Endocrinology\"},\n}\n\nlabels[\"engineering\"] = {\n\tdisplay = \"[[engineering#Noun|engineering]]\",\n\ttopical_categories\
      \ = {\"Engineering\"},\n}\n\nlabels[\"enterprise engineering\"] = {\n\tdisplay = \"[[enterprise engineering]]\",\n\ttopical_categories = {\"Enterprise engineering\"},\n}\n\nlabels[\"entomology\"] = {\n\tdisplay = \"[[entomology]]\",\n\ttopical_categories\
      \ = {\"Entomology\"},\n}\n\nlabels[\"epidemiology\"] = {\n\tdisplay = \"[[epidemiology]]\",\n\ttopical_categories = {\"Epidemiology\"},\n}\n\nlabels[\"epistemology\"] = {\n\tdisplay = \"[[epistemology]]\",\n\ttopical_categories = {\"Epistemology\"},\n\
      }\n\nlabels[\"equestrianism\"] = {\n\tdisplay = \"[[equestrianism]]\",\n\ttopical_categories = {\"Equestrianism\"},\n}\n\nlabels[\"espionage\"] = {\n\tdisplay = \"[[espionage]]\",\n\ttopical_categories = {\"Espionage\"},\n}\n\nlabels[\"ethics\"] = {\n\t\
      display = \"[[ethics]]\",\n\ttopical_categories = {\"Ethics\"},\n}\n\nlabels[\"ethnography\"] = {\n\tdisplay = \"[[ethnography]]\",\n\ttopical_categories = {\"Ethnography\"},\n}\n\nlabels[\"European folklore\"] = {\n\tdisplay = \"[[European]] [[folklore]]\"\
      ,\n\ttopical_categories = {\"European folklore\"},\n}\n\nlabels[\"evolutionary theory\"] = {\n\tdisplay = \"[[evolutionary theory]]\",\n\ttopical_categories = {\"Evolutionary theory\"},\n}\n\nlabels[\"exercise\"] = {\n\tdisplay = \"[[exercise|exercise\
      \ (sport)]]\",\n\ttopical_categories = {\"Exercise\"},\n}\n\nlabels[\"falconry\"] = {\n\tdisplay = \"[[falconry]]\",\n\ttopical_categories = {\"Falconry\"},\n}\n\nlabels[\"fantasy\"] = {\n\tdisplay = \"[[fantasy]]\",\n\ttopical_categories = {\"Fantasy\"\
      },\n}\n\nlabels[\"fascism\"] = {\n\tdisplay = \"[[fascism]]\",\n\ttopical_categories = {\"Fascism\"},\n}\n\nlabels[\"fashion\"] = {\n\tdisplay = \"[[fashion]]\",\n\ttopical_categories = {\"Fashion\"},\n}\n\nlabels[\"feminism\"] = {\n\tdisplay = \"[[feminism]]\"\
      ,\n\ttopical_categories = {\"Feminism\"},\n}\n\nlabels[\"fencing\"] = {\n\tdisplay = \"[[fencing#Noun|fencing]]\",\n\ttopical_categories = {\"Fencing\"},\n}\n\nlabels[\"fiction\"] = {\n\tdisplay = \"[[fiction]]\",\n\ttopical_categories = {\"Fiction\"},\n\
      }\n\nlabels[\"field hockey\"] = {\n\tdisplay = \"[[field hockey]]\",\n\ttopical_categories = {\"Field hockey\"},\n}\n\nlabels[\"figure skating\"] = {\n\tdisplay = \"[[figure skating]]\",\n\ttopical_categories = {\"Figure skating\"},\n}\n\nlabels[\"film\"\
      ] = {\n\tdisplay = \"[[film#Noun|film]]\",\n\ttopical_categories = {\"Film\"},\n}\naliases[\"cinema\"] = \"film\"\n\nlabels[\"finance\"] = {\n\tdisplay = \"[[finance#Noun|finance]]\",\n\ttopical_categories = {\"Finance\"},\n}\n\nlabels[\"Finnish mythology\"\
      ] = {\n\tdisplay = \"[[Finnish]] [[mythology]]\",\n\ttopical_categories = {\"Finnish mythology\"},\n}\n\nlabels[\"firearms\"] = {\n\tdisplay = \"[[firearm]]s\",\n\ttopical_categories = {\"Firearms\"}\n}\naliases[\"firearm\"] = \"firearms\"\n\nlabels[\"\
      firefighting\"] = {\n\ttopical_categories = {\"Firefighting\"},\n}\n\nlabels[\"fishing\"] = {\n\tdisplay = \"[[fishing#Noun|fishing]]\",\n\ttopical_categories = {\"Fishing\"},\n}\naliases[\"angling\"] = \"fishing\"\n\nlabels[\"fluid dynamics\"] = {\n\t\
      display = \"[[fluid dynamics]]\",\n\ttopical_categories = {\"Fluid dynamics\"},\n}\n\nlabels[\"fluid mechanics\"] = {\n\tdisplay = \"[[fluid mechanics]]\",\n\ttopical_categories = {\"Mechanics\"},\n}\n\nlabels[\"folklore\"] = {\n\tdisplay = \"[[folklore]]\"\
      ,\n\ttopical_categories = {\"Folklore\"},\n}\n\nlabels[\"forestry\"] = {\n\ttopical_categories = {\"Forestry\"},\n}\n\nlabels[\"freemasonry\"] = {\n\ttopical_categories = {\"Freemasonry\"},\n}\n\nlabels[\"functional analysis\"] = {\n\ttopical_categories\
      \ = {\"Functional analysis\"},\n}\n\nlabels[\"furniture\"] = {\n\ttopical_categories = {\"Furniture\"},\n}\n\nlabels[\"fuzzy logic\"] = {\n\ttopical_categories = {\"Fuzzy logic\"},\n}\n\nlabels[\"Gaelic football\"] = {\n\tdisplay = \"[[Gaelic football]]\"\
      ,\n\ttopical_categories = {\"Gaelic football\"},\n}\n\nlabels[\"gambling\"] = {\n\tdisplay = \"[[gambling#Noun|gambling]]\",\n\ttopical_categories = {\"Gambling\"},\n}\n\nlabels[\"game of go\"] = {\n\tdisplay = \"[[Go|game of Go]]\",\n\ttopical_categories\
      \ = {\"Go\"},\n}\n\nlabels[\"game theory\"] = {\n\tdisplay = \"[[game theory]]\",\n\ttopical_categories = {\"Game theory\"},\n}\n\nlabels[\"games\"] = {\n\tdisplay = \"[[game]]s\",\n\ttopical_categories = {\"Games\"},\n}\naliases[\"game\"] = \"games\"\n\
      \nlabels[\"gaming\"] = {\n\tdisplay = \"[[gaming#Noun|gaming]]\",\n\ttopical_categories = {\"Gaming\"},\n}\n\nlabels[\"genealogy\"] = {\n\tdisplay = \"[[genealogy]]\",\n\ttopical_categories = {\"Genealogy\"},\n}\n\nlabels[\"genetics\"] = {\n\tdisplay =\
      \ \"[[genetics]]\",\n\ttopical_categories = {\"Genetics\"},\n}\n\nlabels[\"geography\"] = {\n\tdisplay = \"[[geography]]\",\n\ttopical_categories = {\"Geography\"},\n}\n\nlabels[\"geology\"] = {\n\tdisplay = \"[[geology]]\",\n\ttopical_categories = {\"\
      Geology\"},\n}\n\nlabels[\"geometry\"] = {\n\tdisplay = \"[[geometry]]\",\n\ttopical_categories = {\"Geometry\"},\n}\n\nlabels[\"geomorphology\"] = {\n\tdisplay = \"[[geomorphology]]\",\n\ttopical_categories = {\"Geomorphology\"},\n}\n\nlabels[\"gerontology\"\
      ] = {\n\tdisplay = \"[[gerontology]]\",\n\ttopical_categories = {\"Gerontology\"},\n}\n\nlabels[\"glassblowing\"] = {\n\tdisplay = \"[[glassblowing]]\",\n\ttopical_categories = {\"Glassblowing\"},\n}\n\nlabels[\"Gnosticism\"] = {\n\tdisplay = \"[[Gnosticism]]\"\
      ,\n\ttopical_categories = {\"Gnosticism\"},\n}\naliases[\"gnosticism\"] = \"Gnosticism\"\n\nlabels[\"go\"] = {\n\tdisplay = \"[[go]]\",\n\ttopical_categories = {\"Go\"},\n}\naliases[\"Go\"] = \"go\"\n\nlabels[\"golf\"] = {\n\tdisplay = \"[[golf]]\",\n\t\
      topical_categories = {\"Golf\"},\n}\n\nlabels[\"government\"] = {\n\tdisplay = \"[[government]]\",\n\ttopical_categories = {\"Government\"},\n}\n\nlabels[\"grammar\"] = {\n\tdisplay = \"[[grammar]]\",\n\ttopical_categories = {\"Grammar\"},\n}\n\nlabels[\"\
      grammatical mood\"] = {\n\tdisplay = \"[[grammar]]\",\n\ttopical_categories = {\"Grammatical moods\"},\n}\n\nlabels[\"graph theory\"] = {\n\tdisplay = \"[[graph theory]]\",\n\ttopical_categories = {\"Graph theory\"},\n}\n\nlabels[\"graphic design\"] =\
      \ {\n\tdisplay = \"[[graphic design]]\",\n\ttopical_categories = {\"Graphic design\"},\n}\n\nlabels[\"graphical user interface\"] = {\n\tdisplay = \"[[graphical user interface]]\",\n\ttopical_categories = {\"Graphical user interface\"},\n}\naliases[\"\
      GUI\"] = \"graphical user interface\"\n\nlabels[\"Greek mythology\"] = {\n\tdisplay = \"[[Greek]] [[mythology]]\",\n\ttopical_categories = {\"Greek mythology\"},\n}\naliases[\"greekmyth\"] = \"Greek mythology\"\ndeprecated[\"greekmyth\"] = true\n\nlabels[\"\
      group theory\"] = {\n\tdisplay = \"[[group theory]]\",\n\ttopical_categories = {\"Group theory\"},\n}\n\nlabels[\"gun mechanisms\"] = {\n\tdisplay = \"[[firearm]]s\",\n\ttopical_categories = {\"Gun mechanisms\"}\n}\naliases[\"firearm mechanism\"] = \"\
      Gun mechanisms\"\naliases[\"firearm mechanisms\"] = \"Gun mechanisms\"\naliases[\"gun mechanism\"] = \"Gun mechanisms\"\n\nlabels[\"gymnastics\"] = {\n\tdisplay = \"[[gymnastics]]\",\n\ttopical_categories = {\"Gymnastics\"},\n}\n\nlabels[\"gynaecology\"\
      ] = {\n\tdisplay = \"[[gynaecology]]\",\n\ttopical_categories = {\"Gynaecology\"},\n}\naliases[\"gynecology\"] = \"gynaecology\"\n\nlabels[\"handball\"] = {\n\tdisplay = \"[[handball]]\",\n\ttopical_categories = {\"Handball\"},\n}\n\nlabels[\"Hawaiian\
      \ mythology\"] = {\n\tdisplay = \"[[Hawaiian]] [[mythology]]\",\n\ttopical_categories = {\"Hawaiian mythology\"},\n}\n\nlabels[\"healthcare\"] = {\n\tdisplay = \"[[healthcare]]\",\n\ttopical_categories = {\"Healthcare\"},\n}\n\nlabels[\"hematology\"] =\
      \ {\n\tdisplay = \"[[hematology]]\",\n\ttopical_categories = {\"Hematology\"},\n}\naliases[\"haematology\"] = \"hematology\"\n\nlabels[\"heraldry\"] = {\n\tdisplay = \"[[heraldry]]\",\n\ttopical_categories = {\"Heraldry\"},\n}\n\nlabels[\"herbalism\"]\
      \ = {\n\tdisplay = \"[[herbalism]]\",\n\ttopical_categories = {\"Herbalism\"},\n}\n\nlabels[\"herpetology\"] = {\n\tdisplay = \"[[herpetology]]\",\n\ttopical_categories = {\"Herpetology\"},\n}\n\nlabels[\"Hinduism\"] = {\n\tdisplay = \"[[Hinduism]]\",\n\
      \ttopical_categories = {\"Hinduism\"},\n}\n\nlabels[\"historiography\"] = {\n\tdisplay = \"[[historiography]]\",\n\ttopical_categories = {\"Historiography\"},\n}\n\nlabels[\"history\"] = {\n\tdisplay = \"[[history]]\",\n\ttopical_categories = {\"History\"\
      },\n}\n\nlabels[\"hockey\"] = {\n\tdisplay = \"[[field hockey]] or [[ice hockey]]\",\n\ttopical_categories = {\"Field hockey\", \"Ice hockey\"},\n}\n\nlabels[\"homeopathy\"] = {\n\tdisplay = \"[[homeopathy]]\",\n\ttopical_categories = {\"Homeopathy\"},\n\
      }\n\nlabels[\"horse racing\"] = {\n\tdisplay = \"[[horse racing]]\",\n\ttopical_categories = {\"Horse racing\"},\n}\n\nlabels[\"horticulture\"] = {\n\tdisplay = \"[[horticulture]]\",\n\ttopical_categories = {\"Horticulture\"},\n}\naliases[\"gardening\"\
      ] = \"horticulture\"\n\nlabels[\"HTML\"] = {\n\tdisplay = \"[[Hypertext Markup Language|HTML]]\",\n\ttopical_categories = {\"HTML\"},\n}\n\nlabels[\"human resources\"] = {\n\tdisplay = \"[[human resources]]\",\n\ttopical_categories = {\"Human resources\"\
      },\n}\n\nlabels[\"humanities\"] = {\n\tdisplay = \"[[humanities]]\",\n\ttopical_categories = {\"Humanities\"},\n}\n\nlabels[\"hunting\"] = {\n\tdisplay = \"[[hunting#Noun|hunting]]\",\n\ttopical_categories = {\"Hunting\"},\n}\n\nlabels[\"hurling\"] = {\n\
      \tdisplay = \"[[hurling#Noun|hurling]]\",\n\ttopical_categories = {\"Hurling\"},\n}\n\nlabels[\"hydrology\"] = {\n\tdisplay = \"[[hydrology]]\",\n\ttopical_categories = {\"Hydrology\"},\n}\n\nlabels[\"ice hockey\"] = {\n\tdisplay = \"[[ice hockey]]\",\n\
      \ttopical_categories = {\"Ice hockey\"},\n}\n\nlabels[\"ichthyology\"] = {\n\tdisplay = \"[[ichthyology]]\",\n\ttopical_categories = {\"Ichthyology\"},\n}\n\nlabels[\"immunochemistry\"] = {\n\tdisplay = \"[[immunochemistry]]\",\n\ttopical_categories =\
      \ {\"Immunochemistry\"},\n}\n\nlabels[\"immunology\"] = {\n\tdisplay = \"[[immunology]]\",\n\ttopical_categories = {\"Immunology\"},\n}\n\nlabels[\"import/export\"] = {\n\tdisplay = \"[[import#Noun|import]]/[[export#Noun|export]]\",\n\ttopical_categories\
      \ = {\"Import/export\"},\n}\n\nlabels[\"Indo-European studies\"] = {\n\tdisplay = \"[[Indo-European studies]]\",\n\ttopical_categories = {\"Indo-European studies\"},\n}\naliases[\"indo-european studies\"] = \"Indo-European studies\"\n\nlabels[\"information\
      \ science\"] = {\n\tdisplay = \"[[information science]]\",\n\ttopical_categories = {\"Information science\"},\n}\n\nlabels[\"information theory\"] = {\n\tdisplay = \"[[information theory]]\",\n\ttopical_categories = {\"Information theory\"},\n}\n\nlabels[\"\
      inorganic chemistry\"] = {\n\tdisplay = \"[[inorganic chemistry]]\",\n\ttopical_categories = {\"Inorganic chemistry\"},\n}\n\nlabels[\"insurance\"] = {\n\tdisplay = \"[[insurance]]\",\n\ttopical_categories = {\"Insurance\"},\n}\n\nlabels[\"international\
      \ law\"] = {\n\tdisplay = \"[[international law]]\",\n\ttopical_categories = {\"International law\"},\n}\n\nlabels[\"Internet\"] = {\n\tdisplay = \"[[Internet]]\",\n\ttopical_categories = {\"Internet\"},\n}\naliases[\"internet\"] = \"Internet\"\naliases[\"\
      online\"] = \"Internet\"\n\nlabels[\"Iranian mythology\"] = {\n\tdisplay = \"[[Iranian]] [[mythology]]\",\n\ttopical_categories = {\"Iranian mythology\"},\n}\n\nlabels[\"Irish mythology\"] = {\n\tdisplay = \"[[Irish]] [[mythology]]\",\n\ttopical_categories\
      \ = {\"Irish mythology\"},\n}\n\nlabels[\"Islam\"] = {\n\tdisplay = \"[[Islam]]\",\n\ttopical_categories = {\"Islam\"},\n}\naliases[\"islam\"] = \"Islam\"\ndeprecated[\"islam\"] = true\n\nlabels[\"Jainism\"] = {\n\t\tdisplay = \"[[Jainism]]\",\n\ttopical_categories\
      \ = {\"Jainism\"},\n}\n\nlabels[\"Japanese mythology\"] = {\n\tdisplay = \"[[Japanese]] [[mythology]]\",\n\ttopical_categories = {\"Japanese mythology\"},\n}\n\nlabels[\"Java programming language\"] = {\n\tdisplay = \"[[w:Java (programming language)|Java\
      \ programming language]]\",\n\ttopical_categories = {\"Java programming language\"},\n}\naliases[\"JavaPL\"] = \"Java programming language\"\naliases[\"Java PL\"] = \"Java programming language\"\n\nlabels[\"jazz\"] = {\n\tdisplay = \"[[jazz#Noun|jazz]]\"\
      ,\n\ttopical_categories = {\"Jazz\"},\n}\n\nlabels[\"Jewish law\"] = {\n\tdisplay = \"[[Jewish]] [[law]]\",\n\ttopical_categories = {\"Jewish law\"},\n}\naliases[\"Halacha\"] = \"Jewish law\"\naliases[\"Halachah\"] = \"Jewish law\"\naliases[\"Halakha\"\
      ] = \"Jewish law\"\naliases[\"Halakhah\"] = \"Jewish law\"\naliases[\"halacha\"] = \"Jewish law\"\naliases[\"halachah\"] = \"Jewish law\"\naliases[\"halakha\"] = \"Jewish law\"\naliases[\"halakhah\"] = \"Jewish law\"\naliases[\"jewish law\"] = \"Jewish\
      \ law\"\naliases[\"Jewish Law\"] = \"Jewish law\"\n\nlabels[\"journalism\"] = {\n\tdisplay = \"[[journalism]]\",\n\ttopical_categories = {\"Mass media\"},\n}\n\nlabels[\"Judaism\"] = {\n\tdisplay = \"[[Judaism]]\",\n\ttopical_categories = {\"Judaism\"\
      },\n}\n\nlabels[\"judo\"] = {\n\tdisplay = \"[[judo]]\",\n\ttopical_categories = {\"Judo\"},\n}\n\nlabels[\"juggling\"] = {\n\tdisplay = \"[[juggling#Noun|juggling]]\",\n\ttopical_categories = {\"Juggling\"},\n}\n\nlabels[\"knitting\"] = {\n\tdisplay =\
      \ \"[[knitting#Noun|knitting]]\",\n\ttopical_categories = {\"Knitting\"},\n}\n\nlabels[\"lacrosse\"] = {\n\tdisplay = \"[[lacrosse]]\",\n\ttopical_categories = {\"Lacrosse\"},\n}\n\nlabels[\"law\"] = {\n\tdisplay = \"[[law]]\",\n\ttopical_categories =\
      \ {\"Law\"},\n}\naliases[\"legal\"] = \"law\"\n\nlabels[\"law enforcement\"] = {\n\tdisplay = \"[[law enforcement]]\",\n\ttopical_categories = {\"Law enforcement\"},\n}\naliases[\"police\"] = \"law enforcement\"\naliases[\"policing\"] = \"law enforcement\"\
      \n\nlabels[\"letterpress\"] = {\n\tdisplay = \"[[letterpress]] [[typography]]\",\n\ttopical_categories = {\"Typography\"},\n}\naliases[\"metal type\"] = \"letterpress\"\naliases[\"metal typesetting\"] = \"letterpress\"\n\nlabels[\"lexicography\"] = {\n\
      \tdisplay = \"[[lexicography]]\",\n\ttopical_categories = {\"Lexicography\"},\n}\n\nlabels[\"LGBT\"] = {\n\tdisplay = \"[[LGBT]]\",\n\ttopical_categories = {\"LGBT\"},\n}\n\nlabels[\"liberalism\"] = {\n\tdisplay = \"[[liberalism]]\",\n\ttopical_categories\
      \ = {\"Liberalism\"},\n}\n\nlabels[\"library science\"] = {\n\tdisplay = \"[[library science]]\",\n\ttopical_categories = {\"Library science\"},\n}\n\nlabels[\"lichenology\"] = {\n\tdisplay = \"[[lichenology]]\",\n\ttopical_categories = {\"Lichenology\"\
      },\n}\n\nlabels[\"limnology\"] = {\n\tdisplay = \"[[limnology]]\",\n\ttopical_categories = {\"Ecology\"},\n}\n\nlabels[\"lipid\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Lipids\"},\n}\n\nlabels[\"linear algebra\"] = {\n\tdisplay\
      \ = \"[[linear algebra]]\",\n\ttopical_categories = {\"Linear algebra\"},\n}\naliases[\"vector\"] = \"linear algebra\"\naliases[\"vector algebra\"] = \"linear algebra\"\ndeprecated[\"vector\"] = true\n\nlabels[\"linguistic morphology\"] = {\n\tdisplay\
      \ = \"[[linguistic]] [[morphology]]\",\n\ttopical_categories = {\"Linguistic morphology\"},\n}\naliases[\"morphology\"] = \"linguistic morphology\"\ndeprecated[\"morphology\"] = true\n\nlabels[\"linguistics\"] = {\n\tdisplay = \"[[linguistics]]\",\n\t\
      topical_categories = {\"Linguistics\"},\n}\n\nlabels[\"literature\"] = {\n\tdisplay = \"[[literature]]\",\n\ttopical_categories = {\"Literature\"},\n}\n\nlabels[\"logic\"] = {\n\tdisplay = \"[[logic]]\",\n\ttopical_categories = {\"Logic\"},\n}\n\nlabels[\"\
      luge\"] = {\n\tdisplay = \"[[luge]]\",\n\ttopical_categories = {\"Luge\"},\n}\n\nlabels[\"machining\"] = {\n\tdisplay = \"[[machining#Noun|machining]]\",\n\ttopical_categories = {\"Machining\"},\n}\n\nlabels[\"mahjong\"] = {\n\tdisplay = \"[[mahjong]]\"\
      ,\n\ttopical_categories = {\"Mahjong\"},\n}\n\nlabels[\"malacology\"] = {\n\tdisplay = \"[[malacology]]\",\n\ttopical_categories = {\"Malacology\"},\n}\n\nlabels[\"mammalogy\"] = {\n\tdisplay = \"[[mammalogy]]\",\n\ttopical_categories = {\"Mammalogy\"\
      },\n}\n\nlabels[\"management\"] = {\n\tdisplay = \"[[management]]\",\n\ttopical_categories = {\"Management\"},\n}\n\nlabels[\"manga\"] = {\n\tdisplay = \"[[manga]]\",\n\ttopical_categories = {\"Japanese fiction\"},\n}\n\nlabels[\"manufacturing\"] = {\n\
      \tdisplay = \"[[manufacturing#Noun|manufacturing]]\",\n\ttopical_categories = {\"Manufacturing\"},\n}\naliases[\"industry\"] = \"manufacturing\"\ndeprecated[\"industry\"] = true\n\nlabels[\"marching\"] = {\n\tdisplay = \"[[marching#Noun|marching]]\",\n\
      \ttopical_categories = {\"Marching\"},\n}\n\nlabels[\"marine biology\"] = {\n\tdisplay = \"[[marine biology]]\",\n\ttopical_categories = {\"Marine biology\"},\n}\naliases[\"coral science\"] = \"marine biology\"\n\nlabels[\"marketing\"] = {\n\tdisplay =\
      \ \"[[marketing#Noun|marketing]]\",\n\ttopical_categories = {\"Marketing\"},\n}\n\nlabels[\"martial arts\"] = {\n\tdisplay = \"[[martial arts]]\",\n\ttopical_categories = {\"Martial arts\"},\n}\n\nlabels[\"Marxism\"] = {\n\tdisplay = \"[[Marxism]]\",\n\
      \ttopical_categories = {\"Marxism\"},\n}\n\nlabels[\"massage\"] = {\n\tdisplay = \"[[massage]]\",\n\ttopical_categories = {\"Massage\"},\n}\n\nlabels[\"materials science\"] = {\n\tdisplay = \"[[materials science]]\",\n\ttopical_categories = {\"Materials\
      \ science\"},\n}\n\nlabels[\"mathematical analysis\"] = {\n\tdisplay = \"[[mathematical analysis]]\",\n\ttopical_categories = {\"Mathematical analysis\"},\n}\naliases[\"analysis\"] = \"mathematical analysis\"\n\nlabels[\"mathematics\"] = {\n\tdisplay =\
      \ \"[[mathematics]]\",\n\ttopical_categories = {\"Mathematics\"},\n}\naliases[\"math\"] = \"mathematics\"\naliases[\"maths\"] = \"mathematics\"\n\nlabels[\"mechanical engineering\"] = {\n\tdisplay = \"[[mechanical engineering]]\",\n\ttopical_categories\
      \ = {\"Mechanical engineering\"},\n}\n\nlabels[\"mechanics\"] = {\n\tdisplay = \"[[mechanics]]\",\n\ttopical_categories = {\"Mechanics\"},\n}\n\nlabels[\"media\"] = {\n\tdisplay = \"[[media]]\",\n\ttopical_categories = {\"Media\"},\n}\n\nlabels[\"mediaeval\
      \ folklore\"] = {\n\tdisplay = \"[[mediaeval]] [[folklore]]\",\n\ttopical_categories = {\"European folklore\"},\n}\naliases[\"medieval folklore\"] = \"mediaeval folklore\"\n\nlabels[\"medical genetics\"] = {\n\tdisplay = \"[[medical]] [[genetics]]\",\n\
      \ttopical_categories = {\"Medical genetics\"},\n}\n\nlabels[\"medical sign\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories = {\"Medical signs and symptoms\"},\n}\n\nlabels[\"medicine\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories\
      \ = {\"Medicine\"},\n}\naliases[\"medical\"] = \"medicine\"\n\nlabels[\"Mesopotamian mythology\"] = {\n\tdisplay = \"[[Mesopotamian]] [[mythology]]\",\n\ttopical_categories = {\"Mesopotamian mythology\"},\n}\n\nlabels[\"metadata\"] = {\n\tdisplay = \"\
      [[metadata]]\",\n\ttopical_categories = {\"Data management\"},\n}\n\nlabels[\"metallurgy\"] = {\n\tdisplay = \"[[metallurgy]]\",\n\ttopical_categories = {\"Metallurgy\"},\n}\n\nlabels[\"metaphysics\"] = {\n\tdisplay = \"[[metaphysics]]\",\n\ttopical_categories\
      \ = {\"Metaphysics\"},\n}\n\nlabels[\"meteorology\"] = {\n\tdisplay = \"[[meteorology]]\",\n\ttopical_categories = {\"Meteorology\"},\n}\n\nlabels[\"metrology\"] = {\n\tdisplay = \"[[metrology]]\",\n\ttopical_categories = {\"Metrology\"},\n}\n\nlabels[\"\
      microbiology\"] = {\n\tdisplay = \"[[microbiology]]\",\n\ttopical_categories = {\"Microbiology\"},\n}\n\nlabels[\"microelectronics\"] = {\n\tdisplay = \"[[microelectronics]]\",\n\ttopical_categories = {\"Microelectronics\"},\n}\n\nlabels[\"microscopy\"\
      ] = {\n\tdisplay = \"[[microscopy]]\",\n\ttopical_categories = {\"Microscopy\"},\n}\n\nlabels[\"military\"] = {\n\tdisplay = \"[[military]]\",\n\ttopical_categories = {\"Military\"},\n}\n\nlabels[\"mineralogy\"] = {\n\tdisplay = \"[[mineralogy]]\",\n\t\
      topical_categories = {\"Mineralogy\"},\n}\n\nlabels[\"mining\"] = {\n\tdisplay = \"[[mining#Noun|mining]]\",\n\ttopical_categories = {\"Mining\"},\n}\n\nlabels[\"molecular biology\"] = {\n\tdisplay = \"[[molecular biology]]\",\n\ttopical_categories = {\"\
      Molecular biology\"},\n}\n\nlabels[\"monarchy\"] = {\n\tdisplay = \"[[monarchy]]\",\n\ttopical_categories = {\"Monarchy\"},\n}\n\nlabels[\"money\"] = {\n\tdisplay = \"[[money]]\",\n\ttopical_categories = {\"Money\"},\n}\n\nlabels[\"Mormonism\"] = {\n\t\
      display = \"[[Mormonism]]\",\n\ttopical_categories = {\"Mormonism\"},\n}\n\nlabels[\"motorcycling\"] = {\n\tdisplay = \"[[motorcycling#Noun|motorcycling]]\",\n\ttopical_categories = {\"Motorcycles\"},\n}\n\nlabels[\"motor racing\"] = {\n\tdisplay = \"\
      [[motor racing]]\",\n\ttopical_categories = {\"Motor racing\"},\n}\naliases[\"motor sport\"] = \"motor racing\"\n\nlabels[\"music\"] = {\n\tdisplay = \"[[music]]\",\n\ttopical_categories = {\"Music\"},\n}\n\nlabels[\"mycology\"] = {\n\tdisplay = \"[[mycology]]\"\
      ,\n\ttopical_categories = {\"Mycology\"},\n}\n\nlabels[\"mythology\"] = {\n\tdisplay = \"[[mythology]]\",\n\ttopical_categories = {\"Mythology\"},\n}\n\nlabels[\"nanotechnology\"] = {\n\tdisplay = \"[[nanotechnology]]\",\n\ttopical_categories = {\"Nanotechnology\"\
      },\n}\n\nlabels[\"narratology\"] = {\n\tdisplay = \"[[narratology]]\",\n\ttopical_categories = {\"Narratology\"},\n}\n\nlabels[\"nautical\"] = {\n\tdisplay = \"[[nautical]]\",\n\ttopical_categories = {\"Nautical\"},\n}\n\nlabels[\"navigation\"] = {\n\t\
      display = \"[[navigation]]\",\n\ttopical_categories = {\"Navigation\"},\n}\n\nlabels[\"Nazism\"] = { -- but also this is often used to indicate Nazi-used jargon; cf \"white supremacist ideology\"\n\tdisplay = \"[[w:Nazism|Nazism]]\",\n\ttopical_categories\
      \ = {\"Nazism\"},\n}\naliases[\"Nazi\"] = \"Nazism\"\naliases[\"nazi\"] = \"Nazism\"\naliases[\"nazism\"] = \"Nazism\"\naliases[\"neo-Nazism\"] = \"Nazism\"\naliases[\"neo-nazism\"] = \"Nazism\"\naliases[\"neo-Nazi\"] = \"Nazism\"\naliases[\"neo-nazi\"\
      ] = \"Nazism\"\naliases[\"neoNazism\"] = \"Nazism\"\naliases[\"neoNazi\"] = \"Nazism\"\naliases[\"neonazism\"] = \"Nazism\"\naliases[\"neonazi\"] = \"Nazism\"\n\nlabels[\"nematology\"] = {\n\tdisplay = \"[[nematology]]\",\n\ttopical_categories = {\"Zoology\"\
      },\n}\n\nlabels[\"netball\"] = {\n\tdisplay = \"[[netball]]\",\n\ttopical_categories = {\"Netball\"},\n}\n\nlabels[\"networking\"] = {\n\tdisplay = \"[[networking#Noun|networking]]\",\n\ttopical_categories = {\"Networking\"},\n}\n\nlabels[\"neuroanatomy\"\
      ] = {\n\tdisplay = \"[[neuroanatomy]]\",\n\ttopical_categories = {\"Neuroanatomy\"},\n}\n\nlabels[\"neurology\"] = {\n\tdisplay = \"[[neurology]]\",\n\ttopical_categories = {\"Neurology\"},\n}\n\nlabels[\"neuroscience\"] = {\n\tdisplay = \"[[neuroscience]]\"\
      ,\n\ttopical_categories = {\"Neuroscience\"},\n}\n\nlabels[\"neurosurgery\"] = {\n\tdisplay = \"[[neurosurgery]]\",\n\ttopical_categories = {\"Neurosurgery\"},\n}\n\nlabels[\"newspapers\"] = {\n\tdisplay = \"[[newspaper]]s\",\n\ttopical_categories = {\"\
      Newspapers\"},\n}\n\nlabels[\"Norse mythology\"] = {\n\tdisplay = \"[[Norse]] [[mythology]]\",\n\ttopical_categories = {\"Norse mythology\"},\n}\n\nlabels[\"nuclear physics\"] = {\n\tdisplay = \"[[nuclear physics]]\",\n\ttopical_categories = {\"Nuclear\
      \ physics\"},\n}\n\nlabels[\"number theory\"] = {\n\tdisplay = \"[[number theory]]\",\n\ttopical_categories = {\"Number theory\"},\n}\n\nlabels[\"numismatics\"] = {\n\tdisplay = \"[[numismatics]]\",\n\ttopical_categories = {\"Currency\"},\n}\naliases[\"\
      currency\"] = \"numismatics\"\ndeprecated[\"currency\"] = true\n\nlabels[\"nutrition\"] = {\n\tdisplay = \"[[nutrition]]\",\n\ttopical_categories = {\"Nutrition\"},\n}\n\nlabels[\"object-oriented programming\"] = {\n\tdisplay = \"[[w:Object-oriented programming|object-oriented\
      \ programming]]\",\n\ttopical_categories = {\"Object-oriented programming\"},\n}\naliases[\"object-oriented\"] = \"object-oriented programming\"\n\nlabels[\"obstetrics\"] = {\n\tdisplay = \"[[obstetrics]]\",\n\ttopical_categories = {\"Obstetrics\"},\n\
      }\naliases[\"obstetric\"] = \"obstetrics\"\n\nlabels[\"occult\"] = {\n\tdisplay = \"[[occult]]\",\n\ttopical_categories = {\"Occult\"},\n}\n\nlabels[\"oceanography\"] = {\n\tdisplay = \"[[oceanography]]\",\n\ttopical_categories = {\"Oceanography\"},\n\
      }\n\nlabels[\"oenology\"] = {\n\tdisplay = \"[[oenology]]\",\n\ttopical_categories = {\"Oenology\"},\n}\n\nlabels[\"oil industry\"] = {\n\tdisplay = \"[[w:Petroleum industry|oil industry]]\",\n\ttopical_categories = {\"Oil industry\"},\n}\naliases[\"oil\
      \ drilling\"] = \"oil industry\"\n\nlabels[\"oncology\"] = {\n\tdisplay = \"[[oncology]]\",\n\ttopical_categories = {\"Oncology\"},\n}\n\nlabels[\"online gaming\"] = {\n\tdisplay = \"[[online]] [[gaming#Noun|gaming]]\",\n\ttopical_categories = {\"Video\
      \ games\"},\n}\naliases[\"online games\"] = \"online gaming\"\naliases[\"MMO\"] = \"online gaming\"\naliases[\"MMORPG\"] = \"online gaming\"\n\nlabels[\"opera\"] = {\n\tdisplay = \"[[opera]]\",\n\ttopical_categories = {\"Opera\"},\n}\n\nlabels[\"operating\
      \ systems\"] = {\n\tdisplay = \"[[operating system]]s\",\n\ttopical_categories = {\"Software\"},\n}\n\nlabels[\"ophthalmology\"] = {\n\tdisplay = \"[[ophthalmology]]\",\n\ttopical_categories = {\"Ophthalmology\"},\n}\n\nlabels[\"optics\"] = {\n\tdisplay\
      \ = \"[[optics]]\",\n\ttopical_categories = {\"Optics\"},\n}\n\nlabels[\"organic chemistry\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Organic chemistry\"},\n}\n\nlabels[\"ornithology\"] = {\n\tdisplay = \"[[ornithology]]\"\
      ,\n\ttopical_categories = {\"Ornithology\"},\n}\n\nlabels[\"orthodontics\"] = {\n\tdisplay = \"[[orthodontics]]\",\n\ttopical_categories = {\"Dentistry\"},\n}\n\nlabels[\"orthography\"] = {\n\tdisplay = \"[[orthography]]\",\n\ttopical_categories = {\"\
      Orthography\"},\n}\n\nlabels[\"paganism\"] = {\n\tdisplay = \"[[paganism]]\",\n\ttopical_categories = {\"Paganism\"},\n}\naliases[\"pagan\"] = \"paganism\"\naliases[\"neopagan\"] = \"paganism\"\naliases[\"neopaganism\"] = \"paganism\"\naliases[\"neo-pagan\"\
      ] = \"paganism\"\naliases[\"neo-paganism\"] = \"paganism\"\n\nlabels[\"pain\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories = {\"Pain\"},\n}\n\nlabels[\"paintball\"] = {\n\tdisplay = \"[[paintball]]\",\n\ttopical_categories = {\"Paintball\"\
      },\n}\n\nlabels[\"painting\"] = {\n\tdisplay = \"[[painting#Noun|painting]]\",\n\ttopical_categories = {\"Painting\"},\n}\n\nlabels[\"palaeography\"] = {\n\tdisplay = \"[[palaeography]]\",\n\ttopical_categories = {\"Palaeography\"},\n}\naliases[\"paleography\"\
      ] = \"palaeography\"\n\nlabels[\"paleontology\"] = {\n\tdisplay = \"[[paleontology]]\",\n\ttopical_categories = {\"Paleontology\"},\n}\naliases[\"palaeontology\"] = \"paleontology\"\n\nlabels[\"palmistry\"] = {\n\tdisplay = \"[[palmistry]]\",\n\ttopical_categories\
      \ = {\"Palmistry\"},\n}\n\nlabels[\"palynology\"] = {\n\tdisplay = \"[[palynology]]\",\n\ttopical_categories = {\"Palynology\"},\n}\n\nlabels[\"parapsychology\"] = {\n\tdisplay = \"[[parapsychology]]\",\n\ttopical_categories = {\"Parapsychology\"},\n}\n\
      \nlabels[\"particle physics\"] = {\n\tdisplay = \"[[particle physics]]\",\n\ttopical_categories = {\"Particle physics\"},\n}\n\nlabels[\"pasteurisation\"] = {\n\tdisplay = \"[[pasteurisation]]\",\n\ttopical_categories = {\"Pasteurisation\"},\n}\n\nlabels[\"\
      patent law\"] = {\n\tdisplay = \"[[patent#Noun|patent]] [[law]]\",\n\ttopical_categories = {\"Patent law\"},\n}\naliases[\"patents\"] = \"patent law\"\n\nlabels[\"pathology\"] = {\n\tdisplay = \"[[pathology]]\",\n\ttopical_categories = {\"Pathology\"},\n\
      }\n\nlabels[\"pensions\"] = {\n\tdisplay = \"[[pension]]s\",\n\ttopical_categories = {\"Pensions\"},\n}\n\nlabels[\"pesäpallo\"] = {\n\tdisplay = \"[[pesäpallo]]\",\n\ttopical_categories = {\"Pesäpallo\"},\n}\naliases[\"pesapallo\"] = \"pesäpallo\"\n\n\
      labels[\"petrochemistry\"] = {\n\tdisplay = \"[[petrochemistry]]\",\n\ttopical_categories = {\"Petrochemistry\"},\n}\n\nlabels[\"petrology\"] = {\n\tdisplay = \"[[petrology]]\",\n\ttopical_categories = {\"Petrology\"},\n}\n\nlabels[\"pharmacology\"] =\
      \ {\n\tdisplay = \"[[pharmacology]]\",\n\ttopical_categories = {\"Pharmacology\"},\n}\n\nlabels[\"pharmacy\"] = {\n\tdisplay = \"[[pharmacy]]\",\n\ttopical_categories = {\"Pharmacy\"},\n}\n\nlabels[\"pharyngology\"] = {\n\tdisplay = \"[[pharyngology]]\"\
      ,\n\ttopical_categories = {\"Pharyngology\"},\n}\n\nlabels[\"philately\"] = {\n\tdisplay = \"[[philately]]\",\n\ttopical_categories = {\"Philately\"},\n}\n\nlabels[\"philosophy\"] = {\n\tdisplay = \"[[philosophy]]\",\n\ttopical_categories = {\"Philosophy\"\
      },\n}\n\nlabels[\"phonetics\"] = {\n\tdisplay = \"[[phonetics]]\",\n\ttopical_categories = {\"Phonetics\"},\n}\n\nlabels[\"phonology\"] = {\n\tdisplay = \"[[phonology]]\",\n\ttopical_categories = {\"Phonology\"},\n}\n\nlabels[\"photography\"] = {\n\tdisplay\
      \ = \"[[photography]]\",\n\ttopical_categories = {\"Photography\"},\n}\n\nlabels[\"phrenology\"] = {\n\tdisplay = \"[[phrenology]]\",\n\ttopical_categories = {\"Phrenology\"},\n}\n\nlabels[\"physical chemistry\"] = {\n\tdisplay = \"[[physical chemistry]]\"\
      ,\n\ttopical_categories = {\"Physical chemistry\"},\n}\n\nlabels[\"physics\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Physics\"},\n}\n\nlabels[\"physiology\"] = {\n\tdisplay = \"[[physiology]]\",\n\ttopical_categories = {\"Physiology\"\
      },\n}\n\nlabels[\"phytopathology\"] = {\n\tdisplay = \"[[phytopathology]]\",\n\ttopical_categories = {\"Phytopathology\"},\n}\n\nlabels[\"pinball\"] = {\n\tdisplay = \"[[pinball]]\",\n\ttopical_categories = {\"Pinball\"},\n}\n\nlabels[\"planetology\"]\
      \ = {\n\tdisplay = \"[[planetology]]\",\n\ttopical_categories = {\"Planetology\"},\n}\n\nlabels[\"poetry\"] = {\n\tdisplay = \"[[poetry]]\",\n\ttopical_categories = {\"Poetry\"},\n}\n\nlabels[\"Pokémon\"] = {\n\tdisplay = \"[[w:Pokémon|Pokémon]]\",\n\t\
      topical_categories = {\"Pokémon\"},\n}\n\nlabels[\"poker\"] = {\n\tdisplay = \"[[poker]]\",\n\ttopical_categories = {\"Poker\"},\n}\n\nlabels[\"poker slang\"] = {\n\tdisplay = \"[[poker]] [[slang]]\",\n\ttopical_categories = {\"Poker\"},\n}\n\nlabels[\"\
      political science\"] = {\n\tdisplay = \"[[political science]]\",\n\ttopical_categories = {\"Political science\"},\n}\n\nlabels[\"politics\"] = {\n\tdisplay = \"[[politics]]\",\n\ttopical_categories = {\"Politics\"},\n}\naliases[\"political\"] = \"politics\"\
      \n\nlabels[\"polymer science\"] = {\n\tdisplay = \"[[polymer]] [[science]]\",\n\ttopical_categories = {\"Polymer science\"},\n}\n\nlabels[\"pornography\"] = {\n\tdisplay = \"[[pornography]]\",\n\ttopical_categories = {\"Pornography\"},\n}\n\nlabels[\"\
      Portuguese folklore\"] = {\n\tdisplay = \"[[Portuguese#Adjective|Portuguese]] [[folklore]]\",\n\ttopical_categories = {\"European folklore\"},\n}\n\nlabels[\"pottery\"] = {\n\tdisplay = \"[[pottery]]\",\n\ttopical_categories = {\"Ceramics\"},\n}\n\nlabels[\"\
      pragmatics\"] = {\n\tdisplay = \"[[pragmatics]]\",\n\ttopical_categories = {\"Pragmatics\"},\n}\n\nlabels[\"printing\"] = {\n\tdisplay = \"[[printing#Noun|printing]]\",\n\ttopical_categories = {\"Printing\"},\n}\n\nlabels[\"probability theory\"] = {\n\t\
      display = \"[[probability theory]]\",\n\ttopical_categories = {\"Probability theory\"},\n}\n\nlabels[\"programming\"] = {\n\tdisplay = \"[[programming#Noun|programming]]\",\n\ttopical_categories = {\"Programming\"},\n}\naliases[\"computer programming\"\
      ] = \"programming\"\n\nlabels[\"property law\"] = {\n\tdisplay = \"[[property law]]\",\n\ttopical_categories = {\"Property law\"},\n}\n\nlabels[\"prosody\"] = {\n\tdisplay = \"[[prosody]]\",\n\ttopical_categories = {\"Prosody\"},\n}\n\nlabels[\"Protestantism\"\
      ] = {\n\tdisplay = \"[[Protestantism]]\",\n\ttopical_categories = {\"Protestantism\"},\n}\n\nlabels[\"pseudoscience\"] = {\n\tdisplay = \"[[pseudoscience]]\",\n\ttopical_categories = {\"Pseudoscience\"},\n}\n\nlabels[\"psychiatry\"] = {\n\tdisplay = \"\
      [[psychiatry]]\",\n\ttopical_categories = {\"Psychiatry\"},\n}\n\nlabels[\"psychoanalysis\"] = {\n\tdisplay = \"[[psychoanalysis]]\",\n\ttopical_categories = {\"Psychoanalysis\"},\n}\n\nlabels[\"psychology\"] = {\n\tdisplay = \"[[psychology]]\",\n\ttopical_categories\
      \ = {\"Psychology\"},\n}\n\nlabels[\"psychotherapy\"] = {\n\tdisplay = \"[[psychotherapy]]\",\n\ttopical_categories = {\"Psychotherapy\"},\n}\n\nlabels[\"publishing\"] = {\n\tdisplay = \"[[publishing#Noun|publishing]]\",\n\ttopical_categories = {\"Publishing\"\
      },\n}\n\nlabels[\"pyrotechnics\"] = {\n\tdisplay = \"[[pyrotechnics]]\",\n\ttopical_categories = {\"Pyrotechnics\"},\n}\n\nlabels[\"Quakerism\"] = {\n\ttopical_categories = {\"Quakerism\"},\n}\n\nlabels[\"quantum mechanics\"] = {\n\ttopical_categories\
      \ = {\"Quantum mechanics\"},\n}\naliases[\"quantum physics\"] = \"quantum mechanics\"\naliases[\"quantum\"] = \"quantum mechanics\"\ndeprecated[\"quantum\"] = true\n\n-- TODO: What kind of topic is \"radiation\"? Is it specific kinds of radiation? That\
      \ would be a set-type category.\nlabels[\"radiation\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Radiation\"},\n}\n\nlabels[\"radio\"] = {\n\tdisplay = \"[[radio]]\",\n\ttopical_categories = {\"Radio\"},\n}\n\nlabels[\"Raëlism\"] = {\n\
      \tdisplay = \"[[Raëlism]]\",\n\ttopical_categories = {\"Raëlism\"},\n}\n\nlabels[\"rail transport\"] = {\n\tdisplay = \"[[rail transport]]\",\n\ttopical_categories = {\"Rail transportation\"},\n}\naliases[\"rail\"] = \"rail transport\"\naliases[\"railroading\"\
      ] = \"rail transport\"\naliases[\"railroads\"] = \"rail transport\"\n\nlabels[\"Rastafari\"] = {\n\tdisplay = \"[[Rastafari]]\",\n\ttopical_categories = {\"Rastafari\"},\n}\naliases[\"Rasta\"] = \"Rastafari\"\naliases[\"rasta\"] = \"Rastafari\"\naliases[\"\
      Rastafarian\"] = \"Rastafari\"\naliases[\"rastafarian\"] = \"Rastafari\"\naliases[\"Rastafariamism\"] = \"Rastafari\"\n\nlabels[\"real estate\"] = {\n\tdisplay = \"[[real estate]]\",\n\ttopical_categories = {\"Real estate\"},\n}\n\nlabels[\"real tennis\"\
      ] = {\n\tdisplay = \"[[real tennis]]\",\n\ttopical_categories = {\"Tennis\"},\n}\n\nlabels[\"recreational mathematics\"] = {\n\tdisplay = \"[[recreational mathematics]]\",\n\ttopical_categories = {\"Mathematics\"},\n}\n\nlabels[\"regular expressions\"\
      ] = {\n\tdisplay = \"[[regular expression]]s\",\n\ttopical_categories = {\"Regular expressions\"},\n}\naliases[\"regex\"] = \"regular expressions\"\n\nlabels[\"relativity\"] = {\n\tdisplay = \"[[relativity]]\",\n\ttopical_categories = {\"Relativity\"},\n\
      }\n\nlabels[\"religion\"] = {\n\tdisplay = \"[[religion]]\",\n\ttopical_categories = {\"Religion\"},\n}\n\nlabels[\"rhetoric\"] = {\n\tdisplay = \"[[rhetoric]]\",\n\ttopical_categories = {\"Rhetoric\"},\n}\n\nlabels[\"road transport\"] = {\n\tdisplay =\
      \ \"[[w:road transport|road transport]]\",\n\ttopical_categories = {\"Road transport\"},\n}\n\nlabels[\"robotics\"] = {\n\tdisplay = \"[[robotics]]\",\n\ttopical_categories = {\"Robotics\"},\n}\n\nlabels[\"rock paper scissors\"] = {\n\ttopical_categories\
      \ = {\"Rock paper scissors\"},\n}\n\nlabels[\"role-playing games\"] = {\n\tdisplay = \"[[role-playing game]]s\",\n\ttopical_categories = {\"Role-playing games\"},\n}\naliases[\"role playing games\"] = \"role-playing games\"\naliases[\"RPG\"] = \"role-playing\
      \ games\"\n\nlabels[\"roller derby\"] = {\n\tdisplay = \"[[roller derby]]\",\n\ttopical_categories = {\"Roller derby\"},\n}\n\nlabels[\"Roman Catholicism\"] = {\n\tdisplay = \"[[Roman Catholicism]]\",\n\ttopical_categories = {\"Roman Catholicism\"},\n\
      }\naliases[\"Roman Catholic\"] = \"Roman Catholicism\"\n\nlabels[\"Roman mythology\"] = {\n\tdisplay = \"[[Roman]] [[mythology]]\",\n\ttopical_categories = {\"Roman mythology\"},\n}\n\nlabels[\"Roman numerals\"] = {\n\tdisplay = \"[[Roman numeral]]s\"\
      ,\n\ttopical_categories = {\"Roman numerals\"},\n}\n\nlabels[\"roofing\"] = {\n\tdisplay = \"[[roofing#Noun|roofing]]\",\n\ttopical_categories = {\"Roofing\"},\n}\n\nlabels[\"rosiculture\"] = {\n\tdisplay = \"[[rosiculture]]\",\n\ttopical_categories =\
      \ {\"Rosiculture\"},\n}\n\nlabels[\"rowing\"] = {\n\tdisplay = \"[[rowing#Noun|rowing]]\",\n\ttopical_categories = {\"Rowing\"},\n}\n\nlabels[\"Rubik's Cube\"] = {\n\tdisplay = \"[[Rubik's Cube]]\",\n\ttopical_categories = {\"Rubik's Cube\"},\n}\naliases[\"\
      Rubik's cubes\"] = \"Rubik's Cube\"\n\nlabels[\"rugby\"] = {\n\tdisplay = \"[[rugby]]\",\n\ttopical_categories = {\"Rugby\"},\n}\n\nlabels[\"rugby league\"] = {\n\tdisplay = \"[[rugby league]]\",\n\ttopical_categories = {\"Rugby league\"},\n}\n\nlabels[\"\
      rugby union\"] = {\n\tdisplay = \"[[rugby union]]\",\n\ttopical_categories = {\"Rugby union\"},\n}\n\nlabels[\"sailing\"] = {\n\tdisplay = \"[[sailing#Noun|sailing]]\",\n\ttopical_categories = {\"Sailing\"},\n}\n\nlabels[\"science fiction\"] = {\n\tdisplay\
      \ = \"[[science fiction]]\",\n\ttopical_categories = {\"Science fiction\"},\n}\naliases[\"scifi\"] = \"science fiction\"\naliases[\"sci fi\"] = \"science fiction\"\n\nlabels[\"sciences\"] = {\n\tdisplay = \"[[sciences]]\",\n\ttopical_categories = {\"Sciences\"\
      },\n}\naliases[\"science\"] = \"sciences\"\naliases[\"scientific\"] = \"sciences\"\n\nlabels[\"Scientology\"] = {\n\tdisplay = \"[[Scientology]]\",\n\ttopical_categories = {\"Scientology\"},\n}\n\nlabels[\"Scouting\"] = {\n\tdisplay = \"[[Scouting]]\"\
      ,\n\ttopical_categories = {\"Scouting\"},\n}\naliases[\"scouting\"] = \"Scouting\"\n\nlabels[\"scrapbooks\"] = {\n\tdisplay = \"[[scrapbook]]s\",\n\ttopical_categories = {\"Scrapbooks\"},\n}\n\nlabels[\"sculpture\"] = {\n\tdisplay = \"[[sculpture]]\",\n\
      \ttopical_categories = {\"Sculpture\"},\n}\n\nlabels[\"seduction community\"] = {\n\tdisplay = \"[[w:Seduction community|seduction community]]\",\n\ttopical_categories = {\"Seduction community\"},\n}\n\nlabels[\"seismology\"] = {\n\tdisplay = \"[[seismology]]\"\
      ,\n\ttopical_categories = {\"Seismology\"},\n}\n\nlabels[\"semantics\"] = {\n\tdisplay = \"[[semantics]]\",\n\ttopical_categories = {\"Semantics\"},\n}\n\nlabels[\"semiotics\"] = {\n\tdisplay = \"[[semiotics]]\",\n\ttopical_categories = {\"Semiotics\"\
      },\n}\n\nlabels[\"set theory\"] = {\n\tdisplay = \"[[set theory]]\",\n\ttopical_categories = {\"Set theory\"},\n}\n\nlabels[\"sewing\"] = {\n\tdisplay = \"[[sewing#Noun|sewing]]\",\n\ttopical_categories = {\"Sewing\"},\n}\n\nlabels[\"sexology\"] = {\n\t\
      display = \"[[sexology]]\",\n\ttopical_categories = {\"Sexology\"},\n}\n\nlabels[\"sexuality\"] = {\n\tdisplay = \"[[sexuality]]\",\n\ttopical_categories = {\"Sexuality\"},\n}\n\nlabels[\"shamanism\"] = {\n\tdisplay = \"[[shamanism]]\",\n\ttopical_categories\
      \ = {\"Shamanism\"},\n}\naliases[\"Shamanism\"] = \"shamanism\"\n\nlabels[\"Shinto\"] = {\n\tdisplay = \"[[Shinto]]\",\n\ttopical_categories = {\"Shinto\"},\n}\n\nlabels[\"shipping\"] = {\n\tdisplay = \"[[shipping#Noun|shipping]]\",\n\ttopical_categories\
      \ = {\"Shipping\"},\n}\n\nlabels[\"shogi\"] = {\n\tdisplay = \"[[shogi]]\",\n\ttopical_categories = {\"Shogi\"},\n}\n\nlabels[\"signal processing\"] = {\n\tdisplay = \"[[w:Signal processing|signal processing]]\",\n\ttopical_categories = {\"Signal processing\"\
      },\n}\n\nlabels[\"Sikhism\"] = {\n\tdisplay = \"[[Sikhism]]\",\n\ttopical_categories = {\"Sikhism\"},\n}\n\nlabels[\"singing\"] = {\n\tdisplay = \"[[singing#Noun|singing]]\",\n\ttopical_categories = {\"Singing\"},\n}\n\nlabels[\"skateboarding\"] = {\n\t\
      display = \"[[skateboarding#Noun|skateboarding]]\",\n\ttopical_categories = {\"Skateboarding\"},\n}\n\nlabels[\"skating\"] = {\n\tdisplay = \"[[skating#Noun|skating]]\",\n\ttopical_categories = {\"Skating\"},\n}\n\nlabels[\"skiing\"] = {\n\tdisplay = \"\
      [[skiing#Noun|skiing]]\",\n\ttopical_categories = {\"Skiing\"},\n}\n\nlabels[\"smoking\"] = {\n\tdisplay = \"[[smoking#Noun|smoking]]\",\n\ttopical_categories = {\"Smoking\"},\n}\n\nlabels[\"snooker\"] = {\n\tdisplay = \"[[snooker#Noun|snooker]]\",\n\t\
      topical_categories = {\"Snooker\"},\n}\n\nlabels[\"snowboarding\"] = {\n\tdisplay = \"[[snowboarding#Noun|snowboarding]]\",\n\ttopical_categories = {\"Snowboarding\"},\n}\n\nlabels[\"soccer\"] = {\n\tdisplay = \"[[soccer]]\",\n\ttopical_categories = {\"\
      Football (soccer)\"},\n}\naliases[\"football\"] = \"soccer\"\naliases[\"association football\"] = \"soccer\"\n\nlabels[\"social sciences\"] = {\n\tdisplay = \"[[social sciences]]\",\n\ttopical_categories = {\"Social sciences\"},\n}\naliases[\"social science\"\
      ] = \"social sciences\"\n\nlabels[\"socialism\"] = {\n\tdisplay = \"[[socialism]]\",\n\ttopical_categories = {\"Socialism\"},\n}\n\nlabels[\"sociolinguistics\"] = {\n\tdisplay = \"[[sociolinguistics]]\",\n\ttopical_categories = {\"Sociolinguistics\"},\n\
      }\n\nlabels[\"sociology\"] = {\n\tdisplay = \"[[sociology]]\",\n\ttopical_categories = {\"Sociology\"},\n}\n\nlabels[\"softball\"] = {\n\tdisplay = \"[[softball]]\",\n\ttopical_categories = {\"Softball\"},\n}\n\nlabels[\"software\"] = {\n\tdisplay = \"\
      [[software]]\",\n\ttopical_categories = {\"Software\"},\n}\n\nlabels[\"software architecture\"] = {\n\tdisplay = \"[[software architecture]]\",\n\ttopical_categories = {\"Software engineering\", \"Programming\"},\n}\n\nlabels[\"software engineering\"]\
      \ = {\n\tdisplay = \"[[software engineering]]\",\n\ttopical_categories = {\"Software engineering\"},\n}\n\nlabels[\"soil science\"] = {\n\tdisplay = \"[[soil science]]\",\n\ttopical_categories = {\"Soil science\"},\n}\n\nlabels[\"sound\"] = {\n\tdisplay\
      \ = \"[[sound#Noun|sound]]\",\n\ttopical_categories = {\"Sound\"},\n}\n\nlabels[\"sound engineering\"] = {\n\tdisplay = \"[[sound engineering]]\",\n\ttopical_categories = {\"Sound engineering\"},\n}\n\nlabels[\"Soviet Union\"] = {\n\tdisplay = \"[[Soviet\
      \ Union]]\",\n\ttopical_categories = {\"Soviet Union\"},\n}\naliases[\"USSR\"] = \"Soviet Union\"\n\nlabels[\"space flight\"] = {\n\tdisplay = \"[[space flight]]\",\n\ttopical_categories = {\"Space\"},\n}\n\nlabels[\"space science\"] = {\n\tdisplay = \"\
      [[space science]]\",\n\ttopical_categories = {\"Space\"},\n}\naliases[\"space\"] = \"space science\"\n\nlabels[\"spectroscopy\"] = {\n\tdisplay = \"[[spectroscopy]]\",\n\ttopical_categories = {\"Spectroscopy\"},\n}\n\nlabels[\"spiritualism\"] = {\n\tdisplay\
      \ = \"[[spiritualism]]\",\n\ttopical_categories = {\"Spiritualism\"},\n}\n\nlabels[\"sports\"] = {\n\tdisplay = \"[[sports]]\",\n\ttopical_categories = {\"Sports\"},\n}\naliases[\"sport\"] = \"sports\"\n\nlabels[\"squash\"] = {\n\tdisplay = \"[[squash#Noun|squash\
      \ (sport)]]\",\n\ttopical_categories = {\"Squash\"},\n}\n\nlabels[\"statistics\"] = {\n\tdisplay = \"[[statistics]]\",\n\ttopical_categories = {\"Statistics\"},\n}\n\nlabels[\"Star Wars\"] = {\n\tdisplay = \"[[Star Wars]]\",\n\ttopical_categories = {\"\
      Star Wars\"},\n}\n\nlabels[\"stock market\"] = {\n\tdisplay = \"[[stock market]]\",\n\ttopical_categories = {\"Stock market\"},\n}\n\nlabels[\"stock ticker symbol\"] = {\n\tdisplay = \"[[stock ticker symbol]]\",\n\ttopical_categories = {\"Stock symbols\
      \ for companies\"},\n}\naliases[\"stock symbol\"] = \"stock ticker symbol\"\n\nlabels[\"subculture\"] = {\n\tdisplay = \"[[subculture]]\",\n\ttopical_categories = {\"Culture\"},\n}\n\nlabels[\"sumo\"] = {\n\tdisplay = \"[[sumo]]\",\n\ttopical_categories\
      \ = {\"Sumo\"},\n}\n\nlabels[\"surfing\"] = {\n\tdisplay = \"[[surfing#Noun|surfing]]\",\n\ttopical_categories = {\"Surfing\"},\n}\n\nlabels[\"surgery\"] = {\n\tdisplay = \"[[surgery]]\",\n\ttopical_categories = {\"Surgery\"},\n}\n\nlabels[\"surveying\"\
      ] = {\n\tdisplay = \"[[surveying#Noun|surveying]]\",\n\ttopical_categories = {\"Surveying\"},\n}\n\nlabels[\"sushi\"] = {\n\tdisplay = \"[[sushi]]\",\n\ttopical_categories = {\"Sushi\"},\n}\n\nlabels[\"swimming\"] = {\n\tdisplay = \"[[swimming#Noun|swimming]]\"\
      ,\n\ttopical_categories = {\"Swimming\"},\n}\n\nlabels[\"swords\"] = {\n\tdisplay = \"[[sword]]s\",\n\ttopical_categories = {\"Swords\"},\n}\n\nlabels[\"systematics\"] = {\n\tdisplay = \"[[systematics]]\",\n\ttopical_categories = {\"Systematics\"},\n}\n\
      \nlabels[\"systems engineering\"] = {\n\tdisplay = \"[[systems engineering]]\",\n\ttopical_categories = {\"Systems engineering\"},\n}\n\nlabels[\"systems theory\"] = {\n\tdisplay = \"[[systems theory]]\",\n\ttopical_categories = {\"Systems theory\"},\n\
      }\n\nlabels[\"table tennis\"] = {\n\tdisplay = \"[[table tennis]]\",\n\ttopical_categories = {\"Table tennis\"},\n}\n\nlabels[\"Taoism\"] = {\n\tdisplay = \"[[Taoism]]\",\n\ttopical_categories = {\"Taoism\"},\n}\naliases[\"Daoism\"] = \"Taoism\"\n\nlabels[\"\
      tarot\"] = {\n\tdisplay = \"[[tarot]]\",\n\ttopical_categories = {\"Cartomancy\"},\n}\n\nlabels[\"taxation\"] = {\n\tdisplay = \"[[taxation]]\",\n\ttopical_categories = {\"Law\"},\n}\naliases[\"tax\"] = \"taxation\"\naliases[\"taxes\"] = \"taxation\"\n\
      \nlabels[\"taxonomy\"] = {\n\tdisplay = \"[[taxonomy]]\",\n\ttopical_categories = {\"Taxonomy\"},\n}\n\nlabels[\"technology\"] = {\n\tdisplay = \"[[technology]]\",\n\ttopical_categories = {\"Technology\"},\n}\n\nlabels[\"telecommunications\"] = {\n\tdisplay\
      \ = \"[[telecommunications]]\",\n\ttopical_categories = {\"Telecommunications\"},\n}\naliases[\"telecommunication\"] = \"telecommunications\"\naliases[\"telecom\"] = \"telecommunications\"\n\nlabels[\"telegraphy\"] = {\n\tdisplay = \"[[telegraphy]]\",\n\
      \ttopical_categories = {\"Telegraphy\"},\n}\n\nlabels[\"telephony\"] = {\n\tdisplay = \"[[telephony]]\",\n\ttopical_categories = {\"Telephony\"},\n}\naliases[\"telephone\"] = \"telephony\"\naliases[\"telephones\"] = \"telephony\"\n\nlabels[\"television\"\
      ] = {\n\tdisplay = \"[[television]]\",\n\ttopical_categories = {\"Television\"},\n}\naliases[\"TV\"] = \"television\"\n\nlabels[\"tennis\"] = {\n\tdisplay = \"[[tennis]]\",\n\ttopical_categories = {\"Tennis\"},\n}\n\nlabels[\"teratology\"] = {\n\tdisplay\
      \ = \"[[teratology]]\",\n\ttopical_categories = {\"Teratology\"},\n}\n\nlabels[\"Tetris\"] = {\n\tdisplay = \"[[Tetris]]\",\n\ttopical_categories = {\"Tetris\"},\n}\n\nlabels[\"textiles\"] = {\n\tdisplay = \"[[textiles]]\",\n\ttopical_categories = {\"\
      Textiles\"},\n}\n\nlabels[\"theater\"] = {\n\tdisplay = \"[[theater]]\",\n\ttopical_categories = {\"Theater\"},\n}\naliases[\"theatre\"] = \"theater\"\n\nlabels[\"theology\"] = {\n\tdisplay = \"[[theology]]\",\n\ttopical_categories = {\"Theology\"},\n\
      }\n\nlabels[\"thermodynamics\"] = {\n\tdisplay = \"[[thermodynamics]]\",\n\ttopical_categories = {\"Thermodynamics\"},\n}\n\nlabels[\"Tibetan Buddhism\"] = {\n\tdisplay = \"[[Tibetan Buddhism]]\",\n\ttopical_categories = {\"Buddhism\"},\n}\n\nlabels[\"\
      topology\"] = {\n\tdisplay = \"[[topology]]\",\n\ttopical_categories = {\"Topology\"},\n}\n\nlabels[\"tourism\"] = {\n\tdisplay = \"[[tourism]]\",\n\ttopical_categories = {\"Tourism\"},\n}\n\nlabels[\"toxicology\"] = {\n\tdisplay = \"[[toxicology]]\",\n\
      \ttopical_categories = {\"Toxicology\"},\n}\n\nlabels[\"trading\"] = {\n\tdisplay = \"[[trading#Noun|trading]]\",\n\ttopical_categories = {\"Trading\"},\n}\n\nlabels[\"trading cards\"] = {\n\tdisplay = \"[[trading card]]s\",\n\ttopical_categories = {\"\
      Trading cards\"},\n}\n\nlabels[\"traditional Chinese medicine\"] = {\n\tdisplay = \"[[traditional Chinese medicine]]\",\n\ttopical_categories = {\"Traditional Chinese medicine\"},\n}\naliases[\"TCM\"] = \"traditional Chinese medicine\"\naliases[\"Chinese\
      \ medicine\"] = \"traditional Chinese medicine\"\n\nlabels[\"transgender\"] = {\n\tdisplay = \"[[transgender]]\",\n\ttopical_categories = {\"Transgender\"},\n}\n\nlabels[\"translation studies\"] = {\n\tdisplay = \"[[translation studies]]\",\n\ttopical_categories\
      \ = {\"Translation studies\"},\n}\n\nlabels[\"transport\"] = {\n\tdisplay = \"[[transport]]\",\n\ttopical_categories = {\"Transport\"},\n}\naliases[\"transportation\"] = \"transport\"\n\nlabels[\"traumatology\"] = {\n\tdisplay = \"[[traumatology]]\",\n\
      \ttopical_categories = {\"Emergency medicine\"},\n}\n\nlabels[\"travel\"] = {\n\tdisplay = \"[[travel]]\",\n\ttopical_categories = {\"Travel\"},\n}\n\nlabels[\"trigonometry\"] = {\n\tdisplay = \"[[trigonometry]]\",\n\ttopical_categories = {\"Trigonometry\"\
      },\n}\n\nlabels[\"two-up\"] = {\n\tdisplay = \"[[two-up]]\",\n\ttopical_categories = {\"Two-up\"},\n}\n\nlabels[\"typography\"] = {\n\tdisplay = \"[[typography]]\",\n\ttopical_categories = {\"Typography\"},\n}\naliases[\"typesetting\"] = \"typography\"\
      \n\nlabels[\"ufology\"] = {\n\tdisplay = \"[[ufology]]\",\n\ttopical_categories = {\"Ufology\"},\n}\n\nlabels[\"underwater diving\"] = {\n\tdisplay = \"[[underwater]] [[diving#Noun|diving]]\",\n\ttopical_categories = {\"Underwater diving\"},\n}\naliases[\"\
      scuba\"] = \"underwater diving\"\naliases[\"scuba diving\"] = \"underwater diving\"\n\nlabels[\"Valentinianism\"] = {\n\tdisplay = \"[[w:Valentinianism|Valentinianism]]\",\n\ttopical_categories = {\"Valentinianism\"},\n}\naliases[\"valentinianism\"] =\
      \ \"Valentinianism\"\n\nlabels[\"vegetable\"] = {\n\tdisplay = \"[[vegetable]]\",\n\ttopical_categories = {\"Vegetables\"},\n}\naliases[\"vegetables\"] = \"vegetable\"\n\nlabels[\"vehicles\"] = {\n\tdisplay = \"[[vehicle]]s\",\n\ttopical_categories = {\"\
      Vehicles\"},\n}\naliases[\"vehicle\"] = \"vehicles\"\n\nlabels[\"veterinary medicine\"] = {\n\tdisplay = \"[[veterinary medicine]]\",\n\ttopical_categories = {\"Veterinary medicine\"},\n}\n\nlabels[\"video games\"] = {\n\tdisplay = \"[[video game]]s\"\
      ,\n\ttopical_categories = {\"Video games\"},\n}\naliases[\"video gaming\"] = \"video games\"\n\nlabels[\"virology\"] = {\n\tdisplay = \"[[virology]]\",\n\ttopical_categories = {\"Virology\"},\n}\n\nlabels[\"viticulture\"] = {\n\tdisplay = \"[[viticulture]]\"\
      ,\n\ttopical_categories = {\"Horticulture\", \"Wine\"},\n}\n\nlabels[\"volcanology\"] = {\n\tdisplay = \"[[volcanology]]\",\n\ttopical_categories = {\"Volcanology\"},\n}\naliases[\"vulcanology\"] = \"volcanology\"\n\nlabels[\"volleyball\"] = {\n\tdisplay\
      \ = \"[[volleyball]]\",\n\ttopical_categories = {\"Volleyball\"},\n}\n\nlabels[\"voodoo\"] = {\n\tdisplay = \"[[voodoo]]\",\n\ttopical_categories = {\"Voodoo\"},\n}\n\nlabels[\"weather\"] = {\n\ttopical_categories = {\"Weather\"},\n}\n\nlabels[\"weaving\"\
      ] = {\n\ttopical_categories = {\"Weaving\"},\n}\n\nlabels[\"web design\"] = {\n\ttopical_categories = {\"Web design\"},\n}\n\nlabels[\"web development\"] = {\n\ttopical_categories = {\"Programming\", \"Web design\"},\n}\n\nlabels[\"weightlifting\"] = {\n\
      \ttopical_categories = {\"Weightlifting\"},\n}\n\nlabels[\"white supremacist ideology\"] = { -- but also this is often used to indicate white-supremacist-used jargon; cf \"Nazism\"\n\tdisplay = \"[[w:White supremacy|white supremacist ideology]]\",\n\t\
      topical_categories = {\"White supremacist ideology\"},\n}\naliases[\"white nationalism\"] = \"white supremacist ideology\"\naliases[\"white nationalist\"] = \"white supremacist ideology\"\naliases[\"white power\"] = \"white supremacist ideology\"\naliases[\"\
      white racism\"] = \"white supremacist ideology\"\naliases[\"white supremacy\"] = \"white supremacist ideology\"\naliases[\"white supremacism\"] = \"white supremacist ideology\"\naliases[\"white supremacist\"] = \"white supremacist ideology\"\n\nlabels[\"\
      wine\"] = {\n\tdisplay = \"[[wine]]\",\n\ttopical_categories = {\"Wine\"},\n}\n\nlabels[\"woodworking\"] = {\n\ttopical_categories = {\"Woodworking\"},\n}\n\nlabels[\"wrestling\"] = {\n\ttopical_categories = {\"Wrestling\"},\n}\n\nlabels[\"writing\"] =\
      \ {\n\ttopical_categories = {\"Writing\"},\n}\n\nlabels[\"yoga\"] = {\n\ttopical_categories = {\"Yoga\"},\n}\n\nlabels[\"zoology\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Zoology\"},\n}\n\nlabels[\"zootomy\"] = {\n\tdisplay = \"[[zootomy]]\"\
      ,\n\ttopical_categories = {\"Animal body parts\"},\n}\n\nlabels[\"Zoroastrianism\"] = {\n\tdisplay = \"[[Zoroastrianism]]\",\n\ttopical_categories = {\"Zoroastrianism\"},\n}\n\n\n-- Labels with set-type categories\n\n-- TODO: These are probably misuses\
      \ of the label template, and should be deprecated\n\nlabels[\"amino acid\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Amino acids\"},\n}\n\nlabels[\"architectural element\"] = {\n\tdisplay = \"[[architecture]]\",\n\ttopical_categories\
      \ = {\"Architectural elements\"},\n}\naliases[\"architectural elements\"] = \"architectural element\"\n\nlabels[\"asterism\"] = {\n\tdisplay = \"[[uranography]]\",\n\ttopical_categories = {\"Asterisms\"},\n}\n\nlabels[\"biblical character\"] = {\n\tdisplay\
      \ = \"[[Bible|biblical]]\",\n\ttopical_categories = {\"Biblical characters\"},\n}\naliases[\"Biblical character\"] = \"biblical character\"\naliases[\"biblical figure\"] = \"biblical character\"\naliases[\"Biblical figure\"] = \"biblical character\"\n\n\
      labels[\"book of the bible\"] = {\n\tdisplay = \"[[Bible|biblical]]\",\n\ttopical_categories = {\"Books of the Bible\"},\n}\n\nlabels[\"canid\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Canids\"},\n}\n\nlabels[\"carbohydrate\"] = {\n\
      \tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Carbohydrates\"},\n}\n\nlabels[\"coenzyme\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Coenzymes\"},\n}\n\nlabels[\"constellation\"] = {\n\tdisplay = \"[[astronomy]]\"\
      ,\n\ttopical_categories = {\"Constellations\"},\n}\n\nlabels[\"cookware\"] = {\n\tdisplay = \"[[cooking#Noun|cooking]]\",\n\ttopical_categories = {\"Cookware and bakeware\"},\n}\n\nlabels[\"disease\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories\
      \ = {\"Diseases\"},\n}\naliases[\"diseases\"] = \"disease\"\n\nlabels[\"E number\"] = {\n\tdisplay = \"[[food]] [[manufacture]]\",\n\tplain_categories = {\"E numbers\"},\n}\n\nlabels[\"element symbol\"] = {\n\tdisplay = \"[[chemistry]]\",\n\tplain_categories\
      \ = {\"Symbols for chemical elements\"},\n}\n\nlabels[\"enzyme\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Enzymes\"},\n}\n\nlabels[\"fatty acid\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Fatty acids\"\
      },\n}\n\nlabels[\"felid\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Felids\"},\n}\naliases[\"cat\"] = \"felid\"\n\nlabels[\"fictional character\"] = {\n\tdisplay = \"[[fiction]]\",\n\ttopical_categories = {\"Fictional characters\"},\n\
      }\n\nlabels[\"figure of speech\"] = {\n\tdisplay = \"[[rhetoric]]\",\n\ttopical_categories = {\"Figures of speech\"},\n}\n\nlabels[\"fish\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Fish\"},\n}\n\nlabels[\"footwear\"] = {\n\tdisplay\
      \ = \"[[clothing#Noun|clothing]]\",\n\ttopical_categories = {\"Footwear\"},\n}\n\nlabels[\"functional group prefix\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Functional group prefixes\"},\n}\n\nlabels[\"functional group suffix\"\
      ] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Functional group suffixes\"},\n}\n\nlabels[\"galaxy\"] = {\n\tdisplay = \"[[astronomy]]\",\n\ttopical_categories = {\"Galaxies\"},\n}\n\nlabels[\"genetic disorder\"] = {\n\tdisplay\
      \ = \"[[medical]] [[genetics]]\",\n\ttopical_categories = {\"Genetic disorders\"},\n}\n\nlabels[\"Greek god\"] = {\n\tdisplay = \"[[Greek]] [[mythology]]\",\n\ttopical_categories = {\"Greek deities\"},\n}\n\nlabels[\"heraldic charge\"] = {\n\tdisplay =\
      \ \"[[heraldry]]\",\n\ttopical_categories = {\"Heraldic charges\"},\n}\naliases[\"heraldiccharge\"] = \"heraldic charge\"\n\nlabels[\"Hindu god\"] = {\n\tdisplay = \"[[Hinduism]]\",\n\ttopical_categories = {\"Hindu deities\"},\n}\n\nlabels[\"hormone\"\
      ] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Hormones\"},\n}\n\nlabels[\"hydrocarbon chain prefix\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Hydrocarbon chain prefixes\"},\n}\n\nlabels[\"hydrocarbon\
      \ chain suffix\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Hydrocarbon chain suffixes\"},\n}\n\nlabels[\"incoterm\"] = {\n\tdisplay = \"[[incoterm]]\",\n\ttopical_categories = {\"Incoterms\"},\n}\n\nlabels[\"inorganic compound\"\
      ] = {\n\tdisplay = \"[[inorganic chemistry]]\",\n\ttopical_categories = {\"Inorganic compounds\"},\n}\n\nlabels[\"isotope\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Isotopes\"},\n}\n\nlabels[\"landforms\"] = {\n\tdisplay = \"[[geography]]\"\
      ,\n\ttopical_categories = {\"Landforms\"},\n}\n\nlabels[\"logical fallacy\"] = {\n\tdisplay = \"[[rhetoric]]\",\n\ttopical_categories = {\"Logical fallacies\"},\n}\n\nlabels[\"lutherie\"] = {\n\tdisplay = \"[[lutherie]]\",\n\ttopical_categories = {\"Lutherie\"\
      },\n}\n\nlabels[\"Mesopotamian god\"] = {\n\tdisplay = \"[[Mesopotamian]] [[mythology]]\",\n\ttopical_categories = {\"Mesopotamian deities\"},\n}\n\nlabels[\"metamaterial\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Metamaterials\"},\n\
      }\n\nlabels[\"military ranks\"] = {\n\tdisplay = \"[[military]]\",\n\ttopical_categories = {\"Military ranks\"},\n}\naliases[\"military rank\"] = \"military ranks\"\n\nlabels[\"military unit\"] = {\n\tdisplay = \"[[military]]\",\n\ttopical_categories =\
      \ {\"Military units\"},\n}\n\nlabels[\"mineral\"] = {\n\tdisplay = \"[[mineralogy]]\",\n\ttopical_categories = {\"Minerals\"},\n}\n\nlabels[\"mobile phones\"] = {\n\tdisplay = \"[[mobile telephone|mobile telephony]]\",\n\ttopical_categories = {\"Mobile\
      \ phones\"},\n}\naliases[\"cell phone\"] = \"mobile phones\"\naliases[\"cell phones\"] = \"mobile phones\"\naliases[\"mobile phone\"] = \"mobile phones\"\naliases[\"mobile telephony\"] = \"mobile phones\"\n\nlabels[\"muscle\"] = {\n\tdisplay = \"[[anatomy]]\"\
      ,\n\ttopical_categories = {\"Muscles\"},\n}\n\nlabels[\"mushroom\"] = {\n\tdisplay = \"[[mycology]]\",\n\ttopical_categories = {\"Mushrooms\"},\n}\naliases[\"mushrooms\"] = \"mushroom\"\n\nlabels[\"musical instruments\"] = {\n\tdisplay = \"[[music]]\"\
      ,\n\ttopical_categories = {\"Musical instruments\"},\n}\naliases[\"musical instrument\"] = \"musical instruments\"\naliases[\"musici\"] = \"musical instruments\"\ndeprecated[\"musici\"] = true\n\nlabels[\"music genre\"] = {\n\tdisplay = \"[[music]]\",\n\
      \ttopical_categories = {\"Musical genres\"},\n}\n\nlabels[\"musician\"] = {\n\tdisplay = \"[[music]]\",\n\ttopical_categories = {\"Musicians\"},\n}\n\nlabels[\"mythological creature\"] = {\n\tdisplay = \"[[mythology]]\",\n\ttopical_categories = {\"Mythological\
      \ creatures\"},\n}\n\nlabels[\"neurotoxin\"] = {\n\tdisplay = \"[[neurotoxicology]]\",\n\ttopical_categories = {\"Neurotoxins\"},\n}\n\nlabels[\"neurotransmitter\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Neurotransmitters\"},\n\
      }\n\nlabels[\"organic compound\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Organic compounds\"},\n}\n\nlabels[\"part of speech\"] = {\n\tdisplay = \"[[grammar]]\",\n\ttopical_categories = {\"Parts of speech\"},\n}\n\nlabels[\"\
      particle\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Subatomic particles\"},\n}\n\nlabels[\"pharmaceutical drug\"] = {\n\tdisplay = \"[[pharmacology]]\",\n\ttopical_categories = {\"Pharmaceutical drugs\"},\n}\n\nlabels[\"plant\"] =\
      \ {\n\tdisplay = \"[[botany]]\",\n\ttopical_categories = {\"Plants\"},\n}\n\nlabels[\"plant disease\"] = {\n\tdisplay = \"[[phytopathology]]\",\n\ttopical_categories = {\"Plant diseases\"},\n}\n\nlabels[\"poison\"] = {\n\tdisplay = \"[[toxicology]]\",\n\
      \ttopical_categories = {\"Poisons\"},\n}\n\nlabels[\"political subdivision\"] = {\n\tdisplay = \"[[government]]\",\n\ttopical_categories = {\"Political subdivisions\"},\n}\n\nlabels[\"protein\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories\
      \ = {\"Proteins\"},\n}\naliases[\"proteins\"] = \"protein\"\n\nlabels[\"rock\"] = {\n\tdisplay = \"[[petrology]]\",\n\ttopical_categories = {\"Rocks\"},\n}\n\nlabels[\"Roman god\"] = {\n\tdisplay = \"[[Roman]] [[mythology]]\",\n\ttopical_categories = {\"\
      Roman deities\"},\n}\n\nlabels[\"schools\"] = {\n\tdisplay = \"[[education]]\",\n\ttopical_categories = {\"Schools\"},\n}\n\nlabels[\"skeleton\"] = {\n\tdisplay = \"[[anatomy]]\",\n\ttopical_categories = {\"Skeleton\"},\n}\n\nlabels[\"standard of identity\"\
      ] = {\n\tdisplay = \"[[standard of identity|standards of identity]]\",\n\ttopical_categories = {\"Standards of identity\"},\n}\n\nlabels[\"star\"] = {\n\tdisplay = \"[[astronomy]]\",\n\ttopical_categories = {\"Stars\"},\n}\n\nlabels[\"steroid\"] = {\n\t\
      display = \"[[biochemistry]]\",\n\ttopical_categories = {\"Steroids\"},\n}\n\nlabels[\"steroid hormone\"] = {\n\tdisplay = \"[[biochemistry]], [[steroids]]\",\n\ttopical_categories = {\"Hormones\"},\n}\naliases[\"steroid drug\"] = \"steroid hormone\"\n\
      \nlabels[\"surface feature\"] = {\n\tdisplay = \"[[planetology]]\",\n\ttopical_categories = {\"Planetary nomenclature\"},\n}\n\nlabels[\"symptom\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories = {\"Medical signs and symptoms\"},\n}\n\nlabels[\"\
      taxonomic name\"] = {\n\tdisplay = \"[[taxonomy]]\",\n\ttopical_categories = {\"Taxonomic names\"},\n}\n\nlabels[\"tincture\"] = {\n\tdisplay = \"[[heraldry]]\",\n\ttopical_categories = {\"Heraldic tinctures\"},\n}\n\nlabels[\"video game genre\"] = {\n\
      \tdisplay = \"[[video game]]s\",\n\ttopical_categories = {\"Video game genres\"},\n}\n\nlabels[\"vitamin\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Vitamins\"},\n}\n\nlabels[\"watercraft\"] = {\n\tdisplay = \"[[nautical]]\",\n\
      \ttopical_categories = {\"Watercraft\"},\n}\n\nlabels[\"weaponry\"] = {\n\tdisplay = \"[[weaponry]]\",\n\ttopical_categories = {\"Weapons\"},\n}\naliases[\"weapons\"] = \"weaponry\"\n\nlabels[\"Wiktionary and WMF jargon\"] = {\n\tdisplay = \"[[Wiktionary]]\
      \ and [[Appendix:Glossary#W|WMF]] [[jargon]]\",\n\ttopical_categories = {\"Wiki\"},\n}\naliases[\"WMF\"] = \"Wiktionary and WMF jargon\"\naliases[\"WMF jargon\"] = \"Wiktionary and WMF jargon\"\naliases[\"Wiktionary\"] = \"Wiktionary and WMF jargon\"\n\
      aliases[\"Wiktionary jargon\"] = \"Wiktionary and WMF jargon\"\n\nlabels[\"yoga pose\"] = {\n\tdisplay = \"[[yoga]]\",\n\ttopical_categories = {\"Yoga poses\"},\n}\naliases[\"asana\"] = \"yoga pose\"\n\nlabels[\"zodiac constellations\"] = {\n\tdisplay\
      \ = \"[[astronomy]]\",\n\ttopical_categories = {\"Constellations in the zodiac\"},\n}\n\nreturn {labels = labels, aliases = aliases, deprecated = deprecated}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:14.944Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Fsubvarieties&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51713 t=1555362614786707
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:14 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1341.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 937591047, 265622853, 694145261
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4977892\" pageid=\"4977892\" ns=\"828\" title=\"Module:labels/data/subvarieties\"><revisions><rev user=\"Лорд Алекс\" timestamp=\"2019-03-27T02:05:05Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\nlocal deprecated = {}\n\nlocal m_functions = require(\"Module:labels/data/functions\")\n\nlabels[\"Aeolic\"] = {\n\tWikipedia\
      \ = \"Aeolic Greek\",\n\tplain_categories = {\"Aeolic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Aeolic Greek\"] = \"Aeolic\"\n\nlabels[\"African American Vernacular English\"] = {\n\tdisplay = \"African American Vernacular\",\n\tWikipedia\
      \ = true,\n\tplain_categories = {\"African American Vernacular English\"},\n\tlanguage = \"en\",\n}\naliases[\"AAVE\"] = \"African American Vernacular English\"\naliases[\"ebonics\"] = \"African American Vernacular English\"\n\nlabels[\"Akhmimic\"] = {\n\
      \tWikipedia = \"Coptic language#Akhmimic\",\n\tplain_categories = {\"Akhmimic Coptic\"},\n\tlanguage = \"cop\",\n}\n\nlabels[\"Alsatian German\"] = {\n\tdisplay = \"Alsatian\",\n\tWikipedia = \"Alsatian dialect\",\n\tplain_categories = {\"Alsatian German\"\
      },\n\tlanguage = \"gsw\",\n}\naliases[\"Elsässisch\"] = \"Alsatian German\"\n\nlabels[\"American spelling\"] = {\n\tdisplay = \"American spelling\",\n\tWikipedia = \"American and British English spelling differences\",\n\tplain_categories = {\"American\
      \ English forms\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Anglo-Norman\"] = {\n\tWikipedia = \"Anglo-Norman language\",\n\tplain_categories = {\"Anglo-Norman Old French\"},\n\tlanguage = \"fro\",\n}\n\nlabels[\"Anglian\"] = {\n\tWikipedia = \"Anglian dialect\"\
      ,\n\tplain_categories = { \"Anglian Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Ararat\"] = {\n\tWikipedia = \"Araratian dialect\",\n\tplain_categories = {\"Ararat Armenian\"},\n\tlanguage = \"hy\",\n}\n\nlabels[\"Arbëresh\"] = {\n\tWikipedia\
      \ = \"Arbëresh\",\n\tplain_categories = {\"Arbëresh Albanian\"},\n\tlanguage = \"sq\",\n}\naliases[\"Arbëreshë\"] = \"Arbëresh\"\naliases[\"Arbërisht\"] = \"Arbëresh\"\n\nlabels[\"Arcadocypriot\"] = {\n\tWikipedia = \"Arcadocypriot Greek\",\n\tplain_categories\
      \ = {\"Arcadocypriot Ancient Greek\"},\n\tlanguage = \"grc\"\n}\naliases[\"Arcadocypriot Greek\"] = \"Arcadocypriot\"\n\nlabels[\"Arvanitika\"] = {\n\tWikipedia = \"Arvanitika\",\n\tplain_categories = {\"Arvanitika Albanian\"},\n\tlanguage = \"sq\",\n\
      }\n\nlabels[\"Attic\"] = {\n\tWikipedia = \"Attic Greek\",\n\tplain_categories = {\"Attic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Attic Greek\"] = \"Attic\"\n\nlabels[\"Old Attic\"] = {\n\tWikipedia = \"Attic Greek\",\n\tplain_categories\
      \ = {\"Attic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\n\nlabels[\"Old Hittite\"] = {\n\tWikipedia = true,\n\tlanguage = \"hit\",\n\tplain_categories = { \"Old Hittite\" },\n}\n\nlabels[\"Australian Aboriginal English\"] = {\n\tdisplay = \"Australian\
      \ Aboriginal\",\n\tWikipedia = true,\n\tplain_categories = {\"Australian Aboriginal English\"},\n\tlanguage = \"en\",\n}\naliases[\"Australian Aboriginal\"] = \"Australian Aboriginal English\"\n\nlabels[\"Australian English\"] = {\n\tdisplay = \"Australia\"\
      ,\n\tWikipedia = true,\n\tplain_categories = {\"Australian English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Balhae\"] = {\n\tplain_categories = {\"Balhae Old Korean\"},\n\tlanguage = \"oko\",\n}\n\nlabels[\"Balkar\"] = {\n\tplain_categories = {\"Balkar\"\
      },\n\tlanguage = \"krc\",\n}\n\nlabels[\"Batangas\"] = {\n\tdisplay = \"[[w:Batangas Tagalog|Batangas]]\",\n\tplain_categories = { \"Batangas Tagalog\" },\n\tlanguage = \"tl\",\n}\naliases[\"Batangas Tagalog\"] = \"Batangas\"\naliases[\"Batangueño\"] =\
      \ \"Batangas\"\n\n-- For Standard German as used in Bavaria\nlabels[\"Bavaria\"] = {\n\tWikipedia = \"Bavarian language#Use\",\n\tplain_categories = {\"Bavarian German\"},\n\tlanguage = \"de\",\n}\n\nlabels[\"Bavarian\"] = {\n\tWikipedia = \"Old High German\"\
      ,\n\tplain_categories = { \"Bavarian Old High German\" },\n\tlanguage = \"goh\",\n}\n\nlabels[\"Biblical Hebrew\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Biblical Hebrew\"},\n\tlanguage = \"he\",\n}\naliases[\"hbo\"] = \"Biblical Hebrew\"\n\
      aliases[\"Classical Hebrew\"] = \"Biblical Hebrew\"\naliases[\"Ancient Hebrew\"] = \"Biblical Hebrew\"\naliases[\"Old Hebrew\"] = \"Biblical Hebrew\"\n\nlabels[\"Birmingham\"] = {\n\tdisplay = \"[[wikipedia:Brummie|Birmingham]]\",\n\tplain_categories =\
      \ {\"Birmingham English\"},\n\tlanguage = \"en\",\n}\naliases[\"Brummie\"] = \"Birmingham\"\naliases[\"Brummy\"] = \"Birmingham\"\n\nlabels[\"Boeotian\"] = {\n\tWikipedia = \"Boeotian Greek\",\n\tplain_categories = {\"Boeotian Ancient Greek\"},\n\tlanguage\
      \ = \"grc\",\n}\naliases[\"Boeotian Greek\"] = \"Boeotian\"\n\nlabels[\"Bohairic\"] = {\n\tWikipedia = \"Coptic language#Bohairic\",\n\tplain_categories = {\"Bohairic Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Memphitic\"] = \"Bohairic\"\n\nlabels[\"\
      Bombay\"] = {\n\tWikipedia = \"Bombay Hindi\",\n\tplain_categories = {\"Bombay Hindi\"},\n\tlanguage = \"hi\",\n}\naliases[\"Bambaiyya\"] = \"Bombay\"\naliases[\"Mumbai\"] = \"Bombay\"\n\nlabels[\"Bokmål\"] = {\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Norwegian Bokmål\"},\n\tlanguage = \"nb\",\n}\n\nlabels[\"Border Scots\"] = {\n\tplain_categories = {\"Border Scots\"},\n\tlanguage = \"sco\",\n}\n\nlabels[\"Braj\"] = {\n    display = \"[[w:Braj Bhasha|Braj]]\",\n\tplain_categories = {\"Braj Bhā\
      ṣā\"},\n\tlanguage = \"hi\",\n}\n\nlabels[\"British English\"] = {\n\tdisplay = \"British\",\n\tWikipedia = true,\n\tplain_categories = {\"British English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"British spelling\"] = {\n\tdisplay = \"British spelling\"\
      ,\n\tWikipedia = \"American and British English spelling differences\",\n\tplain_categories = {\"British English forms\"},\n\tlanguage = \"en\",\n}\naliases[\"Commonwealth spelling\"] = \"British spelling\"\n\nlabels[\"Buddhist Hybrid Sanskrit\"] = {\n\
      \    display = \"Buddhist Hybrid Sanskrit\",\n\tWikipedia = true,\n    plain_categories = {\"Buddhist Hybrid Sanskrit\"},\n    language = \"sa\",\n}\naliases[\"BHS\"] = \"Buddhist Hybrid Sanskrit\"\n\nlabels[\"Byzantine\"] = {\n\tWikipedia = \"Medieval\
      \ Greek\",\n\tplain_categories = {\"Byzantine Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Byzantine Greek\"] = \"Byzantine\"\naliases[\"Medieval Greek\"] = \"Byzantine\"\n\nlabels[\"Bzyb\"] = {\n\tdisplay = \"[[w:Bzyb dialect|Bzyb]]\",\n\tplain_categories\
      \ = {\"Bzyb Abkhaz\"},\n\tlanguage = \"ab\",\n}\naliases[\"Bzyp\"] = \"Bzyb\"\n\nlabels[\"Canadian English\"] = {\n\tdisplay = \"Canada\",\n\tWikipedia = true,\n\tplain_categories = {\"Canadian English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Canadian\
      \ spelling\"] = {\n\tdisplay = \"Canadian\",\n\tWikipedia = true,\n\tplain_categories = {\"Canadian English forms\"},\n\tlanguage = \"en\",\n}\n\n-- Two instances of the language code \"yue\" being used with this label\nlabels[\"Cantonese\"] = {\n\tdisplay\
      \ = \"[[Cantonese]]\",\n\tplain_categories = {\"Cantonese Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Catholic\"] = {\n\tdisplay = \"[[w:Goan Catholics|Catholic]]\",\n\tplain_categories = {\"Catholic Konkani\"},\n\tlanguage = \"kok\"\n}\n\nlabels[\"\
      Central Standard\"] = {\n\tdiplay = \"Central Standard\",\n\tplain_categories = {\"Central Standard Assamese\"},\n\tlanguage = \"as\",\n}\n\nlabels[\"Chakavian\"] = {\n\tdisplay = \"[[Chakavian]]\",\n\tplain_categories = {\"Chakavian Serbo-Croatian\"},\n\
      \tlanguage = \"sh\",\n}\naliases[\"Čakavian\"] = \"Chakavian\"\n\nlabels[\"Cham Albanian\"] = {\n\tdisplay = \"Cham\",\n\tWikipedia = \"Cham Albanian dialect\",\n\tplain_categories = {\"Cham Albanian\"},\n\tlanguage = \"sq\",\n}\n\n--[=[ Currently empty:\n\
      labels[\"Chinglish\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Chinglish\"},\n\tlanguage = \"\",\n}\n]=]\n\nlabels[\"Clay Frisian\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Clay Frisian\"},\n\tlanguage = \"fy\",\n}\n\nlabels[\"Cockney\"\
      ] = {\n\tWikipedia = \"Cockney#Speech\",\n\tplain_categories = {\"Cockney English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Cois Fharraige\"] = {\n\tWikipedia = \"Gaeltacht Cois Fharraige\",\n\tplain_categories = {\"Connacht Irish\"},\n\tlanguage = \"ga\"\
      ,\n}\naliases[\"Cois Fhairrge\"] = \"Cois Fharraige\"\n\nlabels[\"Cretan\"] = {\n\tWikipedia = \"Cretan Greek\",\n\tplain_categories = {\"Cretan Greek\"},\n\tlanguage = \"el\",\n}\naliases[\"cretan\"] = \"Cretan\"\n\nlabels[\"Dari\"] = {\n\tdisplay = \"\
      Dari (Afghanistan)\",\n\tWikipedia = \"Dari (Persian)\",\n\tplain_categories = {\"Dari Persian\"},\n\tlanguage = \"fa\",\n}\n\nlabels[\"Datian Min\"] = {\n\tdisplay = \"Datian Min\",\n\tWikipedia = true,\n\tplain_categories = {\"Datian Min Chinese\"},\n\
      \tlanguage = \"zh\",\n}\n\nlabels[\"Daytshmerish\"] = {\n\tdisplay = \"[[דײַטשמעריש|Daytshmerish]]\",\n\tplain_categories = {\"Daytshmerish Yiddish\"},\n\tlanguage = \"yi\",\n}\naliases[\"daytshmerish\"] = \"Daytshmerish\"\n\nlabels[\"De'kwana\"] = {\n\
      \tdisplay = \"De'kwana dialect\",\n\tplain_categories = {\"De'kwana Maquiritari\"},\n\tlanguage = \"mch\",\n}\naliases[\"De'kwana dialect\"] = \"De'kwana\"\n\nlabels[\"Delhi-Meerut\"] = {\n\tWikipedia = \"Ashokan Edicts in Delhi#Delhi-Meerut pillar\",\n\
      \tdisplay = \"Delhi-Meerut\",\n\tplain_categories = {\"Delhi-Meerut Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\naliases[\"Meerut\"] = \"Delhi-Meerut\"\n\nlabels[\"Delhi-Topra\"] = {\n\tWikipedia = \"Ashokan Edicts in Delhi#Delhi-Topra pillar\",\n\
      \tdisplay = \"Delhi-Topra\",\n\tplain_categories = {\"Delhi-Topra Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\naliases[\"Topra\"] = \"Delhi-Topra\"\n\nlabels[\"Dhauli\"] = {\n\tWikipedia = true,\n\tdisplay = \"Dhauli\",\n\tplain_categories = {\"\
      Dhauli Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Digor\"] = {\n\tdisplay = \"Digor dialect\",\n\tplain_categories = {\"Digor Ossetian\"},\n\tlanguage = \"os\",\n}\naliases[\"Digor dialect\"] = \"Digor\"\n\nlabels[\"Doric\"] = {\n\t\
      Wikipedia = \"Doric Greek\",\n\tplain_categories = {\"Doric Ancient Greek\"},\n\tlanguage = \"grc\",\n}\n\nlabels[\"Drasi\"] = {\n\tWikipedia = \"Dras\",\n\tplain_categories = {\"Dras Shina\"},\n\tlanguage = \"scl\",\n}\n\nlabels[\"Early West Saxon\"]\
      \ = {\n\tdisplay = \"Early West Saxon\",\n\tWikipedia = true,\n\tplain_categories = {\"Early West Saxon Old English\"},\n\tlanguage = \"ang\",\n}\n\nlabels[\"Early Middle English\"] = {\n\tdisplay = \"Early Middle English\",\n\tWikipedia = \"Middle English#Early\
      \ Middle English\",\n\tplain_categories = {\"Early Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Early ME\"] = \"Early Middle English\"\naliases[\"Earlier ME\"] = \"Early Middle English\"\naliases[\"early ME\"] = \"Early Middle English\"\n\n\
      labels[\"East Anglian English\"] = {\n\tdisplay = \"East Anglia\",\n\tWikipedia = true,\n\tplain_categories = {\"East Anglian English\"},\n\tlanguage = \"en\",\n}\n\n-- for East Frisian dialectal German Low German, not the Frisianic language\nlabels[\"\
      East Frisian\"] = {\n\tWikipedia = \"East Frisian Low Saxon\",\n\tplain_categories = {\"East Frisian Low German\"},\n\tlanguage = \"nds-de\",\n}\n\nlabels[\"East Germanic\"] = {\n\tWikipedia = \"East Germanic languages\",\n\tplain_categories = {\"East\
      \ Proto-Germanic\"},\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"East Midland Middle English\"] = {\n\tdisplay = \"East Midlands\",\n\tplain_categories = {\"East Midland Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"East Midlands ME\"] = \"East\
      \ Midland Middle English\"\naliases[\"East Midland ME\"] = \"East Midland Middle English\"\n\nlabels[\"East Midlands English\"] = {\n\tdisplay = \"East Midlands\",\n\tWikipedia = true,\n\tplain_categories = {\"East Midlands English\"},\n\tlanguage = \"\
      en\",\n}\n\nlabels[\"East Palatine\"] = {\n\tdisplay = \"Vorderpfälzisch\",\n\tWikipedia = \"Palatine German language\",\n\tplain_categories = {\"East Palatine German\"},\n\tlanguage = \"\",\n}\naliases[\"Vorderpfälzisch\"] = \"East Palatine\"\n\nlabels[\"\
      Eastern Armenian\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Eastern Armenian\"},\n\tlanguage = \"hy\",\n}\n\nlabels[\"Eastern Catalan\"] = {\n\tWikipedia = \"Catalan dialects\",\n\tplain_categories = {\"Eastern Catalan\"},\n\tlanguage = \"ca\"\
      ,\n}\n\nlabels[\"Eastern Standard\"] = {\n\tdiplay = \"Eastern Standard\",\n\tplain_categories = {\"Eastern Standard Assamese\"},\n\tlanguage = \"as\",\n}\n\nlabels[\"Ecclesiastical Latin\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Ecclesiastical\
      \ Latin\"},\n\tlanguage = \"la\",\n}\naliases[\"Church Latin\"] = \"Ecclesiastical Latin\"\n\nlabels[\"Ekavian\"] = {\n\tdisplay = \"[[Ekavian]]\",\n}\n\nlabels[\"Epic\"] = {\n\tWikipedia = \"Homeric Greek\",\n\tplain_categories = {\"Epic Ancient Greek\"\
      },\n\tlanguage = \"grc\",\n}\naliases[\"Homeric\"] = \"Epic\"\naliases[\"Epic Greek\"] = \"Epic\"\naliases[\"Homeric Greek\"] = \"Homeric\"\n\nlabels[\"European French\"] = {\n\tdisplay = \"Europe\",\n\tWikipedia = true,\n\tplain_categories = {\"European\
      \ French\"},\n\tlanguage = \"fr\",\n}\n\nlabels[\"Fante\"] = {\n\tdisplay = \"[[w:Fante dialect|Fante]]\",\n\tplain_categories = {\"Fante Akan\"},\n\tlanguage = \"ak\",\n}\naliases[\"Fantse\"] = \"Fante\"\naliases[\"Fanti\"] = \"Fante\"\naliases[\"Mfantse\"\
      ] = \"Fante\"\n\nlabels[\"Fayyumic\"] = {\n\tWikipedia = \"Coptic language#Fayyumic\",\n\tplain_categories = {\"Fayyumic Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Faiyumic\"] = \"Fayyumic\"\naliases[\"Bashmuric\"] = \"Fayyumic\"\n\nlabels[\"East\
      \ and West Flanders\"] = {\n\tdisplay = \"[[w:East Flanders|East]] and [[w:West Flanders|West Flanders]]\",\n\tplain_categories = {\"East and West Flemish Dutch\"},\n\tlanguage = \"nl\",\n}\naliases[\"Flanders\"] = \"East and West Flanders\"\naliases[\"\
      Flemish\"] = \"East and West Flanders\"\n\nlabels[\"Gan\"] = {\n\tdisplay = \"[[Gan]]\",\n\tplain_categories = {\"Gan Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Geordie\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Geordie English\"},\n\t\
      language = \"en\",\n}\n\nlabels[\"Gheg\"] = {\n\tWikipedia = \"Gheg Albanian\",\n\tplain_categories = {\"Gheg Albanian\"},\n\tlanguage = \"sq\",\n}\n\nlabels[\"Gilgiti\"] = {\n\tWikipedia = \"Gilgit\",\n\tplain_categories = {\"Gilgit Shina\"},\n\tlanguage\
      \ = \"scl\",\n}\n\nlabels[\"Girnar\"] = {\n\tdisplay = \"Girnar\",\n\tWikipedia = true,\n\tplain_categories = {\"Girnar Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Gottscheerisch\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Gottscheerisch\
      \ German\"},\n\tlanguage = \"\",\n}\naliases[\"Gottscheerish\"] = \"Gottscheerisch\"\n\nlabels[\"Guardiol\"] = {\n\tWikipedia = \"Guardia Piemontese\",\n\tplain_categories = {\"Guardiol Occitan\"},\n\tlanguage = \"oc\",\n}\n\nlabels[\"Hainan Min\"] = {\n\
      \tdisplay = \"Hainan Min\",\n\tWikipedia = \"Hainanese\",\n\tplain_categories = {\"Hainan Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Hakka\"] = {\n\tdisplay = \"[[Hakka]]\",\n\tplain_categories = {\"Hakka Chinese\"},\n\tlanguage = \"zh\",\n}\n\
      \nlabels[\"Hamburgisch\"] = {\n\tWikipedia = \"Hamburgisch dialect\",\n\tplain_categories = {\"Hamburgisch Low German\"},\n\tlanguage = \"nds-de\",\n}\n\nlabels[\"Hamshen\"] = {\n\tWikipedia = \"Homshetsi dialect\",\n\tplain_categories = {\"Hamshen Armenian\"\
      },\n\tlanguage = \"hy\",\n}\naliases[\"Homshetsi\"] = \"Hamshen\"\naliases[\"Homshetsma\"] = \"Hamshen\"\n\nlabels[\"Hariyanvi\"] = {\n\tdisplay = \"Hariyāṇvī\",\n\tWikipedia = \"Hariyanvi language\",\n\tplain_categories = {\"Hariyāṇvī\"},\n\tlanguage\
      \ = \"hi\",\n}\naliases[\"Hariyana\"] = \"Hariyanvi\"\n\nlabels[\"Helsinki slang\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Helsinki slang\"},\n\tlanguage = \"fi\",\n}\n\nlabels[\"Hessian\"] = {\n\tWikipedia = \"Hessian dialects\",\n\tplain_categories\
      \ = {\"Hessian German\"},\n\tlanguage = \"de\",\n}\naliases[\"Hessisch\"] = \"Hessian\"\n\nlabels[\"Hong Kong Hakka\"] = {\n\tdisplay = \"Hong Kong [[Hakka]]\",\n\tplain_categories = {\"Hong Kong Hakka\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Huizhou\"\
      ] = {\n\tdisplay = \"[[Huizhou]]\",\n\tplain_categories = {\"Huizhou Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Hulu Pahang\"] = {\n\tplain_categories = {\"Hulu Pahang Malay\"},\n\tlanguage = \"ms\",\n}\n\nlabels[\"Ikavian\"] = {\n\tdisplay = \"\
      [[Ikavian]]\",\n\tplain_categories = {\"Ikavian Serbo-Croatian\"},\n\tlanguage = \"sh\",\n}\n\nlabels[\"Indian English\"] = {\n\tdisplay = \"India\",\n\tWikipedia = true,\n\tplain_categories = {\"Indian English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"\
      Ingilo\"] = {\n\tWikipedia = \"Ingiloy people\",\n\tplain_categories = {\"Ingilo Georgian\"},\n\tlanguage = \"ka\",\n}\naliases[\"Ingiloy\"] = \"Ingilo\"\naliases[\"Saingilo\"] = \"Ingilo\"\n\nlabels[\"Inner Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About\
      \ Mbugu|Ma'a]]\",\n\tplain_categories = {\"Inner Mbugu\"},\n\tlanguage = \"mhd\",\n}\naliases[\"inner Mbugu\"] = \"Inner Mbugu\"\n\nlabels[\"Inuktun\"] = {\n\tplain_categories = {\"Inuktun Inuktitut\"},\n\tlanguage = \"iu\",\n}\naliases[\"Polar Eskimo\"\
      ] = \"Inuktun\"\n\nlabels[\"Inuttut\"] = {\n\tplain_categories = {\"Inuttut Inuktitut\"},\n\tlanguage = \"iu\",\n}\naliases[\"Nunatsiavummiutut\"] = \"Inuttut\"\naliases[\"Labradorimiutut\"] = \"Inuttut\"\n\nlabels[\"Ionic\"] = {\n\tWikipedia = \"Ionic\
      \ Greek\",\n\tplain_categories = {\"Ionic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Ionic Greek\"] = \"Ionic\"\n\nlabels[\"Irish English\"] = {\n\tdisplay = \"Ireland\",\n\tWikipedia = true,\n\tplain_categories = {\"Irish English\"},\n\tlanguage\
      \ = \"en\",\n}\n\nlabels[\"Iron\"] = {\n\tdisplay = \"Iron dialect\",\n\tplain_categories = {\"Iron Ossetian\"},\n\tlanguage = \"os\",\n}\naliases[\"Iron dialect\"] = \"Iron\"\n\nlabels[\"Itivimuit\"] = {\n\tplain_categories = {\"Itivimuit Inuktitut\"\
      },\n\tlanguage = \"iu\",\n}\n\nlabels[\"Ivory Coast French\"] = {\n\tdisplay = \"Ivory Coast\",\n\tWikipedia = \"African French#Abidjan French vocabulary\",\n\tplain_categories = {\"Ivorian French\"},\n\tlanguage = \"fr\",\n}\naliases[\"Ivory Coast\"]\
      \ = \"Ivory Coast French\"\naliases[\"Côte d’Ivoire\"] = \"Ivory Coast French\"\naliases[\"Côte d'Ivoire\"] = \"Ivory Coast French\"\naliases[\"Ivorian\"] = \"Ivory Coast French\"\n\nlabels[\"Ivory Coast French slang\"] = {\n\tdisplay = \"Ivory Coast slang\"\
      ,\n\tWikipedia = \"fr:Nouchi\",\n\tplain_categories = {\"Ivorian French\"},\n\tlanguage = \"fr\",\n}\naliases[\"nouchi\"] = \"Ivory Coast French slang\"\naliases[\"Nouchi\"] = \"Ivory Coast French slang\"\naliases[\"noussi\"] = \"Ivory Coast French slang\"\
      \naliases[\"Noussi\"] = \"Ivory Coast French slang\"\naliases[\"Ivory Coast slang\"] = \"Ivory Coast French slang\"\naliases[\"Côte d’Ivoire slang\"] = \"Ivory Coast French slang\"\naliases[\"Côte d'Ivoire slang\"] = \"Ivory Coast French slang\"\naliases[\"\
      Ivorian slang\"] = \"Ivory Coast French slang\"\n\nlabels[\"Jamaican English\"] = {\n\tdisplay = \"Jamaican\",\n\tWikipedia = true,\n\tplain_categories = {\"Jamaican English\"},\n\tlanguage = \"en\",\n}\naliases[\"Jamaican Standard English\"] = \"Jamaican\
      \ English\"\n\nlabels[\"Jaugada\"] = {\n\tdisplay = \"Jaugada\",\n\tWikipedia = true,\n\tplain_categories = {\"Jaugada Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Jewish Babylonian Aramaic\"] = {\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Jewish Babylonian Aramaic\"},\n\tlanguage = \"arc\",\n}\naliases[\"JBA\"] = \"Jewish Babylonian Aramaic\"\naliases[\"Talmudic Aramaic\"] = \"Jewish Babylonian Aramaic\"\naliases[\"Babylonian Talmudic Aramaic\"] = \"Jewish Babylonian Aramaic\"\n\n\
      labels[\"Kajkavian\"] = {\n\tdisplay = \"[[Kajkavian]]\",\n\tplain_categories = {\"Kajkavian Serbo-Croatian\"},\n\tlanguage = \"sh\",\n}\n\nlabels[\"Karabakh\"] = {\n\tWikipedia = \"Karabakh dialect (Armenian)\",\n\tplain_categories = {\"Karabakh Armenian\"\
      },\n\tlanguage = \"hy\",\n}\naliases[\"Gharabagh\"] = \"Karabakh\"\naliases[\"Artsakh\"] = \"Karabakh\"\n\nlabels[\"Kalsi\"] = {\n\tdisplay = \"Kalsi\",\n\tplain_categories = {\"Kalsi Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Kamrupi\"\
      ] = {\n\tdisplay = \"[[w:Kamprui dialect|Kamrupi]]\",\n\tplain_categories = { \"Kamrupi Assamese\" },\n\tlanguage = \"as\",\n}\naliases[\"Kamruipa\"] = \"Kamrupi\"\naliases[\"Kamrupiya\"] = \"Kamrupi\"\naliases[\"Kamrup\"] = \"Kamrupi\"\n\nlabels[\"Kansai\"\
      ] = {\n\tWikipedia = \"Kansai dialect\",\n\tplain_categories = {\"Kansai Japanese\"},\n\tlanguage = \"ja\",\n}\n\nlabels[\"Karachay\"] = {\n\tplain_categories = {\"Karachay\"},\n\tlanguage = \"krc\",\n}\n\nlabels[\"Katharevousa\"] = {\n\tdisplay = \"[[Katharevousa#English|Katharevousa]]\"\
      ,\n\tplain_categories = { \"Katharevousa\" },\n\tlanguage = \"el\",\n}\n\n--[=[\ncategory has been deleted\nlabels[\"Kichwa\"] = {\n\tdisplay = \"Standard Ecuadorian Kichwa\",\n\tWikipedia = \"Kichwa language\",\n\tplain_categories = {\"Standard Kichwa\"\
      },\n\tlanguage = \"\",\n}\n]=]\n\n--[[\tThis will conflict with a Kentish dialect label for Modern English,\n\t\tif someone wants to make one. ]]\nlabels[\"Kentish\"] = {\n\tWikipedia = \"Kentish dialect (Old English)\",\n\tplain_categories = { \"Kentish\
      \ Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Koine\"] = {\n\tdisplay = \"Koine\",\n\tWikipedia = \"Koine Greek\",\n\tplain_categories = {\"Koine Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Koine Greek\"] = \"Koine\"\naliases[\"Hellenistic\"\
      ] = \"Koine\"\naliases[\"Hellenistic Koine\"] = \"Koine\"\n\nlabels[\"Kölsch\"] = {\n\tWikipedia = \"Colognian language\",\n\tplain_categories = {\"Kölsch Central Franconian\"},\n\tlanguage = \"gmw-cfr\",\n}\naliases[\"Colognian\"] = \"Kölsch\"\naliases[\"\
      Cologne\"] = \"Kölsch\"\naliases[\"Köln\"] = \"Kölsch\"\n\nlabels[\"Kromanti\"] = {\n\tdisplay = \"Kromanti spirit possession language\",\n\tWikipedia = \"Jamaican Maroon spirit-possession language\",\n\tplain_categories = {\"Kromanti Akan\"},\n\tlanguage\
      \ = \"ak\",\n}\n\nlabels[\"Late Latin\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Late Latin\"},\n\tlanguage = \"la\",\n}\n\nlabels[\"Latin America\"] = {\n\tplain_categories = {\"Latin American Spanish\"},\n\tlanguage = \"es\",\n}\naliases[\"\
      Latin American Spanish\"] = \"Latin America\"\n\nlabels[\"Late West Saxon\"] = {\n\tWikipedia = \"Late West Saxon\",\n\tplain_categories = { \"Late West Saxon Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Late Middle English\"] = {\n\tdisplay\
      \ = \"Late Middle English\",\n\tWikipedia = \"Middle English#Late Middle English\",\n\tplain_categories = {\"Late Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Late ME\"] = \"Late Middle English\"\naliases[\"Later ME\"] = \"Late Middle English\"\
      \naliases[\"late ME\"] = \"Late Middle English\"\n\nlabels[\"Leizhou Min\"] = {\n\tdisplay = \"Leizhou Min\",\n\tWikipedia = true,\n\tplain_categories = {\"Leizhou Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Lorraine Franconian\"] = {\n\tdisplay\
      \ = \"[[w:Lorraine Franconian|Lorraine Franconian]]\",\n\tWikipedia = true,\n\tplain_categories = {\"Lorraine Franconian\"},\n\tlanguage = \"\",\n}\naliases[\"Lorrainian\"] = \"Lorraine Franconian\"\naliases[\"Lothringian\"] = \"Lorraine Franconian\"\n\
      aliases[\"Lothringisch\"] = \"Lorraine Franconian\"\n\n\nlabels[\"Louisiana French\"] = {\n\tdisplay = \"Louisiana\",\n\tWikipedia = \"Cajun French\",\n\tplain_categories = {\"Louisiana French\"},\n\tlanguage = \"fr\",\n}\n\nlabels[\"Low Prussian\"] =\
      \ {\n\tWikipedia = \"Low Prussian dialect\",\n\tplain_categories = {\"Low Prussian German Low German\"},\n\tlanguage = \"nds-de\",\n}\n\nlabels[\"Lowlands Scots\"] = {\n\tplain_categories = {\"Lowlands Scots\"},\n\tlanguage = \"sco\",\n}\n\nlabels[\"Lycopolitan\"\
      ] = {\n\tWikipedia = \"Coptic language#Lycopolitan\",\n\tplain_categories = {\"Lycopolitan Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Subakhmimic\"] = \"Lycopolitan\"\naliases[\"Assiutic\"] = \"Lycopolitan\"\n\nlabels[\"Maastrichtian\"] = {\n\tWikipedia\
      \ = \"Maastrichtian dialect\",\n\tplain_categories = {\"Maastrichtian Limburgish\"},\n\tlanguage = \"li\",\n}\n\nlabels[\"Mandarin\"] = {\n\tdisplay = \"[[Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"\
      Maniot\"] = {\n\tdisplay = \"Maniot dialect\",\n\tWikipedia = \"Maniot dialect\",\n\tplain_categories = {\"Maniot Greek\"},\n\tlanguage = \"el\",\n}\naliases['maniot'] = \"Maniot\"\n\nlabels[\"Mansehra\"] = {\n\tdisplay = \"Mansehra\",\n\tWikipedia = true,\n\
      \tplain_categories = {\"Mansehra Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Mecklenburgisch Low German\"] = {\n\tdisplay = \"Mecklenburgisch\",\n\tWikipedia = \"Mecklenburgisch dialect\",\n\tplain_categories = {\"Mecklenburgisch Low\
      \ German\"},\n\tlanguage = \"nds-de\",\n}\naliases[\"Mecklenburgisch\"] = \"Mecklenburgisch Low German\"\naliases[\"Mecklenburg\"] = \"Mecklenburgisch Low German\"\n\nlabels[\"Medieval Hebrew\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Medieval\
      \ Hebrew\"},\n\tlanguage = \"he\",\n}\n\nlabels[\"Medieval Latin\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Medieval Latin\"},\n\tlanguage = \"la\",\n}\n\nlabels[\"Megarian\"] = {\n\tWikipedia = \"Doric Greek\",\n\tplain_categories = {\"Doric\
      \ Ancient Greek\"},\n\tlanguage = \"grc\",\n}\n\nlabels[\"Mercian\"] = {\n\tWikipedia = \"Mercian dialect\",\n\tplain_categories = { \"Mercian Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Middle Hittite\"] = {\n\tWikipedia = true,\n\tlanguage\
      \ = \"hit\",\n\tplain_categories = { \"Middle Hittite\" },\n}\n\nlabels[\"Midlands English\"] = {\n\tdisplay = \"Midlands\",\n\tWikipedia = true,\n\tplain_categories = {\"Midlands English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Min\"] = {\n\tdisplay =\
      \ \"[[Min]]\",\n\tplain_categories = {\"Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Bei\"] = {\n\tdisplay = \"[[Min Bei]]\",\n\tplain_categories = {\"Min Bei Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Dong\"] = {\n\tdisplay = \"\
      [[Min Dong]]\",\n\tplain_categories = {\"Min Dong Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Nan\"] = {\n\tdisplay = \"[[Min Nan]]\",\n\tplain_categories = {\"Min Nan Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Zhong\"] = {\n\tdisplay\
      \ = \"[[Min Zhong]]\",\n\tplain_categories = {\"Min Zhong Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Mishnaic Hebrew\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Mishnaic Hebrew\"},\n\tlanguage = \"he\",\n}\naliases[\"Mishnaic\"] = \"Mishnaic\
      \ Hebrew\"\n\nlabels[\"Mistralian\"] = {\n\tWikipedia = \"Occitan language#Writing system\",\n\tplain_categories = {\"Mistralian Occitan\"},\n\tlanguage = \"oc\",\n}\n\nlabels[\"Mooring\"] = {\n\tWikipedia = \"Mooring (North Frisian dialect)\",\n\tplain_categories\
      \ = {\"Mooring North Frisian\"},\n\tlanguage = \"frr\",\n}\naliases[\"Mooring dialect\"] = \"Mooring\"\n\nlabels[\"Moselle Franconian\"] = {\n\tWikipedia = \"Moselle Franconian dialects\",\n\tplain_categories = {\"Moselle Central Franconian\"},\n\tlanguage\
      \ = \"gmw-cfr\",\n}\naliases[\"Moselfränkisch\"] = \"Moselle Franconian\"\n\nlabels[\"Multicultural London English\"] = {\n\tdisplay = \"MLE\",\n\tWikipedia = true,\n\tplain_categories = {\"Multicultural London English\"},\n\tlanguage = \"en\",\n}\naliases[\"\
      MLE\"] = \"Multicultural London English\"\n\nlabels[\"New Hittite\"] = {\n\tWikipedia = true,\n\tlanguage = \"hit\",\n\tplain_categories = { \"New Hittite\" },\n}\naliases[\"Neo-Hittite\"] = \"New Hittite\"\n\nlabels[\"New Latin\"] = {\n\tWikipedia = true,\n\
      \tplain_categories = {\"New Latin\"},\n\tlanguage = \"la\",\n}\n\nlabels[\"New Sanskrit\"] = {\n\tWikipedia = \"Sanskrit Revival\",\n\tplain_categories = {\"New Sanskrit\"},\n\tlanguage = \"sa\",\n}\naliases[\"Neo-Sanskrit\"] = \"New Sanskrit\"\n\nlabels[\"\
      New Zealand English\"] = {\n\tdisplay = \"New Zealand\",\n\tWikipedia = true,\n\tplain_categories = {\"New Zealand English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Non-Oxford British spelling\"] = {\n\tdisplay = \"Non-[[w:Oxford spelling|Oxford]] [[British\
      \ English]]\",\n\tplain_categories = {\"British English forms\"},\n\tlanguage = \"en\",\n}\naliases[\"non-Oxford British spelling\"] = \"Non-Oxford British spelling\"\naliases[\"Non-Oxford\"] = \"Non-Oxford British spelling\"\naliases[\"non-Oxford\"] =\
      \ \"Non-Oxford British spelling\"\n\nlabels[\"Normal Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About Mbugu|Mbugu]]\",\n\tplain_categories = {\"Normal Mbugu\"},\n\tlanguage = \"mhd\",\n}\naliases[\"normal Mbugu\"] = \"Normal Mbugu\"\n\nlabels[\"North Germanic\"\
      ] = {\n\tWikipedia = \"North Germanic languages\",\n\tplain_categories = {\"North Proto-Germanic\"},\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"Northern Dutch\"] = {\n\tdisplay = \"Northern\",\n\tWikipedia = \"Dutch dialects\",\n\tplain_categories = {\"\
      Northern Dutch\"},\n\tlanguage = \"nl\",\n}\n\nlabels[\"Northern England English\"] = {\n\tdisplay = \"Northern England\",\n\tWikipedia = true,\n\tplain_categories = {\"Northern England English\"},\n\tlanguage = \"en\",\n}\naliases[\"Northern English dialect\"\
      ] = \"Northern England English\"\naliases[\"northern English\"] = \"Northern England English\"\naliases[\"North English\"] = \"Northern England English\"\naliases[\"north English\"] = \"Northern England English\"\n\nlabels[\"Northern Middle English\"]\
      \ = {\n\tdisplay = \"Northern\",\n\tplain_categories = {\"Northern Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Northern ME\"] = \"Northern Middle English\"\naliases[\"North ME\"] = \"Northern Middle English\"\n\nlabels[\"Northern Finnic\"]\
      \ = {\n\tplain_categories = {\"Northern Proto-Finnic\"},\n\tlanguage = \"fiu-fin-pro\",\n}\n\nlabels[\"Northern German\"] = {\n\tplain_categories = {\"Northern German\"},\n\tlanguage = \"de\",\n}\naliases[\"northern German\"] = \"Northern German\"\naliases[\"\
      North German\"] = \"Northern German\"\naliases[\"north German\"] = \"Northern German\"\n\nlabels[\"Northumbrian\"] = {\n\tWikipedia = \"Northumbrian dialect\",\n\tplain_categories = { \"Northumbrian Old English\", \"Anglian Old English\" },\n\tlanguage\
      \ = \"ang\",\n}\n\nlabels[\"Northwest Germanic\"] = {\n\tWikipedia = \"Northwest Germanic languages\",\n\tplain_categories = {\"Northwest Proto-Germanic\"},\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"Nunavik\"] = {\n\tWikipedia = \"Inuktitut#Nunavik\",\n\
      \tplain_categories = {\"Nunavik Inuktitut\"},\n\tlanguage = \"iu\",\n}\naliases[\"Nunavimmiutitut\"] = \"Nunavik\"\naliases[\"Inuttitut\"] = \"Nunavik\"\n\nlabels[\"Nynorsk\"] = {\n\tdisplay = \"Nynorsk\",\n\tplain_categories = {\"Norwegian Nynorsk\"},\n\
      \tlanguage = \"nn\",\n}\n\nlabels[\"Old\"] = {\n    display = \"[[w:Old Avestan|Old Avestan]]\",\n    language = \"ae\",\n    track = true,\n}\naliases[\"Old Avestan\"] = \"Old\"\n\nlabels[\"Old East Norse\"] = {\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Old East Norse\"},\n\tlanguage = \"non\",\n}\naliases[\"East Norse\"] = \"Old East Norse\"\n\nlabels[\"Old Gutnish\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Old Gutnish Norse\"},\n\tlanguage = \"non\",\n}\naliases[\"Old Gotlandic\"] =\
      \ \"Old Gutnish\"\n\nlabels[\"Old West Norse\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Old West Norse\"},\n\tlanguage = \"non\",\n}\naliases[\"West Norse\"] = \"Old West Norse\"\n\nlabels[\"Ormulum\"] = {\n\tWikipedia = \"Ormulum\",\n\tplain_categories\
      \ = {\"Middle English terms unique to the Ormulum\"},\n\tlanguage = \"enm\",\n}\n\nlabels[\"Oxford British spelling\"] = {\n\tdisplay = \"[[w:Oxford spelling|Oxford]] [[British English]]\",\n\tplain_categories = {\"Oxford spellings\"},\n\tlanguage = \"\
      en\",\n}\naliases[\"Oxford\"] = \"Oxford British spelling\"\n\nlabels[\"Oxyrhynchite\"] = {\n\tWikipedia = \"Coptic language#Oxyrhynchite\",\n\tplain_categories = {\"Oxyrhynchite Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Mesokemic\"] = \"Oxyrhynchite\"\
      \n\nlabels[\"Palatine German\"] = {\n\tdisplay = \"Palatine\",\n\tWikipedia = \"Palatine German language\",\n\tplain_categories = {\"Palatine German\"},\n\tlanguage = \"gmw-rfr\",\n}\naliases[\"Palatinate German\"] = \"Palatine German\"\naliases[\"Pälzisch\"\
      ] = \"Palatine German\"\naliases[\"Pfälzisch\"] = \"Palatine German\"\n\nlabels[\"Pennsylvania Dutch English\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Pennsylvania Dutch English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Pinghua\"] = {\n\tdisplay\
      \ = \"Pinghua\",\n\tWikipedia = true,\n\tplain_categories = {\"Pinghua Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Pomeranian Low German\"] = {\n\tdisplay = \"Pomeranian\",\n\tWikipedia = true,\n\tplain_categories = {\"Pomeranian Low German\"},\n\t\
      language = \"nds-de\",\n}\naliases[\"Pomeranian LG\"] = \"Pomeranian Low German\"\n\nlabels[\"Potteries\"] = {\n\tWikipedia = \"Potteries dialect\",\n\tplain_categories = {\"Potteries English\"},\n\tlanguage = \"en\",\n}\naliases[\"Potteries dialect\"\
      ] = \"Potteries\"\n\nlabels[\"Puter\"] = {\n\tWikipedia = \"Putèr\",\n\tplain_categories = {\"Puter Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Ripuarian\"] = {\n\tWikipedia = \"Ripuarian language\",\n\tplain_categories = {\"Ripuarian Central Franconian\"\
      },\n\tlanguage = \"gmw-cfr\",\n}\naliases[\"Ripuarian Franconian\"] = \"Ripuarian\"\naliases[\"Ripuarisch\"] = \"Ripuarian\"\n\n--[[\nThis category has been deleted.\nlabels[\"Royal Thai\"] = {\n\tdisplay = \"royal\",\n\tplain_categories = {\"Thai royal\
      \ vocabulary\"},\n\tlanguage = \"\",\n}\n]]\n\nlabels[\"Rumantsch Grischun\"] = {\n\tWikipedia = true,\n\tlanguage = \"rm\",\n}\n\nlabels[\"Saarlandic\"] = {\n\tdisplay = \"Saarland\",\n\tWikipedia = \"Saarland\",\n\tplain_categories = {\"Saarland German\"\
      },\n\tlanguage = \"\",\n}\naliases[\"Saarländisch\"] = \"Saarlandic\"\naliases[\"Saarlandish\"] = \"Saarlandic\"\n\nlabels[\"Sahidic\"] = {\n\tWikipedia = \"Coptic language#Sahidic\",\n\tplain_categories = {\"Sahidic Coptic\"},\n\tlanguage = \"cop\",\n\
      }\naliases[\"Thebaic\"] = \"Sahidic\"\n\nlabels[\"Scottish English\"] = {\n\tdisplay = \"Scotland\",\n\tWikipedia = true,\n\tplain_categories = {\"Scottish English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Shahbazgarhi\"] = {\n\tdisplay = \"Shahbazgarhi\"\
      ,\n\tWikipedia = \"Shahbaz Garhi\",\n\tplain_categories = {\"Shahbazgarhi Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Shapsug\"] = {\n\tdisplay = \"Shapsug dialect\",\n\tWikipedia = \"Shapsug Adyghe dialect\",\n\tplain_categories = {\"\
      Shapsug Adyghe\"},\n\tlanguage = \"ady\",\n}\n\nlabels[\"Shopski\"] = {\n\tWikipedia = \"Shopi#Dialects\",\n\tplain_categories = {\"Shopski Bulgarian\"},\n\tlanguage = \"bg\",\n}\n\nlabels[\"Silla\"] = {\n\tplain_categories = {\"Silla Old Korean\"},\n\t\
      language = \"oko\",\n}\n\nlabels[\"Sistani\"] = {\n\tWikipedia = \"Sistani dialect\",\n\tplain_categories = {\"Sistani Persian\"},\n\tlanguage = \"fa\",\n}\n\nlabels[\"Siyi\"] = {\n\tWikipedia = \"Siyi Yue\",\n\tlanguage = \"zh\",\n}\n\nlabels[\"Skiri\
      \ Pawnee\"] = {\n\tplain_categories = {\"Skiri Pawnee\"},\n\tlanguage = \"paw\",\n}\n\nlabels[\"Sopara\"] = {\n\tdisplay = \"Sopara\",\n\tWikipedia = true,\n\tplain_categories = {\"Sopara Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"South\
      \ African English\"] = {\n\tdisplay = \"South Africa\",\n\tWikipedia = true,\n\tplain_categories = {\"South African English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"South Scots\"] = {\n\tWikipedia = \"Southern Scots\",\n\tplain_categories = {\"South Scots\"\
      },\n\tlanguage = \"sco\",\n}\n\nlabels[\"Southern Dutch\"] = {\n\tdisplay = \"Southern\",\n\tWikipedia = \"Dutch dialects\",\n\tplain_categories = {\"Southern Dutch\"},\n\tlanguage = \"nl\",\n}\n\nlabels[\"Southern England English\"] = {\n\tdisplay = \"\
      Southern England\",\n\tWikipedia = \"English in southern England\",\n\tplain_categories = {\"Southern England English\"},\n\tlanguage = \"en\",\n}\naliases[\"Southern English\"] = \"Southern England English\"\naliases[\"Southern English dialect\"] = \"\
      Southern England English\"\n\nlabels[\"Southern German\"] = {\n\tplain_categories = {\"Southern German\"},\n\tlanguage = \"\",\n}\naliases[\"southern German\"] = \"Southern German\"\naliases[\"South German\"] = \"Southern German\"\naliases[\"south German\"\
      ] = \"Southern German\"\n\nlabels[\"Southern Middle English\"] = {\n\tdisplay = \"Southern\",\n\tplain_categories = {\"Southern Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Southern ME\"] = \"Southern Middle English\"\naliases[\"South ME\"]\
      \ = \"Southern Middle English\"\naliases[\"Southwest ME\"] = \"Southern Middle English\"\n\nlabels[\"Southern US English\"] = {\n\tdisplay = \"Southern US\",\n\tWikipedia = \"Southern American English\",\n\tplain_categories = {\"Southern US English\"},\n\
      \tlanguage = \"en\",\n}\naliases[\"Southern American English\"] = \"Southern US English\"\n\nlabels[\"Surmiran\"] = {\n\tWikipedia = \"Surmiran dialect\",\n\tplain_categories = {\"Surmiran Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Sursilvan\"]\
      \ = {\n\tWikipedia = \"Sursilvan dialects (Romansh)\",\n\tplain_categories = {\"Sursilvan Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Sussex\"] = {\n\tWikipedia = \"Sussex dialect\",\n\tplain_categories = {\"Sussex English\"},\n\tlanguage = \"en\"\
      ,\n}\n\nlabels[\"Sutsilvan\"] = {\n\tWikipedia = \"Sutsilvan dialects (Romansh)\",\n\tplain_categories = {\"Sutsilvan Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Swiss German\"] = {\n\tdisplay = \"Switzerland\",\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Switzerland German\"},\n\tlanguage = \"de\",\n}\n\nlabels[\"Switzerland and Liechtenstein spelling\"] = {\n\tdisplay = \"[[Switzerland]] and [[Liechtenstein]]\",\n\tplain_categories = {\"Switzerland and Liechtenstein German forms\"},\n\tlanguage\
      \ = \"de\",\n}\naliases[\"SLDE\"] = \"Switzerland and Liechtenstein spelling\"\n\nlabels[\"Taishanese\"] = {\n\tdisplay = \"[[Taishanese]]\",\n\tplain_categories = {\"Taishanese Chinese\"},\n\tlanguage = \"zh\",\n}\naliases[\"Toishanese\"] = \"Taishanese\"\
      \naliases[\"Hoisanese\"] = \"Taishanese\"\n\nlabels[\"Taiwanese Hakka\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Taiwanese Hakka\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwan Hakka\"] = \"Taiwanese Hakka\"\n\nlabels[\"Taiwanese Mandarin\"] =\
      \ {\n\tWikipedia = true,\n\tplain_categories = {\"Taiwanese Mandarin\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwan Mandarin\"] = \"Taiwanese Mandarin\"\n\nlabels[\"Taiwanese Hokkien\"] = {\n\tWikipedia = \"Taiwanese Hokkien\",\n\tplain_categories = {\"\
      Taiwanese Min Nan\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwanese Min Nan\"] = \"Taiwanese Hokkien\"\naliases[\"Taiwan Hokkien\"] = \"Taiwanese Hokkien\"\naliases[\"Taiwan Min Nan\"] = \"Taiwanese Hokkien\"\n\nlabels[\"Taiwanese Hokkien and Hakka\"]\
      \ = {\n\tdisplay = \"[[w:Taiwanese Hokkien|Taiwanese Hokkien]] and [[w:Taiwanese Hakka|Hakka]]\",\n\tplain_categories = {\"Taiwanese Min Nan\", \"Taiwanese Hakka\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwanese Min Nan and Hakka\"] = \"Taiwanese Hokkien\
      \ and Hakka\"\naliases[\"Taiwanese Hakka and Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Hakka and Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Min Nan &amp; Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"\
      Taiwanese Hokkien &amp; Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Hakka &amp; Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Hakka &amp; Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hokkien and\
      \ Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka and Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka and Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Min Nan &amp; Hakka\"] = \"Taiwanese Hokkien\
      \ and Hakka\"\naliases[\"Taiwan Hokkien &amp; Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka &amp; Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka &amp; Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\n\nlabels[\"\
      Teochew\"] = {\n\tdisplay = \"[[Teochew]]\",\n\tplain_categories = {\"Teochew Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Tosk\"] = {\n\tWikipedia = \"Tosk Albanian\",\n\tplain_categories = {\"Tosk Albanian\"},\n\tlanguage = \"sq\",\n}\n\nlabels[\"\
      Twi\"] = {\n\tdisplay = \"[[w:Twi|Twi]]\",\n\tplain_categories = { \"Twi Akan\" },\n\tlanguage = \"ak\",\n}\naliases[\"Akan Kasa\"] = \"Twi\"\n\nlabels[\"Tyneside\"] = {\n\tplain_categories = {\"Geordie English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"\
      Ulster Scots\"] = {\n\tWikipedia = \"Ulster Scots dialects\",\n\tplain_categories = {\"Ulster Scots\"},\n\tlanguage = \"sco\",\n}\naliases[\"Ullans\"] = \"Ulster Scots\"\n\nlabels[\"US English\"] = {\n\tdisplay = \"US\",\n\tWikipedia = \"American English\"\
      ,\n\tplain_categories = {\"American English\"},\n\tlanguage = \"en\",\n}\naliases[\"U.S. English\"] = \"US English\"\naliases[\"American English\"] = \"US English\"\n\nlabels[\"Vallader\"] = {\n\tWikipedia = \"Vallader dialect (Romansh)\",\n\tplain_categories\
      \ = {\"Vallader Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Vedic\"] = {\n    display = \"[[w:Vedic Sanskrit|Vedic]]\",\n    plain_categories = {\"Vedic Sanskrit\"},\n    language = \"sa\",\n}\n\nlabels[\"Vegliot\"] = {\n\tdisplay = \"[[w:Dalmatian_language#Vegliot_dialect|Vegliot]]\"\
      ,\n\tplain_categories = {\"Vegliot Dalmatian\"},\n\tlanguage = \"dlm\",\n}\naliases[\"Krk\"] = \"Vegliot\"\n\nlabels[\"Vivaro-Alpine\"] = {\n\tWikipedia = \"Vivaro-Alpine dialect\",\n\tplain_categories = {\"Vivaro-Alpine Occitan\"},\n\tlanguage = \"oc\"\
      ,\n}\n\nlabels[\"Walser\"] = {\n\tWikipedia = \"Walser German\",\n\tplain_categories = {\"Walser German\"},\n\tlanguage = \"gsw\"\n}\naliases[\"wae\"] = \"Walser\"\naliases[\"Waser German\"] = \"Walser\"\naliases[\"Walserdeutsch\"] = \"Walser\"\n\nlabels[\"\
      West Arabian\"] = {\n\tdisplay = \"Hejazi\",\n\tplain_categories = {\"Hejazi Arabic\"},\n\tlanguage = \"ar\",\n}\naliases[\"Hejazi Arabic\"] = \"West Arabian\"\n\nlabels[\"West Country English\"] = {\n\tdisplay = \"West Country\",\n\tWikipedia = true,\n\
      \tplain_categories = {\"West Country English\"},\n\tlanguage = \"en\",\n}\naliases[\"West Country dialect\"] = \"West Country English\"\n\nlabels[\"West Germanic\"] = {\n\tWikipedia = \"West Germanic languages\",\n\tplain_categories = {\"West Proto-Germanic\"\
      },\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"West Midland Middle English\"] = {\n\tdisplay = \"West Midlands\",\n\tplain_categories = {\"West Midland Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"West Midlands ME\"] = \"West Midland Middle English\"\
      \naliases[\"West Midland ME\"] = \"West Midland Middle English\"\n\nlabels[\"West Midlands English\"] = {\n\tdisplay = \"West Midlands\",\n\tWikipedia = true,\n\tplain_categories = {\"West Midlands English\"},\n\tlanguage = \"en\",\n}\naliases[\"West Midlands\
      \ dialect\"] = \"West Midlands English\"\n\nlabels[\"West Saxon\"] = {\n\tWikipedia = \"West Saxon dialect\",\n\tplain_categories = { \"West Saxon Old English\" },\n\tlanguage = \"ang\",\n}\n\n--[=[\nNo category exists yet.\nlabels[\"West Palatine\"] =\
      \ {\n\tdisplay = \"Westpfälzisch\",\n\tWikipedia = \"Palatine German language\",\n\tplain_categories = {\"West Palatine German\"},\n\tlanguage = \"\",\n}\naliases[\"Westpfälzisch\"] = \"West Palatine\"\n]=]\n\nlabels[\"Western Armenian\"] = {\n\tWikipedia\
      \ = true,\n\tplain_categories = {\"Western Armenian\"},\n\tlanguage = \"hy\",\n}\n\nlabels[\"Western Catalan\"] = {\n\tWikipedia = \"Catalan dialects\",\n\tplain_categories = {\"Western Catalan\"},\n\tlanguage = \"ca\",\n}\n\nlabels[\"Western Malayo-Polynesian\"\
      ] = {\n\tWikipedia = \"Western Malayo-Polynesian languages\",\n\tplain_categories = {\"Western Proto-Malayo-Polynesian\"},\n\tlanguage = \"poz-pro\",\n}\n\nlabels[\"Western Pomeranian Low German\"] = {\n\tdisplay = \"Western Pomeranian\",\n\tplain_categories\
      \ = {\"Western Pomeranian Low German\"},\n\tlanguage = \"nds-de\",\n}\naliases[\"West Pomeranian Low German\"] = \"Western Pomeranian Low German\"\naliases[\"Western Pomeranian LG\"] = \"Western Pomeranian Low German\"\naliases[\"West Pomeranian LG\"]\
      \ = \"Western Pomeranian Low German\"\n\nlabels[\"Western Samic\"] = {\n\tplain_categories = {\"Western Proto-Samic\"},\n\tlanguage = \"smi-pro\",\n}\n\nlabels[\"Wood Frisian\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Wood Frisian\"},\n\tlanguage\
      \ = \"fy\",\n}\n\nlabels[\"Wu\"] = {\n\tdisplay = \"[[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Xiang\"] = {\n\tdisplay = \"[[Xiang]]\",\n\tplain_categories = {\"Xiang Chinese\"},\n\tlanguage = \"zh\",\n}\n\n\
      labels[\"Ye'kwana\"] = {\n\tdisplay = \"Ye'kwana dialect\",\n\tplain_categories = {\"Ye'kwana Maquiritari\"},\n\tlanguage = \"mch\",\n}\naliases[\"Ye'kwana dialect\"] = \"Ye'kwana\"\n\nlabels[\"Yerragudi\"] = {\n\tdisplay = \"Yerragudi\",\n\tplain_categories\
      \ = {\"Yerragudi Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Young\"] = {\n    display = \"[[w:Young Avestan|Young Avestan]]\",\n    language = \"ae\",\n}\naliases[\"Young Avestan\"] = \"Young\"\naliases[\"Younger\"] = \"Young\"\naliases[\"\
      Younger Avestan\"] = \"Young\"\n\nlabels[\"Zhongshan Min\"] = {\n\tdisplay = \"Zhongshan Min\",\n\tWikipedia = true,\n\tplain_categories = {\"Zhongshan Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\n--[[\tAdds a \"languages\" field containing [\"&lt;language\
      \ code&gt;\"] = true,\n\t\tif there is a \"language\" field with a non-empty value.\t\t]]\nm_functions.handle_languages(labels)\n\nreturn {\n\t[\"labels\"] = labels,\n\t[\"aliases\"] = aliases,\n\t[\"deprecated\"] = deprecated,\n}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:15.208Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Adefdate&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45439 t=1555362615112245
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1088'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:15 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 206292917, 235568562, 696667875
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="1750320" pageid="1750320" ns="10" title="Template:defdate"><revisions><rev user="Erutuon" timestamp="2017-05-05T05:17:09Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="fixed the usage of [[Module:string]], I think" xml:space="preserve">&lt;span class="defdate"&gt;[{{{1}}}]&lt;/span&gt;{{#if:{{#invoke:string|find|{{{1}}}|-||yes}}|{{Template:tracking/defdate/hyphen}}}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:15.392Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aw&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50952 t=1555362615289173
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:15 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1312.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 658766268, 563793164, 699124101
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="219980" pageid="219980" ns="10" title="Template:w"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T20:02:58Z" contentformat="text/x-wiki" contentmodel="wikitext"
      comment="Changed protection level for &quot;[[Template:w]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors
      and administrators] (indefinite))" xml:space="preserve">[[wikipedia:{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#if:{{{lang|}}}|{{{lang}}}:}}{{{1|}}}|{{&lt;includeonly&gt;safesubst:&lt;/includeonly&gt;#if:{{{2|}}}|{{{2}}}|{{{1|}}}}}]]&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:10:15.643Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Al&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44778 t=1555362615546680
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:15 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 739992506, 485485233, 703340209
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4580518" pageid="4580518" ns="10" title="Template:l"><revisions><rev user="Rua" timestamp="2014-10-30T23:36:59Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="CodeCat moved page [[Template:l]] to [[Template:link]] over redirect" xml:space="preserve">#REDIRECT [[Template:link]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:15.819Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alink&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51914 t=1555362615714837
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:15 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1221.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 578285910, 495960814, 692151552
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="784216" pageid="784216" ns="10" title="Template:link"><revisions><rev user="Dixtosa" timestamp="2016-11-05T20:05:15Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="undo myslef. moving template data to documentation page to see if that works too" xml:space="preserve">{{#invoke:links/templates|l_term_t&lt;noinclude&gt;|demo=term&lt;/noinclude&gt;}}&lt;!--

      --&gt;{{#ifeq:{{PAGENAME}}|RecentChanges||&lt;!--
          --&gt;{{#ifeq:{{{1|}}}|und|[[Category:Undetermined language links]]}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;{{redlink category|{{{1|}}}|{{{2|}}}|template=l}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:16.045Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atrans-top&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50917 t=1555362615941769
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:16 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 754726644, 567778275, 687209732
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="454350" pageid="454350" ns="10" title="Template:trans-top"><revisions><rev user="Erutuon" timestamp="2017-06-13T19:37:12Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="change requested by [[User:CodeCat|CodeCat]] in [[Wiktionary:Grease pit/2017/June#Requested change to Template:trans-top]]" xml:space="preserve">{{#if:{{{1|}}}||{{#ifeq:{{NAMESPACE}}||[[Category:Translation table header lacks gloss]]}}}}&lt;div class="NavFrame" {{#ifeq:{{{1|}}}|Translations to be checked||{{#if:{{{id|{{{1|}}}}}}|id{{=}}"Translations-{{anchorencode:{{{id|{{{1}}}}}}}}"}}}}&gt;
      &lt;div class="NavHead" style="text-align:left; "&gt;{{#invoke:links|remove_links|{{{1|Translations}}}}}&lt;/div&gt;
      &lt;div class="NavContent"&gt;
      {| class="translations" role="presentation" style="width:100%;" data-gloss="{{#invoke:ugly hacks|escape_wiki|{{{1|}}}}}"
      |-
      | class="translations-cell" style="background-color:#ffffe0; vertical-align:top; width:48%; text-align:left; " |
      &lt;noinclude&gt;
      |}&lt;/div&gt;&lt;/div&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:16.218Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3A%3D&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49933 t=1555362616117143
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:16 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1284.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 517574218, 830123634, 704518033
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5118411" pageid="5118411" ns="10" title="Template:="><revisions><rev user="Yair rand" timestamp="2016-02-04T04:30:06Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="close noinclude" xml:space="preserve">=&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:27.273Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fescape_wiki&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46769 t=1555362627174001
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 918353871, 559989851, 699311365
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/escape_wiki" to="Template:tracking/ugly hacks/escape wiki" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/escape wiki" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:10:27.440Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fescape_wiki%2Ffrom+Template%3Atrans-top&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51575 t=1555362627334489
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 928430544, 487775420, 707822203
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/escape_wiki/from Template:trans-top" to="Template:tracking/ugly hacks/escape wiki/from Template:trans-top" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/escape wiki/from Template:trans-top" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:10:16.714Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3At&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42903 t=1555362616619235
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:16 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1225.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 516395501, 249775552, 705759146
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="193228" pageid="193228" ns="10" title="Template:t"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T20:02:53Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:t]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:translations|show}}&lt;!--

      --&gt;{{#ifeq:{{{1|}}}|en|[[Category:English translations]]}}&lt;!--
      --&gt;{{#ifeq:{{{1|}}}|mul|[[Category:Translingual translations]]}}&lt;!--
      --&gt;{{#ifeq:{{{1|}}}|und|[[Category:Undefined translations]]}}&lt;!--

      --&gt;{{redlink category|{{{1|}}}|{{{2|}}}|template=t}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:16.914Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Atranslations&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58714 t=1555362616798013
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:16 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1221.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 432378036, 839517870, 707166543
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4073391\" pageid=\"4073391\" ns=\"828\" title=\"Module:translations\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-10T03:58:50Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"extract implementation into separate function callable by Lua\" xml:space=\"preserve\">local m_links = require(\"Module:links\")\n\nlocal export = {}\n\nlocal interwiki_langs = {\n\t[\"\
      ckb\"] = \"ku\",\n\t[\"kmr\"] = \"ku\",\n\t[\"lki\"] = \"ku\",\n\t[\"nds-de\"] = \"nds\",\n\t[\"nds-nl\"] = \"nds\",\n\t[\"pdt\"] = \"nds\",\n\t[\"sdh\"] = \"ku\",\n}\n\nlocal ignore_caps = {\n\t[\"ko\"] = true,\n}\n\nlocal tracked = {\n\t[\"se\"] = true,\n\
      }\n\n-- The main entry point.\n-- This is the only function that can be invoked from a template.\nfunction export.show(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {},\n\t\t[3] = {list = true},\n\t\t[\"alt\"] =\
      \ {},\n\t\t[\"id\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"lit\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal terminfo = {\n\t\tlang = require(\"\
      Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1),\n\t\tsc = (args[\"sc\"] and (require(\"Module:scripts\").getByCode(args[\"sc\"]) or error(\"The script code \\\"\" .. args[\"sc\"] .. \"\\\" is not valid.\")) or nil),\n\
      \t\tterm = args[2] or (mw.title.getCurrentTitle().nsText == \"Template\" and \"term\") or nil,\n\t\talt = args[\"alt\"],\n\t\tid = args[\"id\"],\n\t\tgenders = args[3],\n\t\ttr = args[\"tr\"],\n\t\tts = args[\"ts\"],\n\t\tlit = args[\"lit\"],\n\t\tinterwiki\
      \ = frame.args[\"interwiki\"],\n\t\t}\n\t\n\treturn export.show_terminfo(terminfo)\nend\n\nfunction export.show_terminfo(terminfo)\t\n\t-- Translations must be for mainspace languages\n\tif terminfo.lang:getType() == \"reconstructed\" or terminfo.lang:getType()\
      \ == \"appendix-constructed\" then\n\t\terror(\"Translations must be for attested and approved main-namespace languages.\")\n\tend\n\t\n\t-- Don't show the interwiki link if there is nothing to link to.\n\tif terminfo.term then\n\t\t-- Track translations\
      \ for particular languages\n\t\tif tracked[terminfo.lang:getCode()] then\n\t\t\trequire(\"Module:debug\").track(\"translations/\" .. terminfo.lang:getCode())\n\t\tend\n\t\t\n\t\tlocal wmlangs = {}\n\t\t\n\t\tif interwiki_langs[terminfo.lang:getCode()]\
      \ then\n\t\t\twmlangs = {require(\"Module:wikimedia languages\").getByCode(interwiki_langs[terminfo.lang:getCode()])}\n\t\telse\n\t\t\twmlangs = terminfo.lang:getWikimediaLanguages()\n\t\tend\n\t\t\n\t\t-- Don't show the interwiki link if the language\
      \ is not recognised by Wikimedia\n\t\t-- or if the term contains links (for SOP translations)\n\t\tif terminfo.term:find(\"[[\", nil, true) or #wmlangs == 0 then\n\t\t\tterminfo.interwiki = false\n\t\tend\n\t\t\n\t\tif wmlangs[1] and ignore_caps[wmlangs[1]:getCode()]\
      \ then\n\t\t\tterminfo.term2 = mw.ustring.gsub(terminfo.term, \"^%^\", \"\")\n\t\tend\n\t\t\n\t\tif terminfo.interwiki then\n\t\t\tterminfo.interwiki =\n\t\t\t\t\"&lt;span class=\\\"\" .. terminfo.interwiki .. \"\\\"&gt;&amp;nbsp;[[:\" ..\n\t\t\t\twmlangs[1]:getCode()\
      \ .. \":\" ..\n\t\t\t\tterminfo.lang:makeEntryName(terminfo.term2 or terminfo.term) ..\n\t\t\t\t\"|(\" .. wmlangs[1]:getCode() .. \")]]&lt;/span&gt;\"\n\t\tend\n\telse\n\t\t-- Track what entries currently don't provide a term\n\t\trequire(\"Module:debug\"\
      ).track(\"translations/no term\")\n\t\trequire(\"Module:debug\").track(\"translations/no term/\" .. terminfo.lang:getCode())\n\tend\n\t\n\tif terminfo.lang and terminfo.lang:getCode() == 'yue' and terminfo.tr then\n\t\tterminfo.tr = mw.ustring.gsub(terminfo.tr,\
      \ '([1-9-])','&lt;sup&gt;%1&lt;/sup&gt;')\n\tend\n\t\n\treturn m_links.full_link(terminfo, \"translation\", true)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:17.095Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aas-translit&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38448 t=1555362616999197
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:17 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1343.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 208976605, 236480648, 705465820
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6312494\" pageid=\"6312494\" ns=\"828\" title=\"Module:as-translit\"><revisions><rev user=\"Msasag\" timestamp=\"2018-10-06T20:32:58Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">-- Transliteration for Assamese\n\nlocal export = {}\nlocal gsub = mw.ustring.gsub\nlocal match = mw.ustring.match\n\nlocal conv = {\n\t-- consonants\n\t[\"ক্\
      ষ\"] = \"kh\",\n\t[\"ক\"] = \"k\",\t[\"খ\"] = \"kh\",\t[\"গ\"] = \"g\",\t[\"ঘ\"] = \"gh\",\t[\"ঙ\"] = \"ṅ\",\n\t[\"চ\"] = \"s\",\t[\"ছ\"] = \"s\",\t[\"জ\"] = \"z\",\t[\"ঝ\"] = \"zh\",\t[\"ঞ\"] = \"ñ\",\n\t[\"ট\"] = \"t\",\t[\"ঠ\"] = \"th\",\t[\"ড\"] =\
      \ \"d\",\t[\"ঢ\"] = \"dh\",\t[\"ণ\"] = \"n\",\n\t[\"ত\"] = \"t\",\t[\"থ\"] = \"th\",\t[\"দ\"] = \"d\",\t[\"ধ\"] = \"dh\",\t[\"ন\"] = \"n\",\n\t[\"প\"] = \"p\",\t[\"ফ\"] = \"ph\",\t[\"ব\"] = \"b\",\t[\"ভ\"] = \"bh\",\t[\"ম\"] = \"m\",\n\t[\"য\"] = \"z\"\
      ,\t[\"ৰ\"] = \"r\",\t[\"ল\"] = \"l\",\t[\"ৱ\"] = \"w\", \n\t[\"শ\"] = \"x\",\t[\"ষ\"] = \"x\",\t[\"স\"] = \"x\",\t[\"হ\"] = \"h\",\t\n\t[\"য়\"] = \"y\",\t[\"ড়\"] = \"r\",\t[\"ঢ়\"] = \"rh\",\n\n\t-- vowel diacritics\n\t[\"’\"] = \"ó\",\t[\"ি\"] = \"\
      i\",\t[\"ু\"] = \"u\",\t\n\t[\"ৃ\"] = \"ri\",\t[\"ে\"] = \"e\",\t[\"ে’\"] = \"é\",\t[\"ো\"] = \"ü\",\n\t[\"া\"] = \"a\",\t[\"ী\"] = \"i\",\t[\"ূ\"] = \"u\",\t[\"ৈ\"] = \"oi\",\t[\"ৌ\"] = \"ou\",\n\n\t-- visarga\n\t[\"ঃ\"] = \"o\",\n\n\t-- vowel signs\n\
      \t[\"অ\"] = \"o\", \t[\"অ’\"] = \"ó\",\t[\"ই\"] = \"i\",\t[\"উ\"] = \"u\",\t\n\t[\"ঋ\"] = \"ri\",\t[\"এ\"] = \"e\", \t[\"এ’\"] = \"é\",\t[\"ও\"] = \"ü\",\n\t[\"আ\"] = \"a\",\t[\"ঈ\"] = \"i\",\t[\"ঊ\"] = \"u\",\t[\"ঐ\"] = \"oi\",\t[\"ঔ\"] = \"ou\",\n\n\t\
      --hosonto\n\t[\"্\"] = \"\",\n\n\t-- sondrobindu\n\t[\"ঁ\"] = \"̃\",\n\t\n\t-- owogroho\n\t['ঽ']='’',\n\t\t\n\t-- onusor\n\t[\"ং\"] = \"ṅ\",\n\n\t-- hosonto to, \n\t[\"ৎ\"] = \"t\",\n\n\t-- numerals\n\t[\"০\"] = \"0\", [\"১\"] = \"1\", [\"২\"] = \"2\"\
      , [\"৩\"] = \"3\", [\"৪\"] = \"4\", \n\t[\"৫\"] = \"5\", [\"৬\"] = \"6\", [\"৭\"] = \"7\", [\"৮\"] = \"8\", [\"৯\"] = \"9\",\n \n\t-- punctuation\n\t[\"।\"] = \".\", -- dari\n}\n\nlocal conv2 = {\n\t[\"ক্ষ\"] = \"ḱ\",\t[\"খ\"] = \"ḱ\",\n\t[\"ঘ\"] = \"ǵ\
      \",\n\t[\"ঙ\"] = \"ŋ\",\t[\"ং\"] = \"ŋ\",\n\t[\"ঝ\"] = \"ź\",\n\t[\"ঠ\"] = \"ṫ\",\t[\"থ\"] = \"ṫ\",\n\t[\"ঢ\"] = \"ḋ\",\t[\"ধ\"] = \"ḋ\",\n\t[\"ফ\"] = \"ṗ\",\n\t[\"ভ\"] = \"ḃ\",\n\t[\"ঢ়\"] = \"ŕ\",\n\t[\"ৃ\"] = \"ṙ\",\t[\"ঋ\"] = \"ṙ\",\n\t[\"ৈ\"] = \"\
      ʏ\",\t[\"ঐ\"] = \"ʏ\",\n\t[\"ৌ\"] = \"ɵ\",\t[\"ঔ\"] = \"ɵ\",\n}\n\nlocal consonant, vowel, vowel_sign = \"ক-হড়-য়ৰৱ\", \"oা-ৌ’\", \"অ-ঔ\"\nlocal c = \"[\" .. consonant .. \"]\"\nlocal cc = \"়?\" .. c\nlocal v = \"[\" .. vowel .. vowel_sign .. \"]\"\n\
      local syncope_pattern = \"(\" .. v .. cc .. v .. cc .. \")o(\" .. cc .. \"ঁ?\" .. v .. \")\"\n\nlocal function rev_string(text)\n\tlocal result, length = \"\", mw.ustring.len(text)\n\tfor i = 1, length do\n\t\tresult = result .. mw.ustring.sub(text, length\
      \ - i + 1, length - i + 1)\n\tend\n\treturn result\nend\n\nfunction export.tr(text, lang, sc, mode)\n\ttext = gsub(text, \"([^ৰ])্য\", \"%1্য়\")\n\ttext = gsub(text, \"্ব\", \"্ৱ\")\n\ttext = gsub(text, \"[শষস]্\", \"চ্\")\n\ttext = gsub(text, \"্স\"\
      , \"্চ\")\n\ttext = gsub(text, \"[োও]ৱ\", \"্ও\") \n\ttext = gsub(text, \"ক্ষ\", \"খ\")\n\ttext = gsub(text, \"’ৱ\", \"্অ’\")\n\ttext = gsub(text, \"[ুুউ]ৱ(.)\", \"্উ%1\")\n\ttext = gsub(text, \"[োও]ৱ(.)\", \"্ও%1\")\n\ttext = gsub(text, \"োঁৱ(.)\", \"\
      ্ওঁ%1\")\n\ttext = gsub(text, \"[ৌঔ]ৱ\", \"্ঔ\")\n\ttext = gsub(text, \"[িই]য়(.)\", \"্ই%1\") \n\ttext = gsub(text, \"ৃয়\", \"্ঋ\")\n\ttext = gsub(text, \"[েএ]য়(.)\", \"্এ%1\")\n\ttext = gsub(text, \"[ে’এ’]য়\", \"্এ’\")\n\ttext = gsub(text, \"[ৈঐ]য\
      ়(.)\", \"্ঐ%1\")\n\ttext = gsub(text, \"[ীঈ]য়(.)\", \"্ঈ%1\") \n\ttext = gsub(text, \"[ীঈ]য়\", \"্ঈঅ\") -- end\n\ttext = gsub(text, \"[ূূঊ]ৱ\", \"্ঊ\") \n\ttext = gsub(text, \"݁\", \"্অ\")\n\ttext = gsub(text, \"ঃ\", \"্অ\")\n\ttext = gsub(text, \"\
      [࣪ܿ]\", \"্\")\n\ttext = gsub(text, \"বাৰ\" , \"্বাৰ\")\n\ttext = gsub(text, \"বিলাক\", \"্বিলাক\")\n\ttext = gsub(text, \"টো\" , \"্টো\")\n\ttext = gsub(text, \"খন\" , \"্খন\")\n\ttext = gsub(text, \"ডাল\" , \"্ডাল\")\n\ttext = gsub(text, \"খিনি\" , \"\
      ্খিনি\")\n\ttext = gsub(text, \"জন\" , \"্জন\")\n\ttext = gsub(text, \"জনী\" , \"্জনী\")\n\ttext = gsub(text, \"গৰাকী\" , \"্গৰাকী\")\n\ttext = gsub(text, \"সকল\" , \"্সকল\")\n\ttext = gsub(text, \"কৈ\" , \"্কৈ\")\ntext = gsub(text, \"কে\" , \"্কে\")\n\
      \ttext = gsub(text, \"ফাল\" , \"্ফাল\")\n\ttext = gsub(text, \"কেই\" , \"্কেই\")\n\ttext = gsub(text, \"মান\" , \"্মান\")\n\ttext = gsub(text, \"[িীইঈ]ঞ\", \"্ইঅ͂\")\n\ttext = gsub(text, \"ঞ্\", \"ন্̃\")\n\t\n\ttext = gsub(text, \"(\" .. c .. \"়?)([\"\
      \ .. vowel .. \"’?্]?)\", function(a, b)\n\t\treturn a .. (b == \"\" and \"o\" or b) end)\n\t\n\tfor word in mw.ustring.gmatch(text, \"[ঁ-৽o’]+\") do\n\t\tlocal orig_word = word\n\t\tword = rev_string(word)\n\t\tword = gsub(word, \"^o(়?\" .. c .. \")(ঁ\
      ?\" .. v .. \")\", \"%1%2\")\n\t\twhile match(word, syncope_pattern) do\n\t\t\tword = gsub(word, syncope_pattern, \"%1%2\")\n\t\tend\n\t\ttext = gsub(text, orig_word, rev_string(word))\n\tend\n\t\n\tif mode == \"IPA\" then\n\t\ttext = gsub(text, \".[়’\
      ]?\", conv2)\n\t\ttext = gsub(text, \".\", conv2)\n\tend\n\t\n\ttext = gsub(text, \".[়’]?\", conv)\n\ttext = gsub(text, \".\", conv)\n\t\n\tlocal consonants_Latn_no_h = \"[b-df-gj-np-tv-z]\"\n\n\t-- Cw\n\ttext = gsub(text, \"mw\", \"mb\") -- special case\n\
      \ttext = gsub(text, \"^(\" .. consonants_Latn_no_h .. \"h?)w\", \"%1\") -- initial\n\ttext = gsub(text, \"hw\", \"hb\")\n\ttext = gsub(text, \"(\" .. consonants_Latn_no_h .. \")w\", \"%1%1\") -- medial\n\t\n\t-- zñ\n\ttext = gsub(text, \"^zñ\", \"gy\"\
      ) -- initial\n\ttext = gsub(text, \"zñ\", \"gg\") -- medial\n\t\n\t-- Cy\n\ttext = gsub(text, \"^khy\", \"kh\" )\n\ttext = gsub(text, \"([aéeióoüu])(\" .. consonants_Latn_no_h .. \")y\", \"%1i%2%2\")\n\n\t-- final \"b\" has inherent vowel\n\ttext = gsub(text,\
      \ \"b$\", \"bo\")\n\ttext = gsub(text, \"b \", \"bo \")\n\t\n\t-- final r conjuncts\n\ttext = gsub(text, \"r([kszt])o$\", \"r%1\")\n\ttext = gsub(text, \"r([kszt])o \", \"r%1 \")\n\ttext = gsub(text, \"rkho$\", \"rkh\")\n\ttext = gsub(text, \"rkho \",\
      \ \"rkh \")\n\t\n\tif match(text, \"[ঁ-৽]\") and mode ~= \"debug\" then\n\t\treturn nil\n\telse\n\t\treturn mw.ustring.toNFC(text)\n\tend\nend\n \nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:17.305Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Agender+and+number&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54130 t=1555362617191711
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:17 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1344.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 583227925, 484307195, 698725468
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3906346\" pageid=\"3906346\" ns=\"828\" title=\"Module:gender and number\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-06T20:41:16Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Separate the genders with &quot;or&quot;, which is clearer than a comma\" xml:space=\"preserve\">--[=[\n\tThis module creates standardised displays for gender and number.\n\tIt converts\
      \ a gender specification into Wiki/HTML format.\n\t\n\tA gender specification is a list of one of the elements listed below,\n\tseparated by hyphens. Examples are: \"c\", \"n\", \"f-p\", \"m-an-p\"\n]=]--\n\nlocal export = {}\n\nlocal codes = {}\n\n--\
      \ A list of all possible \"parts\" that a specification can be made out of.\n\ncodes[\"?\"] = {type = \"other\", display = '&lt;abbr title=\"gender incomplete\"&gt;?&lt;/abbr&gt;'}\n\n-- Genders\ncodes[\"m\"] = {type = \"gender\", display = '&lt;abbr title=\"\
      masculine gender\"&gt;m&lt;/abbr&gt;'}\ncodes[\"f\"] = {type = \"gender\", display = '&lt;abbr title=\"feminine gender\"&gt;f&lt;/abbr&gt;'}\ncodes[\"n\"] = {type = \"gender\", display = '&lt;abbr title=\"neuter gender\"&gt;n&lt;/abbr&gt;'}\ncodes[\"c\"\
      ] = {type = \"gender\", display = '&lt;abbr title=\"common gender\"&gt;c&lt;/abbr&gt;'}\n\n-- Animacy\ncodes[\"an\"] = {type = \"animacy\", display = '&lt;abbr title=\"animate\"&gt;anim&lt;/abbr&gt;'}\ncodes[\"in\"] = {type = \"animacy\", display = '&lt;abbr\
      \ title=\"inanimate\"&gt;inan&lt;/abbr&gt;'}\n\n-- Personal\ncodes[\"pr\"] = {type = \"personal\", display = '&lt;abbr title=\"personal\"&gt;pers&lt;/abbr&gt;'}\ncodes[\"np\"] = {type = \"personal\", display = '&lt;abbr title=\"non-personal\"&gt;npers&lt;/abbr&gt;'}\n\
      \n-- Numbers\ncodes[\"s\"] = {type = \"number\", display = '&lt;abbr title=\"singular number\"&gt;sg&lt;/abbr&gt;'}\ncodes[\"d\"] = {type = \"number\", display = '&lt;abbr title=\"dual number\"&gt;du&lt;/abbr&gt;'}\ncodes[\"p\"] = {type = \"number\", display\
      \ = '&lt;abbr title=\"plural number\"&gt;pl&lt;/abbr&gt;'}\n\n-- Verb qualifiers\ncodes[\"impf\"] = {type = \"perfectivity\", display = '&lt;abbr title=\"imperfective aspect\"&gt;impf&lt;/abbr&gt;'}\ncodes[\"pf\"] = {type = \"perfectivity\", display =\
      \ '&lt;abbr title=\"perfective aspect\"&gt;pf&lt;/abbr&gt;'}\n\n-- Version of format_list that can be invoked from a template.\nfunction export.show_list(frame)\n\tlocal args = frame.args\n\tlocal lang = args[\"lang\"]; if lang == \"\" then lang = nil\
      \ end\n\tlocal list = {}\n\tlocal i = 1\n\t\n\twhile args[i] and args[i] ~= \"\" do\n\t\ttable.insert(list, args[i])\n\t\ti = i + 1\n\tend\n\t\n\treturn export.format_list(list, lang)\nend\n\n-- Format one or more gender specifications, in the form of\
      \ a table of specifications.\nfunction export.format_list(list, lang)\n\tlocal is_nounclass = nil\n\t\n\t-- Iterate over each specification and format it\n\tfor key, spec in ipairs(list) do\n\t\tlocal nc\n\t\tlist[key], nc = export.format_specification(spec,\
      \ lang)\n\t\t\n\t\t-- Ensure that the specifications are either all noun classes, or none are.\n\t\tif is_nounclass == nil then\n\t\t\tis_nounclass = nc\n\t\telseif is_nounclass ~= nc then\n\t\t\terror(\"Noun classes and genders cannot be mixed. Please\
      \ use either one or the other.\")\n\t\tend\n\tend\n\t\n\tif is_nounclass then\n\t\t-- Add the processed codes together with slashes\n\t\treturn \"&lt;span class=\\\"gender\\\"&gt;class \" .. table.concat(list, \"/\") .. \"&lt;/span&gt;\"\n\telse\n\t\t\
      -- Add the processed codes together with commas\n\t\treturn \"&lt;span class=\\\"gender\\\"&gt;\" .. table.concat(list, \" or \") .. \"&lt;/span&gt;\"\n\tend\nend\n\n-- Format the sub-parts of a single gender specification.\nfunction export.format_specification(spec,\
      \ lang)\n\tlocal categories = \"\"\n\tlocal ret = \"\"\n\tlocal is_nounclass = false\n\t\n\t-- If the specification starts with cX, then it is a noun class specification.\n\tif spec:find(\"^[1-9]\") or spec:find(\"^c[^-]\") then\n\t\tis_nounclass = true\n\
      \t\tcode = spec:gsub(\"^c\", \"\")\n\t\t\n\t\tif code == \"?\" then\n\t\t\tret = \"&lt;abbr class=\\\"noun-class\\\" title=\\\"noun class missing\\\"&gt;?&lt;/abbr&gt;\"\n\t\telse\n\t\t\tret = \"&lt;abbr class=\\\"noun-class\\\" title=\\\"noun class \"\
      \ .. code .. \"\\\"&gt;\" .. code .. \"&lt;/abbr&gt;\"\n\t\tend\n\telse\n\t\tlocal types = {}\n\t\t\n\t\t-- Split the parts and iterate over each part, converting it into its display form\n\t\tlocal parts = mw.text.split(spec, \"-\")\n\t\t\n\t\tfor key,\
      \ code in ipairs(parts) do\n\t\t\t-- Is this code valid?\n\t\t\tif not codes[code] then\n\t\t\t\terror(\"The gender specification \\\"\" .. spec .. \"\\\" is not valid.\")\n\t\t\tend\n\t\t\t\n\t\t\tif codes[code].type ~= \"other\" and types[codes[code].type]\
      \ then\n\t\t\t\t--require(\"Module:debug\").track(\"gender and number/multiple\")\n\t\t\t\t--require(\"Module:debug\").track(\"gender and number/multiple/\" .. spec)\n\t\t\t\terror(\"The gender specification \\\"\" .. spec .. \"\\\" contains multiple tags\
      \ of type \\\"\" .. codes[code].type .. \"\\\".\")\n\t\t\tend\n\t\t\t\t\n\t\t\tparts[key] = codes[code].display\n\t\t\ttypes[codes[code].type] = true\n\t\tend\n\t\t\n\t\t-- Add the processed codes together with non-breaking spaces\n\t\tret = table.concat(parts,\
      \ \"&amp;nbsp;\")\n\tend\n\t\n\t-- Do some additional checks if a language was given\n\tif lang then\n\t\t-- Is this an incomplete gender?\n\t\tif spec:find(\"?\") then\n\t\t\tlocal m_utilities = require(\"Module:utilities\")\n\t\t\tcategories = m_utilities.format_categories({lang:getCanonicalName()\
      \ .. \" terms with incomplete gender\"}, nil)\n\t\tend\n\t\t\n\t\t-- Check if the specification is valid\n\t\t--elseif langinfo.genders then\n\t\t--\tlocal valid_genders = {}\n\t\t--\tfor _, g in ipairs(langinfo.genders) do valid_genders[g] = true end\n\
      \t\t--\t\n\t\t--\tif not valid_genders[spec] then\n\t\t--\t\tlocal valid_string = {}\n\t\t--\t\tfor i, g in ipairs(langinfo.genders) do valid_string[i] = g end\n\t\t--\t\terror(\"The gender specification \\\"\" .. spec .. \"\\\" is not valid for \" ..\
      \ langinfo.names[1] .. \". Valid are: \" .. table.concat(valid_string, \", \"))\n\t\t--\tend\n\t\t--end\n\tend\n\t\n\treturn ret .. categories, is_nounclass\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:17.494Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3At%2B&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=72723 t=1555362617369183
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:17 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 681647093, 564507724, 705465825
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="548891" pageid="548891" ns="10" title="Template:t+"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T20:02:53Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:t+]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:translations|show|interwiki=tpos}}&lt;!--

      --&gt;{{#ifeq:{{{1|}}}|en|[[Category:English translations]]}}&lt;!--
      --&gt;{{#ifeq:{{{1|}}}|mul|[[Category:Translingual translations]]}}&lt;!--
      --&gt;{{#ifeq:{{{1|}}}|und|[[Category:Undefined translations]]}}&lt;!--

      --&gt;{{redlink category|{{{1|}}}|{{{2|}}}|template=t+}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:17.713Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata3%2Fc&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49888 t=1555362617576146
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:17 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1225.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 934548641, 509022576, 700821409
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4206194\" pageid=\"4206194\" ns=\"828\" title=\"Module:languages/data3/c\"><revisions><rev user=\"DTLHS\" timestamp=\"2019-03-28T15:43:48Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local u = mw.ustring.char\n\n-- UTF-8 encoded strings for some commonly-used diacritics\nlocal GRAVE     = u(0x0300)\nlocal ACUTE     = u(0x0301)\nlocal CIRC\
      \      = u(0x0302)\nlocal TILDE     = u(0x0303)\nlocal MACRON    = u(0x0304)\nlocal BREVE     = u(0x0306)\nlocal DOTABOVE  = u(0x0307)\nlocal DIAER     = u(0x0308)\nlocal CARON     = u(0x030C)\nlocal DGRAVE    = u(0x030F)\nlocal INVBREVE  = u(0x0311)\n\
      local DOTBELOW  = u(0x0323)\nlocal RINGBELOW = u(0x0325)\nlocal CEDILLA   = u(0x0327)\n\nlocal Cyrl = {\"Cyrl\"}\nlocal Deva = {\"Deva\"}\nlocal Latn = {\"Latn\"}\n\nlocal m = {}\n\nm[\"caa\"] = {\n\t\"Ch'orti'\",\n\t\"Q35177\",\n\t\"myn\",\n\totherNames\
      \ = {\"Chorti\"},\n\tscripts = Latn,\n}\n\nm[\"cab\"] = {\n\t\"Garifuna\",\n\t\"Q35490\",\n\t\"awd-taa\",\n\tancestors = {\"awd-taa-pro\"},\n\tscripts = Latn,\n}\n\nm[\"cac\"] = {\n\t\"Chuj\",\n\t\"Q35233\",\n\t\"myn\",\n\tscripts = Latn,\n}\n\nm[\"cad\"\
      ] = {\n\t\"Caddo\",\n\t\"Q56756\",\n\t\"cdd\",\n\tscripts = Latn,\n}\n\nm[\"cae\"] = {\n\t\"Laalaa\",\n\t\"Q35564\",\n\t\"alv-sng\",\n\tscripts = Latn,\n}\n\nm[\"caf\"] = {\n\t\"Southern Carrier\",\n\t\"Q12953426\",\n\t\"ath-nor\",\n\tscripts = Latn,\n\
      }\n\nm[\"cag\"] = {\n\t\"Nivaclé\",\n\t\"Q3182557\",\n\t\"sai-mtc\",\n\tscripts = Latn,\n}\n\nm[\"cah\"] = {\n\t\"Cahuarano\",\n\t\"Q2933175\",\n\t\"sai-zap\",\n\tscripts = Latn,\n}\n\nm[\"caj\"] = {\n\t\"Chané\",\n\t\"Q56721\",\n\t\"awd\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"cak\"] = {\n\t\"Kaqchikel\",\n\t\"Q35115\",\n\t\"myn\",\n\totherNames = {\"Cakchiquel\", \"Kakchiquel\", \"Cachiquel\"},\n\tscripts = Latn,\n}\n\nm[\"cal\"] = {\n\t\"Carolinian\",\n\t\"Q28427\",\n\t\"poz-mic\",\n\tscripts = Latn,\n\
      }\n\nm[\"cam\"] = {\n\t\"Cemuhî\",\n\t\"Q3009690\",\n\t\"poz-cln\",\n\tscripts = Latn,\n}\n\nm[\"can\"] = {\n\t\"Chambri\",\n\t\"Q5069707\",\n\t\"paa-lsp\",\n\tscripts = Latn,\n}\n\nm[\"cao\"] = {\n\t\"Chácobo\",\n\t\"Q2591202\",\n\t\"sai-pan\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"cap\"] = {\n\t\"Chipaya\",\n\t\"Q35235\",\n\t\"sai-ucp\",\n\tscripts = Latn,\n}\n\nm[\"caq\"] = {\n\t\"Car Nicobarese\",\n\t\"Q35156\",\n\t\"aav\",\n\totherNames = {\"Car\"},\n\tscripts = Latn,\n}\n\nm[\"car\"] = {\n\t\"Galibi Carib\"\
      ,\n\t\"Q56611\",\n\t\"sai-car\",\n\totherNames = {\"Carib\", \"Caribe\", \"Cariña\", \"Galibi\", \"Galibí\", \"Kalihna\", \"Kali'na\", \"Kalinya\", \"Maraworno\", \"Marworno\"},\n\tscripts = Latn,\n}\n\nm[\"cas\"] = {\n\t\"Tsimané\",\n\t\"Q35950\",\n\t\
      otherNames = {\"Chimané\", \"Mosetén\"},\n\tscripts = Latn,\n}\n\nm[\"cav\"] = {\n\t\"Cavineña\",\n\t\"Q524102\",\n\t\"sai-tac\",\n\totherNames = {\"Cavinena\"},\n\tscripts = Latn,\n}\n\nm[\"caw\"] = {\n\t\"Callawalla\",\n\t\"Q266417\",\n\t\"qfa-mix\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"cax\"] = {\n\t\"Chiquitano\",\n\t\"Q1844993\",\n\t\"qfa-iso\",\n\tscripts = Latn,\n}\n\nm[\"cay\"] = {\n\t\"Cayuga\",\n\t\"Q32967\",\n\t\"iro\",\n\tscripts = Latn,\n}\n\nm[\"caz\"] = {\n\t\"Canichana\",\n\t\"Q2936374\",\n\
      \t\"qfa-iso\",\n\tscripts = Latn,\n}\n\nm[\"cbb\"] = {\n\t\"Cabiyarí\",\n\t\"Q3450660\",\n\t\"awd-nwk\",\n\tscripts = Latn,\n}\n\nm[\"cbc\"] = {\n\t\"Carapana\",\n\t\"Q924405\",\n\t\"sai-tuc\",\n\tscripts = Latn,\n}\n\nm[\"cbd\"] = {\n\t\"Carijona\",\n\
      \t\"Q3446655\",\n\t\"sai-car\",\n\totherNames = {\"Carihona\", \"Karijona\", \"Karihona\", \"Jianacoto\", \"Jianácoto\", \"Hianakoto\", \"Hianacoto\", \"Hianákoto\", \"Guaque\", \"Omagua\", \"Umaua\", \"Umawa\"},\n\tscripts = Latn,\n}\n\nm[\"cbg\"] = {\n\
      \t\"Chimila\",\n\t\"Q2963680\",\n\t\"cba\",\n\tscripts = Latn,\n}\n\nm[\"cbi\"] = {\n\t\"Chachi\",\n\t\"Q2591329\",\n\t\"sai-bar\",\n\totherNames = {\"Cha'palaa\", \"Chapalaa\", \"Cha'palaachi\", \"Chapalaachi\", \"Cayapa\"},\n\tscripts = Latn,\n}\n\n\
      m[\"cbj\"] = {\n\t\"Ede Cabe\",\n\t\"Q33112829\",\n\t\"alv-von\",\n\tscripts = Latn,\n}\n\nm[\"cbk\"] = {\n\t\"Chavacano\",\n\t\"Q33281\",\n\t\"crp\",\n\totherNames = {\"Zamboanga Chavacano\"},\n\tscripts = Latn,\n}\n\nm[\"cbl\"] = {\n\t\"Bualkhaw Chin\"\
      ,\n\t\"Q9229830\",\n\t\"tbq-kuk\",\n\totherNames = {\"Bualkhaw\"},\n\tscripts = Latn,\n}\n\nm[\"cbn\"] = {\n\t\"Nyah Kur\",\n\t\"Q116849\",\n\t\"aav\",\n\totherNames = {\"Nyahkur\"},\n\tscripts = {\"Thai\"},\n\tsort_key = {\n\t\tfrom = {\"%p\", \"[็-๎\
      ]\", \"([เแโใไ])([ก-ฮ])\"},\n\t\tto   = {\"\", \"\", \"%2%1\"}},\n}\n\nm[\"cbo\"] = {\n\t\"Izora\",\n\t\"Q3915454\",\n\t\"nic-knj\",\n\tscripts = Latn,\n}\n\nm[\"cbq\"] = {\n\t\"Shuba\",\n\tnil,\n\t\"nic-knj\",\n\totherNames = {\"Tsucuba\", \"Cuba\"},\n\
      \tscripts = Latn,\n}\n\nm[\"cbr\"] = {\n\t\"Cashibo-Cacataibo\",\n\t\"Q5359560\",\n\t\"sai-pan\",\n\totherNames = {\"Cashibo\", \"Cacataibo\"},\n\tscripts = Latn,\n}\n\nm[\"cbs\"] = {\n\t\"Cashinahua\",\n\t\"Q2591230\",\n\t\"sai-pan\",\n\tscripts = Latn,\n\
      }\n\nm[\"cbt\"] = {\n\t\"Chayahuita\",\n\t\"Q1526525\",\n\tscripts = Latn,\n}\n\nm[\"cbu\"] = {\n\t\"Candoshi-Shapra\",\n\t\"Q642843\",\n\tscripts = Latn,\n}\n\nm[\"cbv\"] = {\n\t\"Cacua\",\n\t\"Q3192052\",\n\tscripts = Latn,\n}\n\nm[\"cbw\"] = {\n\t\"\
      Kinabalian\",\n\t\"Q6410324\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"cby\"] = {\n\t\"Carabayo\",\n\t\"Q3441762\",\n\t\"sai-tyu\",\n\totherNames = {\"Caraballo\", \"Yuri\", \"Aroje\", \"Yacumo\", \"Maku\", \"Macu\", \"Macusa\"},\n\tscripts = Latn,\n\
      }\n\nm[\"cca\"] = {\n\t\"Cauca\",\n\t\"Q5054242\",\n\t\"sai-chc\",\n\tscripts = Latn,\n}\n\nm[\"ccc\"] = {\n\t\"Chamicuro\",\n\t\"Q2155119\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"ccd\"] = {\n\t\"Cafundo Creole\",\n\t\"Q3331506\",\n\tscripts = Latn,\n\
      }\n\nm[\"cce\"] = {\n\t\"Chopi\",\n\t\"Q3437616\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ccg\"] = {\n\t\"Chamba Daka\",\n\t\"Q33120805\",\n\t\"nic-bco\",\n\totherNames = {\"Samba Daka\", \"Nakanyare\"},\n\tscripts = Latn,\n}\n\nm[\"cch\"] = {\n\t\"\
      Atsam\",\n\t\"Q34794\",\n\t\"nic-knj\",\n\tscripts = Latn,\n}\n\nm[\"ccj\"] = {\n\t\"Kasanga\",\n\t\"Q35542\",\n\t\"alv-sng\",\n\tscripts = Latn,\n}\n\nm[\"ccl\"] = {\n\t\"Cutchi-Swahili\",\n\t\"Q5196729\",\n\t\"crp\",\n\tscripts = Latn,\n}\n\nm[\"ccm\"\
      ] = {\n\t\"Malaccan Creole Malay\",\n\t\"Q12636092\",\n\t\"crp\",\n\tscripts = Latn,\n}\n\nm[\"cco\"] = {\n\t\"Comaltepec Chinantec\",\n\t\"Q2963735\",\n\t\"omq-chi\",\n\tscripts = Latn,\n}\n\nm[\"ccp\"] = {\n\t\"Chakma\",\n\t\"Q32952\",\n\t\"inc\",\n\t\
      scripts = {\"Cakm\"},\n\tancestors = {\"inc-mgd\"},\n}\n\nm[\"ccr\"] = {\n\t\"Cacaopera\",\n\t\"Q3438338\",\n\t\"nai-min\",\n\tscripts = Latn,\n}\n\nm[\"cda\"] = {\n\t\"Choni\",\n\t\"Q2964447\",\n\t\"sit\",\n}\n\nm[\"cde\"] = {\n\t\"Chenchu\",\n\t\"Q32981\"\
      ,\n\t\"dra\",\n\tscripts = {\"Telu\"},\n\tancestors = {\"te\"},\n}\n\nm[\"cdf\"] = {\n\t\"Chiru\",\n\t\"Q5102016\",\n\t\"tbq-kuk\",\n\tscripts = {\"Latn\", \"Beng\"},\n}\n\nm[\"cdg\"] = {\n\t\"Chamari\",\n\t\"Q5069473\",\n}\n\nm[\"cdh\"] = {\n\t\"Chambeali\"\
      ,\n\t\"Q12953424\",\n\tscripts = {\"Deva\", \"Takr\"},\n}\n\nm[\"cdi\"] = {\n\t\"Chodri\",\n\t\"Q5103788\",\n\tscripts = {\"Gujr\"},\n}\n\nm[\"cdj\"] = {\n\t\"Churahi\",\n\t\"Q12629039\",\n}\n\nm[\"cdm\"] = {\n\t\"Chepang\",\n\t\"Q5091700\",\n\t\"sit\"\
      ,\n\tscripts = Deva,\n}\n\nm[\"cdn\"] = {\n\t\"Chaudangsi\",\n\t\"Q5088056\",\n\t\"sit\",\n}\n\nm[\"cdo\"] = {\n\t\"Min Dong\",\n\t\"Q36455\",\n\t\"zhx-min-hai\",\n\totherNames = {\"Min Dong Chinese\"},\n\tscripts = {\"Hani\"},\n}\n\nm[\"cdr\"] = {\n\t\
      \"Cinda-Regi-Tiyal\",\n\t\"Q35596\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"cds\"] = {\n\t\"Chadian Sign Language\",\n\t\"Q10322099\",\n\t\"sgn\",\n\tscripts = Latn, -- when documented\n}\n\nm[\"cdy\"] = {\n\t\"Chadong\",\n\t\"Q926742\",\n}\n\nm[\"\
      cdz\"] = {\n\t\"Koda\",\n\t\"Q6425038\",\n\t\"mun\",\n\tscripts = {\"Beng\"},\n}\n\nm[\"cea\"] = {\n\t\"Lower Chehalis\",\n\t\"Q6693377\",\n\t\"sal\",\n\tscripts = Latn,\n}\n\nm[\"ceb\"] = {\n\t\"Cebuano\",\n\t\"Q33239\",\n\t\"phi\",\n\tscripts = Latn,\n\
      }\n\nm[\"ceg\"] = {\n\t\"Chamacoco\",\n\t\"Q3436637\",\n\t\"sai-zam\",\n\tscripts = Latn,\n}\n\nm[\"cen\"] = {\n\t\"Cen\",\n\t\"Q12628777\",\n\tscripts = Latn,\n}\n\nm[\"cet\"] = {\n\t\"Centúúm\",\n\t\"Q33608\",\n\tscripts = Latn,\n}\n\nm[\"cfa\"] = {\n\
      \t\"Dijim-Bwilim\",\n\t\"Q3438350\",\n\tscripts = Latn,\n}\n\nm[\"cfd\"] = {\n\t\"Cara\",\n\t\"Q35048\",\n\t\"alv\",\n\tscripts = Latn,\n}\n\nm[\"cfg\"] = {\n\t\"Como Karim\",\n\t\"Q35304\",\n\tscripts = Latn,\n}\n\nm[\"cfm\"] = {\n\t\"Falam Chin\",\n\t\
      \"Q56815\",\n\t\"tbq-kuk\",\n\totherNames = {\"Falam\"},\n\tscripts = {\"Beng\", \"Latn\"},\n}\n\nm[\"cga\"] = {\n\t\"Changriwa\",\n\t\"Q5072105\",\n\tscripts = Latn,\n}\n\nm[\"cgc\"] = {\n\t\"Kagayanen\",\n\t\"Q6346422\",\n\t\"mno\",\n\tscripts = Latn,\n\
      }\n\nm[\"cgg\"] = {\n\t\"Rukiga\",\n\t\"Q3270727\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"cgk\"] = {\n\t\"Chocangaca\",\n\t\"Q56604\",\n\t\"sit\",\n\tscripts = {\"Tibt\"},\n\tancestors = {\"xct\"},\n}\n\nm[\"chb\"] = {\n\t\"Chibcha\",\n\t\"Q2356431\"\
      ,\n\t\"cba\",\n}\n\nm[\"chc\"] = {\n\t\"Catawba\",\n\t\"Q5051602\",\n\t\"nai-cat\",\n\tscripts = Latn,\n}\n\nm[\"chd\"] = {\n\t\"Highland Oaxaca Chontal\",\n\t\"Q2964457\",\n\t\"nai-tqn\",\n\totherNames = {\"Oaxaca Chontal\", \"Oaxacan Chontal\", \"Chontal\"\
      , \"Tequistlatec\", \"Mountain Tequistlateco\", \"Highland Chontal\", \"Mountain Chontal\"},\n\tscripts = Latn,\n}\n\nm[\"chf\"] = {\n\t\"Tabasco Chontal\",\n\t\"Q35175\",\n\t\"myn\",\n\tscripts = Latn,\n}\n\nm[\"chg\"] = {\n\t\"Chagatai\",\n\t\"Q36831\"\
      ,\n\t\"trk\",\n\tscripts = {\"Arab\"},\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}\n\t},\n}\n\nm[\"chh\"] = {\n\t\"Chinook\"\
      ,\n\t\"Q6693380\",\n\t\"nai-ckn\",\n\tscripts = Latn,\n}\n\nm[\"chj\"] = {\n\t\"Ojitlán Chinantec\",\n\t\"Q5100110\",\n\t\"omq-chi\",\n\tscripts = Latn,\n}\n\nm[\"chk\"] = {\n\t\"Chuukese\",\n\t\"Q33161\",\n\t\"poz-mic\",\n\tscripts = Latn,\n}\n\nm[\"\
      chl\"] = {\n\t\"Cahuilla\",\n\t\"Q56438\",\n\t\"azc-cup\",\n\tscripts = Latn,\n\tentry_name = {\n\t\tfrom = {\"Á\", \"á\", \"É\", \"é\", \"Í\", \"í\", \"Ó\", \"ó\", \"Ú\", \"ú\", MACRON},\n\t\tto   = {\"A\", \"a\", \"E\", \"e\", \"I\", \"i\", \"O\", \"\
      o\", \"U\", \"u\"}} ,\n}\n\nm[\"chm\"] = {\n\t\"Eastern Mari\",\n\t\"Q973685\",\n\t\"urj\",\n\totherNames = {\"Meadow Mari\", \"Lowland Mari\", \"Midland Mari\", \"Standard Mari\", \"Upo Mari\", \"Mari\", \"Mari (Russia)\"},\t\n\tscripts = Cyrl,\n\ttranslit_module\
      \ = \"chm-translit\",\n\toverride_translit = true,\n\twikimedia_codes = {\"mhr\"},\n\tentry_name = {\n\t\tfrom = {GRAVE, ACUTE},\n\t\tto   = {}} ,\n}\n\nm[\"chn\"] = {\n\t\"Chinook Jargon\",\n\t\"Q35173\",\n\t\"crp\",\n\tscripts = {\"Latn\", \"Dupl\"},\n\
      }\n\nm[\"cho\"] = {\n\t\"Choctaw\",\n\t\"Q32979\",\n\t\"nai-mus\",\n\tscripts = Latn,\n}\n\nm[\"chp\"] = {\n\t\"Chipewyan\",\n\t\"Q27692\",\n\t\"ath-nor\",\n\totherNames = {\"Dëne Sųłiné\", \"Dënesųłiné\", \"Dëne\", \"Dene Suline\", \"Denesuline\", \"\
      Dene\"},\n\tscripts = Latn,\n}\n\nm[\"chq\"] = {\n\t\"Quiotepec Chinantec\",\n\t\"Q5758709\",\n\t\"omq-chi\",\n\tscripts = Latn,\n}\n\nm[\"chr\"] = {\n\t\"Cherokee\",\n\t\"Q33388\",\n\t\"iro\",\n\tscripts = {\"Cher\"},\n\ttranslit_module = \"Cher-translit\"\
      ,\n}\n\nm[\"cht\"] = {\n\t\"Cholón\",\n\t\"Q2591243\",\n\tscripts = Latn,\n}\n\nm[\"chw\"] = {\n\t\"Chuwabu\",\n\t\"Q5118412\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"chx\"] = {\n\t\"Chantyal\",\n\t\"Q4926344\",\n\tscripts = Deva,\n}\n\nm[\"chy\"] =\
      \ {\n\t\"Cheyenne\",\n\t\"Q33265\",\n\t\"alg\",\n\tscripts = Latn,\n}\n\nm[\"chz\"] = {\n\t\"Ozumacín Chinantec\",\n\t\"Q5100111\",\n\t\"omq-chi\",\n\tscripts = Latn,\n}\n\nm[\"cia\"] = {\n\t\"Cia-Cia\",\n\t\"Q35284\",\n\t\"poz-mun\",\n\tscripts = {\"\
      Hang\", \"Latn\", \"Arab\"},\n}\n\nm[\"cib\"] = {\n\t\"Ci Gbe\",\n\t\"Q12952445\",\n\tscripts = Latn,\n}\n\nm[\"cic\"] = {\n\t\"Chickasaw\",\n\t\"Q33192\",\n\t\"nai-mus\",\n\tscripts = Latn,\n}\n\nm[\"cid\"] = {\n\t\"Chimariko\",\n\t\"Q1294251\",\n\t\"\
      qfa-iso\",\n\tscripts = Latn,\n}\n\nm[\"cie\"] = {\n\t\"Cineni\",\n\t\"Q56243\",\n\tscripts = Latn,\n}\n\nm[\"cih\"] = {\n\t\"Chinali\",\n\t\"Q11855245\",\n\tscripts = Deva,\n}\n\nm[\"cik\"] = {\n\t\"Chitkuli Kinnauri\",\n\t\"Q15615982\",\n\t\"sit\",\n\
      }\n\nm[\"cim\"] = {\n\t\"Cimbrian\",\n\t\"Q37053\",\n\t\"gmw\",\n\tscripts = Latn,\n\tancestors = {\"bar\"},\n}\n\nm[\"cin\"] = {\n\t\"Cinta Larga\",\n\t\"Q5121095\",\n\t\"tup\",\n\tscripts = Latn,\n}\n\nm[\"cip\"] = {\n\t\"Chiapanec\",\n\t\"Q3364475\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"cir\"] = {\n\t\"Tiri\",\n\t\"Q7862281\",\n\t\"poz-cln\",\n\totherNames = {\"Tîrî\", \"Ciri\", \"Tinrin\", \"Méa\", \"Haméa\"},\n\tscripts = Latn,\n}\n\nm[\"ciy\"] = {\n\t\"Chaima\",\n\t\"Q12628867\",\n\t\"sai-car\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"cja\"] = {\n\t\"Western Cham\",\n\t\"Q12645578\",\n\t\"cmc\",\n\tscripts = {\"Arab\"},\n}\n\nm[\"cje\"] = {\n\t\"Chru\",\n\t\"Q2967321\",\n\t\"cmc\",\n\tscripts = Latn,\n}\n\nm[\"cjh\"] = {\n\t\"Upper Chehalis\",\n\t\"Q2962074\",\n\t\
      scripts = Latn,\n}\n\nm[\"cji\"] = {\n\t\"Chamalal\",\n\t\"Q56567\",\n\t\"cau-ava\",\n\tscripts = Cyrl,\n}\n\nm[\"cjk\"] = {\n\t\"Chokwe\",\n\t\"Q2422065\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"cjm\"] = {\n\t\"Eastern Cham\",\n\t\"Q2948019\",\n\t\"\
      cmc\",\n\tscripts = {\"Cham\"},\n}\n\nm[\"cjn\"] = {\n\t\"Chenapian\",\n\t\"Q5091044\",\n\tscripts = Latn,\n}\n\nm[\"cjo\"] = {\n\t\"Ashéninka Pajonal\",\n\t\"Q3450481\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"cjp\"] = {\n\t\"Cabécar\",\n\t\"Q27878\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"cjs\"] = {\n\t\"Shor\",\n\t\"Q34139\",\n\t\"trk\",\n\tscripts = Cyrl,\n}\n\nm[\"cjv\"] = {\n\t\"Chuave\",\n\t\"Q5115226\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"cjy\"] = {\n\t\"Jin\",\n\t\"Q56479\",\n\t\"zhx\",\n\totherNames\
      \ = {\"Jinyu\", \"Jinhua\", \"Jinese\", \"Shanxinese\", \"Jin Chinese\", \"Jinyu Chinese\"},\n\tscripts = {\"Hani\"},\n\tancestors = {\"ltc\"},\n}\n\nm[\"ckb\"] = {\n\t\"Central Kurdish\",\n\t\"Q36811\",\n\t\"ira-nwi\",\n\totherNames = {\"Sorani\"},\n\t\
      scripts = {\"ku-Arab\"},\n\tancestors = {\"ku\"},\n\ttranslit_module = \"ckb-translit\",\n\tentry_name = {\n            from = {u(0x0650), u(0x0652)},\n            to   = {}} ,\n}\n\nm[\"ckh\"] = {\n\t\"Chak\",\n\t\"Q12628870\",\n\t\"sit\",\n\totherNames\
      \ = {\"Sak\"},\n\tscripts = Latn,\n\tancestors = {\"kdv\"},\n}\n\nm[\"ckl\"] = {\n\t\"Cibak\",\n\t\"Q56279\",\n\t\"cdc-cbm\",\n\totherNames = {\"Chibuk\", \"Chibok\", \"Chibbak\", \"Chibbuk\", \"Kyibaku\", \"Kibbaku\", \"Kibaku\"},\n\tscripts = Latn,\n\
      }\n\nm[\"ckn\"] = {\n\t\"Kaang Chin\",\n\t\"Q6343432\",\n\t\"tbq-kuk\",\n\totherNames = {\"Kaang\"},\n\tscripts = Latn,\n}\n\nm[\"cko\"] = {\n\t\"Anufo\",\n\t\"Q34845\",\n\tscripts = Latn,\n}\n\nm[\"ckq\"] = {\n\t\"Kajakse\",\n\t\"Q3440422\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"ckr\"] = {\n\t\"Kairak\",\n\t\"Q3503002\",\n\tscripts = Latn,\n}\n\nm[\"cks\"] = {\n\t\"Tayo\",\n\t\"Q1133089\",\n\tscripts = Latn,\n}\n\nm[\"ckt\"] = {\n\t\"Chukchi\",\n\t\"Q33170\",\n\t\"qfa-cka\",\n\tscripts = Cyrl,\n}\n\nm[\"cku\"\
      ] = {\n\t\"Koasati\",\n\t\"Q35162\",\n\t\"nai-mus\",\n\tscripts = Latn,\n}\n\nm[\"ckv\"] = {\n\t\"Kavalan\",\n\t\"Q716627\",\n\t\"map\",\n\totherNames = {\"Kebalan\"},\n\tscripts = Latn,\n}\n\nm[\"ckx\"] = {\n\t\"Caka\",\n\t\"Q5018037\",\n\t\"nic-bod\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"cky\"] = {\n\t\"Cakfem-Mushere\",\n\t\"Q3441199\",\n\tscripts = Latn,\n}\n\nm[\"ckz\"] = {\n\t\"Cakchiquel-Quiché Mixed Language\",\n\t\"Q5054550\",\n\t\"myn\",\n\totherNames = {\"Cauque Mayan\"},\n\tscripts = Latn,\n}\n\n\
      m[\"cla\"] = {\n\t\"Ron\",\n\t\"Q3440432\",\n\t\"cdc-wst\",\n\totherNames = {\"Bokkos\", \"Daffo-Butura\", \"Shagawu\"},\n\tscripts = Latn,\n}\n\nm[\"clc\"] = {\n\t\"Chilcotin\",\n\t\"Q28535\",\n\t\"ath-nor\",\n\totherNames = {\"Tsilhqot'in\", \"Tsilhqut'in\"\
      , \"Tzilkotin\"},\n\tscripts = Latn,\n}\n\nm[\"cld\"] = {\n\t\"Chaldean Neo-Aramaic\",\n\t\"Q33236\",\n\t\"sem-ara\",\n\tscripts = {\"Syrc\"},\n}\n\nm[\"cle\"] = {\n\t\"Lealao Chinantec\",\n\t\"Q6509365\",\n\t\"omq-chi\",\n\tscripts = Latn,\n}\n\nm[\"\
      clh\"] = {\n\t\"Chilisso\",\n\t\"Q3250629\",\n}\n\nm[\"cli\"] = {\n\t\"Chakali\",\n\t\"Q35206\",\n\tscripts = Latn,\n}\n\nm[\"clj\"] = {\n\t\"Laitu Chin\",\n\t\"Q6474196\",\n\t\"tbq-kuk\",\n\totherNames = {\"Laitu\"},\n}\n\nm[\"clk\"] = {\n\t\"Idu\",\n\
      \t\"Q56412\",\n\totherNames = {\"Idu-Mishmi\", \"Idu Mishmi\"},\n\tscripts = {\"Tibt\"},\n}\n\nm[\"cll\"] = {\n\t\"Chala\",\n\t\"Q35190\",\n\tscripts = Latn,\n}\n\nm[\"clm\"] = {\n\t\"Klallam\",\n\t\"Q33404\",\n\t\"sal\",\n\totherNames = {\"Clallam\",\
      \ \"S'Klallam\"},\n\tscripts = Latn,\n}\n\nm[\"clo\"] = {\n\t\"Lowland Oaxaca Chontal\",\n\t\"Q2964450\",\n\t\"nai-tqn\",\n\totherNames = {\"Oaxaca Chontal\", \"Oaxacan Chontal\", \"Chontal\", \"Huamelultec\", \"Huamelula Chontal\", \"Coastal Chontal\"\
      },\n\tscripts = Latn,\n}\n\nm[\"clt\"] = {\n\t\"Lautu Chin\",\n\t\"Q6502107\",\n\t\"tbq-kuk\",\n\totherNames = {\"Lautu\"},\n}\n\nm[\"clu\"] = {\n\t\"Caluyanun\",\n\t\"Q32964\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"clw\"] = {\n\t\"Chulym\",\n\t\"Q33125\"\
      ,\n\t\"trk\",\n\totherNames = {\"Chulim\", \"Chulym-Turkic\", \"Küerik\", \"Chulym Tatar\", \"Melets Tatar\"},\n\tscripts = {\"Latn\", \"Cyrl\"},\n}\n\nm[\"cly\"] = {\n\t\"Eastern Highland Chatino\",\n\t\"Q12642078\",\n\t\"omq-cha\",\n\tscripts = Latn,\n\
      }\n\nm[\"cma\"] = {\n\t\"Maa\",\n\t\"Q12953680\",\n\t\"mkh-ban\",\n\tscripts = Latn,\n}\n\nm[\"cme\"] = {\n\t\"Cerma\",\n\t\"Q35074\",\n\tscripts = Latn,\n}\n\nm[\"cmg\"] = {\n\t\"Classical Mongolian\",\n\t\"Q5128303\",\n\t\"xgn\",\n\tscripts = {\"Mong\"\
      },\n\tancestors = {\"xng\"},\n\ttranslit_module = \"mn-translit\",\n}\n\nm[\"cmi\"] = {\n\t\"Emberá-Chamí\",\n\t\"Q3052042\",\n\t\"sai-chc\",\n\tscripts = Latn,\n}\n\nm[\"cml\"] = {\n\t\"Campalagian\",\n\t\"Q5027893\",\n\tscripts = Latn,\n}\n\nm[\"cmm\"\
      ] = {\n\t\"Michigamea\",\n\t\"Q12636809\",\n\t\"sio\",\n\tscripts = Latn,\n}\n\nm[\"cmn\"] = {\n\t\"Mandarin\",\n\t\"Q9192\",\n\t\"zhx\",\n\totherNames = {\"Mandarin Chinese\", \"Putonghua\", \"Guoyu\", \"Huayu\", \"Guanhua\", \"Beifanghua\", \"Standard\
      \ Chinese\"},\n\tscripts = {\"Hani\", \"Latn\"},\n\tancestors = {\"ltc\"},\n\twikimedia_codes = {\"zh\"},\n}\n\nm[\"cmo\"] = {\n\t\"Central Mnong\",\n\t\"Q33369881\",\n}\n\nm[\"cmr\"] = {\n\t\"Mro Chin\",\n\t\"Q16889978\",\n\t\"tbq-kuk\",\n\totherNames\
      \ = {\"Mro-Khimi Chin\", \"Mro\", \"Mro-Khimi\"},\n}\n\nm[\"cms\"] = {\n\t\"Messapic\",\n\t\"Q36383\",\n\t\"ine\",\n\totherNames = {\"Messapian\"},\n\tscripts = Latn, -- when documented here; otherwise written in a native script\n}\n\nm[\"cmt\"] = {\n\t\
      \"Camtho\",\n\t\"Q12628652\",\n\tscripts = Latn,\n}\n\nm[\"cna\"] = {\n\t\"Changthang\",\n\t\"Q12952322\",\n\tscripts = {\"Tibt\"},\n}\n\nm[\"cnb\"] = {\n\t\"Chinbon Chin\",\n\t\"Q12952327\",\n\t\"tbq-kuk\",\n\totherNames = {\"Chinbon\"},\n}\n\nm[\"cnc\"\
      ] = {\n\t\"Côông\",\n\t\"Q5202780\",\n\t\"tbq-lol\",\n}\n\nm[\"cng\"] = {\n\t\"Northern Qiang\",\n\t\"Q56559\",\n}\n\nm[\"cnh\"] = {\n\t\"Lai\",\n\t\"Q3250286\",\n\t\"tbq-kuk\",\n\totherNames = {\"Haka Chin\", \"Haka\"},\n}\n\nm[\"cni\"] = {\n\t\"Ashá\
      ninka\",\n\t\"Q3437230\",\n\t\"awd\",\n\totherNames = {\"Ashaninka\"},\n\tscripts = Latn,\n}\n\nm[\"cnk\"] = {\n\t\"Khumi Chin\",\n\t\"Q56308\",\n\t\"tbq-kuk\",\n\totherNames = {\"Khumi\", \"Khami\", \"Nisay\", \"Nise\", \"Eastern Khumi\", \"Eastern Khumi\
      \ Chin\"},\n}\n\nm[\"cnl\"] = {\n\t\"Lalana Chinantec\",\n\t\"Q12953437\",\n\t\"omq-chi\",\n\tscripts = Latn,\n}\n\nm[\"cno\"] = {\n\t\"Con\",\n\t\"Q3440883\",\n\t\"mkh-pal\",\n}\n\nm[\"cns\"] = {\n\t\"Central Asmat\",\n\t\"Q11732048\",\n\tscripts = Latn,\n\
      }\n\nm[\"cnt\"] = {\n\t\"Tepetotutla Chinantec\",\n\t\"Q5100113\",\n\t\"omq-chi\",\n\tscripts = Latn,\n}\n\nm[\"cnu\"] = {\n\t\"Chenoua\",\n\t\"Q33276\",\n\t\"ber\",\n\totherNames = {\"Shenwa\"},\n}\n\nm[\"cnw\"] = {\n\t\"Ngawn Chin\",\n\t\"Q6583675\"\
      ,\n\t\"tbq-kuk\",\n\totherNames = {\"Ngawn\"},\n}\n\nm[\"cnx\"] = {\n\t\"Middle Cornish\",\n\t\"Q12642603\",\n\t\"cel-bry\",\n\tscripts = Latn,\n\tancestors = {\"oco\"},\n}\n\nm[\"coa\"] = {\n\t\"Cocos Islands Malay\",\n\t\"Q3441699\",\n\tscripts = Latn,\n\
      }\n\nm[\"cob\"] = {\n\t\"Chicomuceltec\",\n\t\"Q3307204\",\n\t\"myn\",\n\tscripts = Latn,\n}\n\nm[\"coc\"] = {\n\t\"Cocopa\",\n\t\"Q33044\",\n\t\"nai-yuc\",\n\tscripts = Latn,\n}\n\nm[\"cod\"] = {\n\t\"Cocama\",\n\t\"Q33317\",\n\t\"tup\",\n\totherNames\
      \ = {\"Kokama\", \"Kokáma\", \"Cocama-Cocamilla\", \"Kukama-Kukamiria\", \"Cocamilla\", \"Kokamíya\", \"Cocaima\"},\n\tscripts = Latn,\n}\n\nm[\"coe\"] = {\n\t\"Koreguaje\",\n\t\"Q3198924\",\n\t\"sai-tuc\",\n\tscripts = Latn,\n}\n\nm[\"cof\"] = {\n\t\"\
      Tsafiki\",\n\t\"Q2567055\",\n\t\"sai-bar\",\n\totherNames = {\"Colorado\", \"Tsáchila\"},\n\tscripts = Latn,\n}\n\nm[\"cog\"] = {\n\t\"Chong\",\n\t\"Q3914630\",\n\t\"mkh-pea\",\n\tscripts = {\"Thai\", \"Khmr\"},\n\tsort_key = {\n\t\tfrom = {\"%p\", \"\
      [็-๎]\", \"([เแโใไ])([ก-ฮ])\"},\n\t\tto   = {\"\", \"\", \"%2%1\"}},\n}\n\nm[\"coh\"] = {\n\t\"Chichonyi-Chidzihana-Chikauma\",\n\t\"Q12629011\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"coj\"] = {\n\t\"Cochimi\",\n\t\"Q3915551\",\n\t\"nai-yuc\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"cok\"] = {\n\t\"Santa Teresa Cora\",\n\t\"Q12641754\",\n\t\"azc\",\n\tscripts = Latn,\n}\n\nm[\"col\"] = {\n\t\"Columbia-Wenatchi\",\n\t\"Q3324744\",\n\t\"sal\",\n\totherNames = {\"Columbia-Wenatchee\", \"Columbia-Moses\", \"Nxaamxcin\"\
      , \"Wenatchi\", \"Wenatchee\"},\n\tscripts = Latn,\n}\n\nm[\"com\"] = {\n\t\"Comanche\",\n\t\"Q32972\",\n\t\"azc-num\",\n\tscripts = Latn,\n}\n\nm[\"con\"] = {\n\t\"Cofán\",\n\t\"Q2669254\",\n\t\"qfa-iso\",\n\totherNames = {\"Cofan\", \"Kofan\", \"Kofane\"\
      , \"A'ingae\", \"Maku\", \"Macu\"},\n\tscripts = Latn,\n}\n\nm[\"coo\"] = {\n\t\"Comox\",\n\t\"Q13583746\",\n\t\"sal\",\n\tscripts = Latn,\n}\n\nm[\"cop\"] = {\n\t\"Coptic\",\n\t\"Q36155\",\n\t\"egx\",\n\totherNames = {\"Akhmimic\", \"Assiutic\", \"Bashmuric\"\
      , \"Bohairic\", \"Faiyumic\", \"Fayyumic\", \"Lycopolitan\", \"Memphitic\", \"Mesokemic\", \"Oxyrhynchite\", \"Sahidic\", \"Subakhmimic\", \"Thebaic\"}, -- Akhmimic etc are names of dialects which are currently, pending any suggestion that we should do\
      \ otherwise, subsumed into this code\n\tscripts = {\"Copt\"},\n\ttranslit_module = \"Copt-translit\",\n\tancestors = {\"egx-dem\"},\n\tentry_name = {\n\t\tfrom =\t{ \"ˋ\", GRAVE, MACRON, },\n\t\tto =\t{},\n\t},\n\tsort_key = \"cop-sortkey\",\n}\n\nm[\"\
      coq\"] = {\n\t\"Coquille\",\n\t\"Q12953452\",\n\t\"ath-pco\",\n\tscripts = Latn,\n}\n\nm[\"cot\"] = {\n\t\"Caquinte\",\n\t\"Q3915557\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"cou\"] = {\n\t\"Wamey\",\n\t\"Q36935\",\n\tscripts = Latn,\n}\n\nm[\"cov\"\
      ] = {\n\t\"Cao Miao\",\n\t\"Q2936935\",\n\t\"qfa-tak\",\n}\n\nm[\"cow\"] = {\n\t\"Cowlitz\",\n\t\"Q3001877\",\n\t\"sal\",\n\tscripts = Latn,\n}\n\nm[\"cox\"] = {\n\t\"Nanti\",\n\t\"Q15342275\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"coy\"] = {\n\t\"\
      Coyaima\",\n\t\"Q56450\",\n\t\"sai-car\",\n\tscripts = Latn,\n}\n\nm[\"coz\"] = {\n\t\"Chochotec\",\n\t\"Q2964262\",\n\t\"omq-pop\",\n\totherNames = {\"Chocho\", \"Chocholtec\"},\n\tscripts = Latn,\n}\n\nm[\"cpa\"] = {\n\t\"Palantla Chinantec\",\n\t\"\
      Q5100112\",\n\t\"omq-chi\",\n\tscripts = Latn,\n}\n\nm[\"cpb\"] = {\n\t\"Ucayali-Yurúa Ashéninka\",\n\t\"Q3501858\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"cpc\"] = {\n\t\"Ajyíninka Apurucayali\",\n\t\"Q3327405\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\n\
      m[\"cpg\"] = {\n\t\"Cappadocian Greek\",\n\t\"Q853414\",\n\t\"grk\",\n\totherNames = {\"Cappadocian\"},\n\tscripts = {\"polytonic\", \"fa-Arab\"},\n\tancestors = {\"grc\"},\n\ttranslit_module = \"grc-translit\",\n\tsort_key = {  -- Keep this synchronized\
      \ with el, grc, pnt\n\t\tfrom = {\"[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇ]\", \"[έὲἐἔἒἑἕἓ]\", \"[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗ]\", \"[ίὶῖἰἴἲἶἱἵἳἷϊΐῒῗ]\", \"[όὸὀὄὂὁὅὃ]\", \"[ύὺῦὐὔὒὖὑὕὓὗϋΰῢῧ]\", \"[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧ]\", \"ῥ\", \"ς\"},\n\t\tto   = {\"α\"\t\t\t\t\t\t, \"\
      ε\"\t\t , \"η\"\t\t\t\t\t\t, \"ι\"\t\t\t\t, \"ο\"\t\t , \"υ\"\t\t\t\t, \"ω\"\t\t\t\t\t\t, \"ρ\", \"σ\"}} ,\n}\n\nm[\"cpi\"] = {\n\t\"Chinese Pidgin English\",\n\t\"Q3435078\",\n\t\"crp\",\n\tscripts = Latn,\n\tancestors = {\"en\"},\n}\n\nm[\"cpn\"] = {\n\
      \t\"Cherepon\",\n\t\"Q35181\",\n\tscripts = Latn,\n}\n\nm[\"cpo\"] = {\n\t\"Kpee\",\n\t\"Q6435722\",\n\t\"dmn\",\n\totherNames = {\"Kpeego\", \"Kpeen\", \"Numu\"},\n}\n\nm[\"cps\"] = {\n\t\"Capiznon\",\n\t\"Q2937525\",\n\t\"phi\",\n\tscripts = Latn,\n\
      }\n\nm[\"cpu\"] = {\n\t\"Pichis Ashéninka\",\n\t\"Q7190661\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"cpx\"] = {\n\t\"Puxian\",\n\t\"Q56583\",\n\t\"zhx-min-hai\",\n\totherNames = {\"Pu-Xian\", \"Puxian Min\", \"Pu-Xian Min\", \"Pu Xian\", \"Pu Xian Chinese\"\
      , \"Putian\", \"Xinghua\", \"Hinghwa\"},\n\tscripts = {\"Hani\"},\n}\n\nm[\"cpy\"] = {\n\t\"South Ucayali Ashéninka\",\n\t\"Q3501868\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"cqd\"] = {\n\t\"Chuanqiandian Cluster Miao\",\n\t\"Q3307894\",\n\t\"hmn\",\n\
      \tscripts = {\"Latn\", \"Plrd\"},\n}\n\nm[\"cra\"] = {\n\t\"Chara\",\n\t\"Q5073694\",\n\tscripts = Latn,\n}\n\nm[\"crb\"] = {\n\t\"Island Carib\",\n\t\"Q3450735\",\n\t\"awd-taa\",\n\tancestors = {\"awd-taa-pro\"},\n\tscripts = Latn,\n}\n\nm[\"crc\"] =\
      \ {\n\t\"Lonwolwol\",\n\t\"Q3259216\",\n\t\"poz-oce\",\n\tscripts = Latn,\n}\n\nm[\"crd\"] = {\n\t\"Coeur d'Alene\",\n\t\"Q32915\",\n\tscripts = Latn,\n}\n\nm[\"crf\"] = {\n\t\"Caramanta\",\n\t\"Q3504195\",\n\t\"sai-chc\",\n\tscripts = Latn,\n}\n\nm[\"\
      crg\"] = {\n\t\"Michif\",\n\t\"Q13315\",\n\t\"qfa-mix\",\n\tscripts = Latn,\n}\n\nm[\"crh\"] = {\n\t\"Crimean Tatar\",\n\t\"Q33357\",\n\t\"trk\",\n\tscripts = {\"Latn\", \"Cyrl\"},\n}\n\nm[\"cri\"] = {\n\t\"Sãotomense\",\n\t\"Q36536\",\n\totherNames =\
      \ {\"Forro\", \"São Tomense\"},\n\tscripts = Latn,\n}\n\nm[\"crj\"] = {\n\t\"Southern East Cree\",\n\t\"Q12953464\",\n\t\"alg\",\n\tscripts = {\"Cans\"},\n\tancestors = {\"cr\"},\n\ttranslit_module = \"cr-translit\",\n}\n\nm[\"crk\"] = {\n\t\"Plains Cree\"\
      ,\n\t\"Q56699\",\n\t\"alg\",\n\tscripts = {\"Cans\", \"Latn\"},\n\tancestors = {\"cr\"},\n}\n\nm[\"crl\"] = {\n\t\"Northern East Cree\",\n\t\"Q12642195\",\n\t\"alg\",\n\tscripts = {\"Cans\"},\n\tancestors = {\"cr\"},\n\ttranslit_module = \"cr-translit\"\
      ,\n}\n\nm[\"crm\"] = {\n\t\"Moose Cree\",\n\t\"Q3446671\",\n\t\"alg\",\n\tscripts = {\"Cans\"},\n\tancestors = {\"cr\"},\n}\n\nm[\"crn\"] = {\n\t\"Cora\",\n\t\"Q12953454\",\n\t\"azc\",\n\tscripts = Latn,\n}\n\nm[\"cro\"] = {\n\t\"Crow\",\n\t\"Q1207611\"\
      ,\n\t\"sio\",\n\totherNames = {\"Apsalooke\"},\n\tscripts = Latn,\n}\n\nm[\"crq\"] = {\n\t\"Iyo'wujwa Chorote\",\n\t\"Q3540927\",\n\t\"sai-mtc\",\n\tscripts = Latn,\n}\n\nm[\"crr\"] = {\n\t\"Carolina Algonquian\",\n\t\"Q16113723\",\n\t\"alg\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"crs\"] = {\n\t\"Seychellois Creole\",\n\t\"Q34015\",\n\tscripts = Latn,\n}\n\nm[\"crt\"] = {\n\t\"Iyojwa'ja Chorote\",\n\t\"Q3504118\",\n\t\"sai-mtc\",\n\tscripts = Latn,\n}\n\nm[\"crv\"] = {\n\t\"Chaura\",\n\t\"Q2605680\",\n\t\"aav\"\
      ,\n\totherNames = {\"Tutet\"},\n}\n\nm[\"crw\"] = {\n\t\"Chrau\",\n\t\"Q5105629\",\n\t\"mkh-ban\",\n\tscripts = Latn,\n}\n\nm[\"crx\"] = {\n\t\"Carrier\",\n\t\"Q12953431\",\n\t\"ath-nor\",\n\tscripts = Latn,\n}\n\nm[\"cry\"] = {\n\t\"Cori\",\n\t\"Q35204\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"crz\"] = {\n\t\"Cruzeño\",\n\t\"Q2967636\",\n\t\"nai-chu\",\n\tscripts = Latn,\n}\n\nm[\"csa\"] = {\n\t\"Chiltepec Chinantec\",\n\t\"Q12953435\",\n\t\"omq-chi\",\n\tscripts = Latn,\n}\n\nm[\"csb\"] = {\n\t\"Kashubian\",\n\
      \t\"Q33690\",\n\t\"zlw\",\n\tscripts = Latn,\n\tancestors = {\"zlw-pom\"},\n}\n\nm[\"csc\"] = {\n\t\"Catalan Sign Language\",\n\t\"Q35768\",\n\t\"sgn\",\n\tscripts = Latn, -- when documented\n}\n\nm[\"csd\"] = {\n\t\"Chiangmai Sign Language\",\n\t\"Q5095211\"\
      ,\n\t\"sgn\",\n}\n\nm[\"cse\"] = {\n\t\"Czech Sign Language\",\n\t\"Q5201809\",\n\t\"sgn\",\n\tscripts = Latn, -- when documented\n}\n\nm[\"csf\"] = {\n\t\"Cuban Sign Language\",\n\t\"Q5192046\",\n\t\"sgn\",\n\tscripts = Latn, -- when documented\n}\n\n\
      m[\"csg\"] = {\n\t\"Chilean Sign Language\",\n\t\"Q3322112\",\n\t\"sgn\",\n\tscripts = Latn, -- when documented\n}\n\nm[\"csh\"] = {\n\t\"Asho Chin\",\n\t\"Q12627282\",\n\t\"tbq-kuk\",\n\totherNames = {\"Asho\"},\n}\n\nm[\"csi\"] = {\n\t\"Coast Miwok\"\
      ,\n\t\"Q2981109\",\n\t\"nai-you\",\n\tscripts = Latn,\n}\n\nm[\"csj\"] = {\n\t\"Songlai Chin\",\n\t\"Q7561280\",\n\t\"tbq-kuk\",\n\totherNames = {\"Songlai\"},\n}\n\nm[\"csk\"] = {\n\t\"Jola-Kasa\",\n\t\"Q3446622\",\n\tscripts = Latn,\n}\n\nm[\"csl\"]\
      \ = {\n\t\"Chinese Sign Language\",\n\t\"Q1094190\",\n\t\"sgn\",\n}\n\nm[\"csm\"] = {\n\t\"Central Sierra Miwok\",\n\t\"Q2944443\",\n\t\"nai-you\",\n\tscripts = Latn,\n}\n\nm[\"csn\"] = {\n\t\"Colombian Sign Language\",\n\t\"Q2748229\",\n\t\"sgn\",\n\t\
      scripts = Latn, -- when documented\n}\n\nm[\"cso\"] = {\n\t\"Sochiapam Chinantec\",\n\t\"Q7550388\",\n\t\"omq-chi\",\n\tscripts = Latn,\n}\n\nm[\"csq\"] = {\n\t\"Croatian Sign Language\",\n\t\"Q3507506\",\n\t\"sgn\",\n}\n\nm[\"csr\"] = {\n\t\"Costa Rican\
      \ Sign Language\",\n\t\"Q5174901\",\n\t\"sgn\",\n\tscripts = Latn, -- when documented\n}\n\nm[\"css\"] = {\n\t\"Southern Ohlone\",\n\t\"Q25559664\",\n\t\"nai-you\",\n\tscripts = Latn,\n}\n\nm[\"cst\"] = {\n\t\"Northern Ohlone\",\n\t\"Q25559666\",\n\t\"\
      nai-you\",\n\tscripts = Latn,\n}\n\nm[\"csv\"] = {\n\t\"Sumtu Chin\",\n\t\"Q7638087\",\n\t\"tbq-kuk\",\n\totherNames = {\"Sumtu\"},\n}\n\nm[\"csw\"] = {\n\t\"Swampy Cree\",\n\t\"Q56696\",\n\t\"alg\",\n\tscripts = Latn,\n\tancestors = {\"cr\"},\n}\n\nm[\"\
      csy\"] = {\n\t\"Siyin Chin\",\n\t\"Q7533375\",\n\t\"tbq-kuk\",\n\totherNames = {\"Siyin\"},\n}\n\nm[\"csz\"] = {\n\t\"Coos\",\n\t\"Q3126783\",\n\totherNames = {\"Hanis\", \"Hanis Coos\"},\n\tscripts = Latn,\n}\n\nm[\"cta\"] = {\n\t\"Tataltepec Chatino\"\
      ,\n\t\"Q7687853\",\n\t\"omq-cha\",\n\tscripts = Latn,\n}\n\nm[\"ctc\"] = {\n\t\"Chetco-Tolowa\",\n\t\"Q12628946\",\n\t\"ath-pco\",\n\totherNames = {\"Chetco\", \"Siletz Dee-ni\", \"Deeni\", \"Tututni\", \"Siletz\"},\n\tscripts = Latn,\n}\n\nm[\"ctd\"]\
      \ = {\n\t\"Tedim Chin\",\n\t\"Q56357\",\n\t\"tbq-kuk\",\n\totherNames = {\"Tedim\", \"Tiddim\", \"Sukte\"},\n\tscripts = {\"Latn\", \"Pauc\"},\n}\n\nm[\"cte\"] = {\n\t\"Tepinapa Chinantec\",\n\t\"Q12953443\",\n\t\"omq-chi\",\n\tscripts = Latn,\n}\n\nm[\"\
      ctg\"] = {\n\t\"Chittagonian\",\n\t\"Q33173\",\n\t\"inc\",\n\tscripts = {\"Beng\"},\n\tancestors = {\"inc-mgd\"},\n}\n\nm[\"cth\"] = {\n\t\"Thaiphum Chin\",\n\t\"Q16912048\",\n\t\"tbq-kuk\",\n\totherNames = {\"Thaiphum\"},\n}\n\nm[\"ctl\"] = {\n\t\"Tlacoatzintepec\
      \ Chinantec\",\n\t\"Q12643657\",\n\t\"omq-chi\",\n\tscripts = Latn,\n}\n\nm[\"ctm\"] = {\n\t\"Chitimacha\",\n\t\"Q1294227\",\n\t\"qfa-iso\",\n\tscripts = Latn,\n}\n\nm[\"ctn\"] = {\n\t\"Chhintange\",\n\t\"Q32994\",\n\tscripts = Deva,\n}\n\nm[\"cto\"] =\
      \ {\n\t\"Emberá-Catío\",\n\t\"Q3052039\",\n\t\"sai-chc\",\n\tscripts = Latn,\n}\n\nm[\"ctp\"] = {\n\t\"Western Highland Chatino\",\n\t\"Q32861734\",\n\t\"omq-cha\",\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"á\", \"é\", \"í\", \"ó\", \"ú\"},\n\t\
      \tto   = {\"a\", \"e\", \"i\", \"o\", \"u\"}},\n\tentry_name = {\n\t\tfrom = {\"[¹²³⁴⁵]\"},\n\t\tto   = {}}\n}\n\nm[\"cts\"] = {\n\t\"Northern Catanduanes Bicolano\",\n\t\"Q7130477\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"ctt\"] = {\n\t\"Wayanad Chetti\"\
      ,\n\t\"Q7975850\",\n\t\"dra\",\n\totherNames = {\"Chetti\"},\n\tscripts = {\"Taml\"},\n}\n\nm[\"ctu\"] = {\n\t\"Chol\",\n\t\"Q35179\",\n\t\"myn\",\n\tscripts = Latn,\n}\n\nm[\"ctz\"] = {\n\t\"Zacatepec Chatino\",\n\t\"Q8063754\",\n\t\"omq-cha\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"cua\"] = {\n\t\"Cua\",\n\t\"Q3441115\",\n\t\"mkh-ban\",\n\tscripts = Latn,\n}\n\nm[\"cub\"] = {\n\t\"Cubeo\",\n\t\"Q3006705\",\n\t\"sai-tuc\",\n\totherNames = {\"Cuveo\", \"Kubéo\", \"Kubeo\", \"Kubéu\", \"Kubeu\", \"Cobewa\", \"Cobé\
      ua\", \"Cobeua\", \"Kubéwa\", \"Kubewa\", \"Kobéua\", \"Kobeua\", \"Kobewa\", \"Pamiwa\"},\n\tscripts = Latn,\n}\n\nm[\"cuc\"] = {\n\t\"Usila Chinantec\",\n\t\"Q7901979\",\n\t\"omq-chi\",\n\tscripts = Latn,\n}\n\nm[\"cug\"] = {\n\t\"Cung\",\n\t\"Q35194\"\
      ,\n\t\"nic-bod\",\n\totherNames = {\"Chung\", \"Chungmboko\", \"Chung-Mboko\", \"Mboko\"},\n\tscripts = Latn,\n}\n\nm[\"cuh\"] = {\n\t\"Chuka\",\n\t\"Q12952344\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"cui\"] = {\n\t\"Cuiba\",\n\t\"Q2980421\",\n\t\"\
      sai-guh\",\n\tscripts = Latn,\n}\n\nm[\"cuj\"] = {\n\t\"Mashco Piro\",\n\t\"Q3446596\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"cuk\"] = {\n\t\"Kuna\",\n\t\"Q12953659\",\n\t\"cba\",\n\tscripts = Latn,\n}\n\nm[\"cul\"] = {\n\t\"Culina\",\n\t\"Q2475442\"\
      ,\n\t\"auf\",\n\totherNames = {\"Kulina\", \"Kulína\", \"Kulyna\", \"Curina\", \"Corina\", \"Korina\", \"Culina-Madijá\", \"Madijá\", \"Madija\", \"Madiha\", \"Madihá\"},\n\tscripts = Latn,\n}\n\nm[\"cuo\"] = {\n\t\"Cumanagoto\",\n\t\"Q5193784\",\n\t\"\
      sai-cpc\",\n\totherNames = {\"Cumanogota\", \"Cumana\", \"Cumaná\", \"Kumana\", \"Kumaná\"},\n\tscripts = Latn,\n}\n\nm[\"cup\"] = {\n\t\"Cupeño\",\n\t\"Q143130\",\n\t\"azc-cup\",\n\tscripts = Latn,\n}\n\nm[\"cuq\"] = {\n\t\"Cun\",\n\t\"Q2475478\",\n\t\
      \"qfa-lic\",\n}\n\nm[\"cur\"] = {\n\t\"Chhulung\",\n\t\"Q5116126\",\n\t\"sit\",\n\tscripts = Deva,\n}\n\nm[\"cut\"] = {\n\t\"Teutila Cuicatec\",\n\t\"Q12953453\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"cuu\"] = {\n\t\"Tai Ya\",\n\t\"Q3441122\",\n\
      \t\"qfa-tak\",\n\tscripts = Latn,\n}\n\nm[\"cuv\"] = {\n\t\"Cuvok\",\n\t\"Q3515056\",\n\t\"cdc-cbm\",\n\tscripts = Latn,\n}\n\nm[\"cuw\"] = {\n\t\"Chukwa\",\n\t\"Q12629033\",\n\t\"sit\",\n}\n\nm[\"cux\"] = {\n\t\"Tepeuxila Cuicatec\",\n\t\"Q20527242\"\
      ,\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"cuy\"] = {\n\t\"Cuitlatec\",\n\t\"Q2030998\",\n\t\"qfa-iso\",\n\totherNames = {\"Cuitlateco\"},\n\tscripts = Latn,\n}\n\nm[\"cvg\"] = {\n\t\"Chug\",\n\t\"Q47683644\",\n}\n\nm[\"cvn\"] = {\n\t\"Valle Nacional\
      \ Chinantec\",\n\t\"Q12953442\",\n\t\"omq-chi\",\n\tscripts = Latn,\n}\n\nm[\"cwa\"] = {\n\t\"Kabwa\",\n\t\"Q6344537\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"cwb\"] = {\n\t\"Maindo\",\n\t\"Q11002891\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"cwd\"\
      ] = {\n\t\"Woods Cree\",\n\t\"Q56305\",\n\t\"alg\",\n\tscripts = Latn,\n\tancestors = {\"cr\"},\n}\n\nm[\"cwe\"] = {\n\t\"Kwere\",\n\t\"Q779632\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"cwg\"] = {\n\t\"Chewong\",\n\t\"Q646718\",\n\t\"aav\",\n\totherNames\
      \ = {\"Cheq Wong\", \"Cheq-Wong\", \"Ceq Wong\"},\n\tscripts = Latn,\n}\n\nm[\"cwt\"] = {\n\t\"Kuwaataay\",\n\t\"Q35699\",\n\t\"alv\",\n\tscripts = Latn,\n}\n\nm[\"cya\"] = {\n\t\"Nopala Chatino\",\n\t\"Q15616302\",\n\t\"omq-cha\",\n\tscripts = Latn,\n\
      }\n\nm[\"cyb\"] = {\n\t\"Cayubaba\",\n\t\"Q3183382\",\n\t\"qfa-iso\",\n\totherNames = {\"Cayuvava\", \"Cayuwaba\"},\n\tscripts = Latn,\n}\n\nm[\"cyo\"] = {\n\t\"Cuyunon\",\n\t\"Q33153\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"czh\"] = {\n\t\"Huizhou\"\
      ,\n\t\"Q56546\",\n\t\"zhx\",\n\totherNames = {\"Huizhou Chinese\"},\n\tscripts = {\"Hani\"}, -- ?\n\tancestors = {\"ltc\"},\n}\n\nm[\"czk\"] = {\n\t\"Knaanic\",\n\t\"Q56384\",\n\t\"zlw\",\n\tscripts = {\"Hebr\"},\n\tancestors = {\"zlw-ocs\"},\n}\n\nm[\"\
      czn\"] = {\n\t\"Zenzontepec Chatino\",\n\t\"Q603106\",\n\t\"omq-cha\",\n\tscripts = Latn,\n}\n\nm[\"czo\"] = {\n\t\"Min Zhong\",\n\t\"Q56435\",\n\t\"zhx-min-shn\",\n\totherNames = {\"Min Zhong Chinese\"},\n\tscripts = {\"Hani\"},\n}\n\nm[\"czt\"] = {\n\
      \t\"Zotung Chin\",\n\t\"Q8074599\",\n\t\"tbq-kuk\",\n\totherNames = {\"Zotung\"},\n\tscripts = Latn,\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:18.738Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ael-translit&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42795 t=1555362618640409
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:18 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1280.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 502032646, 500248954, 694504322
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3927303\" pageid=\"3927303\" ns=\"828\" title=\"Module:el-translit\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-01-23T19:56:48Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"fix deletion of character\" xml:space=\"preserve\">local export = {}\n\nlocal tt = {\n\t[\"α\"] = \"a\",  [\"ά\"] = \"á\",  [\"β\"] = \"v\",  [\"γ\"] = \"g\",  [\"δ\"] = \"d\",\n\t[\"ε\
      \"] = \"e\",  [\"έ\"] = \"é\",  [\"ζ\"] = \"z\",  [\"η\"] = \"i\",  [\"ή\"] = \"í\",\n\t[\"θ\"] = \"th\", [\"ι\"] = \"i\",  [\"ί\"] = \"í\",  [\"ϊ\"] = \"ï\",  [\"ΐ\"] = \"ḯ\",\n\t[\"κ\"] = \"k\",  [\"λ\"] = \"l\",  [\"μ\"] = \"m\",  [\"ν\"] = \"n\", \
      \ [\"ξ\"] = \"x\",\n\t[\"ο\"] = \"o\",  [\"ό\"] = \"ó\",  [\"π\"] = \"p\",  [\"ρ\"] = \"r\",  [\"σ\"] = \"s\",\n\t[\"ς\"] = \"s\",  [\"τ\"] = \"t\",  [\"υ\"] = \"y\",  [\"ύ\"] = \"ý\",  [\"ϋ\"] = \"ÿ\",\n\t[\"ΰ\"] = \"ÿ́\",  [\"φ\"] = \"f\",  [\"χ\"] =\
      \ \"ch\", [\"ψ\"] = \"ps\", [\"ω\"] = \"o\",\n\t[\"ώ\"] = \"ó\",\n\t[\"Α\"] = \"A\",  [\"Ά\"] = \"Á\",  [\"Β\"] = \"V\",  [\"Γ\"] = \"G\",  [\"Δ\"] = \"D\",\n\t[\"Ε\"] = \"E\",  [\"Έ\"] = \"É\",  [\"Ζ\"] = \"Z\",  [\"Η\"] = \"I\",  [\"Ή\"] = \"Í\",\n\t\
      [\"Θ\"] = \"Th\", [\"Ι\"] = \"I\",  [\"Ί\"] = \"Í\",  [\"Κ\"] = \"K\",  [\"Λ\"] = \"L\",\n\t[\"Μ\"] = \"M\",  [\"Ν\"] = \"N\",  [\"Ξ\"] = \"X\",  [\"Ο\"] = \"O\",  [\"Ό\"] = \"Ó\",\n\t[\"Π\"] = \"P\",  [\"Ρ\"] = \"R\",  [\"Σ\"] = \"S\",  [\"Τ\"] = \"T\"\
      ,  [\"Υ\"] = \"Y\",\n\t[\"Ύ\"] = \"Ý\",  [\"Φ\"] = \"F\",  [\"Χ\"] = \"Ch\", [\"Ψ\"] = \"Ps\", [\"Ω\"] = \"O\",\n\t[\"Ώ\"] = \"Ó\",\n\t[\";\"] = \"?\",  [\"·\"] = \";\"\n}\n\n-- transliterates any words or phrases\nfunction export.tr(text, lang, sc)\n\t\
      local gsub = mw.ustring.gsub\n\t\n\tlocal acute = mw.ustring.char(0x301)\n\tlocal diaeresis = mw.ustring.char(0x308)\n\t\n\ttext = gsub(text, \"([αεηΑΕΗ])([υύ])(.?)\",\n\t\t\t\tfunction (vowel, upsilon, following)\n\t\t\t\t\treturn tt[vowel]\n\t\t\t\t\t\
      \t.. (upsilon == \"ύ\" and acute or \"\")\n\t\t\t\t\t\t.. ((\"θκξπσςτφχψ\"):find(following) and \"f\" or \"v\")\n\t\t\t\t\t\t.. following\n\t\t\t\tend)\n\t\n\ttext = gsub(text, \"([αεοωΑΕΟΩ])([ηή])\",\n\t\t\t\tfunction (vowel, ita)\n\t\t\t\t\tif ita ==\
      \ \"ή\" then\n\t\t\t\t\t\treturn tt[vowel] .. \"i\" .. diaeresis .. acute\n\t\t\t\t\telse\n\t\t\t\t\t\treturn tt[vowel] .. \"i\" .. diaeresis\n\t\t\t\t\tend\n\t\t\t\tend)\n\t\n\ttext = gsub(text, \"[οΟ][υύ]\",\n\t\t\t\t{[\"ου\"] = \"ou\", [\"ού\"] = \"\
      oú\",\n\t\t\t\t [\"Ου\"] = \"Ou\", [\"Ού\"] = \"Oú\"})\n\n\ttext = gsub(text, \"(.?)([μΜ])π\",\n\t\t\t\tfunction (before, mi)\n\t\t\t\t\tif before == \"\" or before == \" \" or before == \"-\" then\n\t\t\t\t\t\tif mi == \"Μ\" then\n\t\t\t\t\t\t\treturn\
      \ before .. \"B\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn before .. \"b\"\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend)\n\t\n\ttext = gsub(text, \"(.?)([νΝ])τ\",\n\t\t\t\tfunction (before, ni)\n\t\t\t\t\tif before == \"\" or before == \" \" or before ==\
      \ \"-\" then\n\t\t\t\t\t\tif ni == \"Ν\" then\n\t\t\t\t\t\t\treturn before .. \"D\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn before .. \"d\"\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend)\n\n\ttext = gsub(text, \"γ([γξχ])\", \"n%1\")\n\n\ttext = gsub(text,\
      \ \".\", tt)\n\n\treturn text\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:19.375Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atrans-mid&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44106 t=1555362619278305
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:19 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1224.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 922441316, 241132072, 695912570
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="454352" pageid="454352" ns="10" title="Template:trans-mid"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T20:02:56Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:trans-mid]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefini..." xml:space="preserve">&lt;noinclude&gt;
      [[Category:Column templates|{{PAGENAME}}]]
      &lt;/noinclude&gt;| style="width:1%; " |
      | class="translations-cell" style="background-color:#ffffe0; vertical-align:top; text-align:left; width:48%; " |
      &lt;noinclude&gt;[[Category:Translation templates|trans mid]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:19.990Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3At-check&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=61315 t=1555362619876614
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:19 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 582799395, 555803623, 688087916
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4291229" pageid="4291229" ns="10" title="Template:t-check"><revisions><rev user="Erutuon" timestamp="2017-06-16T04:31:54Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Undo revision 46216530 by [[Special:Contributions/Erutuon|Erutuon]] ([[User talk:Erutuon|talk]]): reverting, as I&#039;m not sure which of my changes caused the large number of Lua memory errors" xml:space="preserve">&lt;span class="ttbc"&gt;&lt;!--
      --&gt;&lt;sup class="ttbc"&gt;(please [[Wiktionary:Translations#Translations to be checked|verify]])&lt;/sup&gt; &lt;!--
      --&gt;{{#invoke:translations|show}}&lt;!--
      --&gt;&lt;/span&gt;&lt;!--

      --&gt;{{categorize&lt;!--
      --&gt;|{{{1}}}&lt;!--
      --&gt;|Requests for review of {{#invoke:languages/templates|getByCode|{{{1}}}|getCanonicalName}} translations&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:25.615Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc%2Fredundant%2FJpan&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38681 t=1555362625525083
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:25 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 676316578, 742198739, 695521336
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc/redundant/Jpan" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:10:20.683Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43279 t=1555362620582192
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:20 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 423538724, 643381214, 702489506
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4253487\" pageid=\"4253487\" ns=\"828\" title=\"Module:languages/templates\"><revisions><rev user=\"Dodecaplex\" timestamp=\"2019-02-02T15:50:43Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"&quot;We prefer module name with spaces&quot; =&gt; Then this version should be more coherent...\" xml:space=\"preserve\">local export = {}\n\nfunction export.exists(frame)\n\tlocal args\
      \ = frame.args\n\tlocal lang = args[1] or error(\"Language code has not been specified. Please pass parameter 1 to the module invocation.\")\n\t\n\tlang = require(\"Module:languages\").getByCode(lang)\n\t\n\tif lang then\n\t\treturn \"1\"\n\telse\n\t\t\
      return \"\"\n\tend\nend\n\n-- Used by the following JS:\n-- * [[WT:ACCEL]]\n-- * [[WT:EDIT]]\n-- * [[WT:NEC]]\nfunction export.getByCode(frame)\n\tlocal args = frame.args\n\tlocal langcode = args[1] or error(\"Language code has not been specified. Please\
      \ pass parameter 1 to the module invocation.\")\n\tlocal itemname = args[2] or error(\"Type of information to look up has not been specified. Please pass parameter 2 to the module invocation.\")\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(langcode)\n\
      \t\n\tif not lang then\n\t\terror(\"The language code '\" .. langcode .. \"' is not valid.\")\n\tend\n\t\n\t\n\t-- The item that the caller wanted to look up\n\t\n\tif itemname == \"getOtherNames\" then\n\t\tlocal index = args[3]; if index == \"\" then\
      \ index = nil end\n\t\tindex = tonumber(index) or error(\"Please specify the numeric index of the desired name.\")\n\t\treturn lang:getOtherNames()[index] or \"\"\n\telseif itemname == \"getFamily\" then\n\t\treturn lang:getFamily():getCode()\n\telseif\
      \ itemname == \"getWikimediaLanguages\" then\n\t\tlocal index = args[3]; if index == \"\" then index = nil end\n\t\tindex = tonumber(index) or error(\"Please specify the numeric index of the desired language.\")\n\t\tlocal langs = lang:getWikimediaLanguages()\n\
      \t\t\n\t\tif langs[index] then\n\t\t\treturn langs[index]:getCode()\n\t\telse\n\t\t\treturn \"\"\n\t\tend\n\telseif itemname == \"getScripts\" then\n\t\tlocal index = args[3]; if index == \"\" then index = nil end\n\t\tindex = tonumber(index) or error(\"\
      Please specify the numeric index of the desired script.\")\n\t\tlocal scripts = lang:getScriptCodes()\n\t\t\n\t\tif scripts[index] then\n\t\t\treturn scripts[index]\n\t\telse\n\t\t\treturn \"\"\n\t\tend\n\telseif itemname == \"getAncestors\" then\n\t\t\
      local index = args[3]; if index == \"\" then index = nil end\n\t\tindex = tonumber(index) or error(\"Please specify the numeric index of the desired ancestor.\")\n\t\tlocal ancestors = lang:getAncestors()\n\t\t\n\t\tif ancestors[index] then\n\t\t\treturn\
      \ ancestors[index]:getCode()\n\t\telse\n\t\t\treturn \"\"\n\t\tend\n\telseif itemname == \"transliterate\" then\n\t\tlocal text = args[3]; if text == \"\" then text = nil end\n\t\tlocal sc = args[4]; if sc == \"\" then sc = nil end\n\t\tlocal module_override\
      \ = args[5]; if module_override == \"\" then module_override = nil end\n\t\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil)\n\t\treturn lang:transliterate(text, sc, module_override)\
      \ or \"\"\n\telseif itemname == \"makeEntryName\" then\n\t\tlocal text = args[3]; if text == \"\" then text = nil end\n\t\treturn lang:makeEntryName(text) or \"\"\n\telseif itemname == \"makeSortKey\" then\n\t\tlocal text = args[3]; if text == \"\" then\
      \ text = nil end\n\t\treturn lang:makeSortKey(text) or \"\"\n\telseif lang[itemname] then\n\t\tlocal ret = lang[itemname](lang)\n\t\t\n\t\tif type(ret) == \"string\" then\n\t\t\treturn ret\n\t\telse\n\t\t\terror(\"The function \\\"\" .. itemname .. \"\\\
      \" did not return a string value.\")\n\t\tend\n\telse\n\t\terror(\"Requested invalid item name \\\"\" .. itemname .. \"\\\".\")\n\tend\nend\n\nfunction export.getByCanonicalName(frame)\n\tlocal args = frame.args\n\tlocal langname = args[1] or error(\"\
      Language name has not been specified. Please pass parameter 1 to the module invocation.\")\n\t\n\tlocal lang = require(\"Module:languages\").getByCanonicalName(langname)\n\t\n\tif lang then\n\t\treturn lang:getCode()\n\telse\n\t\treturn \"\"\n\tend\nend\n\
      \nfunction export.getByName(frame)\n\tlocal args = frame.args\n\tlocal langname = args[1] or error(\"Language name has not been specified. Please pass parameter 1 to the module invocation.\")\n\t\n\tlocal lang = require(\"Module:languages\").getByName(langname)\n\
      \t\n\tif lang then\n\t\treturn lang:getCode()\n\telse\n\t\treturn \"\"\n\tend\nend\n\nfunction export.makeEntryName(frame)\n\tlocal args = frame.args\n\tlocal langname = args[1] or error(\"Language name has not been specified. Please pass parameter 1 to\
      \ the module invocation.\")\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(langname)\n\t\n\tif lang then\n\t\treturn lang:makeEntryName(args[2])\n\telse\n\t\treturn \"\"\n\tend\nend\n\nfunction export.getCanonicalName(frame)\n\tlocal langCode,\
      \ args\n\tif require(\"Module:yesno\")(frame.args.parent) then\n\t\targs = frame:getParent().args\n\telse\n\t\targs = frame.args\n\tend\n\tlangCode = args[1]\n\t\n\tif not langCode or langCode == \"\" then\n\t\terror(\"Supply a language code in parameter\
      \ 1.\")\n\tend\n\t\n\treturn mw.loadData(\"Module:languages/code to canonical name\")[langCode]\n\t\tor not args.return_if_invalid and \"\" or langCode\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:20.858Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Acategorize&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=39758 t=1555362620764103
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:20 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1231.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 605567905, 257208744, 688545137
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="2420883" pageid="2420883" ns="10" title="Template:categorize"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T17:33:57Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:categorize]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefin..." xml:space="preserve">{{#invoke:utilities|template_categorize}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:21.047Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aattention&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48424 t=1555362620946349
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1628'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:21 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 599908404, 644104838, 689337918
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="1072765" pageid="1072765" ns="10" title="Template:attention"><revisions><rev user="Daniel Carrero" timestamp="2017-05-20T17:50:41Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">&lt;onlyinclude&gt;&lt;!--

      --&gt;&lt;span id="attentionseeking{{{1|}}}{{{id|}}}" class="attentionseeking" lang="{{{1|}}}" {{#if:{{{2|}}}|title="{{#invoke:ugly hacks|escape_html|{{{2}}}}}"}}&gt;&lt;/span&gt;&lt;!--

      --&gt;&lt;includeonly&gt;&lt;!--

      --&gt;{{categorize&lt;!--
      --&gt;|{{#if:{{{lang|}}}|{{{lang|}}}|{{{1|}}}}}&lt;!--
      --&gt;|Requests for attention concerning {{#invoke:languages/templates|getByCode|{{#if:{{{lang|}}}|{{{lang|}}}|{{{1|}}}}}|getCanonicalName}}&lt;!--
      --&gt;|sort={{{sort|}}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;{{#if:{{{topic|}}}|[[Category:Entries needing topical attention]]}}&lt;!--
      --&gt;{{#if:{{{2|}}}||[[Category:attention lacking explanation]]}}&lt;!--

      --&gt;&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;/onlyinclude&gt;{{documentation}}</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:21.220Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fescape_html&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=40000 t=1555362621128772
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '289'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:21 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1340.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 599255093, 839321329, 699875545
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/escape_html" to="Template:tracking/ugly hacks/escape html" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/escape html" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:10:21.381Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fescape_html%2Ffrom+Template%3Aattention&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44542 t=1555362621283770
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '361'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:21 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 495809958, 721681840, 687634488
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/escape_html/from Template:attention" to="Template:tracking/ugly hacks/escape html/from Template:attention" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/escape html/from Template:attention" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:10:22.476Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aru-translit&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=40982 t=1555362622356961
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:22 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1225.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 204069468, 829277653, 694542798
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3907076\" pageid=\"3907076\" ns=\"828\" title=\"Module:ru-translit\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-02-22T03:03:16Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"fixes for ё in prefixes and suffixes\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\nFIXME:\n\n1. (DONE) If you write '''Б'''ез, it transliterates to '''B'''jez instead of\n   '''B'''ez,\
      \ as it should.\n2. (DONE) Convert ъ to nothing before comma or other non-letter particle, e.g.\n   in Однимъ словомъ, идешь на чтеніе.\n3. (DONE) Make special-casing for adjectives in -го and for что (and friends)\n    be the default, and implement transformations\
      \ in Cyrillic rather than after\n    translit so that we can display the transformed Cyrillic in the\n    \"phonetic respelling\" notation of {{ru-IPA}}.\n4. (DONE) Convert apostrophe to ъ before transliteration when after a consonant\n   and before a\
      \ vowel (requested by Atitarev).\n]=]\n\nlocal u = mw.ustring.char\nlocal rfind = mw.ustring.find\nlocal rsub = mw.ustring.gsub -- WARNING: Don't return this directly in a function, or surround in parens\nlocal rmatch = mw.ustring.match\nlocal rsplit =\
      \ mw.text.split\nlocal ulower = mw.ustring.lower\nlocal usub = mw.ustring.sub\n\nlocal GR = u(0x0300) -- grave =  ̀\nlocal TEMP_G = u(0xFFF1) -- substitute to preserve g from changing to v\n\nlocal function ine(x) -- if not empty\n\tif x == \"\" then return\
      \ nil else return x end\nend\n\n-- In this table, we now map Cyrillic е and э to je and e, and handle the\n-- post-consonant version (plain e and ɛ) specially.\nlocal tab = {\n\t[\"А\"]=\"A\", [\"Б\"]=\"B\", [\"В\"]=\"V\", [\"Г\"]=\"G\", [\"Д\"]=\"D\"\
      , [\"Е\"]=\"Je\", [\"Ё\"]=\"Jó\", [\"Ж\"]=\"Ž\", [\"З\"]=\"Z\", [\"И\"]=\"I\", [\"Й\"]=\"J\",\n\t[\"К\"]=\"K\", [\"Л\"]=\"L\", [\"М\"]=\"M\", [\"Н\"]=\"N\", [\"О\"]=\"O\", [\"П\"]=\"P\", [\"Р\"]=\"R\", [\"С\"]=\"S\", [\"Т\"]=\"T\", [\"У\"]=\"U\", [\"Ф\"\
      ]=\"F\",\n\t[\"Х\"]=\"X\", [\"Ц\"]=\"C\", [\"Ч\"]=\"Č\", [\"Ш\"]=\"Š\", [\"Щ\"]=\"Šč\", [\"Ъ\"]=\"ʺ\", [\"Ы\"]=\"Y\", [\"Ь\"]=\"ʹ\", [\"Э\"]=\"E\", [\"Ю\"]=\"Ju\", [\"Я\"]=\"Ja\",\n\t['а']='a', ['б']='b', ['в']='v', ['г']='g', ['д']='d', ['е']='je', ['ё\
      ']='jó', ['ж']='ž', ['з']='z', ['и']='i', ['й']='j',\n\t['к']='k', ['л']='l', ['м']='m', ['н']='n', ['о']='o', ['п']='p', ['р']='r', ['с']='s', ['т']='t', ['у']='u', ['ф']='f',\n\t['х']='x', ['ц']='c', ['ч']='č', ['ш']='š', ['щ']='šč', ['ъ']='ʺ', ['ы']='y',\
      \ ['ь']='ʹ', ['э']='e', ['ю']='ju', ['я']='ja',\n\t-- Russian style quotes\n\t['«']='“', ['»']='”',\n\t-- archaic, pre-1918 letters\n\t['І']='I', ['і']='i', ['Ѳ']='F', ['ѳ']='f',\n\t['Ѣ']='Jě', ['ѣ']='jě', ['Ѵ']='I', ['ѵ']='i',\n}\n\n-- following based\
      \ on ru-common for use with is_monosyllabic()\n-- any Cyrillic or Latin vowel, including ёЁ and composed Cyrillic vowels with grave accent;\n-- not including accented Latin vowels except ě (FIXME, might want to change this)\nlocal lowercase_vowels = \"\
      аеиоуяэыюіѣѵүѐѝёaeiouyěɛ\"\nlocal uppercase_vowels = \"АЕИОУЯЭЫЮІѢѴҮЀЍЁAEIOUYĚƐ\"\nlocal vowels = lowercase_vowels .. uppercase_vowels\n\n-- FIXME! Doesn't work with ɣ, which gets included in this character set\nlocal non_consonants = \"[\" .. vowels ..\
      \ \"ЪЬъьʹʺ%A]\"\nlocal consonants = \"[^\" .. vowels .. \"ЪЬъьʹʺ%A]\"\n\nlocal map_to_plain_e_map = {[\"Е\"] = \"E\", [\"е\"] = \"e\", [\"Ѣ\"] = \"Ě\", [\"ѣ\"] = \"ě\", [\"Э\"] = \"Ɛ\", [\"э\"] = \"ɛ\"}\nlocal function map_to_plain_e(pre, e)\n\treturn\
      \ pre .. map_to_plain_e_map[e]\nend\n\nlocal map_to_je_map = {[\"Е\"] = \"Je\", [\"е\"] = \"je\", [\"Ѣ\"] = \"Jě\", [\"ѣ\"] = \"jě\", [\"Э\"] = \"E\", [\"э\"] = \"e\"}\nlocal function map_to_je(pre, e)\n\tif e == nil then\n\t\te = pre\n\t\tpre = \"\"\n\
      \tend\n\treturn pre .. map_to_je_map[e]\nend\n\n-- decompose composed grave chars; they will map to uncomposed Latin letters for\n-- consistency with other char+grave combinations, and we do this early to\n-- avoid problems converting to e or je\nlocal\
      \ decompose_grave_map = {['ѐ'] = 'е' .. GR, ['Ѐ'] = 'Е' .. GR, ['ѝ'] = 'и' .. GR, ['Ѝ'] = 'И' .. GR}\n\n-- True if Cyrillic or decomposed Latin word has no more than one vowel;\n-- includes non-syllabic stems such as льд-; copied from ru-common and modified\n\
      -- to avoid having to import that module (which would slow things down\n-- significantly)\nlocal function is_monosyllabic(word)\n\treturn not rfind(word, \"[\" .. vowels .. \"].*[\" .. vowels .. \"]\")\nend\n\n-- Apply transformations to the Cyrillic to\
      \ more closely match pronunciation.\n-- Return two arguments: the \"original\" text (after decomposing composed\n-- grave characters), and the transformed text. If the two are different,\n-- {{ru-IPA}} should display a \"phonetic respelling\" notation.\
      \ \n-- NOADJ disables special-casing for adjectives in -го, while FORCEADJ forces\n-- special-casing for adjectives, including those in -аго (pre-reform spelling)\n-- and disables checking for exceptions (e.g. много, ого). NOSHTO disables\n-- special-casing\
      \ for что and related words.\nfunction export.apply_tr_fixes(text, noadj, noshto, forceadj)\n\t-- decompose composed grave characters before we convert Cyrillic е to\n\t-- Latin e or je\n\ttext = rsub(text, \"[ѐЀѝЍ]\", decompose_grave_map)\n\n\tlocal origtext\
      \ = text\n\t-- the second half of the if-statement below is an optimization; see above.\n\tif not noadj and text:find(\"го\") then\n\t\tlocal v = {[\"г\"] = \"в\", [\"Г\"] = \"В\"}\n\t\tlocal repl = function(e, g, o, sja) return e .. v[g] .. o .. (sja\
      \ or \"\") end\n\t\t-- Handle какого-нибудь/-либо/-то; must be done first because of an exception\n\t\t-- made for бого-, снего-, etc.\n\t\ttext = rsub(text, \"([кКтТ][аА][кК][оеОЕ\" .. (forceadj and \"аА\" or \"\") .. \"][\\204\\129\\204\\128]?)([гГ])([о\
      О]%-)\", repl)\n\t\tif not forceadj then\n\t\t\t-- handle много\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Мм]но[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle немного, намного\n\t\t\ttext\
      \ = rsub(text, \"%f[%a\\204\\129\\204\\128]([Нн][еа]мно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle до́рого [short form of дорогой, adverb]\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Д\
      д]о[\\204\\129\\204\\128]?ро)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle недо́рого [short form of недорогой, adverb]\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Нн]едо[\\204\\129\\204\\128]?ро)го%f[^%a\\204\\\
      129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle стро́го\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Сс]тро[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle нестро́го\n\t\t\ttext\
      \ = rsub(text, \"%f[%a\\204\\129\\204\\128]([Нн]естро[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle на́строго\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Нн]а[\\204\\129\\204\\128]?стро)г\
      о%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle убо́го\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Уу]бо[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle поло́го\n\
      \t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Пп]оло[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- check for neuter short forms of compound adjectives in -но́гий\n\t\t\tif rfind(text, \"оно[\\204\\\
      129\\204\\128]?го%f[^%a\\204\\129\\204\\128]\") then\n\t\t\t\t-- handle безно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Бб]езно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle босо\
      но́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Бб]осоно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle веслоно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Вв]еслоно\
      [\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle длинноно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Дд]линноно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G\
      \ .. \"о\")\n\t\t\t\t-- handle двуно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Дд]вуно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle коротконо́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\\
      204\\129\\204\\128]([Кк]оротконо[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle кривоно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Кк]ривоно[\\204\\129\\204\\128]?)го%f[^%a\\204\\\
      129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle одноно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Оо]дноно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle пятино́го\n\
      \t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Пп]ятино[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle трёхно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Тт]р[ёе][\\204\\129\\\
      204\\128]?хно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle хромоно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Хх]ромоно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"\
      %1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle четвероно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Чч]етвероно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle шестино́го\n\t\t\t\ttext\
      \ = rsub(text, \"%f[%a\\204\\129\\204\\128]([Шш]естино[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\tend\n\t\t\t-- handle пе́го [short form of пе́гий \"piebald\"]\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\\
      204\\128]([Пп]е[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle лого, сого, ого\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([лсЛС]?[Оо][\\204\\129\\204\\128]?)г(о[\\204\\129\\204\\128]?)%f[^%a\\\
      204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"%2\")\n\t\t\t-- handle Того, То́го (but not того or Того́, which have /v/)\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128](То́?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle\
      \ лего\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Лл]е[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle игого, огого; note, we substitute TEMP_G for both г's\n\t\t\t-- because otherwise the\
      \ ого- at the beginning gets converted to ово\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([ИиОо])гог(о[\\204\\129\\204\\128]?)%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\" .. TEMP_G .. \"%2\")\n\t\t\t-- handle Диего\n\t\t\ttext = rsub(text,\
      \ \"%f[%a\\204\\129\\204\\128](Дие́?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle бо́лого\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Бб]о[\\204\\129\\204\\128]?ло)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G\
      \ .. \"о\")\n\t\t\t-- handle *ого-, *его- (e.g. бого-, снего-)\n\t\t\ttext = rsub(text, \"([ео][\\204\\129\\204\\128]?)го%-\", \"%1\" .. TEMP_G .. \"о-\")\n\t\tend\n\t\t--handle genitive/accusative endings, which are spelled -ого/-его/-аго\n\t\t-- (-ogo/-ego/-ago)\
      \ but transliterated -ovo/-evo/-avo; only for adjectives\n\t\t-- and pronouns, excluding words like много, ого (-аго occurs in\n\t\t-- pre-reform spelling); \\204\\129 is an acute accent, \\204\\128 is a grave accent\n\t\tlocal pattern = \"([оеОЕ\" ..\
      \ (forceadj and \"аА\" or \"\") .. \"][\\204\\129\\204\\128]?)([гГ])([оО][\\204\\129\\204\\128]?)\"\n\t\tlocal reflexive = \"([сС][яЯ][\\204\\129\\204\\128]?)\"\n\t\ttext = rsub(text, pattern .. \"%f[^%a\\204\\129\\204\\128]\", repl)\n\t\ttext = rsub(text,\
      \ pattern .. reflexive .. \"%f[^%a\\204\\129\\204\\128]\", repl)\n\t\t-- handle сегодня\n\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Сс]е)г(о[\\204\\129\\204\\128]?дня)%f[^%a\\204\\129\\204\\128]\", \"%1в%2\")\n\t\t-- handle сегодняшн-\n\t\ttext\
      \ = rsub(text, \"%f[%a\\204\\129\\204\\128]([Сс]е)г(о[\\204\\129\\204\\128]?дняшн)\", \"%1в%2\")\n\t\t-- replace TEMP_G with g; must be done after the -go -&gt; -vo changes\n\t\ttext = rsub(text, TEMP_G, \"г\")\n\tend\n\n\t-- the second half of the if-statement\
      \ below is an optimization; see above.\n\tif not noshto and text:find(\"то\") then\n\t\tlocal ch2sh = {[\"ч\"] = \"ш\", [\"Ч\"] = \"Ш\"}\n\t\t-- Handle что\n\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Чч])(то[\\204\\129\\204\\128]?)%f[^%a\\204\\\
      129\\204\\128]\",\n\t\t\tfunction(ch, to) return ch2sh[ch] .. to end)\n\t\t-- Handle чтобы, чтоб\n\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Чч])(то[\\204\\129\\204\\128]?бы?)%f[^%a\\204\\129\\204\\128]\",\n\t\t\tfunction(ch, to) return ch2sh[ch]\
      \ .. to end)\n\t\t-- Handle ничто\n\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Нн]и)ч(то[\\204\\129\\204\\128]?)%f[^%a\\204\\129\\204\\128]\", \"%1ш%2\")\n\tend\n\n\t-- Handle мягкий, лёгкий, легчать, etc.\n\ttext = rsub(text, \"([МмЛл][яеё][\\\
      204\\129\\204\\128]?)г([кч])\", \"%1х%2\")\n\n\treturn origtext, text\nend\n\n-- Transliterate after the pronunciation-related transformations of\n-- export.apply_tr_fixes() have been applied. Called from {{ru-IPA}}.\n-- INCLUDE_MONOSYLLABIC_JO_ACCENT\
      \ is as in export.tr().\nfunction export.tr_after_fixes(text, include_monosyllabic_jo_accent)\n\t-- Remove word-final hard sign, either utterance-finally or followed by\n\t-- a non-letter character such as space, comma, period, hyphen, etc.\n\ttext = rsub(text,\
      \ \"[Ъъ]$\", \"\")\n\ttext = rsub(text, \"[Ъъ]([%A])\", \"%1\")\n\n\t-- Convert apostrophe the hard sign between consonant and vowel (i.e.\n\t-- in the places where the hard sign normally occurs in modern text).\n\t-- Apostrophe is sometimes used to indicate\
      \ the hard sign; this may have\n\t-- originated from the forcible removal of the hard sign from printing\n\t-- offices in the 1920's, after the implementation of the Russian\n\t-- orthography reform. The if-statement is an optimization; see below.\n\t\
      if rfind(text, \"'\") then\n\t\ttext = rsub(text, \"(\" .. consonants .. \")'([\" .. lowercase_vowels .. \"])\", \"%1ъ%2\")\n\t\ttext = rsub(text, \"(\" .. consonants .. \")'([\" .. uppercase_vowels .. \"])\", \"%1Ъ%2\")\n\tend\n\n\t-- the if-statement\
      \ below isn't necessary but may speed things up,\n\t-- particularly when include_monosyllabic_jo_accent isn't set, in that\n\t-- in the majority of cases where ё doesn't occur, we avoid a pattern find\n\t-- (in is_monosyllabic()) and three pattern subs.\
      \ The translit module needs\n\t-- to be as fast as possible since it may be called hundreds or\n\t-- thousands of times on some pages.\n\tif rfind(text, \"[Ёё]\") then\n\t\t-- We need to special-case ё after a \"hushing\" consonant, which becomes\n\t\t\
      -- ó (or o), without j. We also need special cases for monosyllabic ё\n\t\t-- when INCLUDE_MONOSYLLABIC_JO_ACCENT isn't set, so we don't add the\n\t\t-- accent mark that we would otherwise include.\n\t\tif not include_monosyllabic_jo_accent and is_monosyllabic(text)\
      \ and not rfind(text, \"^%-\") then\n\t\t\ttext = rsub(text, \"([жшчщЖШЧЩ])ё\",\"%1o\")\n\t\t\ttext = text:gsub(\"ё\", \"jo\")\n\t\t\ttext = text:gsub(\"Ё\", \"Jo\")\n\t\telse\n\t\t\t-- in a nonmonosyllabic word where there is a later stressed vowel\n\t\
      \t\t-- in the same word (e.g. трёхэта́жный), don't put an accent mark on ё.\n\t\t\ttext = rsub(text, \"ё([^ %-]-[\" .. vowels .. \"]́)\", \"jo%1\")\n\t\t\t-- same goes if there are two ё's in a word (трёхколёсный, четырёхзвёздный)\n\t\t\ttext = rsub(text,\
      \ \"ё([^ %-]-ё)\", \"jo%1\")\n\t\t\t-- same goes if this is a prefix (четырёх-)\n\t\t\ttext = rsub(text, \"ё([^ %-]-%-)$\", \"jo%1\")\n\t\t\t-- same goes if there is a stressed vowel *followed* by ё (this is\n\t\t\t-- quite rare but occurs e.g. in А́нд\
      зё \"Anjō (city in Japan)\"\n\t\t\ttext = rsub(text, \"([\" .. vowels .. \"]́[^ %-]-)ё\", \"%1jo\")\n\t\t\t-- handle hushing consonant + ё + another accented vowel (e.g. шёлкопряди́льня)\n\t\t\t-- (already partly converted by previous regexes)\n\t\t\t\
      text = rsub(text, \"([жшчщЖШЧЩ])j\",\"%1\")\n\t\t\t-- handle remaining cases of hushing consonant + ё\n\t\t\ttext = rsub(text, \"([жшчщЖШЧЩ])ё\",\"%1ó\")\n\t\t\t-- conversion of remaining ё will occur as a result of 'tab'.\n\t\tend\n\tend\n\n\t-- ю after\
      \ ж and ш becomes u (e.g. брошюра, жюри)\n\ttext = rsub(text, \"([жшЖШ])ю\",\"%1u\")\n\n\t-- the if-statement below isn't necessary but may speed things up in that\n\t-- in the majority of cases where the letters below don't occur, we avoid\n\t-- six pattern\
      \ subs.\n\tif rfind(text, \"[ЕеѢѣЭэ]\") then\n\t\t-- е after a dash at the beginning of a word becomes e, and э becomes ɛ\n\t\t-- (like after a consonant)\n\t\ttext = rsub(text, \"^(%-)([ЕеѢѣЭэ])\", map_to_plain_e)\n\t\ttext = rsub(text, \"(%s%-)([ЕеѢѣ\
      Ээ])\", map_to_plain_e)\n\t\t-- don't get confused by single quote or parens between consonant and е;\n\t\t-- e.g. Б'''ез''', американ(ец)\n\t\ttext = rsub(text, \"(\" .. consonants .. \"['%(%)]*)([ЕеѢѣЭэ])\", map_to_plain_e)\n\n\t\t-- This is now the\
      \ default\n\t\t-- е after a vowel or at the beginning of a word becomes je, and э becomes e\n\t\t-- text = rsub(text, \"^([ЕеѢѣЭэ])\", map_to_je)\n\t\t-- text = rsub(text, \"(\" .. non_consonants .. \")([ЕеѢѣЭэ])\", map_to_je)\n\t\t-- -- need to do it\
      \ twice in case of sequences of such vowels\n\t\t-- text = rsub(text, \"^([ЕеѢѣЭэ])\", map_to_je)\n\t\t-- text = rsub(text, \"(\" .. non_consonants .. \")([ЕеѢѣЭэ])\", map_to_je)\n\tend\n\n\ttext = (rsub(text,'.',tab))\n\treturn text\nend\n\n-- Transliterates\
      \ text, which should be a single word or phrase. It should\n-- include stress marks, which are then preserved in the transliteration.\n-- ё is a special case: it is rendered (j)ó in multisyllabic words and\n-- monosyllabic words in multi-word phrases,\
      \ but rendered (j)o without an\n-- accent in isolated monosyllabic words, unless INCLUDE_MONOSYLLABIC_JO_ACCENT\n-- is specified. (This is used in conjugation and declension tables.)\n-- NOADJ disables special-casing for adjectives in -го, while FORCEADJ\
      \ forces\n-- special-casing for adjectives and disables checking for exceptions\n-- (e.g. много). NOSHTO disables special-casing for что and related words.\nfunction export.tr(text, lang, sc, include_monosyllabic_jo_accent, noadj, noshto, forceadj)\n\t\
      local origtext, subbed_text = export.apply_tr_fixes(text, noadj, noshto, forceadj)\n\treturn export.tr_after_fixes(subbed_text, include_monosyllabic_jo_accent)\nend\n\n-- translit with various special-case substitutions; NOADJ disables\n-- special-casing\
      \ for adjectives in -го, while FORCEADJ forces special-casing\n-- for adjectives and disables checking for expections (e.g. много).\n-- NOSHTO disables special-casing for что and related words. SUB is used\n-- to implement arbitrary substitutions in the\
      \ Cyrillic text before other\n-- transformations are applied and before translit. It is of the form\n-- FROM/TO,FROM/TO,...\nfunction export.tr_sub(text, include_monosyllabic_jo_accent, noadj, noshto, sub,\n\tforceadj)\n\tif type(text) == 'table' then\
      \ -- called directly from a template\n\t\tinclude_monosyllabic_jo_accent = ine(text.args.include_monosyllabic_jo_accent)\n\t\tnoadj = ine(text.args.noadj)\n\t\tnoshto = ine(text.args.noshto)\n\t\tsub = ine(text.args.sub)\n\t\ttext = text.args[1]\n\tend\n\
      \n\tif sub then\n\t\tlocal subs = rsplit(sub, \",\")\n\t\tfor _, subpair in ipairs(subs) do\n\t\t\tlocal subsplit = rsplit(subpair, \"/\")\n\t\t\ttext = rsub(text, subsplit[1], subsplit[2])\n\t\tend\n\tend\n\n\treturn export.tr(text, nil, nil, include_monosyllabic_jo_accent,\
      \ noadj, noshto, forceadj)\nend\n\n--for adjectives, pronouns\nfunction export.tr_adj(text, include_monosyllabic_jo_accent)\n\tif type(text) == 'table' then -- called directly from a template\n\t\tinclude_monosyllabic_jo_accent = ine(text.args.include_monosyllabic_jo_accent)\n\
      \t\ttext = text.args[1]\n\tend\n\n\t-- we have to include \"forceadj\" because typically when tr_adj() is called\n\t-- from the noun or adjective modules, it's called with suffix ого, which\n\t-- would otherwise trigger the exceptional case and be transliterated\
      \ as ogo\n\treturn export.tr(text, nil, nil, include_monosyllabic_jo_accent, false,\n\t\t\"noshto\", \"forceadj\")\nend\n\nreturn export\n\n-- For Vim, so we get 4-space tabs\n-- vim: set ts=4 sw=4 noet:</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:23.051Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atrans-bottom&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42456 t=1555362622954988
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1335'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:23 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 754008724, 569121247, 690842807
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="454351" pageid="454351" ns="10" title="Template:trans-bottom"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T20:02:55Z" contentformat="text/x-wiki"
      contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:trans-bottom]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite)
      [Move=Allow only template editors and administrators] (indef..." xml:space="preserve">|}&lt;/div&gt;&lt;/div&gt;&lt;noinclude&gt;[[Category:Column templates|{{PAGENAME}}]]&lt;/noinclude&gt;&lt;noinclude&gt;[[Category:Translation templates|trans bottom]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:10:23.620Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aar-translit&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56601 t=1555362623482319
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:23 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 742095716, 654576808, 691662687
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3920342\" pageid=\"3920342\" ns=\"828\" title=\"Module:ar-translit\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-02-25T00:13:19Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 51617746 by [[Special:Contributions/Erutuon|Erutuon]] ([[User talk:Erutuon|talk]])\" xml:space=\"preserve\">-- Authors: Benwing, ZxxZxxZ, Atitarev\n\nlocal export = {}\n\n\
      local U = mw.ustring.char\nlocal rfind = mw.ustring.find\nlocal rsubn = mw.ustring.gsub\nlocal rmatch = mw.ustring.match\nlocal rsplit = mw.text.split\nlocal gcodepoint = mw.ustring.gcodepoint\n\n-- assigned below\nlocal has_diacritics\n\n-- version of\
      \ rsubn() that discards all but the first return value\nlocal function rsub(term, foo, bar)\n\tlocal retval = rsubn(term, foo, bar)\n\treturn retval\nend\n\nlocal zwnj = U(0x200c) -- zero-width non-joiner\nlocal alif_madda = U(0x622)\nlocal alif_hamza_below\
      \ = U(0x625)\nlocal alif = U(0x627)\nlocal taa_marbuuTa = U(0x629)\nlocal laam = U(0x644)\nlocal waaw = U(0x648)\nlocal alif_maqSuura = U(0x649)\nlocal yaa = U(0x64A)\nlocal fatHataan = U(0x64B)\nlocal Dammataan = U(0x64C)\nlocal kasrataan = U(0x64D)\n\
      local fatHa = U(0x64E)\nlocal Damma = U(0x64F)\nlocal kasra = U(0x650)\nlocal shadda = U(0x651)\nlocal sukuun = U(0x652)\nlocal dagger_alif = U(0x670)\nlocal alif_waSl = U(0x671)\n--local zwj = U(0x200d) -- zero-width joiner\nlocal lrm = U(0x200e) -- left-to-right\
      \ mark\nlocal rlm = U(0x200f) -- right-to-left mark\n\nlocal tt = {\n\t-- consonants\n\t[\"ب\"]=\"b\", [\"ت\"]=\"t\", [\"ث\"]=\"ṯ\", [\"ج\"]=\"j\", [\"ح\"]=\"ḥ\", [\"خ\"]=\"ḵ\",\n\t[\"د\"]=\"d\", [\"ذ\"]=\"ḏ\", [\"ر\"]=\"r\", [\"ز\"]=\"z\", [\"س\"]=\"\
      s\", [\"ش\"]=\"š\",\n\t[\"ص\"]=\"ṣ\", [\"ض\"]=\"ḍ\", [\"ط\"]=\"ṭ\", [\"ظ\"]=\"ẓ\", [\"ع\"]=\"ʿ\", [\"غ\"]=\"ḡ\",\n\t[\"ف\"]=\"f\", [\"ق\"]=\"q\", [\"ك\"]=\"k\", [\"ڪ\"]=\"k\", [\"ل\"]=\"l\", [\"م\"]=\"m\", [\"ن\"]=\"n\",\n\t[\"ه\"]=\"h\",\n\t-- tāʾ marbū\
      ṭa (special) - always after a fátḥa (a), silent at the end of\n\t-- an utterance, \"t\" in ʾiḍāfa or with pronounced tanwīn. We catch\n\t-- most instances of tāʾ marbūṭa before we get to this stage.\n\t[taa_marbuuTa]=\"t\", -- tāʾ marbūṭa = ة\n\t-- control\
      \ characters\n\t[zwnj]=\"-\", -- ZWNJ (zero-width non-joiner)\n\t-- [zwj]=\"\", -- ZWJ (zero-width joiner)\n\t-- rare letters\n\t[\"پ\"]=\"p\", [\"چ\"]=\"č\", [\"ڤ\"]=\"v\", [\"ڥ\"]=\"v\", [\"گ\"]=\"g\", [\"ڨ\"]=\"g\", [\"ڧ\"]=\"q\",\n\t-- semivowels or\
      \ long vowels, alif, hamza, special letters\n\t[\"ا\"]=\"ā\", -- ʾalif\n\t-- hamzated letters\n\t[\"أ\"]=\"ʾ\", -- hamza over alif\n\t[alif_hamza_below]=\"ʾ\", -- hamza under alif\n\t[\"ؤ\"]=\"ʾ\", -- hamza over wāw\n\t[\"ئ\"]=\"ʾ\", -- hamza over yā\n\
      \t[\"ء\"]=\"ʾ\", -- hamza on the line\n\t-- long vowels\n\t[waaw]=\"w\", --\"ū\" after ḍamma (u) and not before diacritic\n\t[yaa]=\"y\", --\"ī\" after kasra (i) and not before diacritic\n\t[alif_maqSuura]=\"ā\", -- ʾalif maqṣūra\n\t[alif_madda]=\"ʾā\"\
      , -- ʾalif madda\n\t[alif_waSl]= \"\", -- hamzatu l-waṣl\n\t[dagger_alif] = \"ā\", -- ʾalif xanjariyya = dagger ʾalif (Koranic diacritic)\n\t-- short vowels, šádda and sukūn\n\t[fatHataan]=\"an\", -- fatḥatan\n\t[Dammataan]=\"un\", -- ḍammatan\n\t[kasrataan]=\"\
      in\", -- kasratan\n\t[fatHa]=\"a\", -- fatḥa\n\t[Damma]=\"u\", -- ḍamma\n\t[kasra]=\"i\", -- kasra\n\t-- šadda - doubled consonant\n\t[sukuun]=\"\", --sukūn - no vowel\n\t-- ligatures\n\t[\"ﻻ\"]=\"lā\",\n\t[\"ﷲ\"]=\"llāh\",\n\t-- taṭwīl\n\t[\"ـ\"]=\"\"\
      , -- taṭwīl, no sound\n\t-- numerals\n\t[\"١\"]=\"1\", [\"٢\"]=\"2\", [\"٣\"]=\"3\", [\"٤\"]=\"4\", [\"٥\"]=\"5\",\n\t[\"٦\"]=\"6\", [\"٧\"]=\"7\", [\"٨\"]=\"8\", [\"٩\"]=\"9\", [\"٠\"]=\"0\",\n\t-- punctuation (leave on separate lines)\n\t[\"؟\"]=\"?\"\
      , -- question mark\n\t[\"«\"]='“', -- quotation mark\n\t[\"»\"]='”', -- quotation mark\n\t[\"٫\"]=\".\", -- decimal point\n\t[\"٬\"]=\",\", -- thousands separator\n\t[\"٪\"]=\"%\", -- percent sign\n\t[\"،\"]=\",\", -- comma\n\t[\"؛\"]=\";\" -- semicolon\n\
      }\n\nlocal sun_letters = \"تثدذرزسشصضطظلن\"\n-- For use in implementing sun-letter assimilation of ال (al-)\nlocal ttsun1 = {}\nlocal ttsun2 = {}\nlocal ttsun3 = {}\nfor cp in gcodepoint(sun_letters) do\n\tlocal ch = U(cp)\n\tttsun1[ch] = tt[ch]\n\tttsun2[\"\
      l-\" .. ch] = tt[ch] .. \"-\" .. ch\n\ttable.insert(ttsun3, tt[ch])\nend\n-- For use in implementing elision of al-\nlocal sun_letters_tr = table.concat(ttsun3, \"\")\n\nlocal consonants_needing_vowels = \"بتثجحخدذرزسشصضطظعغفقكڪلمنهپچڤگڨڧأإؤئءةﷲ\"\n--\
      \ consonants on the right side; includes alif madda\nlocal rconsonants = consonants_needing_vowels .. \"ويآ\"\n-- consonants on the left side; does not include alif madda\nlocal lconsonants = consonants_needing_vowels .. \"وي\"\n-- Arabic semicolon, comma,\
      \ question mark; taṭwīl; period, exclamation point,\n-- single quote for bold/italic, double quotes for quoted material\nlocal punctuation = \"؟،؛\" .. \"ـ\" .. \".!'\" .. '\"'\nlocal space_like = \"%s'\" .. '\"'\nlocal space_like_class = \"[\" .. space_like\
      \ .. \"]\"\nlocal numbers = \"١٢٣٤٥٦٧٨٩٠\"\n\nlocal before_diacritic_checking_subs = {\n\t------------ transformations prior to checking for diacritics --------------\n\t-- convert llh for allāh into ll+shadda+dagger-alif+h\n\t{\"لله\", \"للّٰه\"},\n\t\
      -- shadda+short-vowel (including tanwīn vowels, i.e. -an -in -un) gets\n\t-- replaced with short-vowel+shadda during NFC normalisation, which\n\t-- MediaWiki does for all Unicode strings; however, it makes the\n\t-- transliteration process inconvenient,\
      \ so undo it.\n\t{\"([\" .. fatHataan .. Dammataan .. kasrataan .. fatHa .. Damma .. kasra .. dagger_alif .. \"])\" .. shadda, shadda .. \"%1\"},\n\t-- ignore alif jamīla (otiose alif in 3pl verb forms)\n\t--     #1: handle ḍamma + wāw + alif (final -ū\
      )\n\t{Damma .. waaw .. alif, Damma .. waaw},\n\t--     #2: handle wāw + sukūn + alif (final -w in -aw in defective verbs)\n\t--     this must go before the generation of w, which removes the waw here.\n\t{waaw .. sukuun .. alif, waaw .. sukuun},\n\t--\
      \ ignore final alif or alif maqṣūra following fatḥatan (e.g. in accusative\n\t-- singular or words like عَصًا \"stick\" or هُذًى \"guidance\"; this is called\n\t-- tanwin nasb)\n\t{fatHataan .. \"[\" .. alif .. alif_maqSuura .. \"]\", fatHataan},\n\t--\
      \ same but with the fatḥatan placed over the alif or alif maqṣūra\n\t-- instead of over the previous letter (considered a misspelling but\n\t-- common)\n\t{\"[\" .. alif .. alif_maqSuura .. \"]\" .. fatHataan, fatHataan},\n\t-- tāʾ marbūṭa should always\
      \ be preceded by fatḥa, alif, alif madda or\n\t-- dagger alif; infer fatḥa if not\n\t{\"([^\" .. fatHa .. alif .. alif_madda .. dagger_alif .. \"])\" .. taa_marbuuTa, \"%1\" .. fatHa .. taa_marbuuTa},\n\t-- similarly for alif between consonants, possibly\
      \ marked with shadda\n\t-- (does not apply to initial alif, which is silent when not marked with\n\t-- hamza, or final alif, which might be pronounced as -an)\n\t{\"([\" .. lconsonants .. \"]\" .. shadda .. \"?)\" .. alif .. \"([\" .. rconsonants .. \"\
      ])\",\n\t\t\"%1\" .. fatHa .. alif .. \"%2\"},\n\t-- infer fatḥa in case of non-fatḥa + alif/alif-maqṣūra + dagger alif\n\t{\"([^\" .. fatHa .. \"])([\" .. alif .. alif_maqSuura .. \"]\" .. dagger_alif .. \")\", \"%1\" .. fatHa .. \"%2\"},\n\t-- infer\
      \ kasra in case of hamza-under-alif not + kasra\n\t{alif_hamza_below .. \"([^\" .. kasra .. \"])\", alif_hamza_below .. kasra .. \"%1\"},\n\t-- ignore dagger alif placed over regular alif or alif maqṣūra\n\t{\"([\" .. alif .. alif_maqSuura .. \"])\" ..\
      \ dagger_alif, \"%1\"},\n\n\t----------- rest of these concern definite article alif-lām ----------\n\t-- in kasra/ḍamma + alif + lam, make alif into hamzatu l-waṣl, so we\n\t-- handle cases like بِالتَّوْفِيق (bi-t-tawfīq) correctly\n\t{\"([\" .. Damma\
      \ .. kasra .. \"])\" .. alif .. laam, \"%1\" .. alif_waSl .. laam},\n\t-- al + consonant + shadda (only recognize word-initially if regular alif): remove shadda\n\t{\"^(\" .. alif .. fatHa .. \"?\" .. laam .. \"[\" .. lconsonants .. \"])\" .. shadda, \"\
      %1\"},\n\t{\"(\" .. space_like_class .. alif .. fatHa .. \"?\" .. laam .. \"[\" .. lconsonants .. \"])\" .. shadda, \"%1\"},\n\t{\"(\" .. alif_waSl .. fatHa .. \"?\" .. laam .. \"[\" .. lconsonants .. \"])\" .. shadda, \"%1\"},\n\t-- handle l- hamzatu\
      \ l-waṣl or word-initial al-\n\t{\"^\" .. alif .. fatHa .. \"?\" .. laam, \"al-\"},\n\t{\"(\" .. space_like_class .. \")\" .. alif .. fatHa .. \"?\" .. laam, \"%1al-\"},\n\t-- next one for bi-t-tawfīq\n\t{\"([\" .. Damma .. kasra .. \"])\" .. alif_waSl\
      \ .. fatHa .. \"?\" .. laam, \"%1-l-\"},\n\t-- next one for remaining hamzatu l-waṣl (at beginning of word)\n\t{alif_waSl .. fatHa .. \"?\" .. laam, \"l-\"},\n\t-- special casing if the l in al- has a shadda on it (as in الَّذِي \"that\"),\n\t-- so we\
      \ don't mistakenly double the dash\n\t{\"l%-\" .. shadda, \"ll\"},\n\t-- implement assimilation of sun letters\n\t{\"l%-[\" .. sun_letters .. \"]\", ttsun2},\n}\n\n-- Transliterate the word(s) in TEXT. LANG (the language) and SC (the script)\n-- are ignored.\
      \ OMIT_I3RAAB means leave out final short vowels (ʾiʿrāb).\n-- GRAY_I3RAAB means render transliterate short vowels (ʾiʿrāb) in gray.\n-- FORCE_TRANSLIT causes even non-vocalized text to be transliterated\n-- (normally the function checks for non-vocalized\
      \ text and returns nil,\n-- since such text is ambiguous in transliteration).\nfunction export.tr(text, lang, sc, omit_i3raab, gray_i3raab, force_translit)\n\t-- make it possible to call this function from a template\n\tif type(text) == \"table\" then\n\
      \t\tlocal function f(x) return (x ~= \"\") and x or nil end\n\t\ttext, lang, sc, omit_i3raab, force_translit =\n\t\t\tf(text.args[1]), f(text.args[2]), f(text.args[3]), f(text.args[4]), f(text.args[5])\n\tend\n\n\tfor _, sub in ipairs(before_diacritic_checking_subs)\
      \ do\n\t\ttext = rsub(text, sub[1], sub[2])\n\tend\n\n\tif not force_translit and not has_diacritics(text) then\n\t\treturn nil\n\tend\n\t\n\t------------ transformations after checking for diacritics --------------\n\t-- Replace plain alif with hamzatu\
      \ l-waṣl when followed by fatḥa/ḍamma/kasra.\n\t-- Must go after handling of initial al-, which distinguishes alif-fatḥa\n\t-- from alif w/hamzatu l-waṣl. Must go before generation of ū and ī, which\n\t-- eliminate the ḍamma/kasra.\n\ttext = rsub(text,\
      \ alif .. \"([\" .. fatHa .. Damma .. kasra .. \"])\", alif_waSl .. \"%1\")\n\t-- ḍamma + waw not followed by a diacritic is ū, otherwise w\n\ttext = rsub(text, Damma .. waaw .. \"([^\" .. fatHataan .. Dammataan .. kasrataan .. fatHa .. Damma .. kasra\
      \ .. shadda .. sukuun .. dagger_alif .. \"])\", \"ū%1\")\n\ttext = rsub(text, Damma .. waaw .. \"$\", \"ū\")\n\t-- kasra + yaa not followed by a diacritic (or ū from prev step) is ī, otherwise y\n\ttext = rsub(text, kasra .. yaa .. \"([^\" .. fatHataan\
      \ .. Dammataan .. kasrataan .. fatHa .. Damma .. kasra .. shadda .. sukuun .. dagger_alif .. \"ū])\", \"ī%1\")\n\ttext = rsub(text, kasra .. yaa .. \"$\", \"ī\")\n\t-- convert shadda to double letter.\n\ttext = rsub(text, \"(.)\" .. shadda, \"%1%1\")\n\
      \tif not omit_i3raab and gray_i3raab then -- show ʾiʿrāb grayed in transliteration\n\t\t-- decide whether to gray out the t in ﺓ. If word begins with al- or l-, yes.\n\t\t-- Otherwise, no if word ends in a/i/u, yes if ends in an/in/un.\n\t\ttext = rsub(text,\
      \ \"^(a?l%-[^%s]+)\" .. taa_marbuuTa .. \"([\" .. fatHataan .. Dammataan .. kasrataan .. fatHa .. Damma .. kasra .. \"])\",\n\t\t\t'%1&lt;span style=\"color: #888888\"&gt;t&lt;/span&gt;%2')\n\t\ttext = rsub(text, \"(\" .. space_like_class .. \"a?l%-[^%s]+)\"\
      \ .. taa_marbuuTa .. \"([\" .. fatHataan .. Dammataan .. kasrataan .. fatHa .. Damma .. kasra .. \"])\",\n\t\t\t'%1&lt;span style=\"color: #888888\"&gt;t&lt;/span&gt;%2')\n\t\ttext = rsub(text, taa_marbuuTa .. \"([\" .. fatHa .. Damma .. kasra .. \"])\"\
      , \"t%1\")\n\t\ttext = rsub(text, taa_marbuuTa .. \"([\" .. fatHataan .. Dammataan .. kasrataan .. \"])\",\n\t\t\t'&lt;span style=\"color: #888888\"&gt;t&lt;/span&gt;%1')\n\t\ttext = rsub(text, \".\", {\n\t\t\t[fatHataan] = '&lt;span style=\"color: #888888\"\
      &gt;an&lt;/span&gt;',\n\t\t\t[kasrataan] = '&lt;span style=\"color: #888888\"&gt;in&lt;/span&gt;',\n\t\t\t[Dammataan] = '&lt;span style=\"color: #888888\"&gt;un&lt;/span&gt;'\n\t\t})\n\t\ttext = rsub(text, \"([\" .. fatHa .. Damma .. kasra .. \"])(\" ..\
      \ space_like_class .. \")\",\n\t\t\tfunction(vowel, space)\n\t\t\t\tvowel_repl = {\n\t\t\t\t\t[fatHa] = '&lt;span style=\"color: #888888\"&gt;a&lt;/span&gt; ',\n\t\t\t\t\t[kasra] = '&lt;span style=\"color: #888888\"&gt;i&lt;/span&gt; ',\n\t\t\t\t\t[Damma]\
      \ = '&lt;span style=\"color: #888888\"&gt;u&lt;/span&gt; '\n\t\t\t\t}\n\t\t\t\treturn vowel_repl[vowel] .. space\n\t\t\tend\n\t\t)\n\t\ttext = rsub(text, \"[\" .. fatHa .. Damma .. kasra .. \"]$\", {\n\t\t\t[fatHa] = '&lt;span style=\"color: #888888\"\
      &gt;a&lt;/span&gt;',\n\t\t\t[kasra] = '&lt;span style=\"color: #888888\"&gt;i&lt;/span&gt;',\n\t\t\t[Damma] = '&lt;span style=\"color: #888888\"&gt;u&lt;/span&gt;'\n\t\t})\n\t\ttext = rsub(text, '&lt;/span&gt;&lt;span style=\"color: #888888\"&gt;', \"\"\
      )\n\telseif omit_i3raab then -- omit ʾiʿrāb in transliteration\n\t\ttext = rsub(text, \"[\" .. fatHataan .. Dammataan .. kasrataan .. \"]\", \"\")\n\t\ttext = rsub(text, \"[\" .. fatHa .. Damma .. kasra .. \"](\" .. space_like_class .. \")\", \"%1\")\n\
      \t\ttext = rsub(text, \"[\" .. fatHa .. Damma .. kasra .. \"]$\", \"\")\n\tend\n\t-- tāʾ marbūṭa should not be rendered by -t if word-final even when\n\t-- ʾiʿrāb (desinential inflection) is shown; instead, use (t) before\n\t-- whitespace, nothing when\
      \ final; but render final -ﺍﺓ and -ﺁﺓ as -āh,\n\t-- consistent with Wehr's dictionary\n\t-- Left-to-right or right-to-left mark at end of text will prevent tāʾ marbūṭa\n\t-- from being transliterated correctly.\n\ttext = string.gsub(text, lrm, \"\")\n\t\
      text = string.gsub(text, rlm, \"\")\n\ttext = rsub(text, \"([\" .. alif .. alif_madda .. \"])\" .. taa_marbuuTa .. \"$\", \"%1h\")\n\t-- Ignore final tāʾ marbūṭa (it appears as \"a\" due to the preceding\n\t-- short vowel). Need to do this after graying\
      \ or omitting word-final\n\t-- ʾiʿrāb.\n\ttext = rsub(text, taa_marbuuTa .. \"$\", \"\")\n\ttext = rsub(text, taa_marbuuTa .. \"(%p)\", \"%1\")\n\tif not omit_i3raab then -- show ʾiʿrāb in transliteration\n\t\ttext = rsub(text, taa_marbuuTa .. \"(\" ..\
      \ space_like_class .. \")\", \"(t)%1\")\n\telse\n\t\t-- When omitting ʾiʿrāb, show all non-absolutely-final instances of\n\t\t-- tāʾ marbūṭa as (t), with trailing ʾiʿrāb omitted.\n\t\ttext = rsub(text, taa_marbuuTa, \"(t)\")\n\tend\n\t-- tatwīl should\
      \ be rendered as - at beginning or end of word. It will\n\t-- be rendered as nothing in the middle of a word (FIXME, do we want\n\t-- this?)\n\ttext = rsub(text, \"^ـ\", \"-\")\n\ttext = rsub(text, \"(\" .. space_like_class .. \")ـ\",\n\t\t\"%1-\")\n\t\
      text = rsub(text, \"ـ$\", \"-\")\n\ttext = rsub(text, \"ـ(\" .. space_like_class .. \")\", \"-%1\")\n\t-- Now convert remaining Arabic chars according to table.\n\ttext = rsub(text, \".\", tt)\n\ttext = rsub(text, \"aā\", \"ā\")\n\t-- Implement elision\
      \ of al- after a final vowel. We do this\n\t-- conservatively, only handling elision of the definite article rather\n\t-- than elision in other cases of hamzat al-waṣl (e.g. form-I imperatives\n\t-- or form-VII and above verbal nouns) partly because elision\
      \ in\n\t-- these cases isn't so common in MSA and partly to avoid excessive\n\t-- elision in case of words written with initial bare alif instead of\n\t-- properly with hamzated alif. Possibly we should reconsider.\n\t-- At the very least we currently\
      \ don't handle elision of الَّذِي (allaḏi)\n\t-- correctly because we special-case it to appear without the hyphen;\n\t-- perhaps we should reconsider that.\n\ttext = rsub(text, \"([aiuāīū]'* +'*)a([\" .. sun_letters_tr .. \"]%-)\",\n\t\t\"%1%2\")\n\t\
      if gray_i3raab then\n\t\ttext = rsub(text, \"([aiuāīū]'*&lt;/span&gt;'* +'*)a([\" .. sun_letters_tr .. \"]%-)\",\n\t\t\t\"%1%2\")\n\tend\n\t-- Special-case the transliteration of allāh, without the hyphen\n\ttext = rsub(text, \"^(a?)l%-lāh\", \"%1llāh\"\
      )\n\ttext = rsub(text, \"(\" .. space_like_class .. \"a?)l%-lāh\", \"%1llāh\")\n\n\treturn text\nend\n\nlocal has_diacritics_subs = {\n\t-- FIXME! What about lam-alif ligature?\n\t-- remove punctuation and shadda\n\t-- must go before removing final consonants\n\
      \t{\"[\" .. punctuation .. shadda .. \"]\", \"\"},\n\t-- Remove consonants at end of word or utterance, so that we're OK with\n\t-- words lacking iʿrāb (must go before removing other consonants).\n\t-- If you want to catch places without iʿrāb, comment\
      \ out the next two lines.\n\t{\"[\" .. lconsonants .. \"]$\", \"\"},\n\t{\"[\" .. lconsonants .. \"](\" .. space_like_class .. \")\", \"%1\"},\n\t-- remove consonants (or alif) when followed by diacritics\n\t-- must go after removing shadda\n\t-- do not\
      \ remove the diacritics yet because we need them to handle\n\t-- long-vowel sequences of diacritic + pseudo-consonant\n\t{\"[\" .. lconsonants .. alif .. \"]([\" .. fatHataan .. Dammataan .. kasrataan .. fatHa .. Damma .. kasra .. sukuun .. dagger_alif\
      \ .. \"])\", \"%1\"},\n\t-- the following two must go after removing consonants w/diacritics because\n\t-- we only want to treat vocalic wāw/yā' in them (we want to have removed\n\t-- wāw/yā' followed by a diacritic)\n\t-- remove ḍamma + wāw\n\t{Damma\
      \ .. waaw, \"\"},\n\t-- remove kasra + yā'\n\t{kasra .. yaa, \"\"},\n\t-- remove fatḥa/fatḥatan + alif/alif-maqṣūra\n\t{\"[\" .. fatHataan .. fatHa .. \"][\" .. alif .. alif_maqSuura .. \"]\", \"\"},\n\t-- remove diacritics\n\t{\"[\" .. fatHataan .. Dammataan\
      \ .. kasrataan .. fatHa .. Damma .. kasra .. sukuun .. dagger_alif .. \"]\", \"\"},\n\t-- remove numbers, hamzatu l-waṣl, alif madda\n\t{\"[\" .. numbers .. \"ٱ\" .. \"آ\" .. \"]\", \"\"},\n\t-- remove non-Arabic characters\n\t{\"[^\" .. U(0x0600) .. \"\
      -\" .. U(0x06FF) .. U(0x0750) .. \"-\" .. U(0x077F) ..\n\t\t\t U(0x08A0) .. \"-\" .. U(0x08FF) .. U(0xFB50) .. \"-\" .. U(0xFDFF) ..\n\t\t\t U(0xFE70) .. \"-\" .. U(0xFEFF) .. \"]\", \"\"}\n}\n\n-- declared as local above\nfunction has_diacritics(text)\n\
      \tlocal count\n\ttext, count = rsubn(text, \"[\" .. lrm .. rlm .. \"]\", \"\")\n\tif count &gt; 0 then\n\t\trequire(\"Module:debug\").track(\"ar-translit/lrm or rlm\")\n\tend\n\tfor _, sub in ipairs(has_diacritics_subs) do\n\t\ttext = rsub(text, unpack(sub))\n\
      \tend\n\treturn #text == 0\nend\n\n-- Return true if transliteration TR is an irregular transliteration of\n-- ARABIC. Return false if ARABIC can't be transliterated. For purposes of\n-- establishing regularity, hyphens are ignored and word-final tāʾ marbū\
      ṭa\n-- can be transliterated as \"(t)\", \"\" or \"t\".\nfunction export.irregular_translit(arabic, tr)\n\tif not arabic or arabic == \"\" or not tr or tr == \"\" then\n\t\treturn false\n\tend\n\tlocal regtr = export.tr(arabic)\n\tif not regtr or regtr\
      \ == tr then\n\t\treturn false\n\tend\n\tlocal arwords = rsplit(arabic, \" \")\n\tlocal regwords = rsplit(regtr, \" \")\n\tlocal words = rsplit(tr, \" \")\n\tif #regwords ~= #words or #regwords ~= #arwords then\n\t\treturn true\n\tend\n\tfor i=1,#regwords\
      \ do\n\t\tlocal regword = regwords[i]\n\t\tlocal word = words[i]\n\t\tlocal arword = arwords[i]\n\t\t-- Resolve final (t) in auto-translit to t, h or nothing\n\t\tif rfind(regword, \"%(t%)$\") then\n\t\t\tregword = rfind(word, \"āh$\") and rsub(regword,\
      \ \"%(t%)$\", \"h\") or\n\t\t\t\trfind(word, \"t$\") and rsub(regword, \"%(t%)$\", \"t\") or\n\t\t\t\trsub(regword, \"%(t%)$\", \"\")\n\t\tend\n\t\t-- Resolve clitics + short a + alif-lām, which may get auto-transliterated\n\t\t-- to contain long ā, to\
      \ short a if the manual translit has it; note\n\t\t-- that currently in cases with assimilated l, the auto-translit will\n\t\t-- fail, so we won't ever get here and don't have to worry about\n\t\t-- auto-translit l against manual-translit assimilated char.\n\
      \t\tlocal clitic_chars = \"^[وفكل]\" -- separate line to avoid L2R display weirdness\n\t\tif rfind(arword, clitic_chars .. fatHa .. \"?[\" .. alif .. alif_waSl .. \"]\" .. laam) and rfind(word, \"^[wfkl]a%-\") then\n\t\t\tregword = rsub(regword, \"^([wfkl])ā\
      \", \"%1a\")\n\t\tend\n\t\t-- Ignore hyphens when comparing\n\t\tif rsub(regword, \"%-\", \"\") ~= rsub(word, \"%-\", \"\") then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\n\nreturn export\n\n-- For Vim, so we get 4-space tabs\n-- vim: set\
      \ ts=4 sw=4 noet:</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:24.270Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata3%2Fm&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47607 t=1555362624107678
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:24 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1278.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 429725650, 654741365, 703797179
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4206204\" pageid=\"4206204\" ns=\"828\" title=\"Module:languages/data3/m\"><revisions><rev user=\"Mahagaja\" timestamp=\"2019-04-11T12:43:45Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local u = mw.ustring.char\n\n-- UTF-8 encoded strings for some commonly used diacritics\nlocal GRAVE     = u(0x0300)\nlocal ACUTE     = u(0x0301)\nlocal CIRC\
      \      = u(0x0302)\nlocal TILDE     = u(0x0303)\nlocal MACRON    = u(0x0304)\nlocal BREVE     = u(0x0306)\nlocal DOTABOVE  = u(0x0307)\nlocal DIAER     = u(0x0308)\nlocal CARON     = u(0x030C)\nlocal DGRAVE    = u(0x030F)\nlocal INVBREVE  = u(0x0311)\n\
      local DOTBELOW  = u(0x0323)\nlocal RINGBELOW = u(0x0325)\nlocal CEDILLA   = u(0x0327)\n\nlocal Cyrl = {\"Cyrl\"}\nlocal Latn = {\"Latn\"}\n\nlocal m = {}\n\nm[\"maa\"] = {\n\t\"San Jerónimo Tecóatl Mazatec\",\n\t\"Q7692927\",\n\t\"omq-maz\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"mab\"] = {\n\t\"Yutanduchi Mixtec\",\n\t\"Q12645448\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mad\"] = {\n\t\"Madurese\",\n\t\"Q36213\",\n\t\"poz-msa\",\n\tscripts = Latn,\n}\n\nm[\"mae\"] = {\n\t\"Bo-Rukul\",\n\t\"Q34967\",\n\
      \tscripts = Latn,\n}\n\nm[\"maf\"] = {\n\t\"Mafa\",\n\t\"Q35819\",\n\tscripts = Latn,\n}\n\nm[\"mag\"] = {\n\t\"Magahi\",\n\t\"Q33728\",\n\t\"inc\",\n\tscripts = {\"Deva\"},\n\tancestors = {\"bh\"},\n}\n\nm[\"mai\"] = {\n\t\"Maithili\",\n\t\"Q36109\",\n\
      \t\"inc\",\n\tscripts = {\"Tirh\", \"Kthi\", \"Newa\", \"Deva\"},\n\tancestors = {\"bh\"},\n}\n\nm[\"maj\"] = {\n\t\"Jalapa De Díaz Mazatec\",\n\t\"Q3915999\",\n\t\"omq-maz\",\n\tscripts = Latn,\n}\n\nm[\"mak\"] = {\n\t\"Makasar\",\n\t\"Q33643\",\n\t\"\
      poz-ssw\",\n\tscripts = Latn,\n}\n\nm[\"mam\"] = {\n\t\"Mam\",\n\t\"Q33467\",\n\t\"myn\",\n\tscripts = Latn,\n}\n\nm[\"man\"] = {\n\t\"Mandingo\",\n\t\"Q35772\",\n\tscripts = Latn,\n}\n\nm[\"maq\"] = {\n\t\"Chiquihuitlán Mazatec\",\n\t\"Q5101757\",\n\t\
      \"omq-maz\",\n\tscripts = Latn,\n}\n\nm[\"mas\"] = {\n\t\"Maasai\",\n\t\"Q35787\",\n\t\"sdv\",\n\tscripts = Latn,\n}\n\nm[\"mat\"] = {\n\t\"Matlatzinca\",\n\t\"Q12953704\",\n\t\"omq\",\n\totherNames = {\"San Francisco Matlatzinca\", \"San Francisco Oxtotilpa\
      \ Matlatzinca\"},\n\tscripts = Latn,\n}\n\nm[\"mau\"] = {\n\t\"Huautla Mazatec\",\n\t\"Q36230\",\n\t\"omq-maz\",\n\tscripts = Latn,\n}\n\nm[\"mav\"] = {\n\t\"Sateré-Mawé\",\n\t\"Q6794475\",\n\t\"tup\",\n\tscripts = Latn,\n}\n\nm[\"maw\"] = {\n\t\"Mampruli\"\
      ,\n\t\"Q35804\",\n\t\"nic-gur\",\n\tscripts = Latn,\n}\n\nm[\"max\"] = {\n\t\"North Moluccan Malay\",\n\t\"Q7056136\",\n\tscripts = Latn,\n}\n\nm[\"maz\"] = {\n\t\"Central Mazahua\",\n\t\"Q36228\",\n\t\"oto\",\n\tscripts = Latn,\n}\n\nm[\"mba\"] = {\n\t\
      \"Higaonon\",\n\t\"Q5753411\",\n\t\"mno\",\n\tscripts = Latn,\n}\n\nm[\"mbb\"] = {\n\t\"Western Bukidnon Manobo\",\n\t\"Q7987643\",\n\t\"mno\",\n\tscripts = Latn,\n}\n\nm[\"mbc\"] = {\n\t\"Macushi\",\n\t\"Q56633\",\n\t\"sai-car\",\n\totherNames = {\"Makushi\"\
      , \"Makusi\", \"Makuxi\", \"Macusi\", \"Macussi\", \"Teweya\"},\n\tscripts = Latn,\n}\n\nm[\"mbd\"] = {\n\t\"Dibabawon Manobo\",\n\t\"Q18755523\",\n\t\"mno\",\n\tscripts = Latn,\n}\n\nm[\"mbe\"] = {\n\t\"Molale\",\n\t\"Q3319444\",\n\totherNames = {\"Molala\"\
      , \"Molalla\", \"Molele\"},\n\tscripts = Latn,\n}\n\nm[\"mbf\"] = {\n\t\"Baba Malay\",\n\t\"Q18642798\",\n\t\"crp\",\n\tscripts = Latn,\n\tancestors = {\"ms\"},\n}\n\nm[\"mbh\"] = {\n\t\"Mangseng\",\n\t\"Q6749147\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n\
      }\n\nm[\"mbi\"] = {\n\t\"Ilianen Manobo\",\n\t\"Q14916911\",\n\t\"mno\",\n\tscripts = Latn,\n}\n\nm[\"mbj\"] = {\n\t\"Nadëb\",\n\t\"Q3335011\",\n\tscripts = Latn,\n}\n\nm[\"mbk\"] = {\n\t\"Malol\",\n\t\"Q6744477\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n\
      }\n\nm[\"mbl\"] = {\n\t\"Maxakalí\",\n\t\"Q3029682\",\n\t\"sai-mje\",\n\tscripts = Latn,\n}\n\nm[\"mbm\"] = {\n\t\"Ombamba\",\n\t\"Q36407\",\n\tscripts = Latn,\n}\n\nm[\"mbn\"] = {\n\t\"Macaguán\",\n\t\"Q3273980\",\n\t\"sai-guh\",\n\tscripts = Latn,\n\
      }\n\nm[\"mbo\"] = { -- is, like 'bqz', 'bsi' and 'bss', a dialect of Manenguba\n\t\"Mbo (Cameroon)\",\n\tnil,\n\t\"bnt\",\n\totherNames = {\"Mbo\"},\n\tscripts = Latn,\n}\n\nm[\"mbp\"] = {\n\t\"Wiwa\",\n\t\"Q3012604\",\n\t\"cba\",\n\totherNames = {\"Damana\"\
      , \"Malayo\"},\n\tscripts = Latn,\n}\n\nm[\"mbq\"] = {\n\t\"Maisin\",\n\t\"Q3448149\",\n\tscripts = Latn,\n}\n\nm[\"mbr\"] = {\n\t\"Nukak Makú\",\n\t\"Q3346228\",\n\tscripts = Latn,\n}\n\nm[\"mbs\"] = {\n\t\"Sarangani Manobo\",\n\t\"Q7423093\",\n\t\"mno\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"mbt\"] = {\n\t\"Matigsalug Manobo\",\n\t\"Q6787447\",\n\t\"mno\",\n\tscripts = Latn,\n}\n\nm[\"mbu\"] = {\n\t\"Mbula-Bwazza\",\n\t\"Q3913324\",\n\tscripts = Latn,\n}\n\nm[\"mbv\"] = {\n\t\"Mbulungish\",\n\t\"Q36003\",\n\t\
      \"alv-sng\",\n\tscripts = Latn,\n}\n\nm[\"mbw\"] = {\n\t\"Maring\",\n\t\"Q3293280\",\n\tscripts = Latn,\n}\n\nm[\"mbx\"] = {\n\t\"Sepik Mari\",\n\t\"Q6760942\",\n\t\"paa-spk\",\n\totherNames = {\"Mari (East Sepik Province)\"},\n\tscripts = Latn,\n}\n\n\
      m[\"mby\"] = {\n\t\"Memoni\",\n\t\"Q4180871\",\n\t\"inc\",\n\tscripts = Latn, -- and others?\n\tancestors = {\"psu\"},\n}\n\nm[\"mbz\"] = {\n\t\"Amoltepec Mixtec\",\n\t\"Q13583504\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mca\"] = {\n\t\"Maca\",\n\
      \t\"Q3281043\",\n\t\"sai-mtc\",\n\tscripts = Latn,\n}\n\nm[\"mcb\"] = {\n\t\"Machiguenga\",\n\t\"Q3915441\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"mcc\"] = {\n\t\"Bitur\",\n\t\"Q4919173\",\n}\n\nm[\"mcd\"] = {\n\t\"Sharanahua\",\n\t\"Q12953881\",\n\t\
      \"sai-pan\",\n\tscripts = Latn,\n}\n\nm[\"mce\"] = {\n\t\"Itundujia Mixtec\",\n\t\"Q12953727\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mcf\"] = {\n\t\"Matsés\",\n\t\"Q2981620\",\n\t\"sai-pan\",\n\tscripts = Latn,\n}\n\nm[\"mcg\"] = {\n\t\"Mapoyo\"\
      ,\n\t\"Q56946\",\n\t\"sai-car\",\n\tscripts = Latn,\n}\n\nm[\"mch\"] = {\n\t\"Maquiritari\",\n\t\"Q3082027\",\n\t\"sai-car\",\n\totherNames = {\"Makiritare\", \"Ye'kwana\", \"Ye'kuana\", \"Yekuana\", \"De'kwana\", \"So'to\", \"Maiongong\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"mci\"] = {\n\t\"Mese\",\n\t\"Q6821190\",\n}\n\nm[\"mcj\"] = {\n\t\"Mvanip\",\n\t\"Q3913281\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"mck\"] = {\n\t\"Mbunda\",\n\t\"Q34170\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"mcl\"] = {\n\
      \t\"Macaguaje\",\n\t\"Q6722435\",\n\t\"sai-tuc\",\n\tscripts = Latn,\n}\n\nm[\"mcm\"] = {\n\t\"Kristang\",\n\t\"Q2669169\",\n\t\"crp\",\n\totherNames = {\"Malacca Creole Portuguese\", \"Malaccan Creole Portuguese\"},\n\tscripts = Latn,\n}\n\nm[\"mcn\"\
      ] = {\n\t\"Masana\",\n\t\"Q56668\",\n\t\"cdc-mas\",\n\totherNames = {\"Massa\", \"Masa\"},\n}\n\nm[\"mco\"] = {\n\t\"Coatlán Mixe\",\n\t\"Q25559716\",\n\t\"nai-miz\",\n\tscripts = Latn,\n}\n\nm[\"mcp\"] = {\n\t\"Makaa\",\n\t\"Q35803\",\n}\n\nm[\"mcq\"\
      ] = {\n\t\"Ese\",\n\t\"Q5397551\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"mcr\"] = {\n\t\"Menya\",\n\t\"Q11732444\",\n\t\"ngf\",\n}\n\nm[\"mcs\"] = {\n\t\"Mambai\",\n\t\"Q6748872\",\n}\n\nm[\"mct\"] = {\n\t\"Mengisa\",\n\t\"Q35917\",\n}\n\nm[\"mcu\"\
      ] = {\n\t\"Cameroon Mambila\",\n\t\"Q19359039\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"mcv\"] = {\n\t\"Minanibai\",\n\t\"Q6863167\",\n}\n\nm[\"mcw\"] = {\n\t\"Mahwa\",\n\t\"Q3441333\",\n\t\"cdc-est\",\n\totherNames = {\"Mawa (Chad)\", \"Mawa\"},\n\
      \tscripts = Latn,\n}\n\nm[\"mcx\"] = {\n\t\"Mpiemo\",\n\t\"Q35908\",\n}\n\nm[\"mcy\"] = {\n\t\"South Watut\",\n\t\"Q12953293\",\n\t\"poz-ocw\",\n}\n\nm[\"mcz\"] = {\n\t\"Mawan\",\n\t\"Q11732429\",\n\t\"ngf-mad\",\n}\n\nm[\"mda\"] = {\n\t\"Mada (Nigeria)\"\
      ,\n\t\"Q3915843\",\n\t\"nic-bco\",\n\totherNames = {\"Mada\"},\n\tscripts = Latn,\n}\n\nm[\"mdb\"] = {\n\t\"Morigi\",\n\t\"Q6912195\",\n}\n\nm[\"mdc\"] = {\n\t\"Male\",\n\t\"Q6742927\",\n}\n\nm[\"mdd\"] = {\n\t\"Mbum\",\n\t\"Q36170\",\n}\n\nm[\"mde\"]\
      \ = {\n\t\"Bura Mabang\",\n\t\"Q35860\",\n\t\"ssa\",\n}\n\nm[\"mdf\"] = {\n\t\"Moksha\",\n\t\"Q13343\",\n\t\"urj-mdv\",\n\totherNames = {\"Mordvin\"},\n\tscripts = Cyrl,\n\ttranslit_module = \"mdf-translit\",\n\toverride_translit = true,\n}\n\nm[\"mdg\"\
      ] = {\n\t\"Massalat\",\n\t\"Q759984\",\n}\n\nm[\"mdh\"] = {\n\t\"Maguindanao\",\n\t\"Q33717\",\n\t\"phi\",\n\tscripts = {\"Latn\", \"Arab\"},\n}\n\nm[\"mdi\"] = {\n\t\"Mamvu\",\n\t\"Q3033594\",\n}\n\nm[\"mdj\"] = {\n\t\"Mangbetu\",\n\t\"Q56327\",\n}\n\n\
      m[\"mdk\"] = {\n\t\"Mangbutu\",\n\t\"Q6748877\",\n}\n\nm[\"mdl\"] = {\n\t\"Maltese Sign Language\",\n\t\"Q6744816\",\n\t\"sgn\",\n}\n\nm[\"mdm\"] = {\n\t\"Mayogo\",\n\t\"Q6797580\",\n\t\"nic-ubg\",\n\tscripts = Latn,\n}\n\nm[\"mdn\"] = {\n\t\"Mbati\",\n\
      \t\"Q36165\",\n}\n\nm[\"mdp\"] = {\n\t\"Mbala\",\n\t\"Q6799583\",\n}\n\nm[\"mdq\"] = {\n\t\"Mbole\",\n\t\"Q6799727\",\n}\n\nm[\"mdr\"] = {\n\t\"Mandar\",\n\t\"Q35995\",\n\t\"poz-ssw\",\n\tscripts = {\"Bugi\"},\n}\n\nm[\"mds\"] = {\n\t\"Maria\",\n\t\"Q3448673\"\
      ,\n\totherNames = {\"Maria (New Guinea)\", \"Maria (Papua New Guinea)\"},\n}\n\nm[\"mdt\"] = {\n\t\"Mbere\",\n\t\"Q36062\",\n}\n\nm[\"mdu\"] = {\n\t\"Mboko\",\n\t\"Q36058\",\n}\n\nm[\"mdv\"] = {\n\t\"Santa Lucía Monteverde Mixtec\",\n\t\"Q12953722\",\n\
      \t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mdw\"] = {\n\t\"Mbosi\",\n\t\"Q36035\",\n}\n\nm[\"mdx\"] = {\n\t\"Dizin\",\n\t\"Q35313\",\n}\n\nm[\"mdy\"] = {\n\t\"Maale\",\n\t\"Q795327\",\n}\n\nm[\"mdz\"] = {\n\t\"Suruí Do Pará\",\n\t\"Q10322149\",\n\t\"\
      tup-gua\",\n\tscripts = Latn,\n}\n\nm[\"mea\"] = {\n\t\"Menka\",\n\t\"Q36078\",\n\t\"nic-grf\",\n\tscripts = Latn,\n}\n\nm[\"meb\"] = {\n\t\"Ikobi-Mena\",\n\t\"Q11732241\",\n\t\"ngf\",\n\totherNames = {\"Ikobi\", \"Mena\", \"Ikobi-Mina\"},\n\tscripts =\
      \ Latn,\n}\n\nm[\"mec\"] = {\n\t\"Mara\",\n\t\"Q6772774\",\n\totherNames = {\"Leelawarra\", \"Leelalwarra\", \"Mala\", \"Marra\"},\n}\n\nm[\"med\"] = {\n\t\"Melpa\",\n\t\"Q36166\",\n}\n\nm[\"mee\"] = {\n\t\"Mengen\",\n\t\"Q3305831\",\n\t\"poz-ocw\",\n\
      }\n\nm[\"mef\"] = {\n\t\"Megam\",\n\t\"Q6808589\",\n}\n\nm[\"meg\"] = {\n\t\"Mea\",\n\t\"Q12952836\",\n\t\"poz-cln\",\n}\n\nm[\"meh\"] = {\n\t\"Southwestern Tlaxiaco Mixtec\",\n\t\"Q7070686\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mei\"] = {\n\t\
      \"Midob\",\n\t\"Q36007\",\n\t\"nub\",\n\tscripts = Latn,\n}\n\nm[\"mej\"] = {\n\t\"Meyah\",\n\t\"Q11732436\",\n\totherNames = {\"Mejah\",  \"Meax\"},\n}\n\nm[\"mek\"] = {\n\t\"Mekeo\",\n\t\"Q3304803\",\n\t\"poz-ocw\",\n}\n\nm[\"mel\"] = {\n\t\"Central\
      \ Melanau\",\n\t\"Q18638319\",\n\t\"poz-swa\",\n\tscripts = Latn,\n}\n\nm[\"mem\"] = {\n\t\"Mangala\",\n\t\"Q6748664\",\n}\n\nm[\"men\"] = {\n\t\"Mende\",\n\t\"Q1478672\",\n\t\"dmn\",\n\tscripts = {\"Latn\", \"Mend\"},\n}\n\nm[\"meo\"] = {\n\t\"Kedah Malay\"\
      ,\n\t\"Q4925684\",\n\t\"poz-mly\",\n\tscripts = Latn,\n}\n\nm[\"mep\"] = {\n\t\"Miriwung\",\n\t\"Q3111847\",\n}\n\nm[\"meq\"] = {\n\t\"Merey\",\n\t\"Q3502314\",\n\t\"cdc-cbm\",\n\tscripts = Latn,\n}\n\nm[\"mer\"] = {\n\t\"Meru\",\n\t\"Q13313\",\n\t\"bnt\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"mes\"] = {\n\t\"Masmaje\",\n\t\"Q3440448\",\n}\n\nm[\"met\"] = {\n\t\"Mato\",\n\t\"Q3299190\",\n\t\"poz-ocw\",\n\totherNames = {\"Nenaya\", \"Nengaya\", \"Nineia\"},\n\tscripts = Latn,\n}\n\nm[\"meu\"] = {\n\t\"Motu\",\n\t\
      \"Q33516\",\n\t\"poz-ocw\",\n\totherNames = {\"Pure Motu\", \"True Motu\"},\n\tscripts = Latn,\n}\n\nm[\"mev\"] = {\n\t\"Mano\",\n\t\"Q3913286\",\n\t\"dmn\",\n\tscripts = Latn,\n}\n\nm[\"mew\"] = {\n\t\"Maaka\",\n\t\"Q3438764\",\n\t\"cdc-wst\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"mey\"] = {\n\t\"Hassaniya\",\n\t\"Q56231\",\n\t\"sem-arb\",\n\tscripts = {\"Arab\"},\n}\n\nm[\"mez\"] = {\n\t\"Menominee\",\n\t\"Q13363\",\n\t\"alg\",\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"·\"},\n\t\tto   = {\"\"}} ,\n}\n\
      \nm[\"mfa\"] = {\n\t\"Pattani Malay\",\n\t\"Q1199751\",\n\t\"poz-mly\",\n\tscripts = {\"Latn\", \"Thai\", \"Arab\"},\n\tsort_key = {\n\t\tfrom = {\"%p\", \"[็-๎]\", \"([เแโใไ])([ก-ฮ])\"},\n\t\tto   = {\"\", \"\", \"%2%1\"}},\n}\n\nm[\"mfb\"] = {\n\t\"\
      Bangka\",\n\t\"Q3258818\",\n}\n\nm[\"mfc\"] = {\n\t\"Mba\",\n\t\"Q4286464\",\n\t\"nic-ubg\",\n\tscripts = Latn,\n}\n\nm[\"mfd\"] = {\n\t\"Mendankwe-Nkwen\",\n\t\"Q11129537\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"mfe\"] = {\n\t\"Mauritian Creole\"\
      ,\n\t\"Q33661\",\n\t\"crp\",\n\totherNames = {\"Mauritian\"},\n\tscripts = Latn,\n}\n\nm[\"mff\"] = {\n\t\"Naki\",\n\t\"Q36083\",\n\t\"nic-bco\",\n\totherNames = {\"Bukwen\", \"Mashi\"},\n\tscripts = Latn,\n}\n\nm[\"mfg\"] = {\n\t\"Mixifore\",\n\t\"Q3914478\"\
      ,\n\t\"dmn\",\n\totherNames = {\"Mogofin\"},\n}\n\nm[\"mfh\"] = {\n\t\"Matal\",\n\t\"Q3501751\",\n\t\"cdc-cbm\",\n\tscripts = Latn,\n}\n\nm[\"mfi\"] = {\n\t\"Wandala\",\n\t\"Q3441249\",\n\t\"cdc-cbm\",\n\totherNames = {\"Mandara\"},\n\tscripts = Latn,\n\
      }\n\nm[\"mfj\"] = {\n\t\"Mefele\",\n\t\"Q3501871\",\n}\n\nm[\"mfk\"] = {\n\t\"North Mofu\",\n\t\"Q56303\",\n}\n\nm[\"mfl\"] = {\n\t\"Putai\",\n\t\"Q56291\",\n}\n\nm[\"mfm\"] = {\n\t\"Marghi South\",\n\t\"Q56248\",\n}\n\nm[\"mfn\"] = {\n\t\"Cross River\
      \ Mbembe\",\n\t\"Q3915395\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"mfo\"] = {\n\t\"Mbe\",\n\t\"Q36075\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"mfp\"] = {\n\t\"Makassar Malay\",\n\t\"Q12952776\",\n\t\"qfa-mix\",\n\tscripts = Latn,\n}\n\nm[\"\
      mfq\"] = {\n\t\"Moba\",\n\t\"Q19921578\",\n\tscripts = Latn,\n}\n\nm[\"mfr\"] = {\n\t\"Marrithiyel\",\n\t\"Q6773014\",\n\t\"aus-dal\",\n\totherNames = {\"Marrithiyal\", \"Marithiel\", \"Maridhiel\", \"Maridhiyel\", \"Berringen\", \"Bringen\", \"Brinken\"\
      , \"Nganygit\", \"Marriammu\", \"Mare-Ammu\", \"Maridjabin\", \"Maredyerbin\", \"Maretyabin\", \"Maridyerbin\", \"Maritjabin\", \"Marridan\", \"Meradan\", \"Marramanindjdji\", \"Marramaninydyi\", \"Marimanindji\", \"Mariyedi\"},\n\tscripts = Latn,\n}\n\
      \nm[\"mfs\"] = {\n\t\"Mexican Sign Language\",\n\t\"Q3915511\",\n\t\"sgn\",\n\tscripts = Latn, -- when documented\n}\n\nm[\"mft\"] = {\n\t\"Mokerang\",\n\t\"Q3319387\",\n\t\"poz-aay\",\n\tscripts = Latn,\n}\n\nm[\"mfu\"] = {\n\t\"Mbwela\",\n\t\"Q11004988\"\
      ,\n}\n\nm[\"mfv\"] = {\n\t\"Mandjak\",\n\t\"Q35822\",\n}\n\nm[\"mfw\"] = {\n\t\"Mulaha\",\n\t\"Q6933720\",\n}\n\nm[\"mfx\"] = {\n\t\"Melo\",\n\t\"Q6813268\",\n\t\"omv\",\n}\n\nm[\"mfy\"] = {\n\t\"Mayo\",\n\t\"Q56729\",\n\t\"azc-trc\",\n\tscripts = Latn,\n\
      \tsort_key = {\n\t\tfrom = {\"á\", \"é\", \"í\", \"ó\", \"ú\"},\n\t\tto   = {\"a\", \"e\", \"i\", \"o\", \"u\"}},\n}\n\nm[\"mfz\"] = {\n\t\"Mabaan\",\n\t\"Q20526385\",\n\t\"sdv\",\n}\n\nm[\"mga\"] = {\n\t\"Middle Irish\",\n\t\"Q36116\",\n\t\"cel-gae\"\
      ,\n\tscripts = Latn,\n\tancestors = {\"sga\"},\n\tentry_name = {\n\t\tfrom = {\"ḟ\", \"ṡ\", \"ä\", \"ë\", \"ï\", \"ö\", \"ü\", \"·\"},\n\t\tto   = {\"f\", \"s\", \"a\", \"e\", \"i\", \"o\", \"u\"}} ,\n\tsort_key = {\n\t\tfrom = {\"á\", \"é\", \"æ\", \"\
      ǽ\", \"í\", \"ó\", \"ú\", \"^h\"},\n\t\tto   = {\"a\", \"e\", \"e\", \"e\", \"i\", \"o\", \"u\"}} ,\n}\n\nm[\"mgb\"] = {\n\t\"Mararit\",\n\t\"Q56359\",\n}\n\nm[\"mgc\"] = {\n\t\"Morokodo\",\n\t\"Q6913216\",\n\t\"csu\",\n\tscripts = Latn,\n}\n\nm[\"mgd\"\
      ] = {\n\t\"Moru\",\n\t\"Q6915014\",\n\t\"csu\",\n}\n\nm[\"mge\"] = {\n\t\"Mango\",\n\t\"Q713659\",\n\t\"csu-sar\",\n}\n\nm[\"mgf\"] = {\n\t\"Maklew\",\n\t\"Q6739816\",\n}\n\nm[\"mgg\"] = {\n\t\"Mpongmpong\",\n\t\"Q35924\",\n}\n\nm[\"mgh\"] = {\n\t\"Makhuwa-Meetto\"\
      ,\n\t\"Q33604\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"mgi\"] = {\n\t\"Jili\",\n\t\"Q3914497\",\n\t\"nic-bco\",\n\totherNames = {\"Lijili\", \"Migili\", \"Mijili\"},\n}\n\nm[\"mgj\"] = {\n\t\"Abureni\",\n\t\"Q3441256\",\n\t\"nic-bco\",\n\tscripts =\
      \ Latn,\n}\n\nm[\"mgk\"] = {\n\t\"Mawes\",\n\t\"Q6794395\",\n}\n\nm[\"mgl\"] = {\n\t\"Maleu-Kilenge\",\n\t\"Q3281884\",\n}\n\nm[\"mgm\"] = {\n\t\"Mambae\",\n\t\"Q35774\",\n\t\"poz-cet\",\n\tscripts = Latn,\n}\n\nm[\"mgn\"] = {\n\t\"Mbangi\",\n\t\"Q11017443\"\
      ,\n\t\"nic-ubg\",\n\tscripts = Latn,\n}\n\nm[\"mgo\"] = {\n\t\"Meta'\",\n\t\"Q36054\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"mgp\"] = {\n\t\"Eastern Magar\",\n\t\"Q12952758\",\n\t\"sit\",\n}\n\nm[\"mgq\"] = {\n\t\"Malila\",\n\t\"Q6743679\",\n\t\"\
      bnt\",\n\tscripts = Latn,\n}\n\nm[\"mgr\"] = {\n\t\"Mambwe-Lungu\",\n\t\"Q626210\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"mgs\"] = {\n\t\"Nyasa\",\n\t\"Q16939267\",\n\t\"bnt\",\n\totherNames = {\"Kimanda\", \"Kinyasa\", \"Manda\"},\n}\n\nm[\"mgt\"]\
      \ = {\n\t\"Mongol\",\n\t\"Q11260674\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"mgu\"] = {\n\t\"Mailu\",\n\t\"Q3278246\",\n\t\"ngf\",\n}\n\nm[\"mgv\"] = {\n\t\"Matengo\",\n\t\"Q6786446\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"mgw\"] = {\n\t\"Matumbi\"\
      ,\n\t\"Q6791974\",\n\t\"bnt\",\n\totherNames = {\"Matuumbi\", \"Kimatumbi\", \"Kimatuumbi\"},\n\tscripts = Latn,\n}\n\nm[\"mgy\"] = {\n\t\"Mbunga\",\n\t\"Q6799817\",\n}\n\nm[\"mgz\"] = {\n\t\"Mbugwe\",\n\t\"Q3426367\",\n}\n\nm[\"mha\"] = {\n\t\"Manda\"\
      ,\n\t\"Q56760\",\n\t\"dra\",\n}\n\nm[\"mhb\"] = {\n\t\"Mahongwe\",\n\t\"Q35816\",\n}\n\nm[\"mhc\"] = {\n\t\"Mocho\",\n\t\"Q1941682\",\n\t\"myn\",\n}\n\nm[\"mhd\"] = {\n\t\"Mbugu\",\n\t\"Q36152\",\n\t\"qfa-mix\",\n\totherNames = {\"Ma'a\", \"Normal Mbugu\"\
      , \"Inner Mbugu\"},\n\tscripts = Latn,\n\tancestors = {\"asa\"},\n}\n\nm[\"mhe\"] = {\n\t\"Besisi\",\n\t\"Q2742262\",\n}\n\nm[\"mhf\"] = {\n\t\"Mamaa\",\n\t\"Q6745346\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"mhg\"] = {\n\t\"Margu\",\n\t\"Q6772812\"\
      ,\n}\n\nm[\"mhi\"] = {\n\t\"Ma'di\",\n\t\"Q56670\",\n\t\"csu\",\n}\n\nm[\"mhj\"] = {\n\t\"Mogholi\",\n\t\"Q13336\",\n\t\"xgn\",\n\totherNames = {\"Moghol\"},\n}\n\nm[\"mhk\"] = {\n\t\"Mungaka\",\n\t\"Q36068\",\n\t\"nic-grf\",\n\tscripts = Latn,\n}\n\n\
      m[\"mhl\"] = {\n\t\"Mauwake\",\n\t\"Q6794095\",\n\t\"ngf-mad\",\n}\n\nm[\"mhm\"] = {\n\t\"Makhuwa-Moniga\",\n\t\"Q6900145\",\n}\n\nm[\"mhn\"] = {\n\t\"Mòcheno\",\n\t\"Q268130\",\n\t\"gmw\",\n\tscripts = Latn,\n\tancestors = {\"bar\"},\n}\n\nm[\"mho\"]\
      \ = {\n\t\"Mashi\",\n\t\"Q10962737\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"mhp\"] = {\n\t\"Balinese Malay\",\n\t\"Q12473441\",\n}\n\nm[\"mhq\"] = {\n\t\"Mandan\",\n\t\"Q1957120\",\n\t\"sio\",\n}\n\nm[\"mhs\"] = {\n\t\"Buru (Indonesia)\",\n\t\"Q2928650\"\
      ,\n\t\"poz\",\n\totherNames = {\"Buru\"},\n}\n\nm[\"mht\"] = {\n\t\"Mandahuaca\",\n\t\"Q6747924\",\n\t\"awd-nwk\",\n\totherNames = {\"Mandauaca\", \"Mandawaka\", \"Mandawaca\", \"Mandauaka\", \"Mandauáka\"},\n}\n\nm[\"mhu\"] = {\n\t\"Taraon\",\n\t\"Q56400\"\
      ,\n\totherNames = {\"Darang\", \"Digaro-Mishmi\", \"Digaro Mishmi\"},\n\tscripts = Latn,\n}\n\nm[\"mhw\"] = {\n\t\"Mbukushu\",\n\t\"Q2691548\",\n}\n\nm[\"mhx\"] = {\n\t\"Lhao Vo\",\n\t\"Q11149315\",\n\t\"tbq-brm\",\n\totherNames = {\"Langsu\", \"Maru\"\
      },\n}\n\nm[\"mhy\"] = {\n\t\"Ma'anyan\",\n\t\"Q2328761\",\n}\n\nm[\"mhz\"] = {\n\t\"Austronesian Mor\",\n\t\"Q2122792\",\n\t\"poz-hce\",\n\totherNames = {\"Mor\"},\n\tscripts = Latn,\n}\n\nm[\"mia\"] = {\n\t\"Miami\",\n\t\"Q56523\",\n\t\"alg\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"mib\"] = {\n\t\"Atatláhuca Mixtec\",\n\t\"Q32093046\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mic\"] = {\n\t\"Mi'kmaq\",\n\t\"Q13321\",\n\t\"alg\",\n\tscripts = Latn,\n}\n\nm[\"mid\"] = {\n\t\"Mandaic\",\n\t\"Q6991742\",\n\t\"\
      sem-ara\",\n\tscripts = {\"Mand\"},\n\tancestors = {\"myz\"},\n}\n\nm[\"mie\"] = {\n\t\"Ocotepec Mixtec\",\n\t\"Q25559575\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mif\"] = {\n\t\"Mofu-Gudur\",\n\t\"Q1365132\",\n\t\"cdc-cbm\",\n\tscripts = Latn,\n\
      }\n\nm[\"mig\"] = {\n\t\"San Miguel El Grande Mixtec\",\n\t\"Q12953719\",\n\t\"omq-mix\",\n\totherNames = {\"Chalcatongo Mixtec\"},\n\tscripts = Latn,\n}\n\nm[\"mih\"] = {\n\t\"Chayuco Mixtec\",\n\t\"Q13583510\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\
      \nm[\"mii\"] = {\n\t\"Chigmecatitlán Mixtec\",\n\t\"Q12953724\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mij\"] = {\n\t\"Mungbam\",\n\t\"Q34725\",\n\t\"nic-bod\",\n\totherNames = {\"Abar\", \"Missong\", \"Munken\", \"Ngun\"},\n\tscripts = Latn,\n\
      }\n\nm[\"mik\"] = {\n\t\"Mikasuki\",\n\t\"Q13316\",\n\t\"nai-mus\",\n\tscripts = Latn,\n}\n\nm[\"mil\"] = {\n\t\"Peñoles Mixtec\",\n\t\"Q42411307\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mim\"] = {\n\t\"Alacatlatzala Mixtec\",\n\t\"Q14697894\",\n\
      \t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"min\"] = {\n\t\"Minangkabau\",\n\t\"Q13324\",\n\t\"poz-mly\",\n\tscripts = Latn,\n}\n\nm[\"mio\"] = {\n\t\"Pinotepa Nacional Mixtec\",\n\t\"Q7196415\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mip\"] = {\n\
      \t\"Apasco-Apoala Mixtec\",\n\t\"Q13583505\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"miq\"] = {\n\t\"Miskito\",\n\t\"Q1516803\",\n\t\"nai-min\",\n\totherNames = {\"Miskitu\"},\n\tscripts = Latn,\n\tentry_name = {\n\t\tfrom = {\"Â\", \"â\", \"Î\"\
      , \"î\", \"Û\", \"û\"},\n\t\tto   = {\"A\", \"a\", \"I\", \"i\", \"U\", \"u\"}},\n}\n\nm[\"mir\"] = {\n\t\"Isthmus Mixe\",\n\t\"Q6088873\",\n}\n\nm[\"mit\"] = {\n\t\"Southern Puebla Mixtec\",\n\t\"Q7570345\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"\
      miu\"] = {\n\t\"Cacaloxtepec Mixtec\",\n\t\"Q12953723\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"miw\"] = {\n\t\"Akoye\",\n\t\"Q3327462\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"mix\"] = {\n\t\"Mixtepec Mixtec\",\n\t\"Q6884125\",\n\t\"omq-mix\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"miy\"] = {\n\t\"Ayutla Mixtec\",\n\t\"Q13583508\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"miz\"] = {\n\t\"Coatzospan Mixtec\",\n\t\"Q3317290\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mjb\"] = {\n\t\"Makalero\"\
      ,\n\tnil,\n\totherNames = {\"Maklere\"},\n\tscripts = Latn,\n}\n\nm[\"mjc\"] = {\n\t\"San Juan Colorado Mixtec\",\n\t\"Q12953718\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mjd\"] = {\n\t\"Northwest Maidu\",\n\t\"Q3198700\",\n\t\"nai-mdu\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"mje\"] = {\n\t\"Muskum\",\n\t\"Q3913334\",\n}\n\nm[\"mjg\"] = {\n\t\"Monguor\",\n\t\"Q34214\",\n\t\"xgn\",\n\tscripts = Latn,\n}\n\nm[\"mjh\"] = {\n\t\"Nyanza\",\n\t\"Q6799604\",\n\totherNames = {\"Kinyasa\", \"Mwera\", \"Nyasa\"},\n\
      }\n\nm[\"mji\"] = {\n\t\"Kim Mun\",\n\t\"Q1115317\",\n\t\"hmx-mie\",\n}\n\nm[\"mjj\"] = {\n\t\"Mawak\",\n\t\"Q11732427\",\n}\n\nm[\"mjk\"] = {\n\t\"Matukar\",\n\t\"Q6791963\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mjl\"] = {\n\t\"Mandeali\",\n\t\
      \"Q6747931\",\n}\n\nm[\"mjm\"] = {\n\t\"Medebur\",\n\t\"Q6805227\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mjn\"] = {\n\t\"Mebu\",\n\t\"Q6804364\",\n\t\"ngf-fin\",\n\totherNames = {\"Ma\"},\n}\n\nm[\"mjo\"] = {\n\t\"Malankuravan\",\n\t\"Q14916887\"\
      ,\n\t\"dra\",\n}\n\nm[\"mjp\"] = {\n\t\"Malapandaram\",\n\t\"Q10575729\",\n\t\"dra\",\n}\n\nm[\"mjq\"] = {\n\t\"Malaryan\",\n\t\"Q12952773\",\n\t\"dra\",\n}\n\nm[\"mjr\"] = {\n\t\"Malavedan\",\n\t\"Q12952775\",\n\t\"dra\",\n}\n\nm[\"mjs\"] = {\n\t\"Miship\"\
      ,\n\t\"Q3441264\",\n\t\"cdc-wst\",\n\totherNames = {\"Chip\"},\n\tscripts = Latn,\n}\n\nm[\"mjt\"] = {\n\t\"Sawriya Paharia\",\n\t\"Q33907\",\n\t\"dra\",\n\totherNames = {\"Sauria Paharia\", \"Sawriya\", \"Sawriya Pahariya\", \"Sawriya Malto\", \"Malto\"\
      , \" Malti\", \"Maltu\", \"Maler\"},\n\tscripts = {\"Beng\", \"Deva\"},\n}\n\nm[\"mju\"] = {\n\t\"Manna-Dora\",\n\t\"Q10576453\",\n\t\"dra\",\n\tancestors = {\"te\"},\n}\n\nm[\"mjv\"] = {\n\t\"Mannan\",\n\t\"Q3286037\",\n\t\"dra\",\n}\n\nm[\"mjw\"] = {\n\
      \t\"Karbi\",\n\t\"Q56591\",\n\t\"tbq\",\n\totherNames = {\"Arleng\", \"Mikir\"},\n\tscripts = Latn,\n}\n\nm[\"mjx\"] = {\n\t\"Mahali\",\n\t\"Q12953686\",\n\t\"mun\",\n}\n\nm[\"mjy\"] = {\n\t\"Mahican\",\n\t\"Q3182562\",\n\t\"alg\",\n\tscripts = Latn,\n\
      }\n\nm[\"mjz\"] = {\n\t\"Majhi\",\n\t\"Q6737786\",\n\t\"inc\",\n\tancestors = {\"bh\"},\n}\n\nm[\"mka\"] = {\n\t\"Mbre\",\n\t\"Q3450154\",\n}\n\nm[\"mkb\"] = {\n\t\"Mal Paharia\",\n\t\"Q6583595\",\n}\n\nm[\"mkc\"] = {\n\t\"Siliput\",\n\t\"Q7515090\",\n\
      \t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"mke\"] = {\n\t\"Mawchi\",\n\t\"Q21403317\",\n}\n\nm[\"mkf\"] = {\n\t\"Miya\",\n\t\"Q43328\",\n\t\"cdc-wst\",\n\tscripts = Latn,\n}\n\nm[\"mkg\"] = {\n\t\"Mak (China)\",\n\t\"Q3280623\",\n\t\"qfa-kms\",\n\totherNames\
      \ = {\"Mak\"},\n}\n\nm[\"mki\"] = {\n\t\"Dhatki\",\n\t\"Q32480\",\n\t\"inc\",\n\tancestors = {\"mwr\"},\n}\n\nm[\"mkj\"] = {\n\t\"Mokilese\",\n\t\"Q2335528\",\n\t\"poz-mic\",\n\tscripts = Latn,\n}\n\nm[\"mkk\"] = {\n\t\"Byep\",\n\t\"Q35052\",\n}\n\nm[\"\
      mkl\"] = {\n\t\"Mokole\",\n\t\"Q36047\",\n}\n\nm[\"mkm\"] = {\n\t\"Moklen\",\n\t\"Q3319380\",\n}\n\nm[\"mkn\"] = {\n\t\"Kupang Malay\",\n\t\"Q18458203\",\n}\n\nm[\"mko\"] = {\n\t\"Mingang Doso\",\n\t\"Q3915382\",\n}\n\nm[\"mkp\"] = {\n\t\"Moikodi\",\n\t\
      \"Q6894594\",\n}\n\nm[\"mkq\"] = {\n\t\"Bay Miwok\",\n\t\"Q3460957\",\n\t\"nai-you\",\n\tscripts = Latn,\n}\n\nm[\"mkr\"] = {\n\t\"Malas\",\n\t\"Q11732402\",\n\t\"ngf-mad\",\n}\n\nm[\"mks\"] = {\n\t\"Silacayoapan Mixtec\",\n\t\"Q7514027\",\n\t\"omq-mix\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"mkt\"] = {\n\t\"Vamale\",\n\t\"Q14916907\",\n\t\"poz-cln\",\n\tscripts = Latn,\n}\n\nm[\"mku\"] = {\n\t\"Konyanka Maninka\",\n\t\"Q11163298\",\n}\n\nm[\"mkv\"] = {\n\t\"Mafea\",\n\t\"Q3073532\",\n\t\"poz-vnc\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"mkx\"] = {\n\t\"Cinamiguin Manobo\",\n\t\"Q12953697\",\n\t\"mno\",\n}\n\nm[\"mky\"] = {\n\t\"East Makian\",\n\t\"Q3512690\",\n\t\"poz-hce\",\n\tscripts = Latn,\n}\n\nm[\"mkz\"] = {\n\t\"Makasae\",\n\t\"Q35782\",\n}\n\nm[\"mla\"] = {\n\
      \t\"Tamambo\",\n\t\"Q1153276\",\n\t\"poz-vnc\",\n\totherNames = {\"Malo\", \"Tamabo\", \"Maloese\"},\n\tscripts = Latn,\n}\n\nm[\"mlb\"] = {\n\t\"Mbule\",\n\t\"Q35843\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"mlc\"] = {\n\t\"Caolan\",\n\t\"Q3446682\"\
      ,\n\t\"tai-cho\",\n\totherNames = {\"Man Cao Lan\"},\n\tscripts = {\"Latn\", \"Hani\"},\n}\n\nm[\"mle\"] = {\n\t\"Manambu\",\n\t\"Q11732406\",\n\t\"paa-spk\",\n\tscripts = Latn,\n}\n\nm[\"mlf\"] = {\n\t\"Mal\",\n\t\"Q3281057\",\n\t\"mkh-khm\",\n\totherNames\
      \ = {\"Thin\"},\n}\n\nm[\"mlh\"] = {\n\t\"Mape\",\n\t\"Q6753787\",\n}\n\nm[\"mli\"] = {\n\t\"Malimpung\",\n\t\"Q12473435\",\n}\n\nm[\"mlj\"] = {\n\t\"Miltu\",\n\t\"Q3441310\",\n}\n\nm[\"mlk\"] = {\n\t\"Ilwana\",\n\t\"Q6001357\",\n}\n\nm[\"mll\"] = {\n\t\
      \"Malua Bay\",\n\t\"Q6744946\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"mlm\"] = {\n\t\"Mulam\",\n\t\"Q3092284\",\n\t\"qfa-kms\",\n\tscripts = {\"Hani\"},\n}\n\nm[\"mln\"] = {\n\t\"Malango\",\n\t\"Q3281522\",\n\t\"poz-sls\",\n\tscripts = Latn,\n}\n\
      \nm[\"mlo\"] = {\n\t\"Mlomp\",\n\t\"Q36009\",\n}\n\nm[\"mlp\"] = {\n\t\"Bargam\",\n\t\"Q4860543\",\n\t\"ngf-mad\",\n\totherNames = {\"Mugil\"},\n\tscripts = Latn,\n}\n\nm[\"mlq\"] = {\n\t\"Western Maninkakan\",\n\t\"Q11028033\",\n}\n\nm[\"mlr\"] = {\n\t\
      \"Vame\",\n\t\"Q3515088\",\n}\n\nm[\"mls\"] = {\n\t\"Masalit\",\n\t\"Q56557\",\n}\n\nm[\"mlu\"] = {\n\t\"To'abaita\",\n\t\"Q36645\",\n\t\"poz-sls\",\n\totherNames = {\"Toqabaqita\"},\n\tscripts = Latn,\n}\n\nm[\"mlv\"] = {\n\t\"Mwotlap\",\n\t\"Q2475538\"\
      ,\n\t\"poz-vnc\",\n\totherNames = {\"Motlav\", \"Volow\"}, -- or Volow could be separated as a language\n\tscripts = Latn,\n}\n\nm[\"mlw\"] = {\n\t\"Moloko\",\n\t\"Q1965222\",\n\t\"cdc-cbm\",\n\tscripts = Latn,\n}\n\nm[\"mlx\"] = {\n\t\"Malfaxal\",\n\t\
      \"Q2157421\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"mlz\"] = {\n\t\"Malaynon\",\n\t\"Q18755512\",\n\t\"phi\",\n}\n\nm[\"mma\"] = {\n\t\"Mama\",\n\t\"Q3913963\",\n}\n\nm[\"mmb\"] = {\n\t\"Momina\",\n\t\"Q6897297\",\n}\n\nm[\"mmc\"] = {\n\t\"Michoacá\
      n Mazahua\",\n\t\"Q12953705\",\n\t\"oto\",\n\tscripts = Latn,\n}\n\nm[\"mmd\"] = {\n\t\"Maonan\",\n\t\"Q3092293\",\n\t\"qfa-kms\",\n}\n\nm[\"mme\"] = {\n\t\"Mae\",\n\t\"Q3276286\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"mmf\"] = {\n\t\"Mundat\",\n\
      \t\"Q56263\",\n\t\"cdc-wst\",\n\tscripts = Latn,\n}\n\nm[\"mmg\"] = {\n\t\"North Ambrym\",\n\t\"Q2842468\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"mmh\"] = {\n\t\"Mehináku\",\n\t\"Q3501838\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"mmi\"] = {\n\t\
      \"Musar\",\n\t\"Q6940113\",\n}\n\nm[\"mmj\"] = {\n\t\"Majhwar\",\n\t\"Q6737795\",\n}\n\nm[\"mmk\"] = {\n\t\"Mukha-Dora\",\n\t\"Q6933447\",\n}\n\nm[\"mml\"] = {\n\t\"Man Met\",\n\t\"Q3194984\",\n\t\"mkh-pal\",\n}\n\nm[\"mmm\"] = {\n\t\"Maii\",\n\t\"Q6735599\"\
      ,\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"mmn\"] = {\n\t\"Mamanwa\",\n\t\"Q3206623\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"mmo\"] = {\n\t\"Mangga Buang\",\n\t\"Q12952294\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mmp\"] = {\n\t\"Musan\",\n\
      \t\"Q2605703\",\n}\n\nm[\"mmq\"] = {\n\t\"Aisi\",\n\t\"Q6940074\",\n\t\"ngf-mad\",\n\totherNames = {\"Musak\", \"Mabɨŋ\", \"Mabing\"},\n\tscripts = Latn,\n}\n\nm[\"mmr\"] = {\n\t\"Western Xiangxi Miao\",\n\t\"Q3307901\",\n\t\"hmn\",\n}\n\nm[\"mmt\"] =\
      \ {\n\t\"Malalamai\",\n\t\"Q3281496\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mmu\"] = {\n\t\"Mmaala\",\n\t\"Q13123461\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"mmv\"] = {\n\t\"Miriti\",\n\t\"Q6873567\",\n\t\"sai-tuc\",\n\tscripts = Latn,\n\
      }\n\nm[\"mmw\"] = {\n\t\"Emae\",\n\t\"Q3051961\",\n\t\"poz-pnp\",\n\tscripts = Latn,\n}\n\nm[\"mmx\"] = {\n\t\"Madak\",\n\t\"Q3275205\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mmy\"] = {\n\t\"Migaama\",\n\t\"Q56259\",\n\t\"cdc-est\",\n\tscripts =\
      \ Latn,\n}\n\nm[\"mmz\"] = {\n\t\"Mabaale\",\n\t\"Q11003249\",\n}\n\nm[\"mna\"] = {\n\t\"Mbula\",\n\t\"Q3303572\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mnb\"] = {\n\t\"Muna\",\n\t\"Q6935584\",\n\t\"poz-mun\",\n\tscripts = Latn,\n}\n\nm[\"mnc\"\
      ] = {\n\t\"Manchu\",\n\t\"Q33638\",\n\t\"tuw\",\n\tscripts = {\"Mong\"},\n\tancestors = {\"juc\"},\n\ttranslit_module = \"mnc-translit\",\n}\n\nm[\"mnd\"] = {\n\t\"Mondé\",\n\t\"Q6898840\",\n\t\"tup\",\n\totherNames = {\"Monde\", \"Salamãi\", \"Salamai\"\
      , \"Salamaikã\", \"Sanamaica\", \"Sanamaiká\", \"Sanamaykã\"},\n\tscripts = Latn,\n}\n\nm[\"mne\"] = {\n\t\"Naba\",\n\t\"Q760732\",\n\t\"csu\",\n}\n\nm[\"mnf\"] = {\n\t\"Mundani\",\n\t\"Q35839\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"mng\"] = {\n\
      \t\"Eastern Mnong\",\n\t\"Q12953747\",\n\t\"mkh-ban\",\n}\n\nm[\"mnh\"] = {\n\t\"Mono (Congo)\",\n\t\"Q33501\",\n\t\"bad\",\n\totherNames = {\"Mono (Democratic Republic of the Congo)\", \"Mono\"},\n\tscripts = Latn,\n}\n\nm[\"mni\"] = {\n\t\"Manipuri\"\
      ,\n\t\"Q33868\",\n\t\"tbq\",\n\totherNames = {\"Meitei\", \"Meithei\"},\n\tscripts = {\"Beng\", \"Mtei\"},\n\tancestors = {\"omp\"},\n}\n\nm[\"mnj\"] = {\n\t\"Munji\",\n\t\"Q33639\",\n\t\"ira-mny\",\n\totherNames = {\"Munjani\", \"Mundzhan\", \"Mundzhani\"\
      , \"Mundzi\"},\n\tancestors = {\"ira-mny-pro\"},\n}\n\nm[\"mnk\"] = {\n\t\"Mandinka\",\n\t\"Q33678\",\n\t\"dmn\",\n\totherNames = {\"Mandingo\"},\n\tscripts = Latn,\n}\n\nm[\"mnl\"] = {\n\t\"Tiale\",\n\t\"Q6744350\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n\
      }\n\nm[\"mnm\"] = {\n\t\"Mapena\",\n\t\"Q11732415\",\n}\n\nm[\"mnn\"] = {\n\t\"Southern Mnong\",\n\t\"Q23857582\",\n}\n\nm[\"mnp\"] = {\n\t\"Min Bei\",\n\t\"Q36457\",\n\t\"zhx-min-shn\",\n\tscripts = {\"Hani\"},\n}\n\nm[\"mnq\"] = {\n\t\"Minriq\",\n\t\"\
      Q2742268\",\n}\n\nm[\"mnr\"] = {\n\t\"Mono (California)\",\n\t\"Q33591\",\n\t\"azc-num\",\n\totherNames = {\"Mono (United States of America)\", \"Mono\", \"Western Mono\", \"Monache\", \"Monachi\", \"Owens Valley Paiute\", \"Eastern Mono\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"mns\"] = {\n\t\"Mansi\",\n\t\"Q33759\",\n\t\"urj-ugr\",\n\tscripts = Cyrl,\n}\n\nm[\"mnt\"] = {\n\t\"Maykulan\",\n\t\"Q3915696\",\n\t\"aus-pam\",\n\totherNames = {\"Mayi-Kulan\", \"Wunumara\", \"Mayi-Yapi\", \"Mayi-Thakurti\"},\n\t\
      scripts = Latn,\n}\n\nm[\"mnu\"] = {\n\t\"Mer\",\n\t\"Q6817854\",\n}\n\nm[\"mnv\"] = {\n\t\"Rennellese\",\n\t\"Q3397346\",\n\t\"poz-pnp\",\n\totherNames = {\"Rennell-Bellona\"},\n\tscripts = Latn,\n}\n\nm[\"mnw\"] = {\n\t\"Mon\",\n\t\"Q13349\",\n\t\"mkh\"\
      ,\n\tscripts = {\"Mymr\"},\n\tancestors = {\"mkh-mmn\"},\n}\n\nm[\"mnx\"] = {\n\t\"Manikion\",\n\t\"Q3507964\",\n\totherNames = {\"Mantion\", \"Sougb\", \"Sogh\"},\n}\n\nm[\"mny\"] = {\n\t\"Manyawa\",\n\t\"Q11002622\",\n}\n\nm[\"mnz\"] = {\n\t\"Moni\"\
      ,\n\t\"Q6899857\",\n}\n\nm[\"moa\"] = {\n\t\"Mwan\",\n\t\"Q3320111\",\n\t\"dmn\",\n\tscripts = Latn,\n}\n\nm[\"moc\"] = {\n\t\"Mocoví\",\n\t\"Q3027906\",\n\t\"sai-guc\",\n\totherNames = {\"Mbocobí\", \"Mokoví\", \"Moqoyt\"},\n\tscripts = Latn,\n}\n\nm[\"\
      mod\"] = {\n\t\"Mobilian\",\n\t\"Q13333\",\n\t\"crp\",\n\tscripts = Latn,\n}\n\nm[\"moe\"] = {\n\t\"Montagnais\",\n\t\"Q13351\",\n\t\"alg\",\n\tscripts = Latn,\n\tancestors = {\"cr\"},\n\tentry_name = {\n\t\tfrom = {\"Ā\", \"ā\", \"Ē\", \"ē\", \"Ī\", \"\
      ī\", \"Ō\", \"ō\", \"Ū\", \"ū\"},\n\t\tto   = {\"A\", \"a\", \"E\", \"e\", \"I\", \"i\", \"O\", \"o\", \"U\", \"u\"}} ,\n}\n\nm[\"mog\"] = {\n\t\"Mongondow\",\n\t\"Q3058458\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"moh\"] = {\n\t\"Mohawk\",\n\t\"Q13339\"\
      ,\n\t\"iro\",\n\tscripts = Latn,\n}\n\nm[\"moi\"] = {\n\t\"Mboi\",\n\t\"Q3914417\",\n}\n\nm[\"moj\"] = {\n\t\"Monzombo\",\n\t\"Q11154772\",\n\t\"nic-ubg\",\n\tscripts = Latn,\n}\n\nm[\"mok\"] = {\n\t\"Morori\",\n\t\"Q6913275\",\n}\n\nm[\"mom\"] = {\n\t\
      \"Monimbo\",\n\t\"Q56542\",\n}\n\nm[\"moo\"] = {\n\t\"Monom\",\n\t\"Q6901726\",\n\t\"mkh-ban\",\n\totherNames = {\"Monam\", \"Bonam\"},\n}\n\nm[\"mop\"] = {\n\t\"Mopan Maya\",\n\t\"Q36183\",\n\t\"myn\",\n\totherNames = {\"Mopan\", \"Mopán Maya\", \"Mopá\
      n\"},\n\tscripts = Latn,\n}\n\nm[\"moq\"] = {\n\t\"Papuan Mor\",\n\t\"Q11732468\",\n\t\"paa\",\n\totherNames = {\"Mor\"},\n}\n\nm[\"mor\"] = {\n\t\"Moro\",\n\t\"Q36172\",\n\t\"alv\",\n}\n\nm[\"mos\"] = {\n\t\"Moore\",\n\t\"Q36096\",\n\t\"nic-gur\",\n\t\
      otherNames = {\"More\", \"Mossi\", \"Moshi\", \"Mõõré\", \"Mòoré\", \"Mooré\", \"Moré\", \"Möré\"},\n\tscripts = Latn,\n}\n\nm[\"mot\"] = {\n\t\"Barí\",\n\t\"Q2886281\",\n\t\"cba\",\n\totherNames = {\"Bari\", \"Baria\", \"Barira\", \"Motilón\", \"Motilon\"\
      , \"Motilone\"},\n\tscripts = Latn,\n}\n\nm[\"mou\"] = {\n\t\"Mogum\",\n\t\"Q3440473\",\n\t\"cdc-est\",\n\tscripts = Latn,\n}\n\nm[\"mov\"] = {\n\t\"Mojave\",\n\t\"Q56510\",\n\t\"nai-yuc\",\n\tscripts = Latn,\n}\n\nm[\"mow\"] = {\n\t\"Moi (Congo)\",\n\t\
      \"Q11124792\",\n\t\"bnt\",\n\totherNames = {\"Moi\"},\n\tscripts = Latn,\n}\n\nm[\"mox\"] = {\n\t\"Molima\",\n\t\"Q3319495\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"moy\"] = {\n\t\"Shekkacho\",\n\t\"Q56827\",\n}\n\nm[\"moz\"] = {\n\t\"Mukulu\",\n\
      \t\"Q3440403\",\n}\n\nm[\"mpa\"] = {\n\t\"Mpoto\",\n\t\"Q6928303\",\n}\n\nm[\"mpb\"] = {\n\t\"Mullukmulluk\",\n\t\"Q6741120\",\n}\n\nm[\"mpc\"] = {\n\t\"Mangarayi\",\n\t\"Q6748829\",\n}\n\nm[\"mpd\"] = {\n\t\"Machinere\",\n\t\"Q12953681\",\n\t\"awd\",\n\
      \tscripts = Latn,\n}\n\nm[\"mpe\"] = {\n\t\"Majang\",\n\t\"Q56724\",\n\t\"sdv\",\n}\n\nm[\"mpg\"] = {\n\t\"Marba\",\n\t\"Q56614\",\n\t\"cdc\",\n}\n\nm[\"mph\"] = {\n\t\"Maung\",\n\t\"Q6792550\",\n\t\"aus-wdj\",\n\tscripts = Latn,\n}\n\nm[\"mpi\"] = {\n\
      \t\"Mpade\",\n\t\"Q3280670\",\n\t\"cdc-cbm\",\n\tscripts = Latn,\n}\n\nm[\"mpj\"] = {\n\t\"Martu Wangka\",\n\t\"Q3295916\",\n\totherNames = {\"Yulparija\", \"Yulparitja\"},\n\tscripts = Latn,\n}\n\nm[\"mpk\"] = {\n\t\"Mbara (Chad)\",\n\t\"Q3912770\",\n\
      \t\"cdc-cbm\",\n\totherNames = {\"Mbara\"},\n}\n\nm[\"mpl\"] = {\n\t\"Middle Watut\",\n\t\"Q15887910\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mpm\"] = {\n\t\"Yosondúa Mixtec\",\n\t\"Q12953741\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mpn\"\
      ] = {\n\t\"Mindiri\",\n\t\"Q6863842\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mpo\"] = {\n\t\"Miu\",\n\t\"Q6883668\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mpp\"] = {\n\t\"Migabac\",\n\t\"Q11732448\",\n}\n\nm[\"mpq\"] = {\n\t\"Matís\",\n\t\
      \"Q3299145\",\n\t\"sai-pan\",\n\tscripts = Latn,\n}\n\nm[\"mpr\"] = {\n\t\"Vangunu\",\n\t\"Q3554582\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mps\"] = {\n\t\"Dadibi\",\n\t\"Q5208077\",\n\t\"ngf\",\n\totherNames = {\"Daribi\", \"Karimui\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"mpt\"] = {\n\t\"Mian\",\n\t\"Q12952846\",\n\t\"ngf-okk\",\n\tscripts = Latn,\n}\n\nm[\"mpu\"] = {\n\t\"Makuráp\",\n\t\"Q3281037\",\n\t\"tup\",\n\totherNames = {\"Macurapi\", \"Makurápi\", \"Massaka\"},\n\tscripts = Latn,\n}\n\nm[\"\
      mpv\"] = {\n\t\"Mungkip\",\n\t\"Q11732485\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"mpw\"] = {\n\t\"Mapidian\",\n\t\"Q6753812\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"mpx\"] = {\n\t\"Misima-Paneati\",\n\t\"Q6875666\",\n\t\"poz-ocw\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"mpy\"] = {\n\t\"Mapia\",\n\t\"Q3287224\",\n\t\"poz-mic\",\n\tscripts = Latn,\n}\n\nm[\"mpz\"] = {\n\t\"Mpi\",\n\t\"Q6928276\",\n\t\"tbq-lol\",\n}\n\nm[\"mqa\"] = {\n\t\"Maba\",\n\t\"Q3273750\",\n}\n\nm[\"mqb\"] = {\n\t\"Mbuko\",\n\t\
      \"Q3502213\",\n\t\"cdc-cbm\",\n\tscripts = Latn,\n}\n\nm[\"mqc\"] = {\n\t\"Mangole\",\n\t\"Q6749097\",\n\t\"poz-cet\",\n\tscripts = Latn,\n}\n\nm[\"mqe\"] = {\n\t\"Matepi\",\n\t\"Q11732426\",\n\t\"ngf-mad\",\n}\n\nm[\"mqf\"] = {\n\t\"Momuna\",\n\t\"Q6897518\"\
      ,\n}\n\nm[\"mqg\"] = {\n\t\"Kota Bangun Kutai Malay\",\n\t\"Q12952778\",\n}\n\nm[\"mqh\"] = {\n\t\"Tlazoyaltepec Mixtec\",\n\t\"Q12953740\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mqi\"] = {\n\t\"Mariri\",\n\t\"Q6765544\",\n}\n\nm[\"mqj\"] = {\n\t\
      \"Mamasa\",\n\t\"Q6745452\",\n\t\"poz-ssw\",\n\tscripts = Latn,\n}\n\nm[\"mqk\"] = {\n\t\"Rajah Kabunsuwan Manobo\",\n\t\"Q12953700\",\n\t\"mno\",\n}\n\nm[\"mql\"] = {\n\t\"Mbelime\",\n\t\"Q4286473\",\n}\n\nm[\"mqm\"] = {\n\t\"South Marquesan\",\n\t\"\
      Q19694214\",\n\t\"poz-pep\",\n\tscripts = Latn,\n}\n\nm[\"mqn\"] = {\n\t\"Moronene\",\n\t\"Q642581\",\n\t\"poz-btk\",\n\tscripts = Latn,\n}\n\nm[\"mqo\"] = {\n\t\"Modole\",\n\t\"Q11732457\",\n}\n\nm[\"mqp\"] = {\n\t\"Manipa\",\n\t\"Q6749799\",\n\t\"poz-cet\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"mqq\"] = {\n\t\"Minokok\",\n\t\"Q18642293\",\n}\n\nm[\"mqr\"] = {\n\t\"Mander\",\n\t\"Q6747979\",\n}\n\nm[\"mqs\"] = {\n\t\"West Makian\",\n\t\"Q3033575\",\n}\n\nm[\"mqt\"] = {\n\t\"Mok\",\n\t\"Q13018559\",\n\t\"mkh-pal\"\
      ,\n}\n\nm[\"mqu\"] = {\n\t\"Mandari\",\n\t\"Q3285426\",\n\t\"sdv\",\n}\n\nm[\"mqv\"] = {\n\t\"Mosimo\",\n\t\"Q11732478\",\n\tscripts = Latn,\n}\n\nm[\"mqw\"] = {\n\t\"Murupi\",\n\t\"Q11732486\",\n\t\"ngf-mad\",\n\tscripts = Latn,\n}\n\nm[\"mqx\"] = {\n\
      \t\"Mamuju\",\n\t\"Q6746004\",\n\t\"poz-ssw\",\n\tscripts = Latn,\n}\n\nm[\"mqy\"] = {\n\t\"Manggarai\",\n\t\"Q3285748\",\n\t\"poz-cet\",\n\tscripts = Latn,\n}\n\nm[\"mqz\"] = {\n\t\"Malasanga\",\n\t\"Q14916889\",\n\t\"poz-ocw\",\n\totherNames = {\"Pano\"\
      },\n\tscripts = Latn,\n}\n\nm[\"mra\"] = {\n\t\"Mlabri\",\n\t\"Q3073465\",\n\t\"mkh\",\n}\n\nm[\"mrb\"] = {\n\t\"Marino\",\n\t\"Q3293299\",\n}\n\nm[\"mrc\"] = {\n\t\"Maricopa\",\n\t\"Q56386\",\n\t\"nai-yuc\",\n\tscripts = Latn,\n}\n\nm[\"mrd\"] = {\n\t\
      \"Western Magar\",\n\t\"Q22303263\",\n}\n\nm[\"mre\"] = {\n\t\"Martha's Vineyard Sign Language\",\n\t\"Q33494\",\n\t\"sgn\",\n\tscripts = {\"Latn\", \"Sgnw\"},\n}\n\nm[\"mrf\"] = {\n\t\"Elseng\",\n\t\"Q3915667\",\n}\n\nm[\"mrg\"] = {\n\t\"Mising\",\n\t\
      \"Q3316328\",\n\t\"sit-tan\",\n\totherNames = {\"Mishing\", \"Plains Miri\", \"Takam\", \"Hill Miri\", \"Sarak\"},\n\tscripts = {\"Latn\", \"Beng\", \"Deva\"},\n\tancestors = {\"adi\"},\n}\n\nm[\"mrh\"] = {\n\t\"Mara Chin\",\n\t\"Q4175893\",\n\t\"tbq-kuk\"\
      ,\n\totherNames = {\"Chin Mara\", \"Lakher\", \"Mara\", \"Maram\", \"Mira\", \"Zao\"},\n\tscripts = Latn,\n}\n\nm[\"mrj\"] = {\n\t\"Western Mari\",\n\t\"Q1776032\",\n\t\"urj\",\n\totherNames = {\"Hill Mari\", \"Mountain Mari\", \"Highland Mari\"},\n\t\
      scripts = Cyrl,\n\ttranslit_module = \"chm-translit\",\n}\n\nm[\"mrk\"] = {\n\t\"Hmwaveke\",\n\t\"Q5873712\",\n\t\"poz-cln\",\n\tscripts = Latn,\n}\n\nm[\"mrl\"] = {\n\t\"Mortlockese\",\n\t\"Q3324598\",\n\t\"poz-mic\",\n\tscripts = Latn,\n}\n\nm[\"mrm\"\
      ] = {\n\t\"Merlav\",\n\t\"Q3331115\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"mrn\"] = {\n\t\"Cheke Holo\",\n\t\"Q2962165\",\n\t\"poz-ocw\",\n\totherNames = {\"Maringe\"},\n\tscripts = Latn,\n}\n\nm[\"mro\"] = {\n\t\"Mru\",\n\t\"Q1951521\",\n\t\"\
      sit\",\n\tscripts = {\"Latn\", \"Mroo\"},\n}\n\nm[\"mrp\"] = {\n\t\"Morouas\",\n\t\"Q6913299\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"mrq\"] = {\n\t\"North Marquesan\",\n\t\"Q2603808\",\n\t\"poz-pep\",\n\tscripts = Latn,\n}\n\nm[\"mrr\"] = {\n\t\
      \"Hill Maria\",\n\t\"Q27602\",\n\t\"dra\",\n\totherNames = {\"Garhchiroli Maria\", \"Madia\", \"Madiya\", \"Maria (India)\", \"Maria\"}, -- the last four are also names of mrr's sibling lect, daq\n\tancestors = {\"gon\"},\n}\n\nm[\"mrs\"] = {\n\t\"Maragus\"\
      ,\n\t\"Q6754640\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"mrt\"] = {\n\t\"Margi\",\n\t\"Q56241\",\n\t\"cdc-cbm\",\n\totherNames = {\"Marghi Central\", \"Marghi\"},\n\tscripts = Latn,\n}\n\nm[\"mru\"] = {\n\t\"Mono (Cameroon)\",\n\t\"Q11031964\",\n\
      \t\"alv-mbm\",\n\totherNames = {\"Mono\"},\n\tscripts = Latn,\n}\n\nm[\"mrv\"] = {\n\t\"Mangarevan\",\n\t\"Q36237\",\n\t\"poz-pep\",\n\tscripts = Latn,\n}\n\nm[\"mrw\"] = {\n\t\"Maranao\",\n\t\"Q33800\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"mrx\"]\
      \ = {\n\t\"Dineor\",\n\t\"Q5278044\",\n}\n\nm[\"mry\"] = {\n\t\"Karaga Mandaya\",\n\t\"Q6747925\",\n\t\"phi\",\n}\n\nm[\"mrz\"] = {\n\t\"Marind\",\n\t\"Q6763970\",\n}\n\nm[\"msb\"] = {\n\t\"Masbatenyo\",\n\t\"Q33948\",\n\t\"phi\",\n\totherNames = {\"Masbateñ\
      o\", \"Masbateno\", \"Minasbate\"},\n\tscripts = Latn,\n}\n\nm[\"msc\"] = {\n\t\"Sankaran Maninka\",\n\t\"Q11155812\",\n}\n\nm[\"msd\"] = {\n\t\"Yucatec Maya Sign Language\",\n\t\"Q34281\",\n\t\"sgn\",\n\tscripts = Latn, -- when documented\n}\n\nm[\"mse\"\
      ] = {\n\t\"Musey\",\n\t\"Q56328\",\n}\n\nm[\"msf\"] = {\n\t\"Mekwei\",\n\t\"Q4544752\",\n\totherNames = {\"Mekwei (New Guinea)\", \"Menggwei\"},\n\tscripts = Latn,\n}\n\nm[\"msg\"] = {\n\t\"Moraid\",\n\t\"Q6909020\",\n}\n\nm[\"msi\"] = {\n\t\"Sabah Malay\"\
      ,\n\t\"Q10867404\",\n}\n\nm[\"msj\"] = {\n\t\"Ma\",\n\t\"Q6720909\",\n\t\"nic-ubg\",\n\totherNames = {\"Madi\"},\n\tscripts = Latn,\n}\n\nm[\"msk\"] = {\n\t\"Mansaka\",\n\t\"Q12952800\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"msl\"] = {\n\t\"Molof\"\
      ,\n\t\"Q4300950\",\n}\n\nm[\"msm\"] = {\n\t\"Agusan Manobo\",\n\t\"Q12953696\",\n\t\"mno\",\n}\n\nm[\"msn\"] = {\n\t\"Vurës\",\n\t\"Q3563857\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"mso\"] = {\n\t\"Mombum\",\n\t\"Q6897079\",\n}\n\nm[\"msp\"] = {\n\
      \t\"Maritsauá\",\n\t\"Q6765915\",\n\t\"tup\",\n\totherNames = {\"Manitsawá\", \"Mantizula\"},\n\tscripts = Latn,\n}\n\nm[\"msq\"] = {\n\t\"Caac\",\n\t\"Q2932212\",\n\t\"poz-cln\",\n\tscripts = Latn,\n}\n\nm[\"msr\"] = {\n\t\"Mongolian Sign Language\",\n\
      \t\"Q3915499\",\n\t\"sgn\",\n}\n\nm[\"mss\"] = {\n\t\"West Masela\",\n\t\"Q12952816\",\n}\n\nm[\"msu\"] = {\n\t\"Musom\",\n\t\"Q6943041\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"msv\"] = {\n\t\"Maslam\",\n\t\"Q3502273\",\n}\n\nm[\"msw\"] = {\n\t\"\
      Mansoanka\",\n\t\"Q35814\",\n}\n\nm[\"msx\"] = {\n\t\"Moresada\",\n\t\"Q11732475\",\n}\n\nm[\"msy\"] = {\n\t\"Aruamu\",\n\t\"Q3501809\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"msz\"] = {\n\t\"Momare\",\n\t\"Q6897030\",\n}\n\nm[\"mta\"] = {\n\t\"Cotabato\
      \ Manobo\",\n\t\"Q12953698\",\n\t\"mno\",\n}\n\nm[\"mtb\"] = {\n\t\"Anyin Morofo\",\n\t\"Q3502338\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"mtc\"] = {\n\t\"Munit\",\n\t\"Q11732482\",\n\t\"ngf-mad\",\n}\n\nm[\"mtd\"] = {\n\t\"Mualang\",\n\t\"Q3073458\"\
      ,\n}\n\nm[\"mte\"] = {\n\t\"Alu\",\n\t\"Q33503\",\n\t\"poz-ocw\",\n\totherNames = {\"Mono\", \"Mono-Alu\"},\n\tscripts = Latn,\n}\n\nm[\"mtf\"] = {\n\t\"Murik (New Guinea)\",\n\t\"Q7050035\",\n\totherNames = {\"Murik (Papua New Guinea)\", \"Murik\", \"\
      Sepik Murik\"},\n\tscripts = Latn,\n}\n\nm[\"mtg\"] = {\n\t\"Una\",\n\t\"Q5580728\",\n}\n\nm[\"mth\"] = {\n\t\"Munggui\",\n\t\"Q6936018\",\n\t\"poz-hce\",\n\tscripts = Latn,\n}\n\nm[\"mti\"] = {\n\t\"Maiwa (New Guinea)\",\n\t\"Q6737223\",\n\t\"ngf\",\n\
      \totherNames = {\"Maiwa (Papua New Guinea)\", \"Maiwa\"},\n\tscripts = Latn,\n}\n\nm[\"mtj\"] = {\n\t\"Moskona\",\n\t\"Q11288953\",\n}\n\nm[\"mtk\"] = {\n\t\"Mbe'\",\n\t\"Q10964025\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"mtl\"] = {\n\t\"Montol\"\
      ,\n\t\"Q3440457\",\n\t\"cdc-wst\",\n\tscripts = Latn,\n}\n\nm[\"mtm\"] = {\n\t\"Mator\",\n\t\"Q20669419\",\n\t\"syd\",\n\totherNames = {\"Taygi\", \"Karagas\", \"Mator-Taygi-Karagas\"},\n\tscripts = Cyrl,\n}\n\nm[\"mtn\"] = {\n\t\"Matagalpa\",\n\t\"Q3490756\"\
      ,\n}\n\nm[\"mto\"] = {\n\t\"Totontepec Mixe\",\n\t\"Q7828400\",\n\t\"nai-miz\",\n}\n\nm[\"mtp\"] = {\n\t\"Wichí Lhamtés Nocten\",\n\t\"Q5908756\",\n\t\"sai-wic\",\n\tscripts = Latn,\n}\n\nm[\"mtq\"] = {\n\t\"Muong\",\n\t\"Q3236789\",\n\t\"mkh-vie\",\n\t\
      scripts = Latn,\n}\n\nm[\"mtr\"] = {\n\t\"Mewari\",\n\tnil,\n\t\"inc\",\n\tscripts = {\"Deva\"},\n\tancestors = {\"raj\"},\n\ttranslit_module = \"hi-translit\", -- for now\n}\n\nm[\"mts\"] = {\n\t\"Yora\",\n\t\"Q3572572\",\n\t\"sai-pan\",\n\tscripts =\
      \ Latn,\n}\n\nm[\"mtt\"] = {\n\t\"Mota\",\n\t\"Q3325052\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"mtu\"] = {\n\t\"Tututepec Mixtec\",\n\t\"Q7857069\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mtv\"] = {\n\t\"Asaro'o\",\n\t\"Q3503684\",\n\t\"\
      ngf-fin\",\n\totherNames = {\"Molet\", \"Molet Kasu\", \"Molet Mur\"}, -- or Molet could be a sep. lang.\n\tscripts = Latn,\n}\n\nm[\"mtw\"] = {\n\t\"Magahat\",\n\t\"Q6729600\",\n}\n\nm[\"mtx\"] = {\n\t\"Tidaá Mixtec\",\n\t\"Q7800805\",\n\t\"omq-mix\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"mty\"] = {\n\t\"Nabi\",\n\t\"Q6956858\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"mua\"] = {\n\t\"Mundang\",\n\t\"Q36032\",\n}\n\nm[\"mub\"] = {\n\t\"Mubi\",\n\t\"Q3440518\",\n\t\"cdc-est\",\n\tscripts = Latn,\n}\n\n\
      m[\"muc\"] = {\n\t\"Mbu'\",\n\t\"Q35868\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"mud\"] = {\n\t\"Mednyj Aleut\",\n\t\"Q1977419\",\n}\n\nm[\"mue\"] = {\n\t\"Media Lengua\",\n\t\"Q36066\",\n\t\"crp\",\n\tscripts = Latn,\n}\n\nm[\"mug\"] = {\n\t\"\
      Musgu\",\n\t\"Q3123545\",\n\t\"cdc-cbm\",\n\tscripts = Latn,\n}\n\nm[\"muh\"] = {\n\t\"Mündü\",\n\t\"Q35981\",\n\t\"nic-ubg\",\n\totherNames = {\"Mundu\"},\n\tscripts = Latn,\n}\n\nm[\"mui\"] = {\n\t\"Musi\",\n\t\"Q615660\",\n\t\"poz-mly\",\n\totherNames\
      \ = {\"Palembang Malay\", \"Basa Pelembang Sari-sari\", \"Sekayu\"},\n\tscripts = Latn,\n}\n\nm[\"muj\"] = {\n\t\"Mabire\",\n\t\"Q3440437\",\n}\n\nm[\"mul\"] = {\n\t\"Translingual\",\n\t\"Q20923490\",\n\t\"qfa-not\",\n\tscripts = {\"None\", \"Latn\", \"\
      Bopo\", \"Brai\", \"Cyrl\", \"Hani\", \"Hans\", \"Hant\", \"IPAchar\", \"musical\", \"Ruminumerals\", \"Zsym\", \"Zmth\"},\n}\n\nm[\"mum\"] = {\n\t\"Maiwala\",\n\t\"Q12952764\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"muo\"] = {\n\t\"Nyong\",\n\t\"\
      Q36373\",\n}\n\nm[\"mup\"] = {\n\t\"Malvi\",\n\t\"Q33413\",\n\t\"inc\",\n\tancestors = {\"raj\"},\n}\n\nm[\"muq\"] = {\n\t\"Eastern Xiangxi Miao\",\n\t\"Q27431376\",\n\t\"hmn\",\n}\n\nm[\"mur\"] = {\n\t\"Murle\",\n\t\"Q56727\",\n\t\"sdv\",\n}\n\nm[\"mus\"\
      ] = {\n\t\"Creek\",\n\t\"Q523014\",\n\t\"nai-mus\",\n\totherNames = {\"Muscogee\"},\n\tscripts = Latn,\n}\n\nm[\"mut\"] = {\n\t\"Western Muria\",\n\t\"Q12952886\",\n\t\"dra\",\n\tancestors = {\"gon\"},\n}\n\nm[\"muu\"] = {\n\t\"Yaaku\",\n\t\"Q34222\",\n\
      \t\"cus\",\n}\n\nm[\"muv\"] = {\n\t\"Muthuvan\",\n\t\"Q3327420\",\n\t\"dra\",\n}\n\nm[\"mux\"] = {\n\t\"Bo-Ung\",\n\t\"Q15831607\",\n}\n\nm[\"muy\"] = {\n\t\"Muyang\",\n\t\"Q3502301\",\n\t\"cdc-cbm\",\n\tscripts = Latn,\n}\n\nm[\"muz\"] = {\n\t\"Mursi\"\
      ,\n\t\"Q36013\",\n\t\"sdv\",\n}\n\nm[\"mva\"] = {\n\t\"Manam\",\n\t\"Q6746851\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mvb\"] = {\n\t\"Mattole\",\n\t\"Q20824\",\n\t\"ath-pco\",\n\tscripts = Latn,\n}\n\nm[\"mvd\"] = {\n\t\"Mamboru\",\n\t\"Q578815\"\
      ,\n\t\"poz\",\n}\n\nm[\"mvg\"] = {\n\t\"Yucuañe Mixtec\",\n\t\"Q25562736\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mvh\"] = {\n\t\"Mire\",\n\t\"Q3441359\",\n}\n\nm[\"mvi\"] = {\n\t\"Miyako\",\n\t\"Q36218\",\n\t\"jpx-ryu\",\n\tscripts = {\"Jpan\"\
      },\n}\n\nm[\"mvk\"] = {\n\t\"Mekmek\",\n\t\"Q6810592\",\n}\n\nm[\"mvl\"] = {\n\t\"Mbara (Australia)\",\n\t\"Q6799620\",\n\t\"aus-pam\",\n\totherNames = {\"Mbara\", \"Midjamba\"},\n}\n\nm[\"mvm\"] = {\n\t\"Muya\",\n\t\"Q2422759\",\n\t\"sit-qia\",\n}\n\n\
      m[\"mvn\"] = {\n\t\"Minaveha\",\n\t\"Q6863278\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mvo\"] = {\n\t\"Marovo\",\n\t\"Q3294683\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mvp\"] = {\n\t\"Duri\",\n\t\"Q3915414\",\n\t\"poz-ssw\",\n}\n\nm[\"mvq\"\
      ] = {\n\t\"Moere\",\n\t\"Q11732458\",\n\t\"ngf-mad\",\n}\n\nm[\"mvr\"] = {\n\t\"Marau\",\n\t\"Q6755069\",\n\t\"poz-hce\",\n\tscripts = Latn,\n}\n\nm[\"mvs\"] = {\n\t\"Massep\",\n\t\"Q3502895\",\n}\n\nm[\"mvt\"] = {\n\t\"Mpotovoro\",\n\t\"Q6928305\",\n\t\
      \"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"mvu\"] = {\n\t\"Marfa\",\n\t\"Q713633\",\n}\n\nm[\"mvv\"] = {\n\t\"Tagal Murut\",\n\t\"Q7675300\",\n\t\"poz-san\",\n\tscripts = Latn,\n}\n\nm[\"mvw\"] = {\n\t\"Machinga\",\n\t\"Q12952754\",\n}\n\nm[\"mvx\"] = {\n\
      \t\"Meoswar\",\n\t\"Q6817777\",\n\t\"poz-hce\",\n\tscripts = Latn,\n}\n\nm[\"mvy\"] = {\n\t\"Indus Kohistani\",\n\t\"Q33399\",\n}\n\nm[\"mvz\"] = {\n\t\"Mesqan\",\n\t\"Q6821677\",\n\t\"sem-eth\",\n}\n\nm[\"mwa\"] = {\n\t\"Mwatebu\",\n\t\"Q14916896\",\n\
      \t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mwb\"] = {\n\t\"Juwal\",\n\t\"Q6319103\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"mwc\"] = {\n\t\"Are\",\n\t\"Q29277\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mwe\"] = {\n\t\"Mwera\",\n\t\"Q6944725\"\
      ,\n\totherNames = {\"Chimwera\", \"Cimwera\", \"Mwela\"},\n\tscripts = Latn,\n}\n\nm[\"mwf\"] = {\n\t\"Murrinh-Patha\",\n\t\"Q2980398\",\n\t\"aus-dal\",\n\tscripts = Latn,\n}\n\nm[\"mwg\"] = {\n\t\"Aiklep\",\n\t\"Q3399652\",\n\t\"poz-ocw\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"mwh\"] = {\n\t\"Mouk-Aria\",\n\t\"Q3325498\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mwi\"] = {\n\t\"Labo\",\n\t\"Q2157452\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"mwk\"] = {\n\t\"Kita Maninkakan\",\n\t\"Q3015523\",\n}\n\
      \nm[\"mwl\"] = {\n\t\"Mirandese\",\n\t\"Q13330\",\n\t\"roa-ibe\",\n\tscripts = Latn,\n\tancestors = {\"roa-ole\"},\n}\n\nm[\"mwm\"] = {\n\t\"Sar\",\n\t\"Q56850\",\n\t\"csu-sar\",\n}\n\nm[\"mwn\"] = {\n\t\"Nyamwanga\",\n\t\"Q6944666\",\n}\n\nm[\"mwo\"]\
      \ = {\n\t\"Central Maewo\",\n\t\"Q3276435\",\n}\n\nm[\"mwp\"] = {\n\t\"Kala Lagaw Ya\",\n\t\"Q2591262\",\n\t\"aus-pam\",\n\tscripts = Latn,\n}\n\nm[\"mwq\"] = {\n\t\"Mün Chin\",\n\t\"Q331340\",\n\t\"tbq-kuk\",\n\totherNames = {\"Mün\", \"Müün Chin\"},\n\
      }\n\nm[\"mwr\"] = {\n\t\"Marwari\",\n\t\"Q56312\",\n\t\"inc\",\n\totherNames = {\"Merwari\", \"Dhundari\", \"Shekhawati\", \"Harauti\", \"Goaria\", \"Gurgula\"},\n\tscripts = {\"Deva\", \"Mahj\"},\n\tancestors = {\"raj\"},\n\ttranslit_module = \"hi-translit\"\
      , -- for now\n}\n\nm[\"mws\"] = {\n\t\"Mwimbi-Muthambi\",\n\t\"Q15632357\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"mwt\"] = {\n\t\"Moken\",\n\t\"Q18648701\",\n\t\"poz\",\n}\n\nm[\"mwu\"] = {\n\t\"Mittu\",\n\t\"Q6883573\",\n\t\"csu\",\n\tscripts = Latn,\n\
      }\n\nm[\"mwv\"] = {\n\t\"Mentawai\",\n\t\"Q13365\",\n\t\"poz-nws\",\n\tscripts = Latn,\n}\n\nm[\"mww\"] = {\n\t\"White Hmong\",\n\t\"Q3138829\",\n\t\"hmn\",\n\totherNames = {\"Hmong Daw\", \"Hmoob Dawb\"},\n\tscripts = {\"Latn\", \"Hmng\"},\n}\n\nm[\"\
      mwz\"] = {\n\t\"Moingi\",\n\t\"Q11011905\",\n}\n\nm[\"mxa\"] = {\n\t\"Northwest Oaxaca Mixtec\",\n\t\"Q12953739\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mxb\"] = {\n\t\"Tezoatlán Mixtec\",\n\t\"Q3317286\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\
      \nm[\"mxc\"] = {\n\t\"Manyika\",\n\t\"Q33599\",\n}\n\nm[\"mxd\"] = {\n\t\"Modang\",\n\t\"Q6888037\",\n}\n\nm[\"mxe\"] = {\n\t\"Mele-Fila\",\n\t\"Q3305008\",\n\t\"poz-pnp\",\n\tscripts = Latn,\n}\n\nm[\"mxf\"] = {\n\t\"Malgbe\",\n\t\"Q3502224\",\n}\n\n\
      m[\"mxg\"] = {\n\t\"Mbangala\",\n\t\"Q6799612\",\n}\n\nm[\"mxh\"] = {\n\t\"Mvuba\",\n\t\"Q6944591\",\n\t\"csu\",\n\tscripts = Latn,\n}\n\nm[\"mxi\"] = {\n\t\"Mozarabic\",\n\t\"Q317044\",\n\t\"roa-ibe\",\n\tscripts = {\"Arab\", \"Hebr\", \"Latn\"},\n}\n\
      \nm[\"mxj\"] = {\n\t\"Miju\",\n\t\"Q56332\",\n\totherNames = {\"Miju Mishmi\", \"Miju-Mishmi\", \"Geman Deng\", \"Geman\", \"Kaman\", \"Kman\", \"Midzu\"},\n\tscripts = {\"Latn\", \"Deva\"},\n}\n\nm[\"mxk\"] = {\n\t\"Monumbo\",\n\t\"Q6906792\",\n\t\"qfa-tor\"\
      ,\n}\n\nm[\"mxl\"] = {\n\t\"Maxi Gbe\",\n\t\"Q35770\",\n}\n\nm[\"mxm\"] = {\n\t\"Meramera\",\n\t\"Q6817936\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"mxn\"] = {\n\t\"Moi (Indonesia)\",\n\t\"Q11732459\",\n\t\"paa\",\n\totherNames = {\"Moi\", \"Mekwei\"\
      },\n}\n\nm[\"mxo\"] = {\n\t\"Mbowe\",\n\t\"Q10962309\",\n}\n\nm[\"mxp\"] = {\n\t\"Tlahuitoltepec Mixe\",\n\t\"Q7810697\",\n}\n\nm[\"mxq\"] = {\n\t\"Juquila Mixe\",\n\t\"Q25559721\",\n}\n\nm[\"mxr\"] = {\n\t\"Murik (Malaysia)\",\n\t\"Q3328150\",\n\totherNames\
      \ = {\"Murik\", \"Kayan Murik\"},\n\tscripts = Latn,\n}\n\nm[\"mxs\"] = {\n\t\"Huitepec Mixtec\",\n\t\"Q12953729\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mxt\"] = {\n\t\"Jamiltepec Mixtec\",\n\t\"Q12953730\",\n\t\"omq-mix\",\n\tscripts = Latn,\n\
      }\n\nm[\"mxu\"] = {\n\t\"Mada (Cameroon)\",\n\t\"Q3441206\",\n\t\"cdc-cbm\",\n\totherNames = {\"Mada\"},\n\tscripts = Latn,\n}\n\nm[\"mxv\"] = {\n\t\"Metlatónoc Mixtec\",\n\t\"Q36363\",\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mxw\"] = {\n\t\"Namo\"\
      ,\n\t\"Q12952923\",\n}\n\nm[\"mxx\"] = {\n\t\"Mahou\",\n\t\"Q11004334\",\n\t\"dmn\",\n\totherNames = {\"Mawukakan\", \"Mahu\", \"Maou\", \"Mau\", \"Mawu\"},\n}\n\nm[\"mxy\"] = {\n\t\"Southeastern Nochixtlán Mixtec\",\n\t\"Q7070684\",\n\t\"omq-mix\",\n\t\
      scripts = Latn,\n}\n\nm[\"mxz\"] = {\n\t\"Central Masela\",\n\t\"Q42575433\",\n}\n\nm[\"myb\"] = {\n\t\"Mbay\",\n\t\"Q3033565\",\n\t\"csu-sar\",\n}\n\nm[\"myc\"] = {\n\t\"Mayeka\",\n\t\"Q11129517\",\n}\n\nm[\"mye\"] = {\n\t\"Myene\",\n\t\"Q35832\",\n}\n\
      \nm[\"myf\"] = {\n\t\"Bambassi\",\n\t\"Q56540\",\n}\n\nm[\"myg\"] = {\n\t\"Manta\",\n\t\"Q35799\",\n\t\"nic-grf\",\n\tscripts = Latn,\n}\n\nm[\"myh\"] = {\n\t\"Makah\",\n\t\"Q3280640\",\n\t\"wak\",\n\tscripts = Latn,\n}\n\nm[\"myj\"] = {\n\t\"Mangayat\"\
      ,\n\t\"Q35988\",\n}\n\nm[\"myk\"] = {\n\t\"Mamara Senoufo\",\n\t\"Q36187\",\n}\n\nm[\"myl\"] = {\n\t\"Moma\",\n\t\"Q6897018\",\n\t\"poz\",\n}\n\nm[\"mym\"] = {\n\t\"Me'en\",\n\t\"Q3408516\",\n\t\"sdv\",\n}\n\nm[\"myo\"] = {\n\t\"Anfillo\",\n\t\"Q34928\"\
      ,\n}\n\nm[\"myp\"] = {\n\t\"Pirahã\",\n\t\"Q33825\",\n\t\"sai-mur\",\n\tscripts = Latn,\n}\n\nm[\"myr\"] = {\n\t\"Muniche\",\n\t\"Q3915654\",\n}\n\nm[\"mys\"] = {\n\t\"Mesmes\",\n\t\"Q3508617\",\n\t\"sem-eth\",\n}\n\nm[\"myu\"] = {\n\t\"Mundurukú\",\n\t\
      \"Q746723\",\n\t\"tup\",\n\tscripts = Latn,\n}\n\nm[\"myv\"] = {\n\t\"Erzya\",\n\t\"Q29952\",\n\t\"urj-mdv\",\n\totherNames = {\"Mordvin\"},\n\tscripts = Cyrl,\n\ttranslit_module = \"myv-translit\",\n\toverride_translit = true,\n}\n\nm[\"myw\"] = {\n\t\
      \"Muyuw\",\n\t\"Q3502878\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"myx\"] = {\n\t\"Masaba\",\n\t\"Q12952814\",\n\t\"bnt\",\n\totherNames = {\"Masaaba\"},\n\tscripts = Latn,\n}\n\nm[\"myy\"] = {\n\t\"Macuna\",\n\t\"Q3275059\",\n\t\"sai-tuc\",\n\t\
      otherNames = {\"Buhagana\", \"Bujagana\", \"Wahana\"},\n\tscripts = Latn,\n}\n\nm[\"myz\"] = {\n\t\"Classical Mandaic\",\n\t\"Q25559314\",\n\t\"sem-ara\",\n\tscripts = {\"Mand\"},\n}\n\nm[\"mza\"] = {\n\t\"Santa María Zacatepec Mixtec\",\n\t\"Q8063756\"\
      ,\n\t\"omq-mix\",\n\tscripts = Latn,\n}\n\nm[\"mzb\"] = {\n\t\"Tumzabt\",\n\t\"Q36149\",\n\t\"ber\",\n\totherNames = {\"Mozabite\", \"Tumẓabt\"},\n}\n\nm[\"mzc\"] = {\n\t\"Madagascar Sign Language\",\n\t\"Q12715020\",\n\t\"sgn\",\n}\n\nm[\"mzd\"] = {\n\
      \t\"Malimba\",\n\t\"Q35806\",\n}\n\nm[\"mze\"] = {\n\t\"Morawa\",\n\t\"Q6909384\",\n}\n\nm[\"mzg\"] = {\n\t\"Monastic Sign Language\",\n\t\"Q3217333\",\n\t\"sgn\",\n}\n\nm[\"mzh\"] = {\n\t\"Wichí Lhamtés Güisnay\",\n\t\"Q7998197\",\n\t\"sai-wic\",\n\t\
      scripts = Latn,\n}\n\nm[\"mzi\"] = {\n\t\"Ixcatlán Mazatec\",\n\t\"Q6101049\",\n\t\"omq-maz\",\n\tscripts = Latn,\n}\n\nm[\"mzj\"] = {\n\t\"Manya\",\n\t\"Q11006832\",\n}\n\nm[\"mzk\"] = {\n\t\"Nigeria Mambila\",\n\t\"Q11004163\",\n\t\"nic-bod\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"mzl\"] = {\n\t\"Mazatlán Mixe\",\n\t\"Q25559728\",\n}\n\nm[\"mzm\"] = {\n\t\"Mumuye\",\n\t\"Q36021\",\n\t\"alv-sav\",\n\tscripts = Latn,\n}\n\nm[\"mzn\"] = {\n\t\"Mazanderani\",\n\t\"Q13356\",\n\t\"ira-msh\",\n\totherNames = {\"Mazandarani\"\
      , \"Tabari\"},\n\tscripts = {\"mzn-Arab\"},\n}\n\nm[\"mzo\"] = {\n\t\"Matipuhy\",\n\t\"Q6787588\",\n\t\"sai-car\",\n\tscripts = Latn,\n}\n\nm[\"mzp\"] = {\n\t\"Movima\",\n\t\"Q1659701\",\n}\n\nm[\"mzq\"] = {\n\t\"Mori Atas\",\n\t\"Q3324070\",\n}\n\nm[\"\
      mzr\"] = {\n\t\"Marúbo\",\n\t\"Q3296011\",\n\t\"sai-pan\",\n\tscripts = Latn,\n}\n\nm[\"mzs\"] = {\n\t\"Macanese\",\n\t\"Q35785\",\n\t\"crp\",\n\tscripts = Latn,\n}\n\nm[\"mzt\"] = {\n\t\"Mintil\",\n\t\"Q6869641\",\n}\n\nm[\"mzu\"] = {\n\t\"Inapang\",\n\
      \t\"Q6013569\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"mzv\"] = {\n\t\"Manza\",\n\t\"Q36038\",\n\t\"alv-sav\",\n}\n\nm[\"mzw\"] = {\n\t\"Deg\",\n\t\"Q35183\",\n\t\"nic-gur\",\n\tscripts = Latn,\n}\n\nm[\"mzx\"] = {\n\t\"Mawayana\",\n\t\"Q6794377\",\n\
      \t\"awd\",\n}\n\nm[\"mzy\"] = {\n\t\"Mozambican Sign Language\",\n\t\"Q6927809\",\n\t\"sgn\",\n}\n\nm[\"mzz\"] = {\n\t\"Maiadomu\",\n\t\"Q6735234\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:24.477Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Amyv-translit&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=62328 t=1555362624360105
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:24 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 415620048, 818897792, 707789239
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4131705\" pageid=\"4131705\" ns=\"828\" title=\"Module:myv-translit\"><revisions><rev user=\"Chuck Entz\" timestamp=\"2017-04-23T00:21:17Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Reverted edits by [[Special:Contributions/Örümçek|Örümçek]]. If you think this rollback is in error, please leave a message on my talk page.\" xml:space=\"preserve\">local export = {}\n\
      \nlocal tab = {\n\t[\"А\"]=\"A\", [\"Б\"]=\"B\", [\"В\"]=\"V\", [\"Г\"]=\"G\", [\"Д\"]=\"D\", [\"Е\"]=\"E\", [\"Ё\"]=\"Jo\", [\"Ж\"]=\"Ž\", [\"З\"]=\"Z\", [\"И\"]=\"I\", [\"Й\"]=\"J\",\n\t[\"К\"]=\"K\", [\"Л\"]=\"L\", [\"М\"]=\"M\", [\"Н\"]=\"N\", [\"О\
      \"]=\"O\", [\"П\"]=\"P\", [\"Р\"]=\"R\", [\"С\"]=\"S\", [\"Т\"]=\"T\", [\"У\"]=\"U\", [\"Ф\"]=\"F\",\n\t[\"Х\"]=\"X\", [\"Ц\"]=\"C\", [\"Ч\"]=\"Č\", [\"Ш\"]=\"Š\", [\"Щ\"]=\"Šč\", [\"Ъ\"]=\"ʺ\", [\"Ы\"]=\"Y\", [\"Ь\"]=\"ʹ\", [\"Э\"]=\"E\", [\"Ю\"]=\"Ju\"\
      , [\"Я\"]=\"Ja\",\n\t['а']='a', ['б']='b', ['в']='v', ['г']='g', ['д']='d', ['е']='e', ['ё']='jo', ['ж']='ž', ['з']='z', ['и']='i', ['й']='j',\n\t['к']='k', ['л']='l', ['м']='m', ['н']='n', ['о']='o', ['п']='p', ['р']='r', ['с']='s', ['т']='t', ['у']='u',\
      \ ['ф']='f',\n\t['х']='x', ['ц']='c', ['ч']='č', ['ш']='š', ['щ']='šč', ['ъ']='ʺ', ['ы']='y', ['ь']='ʹ', ['э']='e', ['ю']='ju', ['я']='ja',\n}\n\nfunction export.tr(text, lang, sc)\n\t-- Ё needs converting if is decomposed\n\ttext = text:gsub(\"ё\",\"ё\
      \"):gsub(\"Ё\",\"Ё\")\n\t\n\t-- е after a vowel or at the beginning of a word becomes je\n\ttext = mw.ustring.gsub(text, \"([АОУЫЕЯЁЮИЕЪЬаоуыэяёюиеъь%A][́̀]?)е\",\"%1je\")\n\ttext = mw.ustring.gsub(text, \"^Е\",\"Je\")\n\ttext = mw.ustring.gsub(text, \"\
      ^е\",\"je\")\n\ttext = mw.ustring.gsub(text, \"([^Ѐ-ӿ])Е\",\"%1Je\")\n\ttext = mw.ustring.gsub(text, \"([^Ѐ-ӿ])е\",\"%1je\")\n\t\n\treturn (mw.ustring.gsub(text,'.',tab))\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:25.388Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc%2Fredundant%2FHebr&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42712 t=1555362625292772
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '166'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:25 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1278.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 596273627, 732255299, 698271440
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc/redundant/Hebr" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:10:27.078Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Achecktrans-top&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=59864 t=1555362626964122
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1514'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 512206985, 636085252, 692805659
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="592580" pageid="592580" ns="10" title="Template:checktrans-top"><revisions><rev user="Daniel Carrero" timestamp="2017-05-18T18:12:01Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Removing [[:Category:Check translations]]. We already have language-specific categories at [[:Category:Requests for review of translations by language]]." xml:space="preserve">&lt;div class="checktrans"&gt;
      :''The translations below need to be checked and inserted above into the appropriate translation tables, removing any numbers. Numbers do not necessarily match those in definitions. See instructions at [[Wiktionary:Entry layout#Translations]].''
      &lt;/div&gt;
      {{trans-top|Translations to be checked{{#if:{{{1&lt;includeonly&gt;|&lt;/includeonly&gt;}}}|&amp;zwnj;: "{{{1}}}"}}}}&lt;noinclude&gt;
      {{trans-mid}}
      {{trans-bottom}}
      {{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:27.647Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3At%2Bcheck&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49773 t=1555362627544102
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1346'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 220104295, 550960527, 703372506
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4471559" pageid="4471559" ns="10" title="Template:t+check"><revisions><rev user="Daniel Carrero" timestamp="2017-04-26T15:06:17Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">&lt;span class="ttbc"&gt;&lt;!--
      --&gt;&lt;sup class="ttbc"&gt;(please [[Wiktionary:Translations#Translations to be checked|verify]])&lt;/sup&gt; &lt;!--
      --&gt;{{#invoke:translations|show|interwiki=tpos}}&lt;!--
      --&gt;&lt;/span&gt;&lt;!--

      --&gt;{{#if:{{NAMESPACE}}||&lt;!--
        --&gt;[[Category:Requests for review of {{#invoke:languages/templates|getByCode|{{{1}}}|getCanonicalName}} translations]]&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:27.973Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aqualifier&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53277 t=1555362627866591
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1062'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 927254406, 499922969, 702227062
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="278931" pageid="278931" ns="10" title="Template:qualifier"><revisions><rev user="Jberkel" timestamp="2017-04-24T22:24:06Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Replaced content with &quot;{{#invoke:qualifier|qualifier_t}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&quot;" xml:space="preserve">{{#invoke:qualifier|qualifier_t}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:28.170Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aqualifier%2Fsubvarieties&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58924 t=1555362628058273
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1252'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:28 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1281.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 757804733, 572918388, 684352748
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6101539\" pageid=\"6101539\" ns=\"828\" title=\"Module:qualifier/subvarieties\"><revisions><rev user=\"SemperBlotto\" timestamp=\"2017-09-22T06:01:06Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Reverted edits by [[Special:Contributions/94.24.95.67|94.24.95.67]]. If you think this rollback is in error, please leave a message on my [[User talk:SemperBlotto|talk page]].\" xml:space=\"\
      preserve\">local m_subvarieties = require(\"Module:labels/data/subvarieties\")\n\nlocal labels = {}\n\nfor key, val in pairs(m_subvarieties.labels) do\n\tif val.languages then\n\t\tlabels[key] = val\n\tend\nend\n\nreturn labels</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:28.666Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc%2Fredundant%2FHani&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45234 t=1555362628566273
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:28 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 213230306, 268371251, 704974992
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc/redundant/Hani" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:10:28.968Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ate-translit&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46424 t=1555362628865234
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '3293'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:28 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 203088028, 831466341, 699051196
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4291252\" pageid=\"4291252\" ns=\"828\" title=\"Module:te-translit\"><revisions><rev user=\"AryamanA\" timestamp=\"2017-12-18T23:18:57Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n \nlocal consonants = {\n\t['క']='k' , ['ఖ']='kh' , ['గ']='g' , ['ఘ']='gh' , ['ఙ']='ṅ' , \n\t['చ']='c' , ['ఛ']='ch' , ['జ']='j' , ['ఝ']='jh'\
      \ , ['ఞ']='ñ' , \n\t['ట']='ṭ' , ['ఠ']='ṭh' , ['డ']='ḍ' , ['ఢ']='ḍh' , ['ణ']='ṇ' , \n\t['త']='t' ,  ['థ']='th' , ['ద']='d' , ['ధ']='dh' , ['న']='n' ,\n\t['ప']='p' , ['ఫ']='ph' , ['బ']='b' , ['భ']='bh' , ['మ']='m' , \n\t['య']='y' , ['ర']='r' , ['ల']='l'\
      \ , ['వ']='v' ,  ['ళ']='ḷ' ,\n\t['శ']='ś' , ['ష']='ṣ' , ['స']='s' , ['హ']='h' , ['ఱ']='ṛ' ,\n\t['ౘ']='ts' , ['ౙ']='dz' , ['ౚ']='rrr' ,\n}\n\nlocal diacritics = {\n\t['ా']= 'ā' , ['ి']='i' , ['ీ']='ī' , ['ు']='u' , ['ూ']='ū' , ['ృ']='r̥' , ['ౄ']='r̥̄' ,\n\
      \t['ె']='e' , ['ే']='ē' , ['ై']='ai' , ['ొ']='o' , ['ో']='ō' , ['ౌ']='au'  , ['్']='' ,\n}\nlocal tt = {\n\t-- vowels\n\t['అ']='a' , ['ఆ']='ā' , ['ఇ']='i' , ['ఈ']='ī' , ['ఉ']='u' , ['ఊ']='ū' , \n\t['ఋ']='r̥' , ['ౠ']='r̥̄' , ['ఌ']='l̥' , ['ౡ']='l̥̄', ['ఎ\
      ']='e' , ['ఏ']='ē' ,\n\t['ఐ']='ai' , ['ఒ']='o' , ['ఓ']='ō' , ['ఔ']='au' , ['అం']='aṅ' , ['అఁ']='aṃ' , ['అః']='ah' , \n\t-- other symbols\n\t['ం']='ṃ',-- anusvara\n\t['ః']='ḥ' ,  -- visarga\n\t['ఁ']='ṅ' , -- candrabindu/arthanusvāra/aranusa\n\t['ఽ']='’\
      ' , -- avagraha\n-- digits\n\t['౦'] = '0', ['౧'] = '1', ['౨'] = '2', ['౩'] = '3', ['౪'] = '4',\n\t['౫'] = '5', ['౬'] = '6', ['౭'] = '7', ['౮'] = '8', ['౯']= '9',\n\t['౸']='0⁄4', ['౹']='¼', ['౺']='2⁄4', ['౻']='¾', \n\t['౦']='0⁄16', ['౼']='1⁄16', ['౽']='2⁄\
      16', ['౾']='3⁄16' ,\n}\n\n-- translit any words or phrases\nfunction export.tr(text, lang, sc)\n\ttext = mw.ustring.gsub(\n\t\ttext,\n\t\t'([కఖగఘఙచఛజఝఞటఠడఢణతథదధనపఫబభమయరలవళశషసహఱౘౙౚ])'..\n\t\t'([ాిీుూృ̥ౄ̥̄ెేైొోౌ్]?)',\n\t\tfunction(c, d)\n\t\t\tif d == \"\
      \" then        \n\t\t\t\treturn consonants[c] .. 'a'\n\t\t\telse\n\t\t\t\treturn consonants[c] .. diacritics[d]\n\t\t\tend\n\t\tend)\n\t\n\ttext = mw.ustring.gsub(text, '.', tt)\n\t\n\t-- anusvara\n\ttext = mw.ustring.gsub(text, 'ṃ([kgṅ])', 'ṅ%1')\n\t\
      text = mw.ustring.gsub(text, 'ṃ([cjñ])', 'ñ%1')\n\ttext = mw.ustring.gsub(text, 'ṃ([ṭḍṇ])', 'ṇ%1')\n\ttext = mw.ustring.gsub(text, 'ṃ([tdn])', 'n%1')\n\ttext = mw.ustring.gsub(text, 'ṃ([pbm])', 'm%1')\n\t\n\treturn text\nend\n \nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:29.240Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aen-verb&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=61313 t=1555362629124010
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1278.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 412903407, 248858951, 699021273
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="288355" pageid="288355" ns="10" title="Template:en-verb"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T17:52:04Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:en-verb]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:en-headword|show|verbs}}&lt;!--

      --&gt;{{#if:{{#invoke:ugly hacks|is_valid_page_name|{{{1|valid}}}}}||[[Category:Template with raw link/en-verb]][[Category:Template with raw link/en-verb/1]]}}&lt;!--
      --&gt;{{#if:{{#invoke:ugly hacks|is_valid_page_name|{{{2|valid}}}}}||[[Category:Template with raw link/en-verb]][[Category:Template with raw link/en-verb/2]]}}&lt;!--
      --&gt;{{#if:{{#invoke:ugly hacks|is_valid_page_name|{{{3|valid}}}}}||[[Category:Template with raw link/en-verb]][[Category:Template with raw link/en-verb/3]]}}&lt;!--
      --&gt;{{#if:{{#invoke:ugly hacks|is_valid_page_name|{{{4|valid}}}}}||[[Category:Template with raw link/en-verb]][[Category:Template with raw link/en-verb/4]]}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:29.416Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fen-headword%2Fxxx2&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=33048 t=1555362629329992
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '159'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1341.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 577469546, 819820152, 703111104
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/en-headword/xxx2" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:10:30.231Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fis_valid_page_name%2Ffrom+Template%3Aen-verb&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41268 t=1555362630136705
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '376'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 613258465, 638081265, 705498641
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/is_valid_page_name/from Template:en-verb" to="Template:tracking/ugly hacks/is valid page name/from Template:en-verb" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/is valid page name/from Template:en-verb" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:10:30.456Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aanagrams&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54626 t=1555362630347928
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 601314354, 554401138, 704288063
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="6228034" pageid="6228034" ns="10" title="Template:anagrams"><revisions><rev user="Rua" timestamp="2017-12-15T16:44:58Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:anagrams|show}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:30.652Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aanagrams&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=60840 t=1555362630536645
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1222.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 926172212, 642138635, 689433309
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6228029\" pageid=\"6228029\" ns=\"828\" title=\"Module:anagrams\"><revisions><rev user=\"Metaknowledge\" timestamp=\"2018-12-08T02:47:59Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Do not make changes like this without discussing them first. Do not edit war, especially with experienced editors. And also, it looks silly.\" xml:space=\"preserve\">local m_languages\
      \ = require(\"Module:languages\")\nlocal m_links = require('Module:links')\n\nlocal export = {}\n\nfunction export.show(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"anagram\", list\
      \ = true},\n\t\t[\"a\"] = {required = false},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = m_languages.getByCode(args[1])\n\t\n\tfor i, val in ipairs(args[2]) do\n\t\targs[2][i] = m_links.full_link({lang\
      \ = lang, term = val})\n\tend\n\n\tlocal result = table.concat(args[2], ', ')\n\n\treturn result\n\t\t\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:30.867Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aaudio&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=69330 t=1555362630741373
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '2772'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1229.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 203022874, 567069150, 687434001
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="87947" pageid="87947" ns="10" title="Template:audio"><revisions><rev user="Benwing2" timestamp="2019-04-03T03:52:30Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="make language code mandatory" xml:space="preserve">&lt;templatestyles src="audio/styles.css" /&gt;&lt;!--
      --&gt;&lt;table class="audiotable" style="vertical-align: bottom; display:inline-block; list-style:none;line-height: 1em; border-collapse:collapse;"&gt;&lt;!--
      --&gt;&lt;tr&gt;&lt;!--

      --&gt;{{#ifeq:{{{format|}}}|1&lt;!--
      --&gt;|&lt;!--
        Do nothing
      --&gt;|&lt;!--
        --&gt;{{#if:{{#if:{{{lang|}}}|{{{2|}}}|{{{3|}}}}}&lt;!--
        --&gt;|&lt;td class="unicode audiolink" style="padding-right:5px; padding-left: 0;"&gt;{{#if:{{{lang|}}}|{{{2|&lt;noinclude&gt;{{{2}}}&lt;/noinclude&gt;}}}|{{{3|&lt;noinclude&gt;{{{3}}}&lt;/noinclude&gt;}}}}}&lt;/td&gt;&lt;!--
        --&gt;}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;td class="audiofile"&gt;&lt;!--
      --&gt;[[File:{{#if:{{{lang|}}}|{{{1|&lt;noinclude&gt;Example.ogg&lt;/noinclude&gt;}}}|{{{2|&lt;noinclude&gt;Example.ogg&lt;/noinclude&gt;}}}}}|noicon|175px]]&lt;!--
      --&gt;&lt;/td&gt;&lt;!--

      --&gt;&lt;td class="audiometa" style="font-size: 80%;"&gt;&lt;!--
      --&gt;([[:File:{{#if:{{{lang|}}}|{{{1|&lt;noinclude&gt;Example.ogg&lt;/noinclude&gt;}}}|{{{2|&lt;noinclude&gt;Example.ogg&lt;/noinclude&gt;}}}}}|file]])&lt;!--
      --&gt;&lt;/td&gt;&lt;!--

      --&gt;&lt;/tr&gt;&lt;!--

      --&gt;{{#ifeq:{{{format|}}}|1&lt;!--
      --&gt;|&lt;!--
        --&gt;&lt;tr&gt;&lt;!--
        --&gt;&lt;td style="font-size: 90%; width: 25%;"&gt;{{#if:{{{lang|}}}|{{#if:{{{2|}}}|{{{2}}}}}|{{#if:{{{3|}}}|{{{3}}}}}}}&lt;/td&gt;&lt;!--
        --&gt;&lt;/tr&gt;&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;/table&gt;&lt;!--

      --&gt;&lt;includeonly&gt;&lt;!--
      --&gt;{{#if:{{{lang|{{{1|}}}}}}||{{#invoke:debug|error|Missing language code.}}}}&lt;!--
      --&gt;{{#ifeq:{{{format|}}}|1&lt;!--
      --&gt;|&lt;!--
        Do nothing
      --&gt;|&lt;!--
        --&gt;{{#ifeq:{{NAMESPACE}}||&lt;!--
          --&gt;{{catlangname|{{{lang|{{{1|}}}}}}|terms with audio links}}&lt;!--
        --&gt;}}&lt;!--
      --&gt;}}&lt;!--
      --&gt;&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:31.062Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Anl-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50768 t=1555362630957678
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '953'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 598399544, 571870743, 688255995
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="250079" pageid="250079" ns="10" title="Template:nl-noun"><revisions><rev user="Rua" timestamp="2013-12-31T14:47:01Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:nl-headword|show|nouns}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:31.258Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Anl-headword&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49863 t=1555362631138861
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 687702527, 483818135, 699876137
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3899361\" pageid=\"3899361\" ns=\"828\" title=\"Module:nl-headword\"><revisions><rev user=\"Rua\" timestamp=\"2018-09-09T11:08:40Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\nlocal pos_functions = {}\n\nlocal lang = require(\"Module:languages\").getByCode(\"nl\")\n\n-- The main entry point.\n-- This is the only function that can be\
      \ invoked from a template.\nfunction export.show(frame)\n\tPAGENAME = mw.title.getCurrentTitle().text\n\t\n\t-- The part of speech. This is also the name of the category that\n\t-- entries go in. However, the two are separate (the \"cat\" parameter)\n\t\
      -- because you sometimes want something to behave as an adjective without\n\t-- putting it in the adjectives category.\n\tlocal poscat = frame.args[1] or error(\"Part of speech has not been specified. Please pass parameter 1 to the module invocation.\"\
      )\n\t\n\tlocal params = {\n\t\t[\"head\"] = {list = true, default = \"\"},\n\t}\n\t\n\tif pos_functions[poscat] then\n\t\tfor key, val in pairs(pos_functions[poscat].params) do\n\t\t\tparams[key] = val\n\t\tend\n\tend\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\t\n\tlocal data = {lang = lang, pos_category = poscat, categories = {}, heads = args[\"head\"], genders = {}, inflections = {}, tracking_categories = {}}\n\t\n\tif pos_functions[poscat] then\n\t\tpos_functions[poscat].func(args,\
      \ data)\n\tend\n\t\n\treturn require(\"Module:headword\").full_headword(data) ..\n\t\trequire(\"Module:utilities\").format_categories(data.tracking_categories, lang, nil)\nend\n\n-- Display additional inflection information for an adjective\npos_functions[\"\
      adjectives\"] = {\n\tparams = {\n\t\t[1] = {list = \"comp\"},\n\t\t[2] = {list = \"sup\"},\n\t\t[3] = {},\n\t\t},\n\tfunc = function(args, data)\n\t\tlocal mode = args[1][1]\n\t\t\n\t\tif mode == \"inv\" then\n\t\t\ttable.insert(data.inflections, {label\
      \ = \"[[Appendix:Glossary#invariable|invariable]]\"})\n\t\t\ttable.insert(data.categories, \"Dutch invariable adjectives\")\n\t\t\targs[1][1] = args[2][1]\n\t\t\targs[2][1] = args[3]\n\t\telseif mode == \"pred\" then\n\t\t\ttable.insert(data.inflections,\
      \ {label = \"used only [[predicative]]ly\"})\n\t\t\ttable.insert(data.categories, \"Dutch predicative-only adjectives\")\n\t\t\targs[1][1] = args[2][1]\n\t\t\targs[2][1] = args[3]\n\t\tend\n\t\t\n\t\tlocal comp_mode = args[1][1]\n\t\t\n\t\tif comp_mode\
      \ == \"-\" then\n\t\t\ttable.insert(data.inflections, {label = \"not [[Appendix:Glossary#comparable|comparable]]\"})\n\t\telse\n\t\t\t-- Gather parameters\n\t\t\tlocal comparatives = args[1]\n\t\t\tcomparatives.label = \"[[Appendix:Glossary#comparative|comparative]]\"\
      \n\t\t\t\n\t\t\tlocal superlatives = args[2]\n\t\t\tsuperlatives.label = \"[[Appendix:Glossary#superlative|superlative]]\"\n\t\t\t\n\t\t\t-- Generate forms if none were given\n\t\t\tif #comparatives == 0 then\n\t\t\t\tif mode == \"inv\" or mode == \"pred\"\
      \ then\n\t\t\t\t\ttable.insert(comparatives, \"peri\")\n\t\t\t\telse\n\t\t\t\t\ttable.insert(comparatives, require(\"Module:nl-adjectives\").make_comparative(PAGENAME))\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif #superlatives == 0 then\n\t\t\t\tif mode\
      \ == \"inv\" or mode == \"pred\" then\n\t\t\t\t\ttable.insert(superlatives, \"peri\")\n\t\t\t\telse\n\t\t\t\t\t-- Add preferred periphrastic superlative, if necessary\n\t\t\t\t\tif\n\t\t\t\t\t\tPAGENAME:find(\"[iï]de$\") or PAGENAME:find(\"[^eio]e$\")\
      \ or\n\t\t\t\t\t\tPAGENAME:find(\"s$\") or PAGENAME:find(\"sch$\") or PAGENAME:find(\"x$\") or\n\t\t\t\t\t\tPAGENAME:find(\"sd$\") or PAGENAME:find(\"st$\") or PAGENAME:find(\"sk$\") then\n\t\t\t\t\t\ttable.insert(superlatives, \"peri\")\n\t\t\t\t\tend\n\
      \t\t\t\t\t\n\t\t\t\t\ttable.insert(superlatives, require(\"Module:nl-adjectives\").make_superlative(PAGENAME))\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\t-- Replace \"peri\" with phrase\n\t\t\tfor key, val in ipairs(comparatives) do\n\t\t\t\tif val == \"peri\"\
      \ then comparatives[key] = \"[[meer]] \" .. PAGENAME end\n\t\t\tend\n\t\t\t\n\t\t\tfor key, val in ipairs(superlatives) do\n\t\t\t\tif val == \"peri\" then superlatives[key] = \"[[meest]] \" .. PAGENAME end\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(data.inflections,\
      \ comparatives)\n\t\t\ttable.insert(data.inflections, superlatives)\n\t\tend\n\tend\n}\n\n-- Display additional inflection information for an adverb\npos_functions[\"adverbs\"] = {\n\tparams = {\n\t\t[1] = {},\n\t\t[2] = {},\n\t\t},\n\tfunc = function(args,\
      \ data)\n\t\tlocal comp = args[1]\n\t\tlocal sup = args[2]\n\t\t\n\t\tif comp then\n\t\t\tif not sup then\n\t\t\t\tsup = PAGENAME .. \"st\"\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(data.inflections, {label = \"[[Appendix:Glossary#comparative|comparative]]\"\
      , comp})\n\t\t\ttable.insert(data.inflections, {label = \"[[Appendix:Glossary#superlative|superlative]]\", sup})\n\t\tend\n\tend\n}\n\n-- Display information for a noun's gender\n-- This is separate so that it can also be used for proper nouns\nfunction\
      \ noun_gender(args, data)\n\tfor _, g in ipairs(args[1]) do\n\t\tif g == \"c\" then\n\t\t\ttable.insert(data.categories, \"Dutch nouns with common gender\")\n\t\telseif g == \"p\" then\n\t\t\ttable.insert(data.categories, \"Dutch pluralia tantum\")\n\t\
      \telseif g ~= \"m\" and g ~= \"f\" and g ~= \"n\" then\n\t\t\tg = nil\n\t\tend\n\t\t\n\t\ttable.insert(data.genders, g)\n\tend\n\t\n\tif #data.genders == 0 then\n\t\ttable.insert(data.genders, \"?\")\n\tend\n\t\n\t-- Most nouns that are listed as f+m should\
      \ really have only f\n\tif data.genders[1] == \"f\" and data.genders[2] == \"m\" then\n\t\ttable.insert(data.categories, \"Dutch nouns with f+m gender\")\n\tend\nend\n\npos_functions[\"proper nouns\"] = {\n\tparams = {\n\t\t[1] = {list = \"g\"},\n\t\t\
      },\n\tfunc = function(args, data)\n\t\tnoun_gender(args, data)\n\tend\n}\n\n-- Display additional inflection information for a noun\npos_functions[\"nouns\"] = {\n\tparams = {\n\t\t[1] = {list = \"g\"},\n\t\t[2] = {list = \"pl\"},\n\t\t[3] = {list = \"\
      dim\"},\n\t\t\n\t\t[\"f\"] = {list = true},\n\t\t[\"m\"] = {list = true},\n\t\t},\n\tfunc = function(args, data)\n\t\tnoun_gender(args, data)\n\t\t\n\t\tlocal plurals = args[2]\n\t\tlocal diminutives = args[3]\n\t\tlocal feminines = args[\"f\"]\n\t\tlocal\
      \ masculines = args[\"m\"]\n\t\t\n\t\t-- Plural\n\t\tif data.genders[1] == \"p\" then\n\t\t\ttable.insert(data.inflections, {label = \"[[Appendix:Glossary#plural only|plural only]]\"})\n\t\telseif plurals[1] == \"-\" then\n\t\t\ttable.insert(data.inflections,\
      \ {label = \"[[Appendix:Glossary#uncountable|uncountable]]\"})\n\t\t\ttable.insert(data.categories, \"Dutch uncountable nouns\")\n\t\telse\n\t\t\tlocal generated = generate_plurals(PAGENAME)\n\t\t\t\n\t\t\t-- Process the plural forms\n\t\t\tfor i, p in\
      \ ipairs(plurals) do\n\t\t\t\t-- Is this a shortcut form?\n\t\t\t\tif p:sub(1,1) == \"-\" then\n\t\t\t\t\tif not generated[p] then\n\t\t\t\t\t\terror(\"The shortcut plural \" .. p .. \" could not be generated.\")\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\t\
      if p:sub(-2) == \"es\" then\n\t\t\t\t\t\ttable.insert(data.categories, \"Dutch nouns with plural in -es\")\n\t\t\t\t\telseif p:sub(-1) == \"s\" then\n\t\t\t\t\t\ttable.insert(data.categories, \"Dutch nouns with plural in -s\")\n\t\t\t\t\telseif p:sub(-4)\
      \ == \"eren\" then\n\t\t\t\t\t\ttable.insert(data.categories, \"Dutch nouns with plural in -eren\")\n\t\t\t\t\telse\n\t\t\t\t\t\ttable.insert(data.categories, \"Dutch nouns with plural in -en\")\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tif p:sub(2,2) == \"\
      :\" then\n\t\t\t\t\t\ttable.insert(data.categories, \"Dutch nouns with lengthened vowel in the plural\")\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tp = generated[p]\n\t\t\t\t-- Not a shortcut form, but the plural form specified directly.\n\t\t\t\telse\n\t\t\
      \t\t\tlocal matches = {}\n\t\t\t\t\t\n\t\t\t\t\tfor pi, g in pairs(generated) do\n\t\t\t\t\t\tif g == p then\n\t\t\t\t\t\t\ttable.insert(matches, pi)\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tif #matches &gt; 0 then\n\t\t\t\t\t\ttable.insert(data.tracking_categories,\
      \ \"nl-noun plural matches generated form\")\n\t\t\t\t\telseif not PAGENAME:find(\"[ -]\") then\n\t\t\t\t\t\tif p == PAGENAME then\n\t\t\t\t\t\t\ttable.insert(data.categories, \"Dutch invariable nouns\")\n\t\t\t\t\t\telseif\n\t\t\t\t\t\t\tp == PAGENAME\
      \ .. \"den\" or p == PAGENAME:gsub(\"ee$\", \"eden\") or\n\t\t\t\t\t\t\tp == PAGENAME .. \"des\" or p == PAGENAME:gsub(\"ee$\", \"edes\") then\n\t\t\t\t\t\t\ttable.insert(data.categories, \"Dutch nouns with plural in -den\")\n\t\t\t\t\t\telseif p == PAGENAME:gsub(\"\
      ([ao])$\", \"%1%1ien\") or p == PAGENAME:gsub(\"oe$\", \"oeien\") then\n\t\t\t\t\t\t\ttable.insert(data.categories, \"Dutch nouns with glide vowel in plural\")\n\t\t\t\t\t\telseif p == PAGENAME:gsub(\"y$\", \"ies\") then\n\t\t\t\t\t\t\ttable.insert(data.categories,\
      \ \"Dutch nouns with English plurals\")\n\t\t\t\t\t\telseif\n\t\t\t\t\t\t\tp == PAGENAME:gsub(\"a$\", \"ae\") or\n\t\t\t\t\t\t\tp == PAGENAME:gsub(\"[ei]x$\", \"ices\") or\n\t\t\t\t\t\t\tp == PAGENAME:gsub(\"is$\", \"es\") or\n\t\t\t\t\t\t\tp == PAGENAME:gsub(\"\
      men$\", \"mina\") or\n\t\t\t\t\t\t\tp == PAGENAME:gsub(\"ns$\", \"ntia\") or\n\t\t\t\t\t\t\tp == PAGENAME:gsub(\"o$\", \"ones\") or\n\t\t\t\t\t\t\tp == PAGENAME:gsub(\"o$\", \"onen\") or\n\t\t\t\t\t\t\tp == PAGENAME:gsub(\"s$\", \"tes\") or\n\t\t\t\t\t\
      \t\tp == PAGENAME:gsub(\"us$\", \"era\") or\n\t\t\t\t\t\t\tp == mw.ustring.gsub(PAGENAME, \"[uü]s$\", \"i\") or\n\t\t\t\t\t\t\tp == mw.ustring.gsub(PAGENAME, \"[uü]m$\", \"a\") or\n\t\t\t\t\t\t\tp == PAGENAME:gsub(\"x$\", \"ges\") then\n\t\t\t\t\t\t\t\
      table.insert(data.categories, \"Dutch nouns with Latin plurals\")\n\t\t\t\t\t\telseif\n\t\t\t\t\t\t\tp == PAGENAME:gsub(\"os$\", \"oi\") or\n\t\t\t\t\t\t\tp == PAGENAME:gsub(\"on$\", \"a\") or\n\t\t\t\t\t\t\tp == PAGENAME:gsub(\"a$\", \"ata\") then\n\t\
      \t\t\t\t\t\ttable.insert(data.categories, \"Dutch nouns with Greek plurals\")\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\ttable.insert(data.categories, \"Dutch irregular nouns\")\n\t\t\t\t\t\tend\n\t\t\t\t\t\t\n\t\t\t\t\t\tif plural and not mw.title.new(plural).exists\
      \ then\n\t\t\t\t\t\t\ttable.insert(data.categories, \"Dutch nouns with missing plurals\")\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tplurals[i] = p\n\t\t\tend\n\t\t\t\n\t\t\t-- Add the plural forms\n\t\t\tplurals.label = \"plural\"\
      \n\t\t\tplurals.accel = {form = \"p\"}\n\t\t\tplurals.request = true\n\t\t\ttable.insert(data.inflections, plurals)\n\t\tend\n\t\t\n\t\t-- Add the diminutive forms\n\t\tif diminutives[1] == \"-\" then\n\t\t\t-- do nothing\n\t\telse\n\t\t\t-- Process the\
      \ diminutive forms\n\t\t\tfor i, p in ipairs(diminutives) do\n\t\t\t\tdiminutives[i] = {term = p, genders = {\"n\"}}\n\t\t\tend\n\t\t\t\n\t\t\tdiminutives.label = \"[[Appendix:Glossary#diminutive|diminutive]]\"\n\t\t\tdiminutives.accel = {form = \"diminutive\"\
      }\n\t\t\tdiminutives.request = true\n\t\t\ttable.insert(data.inflections, diminutives)\n\t\tend\n\t\t\n\t\t-- Add the feminine forms\n\t\tif #feminines &gt; 0 then\n\t\t\tfeminines.label = \"feminine\"\n\t\t\ttable.insert(data.inflections, feminines)\n\
      \t\tend\n\t\t\n\t\t-- Add the masculine forms\n\t\tif #masculines &gt; 0 then\n\t\t\tmasculines.label = \"masculine\"\n\t\t\ttable.insert(data.inflections, masculines)\n\t\tend\n\tend\n}\n\n-- Display additional inflection information for a diminutive\
      \ noun\npos_functions[\"diminutive nouns\"] = {\n\tparams = {\n\t\t[1] = {},\n\t\t[2] = {list = \"pl\"},\n\t\t},\n\tfunc = function(args, data)\n\t\tif not (args[1] == \"n\" or args[1] == \"p\") then\n\t\t\targs[1] = {\"n\"}\n\t\telse\n\t\t\targs[1] =\
      \ {args[1]}\n\t\tend\n\t\t\n\t\tif #args[2] == 0 then\n\t\t\targs[2] = {\"-s\"}\n\t\tend\n\t\t\n\t\targs[3] = {\"-\"}\n\t\targs[\"f\"] = {}\n\t\targs[\"m\"] = {}\n\t\t\n\t\tpos_functions[\"nouns\"].func(args, data)\n\tend\n}\n\nfunction generate_plurals(PAGENAME)\n\
      \tlocal m_common = require(\"Module:nl-common\")\n\tlocal generated = {}\n\t\n\tgenerated[\"-s\"] = PAGENAME .. \"s\"\n\tgenerated[\"-'s\"] = PAGENAME .. \"'s\"\n\t\n\tlocal stem_FF = m_common.add_e(PAGENAME, false, false)\n\tlocal stem_TF = m_common.add_e(PAGENAME,\
      \ true, false)\n\tlocal stem_FT = m_common.add_e(PAGENAME, false, true)\n\t\n\tgenerated[\"-es\"] = stem_FF .. \"s\"\n\tgenerated[\"-@es\"] = stem_TF .. \"s\"\n\tgenerated[\"-:es\"] = stem_FT .. \"s\"\n\t\n\tgenerated[\"-en\"] = stem_FF .. \"n\"\n\tgenerated[\"\
      -@en\"] = stem_TF .. \"n\"\n\tgenerated[\"-:en\"] = stem_FT .. \"n\"\n\t\n\tgenerated[\"-eren\"] = m_common.add_e(PAGENAME .. (PAGENAME:find(\"n$\") and \"d\" or \"\"), false, false) .. \"ren\"\n\tgenerated[\"-:eren\"] = stem_FT .. \"ren\"\n\t\n\tif PAGENAME:find(\"\
      f$\") then\n\t\tlocal stem = PAGENAME:gsub(\"f$\", \"v\")\n\t\tlocal stem_FF = m_common.add_e(stem, false, false)\n\t\tlocal stem_TF = m_common.add_e(stem, true, false)\n\t\tlocal stem_FT = m_common.add_e(stem, false, true)\n\t\t\n\t\tgenerated[\"-ves\"\
      ] = stem_FF .. \"s\"\n\t\tgenerated[\"-@ves\"] = stem_TF .. \"s\"\n\t\tgenerated[\"-:ves\"] = stem_FT .. \"s\"\n\t\t\n\t\tgenerated[\"-ven\"] = stem_FF .. \"n\"\n\t\tgenerated[\"-@ven\"] = stem_TF .. \"n\"\n\t\tgenerated[\"-:ven\"] = stem_FT .. \"n\"\n\
      \t\t\n\t\tgenerated[\"-veren\"] = stem_FF .. \"ren\"\n\t\tgenerated[\"-:veren\"] = stem_FT .. \"ren\"\n\telseif PAGENAME:find(\"s$\") then\n\t\tlocal stem = PAGENAME:gsub(\"s$\", \"z\")\n\t\tlocal stem_FF = m_common.add_e(stem, false, false)\n\t\tlocal\
      \ stem_TF = m_common.add_e(stem, true, false)\n\t\tlocal stem_FT = m_common.add_e(stem, false, true)\n\t\t\n\t\tgenerated[\"-zes\"] = stem_FF .. \"s\"\n\t\tgenerated[\"-@zes\"] = stem_TF .. \"s\"\n\t\tgenerated[\"-:zes\"] = stem_FT .. \"s\"\n\t\t\n\t\t\
      generated[\"-zen\"] = stem_FF .. \"n\"\n\t\tgenerated[\"-@zen\"] = stem_TF .. \"n\"\n\t\tgenerated[\"-:zen\"] = stem_FT .. \"n\"\n\t\t\n\t\tgenerated[\"-zeren\"] = stem_FF .. \"ren\"\n\t\tgenerated[\"-:zeren\"] = stem_FT .. \"ren\"\n\telseif PAGENAME:find(\"\
      heid$\") then\n\t\tgenerated[\"-heden\"] = PAGENAME:gsub(\"heid$\", \"heden\")\n\tend\n\t\n\treturn generated\nend\n\npos_functions[\"past participles\"] = {\n\tparams = {\n\t\t[1] = {},\n\t},\n\tfunc = function(args, data)\n\t\tif args[1] == \"-\" then\n\
      \t\t\ttable.insert(data.inflections, {label = \"not used adjectivally\"})\n\t\t\ttable.insert(data.categories, \"Dutch non-adjectival past participles\")\n\t\tend\n\tend\n}\n\npos_functions[\"verbs\"] = {\n\tparams = {\n\t\t[1] = {},\n\t\t},\n\tfunc =\
      \ function(args, data)\n\t\tif args[1] == \"-\" then\n\t\t\ttable.insert(data.inflections, {label = \"not inflected\"})\n\t\t\ttable.insert(data.categories, \"Dutch uninflected verbs\")\n\t\tend\n\tend\n}\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:31.437Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Anl-common&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43287 t=1555362631338403
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '2630'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 585681193, 732220773, 689237257
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3899967\" pageid=\"3899967\" ns=\"828\" title=\"Module:nl-common\"><revisions><rev user=\"Rua\" timestamp=\"2014-02-07T23:55:53Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\n-- Make a link out of a form, or show a dash if empty.\nfunction export.link_form(form, tag)\n    if not PAGENAME then\n        PAGENAME = mw.title.getCurrentTitle().text\n\
      \    end\n    \n    if type(form) == \"table\" then\n        for n, subform in pairs(form) do\n            form[n] = export.link_form(subform, tag)\n        end\n        return table.concat(form, \", \")\n    else\n        if form ~= \"\" then\n      \
      \      return \"&lt;\" .. (tag or \"span\") .. \" lang=\\\"nl\\\"&gt;[[\" .. form .. (form ~= PAGENAME and \"#Dutch|\" .. form or \"\") .. \"]]&lt;/\" .. (tag or \"span\") .. \"&gt;\"\n        else\n            return \"&amp;mdash;\"\n        end\n   \
      \ end\nend\n\nfunction export.add_e(stem, weak_final, lengthen)\n\t-- Vowel lengthening\n\tif lengthen then\n\t\treturn stem:gsub(\"i(.)$\", \"e%1\") .. \"e\"\n\t-- Final weak syllable, no consonant doubling\n\telseif weak_final then\n\t\tif stem:find(\"\
      ie$\") then\n\t\t\treturn stem:gsub(\"ie$\", \"ië\")\n\t\telse\n\t\t\treturn stem .. \"e\"\n\t\tend\n\telse\n\t\t-- Ends in ee, ie, oe\n\t\tif stem:find(\"[eio]e$\") then\n\t\t\treturn stem .. \"ë\"\n\t\t-- Ends in e\n\t\telseif stem:find(\"e$\") then\n\
      \t\t\treturn stem\n\t\t-- Ends in double vowel + single consonant, remove one of the vowels\n\t\telseif stem:find(\"([aeou])%1[bcdfgklmnpqrstvxz]$\") then\n\t\t\t-- Add a diaeresis if the removal would create a digraph\n\t\t\tif stem:find(\"[io]ee.$\"\
      ) then\n\t\t\t\treturn stem:gsub(\"..(.)$\", \"ë%1e\")\n\t\t\telse\n\t\t\t\treturn stem:gsub(\".(.)$\", \"%1e\")\n\t\t\tend\n\t\t-- Ends in single vowel + single consonant, double the consonant\n\t\telseif stem:find(\"[AaEeIiOoUu][bcdfgklmnpqrstvz]$\"\
      ) and not stem:find(\"[IiïOoö]e.$\") and (not stem:find(\"[AaäEeëOoöUuü]i.$\") or stem:find(\"qui.$\")) and not stem:find(\"[AaäEeëOoö]u.$\") then\n\t\t\treturn stem:gsub(\"(.)$\", \"%1%1e\")\n\t\telse\n\t\t\treturn stem .. \"e\"\n\t\tend\n\tend\nend\n\
      \nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:31.690Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Asyn&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=60932 t=1555362631574393
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '921'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1224.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 423443474, 513541956, 703569139
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="6007156" pageid="6007156" ns="10" title="Template:syn"><revisions><rev user="Rua" timestamp="2017-01-04T14:22:27Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Redirected page to [[Template:synonyms]]" xml:space="preserve">#REDIRECT [[Template:synonyms]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:31.859Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Asynonyms&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43428 t=1555362631762183
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '990'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1231.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 677463374, 633599845, 694543188
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="6007153" pageid="6007153" ns="10" title="Template:synonyms"><revisions><rev user="Wyang" timestamp="2018-06-17T21:49:30Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="[[Module talk:nyms#Testing for singular and plural]]" xml:space="preserve">{{#invoke:nyms|nyms|synonym}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:32.070Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Anyms&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=76455 t=1555362631937372
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 430546609, 247778638, 697060741
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6007152\" pageid=\"6007152\" ns=\"828\" title=\"Module:nyms\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-04-03T18:13:50Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"fix order of thesaurus links (they were being inserted into table in reverse order)\" xml:space=\"preserve\">local export = {}\n\nlocal m_languages = require(\"Module:languages\")\nlocal m_links = require(\"\
      Module:links\")\nlocal m_qual = require(\"Module:qualifier\")\n\nlocal function get_thesaurus_text(args, maxindex)\n\tlocal thesaurus\n\tlocal thesaurus_links = {}\n\t\n\twhile args[2][maxindex] and args[2][maxindex]:find(\"^Thesaurus:\") do\n\t\tif args[\"\
      alt\"][maxindex] or args[\"q\"][maxindex] or args[\"tr\"][maxindex] then\n\t\t\terror(\"You cannot use named parameters with Thesaurus links.\")\n\t\tend\n\t\tlocal link\n\t\tlocal fragment = args[2][maxindex]:find(\"#\")\n\t\tif fragment then\n\t\t\t\
      link = \"[[\" .. args[2][maxindex] .. \"|\" .. args[2][maxindex]:sub(1, fragment-1) .. \"]]\"\n\t\telse\n\t\t\tlink = \"[[\" .. args[2][maxindex] .. \"]]\"\n\t\tend\n\t\t\n\t\ttable.insert(thesaurus_links, 1, link)\n\t\t\n\t\tmaxindex = maxindex - 1\n\t\
      end\n\t\n\tif #thesaurus_links &gt; 0 then\n\t\tthesaurus = (maxindex == 0 and \"''see'' \" or \"; ''see also'' \")\n\t\t\t.. table.concat(thesaurus_links, \", \")\n\tend\n\t\n\treturn thesaurus or \"\", maxindex\nend\n\nfunction export.nyms(frame)\n\t\
      local list_with_holes = {list = true, allow_holes = true}\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {list = true, allow_holes = true, required = true},\n\t\t\n\t\t[\"alt\"] = list_with_holes,\n\t\t[\"tr\"] = list_with_holes,\n\
      \t\t[\"id\"] = list_with_holes,\n\t\t[\"q\"] = list_with_holes,\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal nym_type = frame.args[1]\n\tlocal nym_type_class = string.gsub(nym_type, \"%s\"\
      , \"-\")\n\tlocal lang = m_languages.getByCode(args[1]) or m_languages.err(args[1], 1)\n\t\n\tlocal maxindex = math.max(args[2].maxindex, args[\"alt\"].maxindex, args[\"tr\"].maxindex)\n\tlocal thesaurus\n\tthesaurus, maxindex = get_thesaurus_text(args,\
      \ maxindex)\n\t\n\tlocal items = {}\n\tlocal use_semicolon = false\n\t\n\tfor i = 1, maxindex do\n\t\tif args[2][i] then\n\t\t\tif args[2][i]:find(\"^Thesaurus:\") then\n\t\t\t\terror(\"A link to Thesaurus must be the last in the list\")\n\t\t\tend\n\t\
      \t\tif args[2][i]:find(\",\", 1, true) then\n\t\t\t\tuse_semicolon = true\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal item = m_links.full_link{\n\t\t\tlang = lang, term = args[2][i], id = args[\"id\"][i],\n\t\t\talt = args[\"alt\"][i], tr = args[\"tr\"][i]\n\t\
      \t}\n\t\t\n\t\tif args[\"q\"][i] then\n\t\t\titem = item .. \" \" .. m_qual.format_qualifier({args[\"q\"][i]})\n\t\tend\n\t\t\n\t\ttable.insert(items, item)\n\tend\n\t\n\treturn \"&lt;span class=\\\"nyms \" .. nym_type_class .. \"\\\"&gt;&lt;span class=\\\
      \"defdate\\\"&gt;\" .. \n\t\tmw.getContentLanguage():ucfirst(nym_type) .. ((#items &gt; 1 or thesaurus ~= \"\") and \"s\" or \"\") ..\n\t\t\":&lt;/span&gt; \" .. table.concat(items, use_semicolon and \"; \" or \", \") .. thesaurus .. \"&lt;/span&gt;\"\n\
      end\n\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:32.252Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Acot&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46616 t=1555362632152108
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '937'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 668725860, 260546731, 705400558
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="7169415" pageid="7169415" ns="10" title="Template:cot"><revisions><rev user="Rua" timestamp="2019-04-07T20:41:55Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Redirected page to [[Template:coordinate terms]]" xml:space="preserve">#REDIRECT [[Template:coordinate terms]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:32.413Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Acoordinate+terms&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=34735 t=1555362632321501
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1075'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 742882694, 261529974, 703503862
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="7051123" pageid="7051123" ns="10" title="Template:coordinate terms"><revisions><rev user="Jberkel" timestamp="2019-01-02T23:17:34Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Created page with &quot;{{#invoke:nyms|nyms|coordinate term}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&quot;" xml:space="preserve">{{#invoke:nyms|nyms|coordinate term}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:33.192Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Afr-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53020 t=1555362633084847
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:33 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 608803251, 646654516, 694995731
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="493663" pageid="493663" ns="10" title="Template:fr-noun"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T18:02:54Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:fr-noun]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:fr-headword|show|nouns}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:33.392Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Afr-headword&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44782 t=1555362633276450
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:33 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 613033610, 731729617, 702752114
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4097348\" pageid=\"4097348\" ns=\"828\" title=\"Module:fr-headword\"><revisions><rev user=\"Rua\" timestamp=\"2018-09-09T11:14:37Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\nlocal pos_functions = {}\nlocal rfind = mw.ustring.find\nlocal rsubn = mw.ustring.gsub\nlocal rsplit = mw.text.split\n\nlocal lang = require(\"Module:languages\"\
      ).getByCode(\"fr\")\n\t\t\nlocal suffix_categories = {\n\t[\"adjectives\"] = true,\n\t[\"adverbs\"] = true,\n\t[\"nouns\"] = true,\n\t[\"verbs\"] = true,\n\t[\"prepositional phrases\"] = true,\n}\n\n-- version of rsubn() that discards all but the first\
      \ return value\nlocal function rsub(term, foo, bar)\n\tlocal retval = rsubn(term, foo, bar)\n\treturn retval\nend\n\nlocal function track(page)\n\trequire(\"Module:debug\").track(\"fr-headword/\" .. page)\n\treturn true\nend\n\n-- mw.title.new() returns\
      \ nil if there are weird chars in\n-- the pagename.\nlocal function exists(pagename)\n\tlocal title = mw.title.new(pagename)\n\treturn title and title.exists\nend\n\nlocal function add_suffix(list, suffix)\n\tlocal newlist = {}\n\tfor _, item in ipairs(list)\
      \ do\n\t\tlocal form\n\t\tif suffix == \"s\" then\n\t\t\tif rfind(item, \"[sx]$\") then\n\t\t\t\tform = item\n\t\t\telseif rfind(item, \"al$\") then\n\t\t\t\tform = rsub(item, \"al$\", \"aux\")\n\t\t\telse\n\t\t\t\tform = item .. suffix\n\t\t\tend\n\t\t\
      elseif suffix == \"e\" then\n\t\t\tif rfind(item, \"e$\") then\n\t\t\t\tform = item\n\t\t\telseif rfind(item, \"en$\") then\n\t\t\t\tform = item .. \"ne\"\n\t\t\telseif rfind(item, \"er$\") then\n\t\t\t\tform = rsub(item, \"er$\", \"ère\")\n\t\t\telseif\
      \ rfind(item, \"el$\") then\n\t\t\t\tform = item .. \"le\"\n\t\t\telseif rfind(item, \"et$\") then\n\t\t\t\tform = item .. \"te\"\n\t\t\telseif rfind(item, \"on$\") then\n\t\t\t\tform = item .. \"ne\"\n\t\t\telseif rfind(item, \"ieur$\") then\n\t\t\t\t\
      form = item .. \"e\"\n\t\t\telseif rfind(item, \"teur$\") then\n\t\t\t\tform = rsub(item, \"teur$\", \"trice\")\n\t\t\telseif rfind(item, \"eu[rx]$\") then\n\t\t\t\tform = rsub(item, \"eu[rx]$\", \"euse\")\n\t\t\telseif rfind(item, \"if$\") then\n\t\t\t\
      \tform = rsub(item, \"if$\", \"ive\")\n\t\t\telseif rfind(item, \"c$\") then\n\t\t\t\tform = rsub(item, \"c$\", \"que\")\n\t\t\telse\n\t\t\t\tform = item .. suffix\n\t\t\tend\n\t\telse\n\t\t\tform = item .. suffix\n\t\tend\n\t\ttable.insert(newlist, form)\n\
      \tend\n\treturn newlist\nend\n\nlocal function add_multiword_links(lemma)\n\tlocal words = rsplit(lemma, \" \")\n\tlocal linked_words = {}\n\tfor _, word in ipairs(words) do\n\t\tif rfind(word, \"'\") then\n\t\t\tword = rsub(word, \"([^']+')\", \"[[%1]]\"\
      )\n\t\t\tword = rsub(word, \"%]([^%[%]]*)$\", \"][[%1]]\")\n\t\telse\n\t\t\tword = \"[[\" .. word .. \"]]\"\n\t\tend\n\t\ttable.insert(linked_words, word)\n\tend\n\treturn table.concat(linked_words, \" \")\nend\n\n-- The main entry point.\n-- This is the\
      \ only function that can be invoked from a template.\nfunction export.show(frame)\n\tlocal PAGENAME = mw.title.getCurrentTitle().text\n\t\n\tlocal poscat = frame.args[1] or error(\"Part of speech has not been specified. Please pass parameter 1 to the module\
      \ invocation.\")\n\t\n\tlocal params = {\n\t\t[\"head\"] = {list = true},\n\t\t[\"suff\"] = {type = \"boolean\"},\n\t}\n\n\tif mw.ustring.find(PAGENAME, \" \") then\n\t\ttrack(\"space\")\n\tend\n\n\tif pos_functions[poscat] then\n\t\tfor key, val in pairs(pos_functions[poscat].params)\
      \ do\n\t\t\tparams[key] = val\n\t\tend\n\tend\n\n\tlocal parargs = frame:getParent().args\n\tlocal args = require(\"Module:parameters\").process(parargs, params)\n\n\tlocal heads = args[\"head\"]\n\tif pos_functions[poscat] and pos_functions[poscat].param1_is_head\
      \ and args[1] then\n\t\t-- FIXME! REMOVE ME! Hack to correspond to previous template code in {{fr-adv}}.\n\t\tif args[1] == \"-\" then\n\t\t\ttrack(\"arg1dash\")\n\t\telse\n\t\t\ttable.insert(heads, 1, args[1])\n\t\tend\n\tend\n\tif #heads == 0 and rfind(PAGENAME,\
      \ \" \") then\n\t\theads = {add_multiword_links(PAGENAME)}\n\tend\n\t\t\n\tlocal data = {lang = lang, pos_category = poscat, categories = {}, heads = heads, genders = {}, inflections = {}, categories = {}}\n\t\n\tif args[\"suff\"] then\n\t\tdata.pos_category\
      \ = \"suffixes\"\n\t\t\n\t\tif suffix_categories[poscat] then\n\t\t\tlocal singular_poscat = poscat:gsub(\"s$\", \"\")\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" \" .. singular_poscat .. \"-forming suffixes\")\n\t\telse\n\t\t\t\
      error(\"No category exists for suffixes forming \" .. poscat .. \".\")\n\t\tend\n\tend\n\t\n\tif pos_functions[poscat] then\n\t\tpos_functions[poscat].func(args, data)\n\tend\n\t\n\treturn require(\"Module:headword\").full_headword(data)\nend\n\nlocal\
      \ allowed_genders = {\n\t[\"m\"] = true,\n\t[\"f\"] = true,\n\t[\"m-p\"] = true,\n\t[\"f-p\"] = true,\n\t[\"m-s\"] = true,\n\t[\"f-s\"] = true,\n}\n\npos_functions[\"nouns\"] = {\n\tparams = {\n\t\t[1] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[2] = {list\
      \ = true},\n\t\t[\"f\"] = {list = true},\n\t\t[\"m\"] = {list = true},\n\t\t[\"dim\"] = {list = true},\n\t\t},\n\tfunc = function(args, data)\n\t\tlocal PAGENAME = mw.title.getCurrentTitle().text\n\t\t\n\t\tlocal function default_plural()\n\t\t\tif mw.ustring.find(PAGENAME,\
      \ 'x$') then\n\t\t\t\ttrack(\"default-x\")\n\t\t\tend\n\t\t\tif mw.ustring.find(PAGENAME, 'z$') then\n\t\t\t\ttrack(\"default-z\")\n\t\t\tend\n\t\t\tif mw.ustring.find(PAGENAME,'[sxz]$') then\n\t\t\t\treturn PAGENAME\n\t\t\telseif mw.ustring.find(PAGENAME,'[ae]u$')\
      \ then\n\t\t\t\treturn \"x\"\n\t\t\telseif mw.ustring.find(PAGENAME,'al$') then\n\t\t\t\treturn mw.ustring.sub(PAGENAME, 1, -3) .. 'aux'\n\t\t\telse\n\t\t\t\treturn \"s\"\n\t\t\tend\n\t\tend\n\n\t\t-- Gather genders\n\t\tlocal function insert_gender(g)\n\
      \t\t\tif g == \"mf\" then\n\t\t\t\ttable.insert(data.genders, \"m\")\n\t\t\t\ttable.insert(data.genders, \"f\")\n\t\t\telse\n\t\t\t\ttable.insert(data.genders, g)\n\t\t\tend\n\t\tend\n\t\tinsert_gender(args[1])\n\t\tfor _, g in ipairs(args.g) do\n\t\t\t\
      insert_gender(g)\n\t\tend\n\n\t\t-- Gather all the plural parameters from the numbered parameters.\n\t\tlocal plurals = args[2]\n\t\tplurals.label = \"plural\"\n\t\tplurals.accel = {form = \"p\"}\n\t\tplurals.request = true\n\t\t\n\t\t-- Gather all the\
      \ feminine parameters\n\t\tlocal feminines = args[\"f\"]\n\t\tfeminines.label = \"feminine\"\n\t\t\n\t\t-- Gather all the masculine parameters\n\t\tlocal masculines = args[\"m\"]\n\t\tmasculines.label = \"masculine\"\n\t\t\n\t\t-- Add categories for genders\n\
      \t\tif #data.genders == 0 then\n\t\t\ttable.insert(data.genders, \"?\")\n\t\tend\n\t\t\n\t\tlocal mode = nil\n\t\t\n\t\tfor _, g in ipairs(data.genders) do\n\t\t\tif g == \"m-p\" or g == \"f-p\" then\n\t\t\t\tmode = \"p\"\n\t\t\tend\n\n\t\t\tif g == \"\
      ?\" and mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\t\t-- allow unknown gender in template example\n\t\t\telseif g and g ~= \"\" and not allowed_genders[g] then\n\t\t\t\terror(\"Unrecognized French gender: \" .. g)\n\t\t\tend\n\n\t\t\t\
      if g == \"m\" or g == \"m-p\" or g == \"m-s\" then\n\t\t\t\ttable.insert(data.categories, \"French masculine nouns\")\n\t\t\telseif g == \"f\" or g == \"f-p\" or g == \"f-s\" then\n\t\t\t\ttable.insert(data.categories, \"French feminine nouns\")\n\t\t\t\
      end\n\t\tend\n\t\t\n\t\t-- Decide how to show the plurals\n\t\tmode = mode or plurals[1]\n\t\t\n\t\t-- Plural is not attested\n\t\tif mode == \"!\" then\n\t\t\ttable.insert(data.inflections, {label = \"plural not attested\"})\n\t\t\ttable.insert(data.categories,\
      \ \"French nouns with unattested plurals\")\n\t\t-- Plural-only noun, doesn't have a plural\n\t\telseif mode == \"p\" then\n\t\t\ttable.insert(data.inflections, {label = \"plural only\"})\n\t\t\ttable.insert(data.categories, \"French pluralia tantum\"\
      )\n\t\telse\n\t\t\t-- Plural is unknown\n\t\t\tif mode == \"?\" then\n\t\t\t\ttable.remove(plurals, 1)  -- Remove the mode parameter\n\t\t\t-- Uncountable noun; may occasionally have a plural\n\t\t\telseif mode == \"-\" then\n\t\t\t\ttable.remove(plurals,\
      \ 1)  -- Remove the mode parameter\n\t\t\t\ttable.insert(data.categories, \"French uncountable nouns\")\n\t\t\t\n\t\t\t\t-- If plural forms were given explicitly, then show \"usually\"\n\t\t\t\tif #plurals &gt; 0 then\n\t\t\t\t\ttrack(\"count-uncount\"\
      )\n\t\t\t\t\ttable.insert(data.inflections, {label = \"usually [[Appendix:Glossary#uncountable|uncountable]]\"})\n\t\t\t\t\ttable.insert(data.categories, \"French countable nouns\")\n\t\t\t\telse\n\t\t\t\t\ttable.insert(data.inflections, {label = \"[[Appendix:Glossary#uncountable|uncountable]]\"\
      })\n\t\t\t\tend\n\t\t\t-- Mixed countable/uncountable noun, always has a plural\n\t\t\telseif mode == \"~\" then\n\t\t\t\ttable.remove(plurals, 1)  -- Remove the mode parameter\n\t\t\t\ttable.insert(data.inflections, {label = \"[[Appendix:Glossary#countable|countable]]\
      \ and [[Appendix:Glossary#uncountable|uncountable]]\"})\n\t\t\t\ttable.insert(data.categories, \"French uncountable nouns\")\n\t\t\t\ttable.insert(data.categories, \"French countable nouns\")\n\t\t\t\n\t\t\t\t-- If no plural was given, add a default one\
      \ now\n\t\t\t\tif #plurals == 0 then\n\t\t\t\t\ttable.insert(plurals, default_plural())\n\t\t\t\tend\n\t\t\t-- The default, always has a plural\n\t\t\telse\n\t\t\t\ttable.insert(data.categories, \"French countable nouns\")\n\t\t\t\t\n\t\t\t\t-- If no plural\
      \ was given, add a default one now\n\t\t\t\tif #plurals == 0 then\n\t\t\t\t\ttable.insert(plurals, default_plural())\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\t-- Process the plural forms\n\t\t\tfor i, pl in ipairs(plurals) do\n\t\t\t\tif pl == \"*\" then\n\
      \t\t\t\t\tpl = PAGENAME\n\t\t\t\telseif pl == \"s\" then\n\t\t\t\t\tpl = PAGENAME .. \"s\"\n\t\t\t\telseif pl == \"x\" then\n\t\t\t\t\tpl = PAGENAME .. \"x\"\n\t\t\t\tend\n\n\t\t\t\tif not exists(pl) then\n\t\t\t\t\ttable.insert(data.categories, \"French\
      \ nouns with missing plurals\")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tplurals[i] = pl\n\t\t\tend\n\t\n\t\t\t-- Add the plural forms\n\t\t\tif mode ~= \"-\" or #plurals &gt; 0 then\n\t\t\t\ttable.insert(data.inflections, plurals)\n\t\t\tend\n\t\tend\n\t\t\n\t\
      \t-- Add the feminine forms\n\t\tif #feminines &gt; 0 then\n\t\t\ttable.insert(data.inflections, feminines)\n\t\t\t\n\t\t\tfor _, f in ipairs(feminines) do\n\t\t\t\tif not exists(f) then\n\t\t\t\t\ttable.insert(data.categories, \"French nouns with missing\
      \ forms\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Add the masculine forms\n\t\tif #masculines &gt; 0 then\n\t\t\ttable.insert(data.inflections, masculines)\n\t\t\t\n\t\t\tfor _, m in ipairs(masculines) do\n\t\t\t\tif not exists(m) then\n\t\t\t\t\
      \ttable.insert(data.categories, \"French nouns with missing forms\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\t-- Handle diminutives\n\t\tif #args.dim &gt; 0 then\n\t\t\tlocal dims_infl = mw.clone(args.dim)\n\t\t\tdims_infl.label = \"diminutive\"\n\t\t\t\
      dims_infl.accel = {form = \"diminutive\"}\n\t\t\ttable.insert(data.inflections, dims_infl)\n\t\tend\n\tend\n}\n\npos_functions[\"adverbs\"] = {\n\tparam1_is_head = true,\n\tparams = {\n\t\t[1] = {},\n\t},\n\tfunc = function(args, data)\n\tend\n}\n\t\n\
      pos_functions[\"prepositional phrases\"] = {\n\tparam1_is_head = true,\n\tparams = {\n\t\t[1] = {},\n\t},\n\tfunc = function(args, data)\n\tend\n}\n\npos_functions[\"adjectives\"] = {\n\tparams = {\n\t\t[1] = {},\n\t\t[\"inv\"] = {},\n\t\t[\"m2\"] = {},\n\
      \t\t[\"onlyg\"] = {},\n\t\t[\"f\"] = {list = true},\n\t\t[\"mp\"] = {list = true},\n\t\t[\"fp\"] = {list = true},\n\t\t[\"p\"] = {list = true},\n\t\t[\"current\"] = {list = true},\n\t\t[\"comp\"] = {list = true},\n\t\t[\"sup\"] = {list = true},\n\t\t},\n\
      \tfunc = function(args, data)\n\t\tlocal PAGENAME = mw.title.getCurrentTitle().text\n\t\tif args.onlyg == \"p\" or args.onlyg == \"m-p\" or args.onlyg == \"f-p\" then\n\t\t\ttable.insert(data.categories, \"French pluralia tantum\")\n\t\tend\n\t\tif args.onlyg\
      \ == \"s\" or args.onlyg == \"f-s\" or args.onlyg == \"f-s\" then\n\t\t\ttable.insert(data.categories, \"French singularia tantum\")\n\t\tend\n\t\tif args.onlyg then\n\t\t\ttable.insert(data.categories, \"French defective adjectives\")\n\t\tend\n\t\tif\
      \ args.onlyg == \"p\" then\n\t\t\ttable.insert(data.inflections, {label = \"plural only\"})\n\t\t\tif args[1] ~= \"mf\" then\n\t\t\t\t-- Handle feminine plurals\n\t\t\t\tif #args.fp &gt; 0 then\n\t\t\t\t\tlocal fplurals_infl = mw.clone(args.fp)\n\t\t\t\
      \t\tfplurals_infl.label = \"feminine plural\"\n\t\t\t\t\tfplurals_infl.accel = {form = \"f|p\"}\n\t\t\t\t\ttable.insert(data.inflections, fplurals_infl)\n\t\t\t\tend\n\t\t\tend\n\t\telseif args.onlyg == \"s\" then\n\t\t\ttable.insert(data.inflections,\
      \ {label = \"singular only\"})\n\t\t\tif not (args[1] == \"mf\" or #args.f == 0 and rfind(PAGENAME, \"e$\")) then\n\t\t\t\t-- Handle feminines\n\t\t\t\tlocal feminines = #args.f &gt; 0 and args.f or add_suffix(#args.current &gt; 0 and args.current or {PAGENAME},\
      \ \"e\")\n\t\t\t\tlocal feminines_infl = mw.clone(feminines)\n\t\t\t\tfeminines_infl.label = \"feminine singular\"\n\t\t\t\tfeminines_infl.accel = {form = \"f|s\"}\n\t\t\t\ttable.insert(data.inflections, feminines_infl)\n\t\t\tend\n\t\telseif args.onlyg\
      \ == \"m\" then\n\t\t\ttable.insert(data.genders, \"m\")\n\t\t\ttable.insert(data.inflections, {label = \"masculine only\"})\n\t\t\t-- Handle masculine plurals\n\t\t\tlocal mplurals = #args.mp &gt; 0 and args.mp or add_suffix(#args.current &gt; 0 and args.current\
      \ or {PAGENAME}, \"s\")\n\t\t\tlocal mplurals_infl = mw.clone(mplurals)\n\t\t\tmplurals_infl.label = \"masculine plural\"\n\t\t\tmplurals_infl.accel = {form = \"m|p\"}\n\t\t\ttable.insert(data.inflections, mplurals_infl)\n\t\telseif args.onlyg == \"f\"\
      \ then\n\t\t\ttable.insert(data.genders, \"f\")\n\t\t\ttable.insert(data.inflections, {label = \"feminine only\"})\n\t\t\t-- Handle feminine plurals\n\t\t\tlocal fplurals = #args.fp &gt; 0 and args.fp or add_suffix(#args.current &gt; 0 and args.current\
      \ or {PAGENAME}, \"s\")\n\t\t\tlocal fplurals_infl = mw.clone(fplurals)\n\t\t\tfplurals_infl.label = \"feminine plural\"\n\t\t\tfplurals_infl.accel = {form = \"f|p\"}\n\t\t\ttable.insert(data.inflections, fplurals_infl)\n\t\telseif args.onlyg then\n\t\t\
      \ttable.insert(data.genders, args.onlyg)\n\t\t\ttable.insert(data.inflections, {label = \"defective\"})\n\t\telse\n\t\t\t-- Gather genders\n\t\t\tlocal gender = args[1]\n\t\t\t-- Default to mf if base form ends in -e and no feminine,\n\t\t\t-- feminine\
      \ plural or gender specified\n\t\t\tif not gender and #args.f == 0 and #args.fp == 0 and rfind(PAGENAME, \"e$\") then\n\t\t\t\tgender = \"mf\"\n\t\t\tend\n\t\t\t\n\t\t\tif #args.current &gt; 0 then\n\t\t\t\ttrack(\"adj-current\")\n\t\t\tend\n\t\t\t\n\t\
      \t\tif args.inv then\n\t\t\t\ttable.insert(data.inflections, {label = \"invariable\"})\n\t\t\tend\n\t\t\t\n\t\t\t-- Handle plurals of mf adjectives\n\t\t\tlocal plurals = #args.p &gt; 0 and args.p or {PAGENAME .. \"s\"}\n\t\t\tif not args.inv and gender\
      \ == \"mf\" then\n\t\t\t\tlocal plurals_infl = mw.clone(plurals)\n\t\t\t\tplurals_infl.label = \"plural\"\n\t\t\t\tplurals_infl.accel = {form = \"p\"}\n\t\t\t\ttable.insert(data.inflections, plurals_infl)\n\t\t\tend\n\t\t\t\n\t\t\tif not args.inv and gender\
      \ ~= \"mf\" then\n\t\t\t\t-- Handle case of special masculine singular before vowel\n\t\t\t\tif args.m2 then\n\t\t\t\t\tlocal masc_before_vowel = {args.m2}\n\t\t\t\t\tmasc_before_vowel.label = \"masculine singular before vowel\"\n\t\t\t\t\tmasc_before_vowel.accel\
      \ = {form = \"m|s\"}\n\t\t\t\t\ttable.insert(data.inflections, masc_before_vowel)\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\t-- Handle feminines\n\t\t\t\tlocal feminines = #args.f &gt; 0 and args.f or add_suffix(#args.current &gt; 0 and args.current or {PAGENAME},\
      \ \"e\")\n\t\t\t\tlocal feminines_infl = mw.clone(feminines)\n\t\t\t\tfeminines_infl.label = \"feminine singular\"\n\t\t\t\tfeminines_infl.accel = {form = \"f|s\"}\n\t\t\t\ttable.insert(data.inflections, feminines_infl)\n\t\t\t\t\n\t\t\t\t-- Handle masculine\
      \ plurals\n\t\t\t\tlocal mplurals = #args.mp &gt; 0 and args.mp or add_suffix(#args.current &gt; 0 and args.current or {PAGENAME}, \"s\")\n\t\t\t\tlocal mplurals_infl = mw.clone(mplurals)\n\t\t\t\tmplurals_infl.label = \"masculine plural\"\n\t\t\t\tmplurals_infl.accel\
      \ = {form = \"m|p\"}\n\t\t\t\ttable.insert(data.inflections, mplurals_infl)\n\t\t\t\t\n\t\t\t\t-- Handle feminine plurals\n\t\t\t\tlocal fplurals = #args.fp &gt; 0 and args.fp or add_suffix(feminines, \"s\")\n\t\t\t\tlocal fplurals_infl = mw.clone(fplurals)\n\
      \t\t\t\tfplurals_infl.label = \"feminine plural\"\n\t\t\t\tfplurals_infl.accel = {form = \"f|p\"}\n\t\t\t\ttable.insert(data.inflections, fplurals_infl)\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Handle comparatives\n\t\tif #args.comp &gt; 0 then\n\t\t\tlocal comps_infl\
      \ = mw.clone(args.comp)\n\t\t\tcomps_infl.label = \"comparative\"\n\t\t\tcomps_infl.accel = {form = \"comparative\"}\n\t\t\ttable.insert(data.inflections, comps_infl)\n\t\tend\n\t\t\n\t\t-- Handle superlatives\n\t\tif #args.sup &gt; 0 then\n\t\t\tlocal\
      \ sups_infl = mw.clone(args.sup)\n\t\t\tsups_infl.label = \"superlative\"\n\t\t\tsups_infl.accel = {form = \"superlative\"}\n\t\t\ttable.insert(data.inflections, sups_infl)\n\t\tend\n\t\t\n\t\t-- Check existence\n\t\tfor key, val in pairs(data.inflections)\
      \ do\n\t\t\tfor i, form in ipairs(val) do\n\t\t\t\tif not exists(form) then\n\t\t\t\t\ttable.insert(data.categories, \"French adjectives with missing forms\")\n\t\t\t\t\treturn\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n}\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:33.644Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AR%3ATLFi&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=71417 t=1555362633515937
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:33 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1222.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 680109320, 502572886, 703242753
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="699267" pageid="699267" ns="10" title="Template:R:TLFi"><revisions><rev user="Desaccointier" timestamp="2018-12-12T16:50:39Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">“[http://www.cnrtl.fr/{{#if:{{{etym|}}}|etymologie|definition}}/{{urlencode:{{{1|{{PAGENAME}}}}}}} {{{alt|{{{1|{{PAGENAME}}}}}}}}]” in ''{{lang|fr|[[w:fr:Trésor de la langue française informatisé|le Trésor de la langue française informatisé]]}}'' (''The Digitized Treasury of the French Language'').&lt;noinclude&gt;
      [[Category:French reference templates|Trésor de la langue française informatisé]]{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:33.860Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alang&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=67713 t=1555362633738262
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:33 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1284.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 430349750, 563398728, 706055337
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="2249840" pageid="2249840" ns="10" title="Template:lang"><revisions><rev user="Chuck Entz" timestamp="2018-12-25T18:31:39Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:lang]]&quot;: Highly visible template/module ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:script utilities|lang_t}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:34.064Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ala-IPA&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53991 t=1555362633955588
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:34 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1278.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 599098680, 255635310, 698238291
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4403380" pageid="4403380" ns="10" title="Template:la-IPA"><revisions><rev user="JohnC5" timestamp="2017-01-23T20:39:48Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Ah sorry, there was a single character error in the module. Should work perfectly now." xml:space="preserve">{{#invoke:la-pronunc|show_full}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:34.271Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ala-pronunc&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54882 t=1555362634143823
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:34 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1316.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 609789332, 560645132, 694441254
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4403379\" pageid=\"4403379\" ns=\"828\" title=\"Module:la-pronunc\"><revisions><rev user=\"Brutal Russian\" timestamp=\"2018-12-02T18:55:47Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Final -n is not lost\" xml:space=\"preserve\">local export = {}\n\nlocal m_a = require(\"Module:accent qualifier\")\nlocal m_IPA = require(\"Module:IPA\")\nlocal lang = require(\"Module:languages\"\
      ).getByCode(\"la\")\n\nlocal letters_ipa = {\n\t[\"a\"] = \"a\",[\"e\"] = \"e\",[\"i\"] = \"i\",[\"o\"] = \"o\",[\"u\"] = \"u\",[\"y\"] = \"y\",\n\t[\"ā\"] = \"aː\",[\"ē\"] = \"eː\",[\"ī\"] = \"iː\",[\"ō\"] = \"oː\",[\"ū\"] = \"uː\",[\"ȳ\"] = \"yː\",\n\
      \t[\"ae\"] = \"ae̯\",[\"oe\"] = \"oe̯\",[\"ei\"] = \"ei̯\",[\"au\"] = \"au̯\",[\"eu\"] = \"eu̯\",\n\t[\"b\"] = \"b\",[\"d\"] = \"d\",[\"f\"] = \"f\",\n\t[\"c\"] = \"k\",[\"g\"] = \"ɡ\",[\"v\"] = \"w\",[\"x\"] = \"ks\",\n\t[\"ph\"] = \"pʰ\",[\"th\"] = \"\
      tʰ\",[\"ch\"] = \"kʰ\",[\"gh\"] = \"ɡʰ\",[\"rh\"] = \"r\",[\"qv\"] = \"kʷ\",[\"gv\"] = \"ɡʷ\",\n\t[\"'\"] = \"ˈ\",[\"ˈ\"] = \"ˈ\",\n}\n\nlocal letters_ipa_eccl = {\n\t[\"a\"] = \"a\",[\"e\"] = \"e\",[\"i\"] = \"i\",[\"o\"] = \"o\",[\"u\"] = \"u\",[\"y\"\
      ] = \"i\",\n\t[\"ā\"] = \"aː\",[\"ē\"] = \"eː\",[\"ī\"] = \"iː\",[\"ō\"] = \"oː\",[\"ū\"] = \"uː\",[\"ȳ\"] = \"iː\",\n\t[\"ae\"] = \"ɛ\",[\"oe\"] = \"ɛ\",[\"ei\"] = \"ei̯\",[\"au\"] = \"au̯\",[\"eu\"] = \"eu̯\",\n\t[\"b\"] = \"b\",[\"d\"] = \"d\",[\"f\"\
      ] = \"f\",\n\t[\"c\"] = \"k\",[\"g\"] = \"ɡ\",[\"v\"] = \"v\",[\"x\"] = \"ks\",\n\t[\"ph\"] = \"f\",[\"th\"] = \"tʰ\",[\"ch\"] = \"kʰ\",[\"gh\"] = \"ɡʰ\",[\"rh\"] = \"r\",[\"qv\"] = \"kw\",[\"gv\"] = \"ɡw\",\n\t[\"h\"] = \"\",\n\t[\"'\"] = \"ˈ\",[\"ˈ\"\
      ] = \"ˈ\",\n}\n\nlocal letters_ipa_vul = {\n\t[\"a\"] = \"a\",[\"e\"] = \"ɛ\",[\"i\"] = \"i\",[\"o\"] = \"ɔ\",[\"u\"] = \"u\",[\"y\"] = \"e\",\n\t[\"ā\"] = \"aː\",[\"ē\"] = \"eː\",[\"ī\"] = \"iː\",[\"ō\"] = \"oː\",[\"ū\"] = \"uː\",[\"ȳ\"] = \"eː\",\n\t\
      [\"ae\"] = \"e\",[\"oe\"] = \"e\",[\"ei\"] = \"ei̯\",[\"au\"] = \"au̯\",[\"eu\"] = \"eu̯\",\n\t[\"b\"] = \"β\",[\"d\"] = \"d\",[\"f\"] = \"f\",\n\t[\"c\"] = \"k\",[\"g\"] = \"ɡ\",[\"v\"] = \"β\",[\"x\"] = \"s\",\n\t[\"ph\"] = \"f\",[\"th\"] = \"tʰ\",[\"\
      ch\"] = \"kʰ\",[\"gh\"] = \"g\",[\"rh\"] = \"r\",[\"qv\"] = \"kʷ\",[\"gv\"] = \"ɡʷ\",\n\t[\"h\"] = \"\",\n\t[\"'\"] = \"ˈ\",[\"ˈ\"] = \"ˈ\",\n}\n\nlocal phonetic_vowels = {\n\t[\"e\"] = \"ɛ\",\n\t[\"i\"] = \"ɪ\",\n\t[\"o\"] = \"ɔ\",\n\t[\"u\"] = \"ʊ\"\
      ,\n\t[\"y\"] = \"ʏ\",\n}\n\nlocal phonetic_rules = {\n\t-- Velar nasal assimilation\n\t{\"ɡ([.ˈ]?)n\", \"ŋ%1n\"},\n\t{\"n([.ˈ]?)([kɡ])\", \"ŋ%1%2\"},\n\t\n\t-- Fronted labialization before front vowels\n\t{\"ʷ([eɛiɪyʏ])\", \"ᶣ%1\"},\n\t\n\t-- Tensing of\
      \ vowels before another vowel\n\t{\"ɛ%.([aeɛiɪoɔuʊyʏ])\", \"e.%1\"},\n\t{\"ɪ%.([aeɛiɪoɔuʊyʏ])\", \"i.%1\"},\n\t\n\t-- Nasal vowels\n\t{\"a[m]$\", \"ã\"},\n\t{\"[eɛ][m]$\", \"ẽ\"},\n\t{\"[iɪ][m]$\", \"ĩ\"},\n\t{\"[oɔ][m]$\", \"õ\"},\n\t{\"[uʊ][m]$\", \"\
      ũ\"},\n\t{\"[yʏ][m]$\", \"ỹ\"},\n\t{\"a[nm]([%.ˈ]?[sf])\", \"ãː%1\"},\n\t{\"[eɛ][nm]([%.ˈ]?[sf])\", \"ẽː%1\"},\n\t{\"[iɪ][nm]([%.ˈ]?[sf])\", \"ĩː%1\"},\n\t{\"[oɔ][nm]([%.ˈ]?[sf])\", \"õː%1\"},\n\t{\"[uʊ][nm]([%.ˈ]?[sf])\", \"ũː%1\"},\n\t{\"[yʏ][nm]([%.ˈ\
      ]?[sf])\", \"ỹː%1\"},\n\t\n\t--L pinguis\n\t{\"l\", \"ɫ\"},\n\t{\"ɫ([%.ˈ]?)ɫ\", \"l%1l\"},\n\t{\"ɫ([%.ˈ]?[iɪyʏ])\", \"l%1\"},\n}\n\nlocal phonetic_rules_eccl = {\n\t{\"n([.ˈ]?)([kɡ])\", \"ŋ%1%2\"}, --assimilation\n\t{\"z\", \"d͡z\"},\n\t{\"([aɛeiɔou])ː\
      ?%.ʃ([aɛeiɔou])\",\"%1ʃ.ʃ%2\"}, --gemination\n\t{\"([aɛeiɔou])ː?%.ɲ([aɛeiɔou])\",\"%1ɲ.ɲ%2\"}, --gemination\n}\n\nlocal phonetic_rules_vul = {\n\t{\"β([%.ˈ])β\",\"b%1b\"},\n\t{\"[ɛei]%.([aɔo])\",\"ʲ%1\"},\n\t{\"[ɛei]%.u([^:])\",\"ʲu%1\"},\n\t{\"[%.ˈ]([^%.ˈ\
      ]*)[ɛei]ˈ([aɔo])\",\"ˈ%1ʲ%2\"},\n\t{\"([^%.ˈ]*)[ɛei]ˈ([aɔo])\",\"ˈ%1ʲ%2\"},\n\t{\"([tk])([ɛei])\",\"%1ʲ%2\"},\n\t{\"u%.([aɛeiɔo])\",\"ʷ%1\"},\n\t{\"[%.ˈ]([^%.ˈ]*)u%.([aɛeiɔo])\",\"ˈ%1ʷ%2\"},\n\t{\"([^%.ˈ]*)u%.([aɛeiɔo])\",\"ˈ%1ʷ%2\"},\n\t{\"i([^ː])\",\
      \ \"e%1\"},\n\t{\"u([^ː])\", \"o%1\"},\n\t{\"βʲ\",\"βj\"},\n\t{\"^(ˈ?)β\",\"%1b\"},\n\t{\"([aɛeiɔouː])([%.ˈ])ɡ([aɛeiɔou])\",\"%1%2ɣ%3\"},\n\t{\"([aɛeiɔouː])([%.ˈ])d([aɛeiɔou])\",\"%1%2ð%3\"},\n\t{\"([aɛeiɔouː])([%.ˈ])k([aɛeiɔou])\",\"%1%2ɡ%3\"},\n\t{\"\
      ([aɛeiɔouː])([%.ˈ])t([aɛeiɔou])\",\"%1%2d%3\"},\n\t{\"([aɛeiɔouː])([%.ˈ])p([aɛeiɔou])\",\"%1%2b%3\"},\n\t{\"a[nm]$\", \"ã\"},\n\t{\"[eɛ][nm]$\", \"ẽ\"},\n\t{\"i[nm]$\", \"ĩ\"},\n\t{\"[oɔ][nm]$\", \"õ\"},\n\t{\"u[nm]$\", \"ũ\"},\n\t{\"ː\",\"\"},\n}\n\n\
      local lengthen_vowel = {\n\t[\"a\"] = \"aː\", [\"aː\"] = \"aː\",\n\t[\"ɛ\"] = \"ɛː\", [\"ɛː\"] = \"ɛː\",\n\t[\"e\"] = \"eː\", [\"eː\"] = \"eː\",\n\t[\"i\"] = \"iː\", [\"iː\"] = \"iː\",\n\t[\"ɔ\"] = \"ɔː\", [\"ɔː\"] = \"ɔː\",\n\t[\"o\"] = \"oː\", [\"oː\"\
      ] = \"oː\",\n\t[\"u\"] = \"uː\", [\"uː\"] = \"uː\",\n}\n\nlocal vowels = {\n\t\"a\", \"ɛ\", \"e\", \"ɪ\", \"i\", \"ɔ\", \"o\", \"ʊ\", \"u\", \"y\",\n\t\"aː\", \"ɛː\", \"eː\", \"iː\", \"ɔː\", \"oː\", \"uː\", \"yː\",\n\t\"ae̯\", \"oe̯\", \"ei̯\", \"au̯\"\
      , \"eu̯\",\n}\n\n\nlocal onsets = {\n\t\"b\", \"p\", \"pʰ\", \"d\", \"t\", \"tʰ\", \"β\",\n\t\"ɡ\", \"gʰ\", \"k\", \"kʰ\", \"kʷ\", \"ɡʷ\", \"kw\", \"ɡw\", \"t͡s\", \"t͡ʃ\", \"d͡ʒ\", \"ʃ\",\n\t\"f\", \"s\", \"h\", \"z\",\n\t\"l\", \"m\", \"n\", \"ɲ\", \"\
      r\", \"j\", \"v\", \"w\",\n\t\n\t\"bl\", \"pl\", \"pʰl\", \"br\", \"pr\", \"pʰr\", \"ps\", \n\t\"dr\", \"tr\", \"tʰr\",\n\t\"ɡl\", \"kl\", \"kʰl\", \"ɡr\", \"kr\", \"kʰr\",\n\t\"fl\", \"fr\",\n\t\n\t\"sp\", \"st\", \"sk\", \"skʷ\", \"sl\", \"sm\", \"sn\"\
      , \"sw\",\n\t\"spr\", \"str\", \"skr\",\n\t\"spl\", \"skl\",\n}\n\nlocal codas = {\n\t\"b\", \"p\", \"pʰ\", \"d\", \"t\", \"tʰ\", \"ɡ\", \"k\", \"kʰ\", \"β\",\n\t\"f\", \"s\",\n\t\"l\", \"m\", \"n\", \"ɲ\", \"r\", \"j\", \"ʃ\",\n\t\n\t\"sp\", \"st\", \"\
      sk\",\n\t\"spʰ\", \"stʰ\", \"skʰ\",\n\t\n\t\"lp\", \"lt\", \"lk\",\n\t\"lb\", \"ld\", \"lɡ\",\n\t\"lpʰ\", \"ltʰ\", \"lkʰ\",\n\t\"lf\",\n\t\n\t\"rp\", \"rt\", \"rk\",\n\t\"rb\", \"rd\", \"rɡ\",\n\t\"rpʰ\", \"rtʰ\", \"rkʰ\",\n\t\"rf\",\n\t\n\t\"mp\", \"\
      nt\", \"nk\",\n\t\"mb\", \"nd\", \"nɡ\",\n\t\"mpʰ\", \"ntʰ\", \"nkʰ\",\n\t\n\t\"lm\", \"rl\", \"rm\", \"rn\",\n\t\n\t\"ps\", \"ts\", \"ks\", \"ls\", \"ns\", \"rs\",\n\t\"lks\", \"nks\", \"rks\",\n\t\"lms\", \"rls\", \"rms\", \"rns\",\n}\n\nlocal breves\
      \ = {\n\t[\"ă\"] = \"a\",\n\t[\"ĕ\"] = \"e\",\n\t[\"ĭ\"] = \"i\",\n\t[\"ŭ\"] = \"u\",\n\t[\"æ\"] = \"ae\",\n\t[\"œ\"] = \"oe\",\n}\n\nfor i, val in ipairs(vowels) do\n\tvowels[val] = true\nend\n\nfor i, val in ipairs(onsets) do\n\tonsets[val] = true\n\
      end\n\nfor i, val in ipairs(codas) do\n\tcodas[val] = true\nend\n\n\nlocal function letters_to_ipa(word,phonetic,eccl,vul)\n\tlocal phonemes = {}\n\t\n\tlocal dictionary = eccl and letters_ipa_eccl or (vul and letters_ipa_vul or letters_ipa)\n\t\n\twhile\
      \ mw.ustring.len(word) &gt; 0 do\n\t\tlocal longestmatch = \"\"\n\t\t\n\t\tfor letter, ipa in pairs(dictionary) do\n\t\t\tif mw.ustring.len(letter) &gt; mw.ustring.len(longestmatch) and mw.ustring.sub(word, 1, mw.ustring.len(letter)) == letter then\n\t\
      \t\t\tlongestmatch = letter\n\t\t\tend\n\t\tend\n\t\t\n\t\tif mw.ustring.len(longestmatch) &gt; 0 then\n\t\t\tif dictionary[longestmatch] == \"ks\" then\n\t\t\t\ttable.insert(phonemes, \"k\")\n\t\t\t\ttable.insert(phonemes, \"s\")\n\t\t\telse\n\t\t\t\t\
      table.insert(phonemes, dictionary[longestmatch])\n\t\t\tend\n\t\t\tword = mw.ustring.sub(word, mw.ustring.len(longestmatch) + 1)\n\t\telse\n\t\t\ttable.insert(phonemes, mw.ustring.sub(word, 1, 1))\n\t\t\tword = mw.ustring.sub(word, 2)\n\t\tend\n\tend\n\
      \t\n\tif eccl then for i=1,#phonemes do\n\t\tif phonemes[i+1] and (phonemes[i] == \"k\" or phonemes[i] == \"ɡ\") and (phonemes[i+1] == \"e\" or phonemes[i+1] == \"ɛ\" or phonemes[i+1] == \"eː\" or phonemes[i+1] == \"i\" or phonemes[i+1] == \"iː\") then\n\
      \t\t\tphonemes[i] = phonemes[i] == \"k\" and \"t͡ʃ\" or \"d͡ʒ\"\n\t\t\tif phonemes[i] == \"t͡ʃ\" and phonemes[i-1] and phonemes[i-1] == \"s\" and not (phonemes[i-2] and not vowels[phonemes[i-2]]) and not (phonemes[i+1] and not vowels[phonemes[i+1]]) then\n\
      \t\t\t\tphonemes[i-1] = \"ʃ\"\n\t\t\t\tphonemes[i] = \"ʃ\"\n\t\t\tend\n\t\t\tif phonemes[i-1] and phonemes[i-1] == \"k\" and phonemes[i] == \"t͡ʃ\" then\n\t\t\t\tphonemes[i-1] = \"t\"\n\t\t\tend\n\t\t\tif phonemes[i-1] and phonemes[i-1] == \"g\" and phonemes[i]\
      \ == \"d͡ʒ\" then\n\t\t\t\tphonemes[i-1] = \"d\"\n\t\t\tend\n\t\tend\n\t\tif phonemes[i+2] and phonemes[i] == \"t\" and phonemes[i+1] == \"i\" and vowels[phonemes[i+2]] and not (phonemes[i-1] and phonemes[i-1] == \"s\") then\n\t\t\tphonemes[i] = \"t͡s\"\
      \n\t\tend\n\t\tif phonemes[i] == \"kʰ\" then phonemes[i] = \"k\" end\n\t\tif phonemes[i] == \"tʰ\" then phonemes[i] = \"t\" end\n\t\tif phonemes[i+1] and phonemes[i] == \"ɡ\" and phonemes[i+1] == \"n\" then\n\t\t\tphonemes[i] = \"ɲ\"\n\t\t\tphonemes[i+1]\
      \ = \"ɲ\"\n\t\tend\n\tend end\n\t\n\treturn phonemes\nend\n\n\nlocal function get_onset(syll)\n\tlocal consonants = {}\n\t\n\tfor i = 1, #syll do\n\t\tif vowels[syll[i]] then\n\t\t\tbreak\n\t\tend\n\t\tif syll[i] ~= \"ˈ\" then\n\t\t\ttable.insert(consonants,\
      \ syll[i])\n\t\tend\n\tend\n\t\n\treturn table.concat(consonants)\nend\n\n\nlocal function get_coda(syll)\n\tlocal consonants = {}\n\t\n\tfor i = #syll, 1, -1 do\n\t\tif vowels[syll[i]] then\n\t\t\tbreak\n\t\tend\n\t\t\n\t\ttable.insert(consonants, 1,\
      \ syll[i])\n\tend\n\t\n\treturn table.concat(consonants)\nend\n\n\nlocal function get_vowel(syll)\n\tfor i = 1,#syll do\n\t\tif vowels[syll[i]] then return syll[i] end\n\tend\nend\n\n\n-- Split the word into syllables of CV shape\nlocal function split_syllables(remainder)\n\
      \tlocal syllables = {}\n\tlocal syll = {}\n\t\n\twhile #remainder &gt; 0 do\n\t\tlocal phoneme = table.remove(remainder, 1)\n\t\t\n\t\tif phoneme == \".\" then\n\t\t\tif #syll &gt; 0 then\n\t\t\t\ttable.insert(syllables, syll)\n\t\t\t\tsyll = {}\n\t\t\t\
      end\n\t\telseif phoneme == \"ˈ\" then\n\t\t\tif #syll &gt; 0 then\n\t\t\t\ttable.insert(syllables,syll)\n\t\t\tend\n\t\t\tsyll = {\"ˈ\"}\n\t\telseif vowels[phoneme] then\n\t\t\ttable.insert(syll, phoneme)\n\t\t\ttable.insert(syllables, syll)\n\t\t\tsyll\
      \ = {}\n\t\telse\n\t\t\ttable.insert(syll, phoneme)\n\t\tend\n\tend\n\t\n\t-- If there are phonemes left, then the word ends in a consonant\n\t-- Add them to the last syllable\n\tfor _, phoneme in ipairs(syll) do\n\t\ttable.insert(syllables[#syllables],\
      \ phoneme)\n\tend\n\t\n\t-- Split consonant clusters between syllables\n\tfor i, current in ipairs(syllables) do\n\t\tif i &gt; 1 then\n\t\t\tlocal previous = syllables[i-1]\n\t\t\tlocal onset = get_onset(current)\n\t\t\t-- Shift over consonants until\
      \ the syllable onset is valid\n\t\t\twhile not (onset == \"\" or onsets[onset]) do\n\t\t\t\ttable.insert(previous, table.remove(current, 1))\n\t\t\t\tonset = get_onset(current)\n\t\t\tend\n\t\t\t\n\t\t\t-- If the preceding syllable still ends with a vowel,\
      \ and the current one begins with s + another consonant, or with gn, then shift it over\n\t\t\tif get_coda(previous) == \"\" and ((current[1] == \"s\" and not vowels[current[2]]) or (current[1] ==\"g\" and current[2] == \"n\")) then\n\t\t\t\ttable.insert(previous,\
      \ table.remove(current, 1))\n\t\t\tend\n\t\t\t\n\t\t\t-- If there is no vowel at all in this syllable\n\t\t\tif not get_vowel(current) then\n\t\t\t\tfor j=1,#current do\n\t\t\t\t\ttable.insert(syllables[i-1], table.remove(current, 1))\n\t\t\t\tend\n\t\t\
      \t\ttable.remove(syllables,i)\n\t\t\tend\n\t\t\t\n\t\tend\n\tend\n\t\n\tfor i, syll in ipairs(syllables) do\n\t\tlocal onset = get_onset(syll)\n\t\tlocal coda = get_coda(syll)\n\t\t\n\t\tif not (onset == \"\" or onsets[onset]) then\n\t\t\trequire(\"Module:debug\"\
      ).track(\"la-pronunc/bad onset\")\n\t\t\t--error(\"onset error:[\" .. onset .. \"]\")\n\t\tend\n\t\t\n\t\tif not (coda == \"\" or codas[coda]) then\n\t\t\trequire(\"Module:debug\").track(\"la-pronunc/bad coda\")\n\t\t\t--error(\"coda error:[\" .. coda\
      \ .. \"]\")\n\t\tend\n\tend\n\t\n\treturn syllables\nend\n\n\nlocal function detect_accent(syllables,eccl)\n\t-- Manual override\n\tfor i=1,#syllables do\n\t\tfor j=1,#syllables[i] do\n\t\t\tif syllables[i][j] == \"ˈ\" then\n\t\t\t\ttable.remove(syllables[i],j)\n\
      \t\t\t\treturn i\n\t\t\tend\n\t\tend\n\tend\n\t-- Detect accent placement\n\tif #syllables &gt; 2 then\n\t\t-- Does the penultimate syllable end in a single vowel?\n\t\tlocal penult = syllables[#syllables-1]\n\t\t\n\t\tif mw.ustring.find(penult[#penult],\
      \ \"^[aɛeiɔouy]$\") then\n\t\t\treturn #syllables - 2\n\t\telse\n\t\t\treturn #syllables - 1\n\t\tend\n\telseif #syllables == 2 then\n\t\treturn #syllables - 1\n\tend\nend\n\n\nlocal function convert_word(word, phonetic, eccl, vul)\n\t-- Normalize spelling\n\
      \tword = mw.ustring.gsub(word, \"w\", \"v\")\n\tword = mw.ustring.gsub(word, \"([aeiouyāēīōūȳ])v([^aeiouyāēīōūȳ])\", \"%1u%2\")\n\tword = mw.ustring.gsub(word, \"qu\", \"qv\")\n\tword = mw.ustring.gsub(word, \"ngu([aeiouyāēīōūȳ])\", \"ngv%1\")\n\t\n\t\
      word = mw.ustring.gsub(word, \"^i([aeiouyāēīōūȳ])\", \"j%1\")\n\tword = mw.ustring.gsub(word, \"^u([aeiouyāēīōūȳ])\", \"v%1\")\n\tword = mw.ustring.gsub(word, \"([aeiouyāēīōūȳ])i([aeiouyāēīōūȳ])\", \"%1jj%2\")\n\tword = mw.ustring.gsub(word, \"([aeiouyā\
      ēīōūȳ])u([aeiouyāēīōūȳ])\", \"%1v%2\")\n\t\n\t-- Eu and ei diphthongs\n\tword = mw.ustring.gsub(word, \"e(u[ms])$\", \"e.%1\")\n\tword = mw.ustring.gsub(word, \"ei\", \"e.i\")\n\tword = mw.ustring.gsub(word, \"_\", \"\")\n\t\n\t-- Vowel length before nasal\
      \ + fricative is allophonic\n\tword = mw.ustring.gsub(word, \"ā([mn][fs])\", \"a%1\")\n\tword = mw.ustring.gsub(word, \"ē([mn][fs])\", \"e%1\")\n\tword = mw.ustring.gsub(word, \"ī([mn][fs])\", \"i%1\")\n\tword = mw.ustring.gsub(word, \"ō([mn][fs])\", \"\
      o%1\")\n\tword = mw.ustring.gsub(word, \"ū([mn][fs])\", \"u%1\")\n\tword = mw.ustring.gsub(word, \"ȳ([mn][fs])\", \"y%1\")\n\t\n\t-- Apply some basic phoneme-level assimilations\n\tword = mw.ustring.gsub(word, \"xs?\", \"x\")\n\tword = mw.ustring.gsub(word,\
      \ \"b([st])\", \"p%1\")\n\tword = mw.ustring.gsub(word, \"d([st])\", \"t%1\")\n\tword = mw.ustring.gsub(word, \"g([st])\", \"k%1\")\n\tword = mw.ustring.gsub(word, \"n([bp])\", \"m%1\")\n\t\n\t-- Convert word to IPA\n\tlocal phonemes = letters_to_ipa(word,phonetic,eccl,vul)\n\
      \t\n\t-- Split into syllables\n\tlocal syllables = split_syllables(phonemes)\n\t\n\t-- Add accent\n\tlocal accent = detect_accent(syllables,eccl)\n\t\n\tfor i, syll in ipairs(syllables) do\n\t\tfor j, phoneme in ipairs(syll) do\n\t\t\tif eccl then\n\t\t\
      \t\tsyll[j] = mw.ustring.gsub(syll[j], \"ː\", \"\")\n\t\t\telseif phonetic and not vul then\n\t\t\t\tsyll[j] = phonetic_vowels[syll[j]] or syll[j]\n\t\t\tend\n\t\tend\n\tend\n\t\n\tfor i, syll in ipairs(syllables) do\n\t\tif eccl and i == accent and phonetic\
      \ and vowels[syll[#syll]] then\n\t\t\tsyll[#syll] = lengthen_vowel[syll[#syll]] or syll[#syll]\n\t\tend\n\t\t\n\t\tfor j=1, #syll-1 do\n\t\t\tif syll[j]==syll[j+1] then\n\t\t\t\tsyll[j+1] = \"\"\n\t\t\tend\n\t\tend\n\tend\n\t\n\tfor i, syll in ipairs(syllables)\
      \ do\n\t\tsyll = table.concat(syll)\n\t\tif vul and i ~= accent then\n\t\t\tsyll = mw.ustring.gsub(syll,\"ɔ\",\"o\")\n\t\t\tsyll = mw.ustring.gsub(syll,\"ɛ\",\"e\")\n\t\tend\n\t\tsyllables[i] = (i == accent and \"ˈ\" or \"\") .. syll\n\tend\n\t\n\tword\
      \ = (mw.ustring.gsub(table.concat(syllables, \".\"), \"%.ˈ\", \"ˈ\"))\n\t\n\tif phonetic then\n\t\tlocal rules = eccl and phonetic_rules_eccl or (vul and phonetic_rules_vul or phonetic_rules)\n\t\tfor i, rule in ipairs(rules) do\n\t\t\tword = mw.ustring.gsub(word,\
      \ rule[1], rule[2])\n\t\tend\n\tend\n\t\n\tif eccl and not phonetic then\n\t\tword = mw.ustring.gsub(word,\"ɔ\",\"o\")\n\t\tword = mw.ustring.gsub(word,\"ʃ%.ʃ\",\".ʃ\")\n\t\tword = mw.ustring.gsub(word,\"ʃˈʃ\",\"ˈʃ\")\n\t\tword = mw.ustring.gsub(word,\"\
      ɲ%.ɲ\",\".ɲ\")\n\t\tword = mw.ustring.gsub(word,\"ɲˈɲ\",\"ˈɲ\")\n\tend\n\t\n\treturn word\nend\n\n\nlocal function convert_words(words, phonetic, eccl, vul)\n\twords = mw.ustring.lower(words)\n\twords = mw.ustring.gsub(words,'[,?!:;()\"%-]', '')\n\twords\
      \ = mw.ustring.gsub(words,'[ăĕĭŭæœ]', breves)\n\t\n\tlocal disallowed = mw.ustring.gsub(words, '[a-zA-Zāēīōūȳ,.?!:;()\\'\"_ ]', '')\n\tif mw.ustring.len(disallowed) &gt; 0 then\n\t\tif mw.ustring.len(disallowed) == 1 then\n\t\t\terror('The character \"\
      ' .. disallowed .. '\" is not allowed.')\n\t\telse\n\t\t\terror('The characters \"' .. disallowed .. '\" are not allowed.')\n\t\tend\t\n\tend\n\t\n\tlocal result = {}\n\t\n\tfor word in mw.text.gsplit(words, \" \") do\n\t\ttable.insert(result, convert_word(word,\
      \ phonetic, eccl, vul))\n\tend\n\t\n\treturn table.concat(result, \" \")\nend\n\nlocal function make_row(phm, pht, dial)\n\tlocal IPA_args = {{pron = '/' .. phm .. '/'}}\n\tif phm ~= pht then\n\t\ttable.insert(IPA_args, {pron = '[' .. pht .. ']'})\n\t\
      end\n\treturn m_a.show({dial}) .. ' ' .. m_IPA.format_IPA_full(lang, IPA_args)\nend\n\nfunction export.show_full(frame)\n\tlocal params = {\n\t\t[1] = {default = mw.title.getCurrentTitle().nsText == 'Template' and 'prōnuntiātiō' or mw.title.getCurrentTitle().text},\n\
      \t\tclassical = {type = 'boolean', default = true},\n\t\teccl = {type = 'boolean'},\n\t\tvul = {type = 'boolean', default = mw.title.getCurrentTitle().nsText == 'Reconstruction'},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args,\
      \ params)\n\twords = args[1]:lower()\n\tlocal categories = {}\n\t\n\tlocal out = ''\n\t\n\tif args.classical then\n\t\tout = make_row(\n\t\t\tconvert_words(words, false, false, false),\n\t\t\tconvert_words(words, true, false, false),\n\t\t\t'Classical'\n\
      \t\t)\n\tend\n\t\n\tif args.eccl then\n\t\tout = out .. '\\n* ' .. make_row(\n\t\t\tconvert_words(words, false, true, false),\n\t\t\tconvert_words(words, true, true, false),\n\t\t\t'Ecclesiastical'\n\t\t)\n\t\ttable.insert(categories, lang:getCanonicalName()\
      \ .. ' terms with Ecclesiastical IPA pronunciation')\n\tend\n\n\tif args.vul then\n\t\tout = out .. '\\n* ' .. make_row(\n\t\t\tconvert_words(words, false, false, true),\n\t\t\tconvert_words(words, true, false, true),\n\t\t\t'Vulgar'\n\t\t)\n\tend\n\t\n\
      \texport.track(words)\n\t\n\treturn out .. require(\"Module:utilities\").format_categories(categories)\nend\n\n\nfunction export.show(words, phonetic, eccl, vul)\n\tif type(words) == \"table\" then -- assume a frame\n\t\teccl = words.args[\"eccl\"]\n\t\
      \tvul = words.args[\"vul\"]\n\t\twords = words.args[1]:lower() or mw.title.getCurrentTitle().text:lower()\n\tend\n\t\n\tif vul then\n\t\tphonetic = true\n\tend\n\t\n\treturn convert_words(words, phonetic, eccl, vul)\nend\n\n\nfunction export.allophone(word,\
      \ eccl, vul)\n\treturn export.show(word, true, eccl, vul)\nend\n\n\nlocal unassimilated_prefixes = {\n\t'ab','ad','circum','con','contrā','dis','ex','īn','inter','ob','per','sub','subter'\n}\n\n\nfunction export.track(words)\n\tif type(words) == \"table\"\
      \ then -- assume a frame\n\t\twords = words.args[1]:lower() or mw.title.getCurrentTitle().text:lower()\n\tend\n\twords = mw.ustring.lower(words)\n\twords = mw.ustring.gsub(words,'[,.?!:;()\\'\"%-]','')\n\twords = mw.ustring.gsub(words,'[ăĕĭŭæœ]', breves)\n\
      \t\n\ttemp = words\n\trepeat\n\t\twords = temp\n\t\tfor _, prefix in ipairs(unassimilated_prefixes) do\n\t\t\ttemp = mw.ustring.gsub(temp,\"^\"..prefix,\"\")\n\t\tend\n\tuntil temp == words\n\t\n\tif mw.ustring.find(words,'^i[aeiouāēīōū]') then\n\t\treturn\
      \ \"[[Category:Kenny's testing category 8]]\"\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:34.554Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata3%2Fu&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=86557 t=1555362634401255
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:34 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 217912675, 741579692, 702195983
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4206212\" pageid=\"4206212\" ns=\"828\" title=\"Module:languages/data3/u\"><revisions><rev user=\"-sche\" timestamp=\"2019-03-26T23:45:43Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add uss and uth split from dud Hun-Saare per ISO per BP\" xml:space=\"preserve\">local u = mw.ustring.char\n\n-- UTF-8 encoded strings for some commonly used diacritics\nlocal GRAVE  \
      \   = u(0x0300)\nlocal ACUTE     = u(0x0301)\nlocal CIRC      = u(0x0302)\nlocal TILDE     = u(0x0303)\nlocal MACRON    = u(0x0304)\nlocal BREVE     = u(0x0306)\nlocal DOTABOVE  = u(0x0307)\nlocal DIAER     = u(0x0308)\nlocal CARON     = u(0x030C)\nlocal\
      \ DGRAVE    = u(0x030F)\nlocal INVBREVE  = u(0x0311)\nlocal DOTBELOW  = u(0x0323)\nlocal RINGBELOW = u(0x0325)\nlocal CEDILLA   = u(0x0327)\n\nlocal Latn = {\"Latn\"}\n\nlocal m = {}\n\nm[\"uam\"] = {\n\t\"Uamué\",\n\t\"Q3441418\",\n}\n\nm[\"uan\"] = {\n\
      \t\"Kuan\",\n\t\"Q6441085\",\n}\n\nm[\"uar\"] = {\n\t\"Tairuma\",\n\t\"Q7676386\",\n\t\"ngf\",\n}\n\nm[\"uba\"] = {\n\t\"Ubang\",\n\t\"Q3914467\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"ubi\"] = {\n\t\"Ubi\",\n\t\"Q56264\",\n}\n\nm[\"ubl\"] = {\n\
      \t\"Buhi'non Bikol\",\n\t\"Q18664494\",\n\t\"phi\",\n}\n\nm[\"ubr\"] = {\n\t\"Ubir\",\n\t\"Q3547642\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"ubu\"] = {\n\t\"Umbu-Ungu\",\n\t\"Q12953245\",\n\t\"ngf\",\n}\n\nm[\"uby\"] = {\n\t\"Ubykh\",\n\t\"Q36931\"\
      ,\n\t\"cau-nwc\",\n\tscripts = {\"Latn\", \"Cyrl\"},\n}\n\nm[\"uda\"] = {\n\t\"Uda\",\n\t\"Q11011951\",\n}\n\nm[\"ude\"] = {\n\t\"Udihe\",\n\t\"Q13235\",\n\t\"tuw\",\n\totherNames = {\"Udege\", \"Udekhe\", \"Udeghe\"},\n\tscripts = {\"Cyrl\"},\n}\n\nm[\"\
      udg\"] = {\n\t\"Muduga\",\n\t\"Q16886762\",\n\t\"dra\",\n}\n\nm[\"udi\"] = {\n\t\"Udi\",\n\t\"Q36867\",\n\t\"cau-nec\",\n\tscripts = {\"Cyrl\", \"Latn\", \"Armn\", \"Geor\"},\n\tancestors = {\"xag\"},\n\ttranslit_module = \"translit-redirect\",\n\toverride_translit\
      \ = true,\n}\n\nm[\"udj\"] = {\n\t\"Ujir\",\n\t\"Q14916906\",\n}\n\nm[\"udl\"] = {\n\t\"Uldeme\",\n\t\"Q3515078\",\n\t\"cdc-cbm\",\n}\n\nm[\"udm\"] = {\n\t\"Udmurt\",\n\t\"Q13238\",\n\t\"urj-prm\",\n\tscripts = {\"Cyrl\"},\n\ttranslit_module = \"udm-translit\"\
      ,\n\toverride_translit = true,\n}\n\nm[\"udu\"] = {\n\t\"Uduk\",\n\t\"Q3182573\",\n}\n\nm[\"ues\"] = {\n\t\"Kioko\",\n\t\"Q18343036\",\n}\n\nm[\"ufi\"] = {\n\t\"Ufim\",\n\t\"Q7877531\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"uga\"] = {\n\t\"Ugaritic\"\
      ,\n\t\"Q36928\",\n\t\"sem-nwe\",\n\tscripts = {\"Ugar\"},\n\ttranslit_module = \"uga-translit\",\n}\n\nm[\"ugb\"] = {\n\t\"Kuku-Ugbanh\",\n\t\"Q10549854\",\n}\n\nm[\"uge\"] = {\n\t\"Ughele\",\n\t\"Q966303\",\n\t\"poz-ocw\",\n}\n\nm[\"ugn\"] = {\n\t\"Ugandan\
      \ Sign Language\",\n\t\"Q7877677\",\n\t\"sgn\",\n}\n\nm[\"ugo\"] = {\n\t\"Gong\",\n\t\"Q3448919\",\n\totherNames = {\"Ugong\"},\n\tscripts = {\"Thai\"},\n\tsort_key = {\n\t\tfrom = {\"%p\", \"[็-๎]\", \"([เแโใไ])([ก-ฮ])\"},\n\t\tto   = {\"\", \"\", \"\
      %2%1\"}},\n}\n\nm[\"ugy\"] = {\n\t\"Uruguayan Sign Language\",\n\t\"Q7901470\",\n\t\"sgn\",\n}\n\nm[\"uha\"] = {\n\t\"Uhami\",\n\t\"Q3913328\",\n\t\"alv-edo\",\n\tscripts = Latn,\n}\n\nm[\"uhn\"] = {\n\t\"Damal\",\n\t\"Q4748974\",\n}\n\nm[\"uis\"] = {\n\
      \t\"Uisai\",\n\t\"Q7878123\",\n}\n\nm[\"uiv\"] = {\n\t\"Iyive\",\n\t\"Q11128658\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"uji\"] = {\n\t\"Tanjijili\",\n\t\"Q3914939\",\n}\n\nm[\"uka\"] = {\n\t\"Kaburi\",\n\t\"Q6344482\",\n}\n\nm[\"ukg\"] = {\n\t\"\
      Ukuriguma\",\n\t\"Q7878623\",\n\t\"ngf-mad\",\n}\n\nm[\"ukh\"] = {\n\t\"Ukhwejo\",\n\t\"Q36623\",\n}\n\nm[\"ukk\"] = {\n\t\"Muak Sa-aak\",\n\tnil,\n\t\"mkh-pal\",\n\totherNames = {\"Muak\"},\n}\n\nm[\"ukl\"] = {\n\t\"Ukrainian Sign Language\",\n\t\"Q10322106\"\
      ,\n\t\"sgn\",\n}\n\nm[\"ukp\"] = {\n\t\"Ukpe-Bayobiri\",\n\t\"Q3914470\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"ukq\"] = {\n\t\"Ukwa\",\n\t\"Q7878635\",\n\t\"nic-bco\",\n}\n\nm[\"uks\"] = {\n\t\"Kaapor Sign Language\",\n\t\"Q3322101\",\n\t\"sgn\"\
      ,\n}\n\nm[\"uku\"] = {\n\t\"Ukue\",\n\t\"Q3913387\",\n\t\"alv-edo\",\n\tscripts = Latn,\n}\n\nm[\"ukw\"] = {\n\t\"Ukwuani-Aboh-Ndoni\",\n\t\"Q36636\",\n\t\"alv\",\n\tscripts = Latn,\n}\n\nm[\"uky\"] = {\n\t\"Kuuk Yak\",\n\t\"Q6448719\",\n\t\"aus-psw\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"ula\"] = {\n\t\"Fungwa\",\n\t\"Q5509187\",\n\t\"nic-knj\",\n\totherNames = {\"Ula\", \"Ura\"},\n}\n\nm[\"ulb\"] = {\n\t\"Ulukwumi\",\n\t\"Q36722\",\n}\n\nm[\"ulc\"] = {\n\t\"Ulch\",\n\t\"Q13239\",\n\t\"tuw\",\n}\n\nm[\"ule\"\
      ] = {\n\t\"Lule\",\n\t\"Q12635889\",\n\tscripts = Latn,\n}\n\nm[\"ulf\"] = {\n\t\"Afra\",\n\t\"Q4477735\",\n}\n\nm[\"uli\"] = {\n\t\"Ulithian\",\n\t\"Q36842\",\n\t\"poz-mic\",\n}\n\nm[\"ulk\"] = {\n\t\"Meriam\",\n\t\"Q788174\",\n\t\"ngf\",\n\tscripts =\
      \ Latn,\n}\n\nm[\"ull\"] = {\n\t\"Ullatan\",\n\t\"Q8761579\",\n\t\"dra\",\n}\n\nm[\"ulm\"] = {\n\t\"Ulumanda'\",\n\t\"Q3501892\",\n}\n\nm[\"uln\"] = {\n\t\"Unserdeutsch\",\n\t\"Q13244\",\n\t\"crp\",\n\totherNames = {\"Rabaul Creole German\"},\n\tscripts\
      \ = Latn,\n\tancestors = {\"de\"},\n}\n\nm[\"ulu\"] = {\n\t\"Uma' Lung\",\n\t\"Q3548186\",\n\t\"poz-swa\",\n}\n\nm[\"ulw\"] = {\n\t\"Ulwa\",\n\t\"Q2405552\",\n}\n\nm[\"uma\"] = {\n\t\"Umatilla\",\n\t\"Q12953952\",\n\t\"nai-shp\",\n\tscripts = Latn,\n}\n\
      \nm[\"umb\"] = {\n\t\"Umbundu\",\n\t\"Q36983\",\n\t\"bnt\",\n\totherNames = {\"South Mbundu\"},\n\tscripts = Latn,\n}\n\nm[\"umc\"] = {\n\t\"Marrucinian\",\n\t\"Q36110\",\n\t\"itc\",\n\tscripts = {\"Latn\", \"Ital\"},\n}\n\nm[\"umd\"] = {\n\t\"Umbindhamu\"\
      ,\n\t\"Q7881346\",\n\t\"aus-pmn\",\n}\n\nm[\"umg\"] = {\n\t\"Umbuygamu\",\n\t\"Q3915677\",\n\t\"aus-pmn\",\n}\n\nm[\"umi\"] = {\n\t\"Ukit\",\n\t\"Q7878321\",\n}\n\nm[\"umm\"] = {\n\t\"Umon\",\n\t\"Q3915448\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"\
      umn\"] = {\n\t\"Makyan Naga\",\n\t\"Q6740516\",\n}\n\nm[\"umo\"] = {\n\t\"Umotína\",\n\t\"Q7881740\",\n}\n\nm[\"ump\"] = {\n\t\"Umpila\",\n\t\"Q12953954\",\n}\n\nm[\"umr\"] = {\n\t\"Umbugarla\",\n\t\"Q2980392\",\n}\n\nm[\"ums\"] = {\n\t\"Pendau\",\n\t\"\
      Q7162371\",\n}\n\nm[\"umu\"] = {\n\t\"Munsee\",\n\t\"Q56547\",\n\t\"del\",\n\tscripts = Latn,\n\tentry_name = {\n\t\tfrom = {\"Á\", \"Ă\", \"É\", \"Í\", \"Ó\", \"Ú\", \"Ŭ\", \"á\", \"á\", \"ă\", \"é\", \"í\", \"ó\", \"ú\", \"ŭ\"},\n\t\tto   = {\"A\", \"\
      A\", \"E\", \"I\", \"O\", \"U\", \"U\", \"a\", \"á\", \"a\", \"e\", \"i\", \"o\", \"u\", \"u\"}} ,\n}\n\nm[\"una\"] = {\n\t\"North Watut\",\n\t\"Q15887898\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"und\"] = {\n\t\"Undetermined\",\n\tnil,\n\t\"qfa-not\"\
      ,\n\tscripts = {\"Zyyy\"},\n}\n\nm[\"une\"] = {\n\t\"Uneme\",\n\t\"Q3913357\",\n\t\"alv-edo\",\n\tscripts = Latn,\n}\n\nm[\"ung\"] = {\n\t\"Ngarinyin\",\n\t\"Q1284885\",\n\totherNames = {\"Ungarinjin\"},\n\tscripts = Latn,\n}\n\nm[\"unk\"] = {\n\t\"Enawené\
      -Nawé\",\n\t\"Q3307184\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"unm\"] = {\n\t\"Unami\",\n\t\"Q3549180\",\n\t\"del\",\n\tscripts = Latn,\n\tentry_name = {\n\t\tfrom = {\"À\", \"Ä\", \"È\", \"Ë\", \"Ì\", \"Ò\", \"Ù\", \"à\", \"ä\", \"è\", \"ë\", \"ì\"\
      , \"ò\", \"ù\"},\n\t\tto   = {\"A\", \"A\", \"E\", \"E\", \"I\", \"O\", \"U\", \"a\", \"a\", \"e\", \"e\", \"i\", \"o\", \"u\"}} ,\n}\n\nm[\"unn\"] = {\n\t\"Kurnai\",\n\tnil,\n\t\"aus-pam\",\n\totherNames = {\"Gunai\", \"Gaanay\", \"Ganai\", \"Gunnai'\"\
      , \"Kurnay\", \"Bidhawal\", \"Birrdhawal\", \"Muk-thang\", \"Nulit\", \"Thangquai\"},\n\tscripts = Latn,\n}\n\nm[\"unr\"] = {\n\t\"Mundari\",\n\t\"Q3327828\",\n\t\"mun\",\n\tscripts = {\"Deva\"},\n\ttranslit_module = \"hi-translit\", -- for now\n}\n\n\
      m[\"unu\"] = {\n\t\"Unubahe\",\n\t\"Q7897776\",\n}\n\nm[\"unx\"] = {\n\t\"Munda\",\n\t\"Q36264959\",\n\t\"mun\",\n\tscripts = Latn,\n}\n\nm[\"unz\"] = {\n\t\"Unde Kaili\",\n\t\"Q12953596\",\n\t\"poz-kal\",\n\totherNames = {\"Banava\", \"Ndepuu\", \"West\
      \ Kaili\", \"Lole\", \"Ganti\"},\n\tscripts = Latn,\n}\n\nm[\"uok\"] = {\n\t\"Uokha\",\n\t\"Q3441216\",\n\t\"alv-edo\",\n\tscripts = Latn,\n}\n\nm[\"upi\"] = {\n\t\"Umeda\",\n\t\"Q7881465\",\n}\n\nm[\"upv\"] = {\n\t\"Uripiv-Wala-Rano-Atchin\",\n\t\"Q13249\"\
      ,\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"ura\"] = {\n\t\"Urarina\",\n\t\"Q1579560\",\n}\n\nm[\"urb\"] = {\n\t\"Urubú-Kaapor\",\n\t\"Q13893353\",\n\t\"tup-gua\",\n\totherNames = {\"Ka'apor\", \"Kaaporté\"},\n\tscripts = Latn,\n}\n\nm[\"urc\"] = {\n\
      \t\"Urningangg\",\n\t\"Q10710522\",\n}\n\nm[\"ure\"] = {\n\t\"Uru\",\n\t\"Q2992892\",\n}\n\nm[\"urf\"] = {\n\t\"Uradhi\",\n\t\"Q3915680\",\n\t\"aus-pam\",\n\tscripts = Latn,\n}\n\nm[\"urg\"] = {\n\t\"Urigina\",\n\t\"Q7900603\",\n\t\"ngf\",\n\tscripts =\
      \ Latn,\n}\n\nm[\"urh\"] = {\n\t\"Urhobo\",\n\t\"Q36663\",\n\t\"alv-edo\",\n\tscripts = Latn,\n}\n\nm[\"uri\"] = {\n\t\"Urim\",\n\t\"Q7900609\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"urk\"] = {\n\t\"Urak Lawoi'\",\n\t\"Q7899573\",\n\t\"poz-mly\"\
      ,\n\tscripts = {\"Thai\"},\n\totherNames = {\"Urak Lawoi\", \"Orak Lawoi'\", \"Orak Lawoi\", \"Lawta\", \"Chao Tha Le\", \"Chao Nam\", \"Lawoi\"},\n\tsort_key = {\n\t\tfrom = {\"%p\", \"[็-๎]\", \"([เแโใไ])([ก-ฮ])\"},\n\t\tto   = {\"\", \"\", \"%2%1\"\
      }},\n}\n\nm[\"url\"] = {\n\t\"Urali\",\n\t\"Q7899602\",\n\t\"dra\",\n\tscripts = {\"Knda\"},\n}\n\nm[\"urm\"] = {\n\t\"Urapmin\",\n\t\"Q7899769\",\n}\n\nm[\"urn\"] = {\n\t\"Uruangnirin\",\n\t\"Q7901389\",\n\t\"poz-cet\",\n\tscripts = Latn,\n}\n\nm[\"uro\"\
      ] = {\n\t\"Ura (New Guinea)\",\n\t\"Q3121049\",\n\t\"paa\",\n\totherNames = {\"Ura (Papua New Guinea)\"},\n\tscripts = Latn,\n}\n\nm[\"urp\"] = {\n\t\"Uru-Pa-In\",\n\t\"Q7901376\",\n\t\"tup-gua\",\n\tscripts = Latn,\n}\n\nm[\"urr\"] = {\n\t\"Lehalurup\"\
      ,\n\t\"Q3272124\",\n}\n\nm[\"urt\"] = {\n\t\"Urat\",\n\t\"Q3502084\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"uru\"] = {\n\t\"Urumi\",\n\t\"Q7901530\",\n\t\"tup\",\n\tscripts = Latn,\n}\n\nm[\"urv\"] = {\n\t\"Uruava\",\n\t\"Q36875\",\n\t\"poz-ocw\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"urw\"] = {\n\t\"Sop\",\n\t\"Q7562808\",\n\t\"ngf-mad\",\n\totherNames = {\"Sob\", \"Sopu\", \"Usino\", \"Usina\", \"Usion\"}, -- Usi- names are not used by speakers\n\tscripts = Latn,\n}\n\nm[\"urx\"] = {\n\t\"Urimo\",\n\t\
      \"Q7900611\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"ury\"] = {\n\t\"Orya\",\n\t\"Q7105295\",\n\tscripts = Latn,\n}\n\nm[\"urz\"] = {\n\t\"Uru-Eu-Wau-Wau\",\n\t\"Q10266012\",\n\t\"tup-gua\",\n\tscripts = Latn,\n}\n\nm[\"usa\"] = {\n\t\"Usarufa\"\
      ,\n\t\"Q7901714\",\n\t\"paa-kag\",\n\tscripts = Latn,\n}\n\nm[\"ush\"] = {\n\t\"Ushojo\",\n\t\"Q3540446\",\n}\n\nm[\"usi\"] = {\n\t\"Usui\",\n\t\"Q12644231\",\n}\n\nm[\"usk\"] = {\n\t\"Usaghade\",\n\t\"Q3914048\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\
      \nm[\"usp\"] = {\n\t\"Uspanteco\",\n\t\"Q36728\",\n\t\"myn\",\n\tscripts = Latn,\n}\n\nm[\"uss\"] = {\n\t\"Saare\",\n\tnil,\n\t\"nic-bco\",\n\totherNames = {\"us-Saare\", \"Hun-Saare\", \"Duka\"},\n\tscripts = Latn,\n}\n\nm[\"usu\"] = {\n\t\"Uya\",\n\t\
      \"Q7904082\",\n}\n\nm[\"uta\"] = {\n\t\"Otank\",\n\t\"Q3913990\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"ute\"] = {\n\t\"Ute\",\n\t\"Q13260\",\n\t\"azc-num\",\n\totherNames = {\"Southern Paiute\", \"Colorado River Numic\", \"Chemehuevi\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"uth\"] = {\n\t\"Hun\",\n\tnil,\n\t\"nic-bco\",\n\totherNames = {\"ut-Hun\", \"Hun-Saare\", \"Duka\"},\n\tscripts = Latn,\n}\n\nm[\"utp\"] = {\n\t\"Aba\",\n\t\"Q2841465\",\n\t\"poz-oce\",\n\totherNames = {\"Amba\", \"Nebao\", \"Nembao\"\
      },\n\tscripts = Latn,\n}\n\nm[\"utr\"] = {\n\t\"Etulo\",\n\t\"Q35262\",\n\t\"alv-von\",\n\tscripts = Latn,\n}\n\nm[\"utu\"] = {\n\t\"Utu\",\n\t\"Q7903469\",\n\t\"ngf-mad\",\n}\n\nm[\"uum\"] = {\n\t\"Urum\",\n\t\"Q13257\",\n\t\"trk\",\n\tscripts = {\"Cyrl\"\
      },\n}\n\nm[\"uun\"] = {\n\t\"Kulon-Pazeh\",\n\t\"Q36435\",\n\t\"map\",\n\totherNames = {\"Pazeh\", \"Pazih\", \"Kulun\", \"Kulon\"},\n\tscripts = Latn,\n}\n\nm[\"uur\"] = {\n\t\"Ura (Vanuatu)\",\n\t\"Q7899531\",\n\t\"poz-oce\",\n\tscripts = Latn,\n}\n\n\
      m[\"uuu\"] = {\n\t\"U\",\n\t\"Q953082\",\n\t\"mkh-pal\",\n\totherNames = {\"P'uman\"},\n}\n\nm[\"uve\"] = {\n\t\"West Uvean\",\n\t\"Q36837\",\n\t\"poz-pnp\",\n\totherNames = {\"Uvean\", \"Faga Ouvéa\", \"Fagauvea\"},\n\tscripts = Latn,\n}\n\nm[\"uvh\"\
      ] = {\n\t\"Uri\",\n\t\"Q7900540\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"uvl\"] = {\n\t\"Lote\",\n\t\"Q3259972\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"uwa\"] = {\n\t\"Kuku-Uwanh\",\n\t\"Q3915687\",\n}\n\nm[\"uya\"] = {\n\t\"Doko-Uyanga\"\
      ,\n\t\"Q7904095\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:34.843Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ala-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51446 t=1555362634738015
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:34 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 580380503, 245685862, 703042960
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="315891" pageid="315891" ns="10" title="Template:la-noun"><revisions><rev user="Rua" timestamp="2013-08-13T18:50:53Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:la-headword|show|nouns}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:35.052Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ala-headword&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56387 t=1555362634921335
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:35 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 515645444, 486173937, 706481461
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4114141\" pageid=\"4114141\" ns=\"828\" title=\"Module:la-headword\"><revisions><rev user=\"Rua\" timestamp=\"2019-02-17T11:57:31Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"Changed protection level for &quot;[[Module:la-headword]]&quot; ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))\"\
      \ xml:space=\"preserve\">local export = {}\nlocal pos_functions = {}\n\nlocal legal_gender = {\n\t[\"m\"] = true,\n\t[\"m-s\"] = true,\n\t[\"m-p\"] = true,\n\t[\"f\"] = true,\n\t[\"f-s\"] = true,\n\t[\"f-p\"] = true,\n\t[\"n\"] = true,\n\t[\"n-s\"] = true,\n\
      \t[\"n-p\"] = true,\n\t[\"c\"] = true,\n\t[\"c-s\"] = true,\n\t[\"c-p\"] = true,\n\t[\"?\"] = true,\n\t[\"?-s\"] = true,\n\t[\"?-p\"] = true,\n}\n\nlocal legal_declension = {\n\t[\"first\"] = true,\n\t[\"second\"] = true,\n\t[\"third\"] = true,\n\t[\"\
      fourth\"] = true,\n\t[\"fifth\"] = true,\n\t[\"irregular\"] = true,\n}\n\nlocal gender_names = {\n\t[\"m\"] = \"masculine\",\n\t[\"m-s\"] = \"masculine\",\n\t[\"m-p\"] = \"masculine\",\n\t[\"f\"] = \"feminine\",\n\t[\"f-s\"] = \"feminine\",\n\t[\"f-p\"\
      ] = \"feminine\",\n\t[\"n\"] = \"neuter\",\n\t[\"n-s\"] = \"neuter\",\n\t[\"n-p\"] = \"neuter\",\n\t[\"c\"] = \"common\",\n\t[\"c-s\"] = \"common\",\n\t[\"c-p\"] = \"common\",\n\t[\"?\"] = \"unknown gender\",\n\t[\"?-s\"] = \"unknown gender\",\n\t[\"?-p\"\
      ] = \"unknown gender\",\n}\n\nlocal lang = require(\"Module:languages\").getByCode(\"la\")\nlocal suffix = nil\n\nlocal function format(array, concatenater)\n\tif #array == 0 then\n\t\treturn \"\"\n\telse\n\t\treturn \"; ''\" .. table.concat(array, concatenater)\
      \ .. \"''\"\n\tend\nend\n\nlocal function glossary_link(anchor, text)\n\ttext = text or anchor\n\treturn \"[[Appendix:Glossary#\" .. anchor .. \"|\" .. text .. \"]]\"\nend\n\n-- The main entry point.\n-- This is the only function that can be invoked from\
      \ a template.\nfunction export.show(frame)\n\tlocal args = frame:getParent().args\n\tNAMESPACE = mw.title.getCurrentTitle().nsText\n\tPAGENAME = mw.title.getCurrentTitle().text\n\t\n\tlocal head = args[\"head\"]; if head == \"\" then head = nil end\n\t\
      \n\tlocal poscat = frame.args[1] or error(\"Part of speech has not been specified. Please pass parameter 1 to the module invocation.\")\n\tlocal class = frame.args[2]\n\tlocal suff_type = frame.args.suff_type\n\tlocal postype = nil\n\tif suff_type then\n\
      \t\tpostype = poscat .. '-' .. suff_type\n\telse\n\t\tpostype = poscat\n\tend\n\t\n\tlocal data = {lang = lang, pos_category = (NAMESPACE == \"Reconstruction\" and \"reconstructed \" or \"\") .. poscat, categories = {}, heads = {head}, genders = {}, inflections\
      \ = {}}\n\tlocal infl_classes = {}\n\tlocal appendix = {}\n\tlocal postscript = {}\n\t\n\tif poscat == \"suffixes\" then\n\t\ttable.insert(data.categories, \"Latin \" .. suff_type .. \"-forming suffixes\")\n\t\tsuffix = '-'\n\tend\n\t\n\tif pos_functions[postype]\
      \ then\n\t\tpos_functions[postype](class, args, data, infl_classes, appendix, postscript)\n\tend\n\t\n\tif suffix then\n\t\tfor i, h in ipairs(data.heads) do\n\t\t\tdata.heads[i] = suffix .. h\n\t\tend\n\tend\n\t\n\tif mw.ustring.find(mw.ustring.gsub(PAGENAME,\"\
      qu\",\"kv\"),\"[aeiouāēīōū][iu][aeiouāēīōū]\") then\n\t\ttable.insert(data.categories, \"Kenny's testing category 7\")\n\tend\n\t\n\tpostscript = table.concat(postscript, \", \")\n\t\n\treturn\n\t\trequire(\"Module:headword\").full_headword(data)\n\t\t\
      .. format(infl_classes, \"/\")\n\t\t.. format(appendix, \", \")\n\t\t.. (postscript ~= \"\" and \" (\" .. postscript .. \")\" or \"\")\nend\n\npos_functions[\"nouns\"] = function(class, args, data, infl_classes, appendix)\n\tparams = {\n\t\t[1] = {alias_of\
      \ = 'head'},\n\t\t[2] = {alias_of = 'gen'},\n\t\t[3] = {alias_of = 'g'},\n\t\t[4] = {alias_of = 'decl'},\n\t\thead = {list = true, default = mw.title.getCurrentTitle().text},\n\t\tgen = {list = true},\n\t\tg = {list = true, default = '?'},\n\t\tdecl =\
      \ {list = true},\n\t\tindecl = {type = \"boolean\"},\n\t\tid = {},\n\t}\n\tlocal args = require(\"Module:parameters\").process(args, params)\n\tdata.heads = args.head\n\tdata.id = args.id\n\t\n\tfor _, g in ipairs(args.g) do\n\t\tif legal_gender[g] then\n\
      \t\t\ttable.insert(data.genders, g)\n\t\t\ttable.insert(data.categories, \"Latin \" .. gender_names[g] .. \" nouns\")\n\t\telse\n\t\t\terror(\"Gender “\" .. g .. \"” is not an valid Latin gender.\")\n\t\tend\n\tend\n\n\tif args.indecl then\n\t\ttable.insert(data.inflections,\
      \ {label = glossary_link(\"indeclinable\")})\n\t\ttable.insert(data.categories, \"Latin indeclinable nouns\")\n\t\tfor _, g in ipairs(args.g) do\n\t\t\ttable.insert(data.categories, \"Latin \" .. gender_names[g] ..  \" indeclinable nouns\")\n\t\tend\n\t\
      else\n\t\tif #args.decl &gt; 1 then\n\t\t\ttable.insert(data.inflections, {label = 'variously declined'})\n\t\t\ttable.insert(data.categories, \"Latin nouns with multiple declensions\")\n\t\telseif #args.decl == 0 then\n\t\t\tif NAMESPACE == \"Template\"\
      \ then\n\t\t\t\ttable.insert(appendix, \"? declension\")\n\t\t\telse\n\t\t\t\terror(\"Please provide the declension class.\")\n\t\t\tend\n\t\tend\n\t\n\t\tfor _, decl_class in ipairs(args.decl) do\n\t\t\tif legal_declension[decl_class] then\n\t\t\t\ttable.insert(appendix,\
      \ \"[[Appendix:Latin \" .. decl_class .. \" declension|\" .. decl_class .. \" declension]]\")\n\t\t\t\tif decl_class ~= \"irregular\" then\n\t\t\t\t\ttable.insert(data.categories, \"Latin \" .. decl_class .. \" declension nouns\")\n\t\t\t\tend\n\t\t\t\t\
      \n\t\t\t\tfor _, g in ipairs(args.g) do\n\t\t\t\t\ttable.insert(data.categories, \"Latin \" .. gender_names[g] ..  \" nouns in the \" .. decl_class .. \" declension\")\n\t\t\t\tend\n\t\t\telse\n\t\t\t\terror(\"Declension “\" .. decl_class .. \"” is not\
      \ an legal Latin declension.\")\n\t\t\tend\n\t\tend\n\t\n\t\tif #args.gen == 0 then\n\t\t\ttable.insert(data.inflections, {label = \"no genitive\"})\n\t\t\ttable.insert(data.categories, \"Latin nouns without a genitive singular\")\n\t\telse\n\t\t\targs.gen.label\
      \ = \"genitive\"\n\t\t\tif suffix then\n\t\t\t\tfor i, g in ipairs(args.gen) do\n\t\t\t\t\targs.gen[i] = suffix .. g\n\t\t\t\tend\n\t\t\tend\n\t\t\ttable.insert(data.inflections, args.gen)\n\t\tend\n\tend\nend\n\npos_functions[\"proper nouns\"] = pos_functions[\"\
      nouns\"]\npos_functions[\"suffixes-noun\"] = pos_functions[\"nouns\"]\n\npos_functions[\"verbs\"] = function(class, args, data, infl_classes, appendix)\n\tparams = {\n\t\t[1] = {alias_of = 'head'},\n\t\t[2] = {alias_of = 'inf'},\n\t\t[3] = {alias_of =\
      \ 'perf'},\n\t\t[4] = {alias_of = 'sup'},\n\t\t[44] = {default = 'supine'},\n\t\thead = {list = true},\n\t\tinf = {list = true},\n\t\tperf = {list = true},\n\t\tsup = {list = true},\n\t\tpattern = {},\n\t\tc = {alias_of = 'conj'},\n\t\tconj = {},\n\t\t\
      id = {},\n\t}\n\tlocal args = require(\"Module:parameters\").process(args,params)\n\tdata.heads = args.head\n\tdata.id = args.id\n\tlocal conj = args.conj\n\tlocal pattern = args.pattern\n\t\n\targs.inf.label = \"present infinitive\"\n\targs.perf.label\
      \ = \"perfect active\"\n\targs.sup.label = args[44]\n\t\n\tfor i, array in ipairs({args.head, args.inf, args.perf, args.sup}) do\n\t\tfor j, param in ipairs(array) do\n\t\t\tif mw.ustring.gsub(param,\"^[*a-zA-ZĀāĒēĪīŌōŪūȲȳÄäËëÏïÖöÜü ]+$\",\"\") ~= \"\"\
      \ then\n\t\t\t\ttable.insert(data.categories,\"la-verb invalid parameters\")\n\t\t\tend\n\t\t\t\n\t\t\tif i == 3 then\n\t\t\t\tarray[j] = {term = mw.ustring.gsub(param,\" sum$\",\"\"), alt = param}\n\t\t\tend\n\t\tend\n\tend\n\t\n\ttable.insert(data.inflections,\
      \ args.inf)\n\tif #args.perf &gt; 0 then table.insert(data.inflections, args.perf) end\n\tif #args.sup &gt; 0 then table.insert(data.inflections, args.sup) end\n\t\n\tif #args.perf &gt; 0 and #args.sup == 0 then pattern = pattern or \"depon\" end\n\t\n\
      \tif conj == \"1\" then\n\t\ttable.insert(appendix, \"[[Appendix:Latin first conjugation|first conjugation]]\")\n\telseif conj == \"2\" then\n\t\ttable.insert(appendix, \"[[Appendix:Latin second conjugation|second conjugation]]\")\n\telseif conj == \"\
      3\" then\n\t\ttable.insert(appendix, \"[[Appendix:Latin third conjugation|third conjugation]]\")\n\telseif conj == \"io\" then\n\t\ttable.insert(appendix, \"[[Appendix:Latin third conjugation|third conjugation]] iō-variant\")\n\telseif conj == \"4\" then\n\
      \t\ttable.insert(appendix, \"[[Appendix:Latin fourth conjugation|fourth conjugation]]\")\n\telseif conj == \"irreg\" then --sum\n\t\ttable.insert(appendix, \"[[Appendix:Latin irregular verbs|irregular conjugation]]\")\n\telse\n\t\tif NAMESPACE == \"Template\"\
      \ then\n\t\t\ttable.insert(appendix, \"? declension\")\n\t\telse\n\t\t\ttable.insert(data.categories, \"Latin verbs without the conjugation in their headwords\")\n\t\tend\n\tend\n\t\n\tif pattern == \"impers\" then --decet\n\t\ttable.insert(appendix,\"\
      [[impersonal#English|impersonal]]\")\n\telseif pattern == \"impers-nopass\" then --advesperāscit\n\t\ttable.insert(appendix,\"[[impersonal#English|impersonal]]\")\n\t\ttable.insert(appendix,\"no [[passive#English|passive]]\")\n\telseif pattern == \"impers-depon\"\
      \ then\n\t\ttable.insert(appendix,\"[[impersonal#English|impersonal]]\")\n\t\ttable.insert(appendix,\"[[deponent#English|deponent]]\")\n\telseif pattern == \"depon\" then --dēmōlior\n\t\ttable.insert(appendix,\"[[deponent#English|deponent]]\")\n\telseif\
      \ pattern == \"semi-depon\" then --fido\n\t\ttable.insert(appendix,\"[[semi-deponent#English|semi-deponent]]\")\n\telseif pattern == \"depon-noperf\" then --calvor\n\t\ttable.insert(appendix,\"[[deponent#English|deponent]]\")\n\t\ttable.insert(appendix,\"\
      no [[perfect#English|perfect]]\")\n\telseif pattern == \"noperf\" then --īnsolēscō\n\t\ttable.insert(appendix,\"no [[perfect#English|perfect]]\")\n\telseif pattern == \"no-actv-perf\" then --interstinguō\n\t\ttable.insert(appendix,\"[[defective#English|defective]]\"\
      )\n\telseif pattern == \"no-pasv-perf\" then --ārēscō\n\t\ttable.insert(appendix,\"[[defective#English|defective]]\")\n\telseif pattern == \"nopass-noperf\" then --albēscō\n\t\ttable.insert(appendix,\"no [[perfect#English|perfect]] or [[supine#English|supine]]\
      \ forms\")\n\telseif pattern == \"nopass\" then --coacēscō\n\t\ttable.insert(appendix,\"no [[passive#English|passive]]\")\n\telseif pattern == \"pass-3only\" then --praefundō\n\t\ttable.insert(appendix,\"limited [[passive#English|passive]]\")\n\telseif\
      \ pattern == \"3only-nopass\" then --decet\n\t\ttable.insert(appendix,\"[[third person#English|third person]] only\")\n\t\ttable.insert(appendix,\"no [[passive#English|passive]]\")\n\telseif pattern == \"pass-impers\" then --abambulō\n\t\ttable.insert(appendix,\"\
      [[impersonal#English|impersonal]] in the passive\")\n\telseif pattern == \"perf-as-pres\" then --ōdī\n\t\ttable.insert(appendix,\"[[defective#English|defective]]\")\n\telseif pattern == \"def\" then --āiō\n\t\ttable.insert(appendix,\"[[defective#English|defective]]\"\
      )\n\telseif pattern == \"short-imp\" then --dīcō\n\t\ttable.insert(appendix,\"irregular short [[imperative#English|imperative]]\")\n\telseif pattern == \"facio\" then --faciō\n\t\ttable.insert(appendix,\"irregular [[passive voice#English|passive voice]]\"\
      )\n\telseif pattern == \"irreg\" then --ferō\n\t\ttable.insert(appendix,\"[[irregular#English|irregular]]\")\n\telseif pattern == \"noimp\" then --no example\n\t\t--I don't know what to do.\n\telseif pattern then\n\t\ttable.insert(data.categories, \"la-verb\
      \ invalid parameters\")\n\tend\nend\n\npos_functions[\"adjectives\"] = function(class, args, data, infl_classes, appendix)\n\tif class == \"1&amp;2\" or class == \"3-3E\" then\n\t\tpos_functions[\"adjectives-m-f-n\"](class, args, data, infl_classes, appendix)\n\
      \telseif class == \"3-1E\" then\n\t\tpos_functions[\"adjectives-mfn-gen\"](class, args, data, infl_classes, appendix)\n\telseif class == \"3-2E\" then\n\t\tpos_functions[\"adjectives-mf-n\"](class, args, data, infl_classes, appendix)\n\telseif class ==\
      \ \"comp\" then\n\t\tpos_functions[\"adjectives-comp\"](class, args, data, infl_classes, appendix)\n\telseif class == \"sup\" then\n\t\tpos_functions[\"adjectives-sup\"](class, args, data, infl_classes, appendix)\n\tend\nend\n\npos_functions[\"adjectives-m-f-n\"\
      ] = function(class, args, data, infl_classes, appendix)\n\tparams = {\n\t\t[1] = {alias_of = 'head'},\n\t\t[2] = {alias_of = 'f'},\n\t\t[3] = {alias_of = 'n'},\n\t\t[\"head\"] = {list = true, required = true},\n\t\t[\"f\"] = {list = true, required = true},\n\
      \t\t[\"n\"] = {list = true, required = true},\n\t\t[\"comp\"] = {list = true},\n\t\t[\"sup\"] = {list = true},\n\t\t[\"id\"] = {},\n\t}\n\tlocal args = require(\"Module:parameters\").process(args, params)\n\tdata.heads = args.head\n\tdata.id = args.id\n\
      \t\n\targs.f.label = \"feminine\"\n\targs.n.label = \"neuter\"\n\t\n\ttable.insert(data.inflections, args.f)\n\ttable.insert(data.inflections, args.n)\n\tif #args.comp &gt; 0 then\n\t\targs.comp.label = \"comparative\"\n\t\ttable.insert(data.inflections,\
      \ args.comp)\n\tend\n\tif #args.sup &gt; 0 then\n\t\targs.sup.label = \"superlative\"\n\t\ttable.insert(data.inflections, args.sup)\n\tend\n\t\n\tif class == \"1&amp;2\" then\n\t\ttable.insert(infl_classes, \"[[Appendix:Latin first declension|first]]\"\
      )\n\t\ttable.insert(infl_classes, \"[[Appendix:Latin second declension|second declension]]\")\n\telseif class == \"3-3E\" then\n\t\ttable.insert(infl_classes, \"[[Appendix:Latin third declension|third declension]]\")\n\tend\nend\n\npos_functions[\"adjectives-mfn-gen\"\
      ] = function(class, args, data, infl_classes, appendix)\n\tparams = {\n\t\t[1] = {alias_of = 'head'},\n\t\t[2] = {alias_of = 'gen'},\n\t\t[\"head\"] = {list = true, required = true},\n\t\t[\"gen\"] = {list = true, required = true},\n\t\t[\"comp\"] = {list\
      \ = true},\n\t\t[\"sup\"] = {list = true},\n\t\t[\"id\"] = {},\n\t}\n\tlocal args = require(\"Module:parameters\").process(args, params)\n\tdata.heads = args.head\n\tdata.id = args.id\n\t\n\targs.gen.label = \"genitive\"\n\t\n\ttable.insert(data.inflections,\
      \ args.gen)\n\t\n\tif #args.comp &gt; 0 then\n\t\targs.comp.label = \"comparative\"\n\t\ttable.insert(data.inflections, args.comp)\n\tend\n\tif #args.sup &gt; 0 then\n\t\targs.sup.label = \"superlative\"\n\t\ttable.insert(data.inflections, args.sup)\n\t\
      end\n\t\n\tif class == \"3-1E\" then\n\t\ttable.insert(infl_classes, \"[[Appendix:Latin third declension|third declension]]\")\n\tend\nend\n\npos_functions[\"adjectives-mf-n\"] = function(class, args, data, infl_classes, appendix)\n\tparams = {\n\t\t[1]\
      \ = {alias_of = 'head'},\n\t\t[2] = {alias_of = 'n'},\n\t\t[\"head\"] = {list = true, required = true},\n\t\t[\"n\"] = {list = true, required = true},\n\t\t[\"comp\"] = {list = true},\n\t\t[\"sup\"] = {list = true},\n\t\t[\"id\"] = {},\n\t}\n\tlocal args\
      \ = require(\"Module:parameters\").process(args, params)\n\tdata.heads = args.head\n\tdata.id = args.id\n\t\n\targs.n.label = \"neuter\"\n\t\n\ttable.insert(data.inflections, args.n)\n\t\n\tif #args.comp &gt; 0 then\n\t\targs.comp.label = \"comparative\"\
      \n\t\ttable.insert(data.inflections, args.comp)\n\tend\n\tif #args.sup &gt; 0 then\n\t\targs.sup.label = \"superlative\"\n\t\ttable.insert(data.inflections, args.sup)\n\tend\n\t\n\tif class == \"3-2E\" then\n\t\ttable.insert(infl_classes, \"[[Appendix:Latin\
      \ third declension|third declension]]\")\n\tend\nend\n\npos_functions[\"adjectives-comp\"] = function(class, args, data, infl_classes, appendix)\n\tparams = {\n\t\t[1] = {alias_of = 'head'},\n\t\t[2] = {alias_of = 'comp'},\n\t\t[\"head\"] = {list = true,\
      \ default = mw.title.getCurrentTitle().text},\n\t\t[\"comp\"] = {},\n\t\t[\"id\"] = {},\n\t}\n\tlocal args = require(\"Module:parameters\").process(args, params)\n\tdata.heads = args.head\n\tdata.id = args.id\n\ttable.insert(data.categories, \"Latin comparative\
      \ adjectives\")\n\ttable.insert(infl_classes, \"[[Appendix:Latin third declension|third declension]]\")\n\t\n\tlocal n = {label = \"neuter\"}\n\tfor _, head in ipairs(args.head) do\n\t\tlocal neuter = mw.ustring.gsub(head, \"or$\", \"us\")\n\t\ttable.insert(n,\
      \ neuter)\n\tend\n\t\n\ttable.insert(data.inflections, n)\n\t\n\tif args.comp then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/la-adj-comparative]]\n\t\trequire(\"Module:debug\").track(\"la-adj-comparative\")\n\tend\nend\n\npos_functions[\"adjectives-sup\"\
      ] = function(class, args, data, infl_classes, appendix)\n\tparams = {\n\t\t[1] = {alias_of = 'head'},\n\t\t[2] = {alias_of = 'sup'},\n\t\t[\"head\"] = {list = true, default = mw.title.getCurrentTitle().text},\n\t\t[\"sup\"] = {},\n\t\t[\"id\"] = {},\n\t\
      }\n\tlocal args = require(\"Module:parameters\").process(args, params)\n\tdata.heads = args.head\n\tdata.id = args.id\n\t\n\ttable.insert(data.categories, \"Latin superlative adjectives\")\n\ttable.insert(infl_classes, \"[[Appendix:Latin first declension|first]]\"\
      )\n\ttable.insert(infl_classes, \"[[Appendix:Latin second declension|second declension]]\")\n\t\n\tlocal f, n = {label = \"feminine\"}, {label = \"neuter\"}\n\tfor _, head in ipairs(args.head) do\n\t\tlocal stem = mw.ustring.gsub(head, \"us$\", \"\")\n\
      \t\ttable.insert(f, stem .. \"a\")\n\t\ttable.insert(n, stem .. \"um\")\n\tend\n\t\n\ttable.insert(data.inflections, f)\n\ttable.insert(data.inflections, n)\n\t\n\tif args.sup then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/la-adj-superlative]]\n\
      \t\trequire(\"Module:debug\").track(\"la-adj-superlative\")\n\tend\nend\n\npos_functions[\"adverbs\"] = function(class, args, data, infl_classes, appendix)\n\tparams = {\n\t\t[1] = {alias_of = 'head'},\n\t\t[2] = {alias_of = 'comp'},\n\t\t[3] = {alias_of\
      \ = 'sup'},\n\t\t[\"head\"] = {list = true, required = true},\n\t\t[\"comp\"] = {list = true},\n\t\t[\"sup\"] = {list = true},\n\t\t[\"id\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(args, params)\n\tdata.heads = args.head\n\
      \tdata.id = args.id\n\t\n\tif #args.comp &gt; 0 and args.comp[1] ~= \"-\" then\n\t\targs.comp.label = glossary_link(\"comparative\")\n\t\ttable.insert(data.inflections, args.comp)\n\t\tif #args.sup &gt; 0 and args.sup[1] ~= \"-\" then\n\t\t\targs.sup.label\
      \ = glossary_link(\"superlative\")\n\t\t\ttable.insert(data.inflections, args.sup)\n\t\telse\n\t\t\ttable.insert(data.inflections, {label = \"no [[Appendix:Glossary#superlative|superlative]]\"})\n\t\tend\n\t\ttable.insert(data.categories, \"Latin irregular\
      \ adverbs\")\n\telseif args.comp[1] == \"-\" then\n\t\ttable.insert(data.inflections, {label = \"not [[Appendix:Glossary#comparative|comparable]]\"})\n\t\ttable.insert(data.categories, \"Latin uncomparable adverbs\")\n\telse\n\t\tlocal comp = {label =\
      \ glossary_link(\"comparative\")}\n\t\tlocal sup = {label = glossary_link(\"superlative\")}\n\t\tfor _, head in ipairs(args.head) do\n\t\t\tlocal stem = nil\n\t\t\tfor _, suff in ipairs({\"iter\", \"nter\", \"ter\", \"er\", \"iē\", \"ē\", \"im\", \"ō\"\
      }) do\n\t\t\t\tstem = mw.ustring.match(head, \"(.*)\" .. suff .. \"$\")\n\t\t\t\tif stem ~= nil then\n\t\t\t\t\tif suff == \"nter\" then\n\t\t\t\t\t\tstem = stem .. \"nt\"\n\t\t\t\t\t\tsuff = \"er\"\n\t\t\t\t\tend\n\t\t\t\t\ttable.insert(comp, stem ..\
      \ \"ius\")\n\t\t\t\t\ttable.insert(sup, stem .. \"issimē\")\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\t\tif not stem then\n\t\t\t\terror(\"Unrecognized adverb type, recognized types are “-ē”, “-er”, “-ter”, “-iter”, “-im”, or “-ō” or specify irregular\
      \ forms or “-” if incomparable.\")\n\t\t\tend\n\t\tend\n\t\ttable.insert(data.inflections, comp)\n\t\tif args.sup[1] ~= '-' then\n\t\t\ttable.insert(data.inflections, sup)\n\t\telse\n\t\t\ttable.insert(data.inflections, {label = \"no [[Appendix:Glossary#superlative|superlative]]\"\
      })\n\t\t\ttable.insert(data.categories, \"Latin irregular adverbs\")\n\t\tend\n\tend\nend\n\nlocal prepositional_cases = {\n\tgenitive = true, accusative = true, ablative = true,\n}\npos_functions[\"prepositions\"] = function(class, args, data, infl_classes,\
      \ appendix, postscript)\n\tparams = {\n\t\t[1] = {list = true, required = true}, -- headword or cases\n\t\t[\"head\"] = {list = true},\n\t\t[\"id\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(args, params)\n\t\n\t-- Case names\
      \ are supplied in numbered arguments, optionally preceded by\n\t-- headwords.\n\tlocal cases = {}\n\twhile prepositional_cases[args[1][#args[1]]] do\n\t\ttable.insert(cases, 1, table.remove(args[1]))\n\tend\n\t\n\tfor i = 1, #cases do\n\t\tfor j = i +\
      \ 1, #cases do\n\t\t\tif cases[i] == cases[j] then\n\t\t\t\terror(\"Duplicate case\")\n\t\t\tend\n\t\tend\n\t\tlocal case = cases[i]\n\t\tlocal appendix_link = glossary_link(case)\n\t\tif i == 1 then\n\t\t\tappendix_link = \"+ \" .. appendix_link\n\t\t\
      end\n\t\ttable.insert(postscript, appendix_link)\n\t\ttable.insert(data.categories, \"Latin \" .. case .. \" prepositions\")\n\tend\n\t\n\tfor _, v in ipairs(args[1]) do\n\t\ttable.insert(args.head, 1, v)\n\tend\n\t\n\tdata.heads = args.head\n\tdata.id\
      \ = args.id\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:35.258Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ala-decl-3rd-N-I-pure&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=57266 t=1555362635147036
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1023'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:35 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 597717618, 656507856, 698005826
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="850715" pageid="850715" ns="10" title="Template:la-decl-3rd-N-I-pure"><revisions><rev user="Daniel Carrero" timestamp="2016-03-04T00:28:40Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="includeonly" xml:space="preserve">&lt;includeonly&gt;{{#invoke:la-noun|show|3|decl_type=N-I-pure}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:35.459Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ala-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=59529 t=1555362635339530
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:35 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1340.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 498760592, 570530909, 701968904
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4832880\" pageid=\"4832880\" ns=\"828\" title=\"Module:la-noun\"><revisions><rev user=\"Rua\" timestamp=\"2019-03-30T13:44:09Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal lang = require(\"Module:languages\").getByCode(\"la\")\nlocal m_links = require(\"Module:links\")\nlocal m_utilities = require(\"Module:utilities\")\n\
      local m_para = require(\"Module:parameters\")\n\nNAMESPACE = NAMESPACE or mw.title.getCurrentTitle().nsText\nPAGENAME = PAGENAME or mw.title.getCurrentTitle().text\n\nlocal decl = require(\"Module:la-noun/data\")\nlocal m_table = require(\"Module:la-noun/table\"\
      )\n\n-- Canonical order of cases\nlocal case_order = {\n\t\"nom_sg\",\n\t\"gen_sg\",\n\t\"dat_sg\",\n\t\"acc_sg\",\n\t\"abl_sg\",\n\t\"voc_sg\",\n\t\"loc_sg\",\n\t\"nom_pl\",\n\t\"gen_pl\",\n\t\"dat_pl\",\n\t\"acc_pl\",\n\t\"abl_pl\",\n\t\"voc_pl\",\n\t\
      \"loc_pl\"\n}\n\nlocal ligatures = {\n\t['Ae'] = 'Æ',\n\t['ae'] = 'æ',\n\t['Oe'] = 'Œ',\n\t['oe'] = 'œ',\n}\n\nlocal function process(data,args)\n\tlocal noteindex = 1\n\tlocal notes = {}\n\tlocal redlink = false\n\tif data.num == \"pl\" and NAMESPACE\
      \ == '' then\n\t\ttable.insert(data.categories, \"Latin pluralia tantum\")\n\telseif data.num == \"sg\" and NAMESPACE == '' then\n\t\ttable.insert(data.categories, \"Latin singularia tantum\")\n\tend\n\tfor _, key in ipairs(case_order) do\n\t\tif args[key]\
      \ or data.forms[key] then\n\t\t\tlocal user_specified = false\n\t\t\tif args[key] then\n\t\t\t\tval = args[key]\n\t\t\t\tuser_specified = true\n\t\t\telse\n\t\t\t\tval = data.forms[key]\n\t\t\tend\n\t\t\tif type(val) == \"string\" then\n\t\t\t\tval = mw.text.split(val,\"\
      /\")\n\t\t\tend\n\t\t\tif data.num == \"pl\" and key:find(\"sg\") then\n\t\t\t\tdata.forms[key] = \"\"\n\t\t\telseif data.num == \"sg\" and key:find(\"pl\") then\n\t\t\t\tdata.forms[key] = \"\"\n\t\t\telseif val == \"\" or val == {\"\"} or val[1] == \"\
      -\" or val[1] == \"—\" then\n\t\t\t\tdata.forms[key] = \"—\"\n\t\t\telse\n\t\t\t\tfor i,form in ipairs(val) do\n\t\t\t\t\tlocal word = data.prefix .. (data.n and mw.ustring.gsub(form,\"m$\",\"n\") or form) .. data.suffix\n\t\t\t\t\tif data.lig then\n\t\
      \t\t\t\t\tfor digraph, lig in pairs(ligatures) do\n\t\t\t\t\t\t\tword = mw.ustring.gsub(word, digraph, lig)\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tlocal accel = key\n\t\t\t\t\taccel = accel:gsub(\"_sg$\", \"|s\")\n\t\t\t\t\taccel = accel:gsub(\"\
      _pl$\", \"|p\")\n\t\t\t\t\t\n\t\t\t\t\tif data.notes[key .. i] and not user_specified then\n\t\t\t\t\t\tval[i] = m_links.full_link({lang = lang, term = word, accel = {form = accel, lemma = nil}}) .. '&lt;sup style=\"color: red\"&gt;' .. noteindex .. '&lt;/sup&gt;'\n\
      \t\t\t\t\t\ttable.insert(notes, '&lt;sup style=\"color: red\"&gt;' .. noteindex .. '&lt;/sup&gt;' .. data.notes[key .. i])\n\t\t\t\t\t\tnoteindex = noteindex+1\n\t\t\t\t\telse\n\t\t\t\t\t\tval[i] = m_links.full_link({lang = lang, term = word, accel = {form\
      \ = accel, lemma = nil}})\n\t\t\t\t\tend\n\t\t\t\t\tif not redlink and NAMESPACE == '' then\n\t\t\t\t\t\tlocal title = lang:makeEntryName(word)\n\t\t\t\t\t\tlocal t = mw.title.new(title)\n\t\t\t\t\t\tif t and not t.exists then\n\t\t\t\t\t\t\ttable.insert(data.categories,'Latin\
      \ nouns with red links in their declension tables')\n\t\t\t\t\t\t\tredlink = true\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\tdata.forms[key] = table.concat(val, \"&lt;br /&gt;\")\n\t\t\tend\n\t\tend\n\tend\n\tdata.footnote = table.concat(notes,\
      \ \"&lt;br /&gt;\") .. data.footnote\nend\n\nlocal function make_table(data)\n\tif data.num == \"sg\" then\n\t\treturn m_table.make_table_sg(data)\n\telseif data.num == \"pl\" then\n\t\treturn m_table.make_table_pl(data)\n\telse\n\t\treturn m_table.make_table(data)\n\
      \tend\nend\n\nfunction export.show(frame)\n\tlocal data = {\n\t\ttitle = \"\",\n\t\tfootnote = \"\",\n\t\tnum = \"\",\n\t\tloc = false,\n\t\tum = false,\n\t\tforms = {},\n\t\tnotes = {},\n\t\tcategories = {},\n\t\ttypes = {},\n\t}\n\t\n\tiparams = {\n\t\
      \t[1] = {required = true},\n\t\tdecl_type = {},\n\t\tnum = {},\n\t}\n\t\n\tlocal iargs = m_para.process(frame.args, iparams)\n\t\n\tif iargs.decl_type ~= \"\" and iargs.decl_type ~= nil then \n\t\tfor name, val in ipairs(mw.text.split(iargs.decl_type,\
      \ \"-\")) do\n\t\t\tdata.types[val] = true\n\t\tend\n\tend\n\t\n\tparams = {\n\t\t[1] = {required = true},\n\t\tnoun = {},\n\t\tnum = {},\n\t\tnom_sg = {},\n\t\tgen_sg = {},\n\t\tdat_sg = {},\n\t\tacc_sg = {},\n\t\tabl_sg = {},\n\t\tvoc_sg = {},\n\t\t\
      loc_sg = {},\n\t\tnom_pl = {},\n\t\tgen_pl = {},\n\t\tdat_pl = {},\n\t\tacc_pl = {},\n\t\tabl_pl = {},\n\t\tvoc_pl = {},\n\t\tloc_pl = {},\n\t\tloc = {type = \"boolean\"},\n\t\tum = {type = \"boolean\"},\n\t\tgenplum = {type = \"boolean\"},\n\t\tn = {type\
      \ = \"boolean\"},\n\t\tlig = {type = \"boolean\"},\n\t\tprefix = {},\n\t\tsuffix = {},\n\t\tfootnote = {},\n\t}\n\tif (iargs[1] == \"2\" and data.types.er) or iargs[1] == \"3\" then\n\t\tparams[2] = {}\n\tend\n\t\n\tlocal args = m_para.process(frame:getParent().args,\
      \ params)\n\t\n\tdata.num = iargs.num or args.num or \"\"\n\tdata.loc = args.loc\n\tdata.lig = args.lig\n\tdata.um = args.um or args.genplum\n\tdata.prefix = args.prefix or \"\"\n\tdata.suffix = args.suffix or \"\"\n\tdata.footnote = args.footnote or \"\
      \"\n\tdata.n = args.n and (data.suffix ~= \"\") -- Must have a suffix and n specified\n\t\n\tdecl[iargs[1]](data, args)\n\t\n\tprocess(data,args)\n\t\n\tif data.prefix .. data.suffix ~= \"\" then\n\t\ttable.insert(data.categories, \"Kenny's testing category\
      \ 6\")\n\tend\n\t\n\treturn make_table(data) .. m_utilities.format_categories(data.categories, lang)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:35.665Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ala-noun%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42643 t=1555362635538148
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:35 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 212903418, 840368827, 708509981
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4832903\" pageid=\"4832903\" ns=\"828\" title=\"Module:la-noun/data\"><revisions><rev user=\"Lowena\" timestamp=\"2019-04-05T03:52:06Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local decl = {}\n\nlocal lang = require(\"Module:languages\").getByCode(\"la\")\nlocal m_links = require(\"Module:links\")\nlocal m_utilities = require(\"Module:utilities\"\
      )\n\nNAMESPACE = NAMESPACE or mw.title.getCurrentTitle().nsText\nPAGENAME = PAGENAME or mw.title.getCurrentTitle().text\n\ndecl[\"1\"] = function(data, args)\n\tlocal title = {}\n\ttable.insert(title, \"[[Appendix:Latin first declension|First declension]]\"\
      )\n\t\n\tlocal stem = args[1]\n\t\n\tif not stem or stem == \"\" then\n\t\tif NAMESPACE ~= \"\" and NAMESPACE ~= \"Appendix\" then\n\t\t\tstem = \"{{{1}}}\"\n\t\telse\n\t\t\terror('Please provide a stem')\n\t\tend\n\tend\n\t\n\t-- normal 1st\n\tdata.forms[\"\
      nom_sg\"] = stem .. \"a\"\n\tdata.forms[\"gen_sg\"] = stem .. \"ae\"\n\tdata.forms[\"dat_sg\"] = stem .. \"ae\"\n\tdata.forms[\"acc_sg\"] = stem .. \"am\"\n\tdata.forms[\"abl_sg\"] = stem .. \"ā\"\n\tdata.forms['voc_sg'] = stem .. \"a\" \n\t\n\tdata.forms[\"\
      nom_pl\"] = stem .. \"ae\"\n\tdata.forms[\"gen_pl\"] = stem .. \"ārum\"\n\tdata.forms[\"dat_pl\"] = stem .. \"īs\"\n\tdata.forms[\"acc_pl\"] = stem .. \"ās\"\n\tdata.forms[\"abl_pl\"] = stem .. \"īs\"\n\tdata.forms[\"voc_pl\"] = stem .. \"ae\"\n\t\n\t\
      -- abus\n\tif data.types.abus then\n\t\ttable.insert(title, \"dative/ablative plural in ''-ābus''\")\n\t\t\t\n\t\tdata.forms[\"dat_pl\"] = stem .. \"ābus\"\n\t\tdata.forms[\"abl_pl\"] = stem .. \"ābus\"\n\t\t\n\t-- am\n\telseif data.types.am then\n\t\t\
      table.insert(title, \"nominative/vocative singular in ''-ām''\")\n\t\t\n\t\tdata.forms[\"nom_sg\"] = stem .. \"ām\"\n\t\tdata.forms[\"acc_sg\"] = stem .. \"ām\"\n\t\tdata.forms[\"voc_sg\"] = stem .. \"ām\"\n\t\tdata.forms['abl_sg'] = {stem .. \"ām\", stem\
      \ .. \"ā\"}\n\t\t\n\t-- all Greek\n\telseif data.types.Greek then\n\t\n\t\t--Greek Ma\n\t\tif data.types.Ma then\n\t\t\ttable.insert(title, \"masculine Greek type with nominative singular in ''-ās''\")\n\t\t\t\n\t\t\tdata.forms[\"nom_sg\"] = stem .. \"\
      ās\"\n\t\t\tdata.forms[\"acc_sg\"] = stem .. \"ān\"\n\t\t\tdata.forms['voc_sg'] = stem .. \"ā\"\n\t\t\t\n\t\t-- Greek Me\n\t\telseif data.types.Me then\n\t\t\ttable.insert(title, \"masculine Greek type with nominative singular in ''-ēs''\")\n\t\t\t\n\t\
      \t\tdata.forms[\"nom_sg\"] = stem .. \"ēs\"\n\t\t\tdata.forms[\"acc_sg\"] = stem .. \"ēn\"\n\t\t\tdata.forms[\"abl_sg\"] = stem .. \"ē\"\n\t\t\tdata.forms['voc_sg'] = stem .. \"ē\"\n\t\t\t\n\t\t-- Greek\n\t\telse\n\t\t\ttable.insert(title, \"Greek type\"\
      )\n\t\t\t\n\t\t\tdata.forms[\"nom_sg\"] = stem .. \"ē\"\n\t\t\tdata.forms[\"gen_sg\"] = stem .. \"ēs\"\n\t\t\tdata.forms[\"acc_sg\"] = stem .. \"ēn\"\n\t\t\tdata.forms[\"abl_sg\"] = stem .. \"ē\"\n\t\t\tdata.forms['voc_sg'] = stem .. \"ē\"\n\t\tend\n\t\
      end\n\t\n\t-- with locative\n\tif data.loc then\n\t\ttable.insert(title, \"with locative\")\n\t\t\n\t\tdata.forms[\"loc_sg\"] = stem .. \"ae\"\n\t\t\n\t\tdata.forms[\"loc_pl\"] = stem .. \"īs\"\n\tend\n\t\n\tif data.n then\n\t\ttable.insert(title, \"with\
      \ ''m'' → ''n'' in compounds\")\n\tend\n\t\n\tdata.title = table.concat(title, \", \") .. \".\"\n\t\n\ttable.insert(data.categories, \"Latin first declension nouns\")\nend\n\ndecl[\"2\"] = function(data, args)\n\tlocal title = {}\n\ttable.insert(title,\
      \ {\"[[Appendix:Latin second declension|Second declension]]\"})\n\t\n\tlocal stem1 = args[1]\n\tlocal stem2 = args[2] or stem1; if stem2 == \"\" then stem2 = stem1 end\n\t\n\tif not stem1 or stem1 == \"\" then\n\t\tif NAMESPACE ~= \"\" and NAMESPACE ~=\
      \ \"Appendix\" then\n\t\t\tstem1 = \"{{{1}}}\"\n\t\t\tstem2 = \"{{{2}}}\"\n\t\telse\n\t\t\terror('Please provide a stem')\n\t\tend\n\tend\n\n\t-- normal 2nd\n\tdata.forms[\"nom_sg\"] = stem1 .. \"us\"\n\tdata.forms[\"gen_sg\"] = stem1 .. \"ī\"\n\tdata.forms[\"\
      dat_sg\"] = stem1 .. \"ō\"\n\tdata.forms[\"acc_sg\"] = stem1 .. \"um\"\n\tdata.forms[\"abl_sg\"] = stem1 .. \"ō\"\n\tdata.forms['voc_sg'] = stem1 .. \"e\" \n\t\n\tdata.forms[\"nom_pl\"] = stem1 .. \"ī\"\n\tdata.forms[\"gen_pl\"] = stem1 .. \"ōrum\"\n\t\
      data.forms[\"dat_pl\"] = stem1 .. \"īs\"\n\tdata.forms[\"acc_pl\"] = stem1 .. \"ōs\"\n\tdata.forms[\"abl_pl\"] = stem1 .. \"īs\"\n\tdata.forms[\"voc_pl\"] = stem1 .. \"ī\"\n\t\n\t-- all neuter\n\tif data.types.N then\n\t\t\n\t\tdata.forms[\"nom_sg\"] =\
      \ stem1 .. \"um\"\n\t\tdata.forms[\"voc_sg\"] = stem1 .. \"um\"\n\t\t\n\t\tdata.forms[\"nom_pl\"] = stem1 .. \"a\"\n\t\tdata.forms[\"acc_pl\"] = stem1 .. \"a\"\n\t\tdata.forms[\"voc_pl\"] = stem1 .. \"a\"\n\t\t\n\t\t-- neuter ium\n\t\tif data.types.ium\
      \ then\n\t\t\tdata.forms[\"nom_sg\"] = stem1 .. \"ium\"\n\t\t\tdata.forms[\"gen_sg\"] = {stem1 .. \"iī\", stem1 .. \"ī\"}\n\t\t\tdata.forms[\"dat_sg\"] = stem1 .. \"iō\"\n\t\t\tdata.forms[\"acc_sg\"] = stem1 .. \"ium\"\n\t\t\tdata.forms[\"abl_sg\"] = stem1\
      \ .. \"iō\"\n\t\t\tdata.forms['voc_sg'] = stem1 .. \"ium\" \n\t\t\n\t\t\tdata.forms[\"nom_pl\"] = stem1 .. \"ia\"\n\t\t\tdata.forms[\"gen_pl\"] = stem1 .. \"iōrum\"\n\t\t\tdata.forms[\"dat_pl\"] = stem1 .. \"iīs\"\n\t\t\tdata.forms[\"acc_pl\"] = stem1\
      \ .. \"ia\"\n\t\t\tdata.forms[\"abl_pl\"] = stem1 .. \"iīs\"\n\t\t\tdata.forms[\"voc_pl\"] = stem1 .. \"ia\"\n\t\t\t\n\t\t\tdata.notes[\"gen_sg2\"] = \"Found in older Latin (until the Augustan Age).\"\n\t\t\n\t\t-- neuter Greek\n\t\telseif data.types.Greek\
      \ then\n\t\t\ttable.insert(title, \"Greek type\")\n\t\t\t\n\t\t\tdata.forms[\"nom_sg\"] = stem1 .. \"on\"\n\t\t\tdata.forms[\"acc_sg\"] = stem1 .. \"on\"\n\t\t\tdata.forms[\"voc_sg\"] = stem1 .. \"on\"\n\t\t\t\n\t\t-- neuter us\n\t\telseif data.types.us\
      \ then\n\t\t\ttable.insert(title, \"nominative/accusative/vocative in ''-us''\")\n\t\t\t\n\t\t\tdata.forms[\"nom_sg\"] = stem1 .. \"us\"\n\t\t\tdata.forms[\"acc_sg\"] = stem1 .. \"us\"\n\t\t\tdata.forms[\"voc_sg\"] = stem1 .. \"us\"\n\t\t\t\n\t\t\tdata.forms[\"\
      nom_pl\"] = stem1 .. \"ī\"\n\t\t\tdata.forms[\"acc_pl\"] = stem1 .. \"ōs\"\n\t\t\tdata.forms[\"voc_pl\"] = stem1 .. \"ī\"\n\t\tend\n\t\n\t-- er\n\telseif data.types.er then\n\t\tif mw.ustring.match(stem1, \"[aiouy]r$\") then\n\t\t\ttable.insert(title,\
      \ \"nominative singular in ''-r''\")\n\t\telse\t\n\t\t\ttable.insert(title, \"nominative singular in ''-er''\")\n\t\tend\t\n\t\t\n\t\tdata.forms[\"nom_sg\"] = stem1\n\t\tdata.forms[\"gen_sg\"] = stem2 .. \"ī\"\n\t\tdata.forms[\"dat_sg\"] = stem2 .. \"ō\
      \"\n\t\tdata.forms[\"acc_sg\"] = stem2 .. \"um\"\n\t\tdata.forms[\"abl_sg\"] = stem2 .. \"ō\"\n\t\tdata.forms['voc_sg'] = stem1\n\t\n\t\tdata.forms[\"nom_pl\"] = stem2 .. \"ī\"\n\t\tdata.forms[\"gen_pl\"] = stem2 .. \"ōrum\"\n\t\tdata.forms[\"dat_pl\"\
      ] = stem2 .. \"īs\"\n\t\tdata.forms[\"acc_pl\"] = stem2 .. \"ōs\"\n\t\tdata.forms[\"abl_pl\"] = stem2 .. \"īs\"\n\t\tdata.forms[\"voc_pl\"] = stem2 .. \"ī\"\n\t\n\t-- ius\n\telseif data.types.ius then\n\t\tdata.forms[\"nom_sg\"] = stem1 .. \"ius\"\n\t\t\
      data.forms[\"gen_sg\"] = {stem1 .. \"iī\", stem1 .. \"ī\"}\n\t\tdata.forms[\"dat_sg\"] = stem1 .. \"iō\"\n\t\tdata.forms[\"acc_sg\"] = stem1 .. \"ium\"\n\t\tdata.forms[\"abl_sg\"] = stem1 .. \"iō\"\n\t\tdata.forms['voc_sg'] = stem1 .. \"ī\" \n\t\n\t\t\
      data.forms[\"nom_pl\"] = stem1 .. \"iī\"\n\t\tdata.forms[\"gen_pl\"] = stem1 .. \"iōrum\"\n\t\tdata.forms[\"dat_pl\"] = stem1 .. \"iīs\"\n\t\tdata.forms[\"acc_pl\"] = stem1 .. \"iōs\"\n\t\tdata.forms[\"abl_pl\"] = stem1 .. \"iīs\"\n\t\tdata.forms[\"voc_pl\"\
      ] = stem1 .. \"iī\"\n\t\t\n\t\tdata.notes[\"gen_sg2\"] = \"Found in older Latin (until the Augustan Age).\"\n\t\t\n\t-- Greek\n\telseif data.types.Greek then\n\t\ttable.insert(title, \"Greek type\")\n\t\t\n\t\tdata.forms[\"nom_sg\"] = stem1 .. \"os\"\n\
      \t\tdata.forms[\"acc_sg\"] = {stem1 .. \"on\"}\n\tend\n\t\n\t-- with -um genitive plural\n\tif data.um then\n\t\ttable.insert(title, \"with contracted genitive plural\")\n\t\tdata.notes[\"gen_pl2\"] = \"Contraction found in poetry.\"\n\t\tif data.types.ius\
      \ or  data.types.ium then\n\t\t\tdata.forms[\"gen_pl\"] = {stem2 .. \"iōrum\", stem2 .. \"ium\"}\n\t\telse\n\t\t\tdata.forms[\"gen_pl\"] = {stem2 .. \"ōrum\", stem2 .. \"um\"}\n\t\tend\n\tend\n\t\n\t-- with locative\n\tif data.loc then\n\t\ttable.insert(title,\
      \ \"with locative\")\n\t\tif data.types.ius or data.types.ium then\n\t\t\tdata.forms[\"loc_sg\"] = stem2 .. \"iī\"\n\t\t\n\t\t\tdata.forms[\"loc_pl\"] = stem2 .. \"iīs\"\n\t\telse\n\t\t\tdata.forms[\"loc_sg\"] = stem2 .. \"ī\"\n\t\t\n\t\t\tdata.forms[\"\
      loc_pl\"] = stem2 .. \"īs\"\n\t\tend\n\tend\n\n\tif data.n then\n\t\ttable.insert(title, \"with ''m'' → ''n'' in compounds\")\n\tend\n\t\n\ttitle[1] = table.concat(title[1], \" \")\n\t\n\tdata.title = table.concat(title, \", \") .. \".\"\n\t\n\ttable.insert(data.categories,\
      \ \"Latin second declension nouns\")\nend\n\ndecl[\"3\"] = function(data, args)\n\tlocal title = {}\n\ttable.insert(title, {\"[[Appendix:Latin third declension|Third declension]]\"})\n\t\n\tlocal stem1 = args[1]\n\tlocal stem2 = args[2] or \"\"\n\t\n\t\
      if stem2 == \"\" then\n\t\tif not data.types.on and not data.types.er and not data.types.polis then\n\t\t\tstem2 = require(\"Module:la-utilities\").make_stem2(stem1)\n\t\tend\n\telse\n\t\ttable.insert(data.categories, \"Kenny's testing category\")\n\t\
      end\n\t\n\tstem2 = stem2 == \"\" and stem1 or stem2\n\t\n\tif not stem1 or stem1 == \"\" then\n\t\tif NAMESPACE ~= \"\" and NAMESPACE ~= \"Appendix\" then\n\t\t\tstem1 = \"{{{1}}}\"\n\t\t\tstem2 = \"{{{2}}}\"\n\t\telse\n\t\t\terror('Please provide a stem')\n\
      \t\tend\n\tend\n\t\n\t--normal 3rd\n\tdata.forms[\"nom_sg\"] = stem1\n\tdata.forms[\"gen_sg\"] = stem2 .. \"is\"\n\tdata.forms[\"dat_sg\"] = stem2 .. \"ī\"\n\tdata.forms[\"acc_sg\"] = stem2 .. \"em\"\n\tdata.forms[\"abl_sg\"] = stem2 .. \"e\"\n\tdata.forms[\"\
      voc_sg\"] = stem1\n\t\n\tdata.forms[\"nom_pl\"] = stem2 .. \"ēs\"\n\tdata.forms[\"gen_pl\"] = stem2 .. \"um\"\n\tdata.forms[\"dat_pl\"] = stem2 .. \"ibus\"\n\tdata.forms[\"acc_pl\"] = stem2 .. \"ēs\"\n\tdata.forms[\"abl_pl\"] = stem2 .. \"ibus\"\n\tdata.forms[\"\
      voc_pl\"] = stem2 .. \"ēs\"\n\t\n\t--with acc.pl. īs variation\n\tif data.types.is then\n\t\n\t\tdata.forms[\"acc_pl\"] = {stem2 .. \"ēs\", \"[[\" .. stem2 .. \"īs]]\"}\n\t\n\t-- all neuter\n\telseif data.types.N then\n\t\ttable.insert(title[1], \"neuter\"\
      )\n\t\t\n\t\tdata.forms[\"acc_sg\"] = stem1\n\t\t\n\t\t-- neuter I stem\n\t\tif data.types.I then\n\t\t\t\n\t\t\t-- pure variety\n\t\t\tif data.types.pure then\n\t\t\t\ttable.insert(title[1], \"“pure” i-stem\")\n\t\t\t\tdata.forms[\"abl_sg\"] = stem2 ..\
      \ \"ī\"\n\t\t\t\t\n\t\t\t\tdata.forms[\"nom_pl\"] = stem2 .. \"ia\"\n\t\t\t\tdata.forms[\"gen_pl\"] = stem2 .. \"ium\"\n\t\t\t\tdata.forms[\"acc_pl\"] = stem2 .. \"ia\"\n\t\t\t\tdata.forms[\"voc_pl\"] = stem2 .. \"ia\"\n\t\t\t\n\t\t\t-- normal variety\n\
      \t\t\telse\n\t\t\t\ttable.insert(title[1], \"i-stem\")\n\t\t\t\tdata.forms[\"nom_pl\"] = stem2 .. \"a\"\n\t\t\t\tdata.forms[\"gen_pl\"] = {stem2 .. \"ium\", stem2 .. \"um\"}\n\t\t\t\tdata.forms[\"acc_pl\"] = stem2 .. \"a\"\n\t\t\t\tdata.forms[\"voc_pl\"\
      ] = stem2 .. \"a\"\n\t\t\tend\n\t\t\n\t\t-- normal neuter\n\t\telse\n\t\t\tdata.forms[\"nom_pl\"] = stem2 .. \"a\"\n\t\t\tdata.forms[\"acc_pl\"] = stem2 .. \"a\"\n\t\t\tdata.forms[\"voc_pl\"] = stem2 .. \"a\"\n\t\tend\n\t\t\n\t-- I stem\n\telseif data.types.I\
      \ then\n\t\ttable.insert(title[1], \"i-stem\")\n\t\t\n\t\tdata.forms[\"gen_pl\"] = stem2 .. \"ium\"\n\t\t\n\t-- navis and ignis\n\telseif data.types.navis or data.types.ignis then\n\t\n\t\t-- just navis\n\t\tif data.types.navis then\n\t\t\ttable.insert(title,\
      \ \"alternative accusative singular in ''-im''\")\n\t\t\t\n\t\t\tdata.forms[\"acc_sg\"] = {stem2 .. \"em\", stem2 .. \"im\"}\n\t\tend\n\t\tif data.num == \"sg\" then\n\t\t\ttable.insert(title, \"alternative ablative singular in ''-ī''\")\n\t\telseif data.num\
      \ == \"pl\" then\n\t\t\ttable.insert(title, \"alternative accusative plural in ''-īs''\")\n\t\telse\n\t\t\ttable.insert(title, \"alternative ablative singular in ''-ī'' and accusative plural in ''-īs''\")\n\t\tend\n\t\tdata.forms[\"abl_sg\"] = {stem2 ..\
      \ \"e\", stem2 .. \"ī\"}\n\t\t\n\t\tdata.forms[\"gen_pl\"] = stem2 .. \"ium\"\n\t\tdata.forms[\"acc_pl\"] = {stem2 .. \"ēs\", stem2 .. \"īs\"}\n\t\t\n\t-- all Greek\n\telseif data.types.Greek then\n\t\ttable.insert(title, \"Greek type\")\n\t\t\n\t\t--\
      \ Greek er\n\t\tif data.types.er then\n\t\t\ttable.insert(title, \"nominative singular in ''-ēr''\")\n\t\t\n\t\t\tdata.forms[\"nom_sg\"] = stem1 .. \"ēr\"\n\t\t\tdata.forms[\"gen_sg\"] = stem1 .. \"eris\"\n\t\t\tdata.forms[\"dat_sg\"] = stem1 .. \"erī\"\
      \n\t\t\tdata.forms[\"acc_sg\"] = {stem1 .. \"era\", stem1 .. \"erem\"}\n\t\t\tdata.forms[\"abl_sg\"] = stem1 .. \"ere\"\n\t\t\tdata.forms[\"voc_sg\"] = stem1 .. \"ēr\"\n\t\t\n\t\t\tdata.forms[\"nom_pl\"] = stem1 .. \"erēs\"\n\t\t\tdata.forms[\"gen_pl\"\
      ] = stem1 .. \"erum\"\n\t\t\tdata.forms[\"dat_pl\"] = stem1 .. \"eribus\"\n\t\t\tdata.forms[\"acc_pl\"] = stem1 .. \"erēs\"\n\t\t\tdata.forms[\"abl_pl\"] = stem1 .. \"eribus\"\n\t\t\tdata.forms[\"voc_pl\"] = stem1 .. \"erēs\"\n\t\t\t\n\t\t-- Greek on\n\
      \t\telseif data.types.on then\n\t\t\ttable.insert(title, \"nominative singular in ''-ōn''. Alternative genitive singular and plural and accusative plural may be attested or may be reconstructed by lexicographers due to ''\" .. stem1 .. \"ōn'' having been\
      \ imported from the Ancient Greek masculine present active participle\")\n\t\t\t\n\t\t\tdata.forms[\"nom_sg\"] = stem1 .. \"ōn\"\n\t\t\tdata.forms[\"gen_sg\"] = {stem1 .. \"ontis\", stem1 .. \"ontos\"}\n\t\t\tdata.forms[\"dat_sg\"] = stem1 .. \"ontī\"\n\
      \t\t\tdata.forms[\"acc_sg\"] = stem1 .. \"onta\"\n\t\t\tdata.forms[\"abl_sg\"] = stem1 .. \"onte\"\n\t\t\tdata.forms[\"voc_sg\"] = stem1 .. \"ōn\"\n\t\t\n\t\t\tdata.forms[\"nom_pl\"] = stem1 .. \"ontēs\"\n\t\t\tdata.forms[\"gen_pl\"] = {stem1 .. \"ontum\"\
      , stem1 .. \"ontium\"}\n\t\t\tdata.forms[\"dat_pl\"] = stem1 .. \"ontibus\"\n\t\t\tdata.forms[\"acc_pl\"] = {stem1 .. \"ontēs\", stem1 .. \"ontās\"}\n\t\t\tdata.forms[\"abl_pl\"] = stem1 .. \"ontibus\"\n\t\t\tdata.forms[\"voc_pl\"] = stem1 .. \"ontēs\"\
      \n\t\t\n\t\t-- Greek s\n\t\telseif data.types.s then\n\t\t\tif stem1 == stem2 then\n\t\t\t\tstem2 = \"\"\n\t\t\tend\n\t\t\tdata.forms[\"nom_sg\"] = stem1 .. \"s\"\n\t\t\tdata.forms[\"gen_sg\"] = stem1 .. stem2 .. \"os\"\n\t\t\tdata.forms[\"dat_sg\"] =\
      \ stem1 .. stem2 .. \"i\"\n\t\t\tif stem2 ~= \"\" then\n\t\t\t\tdata.forms[\"acc_sg\"] = stem1 .. stem2 .. \"a\"\n\t\t\telse\n\t\t\t\tdata.forms[\"acc_sg\"] = stem1 .. \"n\"\n\t\t\tend\n\t\t\tdata.forms[\"abl_sg\"] = stem1 .. stem2 .. \"e\"\n\t\t\t\n\t\
      \t\tdata.forms[\"nom_pl\"] = stem1 .. stem2 .. \"es\"\n\t\t\tdata.forms[\"gen_pl\"] = stem1 .. stem2 .. \"um\"\n\t\t\tdata.forms[\"dat_pl\"] = stem1 .. stem2 .. \"ibus\"\n\t\t\tif stem2 then\n\t\t\t\tdata.forms[\"acc_pl\"] = stem1 .. stem2 .. \"as\"\n\t\
      \t\telse\n\t\t\t\tdata.forms[\"acc_pl\"] = stem1 .. \"es\"\n\t\t\tend\n\t\t\tdata.forms[\"abl_pl\"] = stem1 .. stem2 .. \"ibus\"\n\t\t\tdata.forms[\"voc_pl\"] = stem1 .. stem2 .. \"es\"\n\t\t\n\t\t-- normal Greek\n\t\telse\n\t\t\tdata.forms[\"gen_sg\"\
      ] = stem2 .. \"os\"\n\t\t\tdata.forms[\"acc_sg\"] = stem2 .. \"a\"\n\t\t\t\n\t\t\tdata.forms[\"nom_pl\"] = stem2 .. \"es\"\n\t\t\tdata.forms[\"acc_pl\"] = stem2 .. \"as\"\n\t\t\tdata.forms[\"voc_pl\"] = stem2 .. \"es\"\n\t\tend\n\t\n\t-- polis\n\telseif\
      \ data.types.polis then\n\t\ttable.insert(title, \"with locative\")\n\t\t\n\t\tdata.forms[\"nom_sg\"] = stem1 .. \"polis\"\n\t\tdata.forms[\"gen_sg\"] = stem1 .. \"polis\"\n\t\tdata.forms[\"dat_sg\"] = stem1 .. \"polī\"\n\t\tdata.forms[\"acc_sg\"] = {stem1\
      \ .. \"polim\", stem1 .. \"polin\"}\n\t\tdata.forms[\"abl_sg\"] = stem1 .. \"polī\"\n\t\tdata.forms[\"voc_sg\"] = {stem1 .. \"polis\", stem1 .. \"polī\"}\n\t\tdata.forms[\"loc_sg\"] = stem1 .. \"polī\"\n\t\t\n\t\t-- Ignore normal locative logic\n\t\tdata.loc\
      \ = false\n\tend\n\t\n\t-- with locative\n\tif data.loc then\n\t\ttable.insert(title, \"with locative\")\n\t\t\n\t\t-- neuter or I stem\n\t\tif data.types.I or data.types.N then\n\t\t\tdata.forms[\"loc_sg\"] = stem2 .. \"ī\"\n\t\t\t\n\t\t\tdata.forms[\"\
      loc_pl\"] = stem2 .. \"ibus\"\n\t\t\t\n\t\t-- Greek\n\t\telseif data.types.Greek then\n\t\t\t-- Greek s\n\t\t\tif data.types.s then\n\t\t\t\tdata.forms[\"loc_sg\"] = stem1 .. stem2 .. \"e\"\n\t\t\t\t\n\t\t\t\tdata.forms[\"loc_pl\"] = stem1 .. stem2 ..\
      \ \"ibus\"\n\t\t\t-- Greek\n\t\t\telse\n\t\t\t\tdata.forms[\"loc_sg\"] = stem2 .. \"e\"\n\t\t\t\t\n\t\t\t\tdata.forms[\"loc_pl\"] = stem2 .. \"ēs\"\n\t\t\tend\n\t\t-- normal\n\t\telse\n\t\t\tdata.forms[\"loc_sg\"] = stem2 .. \"e\"\n\t\t\t\n\t\t\tdata.forms[\"\
      loc_pl\"] = stem2 .. \"ibus\"\n\t\tend\n\tend\n\t\n\tif data.n then\n\t\ttable.insert(title, \"with ''m'' → ''n'' in compounds\")\n\tend\n\t\n\ttitle[1] = table.concat(title[1], \" \")\n\t\n\tdata.title = table.concat(title, \", \") .. \".\"\n\t\n\ttable.insert(data.categories,\
      \ \"Latin third declension nouns\")\nend\n\ndecl[\"4\"] = function(data, args)\n\tlocal title = {}\n\ttable.insert(title, {\"[[Appendix:Latin fourth declension|Fourth declension]]\"})\n\t\n\tlocal stem = args[1]\n\t\n\tif not stem or stem == \"\" then\n\
      \t\tif NAMESPACE ~= \"\" and NAMESPACE ~= \"Appendix\" then\n\t\t\tstem = \"{{{1}}}\"\n\t\telse\n\t\t\terror('Please provide a stem')\n\t\tend\n\tend\n\n\t-- normal 4th\n\tdata.forms[\"nom_sg\"] = stem .. \"us\"\n\tdata.forms[\"gen_sg\"] = stem .. \"ū\
      s\"\n\tdata.forms[\"dat_sg\"] = stem .. \"uī\"\n\tdata.forms[\"acc_sg\"] = stem .. \"um\"\n\tdata.forms[\"abl_sg\"] = stem .. \"ū\"\n\tdata.forms['voc_sg'] = stem .. \"us\" \n\t\n\tdata.forms[\"nom_pl\"] = stem .. \"ūs\"\n\tdata.forms[\"gen_pl\"] = stem\
      \ .. \"uum\"\n\tdata.forms[\"dat_pl\"] = stem .. \"ibus\"\n\tdata.forms[\"acc_pl\"] = stem .. \"ūs\"\n\tdata.forms[\"abl_pl\"] = stem .. \"ibus\"\n\tdata.forms[\"voc_pl\"] = stem .. \"ūs\"\n\t\n\t-- neuter\n\tif data.types.N then\n\t\ttable.insert(title[1],\
      \ \"neuter\")\n\t\t\n\t\tdata.forms[\"nom_sg\"] = stem .. \"ū\"\n\t\tdata.forms[\"dat_sg\"] = stem .. \"ū\"\n\t\tdata.forms[\"acc_sg\"] = stem .. \"ū\"\n\t\tdata.forms['voc_sg'] = stem .. \"ū\" \n\t\n\t\tdata.forms[\"nom_pl\"] = stem .. \"ua\"\n\t\tdata.forms[\"\
      acc_pl\"] = stem .. \"ua\"\n\t\tdata.forms[\"voc_pl\"] = stem .. \"ua\"\n\tend\n\t\t\n\t-- ubus\n\tif data.types.ubus then\n\t\ttable.insert(title, \"dative/ablative plural in ''-ubus''\")\n\t\t\n\t\tdata.forms[\"dat_pl\"] = stem .. \"ubus\"\n\t\tdata.forms[\"\
      abl_pl\"] = stem .. \"ubus\"\n\tend\n\t\n\t-- with locative\n\tif data.loc then\n\t\ttable.insert(title, \"with locative\")\n\t\t\n\t\tdata.forms[\"loc_sg\"] = stem .. \"ū\"\n\t\t\n\t\t--ubus\n\t\tif data.types.ubus then\n\t\t\tdata.forms[\"loc_pl\"] =\
      \ stem .. \"ubus\"\n\t\t\n\t\t-- normal locative\n\t\telse\n\t\t\tdata.forms[\"loc_pl\"] = stem .. \"ibus\"\n\t\tend\n\tend\n\t\n\tif data.n then\n\t\ttable.insert(title, \"with ''m'' → ''n'' in compounds\")\n\tend\n\t\n\ttitle[1] = table.concat(title[1],\
      \ \" \")\n\t\n\tdata.title = table.concat(title, \", \") .. \".\"\n\t\n\ttable.insert(data.categories, \"Latin fourth declension nouns\")\nend\n\ndecl[\"5\"] = function(data, args)\n\tlocal title = {}\n\ttable.insert(title, \"[[Appendix:Latin fifth declension|Fifth\
      \ declension]]\")\n\t\n\tlocal stem = args[1]\n\t\n\tif not stem or stem == \"\" then\n\t\tif NAMESPACE ~= \"\" and NAMESPACE ~= \"Appendix\" then\n\t\t\tstem = \"{{{1}}}\"\n\t\telse\n\t\t\terror('Please provide a stem')\n\t\tend\n\tend\n\n\t-- ies\n\t\
      if data.types.i then\n\t\tstem = stem .. \"i\"\n\tend\n\t\n\tdata.forms[\"nom_sg\"] = stem .. \"ēs\"\n\tdata.forms[\"gen_sg\"] = stem .. \"eī\"\n\tdata.forms[\"dat_sg\"] = stem .. \"eī\"\n\tdata.forms[\"acc_sg\"] = stem .. \"em\"\n\tdata.forms[\"abl_sg\"\
      ] = stem .. \"ē\"\n\tdata.forms['voc_sg'] = stem .. \"ēs\" \n\t\n\tdata.forms[\"nom_pl\"] = stem .. \"ēs\"\n\tdata.forms[\"gen_pl\"] = stem .. \"ērum\"\n\tdata.forms[\"dat_pl\"] = stem .. \"ēbus\"\n\tdata.forms[\"acc_pl\"] = stem .. \"ēs\"\n\tdata.forms[\"\
      abl_pl\"] = stem .. \"ēbus\"\n\tdata.forms[\"voc_pl\"] = stem .. \"ēs\"\n\t\n\t-- ies\n\tif data.types.i then\n\t\tdata.forms[\"gen_sg\"] = stem .. \"ēī\"\n\t\tdata.forms[\"dat_sg\"] = stem .. \"ēī\"\n\tend\n\t\n\t--with locative\n\tif data.loc then\n\t\
      \ttable.insert(title, \"with locative\")\n\t\t\n\t\tdata.forms[\"loc_sg\"] = stem .. \"ē\"\n\t\t\n\t\tdata.forms[\"loc_pl\"] = stem .. \"ēbus\"\n\tend\n\t\n\tif data.n then\n\t\ttable.insert(title, \"with ''m'' → ''n'' in compounds\")\n\tend\n\t\n\tdata.title\
      \ = table.concat(title, \", \") .. \".\"\n\t\n\ttable.insert(data.categories, \"Latin fifth declension nouns\")\nend\n\ndecl[\"indecl\"] = function(data, args)\n\tlocal title = {}\n\tdata.title = \"Not declined; used only in the nominative and accusative\
      \ singular.\"\n\t\n\tlocal stem = args[1]\n\t\n\tif not stem or stem == \"\" then\n\t\tif NAMESPACE ~= \"\" and NAMESPACE ~= \"Appendix\" then\n\t\t\tstem = \"{{{1}}}\"\n\t\telse\n\t\t\terror('Please provide a stem')\n\t\tend\n\tend\n\n\tdata.forms[\"\
      nom_sg\"] = \"-\"\n\tdata.forms[\"gen_sg\"] = \"-\"\n\tdata.forms[\"dat_sg\"] = \"-\"\n\tdata.forms[\"acc_sg\"] = \"-\"\n\tdata.forms[\"abl_sg\"] = \"-\"\n\tdata.forms['voc_sg'] = \"-\"\n\t\n\tdata.forms[\"nom_pl\"] = \"-\"\n\tdata.forms[\"gen_pl\"] =\
      \ \"-\"\n\tdata.forms[\"dat_pl\"] = \"-\"\n\tdata.forms[\"acc_pl\"] = \"-\"\n\tdata.forms[\"abl_pl\"] = \"-\"\n\tdata.forms[\"voc_pl\"] = \"-\"\n\t\n\tdata.forms[\"nom_sg\"] = stem\n\tdata.forms[\"acc_sg\"] = stem\n\tdata.num = \"sg\"\n\t\n\ttable.insert(data.categories,\
      \ \"Latin indeclinable nouns\")\nend\n\ndecl[\"irreg\"] = function(data, args)\n\tlocal title = {}\n\t\n\tlocal stem = args[1]\n\t\n\tif not stem or stem == \"\" then\n\t\tif NAMESPACE ~= \"\" and NAMESPACE ~= \"Appendix\" then\n\t\t\tstem = \"{{{1}}}\"\
      \n\t\telse\n\t\t\terror('Please provide a stem')\n\t\tend\n\tend\n\n\tdata.forms[\"nom_sg\"] = \"-\"\n\tdata.forms[\"gen_sg\"] = \"-\"\n\tdata.forms[\"dat_sg\"] = \"-\"\n\tdata.forms[\"acc_sg\"] = \"-\"\n\tdata.forms[\"abl_sg\"] = \"-\"\n\tdata.forms['voc_sg']\
      \ = \"-\"\n\t\n\tdata.forms[\"nom_pl\"] = \"-\"\n\tdata.forms[\"gen_pl\"] = \"-\"\n\tdata.forms[\"dat_pl\"] = \"-\"\n\tdata.forms[\"acc_pl\"] = \"-\"\n\tdata.forms[\"abl_pl\"] = \"-\"\n\tdata.forms[\"voc_pl\"] = \"-\"\n\t\n\tif stem == \"bōs\" then\n\t\
      \ttable.insert(title, \"[[Appendix:Latin third declension|Third declension]], irregular\")\n\t\t\n\t\tdata.forms[\"nom_sg\"] = \"bōs\"\n\t\tdata.forms[\"gen_sg\"] = \"bovis\"\n\t\tdata.forms[\"dat_sg\"] = \"bovī\"\n\t\tdata.forms[\"acc_sg\"] = \"bovem\"\
      \n\t\tdata.forms[\"abl_sg\"] = \"bove\"\n\t\tdata.forms['voc_sg'] = \"bōs\"\n\t\t\n\t\tdata.forms[\"nom_pl\"] = \"bovēs\"\n\t\tdata.forms[\"gen_pl\"] = \"boum\"\n\t\tdata.forms[\"dat_pl\"] = {\"bōbus\", \"būbus\"}\n\t\tdata.forms[\"acc_pl\"] = \"bovēs\"\
      \n\t\tdata.forms[\"abl_pl\"] = {\"bōbus\", \"būbus\"}\n\t\tdata.forms[\"voc_pl\"] = \"bovēs\"\n\t\t\n\t\ttable.insert(data.categories, \"Latin third declension nouns\")\n\telseif stem == \"cherub\" then\n\t\ttable.insert(title, \"Borrowed from Hebrew with\
      \ its plural, otherwise indeclinable\")\n\t\t\n\t\tdata.forms[\"nom_sg\"] = \"cherub\"\n\t\tdata.forms[\"gen_sg\"] = \"cherub\"\n\t\tdata.forms[\"dat_sg\"] = \"cherub\"\n\t\tdata.forms[\"acc_sg\"] = \"cherub\"\n\t\tdata.forms[\"abl_sg\"] = \"cherub\"\n\
      \t\tdata.forms['voc_sg'] = \"cherub\"\n\t\t\n\t\tdata.forms[\"nom_pl\"] = {\"cherubim\", \"cherubin\"}\n\t\tdata.forms[\"gen_pl\"] = {\"cherubim\", \"cherubin\"}\n\t\tdata.forms[\"dat_pl\"] = {\"cherubim\", \"cherubin\"}\n\t\tdata.forms[\"acc_pl\"] = {\"\
      cherubim\", \"cherubin\"}\n\t\tdata.forms[\"abl_pl\"] = {\"cherubim\", \"cherubin\"}\n\t\tdata.forms[\"voc_pl\"] = {\"cherubim\", \"cherubin\"}\n\t\t\n\t\ttable.insert(data.categories, \"Latin indeclinable nouns\")\n\t\t\n\telseif stem == \"deus\" then\n\
      \t\ttable.insert(title, \"[[Appendix:Latin second declension|Second declension]], with several irregular plural forms\")\n\t\t\n\t\tdata.forms[\"nom_sg\"] = \"deus\"\n\t\tdata.forms[\"gen_sg\"] = \"deī\"\n\t\tdata.forms[\"dat_sg\"] = \"deō\"\n\t\tdata.forms[\"\
      acc_sg\"] = \"deum\"\n\t\tdata.forms[\"abl_sg\"] = \"deō\"\n\t\tdata.forms['voc_sg'] = {\"deus\", \"dee\"}\n\t\t\n\t\tdata.forms[\"nom_pl\"] = {\"dī\", \"diī\", \"deī\"}\n\t\tdata.forms[\"gen_pl\"] = {\"deōrum\", \"deûm\"}\n\t\tdata.forms[\"dat_pl\"] =\
      \ {\"dīs\", \"diīs\", \"deīs\"}\n\t\tdata.forms[\"acc_pl\"] = \"deōs\"\n\t\tdata.forms[\"abl_pl\"] = {\"dīs\", \"diīs\", \"deīs\"}\n\t\tdata.forms[\"voc_pl\"] = {\"dī\", \"diī\", \"deī\"}\n\t\t\n\t\ttable.insert(data.categories, \"Latin second declension\
      \ nouns\")\n\telseif stem == \"Deus\" then\n\t\ttable.insert(title, \"[[Appendix:Latin second declension|Second declension]], with irregular vocative\")\n\t\t\n\t\tdata.forms[\"nom_sg\"] = \"Deus\"\n\t\tdata.forms[\"gen_sg\"] = \"Deī\"\n\t\tdata.forms[\"\
      dat_sg\"] = \"Deō\"\n\t\tdata.forms[\"acc_sg\"] = \"Deum\"\n\t\tdata.forms[\"abl_sg\"] = \"Deō\"\n\t\tdata.forms['voc_sg'] = {\"Deus\", \"Dee\"}\n\t\tdata.num = \"sg\"\n\t\t\n\t\ttable.insert(data.categories, \"Latin second declension nouns\")\n\telseif\
      \ stem == \"domus\" then\n\t\ttable.insert(title, \"[[Appendix:Latin fourth declension|Fourth declension]] with locative, some alternative forms from the [[Appendix:Latin second declension|second declension]]\")\n\t\t\n\t\tdata.forms[\"nom_sg\"] = \"domus\"\
      \n\t\tdata.forms[\"gen_sg\"] = {\"domūs\", \"domī\"}\n\t\tdata.forms[\"dat_sg\"] = {\"domuī\", \"domō\", \"domū\"}\n\t\tdata.forms[\"acc_sg\"] = \"domum\"\n\t\tdata.forms[\"abl_sg\"] = {\"domū\", \"domō\"}\n\t\tdata.forms['voc_sg'] = \"domus\"\n\t\tdata.forms['loc_sg']\
      \ = \"domī\"\n\t\t\n\t\tdata.forms[\"nom_pl\"] = \"domūs\"\n\t\tdata.forms[\"gen_pl\"] = {\"domuum\", \"domōrum\"}\n\t\tdata.forms[\"dat_pl\"] = \"domibus\"\n\t\tdata.forms[\"acc_pl\"] = {\"domūs\", \"domōs\"}\n\t\tdata.forms[\"abl_pl\"] = \"domibus\"\n\
      \t\tdata.forms[\"voc_pl\"] = \"domūs\"\n\t\tdata.forms['loc_pl'] = \"-\"\n\t\t\n\t\tdata.loc = true\n\t\t\n\t\ttable.insert(data.categories, \"Latin second declension nouns\")\n\t\ttable.insert(data.categories, \"Latin fourth declension nouns\")\n\telseif\
      \ stem == \"Iēsus\" then\n\t\ttable.insert(title, \"Highly irregular, but often considered to belong to the [[Appendix:Latin fourth declension|fourth declension]]\")\n\t\t\n\t\tdata.forms[\"nom_sg\"] = \"Iēsus\"\n\t\tdata.forms[\"gen_sg\"] = \"Iēsū\"\n\
      \t\tdata.forms[\"dat_sg\"] = \"Iēsū\"\n\t\tdata.forms[\"acc_sg\"] = \"Iēsum\"\n\t\tdata.forms[\"abl_sg\"] = \"Iēsū\"\n\t\tdata.forms['voc_sg'] = \"Iēsū\"\n\t\tdata.num = \"sg\"\n\t\t\n\t\ttable.insert(data.categories, \"Latin fourth declension nouns\"\
      )\n\telseif stem == \"iūgerum\" or stem == \"jūgerum\" then\n\t\tij = stem == \"iūgerum\" and \"i\" or \"j\"\n\t\ttable.insert(title, \"[[Appendix:Latin second declension|Second]]–[[Appendix:Latin third declension|third-declension]] hybrid neuter\")\n\t\
      \t\n\t\tdata.forms[\"nom_sg\"] = ij .. \"ūgerum\"\n\t\tdata.forms[\"gen_sg\"] = ij .. \"ūgerī\"\n\t\tdata.forms[\"dat_sg\"] = ij .. \"ūgerō\"\n\t\tdata.forms[\"acc_sg\"] = ij .. \"ūgerum\"\n\t\tdata.forms[\"abl_sg\"] = ij .. \"ūgerō\"\n\t\tdata.forms['voc_sg']\
      \ = ij .. \"ūgerum\"\n\t\tdata.forms[\"nom_pl\"] = ij .. \"ūgera\"\n\t\tdata.forms[\"gen_pl\"] = ij .. \"ūgerum\"\n\t\tdata.forms[\"dat_pl\"] = ij .. \"ūgeribus\"\n\t\tdata.forms[\"acc_pl\"] = ij .. \"ūgera\"\n\t\tdata.forms[\"abl_pl\"] = {ij .. \"ūgeribus\"\
      , ij .. \"ūgerīs\"}\n\t\tdata.forms['voc_pl'] = ij .. \"ūgera\"\n\t\t\n\t\tdata.notes[\"abl_pl2\"] = \"Once only, in:&lt;br/&gt;M. Terentius Varro, ''Res Rusticae'', bk I, ch. x\"\n\t\t\n\t\ttable.insert(data.categories, \"Latin second declension nouns\"\
      )\n\t\ttable.insert(data.categories, \"Latin third declension nouns\")\n\telseif stem == \"sūs\" then\n\t\t\n\t\ttable.insert(title, \"[[Appendix:Latin third declension|Third declension]], irregular\")\n\t\t\n\t\tdata.forms[\"nom_sg\"] = \"sūs\"\n\t\t\
      data.forms[\"gen_sg\"] = \"suis\"\n\t\tdata.forms[\"dat_sg\"] = \"suī\"\n\t\tdata.forms[\"acc_sg\"] = \"suem\"\n\t\tdata.forms[\"abl_sg\"] = \"sue\"\n\t\tdata.forms['voc_sg'] = \"sūs\"\n\t\t\n\t\tdata.forms[\"nom_pl\"] = \"suēs\"\n\t\tdata.forms[\"gen_pl\"\
      ] = \"suum\"\n\t\tdata.forms[\"dat_pl\"] = {\"suibus\", \"sūbus\", \"subus\"}\n\t\tdata.forms[\"acc_pl\"] = \"suēs\"\n\t\tdata.forms[\"abl_pl\"] = {\"suibus\", \"sūbus\", \"subus\"}\n\t\tdata.forms[\"voc_pl\"] = \"suēs\"\n\t\t\n\t\ttable.insert(data.categories,\
      \ \"Latin third declension nouns\")\n\telseif stem == \"vēnum\" then\n\t\ttable.insert(title, \"[[Appendix:Latin fourth declension|Fourth]] or [[Appendix:Latin second declension|second declension]]. Attested only in the dative and accusative singular forms\"\
      )\n\t\t\n\t\tdata.forms[\"dat_sg\"] = {\"vēnuī\", \"vēnō\"}\n\t\tdata.forms[\"acc_sg\"] = \"vēnum\"\n\t\tdata.num = \"sg\"\n\t\t\n\t\ttable.insert(data.categories, \"Latin second declension nouns\")\n\t\ttable.insert(data.categories, \"Latin fourth declension\
      \ nouns\")\n\telseif stem == \"vīs\" then\n\t\ttable.insert(title, \"[[Appendix:Latin third declension|Third declension]], but with shortened stem in the singular. The genitive and dative singular forms are rarely used\")\n\t\t\n\t\tdata.forms[\"nom_sg\"\
      ] = \"vīs\"\n\t\tdata.forms[\"gen_sg\"] = \"*vīs\"\n\t\tdata.forms[\"dat_sg\"] = \"*vī\"\n\t\tdata.forms[\"acc_sg\"] = \"vim\"\n\t\tdata.forms[\"abl_sg\"] = \"vī\"\n\t\tdata.forms['voc_sg'] = \"vīs\"\n\t\t\n\t\tdata.forms[\"nom_pl\"] = \"vīrēs\"\n\t\t\
      data.forms[\"gen_pl\"] = \"vīrium\"\n\t\tdata.forms[\"dat_pl\"] = \"vīribus\"\n\t\tdata.forms[\"acc_pl\"] = {\"vīrēs\", \"vīrīs\"}\n\t\tdata.forms[\"abl_pl\"] = \"vīribus\"\n\t\tdata.forms[\"voc_pl\"] = \"vīrēs\"\n\t\t\n\t\ttable.insert(data.categories,\
      \ \"Latin third declension nouns\")\n\telse\n\t\terror(\"Stem \" .. stem .. \" not recognized.\")\n\tend\n\t\n\tdata.title = table.concat(title, \", \") .. \".\"\n\t\n\ttable.insert(data.categories, \"Latin irregular nouns\")\nend\n\nreturn decl</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:35.856Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ala-noun%2Ftable&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58469 t=1555362635738317
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:35 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 685477584, 649995738, 700362175
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4832879\" pageid=\"4832879\" ns=\"828\" title=\"Module:la-noun/table\"><revisions><rev user=\"Chuck Entz\" timestamp=\"2018-11-03T19:10:11Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal Array = require 'Module:array'\n\nlocal function add_forms(wikitable, forms)\n\tif type(wikitable) ~= 'string' then\n\t\terror('Expected\
      \ string, got ' .. type(wikitable))\n\tend\n\t\n\twikitable = wikitable:gsub('{{{([^}]+)}}}', forms)\n\treturn wikitable\nend\n\nlocal function get_stylesheet()\n\treturn mw.getCurrentFrame():extensionTag{\n\t\tname = \"templatestyles\", args = { src =\
      \ \"Template:la-decl-1st/style.css\" }\n\t}\nend\n\nfunction export.make_table_sg(data)\n\tlocal output = Array(data.title, get_stylesheet())\n\toutput:insert [=[\n\n{| class=\"prettytable inflection-table inflection-table-la\"\n|-\n! class=\"corner-header\"\
      \ | Case\n! class=\"number-header\" | Singular\n|-\n! class=\"case-header\" | [[nominative case|Nominative]]\n| class=\"form-cell\" | {{{nom_sg}}}\n|-\n! class=\"case-header\" | [[genitive case|Genitive]]\n| class=\"form-cell\" | {{{gen_sg}}}\n|-\n! class=\"\
      case-header\" | [[dative case|Dative]]\n| class=\"form-cell\" | {{{dat_sg}}}\n|-\n! class=\"case-header\" | [[accusative case|Accusative]]\n| class=\"form-cell\" | {{{acc_sg}}}\n|-\n! class=\"case-header\" | [[ablative case|Ablative]]\n| class=\"form-cell\"\
      \ | {{{abl_sg}}}\n|-\n! class=\"case-header\" | [[vocative case|Vocative]]\n| class=\"form-cell\" | {{{voc_sg}}}\n|-]=]\n\tif data.forms.loc_sg then\n\t\toutput:insert [=[\n\n! class=\"case-header\" |  [[locative case|Locative]]\n| class=\"form-cell\"\
      \ | {{{loc_sg}}}]=]\n\tend\n\toutput:insert('\\n|}' .. data.footnote)\n\t\n\treturn add_forms(output:concat(), data.forms)\nend\n\nfunction export.make_table_pl(data)\n\tlocal output = Array(data.title, get_stylesheet())\n\toutput:insert [=[\n\n{| class=\"\
      prettytable inflection-table inflection-table-la\"\n|-\n! class=\"corner-header\" | Case\n! class=\"number-header\" | Plural\n|-\n! class=\"case-header\" | [[nominative case|Nominative]]\n| class=\"form-cell\" | {{{nom_pl}}}\n|-\n! class=\"case-header\"\
      \ | [[genitive case|Genitive]]\n| class=\"form-cell\" | {{{gen_pl}}}\n|-\n! class=\"case-header\" | [[dative case|Dative]]\n| class=\"form-cell\" | {{{dat_pl}}}\n|-\n! class=\"case-header\" | [[accusative case|Accusative]]\n| class=\"form-cell\" | {{{acc_pl}}}\n\
      |-\n! class=\"case-header\" | [[ablative case|Ablative]]\n| class=\"form-cell\" | {{{abl_pl}}}\n|-\n! class=\"case-header\" | [[vocative case|Vocative]]\n| class=\"form-cell\" | {{{voc_pl}}}\n|-\n]=]\n\tif data.forms.loc_pl then\n\t\toutput:insert [=[\n\
      \n! class=\"case-header\" |  [[locative case|Locative]]\n| class=\"form-cell\" | {{{loc_pl}}}]=]\n\tend\n\toutput:insert('\\n|}' .. data.footnote)\n\t\n\treturn add_forms(output:concat(), data.forms)\nend\n\nfunction export.make_table(data)\n\tlocal output\
      \ = Array(data.title, get_stylesheet())\n\toutput:insert [=[\n\n{| class=\"prettytable inflection-table inflection-table-la\"\n|-\n! class=\"corner-header\" | Case\n! class=\"number-header\" | Singular\n! class=\"number-header\" | Plural\n|-\n! class=\"\
      case-header\" | [[nominative case|Nominative]]\n| class=\"form-cell\" | {{{nom_sg}}}\n| class=\"form-cell\" | {{{nom_pl}}}\n|-\n! class=\"case-header\" | [[genitive case|Genitive]]\n| class=\"form-cell\" | {{{gen_sg}}}\n| class=\"form-cell\" | {{{gen_pl}}}\n\
      |-\n! class=\"case-header\" | [[dative case|Dative]]\n| class=\"form-cell\" | {{{dat_sg}}}\n| class=\"form-cell\" | {{{dat_pl}}}\n|-\n! class=\"case-header\" | [[accusative case|Accusative]]\n| class=\"form-cell\" | {{{acc_sg}}}\n| class=\"form-cell\"\
      \ | {{{acc_pl}}}\n|-\n! class=\"case-header\" | [[ablative case|Ablative]]\n| class=\"form-cell\" | {{{abl_sg}}}\n| class=\"form-cell\" | {{{abl_pl}}}\n|-\n! class=\"case-header\" | [[vocative case|Vocative]]\n| class=\"form-cell\" | {{{voc_sg}}}\n| class=\"\
      form-cell\" | {{{voc_pl}}}\n|-]=]\n\tif data.forms.loc_sg or data.forms.loc_pl then\n\t\toutput:insert [=[\n\n! class=\"case-header\" |  [[locative case|Locative]]\n| class=\"form-cell\" | {{{loc_sg}}}\n| class=\"form-cell\" | {{{loc_pl}}}]=]\n\tend\n\t\
      output:insert('\\n|}' .. data.footnote)\n\t\n\treturn add_forms(output:concat(), data.forms)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:36.041Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aarray&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54161 t=1555362635924921
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:36 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 930034436, 832253273, 686914805
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6879887\" pageid=\"6879887\" ns=\"828\" title=\"Module:array\"><revisions><rev user=\"Justinrleung\" timestamp=\"2019-03-03T05:37:07Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Reverted edits by [[Special:Contributions/2600:387:8:F:0:0:0:C1|2600:387:8:F:0:0:0:C1]]. If you think this rollback is in error, please leave a message on my talk page.\" xml:space=\"\
      preserve\">local Array = {}\nlocal array_constructor\n\n-- Copy table library so as not to unexpectedly change the behavior of code that\n-- uses it.\nlocal array_methods = mw.clone(table)\n\n-- Create version of table.sort that returns the table.\narray_methods.sort\
      \ = function (t, comp)\n\ttable.sort(t, comp)\n\treturn t\nend\n\n-- ipairs and unpack operate on arrays.\narray_methods.ipairs = ipairs\narray_methods.unpack = unpack\n\nfunction array_methods:type()\n\tlocal mt = getmetatable(self)\n\treturn type(mt)\
      \ == \"table\" and mt.__type or nil\nend\n\nfunction array_methods:adjustIndex(index)\n\tindex = math.floor(index)\n\tif index &lt; 0 then\n\t\tindex = #self + index + 1\n\tend\n\treturn index\nend\n\n-- string.sub-style slicing.\nfunction array_methods:slice(i,\
      \ j)\n\tif type(i) == \"number\" then\n\t\ti = self:adjust_index(i)\n\telse\n\t\terror(\"Expected number, got \" .. type(i))\n\tend\n\t\n\tif j == nil or type(j) == \"number\" then\n\t\tj = self:adjust_index(j or -1)\n\telse\n\t\terror(\"Expected number,\
      \ got \" .. type(j))\n\tend\n\t\n\t\n\t\n\tlocal new_arr = array_constructor()\n\tfor index = i, j do\n\t\tnew_arr:insert(self[index]) -- Fix! Will do weird stuff to sparse arrays!\n\tend\n\treturn new_arr\nend\n\n-- A function to convert string key-table\
      \ modules such\n-- as [[Module:languages/data2]] into arrays.\n-- \"from\" is a bad name.\n-- field_for_key supplies the field name in which the\n-- key will be stored.\nlocal function to_array(map, field_for_key)\n\tm_table = m_table or require \"Module:table\"\
      \n\t\n\tlocal arr = {}\n\tlocal i = 0\n\tfor key, val in pairs(map) do\n\t\ti = i + 1\n\t\tlocal new_val = m_table.shallowcopy(val)\n\t\tif field_for_key then\n\t\t\tnew_val[field_for_key] = key\n\t\tend\n\t\tarr[i] = new_val\n\tend\n\t\n\treturn array_constructor(arr)\n\
      end\n\n-- Functions from [[Module:table]] that operate on arrays or sparse arrays.\n-- List copied from [[Module:table/documentation]].\nlocal operate_on_array = {\n\t-- non-sparse\n\t\"removeDuplicates\", \"length\", \"contains\", \"serialCommaJoin\"\
      ,\n\t\"reverseIpairs\", \"reverse\", \"invert\", \"listToSet\", \"isArray\",\n\t-- sparse\n\t\"numKeys\", \"maxIndex\", \"compressSparseArray\", \"sparseIpairs\"\n}\n\n-- Not all of these operate on arrays.\nlocal create_new_array = {\n\t-- Functions from\
      \ [[Module:table]] that create an array.\n\t-- List copied from [[Module:table/documentation]].\n\t\"removeDuplicates\", \"numKeys\", \"affixNums\", \"compressSparseArray\",\n\t\"keysToList\", \"reverse\",\n\t-- Functions from [[Module:fun]] that create\
      \ an array.\n\t\"map\", \"filter\",\n}\n\n-- Functions from [[Module:fun]] that take an array in the second argument.\n-- They just have to have the argument order reversed to work as methods of the\n-- array object.\nlocal second_argument_is_array = {\
      \ \"map\", \"some\", \"all\", \"filter\" }\n\n-- Add shorter aliases for the functions from [[Module:table]] whose names\n-- contain \"array\" or \"list\", which is redundant.\n-- The key redirects to the value.\nlocal alias_of = {\n\tcompress = \"compressSparseArray\"\
      , keys = \"keysToList\", toSet = \"listToSet\",\n}\n\nlocal function get_module_function(key, module, module_name)\n\treturn module[key] \n\t\tor error(\"No function named \" .. tostring(key) .. \" in Module:\" .. module_name)\nend\n\nlocal function wrap_in_array_constructor(func)\n\
      \treturn function (...)\n\t\treturn array_constructor(func(...))\n\tend\nend\n\nlocal function create_array_generating_func(key, module, module_name)\n\treturn wrap_in_array_constructor(get_module_function(key, module, module_name))\nend\n\nlocal function\
      \ reverse_arguments(func)\n\treturn function (a, b)\n\t\treturn func(b, a)\n\tend\nend\n\nlocal function underscore_to_camel_case(str)\n\tif type(str) ~= \"string\" then return str end\n\tstr = str:gsub(\"_(.)\", string.upper)\n\treturn str\nend\n\nlocal\
      \ m_table, m_fun\nlocal Array = {}\nArray.__type = \"array\"\nfunction Array:__index(key)\n\tif type(key) ~= \"string\" then\n\t\treturn nil\n\tend\n\t\n\t-- Convert underscores to camel case: num_keys -&gt; numKeys.\n\tkey = underscore_to_camel_case(key)\n\
      \t\n\tlocal val = array_methods[key]\n\tif val then\n\t\treturn val\n\tend\n\t\n\tkey = alias_of[key] or key\n\t\n\tlocal func\n\tm_table = m_table or require \"Module:table\"\n\tif m_table.contains(operate_on_array, key) then\n\t\tif m_table.contains(create_new_array,\
      \ key) then\n\t\t\tfunc = create_array_generating_func(key, m_table, \"table\")\n\t\telse\n\t\t\tfunc = m_table[key]\n\t\tend\n\telseif m_table.contains(second_argument_is_array, key) then\n\t\tm_fun = m_fun or require \"Module:fun\"\n\t\t\n\t\tlocal raw_func\
      \ = reverse_arguments(get_module_function(key, m_fun, \"fun\"))\n\t\tif m_table.contains(create_new_array, key) then\n\t\t\tfunc = wrap_in_array_constructor(raw_func)\n\t\telse\n\t\t\tfunc = raw_func\n\t\tend\n\tend\n\t\n\tif func then\n\t\tarray_methods[key]\
      \ = func\n\t\treturn func\n\tend\nend\n\nfunction Array.__add(a, b)\n\tif type(a) == 'table' and type(b) == 'table' then\n\t\tm_table = m_table or require \"Module:table\"\n\t\t\n\t\tlocal new_arr = array_constructor(m_table.shallowcopy(a))\n\t\t\n\t\t\
      for _, val in ipairs(b) do\n\t\t\tnew_arr:insert(val)\n\t\tend\n\t\t\n\t\treturn new_arr\n\tend\nend\n\nfunction Array:new(...)\n\tlocal arr\n\tif select(\"#\", ...) == 1 and type((...)) == \"table\" then\n\t\tarr = ...\n\t\t\n\t\tlocal mt = getmetatable(arr)\n\
      \t\t-- If table has been loaded with mw.loadData, copy it to avoid the\n\t\t-- limitations of it being a virtual table.\n\t\tif mt and mt.mw_loadData then\n\t\t\tm_table = m_table or require \"Module:table\"\n\t\t\tarr = m_table.shallowcopy(arr)\n\t\t\
      end\n\telse\n\t\tarr = { ... }\n\tend\n\treturn setmetatable(arr, self)\nend\n\n-- Declared as local above.\nfunction array_constructor(...)\n\treturn Array:new(...)\nend\n\nlocal array_generating_funcs = { from = to_array }\nlocal Array_library_mt = {\n\
      \t__call = Array.new, __index = array_generating_funcs\n}\nsetmetatable(Array, Array_library_mt)\n\nfunction Array_library_mt:__index(key)\n\tkey = underscore_to_camel_case(key)\n\tkey = alias_of[key] or key\n\t\n\tif array_generating_funcs[key] then\n\
      \t\treturn array_generating_funcs[key]\n\tend\n\t\n\tm_table = m_table or require \"Module:table\"\n\t\n\tif m_table.contains(create_new_array, key)\n\t\t\tand not m_table.contains(operate_on_array, key) then\n\t\tlocal func = create_array_generating_func(key,\
      \ m_table, \"table\")\n\t\tarray_generating_funcs[key] = func\n\t\treturn func\n\tend\nend\n\nreturn Array</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:36.244Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Adesc&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44566 t=1555362636145100
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '917'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:36 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1235.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 928527557, 731107593, 708673787
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="6075139" pageid="6075139" ns="10" title="Template:desc"><revisions><rev user="Erutuon" timestamp="2017-03-28T21:02:31Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="shortcut for [[T:descendant]]" xml:space="preserve">#REDIRECT [[Template:descendant]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:36.408Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Adescendant&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38163 t=1555362636312521
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1009'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:36 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1231.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 604908380, 657457180, 697909059
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="6075132" pageid="6075132" ns="10" title="Template:descendant"><revisions><rev user="Erutuon" timestamp="2017-03-28T20:58:15Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="created a function in [[Module:etymology/templates]]" xml:space="preserve">{{#invoke:etymology/templates|descendant}}&lt;noinclude&gt;
      {{documentation}}
      &lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:36.641Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AR%3AL%26S&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55036 t=1555362636531461
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:36 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 418337359, 262119122, 708247784
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="903490" pageid="903490" ns="10" title="Template:R:L&amp;S"><revisions><rev user="Dan Polansky" timestamp="2018-04-01T14:51:37Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="reduce excessive linking by keeping the link only on the title" xml:space="preserve">{{#invoke:R:Perseus|create}}&lt;!--

      --&gt;{{cite-book&lt;!--
          --&gt;|author=Charlton T. Lewis and Charles Short&lt;!--
          --&gt;|title=[[w:A Latin Dictionary|A Latin Dictionary]]&lt;!--
          --&gt;|publisher=Clarendon Press&lt;!--
          --&gt;|location=Oxford&lt;!--
          --&gt;|year=1879&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:36.845Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AR%3APerseus&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46971 t=1555362636721327
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:36 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1230.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 928201205, 742363842, 705825641
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4338557\" pageid=\"4338557\" ns=\"828\" title=\"Module:R:Perseus\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-12-06T02:43:04Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\n--[=[\nTracking templates:\n- [[Special:WhatLinksHere/Template:tracking/R:Perseus/wrong-script]]\n- [[Special:WhatLinksHere/Template:tracking/R:Perseus/param/1]]\n\
      - [[Special:WhatLinksHere/Template:tracking/R:Perseus/param/2]]\n- [[Special:WhatLinksHere/Template:tracking/R:Perseus/param/w]]\n--]=]\n\n-- Collisions contained in submodules of [[Module:R:Perseus/collision-data]].\nlocal m_params = require(\"Module:parameters\"\
      )\nlocal m_utils = require(\"Module:grc-utilities\")\nlocal m_scripts = require(\"Module:scripts\")\nlocal m_script_utils = require(\"Module:script utilities\")\nlocal m_languages = require(\"Module:languages\")\n\nlocal tag_greek = m_utils.tag\n\nlocal\
      \ function tag_latin(text)\n\tlocal lang = m_languages.getByCode(\"la\")\n\tlocal sc = m_scripts.getByCode(\"Latn\")\n\treturn m_script_utils.tag_text(text, lang, sc, nil)\nend\n\nlocal function track(code)\n\trequire('Module:debug').track('R:Perseus/'\
      \ .. code)\n\treturn '' -- for format_perseus_wikilink\nend\n\nlocal function lower_dashed(w)\n\treturn string.gsub(string.lower(w), \" \", \"-\")\nend\n\nlocal function remove_diacritics(x)\n\treturn mw.ustring.gsub(mw.ustring.toNFD(x), '%W+', \"\")\n\
      end\n\n-- maybe there is a better way to do this\nlocal function beta(w)\n\treturn require(\"Module:R:Perseus/polytonic-to-perseus-betacode\").polytonic_to_perseus_betacode(w)\nend\n\n--[[ Resources:\n\ttemplate name, with \"R:\" removed = {\n\t\t[1] =\
      \ Perseus resource id,\n\t\t[2] = collisions index name,\n\t\t[3] = f-query-entry-postprocess,\n\t\t[4] = query-entry-suffix,\n\t\t[5] = language name\n\t}\n\t]]\nlocal resources = {\n\t[\"L&amp;S\"] = {\n\t\t\"1999.04.0059\",\n\t\t\"LS\",\n\t\tnil,\n\t\
      \tnil,\n\t\t'latin',\n\t},\n\t[\"Elementary Lewis\"] = {\n\t\t\"1999.04.0060\",\n\t\t\"EL\",\n\t\tnil,\n\t\tnil,\n\t\t'latin'\n\t},\n\t[\"Peck\"] = {\n\t\t\"1999.04.0062\",\n\t\tnil,\n\t\tlower_dashed,\n\t\t'-harpers',\n\t\t'latin'\n\t},\n\t[\"PersEnc\"\
      ] = {\n\t\t\"1999.04.0004\",\n\t\tnil,\n\t\tlower_dashed,\n\t\t\"\",\n\t\t'latin'\n\t},\n\t[\"Stillwell\"] = {\n\t\t\"1999.04.0006\",\n\t\t\"PECS\",\n\t\tlower_dashed,\n\t\t\"\",\n\t\t'latin'\n\t},\n\t[\"Platner\"] = {\n\t\t\"1999.04.0054\",\n\t\t\"TDAR\"\
      ,\n\t\tlower_dashed,\n\t\t\"\",\n\t\t'latin'\n\t},\n\t[\"Smith's Antiquities\"] = {\n\t\t\"1999.04.0063\",\n\t\tnil,\n\t\tlower_dashed,\n\t\t'-cn',\n\t\t'latin'\n\t},\n\t[\"Smith's Persons\"] = {\n\t\t\"1999.04.0104\",\n\t\tnil,\n\t\tlower_dashed,\n\t\t\
      '-bio-1',\n\t\t'latin'\n\t},\n\t[\"Smith's Geography\"] = {\n\t\t\"1999.04.0064\",\n\t\tnil,\n\t\tlower_dashed,\n\t\t'-geo',\n\t\t'latin'\n\t},\n\t[\"LSJ\"] = {\n\t\t\"1999.04.0057\",\n\t\t\"LSJ\",\n\t\tnil,\n\t\tnil,\n\t\t'greek'\n\t},\n\t[\"Middle Liddell\"\
      ] = {\n\t\t\"1999.04.0058\",\n\t\t\"ML\",\n\t\tnil,\n\t\tnil,\n\t\t'greek'\n\t},\n\t[\"Harpocration\"] = {\n\t\t\"2013.01.0002\",\n\t\tnil,\n\t\tfunction(w)\n\t\t\treturn lower_dashed(remove_diacritics(w))\n\t\tend,\n\t\t\"\",\n\t\t'greek'\n\t},\n\t[\"\
      Autenrieth\"] = {\n\t\t\"1999.04.0073\",\n\t\t\"Autenrieth\",\n\t\tnil,\n\t\tnil,\n\t\t'greek'\n\t},\n\t[\"Slater\"] = {\n\t\t\"1999.04.0072\",\n\t\t\"Slater\",\n\t\tnil,\n\t\tnil,\n\t\t\"greek\"\n\t},\n\t[\"Zoega\"] = {\n\t\t\"2003.02.0002\",\n\t\t\"\
      Zoega\",\n\t\tnil,\n\t\tnil,\n\t\t'non'\n\t},\n}\n\nlocal function get_language(template)\n\treturn resources[template][5]\nend\n\nlocal function is_collision(x, template)\n\tlocal collisions_data = resources[template][2]\n\tlocal lhs_postprocess = resources[template][3]\
      \ or x\n\tif collisions_data then\n\t\treturn mw.loadData(\"Module:R:Perseus/collision-data/\" .. resources[template][2])[lhs_postprocess] == true\n\tend\nend\n\nlocal function format_perseus_url(beta_or_latin, template, redirect)\n\tlocal harpo = template\
      \ == 'Harpocration' and \":letter=\" .. string.upper(string.sub(remove_diacritics(beta_or_latin), 1, 1)) or \"\"\n\tlocal data = resources[template]\n\tlocal id = data[1] or ''\n\tlocal url_redirect_lhs = 'http://www.perseus.tufts.edu/hopper/resolveform?type=exact&amp;lookup='\n\
      \tlocal url_entry_lhs = 'http://www.perseus.tufts.edu/hopper/text?doc=Perseus:text:' .. id .. harpo .. ':entry='\n\tlocal url_rhs = redirect and '&amp;lang=' .. get_language(template) or ''\n\t\n\tlocal postprocess\n\tif data[3] ~= nil then\n\t\tpostprocess\
      \ =\n\t\tfunction(w)\n\t\t\treturn data[3](w) .. (data[4] or '')\n\t\tend\n\telse\n\t\tpostprocess =\n\t\tfunction(w)\n\t\t\treturn w\n\t\tend\n\tend\n\t\n\treturn (redirect and url_redirect_lhs or url_entry_lhs)\n\t\t\t.. postprocess(beta_or_latin)\n\t\
      \t\t.. url_rhs\nend\n\nlocal function is_polytonic(text)\n\tlocal lang = m_languages.getByCode(\"grc\")\n\treturn m_scripts.findBestScript(text, lang):getCode() == \"polytonic\"\nend\n\nlocal function format_perseus_wikilink(title, beta_or_latin, template,\
      \ redirect)\n\tlocal title_span = title\n\t\n\tif get_language(template) == 'greek' then\n\t\tif not is_polytonic(title_span) then\n\t\t\t-- [[Special:WhatLinksHere/Template:tracking/R:Perseus/wrong-script]]\n\t\t\ttrack('wrong-script')\n\t\tend\n\t\t\
      title_span = tag_greek(title_span)\n\telseif get_language(template) == 'latin' then\n\t\ttitle_span = tag_latin(title_span)\n\tend\n\treturn (beta_or_latin == '' and track('no Perseus link')\n\t\t\tor '[' .. format_perseus_url(beta_or_latin, template,\
      \ redirect) .. ' ' .. title_span .. '] in ')\nend\n\nfunction export.create(frame)\n\tlocal params = {\n\t\t[1] = {}, -- Perseus code or word\n\t\t[2] = {}, -- word; only for Greek templates?\n\t}\n\tlocal args = m_params.process(frame:getParent().args,\
      \ params)\n\t\n\tlocal template = string.gsub(frame:getParent():getTitle(), \"^Template:R:\", \"\")\n\tlocal latin = not (get_language(template) == 'greek')\n\t\n\tif not latin and args[2] and not args[1] then\n\t\terror('Parameter 2 should be placed in\
      \ parameter 1.')\n\tend\n\t\n\tlocal title = mw.title.getCurrentTitle()\n\t\n\tlocal word, perseus_code\n\tif latin then\n\t\tword = args[1] or title.text\n\t\tperseus_code = args[2] or title.text\n\telse\n\t\tword = args[2]\n\t\t\n\t\tif word and not\
      \ is_polytonic(word) then\n\t\t\terror('Second parameter of {{[[Template:R:' .. template .. '|R:' .. template ..\n\t\t\t\t\t']]}} should be a Greek word.')\n\t\tend\n\t\t\n\t\tif args[1] then\n\t\t\tif is_polytonic(args[1]) then\n\t\t\t\tif not word then\n\
      \t\t\t\t\tword = args[1]\n\t\t\t\telse\n\t\t\t\t\terror('Second parameter of {{[[Template:R:' .. template .. '|R:' .. template ..\n\t\t\t\t\t\t\t']]}} is a Greek word, so first parameter must be Perseus entry code.')\n\t\t\t\tend\n\t\t\telse\n\t\t\t\t\
      perseus_code = args[1]\n\t\t\tend\n\t\tend\n\t\t\t\n\t\t\n\t\tif not word then\n\t\t\tlocal pagename = title.text\n\t\t\tif is_polytonic(pagename) then\n\t\t\t\tword = pagename\n\t\t\telseif title.nsText == \"Template\" then\n\t\t\t\tword = 'λέξις'\n\t\
      \t\telse\n\t\t\t\terror('{{[[Template:R:' .. template .. '|R:' .. template ..\n\t\t\t\t\t\t']]}} needs manual input: pagename is not Greek.')\n\t\t\tend\n\t\tend\n\t\t\n\t\tif not perseus_code then\n\t\t\tperseus_code = beta(word)\n\t\tend\n\tend\n\t\n\
      \tlocal redirect = not (args[1] or args[2]) and is_collision(word, template)\n\t\n\tif word == template then\n\t\treturn \"\"\n\telse\n\t\treturn format_perseus_wikilink(word, perseus_code, template, redirect)\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:37.069Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AR%3APerseus%2Fcollision-data%2FLS&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43990 t=1555362636922742
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1339.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 756163857, 735000707, 690093087
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="6072194" pageid="6072194" ns="828" title="Module:R:Perseus/collision-data/LS"><revisions><rev user="Erutuon" timestamp="2017-03-24T22:39:15Z" contentformat="text/plain" contentmodel="Scribunto" comment="copied from [[Module:R:Perseus/collision-data]]" xml:space="preserve">local t = true

      local data = { ["A"]=t,["AC"]=t,["Abba"]=t,["Absyrtus"]=t,["Achaeus"]=t,["Achates"]=t,["Acis"]=t,["Acragas"]=t,["Acritas"]=t,["Acte"]=t,["Actius"]=t,["Actor"]=t,["Actorius"]=t,["Adoneus"]=t,["Adoreus"]=t,["Aegeus"]=t,["Aegyptus"]=t,["Aemilius"]=t,["Aenea"]=t,["Aenus"]=t,["Aeolis"]=t,["Aesis"]=t,["Aethra"]=t,["Agricola"]=t,["Agrius"]=t,["Alazon"]=t,["Alba"]=t,["Albinus"]=t,["Albion"]=t,["Alburnus"]=t,["Alcis"]=t,["Alcmaeo"]=t,["Aleus"]=t,["Algidus"]=t,["Alis"]=t,["Alius"]=t,["Alsius"]=t,["Althaea"]=t,["Ambrosia"]=t,["Ambrosius"]=t,["Ampelos"]=t,["Anas"]=t,["Ancon"]=t,["Ancus"]=t,["Andes"]=t,["Anhydros"]=t,["Anienus"]=t,["Animula"]=t,["Anno"]=t,["Anser"]=t,["Anthedon"]=t,["Anthrax"]=t,["Antiochensis"]=t,["Antiochenus"]=t,["Aper"]=t,["Aphrodisias"]=t,["Apicius"]=t,["Apis"]=t,["Appianus"]=t,["Apus"]=t,["Aquila"]=t,["Arabus"]=t,["Aracia"]=t,["Aratus"]=t,["Arbis"]=t,["Arbor"]=t,["Arbuscula"]=t,["Arcadia"]=t,["Arcanus"]=t,["Ardea"]=t,["Argentarius"]=t,["Argenteus"]=t,["Argestes"]=t,["Aria"]=t,["Aris"]=t,["Arius"]=t,["Arna"]=t,["Arne"]=t,["Arsia"]=t,["Ascanius"]=t,["Asper"]=t,["Asta"]=t,["Astacus"]=t,["Asteria"]=t,["Asterion"]=t,["Astur"]=t,["Ater"]=t,["Athenaeus"]=t,["Atratus"]=t,["Atta"]=t,["Attice"]=t,["Augustinus"]=t,["Augustus"]=t,["Aulus"]=t,["Austro"]=t,["Avitus"]=t,["Axius"]=t,["Axon"]=t,["Baccha"]=t,["Bacchius"]=t,["Bacchus"]=t,["Bacis"]=t,["Balatro"]=t,["Balbus"]=t,["Balista"]=t,["Ballista"]=t,["Barba"]=t,["Barea"]=t,["Basilia"]=t,["Batrachus"]=t,["Bebryces"]=t,["Bestia"]=t,["Betis"]=t,["Bibulus"]=t,["Bito"]=t,["Blaesus"]=t,["Boethus"]=t,["Botrys"]=t,["Brigantes"]=t,["Brochus"]=t,["Brutus"]=t,["Bubulcus"]=t,["Bulbus"]=t,["Bura"]=t,["Buris"]=t,["Burrus"]=t,["Caballus"]=t,["Cacus"]=t,["Cadmea"]=t,["Caecina"]=t,["Caecus"]=t,["Caelestinus"]=t,["Caeparius"]=t,["Caeruleus"]=t,["Caesius"]=t,["Caeus"]=t,["Caia"]=t,["Caldus"]=t,["Calor"]=t,["Calvus"]=t,["Camilla"]=t,["Camillus"]=t,["Campana"]=t,["Canens"]=t,["Canis"]=t,["Canopus"]=t,["Canthus"]=t,["Capella"]=t,["Capitium"]=t,["Capito"]=t,["Capitulum"]=t,["Capsa"]=t,["Carbo"]=t,["Carina"]=t,["Carruca"]=t,["Carthago"]=t,["Carus"]=t,["Cassiope"]=t,["Castor"]=t,["Casus"]=t,["Catillus"]=t,["Catulinus"]=t,["Catulus"]=t,["Caudex"]=t,["Celer"]=t,["Celsus"]=t,["Cento"]=t,["Ceramicus"]=t,["Cerasus"]=t,["Ceraunus"]=t,["Cestros"]=t,["Chalcis"]=t,["Chalybs"]=t,["Chelonitis"]=t,["Chilo"]=t,["Chordus"]=t,["Cicuta"]=t,["Cilo"]=t,["Cinara"]=t,["Cincinnatus"]=t,["Cingulum"]=t,["Circa"]=t,["Cispius"]=t,["Civilis"]=t,["Claritas"]=t,["Claudianus"]=t,["Clausula"]=t,["Clausus"]=t,["Clemens"]=t,["Clitae"]=t,["Coa"]=t,["Cocles"]=t,["Collina"]=t,["Colonia"]=t,["Colophon"]=t,["Colotes"]=t,["Columella"]=t,["Come"]=t,["Cometes"]=t,["Cominius"]=t,["Commodus"]=t,["Concordia"]=t,["Concordialis"]=t,["Consentia"]=t,["Constans"]=t,["Constantia"]=t,["Copia"]=t,["Cora"]=t,["Corax"]=t,["Cordus"]=t,["Cornicen"]=t,["Corniculum"]=t,["Cornus"]=t,["Cornutus"]=t,["Coronaeus"]=t,["Coronis"]=t,["Corycus"]=t,["Cos"]=t,["Cossus"]=t,["Cotyla"]=t,["Crassus"]=t,["Crastinus"]=t,["Crates"]=t,["Creo"]=t,["Creta"]=t,["Crispus"]=t,["Crista"]=t,["Ctesiphon"]=t,["Cum"]=t,["Cunctator"]=t,["Cuneus"]=t,["Curetis"]=t,["Curio"]=t,["Curius"]=t,["Cursor"]=t,["Cycnus"]=t,["Cyme"]=t,["Cynice"]=t,["Cynos"]=t,["Cynosura"]=t,["Cyprus"]=t,["Cypselus"]=t,["Cyrene"]=t,["Cytis"]=t,["Cyzicos"]=t,["Daemon"]=t,["Dama"]=t,["Dardanus"]=t,["Decianus"]=t,["Decimus"]=t,["Diadematus"]=t,["Dido"]=t,["Digitus"]=t,["Dionysia"]=t,["Dios"]=t,["Dipsas"]=t,["Dis"]=t,["Discus"]=t,["Dolabella"]=t,["Dolichos"]=t,["Dolo"]=t,["Domitius"]=t,["Dossennus"]=t,["Doto"]=t,["Draco"]=t,["Dromo"]=t,["Dryas"]=t,["Durius"]=t,["Echinus"]=t,["Echion"]=t,["Electrus"]=t,["Eleus"]=t,["Elias"]=t,["Ephorus"]=t,["Epiphania"]=t,["Epulo"]=t,["Er"]=t,["Esus"]=t,["Euryalus"]=t,["Eusebes"]=t,["Falcula"]=t,["Fanum"]=t,["Farfarus"]=t,["Fatuus"]=t,["Faustus"]=t,["Faventia"]=t,["Felicitas"]=t,["Felix"]=t,["Festus"]=t,["Fidentia"]=t,["Figulus"]=t,["Fimbria"]=t,["Fimbriatus"]=t,["Fiscellus"]=t,["Flaccus"]=t,["Flamen"]=t,["Flaminius"]=t,["Flamma"]=t,["Florus"]=t,["Foruli"]=t,["Fraus"]=t,["Fronto"]=t,["Fucinus"]=t,["Fundanius"]=t,["Fuscinus"]=t,["Fuscus"]=t,["Galla"]=t,["Galli"]=t,["Gallina"]=t,["Gallius"]=t,["Gallus"]=t,["Gelo"]=t,["Germanus"]=t,["Gillo"]=t,["Graecus"]=t,["Grosphus"]=t,["Gryllus"]=t,["Gurges"]=t,["Gutta"]=t,["Gymnasium"]=t,["Harmonia"]=t,["Harpax"]=t,["Hemina"]=t,["Heniochus"]=t,["Hera"]=t,["Heracleus"]=t,["Heraclides"]=t,["Here"]=t,["Herous"]=t,["Hiera"]=t,["Hilarus"]=t,["Hister"]=t,["Hora"]=t,["Horatius"]=t,["Horreum"]=t,["Hortator"]=t,["Hortensius"]=t,["Hostus"]=t,["Hyas"]=t,["Hydrus"]=t,["Iasius"]=t,["Idaeus"]=t,["Ilia"]=t,["Iliacus"]=t,["Ilienses"]=t,["Ilium"]=t,["Indiges"]=t,["Indus"]=t,["Industria"]=t,["Insitor"]=t,["Insula"]=t,["Io"]=t,["Ion"]=t,["Iphis"]=t,["Isaurus"]=t,["Ismarus"]=t,["Issus"]=t,["Iulis"]=t,["Iulus"]=t,["Jactus"]=t,["Jovius"]=t,["Juba"]=t,["Julianus"]=t,["Justinianus"]=t,["Juvenalis"]=t,["Juvencus"]=t,["Labeo"]=t,["Lacerna"]=t,["Lactans"]=t,["Lamia"]=t,["Lanarius"]=t,["Lanatus"]=t,["Lar"]=t,["Lares"]=t,["Largus"]=t,["Lateranus"]=t,["Laterensis"]=t,["Latinus"]=t,["Latro"]=t,["Laus"]=t,["Leaena"]=t,["Leda"]=t,["Lenaeus"]=t,["Lento"]=t,["Lentulus"]=t,["Leo"]=t,["Leoninus"]=t,["Lepidus"]=t,["Libanus"]=t,["Liber"]=t,["Liberalis"]=t,["Libo"]=t,["Liburnus"]=t,["Licinus"]=t,["Limus"]=t,["Lipara"]=t,["Liparis"]=t,["Locusta"]=t,["Luca"]=t,["Lucius"]=t,["Lucus"]=t,["Ludius"]=t,["Luna"]=t,["Lupus"]=t,["Lurco"]=t,["Luscinus"]=t,["Lycaon"]=t,["Lycium"]=t,["Lycophon"]=t,["Lygos"]=t,["Lysimachia"]=t,["Lysis"]=t,["Macae"]=t,["Macedo"]=t,["Macer"]=t,["Machaera"]=t,["Macula"]=t,["Maecius"]=t,["Magnes"]=t,["Magnus"]=t,["Maia"]=t,["Mamertinus"]=t,["Mammula"]=t,["Mana"]=t,["Manalis"]=t,["Mania"]=t,["Manto"]=t,["Marathus"]=t,["Marcianus"]=t,["Marculus"]=t,["Marcus"]=t,["Maria"]=t,["Maro"]=t,["Marpessus"]=t,["Marrubium"]=t,["Marsus"]=t,["Marsyas"]=t,["Martialis"]=t,["Massa"]=t,["Masso"]=t,["Maternus"]=t,["Matrona"]=t,["Medica"]=t,["Medicus"]=t,["Medion"]=t,["Medus"]=t,["Megara"]=t,["Megareius"]=t,["Megareus"]=t,["Melas"]=t,["Meles"]=t,["Meliboeus"]=t,["Melicus"]=t,["Melinum"]=t,["Melinus"]=t,["Melitinus"]=t,["Melius"]=t,["Mella"]=t,["Melo"]=t,["Melos"]=t,["Memor"]=t,["Mena"]=t,["Menaeus"]=t,["Mento"]=t,["Merenda"]=t,["Merops"]=t,["Merula"]=t,["Messanius"]=t,["Messia"]=t,["Meto"]=t,["Metropolis"]=t,["Metropolitanus"]=t,["Miletus"]=t,["Milo"]=t,["Minio"]=t,["Minius"]=t,["Minutius"]=t,["Minyas"]=t,["Missor"]=t,["Mnester"]=t,["Moera"]=t,["Moeris"]=t,["Molliculus"]=t,["Molo"]=t,["Molon"]=t,["Molossus"]=t,["Molus"]=t,["Montanus"]=t,["Mugio"]=t,["Mulio"]=t,["Muraena"]=t,["Murcus"]=t,["Murena"]=t,["Mus"]=t,["Musa"]=t,["Musaeus"]=t,["Musca"]=t,["Muto"]=t,["Myrice"]=t,["Myron"]=t,["Mys"]=t,["Naevius"]=t,["Nana"]=t,["Nar"]=t,["Narcissus"]=t,["Nasica"]=t,["Nasus"]=t,["Natalis"]=t,["Nauplius"]=t,["Nazaraeus"]=t,["Nebris"]=t,["Nemea"]=t,["Nemesis"]=t,["Neo"]=t,["Nepeta"]=t,["Nepos"]=t,["Nepotilla"]=t,["Nepotinus"]=t,["Nereis"]=t,["Nervicus"]=t,["Nico"]=t,["Nigellus"]=t,["Niger"]=t,["Nisus"]=t,["No"]=t,["Noctua"]=t,["Nola"]=t,["Nona"]=t,["Notos"]=t,["Notus"]=t,["Novellus"]=t,["Nucula"]=t,["Numerius"]=t,["Numicius"]=t,["Nundina"]=t,["Nymphaeum"]=t,["Nysa"]=t,["O"]=t,["Obba"]=t,["Obsequens"]=t,["Ocrea"]=t,["October"]=t,["Oeneus"]=t,["Oenus"]=t,["Ofella"]=t,["Olenius"]=t,["Olenos"]=t,["Olus"]=t,["Olympias"]=t,["Olympus"]=t,["Onchestus"]=t,["Ophion"]=t,["Ophites"]=t,["Ophiusa"]=t,["Opis"]=t,["Ops"]=t,["Opus"]=t,["Ora"]=t,["Orca"]=t,["Origo"]=t,["Orneus"]=t,["Ortygia"]=t,["Otus"]=t,["Paenula"]=t,["Paeonia"]=t,["Paeonius"]=t,["Paetus"]=t,["Palici"]=t,["Palladius"]=t,["Pallas"]=t,["Panacea"]=t,["Panda"]=t,["Panope"]=t,["Pansa"]=t,["Papa"]=t,["Paphos"]=t,["Parma"]=t,["Parra"]=t,["Parrhasius"]=t,["Parthus"]=t,["Parus"]=t,["Passer"]=t,["Passerinus"]=t,["Patella"]=t,["Patina"]=t,["Paulus"]=t,["Pavo"]=t,["Pax"]=t,["Pedo"]=t,["Pedum"]=t,["Pegasus"]=t,["Pelias"]=t,["Peloris"]=t,["Pennus"]=t,["Peraea"]=t,["Perdix"]=t,["Pergamum"]=t,["Pero"]=t,["Persa"]=t,["Perseus"]=t,["Persice"]=t,["Persicus"]=t,["Petra"]=t,["Petraeus"]=t,["Petro"]=t,["Petronius"]=t,["Peuce"]=t,["Phalaris"]=t,["Phasis"]=t,["Phiala"]=t,["Philippeus"]=t,["Philippicus"]=t,["Philus"]=t,["Philyra"]=t,["Phlegraeus"]=t,["Phocis"]=t,["Phoenice"]=t,["Phoenix"]=t,["Phormio"]=t,["Phryx"]=t,["Pictor"]=t,["Picus"]=t,["Pietas"]=t,["Pilatus"]=t,["Pisa"]=t,["Pisciculus"]=t,["Piso"]=t,["Pithecium"]=t,["Placentia"]=t,["Plancus"]=t,["Plautus"]=t,["Poenus"]=t,["Polio"]=t,["Pollentia"]=t,["Pollex"]=t,["Pollio"]=t,["Polus"]=t,["Pons"]=t,["Pontia"]=t,["Ponticus"]=t,["Pontus"]=t,["Populonia"]=t,["Porthmos"]=t,["Porus"]=t,["Posca"]=t,["Postumus"]=t,["Potentia"]=t,["Potitus"]=t,["Priapus"]=t,["Princeps"]=t,["Priscus"]=t,["Probus"]=t,["Prodicius"]=t,["Psecas"]=t,["Pulcher"]=t,["Pulto"]=t,["Puta"]=t,["Pyramus"]=t,["Pyrgus"]=t,["Pyrrhias"]=t,["Pythias"]=t,["Pytho"]=t,["Quadra"]=t,["Quadratus"]=t,["Quadrigarius"]=t,["Quintilianus"]=t,["Quintus"]=t,["Quirinus"]=t,["Quiris"]=t,["Regillus"]=t,["Regulus"]=t,["Remora"]=t,["Remulus"]=t,["Remus"]=t,["Restitutus"]=t,["Rex"]=t,["Rhea"]=t,["Rhoeteus"]=t,["Romulus"]=t,["Roseus"]=t,["Rubricatus"]=t,["Rufus"]=t,["Ruga"]=t,["Rumina"]=t,["Ruminalis"]=t,["Runcina"]=t,["Rutilus"]=t,["Rutuba"]=t,["Saburra"]=t,["Sacerdos"]=t,["Sacrator"]=t,["Sagaris"]=t,["Sagarius"]=t,["Sale"]=t,["Saliaris"]=t,["Salii"]=t,["Salinator"]=t,["Salo"]=t,["Sapineus"]=t,["Sarda"]=t,["Scaeva"]=t,["Scapula"]=t,["Scipio"]=t,["Sciron"]=t,["Scrofa"]=t,["Sebosus"]=t,["Secundus"]=t,["Segesta"]=t,["Senecio"]=t,["Sentis"]=t,["Serenus"]=t,["Severus"]=t,["Sextus"]=t,["Sido"]=t,["Sidonius"]=t,["Silanus"]=t,["Siler"]=t,["Silo"]=t,["Silus"]=t,["Simo"]=t,["Simon"]=t,["Simulus"]=t,["Sinon"]=t,["Sion"]=t,["Siris"]=t,["Smyrna"]=t,["Solo"]=t,["Solon"]=t,["Solus"]=t,["Sonus"]=t,["Sophus"]=t,["Soranus"]=t,["Sosus"]=t,["Spinther"]=t,["Spongia"]=t,["Spurius"]=t,["Stator"]=t,["Stellio"]=t,["Stephane"]=t,["Stilo"]=t,["Stiria"]=t,["Stolo"]=t,["Strabo"]=t,["Strobilus"]=t,["Strongyle"]=t,["Struma"]=t,["Suberinus"]=t,["Subis"]=t,["Subulo"]=t,["Sura"]=t,["Surus"]=t,["Sutrinus"]=t,["Syrius"]=t,["Syrus"]=t,["Tacitus"]=t,["Tartarus"]=t,["Taurinus"]=t,["Tauriscus"]=t,["Taurus"]=t,["Telamo"]=t,["Temenitis"]=t,["Termes"]=t,["Thebe"]=t,["Thymbra"]=t,["Tifata"]=t,["Tigris"]=t,["Tiro"]=t,["Torquatus"]=t,["Trabea"]=t,["Tralles"]=t,["Trebia"]=t,["Tros"]=t,["Tubulus"]=t,["Turbo"]=t,["Tusculum"]=t,["Typhon"]=t,["Urbicus"]=t,["Utens"]=t,["Vacca"]=t,["Vada"]=t,["Valens"]=t,["Valentia"]=t,["Valerianus"]=t,["Varia"]=t,["Varianus"]=t,["Varius"]=t,["Varus"]=t,["Vectis"]=t,["Vedius"]=t,["Velabrum"]=t,["Velinus"]=t,["Veliternus"]=t,["Venilia"]=t,["Venus"]=t,["Verres"]=t,["Verrinus"]=t,["Verrius"]=t,["Vibo"]=t,["Victor"]=t,["Vitula"]=t,["Vopiscus"]=t,["Vultur"]=t,["Zeugma"]=t,["Zoster"]=t,["Zygia"]=t,["a"]=t,["abactus"]=t,["abba"]=t,["abdico"]=t,["aborsus"]=t,["abortio"]=t,["absque"]=t,["ac"]=t,["accendo"]=t,["accensus"]=t,["acceptor"]=t,["accessus"]=t,["accido"]=t,["accitus"]=t,["acer"]=t,["acritas"]=t,["acta"]=t,["acte"]=t,["actor"]=t,["actorius"]=t,["actuarius"]=t,["actus"]=t,["acus"]=t,["adactus"]=t,["adauctus"]=t,["adeo"]=t,["adeptus"]=t,["aditus"]=t,["adjectus"]=t,["adjuro"]=t,["adjutor"]=t,["adjutus"]=t,["admissus"]=t,["admixtus"]=t,["admonitus"]=t,["admorsus"]=t,["adoleo"]=t,["adoreus"]=t,["adulter"]=t,["advectus"]=t,["adversus"]=t,["advocatus"]=t,["aenus"]=t,["aereus"]=t,["aero"]=t,["aeterno"]=t,["aethra"]=t,["affatus"]=t,["affectus"]=t,["afflatus"]=t,["afflictus"]=t,["aggero"]=t,["aggestus"]=t,["aggressus"]=t,["agna"]=t,["agricola"]=t,["agrius"]=t,["ai"]=t,["alazon"]=t,["alba"]=t,["albinus"]=t,["alburnus"]=t,["algidus"]=t,["alis"]=t,["alitus"]=t,["alius"]=t,["allapsus"]=t,["allector"]=t,["allectus"]=t,["allego"]=t,["allevo"]=t,["allex"]=t,["alsius"]=t,["althaea"]=t,["altus"]=t,["ambitus"]=t,["ambrosia"]=t,["ambrosius"]=t,["amictus"]=t,["amicus"]=t,["amissus"]=t,["ampelos"]=t,["amplexus"]=t,["an"]=t,["anas"]=t,["anathema"]=t,["ancon"]=t,["ancus"]=t,["anfractus"]=t,["anhydros"]=t,["animatus"]=t,["animosus"]=t,["animula"]=t,["annexus"]=t,["annisus"]=t,["annixus"]=t,["anno"]=t,["anser"]=t,["anthedon"]=t,["anthrax"]=t,["antipathes"]=t,["anulus"]=t,["anus"]=t,["aper"]=t,["aphrodisias"]=t,["apicius"]=t,["apis"]=t,["apparatus"]=t,["appello"]=t,["appetitus"]=t,["appeto"]=t,["appingo"]=t,["appositus"]=t,["appulsus"]=t,["apus"]=t,["aquila"]=t,["aracia"]=t,["araneus"]=t,["aratus"]=t,["arbitratus"]=t,["arbor"]=t,["arbuscula"]=t,["arcanus"]=t,["arcessitus"]=t,["arctus"]=t,["ardea"]=t,["argentarius"]=t,["argenteus"]=t,["argestes"]=t,["aris"]=t,["armatus"]=t,["arna"]=t,["artio"]=t,["artus"]=t,["ascensus"]=t,["ascio"]=t,["ascitus"]=t,["aspargo"]=t,["aspectus"]=t,["asper"]=t,["aspergo"]=t,["aspersus"]=t,["assarius"]=t,["assensus"]=t,["assero"]=t,["assessus"]=t,["assiduo"]=t,["assiduus"]=t,["assis"]=t,["assitus"]=t,["asta"]=t,["astacus"]=t,["asteria"]=t,["asterion"]=t,["astur"]=t,["astus"]=t,["ater"]=t,["atratus"]=t,["atta"]=t,["attactus"]=t,["attentus"]=t,["attractus"]=t,["attritus"]=t,["auctumnus"]=t,["auctus"]=t,["auditus"]=t,["augustus"]=t,["aula"]=t,["aulicus"]=t,["aulus"]=t,["aurarius"]=t,["auspicatus"]=t,["auster"]=t,["austere"]=t,["austro"]=t,["ausus"]=t,["aveo"]=t,["aversor"]=t,["avia"]=t,["avitus"]=t,["axon"]=t,["balatro"]=t,["balbus"]=t,["balista"]=t,["ballista"]=t,["barba"]=t,["barbarum"]=t,["barritus"]=t,["bat"]=t,["batrachus"]=t,["batus"]=t,["bestia"]=t,["beta"]=t,["betis"]=t,["bibo"]=t,["bibulus"]=t,["bipennis"]=t,["bito"]=t,["blaesus"]=t,["blatero"]=t,["blatta"]=t,["boethus"]=t,["bonum"]=t,["botrys"]=t,["bova"]=t,["brigantes"]=t,["brochus"]=t,["brutus"]=t,["bu"]=t,["bubo"]=t,["bubulcus"]=t,["bulbus"]=t,["bura"]=t,["buris"]=t,["burrus"]=t,["butio"]=t,["caballus"]=t,["cachinno"]=t,["cacus"]=t,["cadmea"]=t,["caecus"]=t,["caelestinus"]=t,["caelum"]=t,["caeparius"]=t,["caeruleus"]=t,["caesius"]=t,["caesus"]=t,["caia"]=t,["calcatus"]=t,["calceatus"]=t,["calcitro"]=t,["calculatio"]=t,["calculo"]=t,["caldus"]=t,["calefactus"]=t,["caligo"]=t,["calo"]=t,["calor"]=t,["calvus"]=t,["calx"]=t,["calyx"]=t,["camilla"]=t,["camillum"]=t,["camillus"]=t,["campana"]=t,["campus"]=t,["cancellarius"]=t,["cancer"]=t,["candidatus"]=t,["canens"]=t,["canis"]=t,["canthus"]=t,["capella"]=t,["capillor"]=t,["capio"]=t,["capitium"]=t,["capito"]=t,["capitulum"]=t,["capsa"]=t,["captus"]=t,["capulo"]=t,["carabus"]=t,["carbo"]=t,["carina"]=t,["carino"]=t,["carmen"]=t,["carmino"]=t,["caro"]=t,["carruca"]=t,["carus"]=t,["casnar"]=t,["cassis"]=t,["casso"]=t,["castor"]=t,["castus"]=t,["casus"]=t,["catella"]=t,["catellus"]=t,["catillo"]=t,["catillus"]=t,["catulinus"]=t,["catulus"]=t,["catus"]=t,["caudex"]=t,["cedo"]=t,["celer"]=t,["cello"]=t,["celsus"]=t,["censeo"]=t,["census"]=t,["cento"]=t,["centuriatus"]=t,["centurio"]=t,["cerasus"]=t,["ceraunus"]=t,["cereus"]=t,["cernuus"]=t,["certatus"]=t,["certo"]=t,["cestros"]=t,["cestus"]=t,["chalcis"]=t,["chalybs"]=t,["chama"]=t,["chelonitis"]=t,["chordus"]=t,["cicuta"]=t,["cillo"]=t,["cilo"]=t,["cinaedus"]=t,["cinara"]=t,["cincinnatus"]=t,["cinctus"]=t,["cingulum"]=t,["circa"]=t,["circuitus"]=t,["circumactus"]=t,["circumductus"]=t,["circumflexus"]=t,["circumgressus"]=t,["circumjectus"]=t,["circumplexus"]=t,["circumspectus"]=t,["cito"]=t,["citratus"]=t,["civilis"]=t,["claritas"]=t,["claudo"]=t,["clausula"]=t,["clausus"]=t,["claviger"]=t,["clemens"]=t,["cluo"]=t,["coactus"]=t,["coalitus"]=t,["coaxo"]=t,["cocles"]=t,["coctio"]=t,["coeptus"]=t,["cogitatus"]=t,["cognitus"]=t,["cohum"]=t,["coitus"]=t,["collatus"]=t,["collectus"]=t,["colligo"]=t,["collina"]=t,["collisus"]=t,["colo"]=t,["colonia"]=t,["colophon"]=t,["colotes"]=t,["colum"]=t,["columella"]=t,["combibo"]=t,["come"]=t,["comedo"]=t,["comesus"]=t,["cometes"]=t,["cominius"]=t,["comitatus"]=t,["comitiatus"]=t,["commensus"]=t,["commentor"]=t,["commeto"]=t,["commilito"]=t,["commodo"]=t,["commodulum"]=t,["commodum"]=t,["commodus"]=t,["commolitus"]=t,["commotus"]=t,["communicatus"]=t,["communio"]=t,["communitus"]=t,["como"]=t,["compactus"]=t,["comparaticius"]=t,["comparatio"]=t,["comparator"]=t,["comparo"]=t,["compello"]=t,["compertus"]=t,["compes"]=t,["compingo"]=t,["complexus"]=t,["compressus"]=t,["comptus"]=t,["compulsus"]=t,["comtus"]=t,["conceptus"]=t,["concessus"]=t,["concido"]=t,["conciliatus"]=t,["concio"]=t,["concitatus"]=t,["concitus"]=t,["conclusus"]=t,["concordia"]=t,["concordialis"]=t,["concretus"]=t,["concussus"]=t,["conditio"]=t,["conditor"]=t,["conditura"]=t,["conditus"]=t,["conductus"]=t,["conexus"]=t,["conflictus"]=t,["congener"]=t,["congero"]=t,["congestus"]=t,["congressus"]=t,["conjectus"]=t,["conjunctus"]=t,["conquestus"]=t,["conscensus"]=t,["consedo"]=t,["consensus"]=t,["consentia"]=t,["consero"]=t,["conspectus"]=t,["conspicio"]=t,["conspiratus"]=t,["conspiro"]=t,["constans"]=t,["constantia"]=t,["consterno"]=t,["constitutus"]=t,["consulto"]=t,["consultor"]=t,["consultus"]=t,["contactus"]=t,["contatus"]=t,["contemplatus"]=t,["contemptus"]=t,["contente"]=t,["contentus"]=t,["contextus"]=t,["continentia"]=t,["contingo"]=t,["continuo"]=t,["contractus"]=t,["contuitus"]=t,["contutor"]=t,["convector"]=t,["conventus"]=t,["conversus"]=t,["convexus"]=t,["convictio"]=t,["convictus"]=t,["convivo"]=t,["coortus"]=t,["copia"]=t,["copis"]=t,["copulatus"]=t,["cora"]=t,["coracinus"]=t,["corax"]=t,["cordus"]=t,["corneus"]=t,["cornicen"]=t,["corniculum"]=t,["cornum"]=t,["cornus"]=t,["cornutus"]=t,["coronis"]=t,["corycus"]=t,["cos"]=t,["cossus"]=t,["cotyla"]=t,["crassus"]=t,["crastinus"]=t,["crates"]=t,["creo"]=t,["creta"]=t,["cretus"]=t,["crispus"]=t,["crista"]=t,["cubitus"]=t,["cudo"]=t,["cujus"]=t,["culex"]=t,["cultus"]=t,["cum"]=t,["cunctator"]=t,["cuneus"]=t,["cupa"]=t,["cupla"]=t,["cuppedo"]=t,["cupula"]=t,["curio"]=t,["curius"]=t,["cursor"]=t,["cycnus"]=t,["cynos"]=t,["cynosura"]=t,["cyprus"]=t,["cypselus"]=t,["cytis"]=t,["daemon"]=t,["dama"]=t,["de"]=t,["deceptus"]=t,["decido"]=t,["decimus"]=t,["decoctus"]=t,["decurio"]=t,["decursus"]=t,["decus"]=t,["decutio"]=t,["deductus"]=t,["defectus"]=t,["deflexus"]=t,["deformatio"]=t,["deformo"]=t,["defossus"]=t,["defunctus"]=t,["dejectus"]=t,["delapsus"]=t,["delector"]=t,["delectus"]=t,["delicia"]=t,["deligo"]=t,["deliquium"]=t,["demersus"]=t,["demeto"]=t,["dentio"]=t,["depalo"]=t,["depravate"]=t,["derelictus"]=t,["derisus"]=t,["descensus"]=t,["desero"]=t,["desidia"]=t,["desitus"]=t,["despectus"]=t,["despicatus"]=t,["detentus"]=t,["detestatio"]=t,["detractus"]=t,["detritus"]=t,["deversor"]=t,["di"]=t,["diadematus"]=t,["dico"]=t,["dictus"]=t,["dido"]=t,["digestus"]=t,["digitus"]=t,["digressus"]=t,["dilectus"]=t,["diluvio"]=t,["dipsas"]=t,["diremptus"]=t,["direptus"]=t,["dis"]=t,["discessus"]=t,["discruciatus"]=t,["discursus"]=t,["discus"]=t,["discussus"]=t,["disjectus"]=t,["dispectus"]=t,["dispendo"]=t,["dispositus"]=t,["dissensus"]=t,["dissero"]=t,["dissitus"]=t,["distentus"]=t,["distinctus"]=t,["distractus"]=t,["dius"]=t,["divisus"]=t,["do"]=t,["dolabella"]=t,["dolichos"]=t,["dolo"]=t,["domitius"]=t,["domitus"]=t,["dossennus"]=t,["doto"]=t,["draco"]=t,["dromo"]=t,["ductus"]=t,["duplo"]=t,["durius"]=t,["duumviri"]=t,["echinus"]=t,["echion"]=t,["ecqui"]=t,["editus"]=t,["edo"]=t,["educo"]=t,["effectus"]=t,["effero"]=t,["egestus"]=t,["egressus"]=t,["ei"]=t,["ejectus"]=t,["elate"]=t,["electo"]=t,["elector"]=t,["electrus"]=t,["electus"]=t,["elegus"]=t,["em"]=t,["emersus"]=t,["emissus"]=t,["enixus"]=t,["eo"]=t,["ephorus"]=t,["epulo"]=t,["equitatus"]=t,["er"]=t,["erro"]=t,["eruditus"]=t,["erugo"]=t,["esurio"]=t,["esus"]=t,["eusebes"]=t,["evallo"]=t,["evectus"]=t,["evito"]=t,["exactus"]=t,["excidium"]=t,["excido"]=t,["excitus"]=t,["excogitatus"]=t,["excolo"]=t,["excrementum"]=t,["excretus"]=t,["excursus"]=t,["excussus"]=t,["exemptus"]=t,["exercitus"]=t,["exitus"]=t,["exorsus"]=t,["exortus"]=t,["explicatus"]=t,["expressus"]=t,["exstinctus"]=t,["extentus"]=t,["externatus"]=t,["extersus"]=t,["extrinsecus"]=t,["faber"]=t,["fabula"]=t,["factus"]=t,["falcula"]=t,["falso"]=t,["famulus"]=t,["fanum"]=t,["farfarus"]=t,["fartus"]=t,["fastus"]=t,["fatuor"]=t,["fatus"]=t,["fatuus"]=t,["faustus"]=t,["faventia"]=t,["felicitas"]=t,["felix"]=t,["ferrarius"]=t,["festus"]=t,["fetus"]=t,["fi"]=t,["fidentia"]=t,["fides"]=t,["fidus"]=t,["figulus"]=t,["fimbria"]=t,["fimbriatus"]=t,["fiscellus"]=t,["flaccus"]=t,["flamen"]=t,["flaminius"]=t,["flamma"]=t,["fletus"]=t,["flexus"]=t,["florus"]=t,["fluxus"]=t,["foedus"]=t,["foris"]=t,["formido"]=t,["fornicatio"]=t,["foruli"]=t,["forus"]=t,["fotus"]=t,["fratria"]=t,["fraus"]=t,["fraxinus"]=t,["fretus"]=t,["frictus"]=t,["frigo"]=t,["frons"]=t,["fronto"]=t,["fructus"]=t,["fucinus"]=t,["fundo"]=t,["furio"]=t,["furor"]=t,["fuscus"]=t,["fusus"]=t,["futtile"]=t,["galbus"]=t,["galla"]=t,["gallina"]=t,["gallus"]=t,["gelo"]=t,["genitus"]=t,["genuinus"]=t,["genus"]=t,["germanus"]=t,["gero"]=t,["gestio"]=t,["gestus"]=t,["gibber"]=t,["gibbus"]=t,["gillo"]=t,["gramma"]=t,["grammatice"]=t,["grammaticus"]=t,["graphice"]=t,["gressus"]=t,["grosphus"]=t,["grossus"]=t,["gryllus"]=t,["gurges"]=t,["gurgulio"]=t,["gutta"]=t,["gymnasium"]=t,["habitus"]=t,["harmonia"]=t,["harpago"]=t,["harpax"]=t,["hau"]=t,["haustus"]=t,["hemina"]=t,["hera"]=t,["here"]=t,["herous"]=t,["hicine"]=t,["hiera"]=t,["hilaria"]=t,["hilarus"]=t,["hister"]=t,["historice"]=t,["hoc"]=t,["hora"]=t,["horreum"]=t,["hortator"]=t,["hortensius"]=t,["hostio"]=t,["hostus"]=t,["hydrus"]=t,["ictus"]=t,["ignotus"]=t,["ilia"]=t,["iliacus"]=t,["ilium"]=t,["illapsus"]=t,["illectus"]=t,["illex"]=t,["illic"]=t,["illisus"]=t,["illitus"]=t,["illuc"]=t,["imminutus"]=t,["immissus"]=t,["immixtus"]=t,["immutabilis"]=t,["immutatus"]=t,["immutilatus"]=t,["impensus"]=t,["impetibilis"]=t,["implexus"]=t,["impressus"]=t,["impropero"]=t,["impugnatus"]=t,["impulsus"]=t,["imputatus"]=t,["in"]=t,["in1"]=t,["inauditus"]=t,["inauratus"]=t,["incensus"]=t,["inceptus"]=t,["incerto"]=t,["incestus"]=t,["incido"]=t,["incisus"]=t,["incitatus"]=t,["incitus"]=t,["inclinatus"]=t,["inclinis"]=t,["incoctus"]=t,["incolo"]=t,["inconsultus"]=t,["incorporatus"]=t,["increpitus"]=t,["incretus"]=t,["incruentatus"]=t,["incubitus"]=t,["incubo"]=t,["incultus"]=t,["incursus"]=t,["incussus"]=t,["indagatus"]=t,["indago"]=t,["indico"]=t,["indictus"]=t,["indiges"]=t,["indigestus"]=t,["indoloria"]=t,["inductus"]=t,["indultus"]=t,["industria"]=t,["indutus"]=t,["infectio"]=t,["infectus"]=t,["inferius"]=t,["inficiens"]=t,["infirmo"]=t,["inflatus"]=t,["inflexus"]=t,["inflictus"]=t,["inforo"]=t,["infractus"]=t,["infrenatus"]=t,["infucatus"]=t,["infusus"]=t,["ingenitus"]=t,["ingestus"]=t,["inhabitabilis"]=t,["initus"]=t,["injectus"]=t,["injunctus"]=t,["injussus"]=t,["innatus"]=t,["innexus"]=t,["innutritus"]=t,["inquies"]=t,["inquilinus"]=t,["inquisitus"]=t,["insaeptus"]=t,["inscensus"]=t,["inscriptus"]=t,["inseco"]=t,["insectus"]=t,["insequenter"]=t,["insero"]=t,["insessus"]=t,["insitor"]=t,["insitus"]=t,["insomnium"]=t,["inspectus"]=t,["inspersus"]=t,["instinctus"]=t,["instratus"]=t,["instructus"]=t,["insuetus"]=t,["insula"]=t,["intactus"]=t,["intectus"]=t,["intellectus"]=t,["intentatus"]=t,["intentus"]=t,["inter"]=t,["interceptus"]=t,["intercido"]=t,["intercursus"]=t,["interdictus"]=t,["interitus"]=t,["interjectus"]=t,["interminatus"]=t,["intermissus"]=t,["interpellatus"]=t,["interpositus"]=t,["intersero"]=t,["interversor"]=t,["intestabilis"]=t,["intestatus"]=t,["intextus"]=t,["intinctus"]=t,["intonsus"]=t,["intremulus"]=t,["intrinsecus"]=t,["intritus"]=t,["intro"]=t,["introitus"]=t,["inustus"]=t,["invasus"]=t,["invectus"]=t,["inventus"]=t,["investigabilis"]=t,["invidens"]=t,["invideo"]=t,["invisus"]=t,["invocatus"]=t,["io"]=t,["ion"]=t,["irrasus"]=t,["irrisus"]=t,["irritatus"]=t,["irrito"]=t,["irritus"]=t,["irruptus"]=t,["issus"]=t,["istic"]=t,["itero"]=t,["iulis"]=t,["iulus"]=t,["jactus"]=t,["juba"]=t,["judicatus"]=t,["jugis"]=t,["jugo"]=t,["junctus"]=t,["jus"]=t,["jussus"]=t,["juvenalis"]=t,["juvencus"]=t,["labellum"]=t,["labeo"]=t,["labes"]=t,["labor"]=t,["laboratus"]=t,["labrum"]=t,["lacerna"]=t,["lacertus"]=t,["lactans"]=t,["lacto"]=t,["laetus"]=t,["lamia"]=t,["lanarius"]=t,["lanatus"]=t,["lanio"]=t,["lapsus"]=t,["laqueatus"]=t,["laqueo"]=t,["largitor"]=t,["largitus"]=t,["largus"]=t,["laterarius"]=t,["laterensis"]=t,["latesco"]=t,["latro"]=t,["latus"]=t,["laus"]=t,["leaena"]=t,["lectus"]=t,["leda"]=t,["lego"]=t,["lenis"]=t,["leno"]=t,["lens"]=t,["lento"]=t,["lentulus"]=t,["lenunculus"]=t,["leo"]=t,["leoninus"]=t,["lepidus"]=t,["levatus"]=t,["levigo"]=t,["levis"]=t,["levitas"]=t,["levo"]=t,["liber"]=t,["liberalis"]=t,["libertinus"]=t,["libo"]=t,["librarius"]=t,["liceo"]=t,["licinus"]=t,["ligo"]=t,["ligurius"]=t,["limo"]=t,["limus"]=t,["linctus"]=t,["linitus"]=t,["lipara"]=t,["liparis"]=t,["liquens"]=t,["liquor"]=t,["litus"]=t,["locusta"]=t,["locutus"]=t,["longinquo"]=t,["lora"]=t,["lotus"]=t,["lucinus"]=t,["lucius"]=t,["lucus"]=t,["ludius"]=t,["lues"]=t,["luna"]=t,["luo"]=t,["lupinus"]=t,["lupus"]=t,["lurco"]=t,["luscinius"]=t,["luscinus"]=t,["lustramentum"]=t,["lustro"]=t,["lustrum"]=t,["lusus"]=t,["luteus"]=t,["luto"]=t,["lutum"]=t,["luxus"]=t,["lycaon"]=t,["lycophon"]=t,["lygos"]=t,["lymphatus"]=t,["lysimachia"]=t,["lysis"]=t,["macellus"]=t,["macer"]=t,["maceries"]=t,["machaera"]=t,["mactus"]=t,["macula"]=t,["magis"]=t,["magnes"]=t,["magnus"]=t,["magus"]=t,["maia"]=t,["malum"]=t,["malus"]=t,["mammula"]=t,["mana"]=t,["manalis"]=t,["mandatus"]=t,["mando"]=t,["manduco"]=t,["mania"]=t,["manifesto"]=t,["manto"]=t,["manus"]=t,["marculus"]=t,["marcus"]=t,["maritus"]=t,["marrubium"]=t,["massa"]=t,["masso"]=t,["maternus"]=t,["matrona"]=t,["medialis"]=t,["medica"]=t,["medicatus"]=t,["medicus"]=t,["medion"]=t,["meditatus"]=t,["medius"]=t,["melas"]=t,["meles"]=t,["melicus"]=t,["melina"]=t,["melinum"]=t,["melinus"]=t,["melitinus"]=t,["melius"]=t,["mella"]=t,["melo"]=t,["melos"]=t,["memor"]=t,["memoratus"]=t,["mena"]=t,["menaeus"]=t,["mensus"]=t,["mentio"]=t,["mento"]=t,["mentum"]=t,["merces"]=t,["merenda"]=t,["mergulus"]=t,["merito"]=t,["merops"]=t,["merula"]=t,["meto"]=t,["metropolis"]=t,["metropolitanus"]=t,["miliarius"]=t,["mina"]=t,["minio"]=t,["minius"]=t,["minor"]=t,["minus"]=t,["minutius"]=t,["minyas"]=t,["missor"]=t,["missus"]=t,["mistus"]=t,["mnester"]=t,["modulatus"]=t,["moenia"]=t,["moera"]=t,["molitio"]=t,["molitor"]=t,["molitus"]=t,["molliculus"]=t,["molo"]=t,["molon"]=t,["monitus"]=t,["monstratus"]=t,["montanus"]=t,["mora"]=t,["moratus"]=t,["mordicus"]=t,["morio"]=t,["moror"]=t,["morosus"]=t,["morsus"]=t,["morus"]=t,["motus"]=t,["mugio"]=t,["mulio"]=t,["multa"]=t,["multo"]=t,["mundus"]=t,["munificus"]=t,["munio"]=t,["muraena"]=t,["murcus"]=t,["murra"]=t,["murreus"]=t,["murrinus"]=t,["mus"]=t,["musca"]=t,["musice"]=t,["muto"]=t,["mutuo"]=t,["myrice"]=t,["myron"]=t,["myrrhis"]=t,["mys"]=t,["naevius"]=t,["nana"]=t,["narcissus"]=t,["narratus"]=t,["nascentia"]=t,["nasica"]=t,["nasus"]=t,["natalis"]=t,["natus"]=t,["nauplius"]=t,["ne"]=t,["nebris"]=t,["nec"]=t,["neglectus"]=t,["neo"]=t,["nepeta"]=t,["nepos"]=t,["nepotilla"]=t,["nepotinus"]=t,["nervicus"]=t,["netus"]=t,["nexus"]=t,["nico"]=t,["nigellus"]=t,["niger"]=t,["nihilo"]=t,["nisus"]=t,["nitela"]=t,["nitens"]=t,["nitor"]=t,["nixus"]=t,["no"]=t,["noctua"]=t,["nola"]=t,["nominatus"]=t,["nona"]=t,["notos"]=t,["notus"]=t,["novellus"]=t,["nucula"]=t,["numerius"]=t,["numero"]=t,["nundina"]=t,["nuptus"]=t,["nutritus"]=t,["nymphaeum"]=t,["o"]=t,["obba"]=t,["obitus"]=t,["objectus"]=t,["oblitus"]=t,["obnisus"]=t,["obortus"]=t,["obsequens"]=t,["obsero"]=t,["obsidium"]=t,["obsono"]=t,["obstantia"]=t,["obstitus"]=t,["obstrictus"]=t,["obtectus"]=t,["obtentus"]=t,["obtritus"]=t,["occasus"]=t,["occido"]=t,["occulto"]=t,["occupatus"]=t,["ocrea"]=t,["odium"]=t,["odoratus"]=t,["oenus"]=t,["ofella"]=t,["offectus"]=t,["offendo"]=t,["offensus"]=t,["offerumenta"]=t,["oleo"]=t,["oletum"]=t,["olfactus"]=t,["olor"]=t,["olus"]=t,["omnigenus"]=t,["opertus"]=t,["ophion"]=t,["ophites"]=t,["ophiusa"]=t,["opinatus"]=t,["oppositus"]=t,["oppressus"]=t,["oppugno"]=t,["ops"]=t,["optio"]=t,["opus"]=t,["ora"]=t,["orca"]=t,["origo"]=t,["ornatus"]=t,["orneus"]=t,["orsus"]=t,["ortus"]=t,["ortygia"]=t,["os"]=t,["oscillum"]=t,["osculo"]=t,["ostentus"]=t,["ostiarius"]=t,["otus"]=t,["ovatus"]=t,["paco"]=t,["pactus"]=t,["paedico"]=t,["paenula"]=t,["paeonia"]=t,["paetus"]=t,["palma"]=t,["palmipes"]=t,["palo"]=t,["palpo"]=t,["palus"]=t,["pampinatus"]=t,["panacea"]=t,["pando"]=t,["panniculus"]=t,["pansa"]=t,["panther"]=t,["panthera"]=t,["papa"]=t,["pararius"]=t,["paratus"]=t,["parens"]=t,["pario"]=t,["parma"]=t,["paro"]=t,["parra"]=t,["partio"]=t,["partus"]=t,["parus"]=t,["passer"]=t,["passerinus"]=t,["passive"]=t,["passivus"]=t,["passus"]=t,["pastus"]=t,["patella"]=t,["patibulus"]=t,["patina"]=t,["patrius"]=t,["patruus"]=t,["paulus"]=t,["pavo"]=t,["pax"]=t,["pecus"]=t,["pedatura"]=t,["pedatus"]=t,["pedicularius"]=t,["pediculus"]=t,["pedo"]=t,["pedum"]=t,["peloris"]=t,["penitus"]=t,["pennus"]=t,["per"]=t,["percolo"]=t,["perculsus"]=t,["percussus"]=t,["perdix"]=t,["peredo"]=t,["perfectus"]=t,["perfrictio"]=t,["permissus"]=t,["pero"]=t,["perpetuo"]=t,["persero"]=t,["persicus"]=t,["perspectus"]=t,["persuasus"]=t,["pertractus"]=t,["pertritus"]=t,["pervolo"]=t,["pessulum"]=t,["pessum"]=t,["petasunculus"]=t,["petitus"]=t,["petra"]=t,["petraeus"]=t,["petro"]=t,["petronius"]=t,["peuce"]=t,["phalangarius"]=t,["phalaris"]=t,["phiala"]=t,["philus"]=t,["philyra"]=t,["phocis"]=t,["phoenice"]=t,["phoenix"]=t,["phormio"]=t,["phu"]=t,["physica"]=t,["pictor"]=t,["picus"]=t,["pietas"]=t,["pigror"]=t,["pila"]=t,["pilatus"]=t,["pilo"]=t,["pilus"]=t,["pinna"]=t,["pipio"]=t,["pisa"]=t,["pisciculus"]=t,["piso"]=t,["pithecium"]=t,["placentia"]=t,["plaga"]=t,["plancus"]=t,["plantarium"]=t,["planus"]=t,["platea"]=t,["platice"]=t,["plausus"]=t,["plautus"]=t,["plecto"]=t,["plexus"]=t,["poetice"]=t,["polia"]=t,["polio"]=t,["pollentia"]=t,["pollex"]=t,["pollio"]=t,["polus"]=t,["pons"]=t,["pontus"]=t,["populatio"]=t,["populus"]=t,["porca"]=t,["porrigo"]=t,["porthmos"]=t,["portitor"]=t,["porus"]=t,["posca"]=t,["positus"]=t,["possessus"]=t,["postumus"]=t,["potentia"]=t,["potio"]=t,["potior"]=t,["potitus"]=t,["potus"]=t,["praecia"]=t,["praecinctus"]=t,["praecursus"]=t,["praedatus"]=t,["praedico"]=t,["praedo"]=t,["praefatus"]=t,["praefectus"]=t,["praegressus"]=t,["praelego"]=t,["praemando"]=t,["praemonitus"]=t,["praeparatus"]=t,["praepositus"]=t,["praes"]=t,["praescriptus"]=t,["praesentia"]=t,["praesto"]=t,["praetextus"]=t,["praetorianus"]=t,["praeventus"]=t,["precarium"]=t,["pressus"]=t,["princeps"]=t,["priscus"]=t,["pristinus"]=t,["pro"]=t,["probus"]=t,["processus"]=t,["procidentia"]=t,["procido"]=t,["procinctus"]=t,["procus"]=t,["prodicius"]=t,["proditio"]=t,["proditus"]=t,["profano"]=t,["profectus"]=t,["profligo"]=t,["progressus"]=t,["projectus"]=t,["prolapsus"]=t,["prolatus"]=t,["promissus"]=t,["promotus"]=t,["promptus"]=t,["pronatus"]=t,["propago"]=t,["propudium"]=t,["propulsus"]=t,["prorsus"]=t,["prosectus"]=t,["prosero"]=t,["prospectus"]=t,["prosum"]=t,["protectus"]=t,["protractus"]=t,["provectus"]=t,["proviso"]=t,["provisus"]=t,["proximo"]=t,["psecas"]=t,["pubes"]=t,["pugillum"]=t,["pulcher"]=t,["pullulus"]=t,["pullus"]=t,["pulsus"]=t,["pulto"]=t,["punctus"]=t,["purgatus"]=t,["puritas"]=t,["puta"]=t,["putus"]=t,["pyrgus"]=t,["quadra"]=t,["quadratus"]=t,["quadrigarius"]=t,["quadruplator"]=t,["quaesitus"]=t,["quandoque"]=t,["quantulus"]=t,["quassus"]=t,["questus"]=t,["qui"]=t,["quies"]=t,["quinque"]=t,["quintus"]=t,["quiris"]=t,["quis"]=t,["quod"]=t,["quojus"]=t,["quoque"]=t,["rabo"]=t,["rapina"]=t,["raptus"]=t,["rasus"]=t,["ravus"]=t,["re"]=t,["rebellio"]=t,["recensus"]=t,["receptus"]=t,["recessus"]=t,["recido"]=t,["recolo"]=t,["recussus"]=t,["redactus"]=t,["refectus"]=t,["reflexus"]=t,["regestum"]=t,["regillus"]=t,["regressus"]=t,["regulus"]=t,["rejectus"]=t,["relatus"]=t,["relego"]=t,["relictus"]=t,["remando"]=t,["remano"]=t,["remora"]=t,["remulus"]=t,["remus"]=t,["repens"]=t,["repercussus"]=t,["repertus"]=t,["reposco"]=t,["repugnantia"]=t,["repulsus"]=t,["resero"]=t,["resonus"]=t,["respectus"]=t,["respergo"]=t,["respersus"]=t,["responsus"]=t,["restitutus"]=t,["retento"]=t,["retentus"]=t,["retractatus"]=t,["retractus"]=t,["rex"]=t,["ricinus"]=t,["robus"]=t,["roseus"]=t,["rubeta"]=t,["rubeus"]=t,["rubricatus"]=t,["rudens"]=t,["rudis"]=t,["rudus"]=t,["rufus"]=t,["ruga"]=t,["rumex"]=t,["ruminalis"]=t,["runcina"]=t,["runco"]=t,["rusco"]=t,["ruta"]=t,["rutilus"]=t,["rutuba"]=t,["saburra"]=t,["sacerdos"]=t,["sacrator"]=t,["saga"]=t,["sagarius"]=t,["sagus"]=t,["sale"]=t,["salinator"]=t,["salio"]=t,["salo"]=t,["saltus"]=t,["salve"]=t,["sambucus"]=t,["sapineus"]=t,["sarda"]=t,["sartor"]=t,["sartura"]=t,["satio"]=t,["satus"]=t,["satyricus"]=t,["scaeva"]=t,["scapula"]=t,["scipio"]=t,["scissus"]=t,["scitus"]=t,["scopa"]=t,["scopo"]=t,["scriptus"]=t,["scrofa"]=t,["scutula"]=t,["se"]=t,["sebosus"]=t,["secta"]=t,["sector"]=t,["sectus"]=t,["secundo"]=t,["secundus"]=t,["secus"]=t,["sed"]=t,["sedum"]=t,["sejugis"]=t,["semestris"]=t,["senecio"]=t,["senectus"]=t,["sensus"]=t,["sentis"]=t,["separatus"]=t,["sepes"]=t,["seps"]=t,["serenus"]=t,["seresco"]=t,["serius"]=t,["sero"]=t,["servus"]=t,["severus"]=t,["sextus"]=t,["sibilus"]=t,["sido"]=t,["sil"]=t,["silanus"]=t,["siler"]=t,["silo"]=t,["silus"]=t,["simo"]=t,["simulus"]=t,["sinon"]=t,["sinus"]=t,["sion"]=t,["siris"]=t,["situs"]=t,["smyrna"]=t,["solarium"]=t,["solitaneus"]=t,["solo"]=t,["solum"]=t,["solus"]=t,["sonus"]=t,["sophistice"]=t,["sophos"]=t,["sophus"]=t,["sortitus"]=t,["spargo"]=t,["sparus"]=t,["specula"]=t,["speculatus"]=t,["spinther"]=t,["spongia"]=t,["sponsus"]=t,["spretus"]=t,["spurius"]=t,["squalus"]=t,["stagno"]=t,["stagnum"]=t,["stator"]=t,["status"]=t,["stellio"]=t,["stilo"]=t,["stips"]=t,["stiria"]=t,["stolo"]=t,["storia"]=t,["strabo"]=t,["stratus"]=t,["striga"]=t,["strio"]=t,["strix"]=t,["strobilus"]=t,["strongyle"]=t,["structus"]=t,["struma"]=t,["suasum"]=t,["suasus"]=t,["subactus"]=t,["suberinus"]=t,["subis"]=t,["subjectus"]=t,["subsero"]=t,["substratus"]=t,["subulo"]=t,["subvectus"]=t,["succensio"]=t,["succenturio"]=t,["successus"]=t,["succido"]=t,["succubo"]=t,["succussus"]=t,["suctus"]=t,["sucula"]=t,["suffitus"]=t,["sufflatus"]=t,["suffrago"]=t,["suggestus"]=t,["sulcus"]=t,["sum"]=t,["summersus"]=t,["summissus"]=t,["sumptus"]=t,["super"]=t,["super1"]=t,["supergressus"]=t,["superjectus"]=t,["supparo"]=t,["suppingo"]=t,["sura"]=t,["surena"]=t,["surrectus"]=t,["surus"]=t,["suspecto"]=t,["suspector"]=t,["suspectus"]=t,["suspicio"]=t,["susurro"]=t,["susurrus"]=t,["sutrinus"]=t,["synodus"]=t,["syrus"]=t,["tabularius"]=t,["tacitus"]=t,["tactus"]=t,["tau"]=t,["taurinus"]=t,["taurus"]=t,["taxim"]=t,["te"]=t,["telamo"]=t,["temo"]=t,["tentus"]=t,["tenus"]=t,["termes"]=t,["tersus"]=t,["tertio"]=t,["testis"]=t,["textus"]=t,["thymbra"]=t,["tigris"]=t,["tinctus"]=t,["tiro"]=t,["tonsus"]=t,["torquatus"]=t,["tortus"]=t,["totus"]=t,["trabea"]=t,["tractus"]=t,["traditus"]=t,["traductus"]=t,["tragos"]=t,["trajectus"]=t,["tranquillo"]=t,["transcensus"]=t,["transcursus"]=t,["transgressus"]=t,["transitus"]=t,["translatus"]=t,["transmissus"]=t,["tributus"]=t,["trigonus"]=t,["tritus"]=t,["tropa"]=t,["truncus"]=t,["tuber"]=t,["tubulus"]=t,["tuor"]=t,["turbo"]=t,["tusculum"]=t,["tute"]=t,["tuto"]=t,["tutor"]=t,["typhon"]=t,["uber"]=t,["udo"]=t,["ultimo"]=t,["unctus"]=t,["uncus"]=t,["unio"]=t,["urbicus"]=t,["usucapio"]=t,["usus"]=t,["utens"]=t,["uter"]=t,["uti"]=t,["utique"]=t,["utriculus"]=t,["vacca"]=t,["vacue"]=t,["vado"]=t,["vagor"]=t,["valens"]=t,["valentia"]=t,["vallus"]=t,["varia"]=t,["varianus"]=t,["varicus"]=t,["varius"]=t,["varo"]=t,["varus"]=t,["vas"]=t,["ve"]=t,["vectis"]=t,["velabrum"]=t,["venilia"]=t,["venus"]=t,["verbero"]=t,["vernus"]=t,["vero"]=t,["verres"]=t,["verrinus"]=t,["versus"]=t,["verum"]=t,["vestitus"]=t,["veternus"]=t,["vibo"]=t,["vibratus"]=t,["victor"]=t,["victoriatus"]=t,["victus"]=t,["vilico"]=t,["vinctus"]=t,["violatus"]=t,["viratus"]=t,["vireo"]=t,["viripotens"]=t,["virosus"]=t,["viscus"]=t,["visus"]=t,["vitula"]=t,["vitupero"]=t,["volo"]=t,["volutus"]=t,["vopiscus"]=t,["vulgatus"]=t,["vulgo"]=t,["vultur"]=t,["zeta"]=t,["zeugma"]=t,["zoster"]=t,["zygia"]=t}

      return data</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:37.257Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Acite-book&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42857 t=1555362637155925
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1231.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 204200118, 491963734, 701436918
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="1017978" pageid="1017978" ns="10" title="Template:cite-book"><revisions><rev user="Sgconlaw" timestamp="2019-02-18T15:14:29Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Updated template" xml:space="preserve">&lt;includeonly&gt;{{cite-meta
      |author         = {{{author|{{{2|}}}}}}
      |last           = {{{last|}}}
      |first          = {{{first|}}}
      |authorlink     = {{{authorlink|}}}
      |author2        = {{{author2|}}}
      |last2          = {{{last2|}}}
      |first2         = {{{first2|}}}
      |authorlink2    = {{{authorlink2|}}}
      |author3        = {{{author3|}}}
      |last3          = {{{last3|}}}
      |first3         = {{{first3|}}}
      |authorlink3    = {{{authorlink3|}}}
      |author4        = {{{author4|}}}
      |last4          = {{{last4|}}}
      |first4         = {{{first4|}}}
      |authorlink4    = {{{authorlink4|}}}
      |author5        = {{{author5|}}}
      |last5          = {{{last5|}}}
      |first5         = {{{first5|}}}
      |authorlink5    = {{{authorlink5|}}}
      |coauthors      = {{{coauthors|}}}
      |quotee         = {{{quotee|}}}
      |chapter        = {{{chapter|}}}
      |chapterurl     = {{{chapterurl|}}}
      |entry          = {{{entry|}}}
      |entryurl       = {{{entryurl|}}}
      |trans-chapter  = {{{trans-chapter|{{{trans-entry|}}}}}}
      |translator     = {{{trans|{{{translator|{{{translators|}}}}}}}}}
      |editor         = {{{editor|}}}
      |editors        = {{{editors|}}}
      |title          = {{{title|{{{3|}}}}}}
      |trans-title    = {{{trans-title|}}}
      |series         = {{{series|}}}
      |seriesvolume   = {{{seriesvolume|}}}
      |url            = {{{url|{{{book-link|{{{4|}}}}}}}}}
      |archiveurl     = {{{archiveurl|}}}
      |archivedate    = {{{archivedate|}}}
      |edition        = {{{edition|}}}
      |location       = {{{location|}}}
      |publisher      = {{{publisher|}}}
      |month          = {{{month|}}}
      |year           = {{{year|{{{1|}}}}}}
      |year_published = {{{year_published|}}}
      |date           = {{{date|}}}
      |genre          = {{{genre|}}}
      |lang           = {{{language|{{{lang|{{{worklang|}}}}}}}}}
      |volume         = {{{volume|}}}
      |others         = {{{others|}}}
      |section        = {{{section|}}}
      |sectionurl     = {{{sectionurl|}}}
      |page           = {{{page|{{{5|}}}}}}
      |pages          = {{{pages|}}}
      |pageurl        = {{{pageurl|{{{link|}}}}}}
      |column         = {{{column|}}}
      |columns        = {{{columns|}}}
      |columnurl      = {{{columnurl|}}}
      |doi            = {{{doi|}}}
      |isbn           = {{{isbn|{{{ISBN|}}}}}}
      |oclc           = {{{oclc|}}}
      |id             = {{{id|}}}
      |passage        = {{{passage|{{{quote|{{{text|{{{6|}}}}}}}}}}}}
      |passage_block  = {{{text_block|{{{passage_block|}}}}}}
      |translation    = {{{t|{{{translation|{{{7|}}}}}}}}}
      }}&lt;!--Temporary tracking categories--&gt;{{#if:{{{author|{{{last|{{{editor|}}}}}}}}}||[[Category:Reference templates lacking the author or editor parameters]]}}{{#if:{{{title|}}}||[[Category:Reference templates lacking the title parameter]]}}{{#if:{{{date|{{{year|}}}}}}||[[Category:Reference templates lacking the date or year parameters]]}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:37.456Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Acite-meta&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=60093 t=1555362637324313
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 412315428, 739322226, 690970324
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5380790\" pageid=\"5380790\" ns=\"10\" title=\"Template:cite-meta\"><revisions><rev user=\"Sgconlaw\" timestamp=\"2019-02-18T15:49:04Z\"\
      \ contentformat=\"text/x-wiki\" contentmodel=\"wikitext\" comment=\"Updated template\" xml:space=\"preserve\">&lt;includeonly&gt;{{#if:{{{author|}}}{{{last|}}}\n  | {{#if:{{{authorlink|}}}\n      | [[w:{{{authorlink}}}|{{#if:{{{author|}}}\n          |\
      \ {{{author}}}\n          | {{#if:{{{last|}}}\n              | {{{last}}}{{#if:{{{first|}}}|, {{{first}}}}}\n            }}\n        }}]]\n      | {{#if:{{{author|}}}\n          | {{{author}}}\n          | {{#if:{{{last|}}}\n              | {{{last}}}{{#if:{{{first|}}}|,\
      \ {{{first}}}}}\n            }}\n        }}\n    }}{{#if:{{{author2|}}}{{{last2|}}}\n      | {{#if:{{{authorlink2|}}}\n          |&amp;#59;&lt;!--semicolon--&gt; [[w:{{{authorlink2}}}|{{#if:{{{author2|}}}\n              | {{{author2}}}\n              |\
      \ {{#if:{{{last2|}}}\n                  | {{{last2}}}{{#if:{{{first2|}}}|, {{{first2}}}}}\n                }}\n            }}]]\n          |&amp;#59; {{#if:{{{author2|}}}\n              | {{{author2}}}\n              | {{#if:{{{last2|}}}\n            \
      \      | {{{last2}}}{{#if:{{{first2|}}}|, {{{first2}}}}}\n                }}\n            }}\n        }}\n    }}{{#if:{{{author3|}}}{{{last3|}}}\n      | {{#if:{{{authorlink3|}}}\n          |&amp;#59;&lt;!--semicolon--&gt; [[w:{{{authorlink3}}}|{{#if:{{{author3|}}}\n\
      \              | {{{author3}}}\n              | {{#if:{{{last3|}}}\n                  | {{{last3}}}{{#if:{{{first3|}}}|, {{{first3}}}}}\n                }}\n            }}]]\n          |&amp;#59; {{#if:{{{author3|}}}\n              | {{{author3}}}\n  \
      \            | {{#if:{{{last3|}}}\n                  | {{{last3}}}{{#if:{{{first3|}}}|, {{{first3}}}}}\n                }}\n            }}\n        }}\n    }}{{#if:{{{author4|}}}{{{last4|}}}\n      | {{#if:{{{authorlink4|}}}\n          |&amp;#59;&lt;!--semicolon--&gt;\
      \ [[w:{{{authorlink4}}}|{{#if:{{{author4|}}}\n              | {{{author4}}}\n              | {{#if:{{{last4|}}}\n                  | {{{last4}}}{{#if:{{{first4|}}}|, {{{first4}}}}}\n                }}\n            }}]]\n          |&amp;#59; {{#if:{{{author4|}}}\n\
      \              | {{{author4}}}\n              | {{#if:{{{last4|}}}\n                  | {{{last4}}}{{#if:{{{first4|}}}|, {{{first4}}}}}\n                }}\n            }}\n        }}\n    }}{{#if:{{{author5|}}}{{{last5|}}}\n      | {{#if:{{{authorlink5|}}}\n\
      \          |&amp;#59;&lt;!--semicolon--&gt; [[w:{{{authorlink5}}}|{{#if:{{{author5|}}}\n              | {{{author5}}}\n              | {{#if:{{{last5|}}}\n                  | {{{last5}}}{{#if:{{{first5|}}}|, {{{first5}}}}}\n                }}\n       \
      \     }}]]\n          |&amp;#59; {{#if:{{{author5|}}}\n              | {{{author5}}}\n              | {{#if:{{{last5|}}}\n                  | {{{last5}}}{{#if:{{{first5|}}}|, {{{first5}}}}}\n                }}\n            }}\n        }}\n    }}{{#if:{{{coauthors|}}}\n\
      \        | &amp;#59; {{{coauthors}}}&amp;#32;\n        | &amp;#32;\n      }}\n  | {{#if:{{{translator|}}}&lt;!--If editor and/or translator stated without author, display them here.--&gt;\n      | {{{translator|}}}, transl.{{#if:{{{editor|}}}{{{editors|}}}|&amp;#59;&amp;#32;|,}}\n\
      }}{{#if:{{{editor|}}}\n      | {{{editor}}}, editor&amp;#32;\n      | {{#if:{{{editors|}}}\n          | {{{editors}}}, editors&amp;#32;\n        }}\n    }}\n}}{{#if:{{{author|}}}{{{last|}}}{{{editor|}}}{{{editors|}}}{{{translator|}}}&lt;!--Only display\
      \ quotee and date here if these parameters present. Otherwise, display date after publisher's name.--&gt;\n  | {{#if:{{{quotee|}}}\n      |, quoting {{{quotee|}}}&amp;#32;\n    }}({{#if:{{{year|}}}\n       | {{#if:{{{month|}}}\n           | {{{month}}}\
      \ {{{year}}}\n           | {{#switch:{{padleft:|2|{{{year}}}}}\n               | a. = ''[[Appendix:Glossary#a.|a.]]'' {{#invoke:string|sub|{{{year}}}|4}}\n               | c. = ''[[Appendix:Glossary#c.|c.]]'' {{#invoke:string|sub|{{{year}}}|4}}\n     \
      \          | p. = ''[[Appendix:Glossary#p.|p.]]'' {{#invoke:string|sub|{{{year}}}|4}}\n               | {{{year}}}\n             }}\n         }}\n       | {{#if:{{{date|}}}\n           | {{#formatdate:{{{date}}}}}\n           | {{#if:{{{accessdate|}}}\n\
      \               | accessed {{#formatdate:{{{accessdate}}}}}&lt;!--Use accessdate as a backstop if year or date not specified.--&gt;\n               | {{rfdate|nocat=&lt;noinclude&gt;true&lt;/noinclude&gt;}}\n             }}\n         }}\n    }})\n}}{{#if:{{{author|}}}{{{last|}}}{{{editor|}}}{{{editors|}}}{{{translator|}}}\n\
      \  | {{#if:{{{accessdate|}}}{{{date|}}}{{{year|}}}\n      | {{#if:{{{chapter|}}}{{{entry|}}}\n          |,&amp;#32;&lt;!--Add a comma before chapter or entry if author or editor specified together with date or year. Otherwise, do nothing. (If chapter or\
      \ entry, and date or year, are specified but author or editor not specified, date or year is relocated after the publisher's name.)--&gt;\n        }}\n    }}\n}}{{#if:{{{entry|}}}\n  | {{#invoke:italics|unitalicize_brackets|{{#if:{{{entryurl|}}}\n    \
      \  | “[{{{entryurl}}} {{{entry}}}]\n      | {{#if:{{{url|}}}\n          | “[{{{url}}} {{{entry}}}]\n          | “{{{entry}}}\n        }}\n    }}}}{{#if:{{{trans-chapter|}}}\n      |&amp;#32;&amp;#91;{{#invoke:italics|unitalicize_brackets|{{{trans-chapter}}}}}&amp;#93;”\
      \n      |”\n    }}{{#if:{{{notitle|}}}||, in&amp;#32;}}\n  | {{#if:{{{chapter|}}}\n      | {{#if:{{num|{{{chapter}}}}}&lt;!--Arabic chapter number?--&gt;\n          |&amp;#32;chapter {{#if:{{{chapterurl|}}}\n              | [{{{chapterurl}}} {{{chapter}}}]\n\
      \              | {{{chapter}}}\n            }}\n          | {{#if:{{R2A|{{{chapter}}}|no_error=1}}&lt;!--Roman chapter number?--&gt;\n              |&amp;#32;chapter {{#if:{{{chapterurl|}}}\n                  | [{{{chapterurl}}} {{uc:{{{chapter}}}}}]\n\
      \                  | {{uc:{{{chapter}}}}}\n                }}\n              |&amp;#32;“{{#invoke:italics|unitalicize_brackets|{{#if:{{{chapterurl|}}}&lt;!--Must be a chapter name--&gt;\n                  | [{{{chapterurl}}} {{{chapter}}}]\n          \
      \        | {{{chapter}}}\n                }}}}{{#if:{{{trans-chapter|}}}\n                |&amp;#32;&amp;#91;{{#invoke:italics|unitalicize_brackets|{{{trans-chapter}}}}}&amp;#93;\n                }}”\n            }}\n        }}{{#if:{{{notitle|}}}||, in&amp;#32;}}\n\
      \    }}\n}}{{#if:{{{author|}}}{{{last|}}}&lt;!--Only display editor here if author also provided. If author not provided, do nothing – editor is displayed before date.--&gt;\n  | {{#if:{{{translator|}}}\n      | {{{translator|}}}, transl.{{#if:{{{editor|}}}{{{editors|}}}|&amp;#59;|,}}&amp;#32;\n\
      \    }}{{#if:{{{editor|}}}{{{editors|}}}\n      | {{#if:{{{chapter|}}}{{{entry|}}}|&lt;!--Do nothing.--&gt;|,&amp;#32;}}{{#if:{{{editor|}}}\n          | {{{editor}}}, editor,&amp;#32;\n          | {{#if:{{{editors|}}}\n              | {{{editors}}}, editors,&amp;#32;\n\
      \            }}\n        }}\n    }}\n}}{{#if:{{{chapter|}}}{{{entry|}}}|&lt;!--Do nothing.--&gt;|&amp;#32;&lt;!--If these parameters are not used, add a space.--&gt;}}{{#if:{{{title|}}}\n  |&lt;cite&gt;{{#invoke:italics|unitalicize_brackets|{{{title}}}}}&lt;/cite&gt;\n\
      \  | {{#if:{{{notitle|}}}\n      |&lt;!--Do nothing.--&gt;\n      | {{maintenance line|Please provide the title of the work}}\n    }}\n}}{{#if:{{{trans-title|}}}\n  | &amp;#32;&amp;#91;&lt;cite&gt;{{#invoke:italics|unitalicize_brackets|{{{trans-title}}}}}&lt;/cite&gt;&amp;#93;\n\
      }}{{#if:{{{series|}}}\n  | &amp;#32;({{{series}}}{{#if:{{{seriesvolume|}}}|&amp;#59; {{{seriesvolume}}}}})\n}}{{#if:{{{url|}}}\n  | {{#if:{{{entry|}}}\n      | {{#if:{{{entryurl|}}}&lt;!--If {{{entryurl}} exists, then {{{url}} was not linked to {{{entry}}}\
      \ and should be displayed here--&gt;\n          | {{#if:{{{archiveurl|}}}\n              | &amp;lrm;&lt;!--Left-to-right mark to manage right-to-left languages--&gt;&lt;sup&gt;[{{{archiveurl}}}]&lt;/sup&gt;\n              | &amp;lrm;&lt;sup&gt;[{{{url}}}]&lt;/sup&gt;\n\
      \            }}\n        }}\n      | {{#if:{{{archiveurl|}}}&lt;!--If {{{entry}}} doesn't exist but {{{url}}} is specified, display it--&gt;\n          | &amp;lrm;&lt;!--Left-to-right mark to manage right-to-left languages--&gt;&lt;sup&gt;[{{{archiveurl}}}]&lt;/sup&gt;\n\
      \          | &amp;lrm;&lt;sup&gt;[{{{url}}}]&lt;/sup&gt;\n        }}\n    }}\n}}{{#if:{{{format|}}}{{{genre|}}}\n  | {{#if:{{{lang|}}}{{{worklang|}}}\n      | &amp;#32;({{#if:{{{format|}}}\n          | {{{format}}}\n          | {{#if:{{{genre|}}}\n   \
      \           | {{{genre}}}\n            }}\n        }}, in {{#invoke:languages/templates|getCanonicalName|{{{lang|{{{worklang|}}}}}}|return_if_invalid=1}})\n      | &amp;#32;({{#if:{{{format|}}}\n          | {{{format}}}\n          | {{#if:{{{genre|}}}\n\
      \              | {{{genre}}}\n            }}\n        }})\n    }}\n  | {{#if:{{{lang|}}}{{{worklang|}}}\n      | &amp;#32;(in {{#invoke:languages/templates|getCanonicalName|{{{lang|{{{worklang|}}}}}}|return_if_invalid=1}})\n    }}\n}}{{#if:{{{version|}}}\n\
      \  |, {{{version}}}\n}}{{#if:{{{volume|}}}\n  |, volume {{{volume}}}\n}}{{#if:{{{others|}}}\n  |, {{{others}}}\n}}{{#if:{{{issue|}}}\n  |, issue {{{issue}}}\n}}{{#if:{{{edition|}}}\n  |, {{{edition}}} edition\n}}{{#if:{{{publisher|}}}\n  | {{#if:{{{location|}}}\n\
      \      |, {{{location}}}&amp;#58;&lt;!--colon--&gt;\n      |,\n    }} {{{publisher}}}\n  | {{#if:{{{location|}}}\n      |, {{{location}}}\n    }}\n}}{{#if:{{{author|}}}{{{last|}}}\n  |&lt;!--Do nothing if present.--&gt;\n  | {{#if:{{{editor|}}}{{{editors|}}}{{{translator|}}}\n\
      \      |&lt;!--Do nothing if present.--&gt;\n      |, {{#if:{{{year|}}}&lt;!--If author, editor and translator all absent, display date here.--&gt;\n           | {{#if:{{{month|}}}\n               | {{{month}}} {{{year}}}\n               | {{{year}}}\n\
      \             }}\n           | {{#if:{{{date|}}}\n               | {{#formatdate:{{{date}}}}}\n               | {{#if:{{{accessdate|}}}\n                   | accessed {{#formatdate:{{{accessdate}}}}}&lt;!--Use accessdate as a backstop if year or date not\
      \ specified.--&gt;\n                   | {{maintenance line|Please provide a date or year}}\n                 }}\n             }}\n         }}\n    }}\n}}{{#if:{{{year_published|}}}\n  |, published {{{year_published}}}\n}}{{#if:{{{bibcode|}}}\n  |, &lt;small&gt;[[w:Bibcode|Bibcode]]:&amp;nbsp;[http://adsabs.harvard.edu/abs/{{urlencode:{{{bibcode}}}}}\
      \ {{{bibcode}}}]&lt;/small&gt;\n}}{{#if:{{{doi|}}}\n  |, &lt;small&gt;[[w:Digital object identifier|DOI]]:{{#if:{{{doi_brokendate|}}} \n     | {{#tag:nowiki|{{{doi}}}}} (inactive [[{{{doi_brokendate}}}]]){{#ifeq:{{NAMESPACE}}|{{ns:0}}|[[Category:Pages\
      \ with DOIs broken since {{#time:Y|{{{doi_brokendate}}} }}]]}}\n     | &lt;span class=\"neverexpand\"&gt;[https://doi.org/{{urlencode:{{{doi}}}}} {{#tag:nowiki|{{{doi}}}}}]&lt;/span&gt;\n   }}&lt;/small&gt;\n}}{{#if:{{{isbn|}}}\n  |, &lt;small&gt;{{ISBN|{{{isbn}}}}}&lt;/small&gt;\n\
      }}{{#if:{{{issn|}}}\n  |, &lt;small&gt;{{ISSN|{{{issn}}}}}&lt;/small&gt;\n}}{{#if:{{{jstor|}}} \n  |, &lt;small&gt;[[w:JSTOR|JSTOR]] [http://www.jstor.org/stable/{{urlencode:{{{jstor}}}}} {{{jstor}}}]&lt;/small&gt;\n}}{{#if:{{{lccn|}}} \n  |, &lt;small&gt;[[w:Library\
      \ of Congress Control Number|LCCN]] [http://lccn.loc.gov/{{urlencode:{{{lccn}}}}} {{{lccn}}}]&lt;/small&gt;\n}}{{#if:{{{oclc|}}} \n  |, &lt;small&gt;[[w:OCLC|OCLC]] [http://worldcat.org/oclc/{{urlencode:{{{oclc}}}}} {{{oclc}}}]&lt;/small&gt;\n}}{{#if:{{{pmid|}}}\n\
      \  |, &lt;small&gt;[[w:PubMed Identifier|PMID]] [http://www.ncbi.nlm.nih.gov/pubmed/{{urlencode:{{{pmid}}}}} {{{pmid}}}]&lt;/small&gt;\n}}{{#if:{{{ssrn|}}}\n  |, &lt;small&gt;[[w:Social Science Research Network|SSRN]] [http://ssrn.com/abstract={{urlencode:{{{ssrn}}}}}\
      \ {{{ssrn}}}]&lt;/small&gt;\n}}{{#if:{{{id|}}}\n  |, &lt;small&gt;{{{id}}}&lt;/small&gt;\n}}{{#if:{{{archiveurl|}}}\n  |, archived from [{{{url}}} the original] on {{#formatdate:{{{archivedate}}}}}\n}}{{#if:{{{accessdate|}}}\n  | {{#if:{{{date|}}}{{{year|}}}&lt;!--Only\
      \ display accessdate if either date or year is specified, as accessdate is already used earlier in place of these parameters if they are missing.--&gt;\n      |, retrieved {{#formatdate:{{{accessdate}}}}}\n    }}\n}}{{#if:{{{section|}}}\n  |, {{#if:{{{sectionurl|}}}\n\
      \       | [{{{sectionurl}}} {{{section}}}]\n       | {{{section}}}\n     }}\n}}{{#if:{{{pages|}}}\n  | {{#if:{{{page|}}}\n      |, {{#if:{{{pageurl|}}}\n           | [{{{pageurl}}} page {{{page}}}]\n           | page {{{page}}}\n         }}&amp;#32;of\
      \ {{{pages}}}\n      |, {{#if:{{{pageurl|}}}\n           | [{{{pageurl}}} pages {{{pages}}}]\n           | pages {{{pages}}}\n         }}\n    }}\n  | {{#if:{{{page|}}}\n      |, {{#if:{{{pageurl|}}}\n           | [{{{pageurl}}} page {{{page}}}]\n    \
      \       | page {{{page}}}\n         }}\n    }}\n}}{{#if:{{{column|}}}{{{columns|}}}\n  |, {{#if:{{{columnurl|}}}\n      | [{{{columnurl}}} {{#if:{{{columns|}}}\n           | columns {{{columns}}}\n           | column {{{column}}}\n        }}]\n      |\
      \ {{#if:{{{columns|}}}\n           | columns {{{columns}}}\n           | column {{{column}}}\n        }}\n    }}\n}}{{#if:{{{passage_block|}}}\n  | {{#ifeq:{{{passage_block|}}}|no\n      | {{#if:{{{passage|}}}\n          |&amp;#58; “{{{passage}}}{{#if:{{{translation|}}}\n\
      \              |&amp;#32;[{{{translation}}}]\n            }}”\n        }}\n      |&amp;#58;&lt;!--colon--&gt;&lt;dl&gt;&lt;dd&gt;{{{passage_block}}}{{#if:{{{translation|}}}\n          |&lt;dl&gt;&lt;dd&gt;{{{translation}}}&lt;/dd&gt;&lt;/dl&gt;\n     \
      \   }}&lt;/dd&gt;&lt;/dl&gt;\n    }}\n  | {{#if:{{{passage|}}}\n      | {{#ifexpr:{{#invoke:string|len|{{{passage}}}}}&gt;300\n          |&amp;#58;&lt;dl&gt;&lt;dd&gt;{{{passage}}}{{#if:{{{translation|}}}\n              |&lt;dl&gt;&lt;dd&gt;{{{translation}}}&lt;/dd&gt;&lt;/dl&gt;\n\
      \           }}&lt;/dd&gt;&lt;/dl&gt;\n          |&amp;#58; “{{{passage}}}{{#if:{{{translation|}}}\n              |&amp;#32;[{{{translation}}}]\n            }}”\n        }}\n    }}\n}}{{#if:{{{archiveurl|}}}\n  | {{#if:{{{archivedate|}}}\n      |&lt;!--Do\
      \ nothing--&gt;\n      | [[Category:Quotations using archiveurl without archivedate]]\n    }}\n}}&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:37.637Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aitalics&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42571 t=1555362637535245
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 206588763, 826656875, 691921464
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5880637\" pageid=\"5880637\" ns=\"828\" title=\"Module:italics\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-12-26T23:15:23Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"fix case starting with bolding\" xml:space=\"preserve\">local export = {}\nlocal find = mw.ustring.find\nlocal match = mw.ustring.match\nlocal gsub = mw.ustring.gsub\n\nfunction export.i(text)\n\tif text\
      \ == \"\" or text == nil then\n\t\treturn nil\n\tend\n\t\n\tif type(text) == \"table\" and text.args then\n\t\ttext = text.args[1]\n\tend\n\t\n\t-- Remove whitespace from beginning and end of text.\n\ttext = mw.text.trim(text)\n\t\n\t-- Find parenthesized\
      \ text.\n\tlocal parenthesis = \"\"\n\tif find(text, \"%b()$\") then\n\t\ttext, parenthesis = match(text, \"^(.*)(%b())$\")\n\t\tif text == \"\" or text == nil then\n\t\t\terror(\"Malformed page name: \" .. text)\n\t\tend\n\tend\n\t\n\ttext = \"''\" ..\
      \ text .. \"''\"\n\t\n\t--[[ Adds italics toggle ('') around the whitespace\n\t\tthat surrounds various things that aren't supposed to be italicized:\n\t\tfor instance, Fragaria × ananassa becomes ''Fragaria'' × ''ananassa''.\n\t\t(The hybridization symbol\
      \ × isn't supposed to be italicized.) ]]\n\tlocal notItalicized = {\n\t\t[\"subsp.\"] = true, [\"ssp.\"] = true, [\"var.\"] = true, [\"f.\"] = true,\n\t\t[\"sect.\"] = true, [\"subsect.\"] = true, [\"subg.\"] = true,\n\t}\n\tlocal hybrid = \"×\"\n\t\n\t\
      text = text:gsub(\"(%s*([a-z]+%.)%s*)\",\n\t\tfunction(wholeMatch, abbreviation)\n\t\t\tif notItalicized[abbreviation] then\n\t\t\t\treturn \"''\" .. wholeMatch .. \"''\"\n\t\t\tend\n\t\tend)\n\t\n\ttext = text:gsub(\"%s*\" .. hybrid .. \"%s*\", \"''%0''\"\
      ):gsub(\"%f[']''''%f[^']\", \"\")\n\t\n\treturn text .. parenthesis\nend\n\nfunction export.unitalicize_brackets(text)\n\tif type(text) == \"table\" and text.args then\n\t\ttext = text.args[1]\n\tend\n\t\n\tif not text or text == \"\" then\n\t\treturn\
      \ nil\n\tend\n\t\n\tlocal function unitalicize(text)\n\t\treturn '&lt;span style=\"font-style: normal;\"&gt;' .. text .. '&lt;/span&gt;'\n\tend\n\t\n\tlocal function process(text)\n\t\tif text:find(\"[[\", 1, true) then\n\t\t\tif text:find(\"|\") then\n\
      \t\t\t\treturn text:gsub(\n\t\t\t\t\t\"|.-%]%]\",\n\t\t\t\t\tfunction (piping)\n\t\t\t\t\t\treturn piping:gsub(\"%b[]\", process)\n\t\t\t\t\tend)\n\t\t\tend\n\t\t\t-- do nothing with un-piped wikilinks\n\t\t--[=[\n\t\telseif text:find(\"[http\", 1, true)\
      \ then\n\t\t\treturn text:gsub(\n\t\t\t\t\"%[([^ ]+ )([^%]]+)%]\",\n\t\t\t\tfunction (URL, link_text)\n\t\t\t\t\treturn \"[\" .. URL .. process(link_text) .. \"]\"\n\t\t\t\tend)\n\t\t--]=]\n\t\telseif text:find(\"^%[https?://\") then\n\t\t\t\treturn text:gsub(\n\
      \t\t\t\t\t\" .+\",\n\t\t\t\t\tfunction (link_text)\n\t\t\t\t\t\treturn link_text:gsub(\"%b[]\", process)\n\t\t\t\t\tend)\n\t\telse\n\t\t\tlocal inside_brackets = text:sub(2, -2)\n\t\t\tif inside_brackets == \"...\" or inside_brackets == \"…\" then\n\t\t\
      \t\treturn unitalicize(text)\n\t\t\telse\n\t\t\t\treturn unitalicize(\"[\") .. inside_brackets .. unitalicize(\"]\")\n\t\t\tend\n\t\tend\n\tend\n\t\n\ttext = text:gsub(\"%b[]\", process)\n\t\n\treturn text\nend\n\nfunction export.test(frame)\n\tlocal text\
      \ = frame.args[1]\n\tlocal quote = require(\"Module:yesno\")(frame.args.quote)\n\tif quote then\n\t\treturn export.unitalicize_brackets(text)\n\telse\n\t\treturn export.i(text)\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:37.804Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AR%3AElementary+Lewis&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41717 t=1555362637706404
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1287'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 590577036, 258583317, 691985902
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5708819" pageid="5708819" ns="10" title="Template:R:Elementary Lewis"><revisions><rev user="Dan Polansky" timestamp="2017-03-11T09:51:47Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="restore the simple formatting from 2 August 2016‎ without OCLC" xml:space="preserve">{{#invoke:R:Perseus|create}}&lt;!--

      --&gt;{{cite-book&lt;!--
          --&gt;|author=Charlton T. Lewis&lt;!--
          --&gt;|title=An Elementary Latin Dictionary&lt;!--
          --&gt;|publisher=Harper &amp; Brothers&lt;!--
          --&gt;|location=New York&lt;!--
          --&gt;|year=1891&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:38Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AR%3APerseus%2Fcollision-data%2FEL&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=37790 t=1555362637898404
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 197294503, 252132488, 688780480
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="6072195" pageid="6072195" ns="828" title="Module:R:Perseus/collision-data/EL"><revisions><rev user="Erutuon" timestamp="2017-03-24T22:41:03Z" contentformat="text/plain" contentmodel="Scribunto" comment="copied from [[Module:R:Perseus/collision-data]]" xml:space="preserve">local t = true

      local data = { ["A"]=t,["Academicus"]=t,["Augustus"]=t,["Bona"]=t,["Centaurus"]=t,["Cn"]=t,["Galla"]=t,["Gallus"]=t,["Hymenaeus"]=t,["Ilium"]=t,["Indiges"]=t,["Latius"]=t,["Maius"]=t,["Notus"]=t,["Parilis"]=t,["Poenus"]=t,["Pythia"]=t,["Quirinus"]=t,["Quiris"]=t,["Sirius"]=t,["a"]=t,["abdico"]=t,["abscidi"]=t,["accensus"]=t,["accido"]=t,["accisus"]=t,["accitus"]=t,["acer"]=t,["actus"]=t,["adeo"]=t,["adfectus"]=t,["adfinis"]=t,["aditus"]=t,["adlego"]=t,["adolesco"]=t,["adversum"]=t,["adversus"]=t,["aedes"]=t,["aerarius"]=t,["aggero"]=t,["agnatus"]=t,["agrestis"]=t,["alienum"]=t,["alienus"]=t,["aliquantum"]=t,["altum"]=t,["ambitus"]=t,["amictus"]=t,["amicus"]=t,["amissus"]=t,["amplexus"]=t,["animo"]=t,["animosus"]=t,["annalis"]=t,["anus"]=t,["apparatus"]=t,["appello"]=t,["appetitus"]=t,["appulsus"]=t,["arbitratus"]=t,["arcessitus"]=t,["armatus"]=t,["artus"]=t,["ascensus"]=t,["aspectus"]=t,["aspergo"]=t,["assa"]=t,["astu"]=t,["attactus"]=t,["auctus"]=t,["auditus"]=t,["auguratus"]=t,["augustus"]=t,["autumnus"]=t,["aveo"]=t,["aversor"]=t,["bene"]=t,["beta"]=t,["bona"]=t,["caligo"]=t,["calo"]=t,["calx"]=t,["captus"]=t,["cassis"]=t,["castra"]=t,["catella"]=t,["cedo"]=t,["cello"]=t,["census"]=t,["centuriatus"]=t,["centurio"]=t,["cereus"]=t,["certo"]=t,["certum"]=t,["ceterum"]=t,["cinctus"]=t,["circuitus"]=t,["circum"]=t,["circumiectus"]=t,["circumspectus"]=t,["cito"]=t,["claudo"]=t,["claviger"]=t,["coactus"]=t,["coeptus"]=t,["cognatus"]=t,["combibo"]=t,["comitatus"]=t,["commentor"]=t,["commodum"]=t,["communio"]=t,["como"]=t,["comparatio"]=t,["comparo"]=t,["compello"]=t,["complexus"]=t,["compressus"]=t,["conatus"]=t,["conceptus"]=t,["concessus"]=t,["concido"]=t,["concio"]=t,["conditio"]=t,["conditor"]=t,["conditus"]=t,["conflictus"]=t,["congestus"]=t,["congressus"]=t,["coniectus"]=t,["conligo"]=t,["conquestus"]=t,["consensus"]=t,["consero"]=t,["conspectus"]=t,["consterno"]=t,["consulto"]=t,["contactus"]=t,["contemplatus"]=t,["contemptus"]=t,["contentus"]=t,["contextus"]=t,["continens"]=t,["contingo"]=t,["continuo"]=t,["conventus"]=t,["convictus"]=t,["copo"]=t,["corneus"]=t,["cornum"]=t,["cotes"]=t,["cruciatus"]=t,["cucullus"]=t,["cultus"]=t,["cum"]=t,["de"]=t,["decem"]=t,["decido"]=t,["decurio"]=t,["decursus"]=t,["defectus"]=t,["deformo"]=t,["deiectus"]=t,["delectus"]=t,["delego"]=t,["deligo"]=t,["derisus"]=t,["despectus"]=t,["despicatus"]=t,["dialectica"]=t,["dico"]=t,["digressus"]=t,["dilectus"]=t,["dimissus"]=t,["dira"]=t,["diremptus"]=t,["dirigo"]=t,["dis"]=t,["discessus"]=t,["discursus"]=t,["dispositus"]=t,["dissensus"]=t,["dissero"]=t,["distentus"]=t,["distinctus"]=t,["divisus"]=t,["divus"]=t,["dolo"]=t,["domitus"]=t,["ductus"]=t,["dum"]=t,["duo"]=t,["ea"]=t,["edo"]=t,["educo"]=t,["effectus"]=t,["effero"]=t,["egressus"]=t,["ei"]=t,["electus"]=t,["eo"]=t,["erro"]=t,["esse"]=t,["est"]=t,["evito"]=t,["examen"]=t,["excido"]=t,["excursus"]=t,["exercitus"]=t,["exitus"]=t,["exorsus"]=t,["exortus"]=t,["explicatus"]=t,["faber"]=t,["fastus"]=t,["fetus"]=t,["fides"]=t,["flamen"]=t,["fletus"]=t,["flexus"]=t,["foedus"]=t,["foris"]=t,["formido"]=t,["fraxinus"]=t,["fretus"]=t,["frons"]=t,["fructus"]=t,["fucus"]=t,["fundo"]=t,["furor"]=t,["fusus"]=t,["galla"]=t,["gallus"]=t,["genuinus"]=t,["genus"]=t,["gestio"]=t,["gestus"]=t,["grammatica"]=t,["gressus"]=t,["habitus"]=t,["hau"]=t,["haustus"]=t,["hic"]=t,["hicine"]=t,["hoc"]=t,["honoratus"]=t,["hymenaeus"]=t,["iactus"]=t,["iam"]=t,["ictus"]=t,["ignotus"]=t,["ilium"]=t,["illic"]=t,["immensum"]=t,["immutatus"]=t,["impressus"]=t,["impulsus"]=t,["imputatus"]=t,["incensus"]=t,["inceptus"]=t,["incertum"]=t,["incestus"]=t,["inchoo"]=t,["incido"]=t,["incultus"]=t,["incussus"]=t,["indago"]=t,["indico"]=t,["indictus"]=t,["indiges"]=t,["indutus"]=t,["infectus"]=t,["inflatus"]=t,["inflexus"]=t,["infra"]=t,["infrenatus"]=t,["ingressus"]=t,["iniectus"]=t,["initus"]=t,["iniussus"]=t,["inlectus"]=t,["inrisus"]=t,["inruptus"]=t,["insero"]=t,["insomnium"]=t,["instinctus"]=t,["instratus"]=t,["instructus"]=t,["intectus"]=t,["intellectus"]=t,["intemptatus"]=t,["intentus"]=t,["intercido"]=t,["interius"]=t,["interpositus"]=t,["intra"]=t,["intro"]=t,["invisus"]=t,["invocatus"]=t,["iudicatus"]=t,["iugis"]=t,["iuris"]=t,["ius"]=t,["iussus"]=t,["iuxta"]=t,["labellum"]=t,["labor"]=t,["labrum"]=t,["lacertus"]=t,["lacto"]=t,["laniatus"]=t,["lapsus"]=t,["latius"]=t,["latro"]=t,["latus"]=t,["lectus"]=t,["lego"]=t,["levatus"]=t,["levis"]=t,["levitas"]=t,["levo"]=t,["liber"]=t,["liceo"]=t,["ligo"]=t,["limus"]=t,["liquens"]=t,["liquor"]=t,["litus"]=t,["lotus"]=t,["lucus"]=t,["lustrum"]=t,["lusus"]=t,["luteus"]=t,["lutum"]=t,["magis"]=t,["magus"]=t,["maior"]=t,["maius"]=t,["male"]=t,["malum"]=t,["malus"]=t,["mandatus"]=t,["mando"]=t,["mane"]=t,["manifesto"]=t,["mater"]=t,["maximus"]=t,["medicatus"]=t,["medicus"]=t,["medius"]=t,["melius"]=t,["merces"]=t,["merito"]=t,["meto"]=t,["minor"]=t,["minus"]=t,["missus"]=t,["molitus"]=t,["monitus"]=t,["mora"]=t,["moratus"]=t,["morsus"]=t,["motus"]=t,["multa"]=t,["multo"]=t,["mundus"]=t,["murreus"]=t,["muto"]=t,["narratus"]=t,["natus"]=t,["ne"]=t,["neglectus"]=t,["nexus"]=t,["nil"]=t,["nisus"]=t,["nitens"]=t,["nitor"]=t,["nive"]=t,["nixus"]=t,["non"]=t,["nostri"]=t,["notus"]=t,["num"]=t,["obiectus"]=t,["oblitus"]=t,["obsero"]=t,["obsidium"]=t,["obtentus"]=t,["occasus"]=t,["occido"]=t,["odoratus"]=t,["odos"]=t,["oppositus"]=t,["optime"]=t,["optio"]=t,["ora"]=t,["ornatus"]=t,["orsus"]=t,["ortus"]=t,["os"]=t,["ostentus"]=t,["pactus"]=t,["palam"]=t,["palus"]=t,["paratus"]=t,["parens"]=t,["parilis"]=t,["paro"]=t,["partus"]=t,["passus"]=t,["pastus"]=t,["pater"]=t,["patrius"]=t,["patruus"]=t,["pecus"]=t,["peius"]=t,["percussus"]=t,["permissus"]=t,["perpetuo"]=t,["pervolo"]=t,["pessime"]=t,["physica"]=t,["pila"]=t,["pilus"]=t,["pinna"]=t,["plaga"]=t,["planus"]=t,["plausus"]=t,["plecto"]=t,["plus"]=t,["pone"]=t,["populus"]=t,["porrectus"]=t,["porrigo"]=t,["portitor"]=t,["positus"]=t,["possessus"]=t,["post"]=t,["potior"]=t,["potus"]=t,["prae"]=t,["praeceps"]=t,["praedico"]=t,["praegressus"]=t,["praepositus"]=t,["praesto"]=t,["praeter"]=t,["praetextus"]=t,["pressus"]=t,["pro"]=t,["processus"]=t,["profectus"]=t,["progressus"]=t,["promptus"]=t,["propago"]=t,["propter"]=t,["prospectus"]=t,["proviso"]=t,["provisus"]=t,["pubes"]=t,["pullus"]=t,["pulsus"]=t,["qua"]=t,["quam"]=t,["quanto"]=t,["quantus"]=t,["quassus"]=t,["questus"]=t,["qui"]=t,["quid"]=t,["quini"]=t,["quinque"]=t,["quiris"]=t,["quis"]=t,["quo"]=t,["quoque"]=t,["raptus"]=t,["recens"]=t,["receptus"]=t,["recessus"]=t,["recido"]=t,["relatus"]=t,["relego"]=t,["reno"]=t,["reor"]=t,["repens"]=t,["repercussus"]=t,["repulsus"]=t,["res"]=t,["respectus"]=t,["retento"]=t,["ros"]=t,["rubeta"]=t,["rudens"]=t,["rudis"]=t,["rudus"]=t,["ruta"]=t,["saltus"]=t,["salve"]=t,["sat"]=t,["satio"]=t,["satis"]=t,["satus"]=t,["scitus"]=t,["scriptus"]=t,["scutula"]=t,["se"]=t,["se"]=t,["sector"]=t,["secundo"]=t,["secus"]=t,["senatus"]=t,["sensus"]=t,["sera"]=t,["serius"]=t,["sero"]=t,["serum"]=t,["servus"]=t,["sex"]=t,["sextus"]=t,["si"]=t,["sibilus"]=t,["sis"]=t,["situs"]=t,["socius"]=t,["solum"]=t,["sortitus"]=t,["specula"]=t,["sponsus"]=t,["status"]=t,["suasus"]=t,["subcenturio"]=t,["subter"]=t,["successus"]=t,["succido"]=t,["suggestus"]=t,["sumptus"]=t,["super"]=t,["supera"]=t,["supra"]=t,["suspectus"]=t,["suspicio"]=t,["susurrus"]=t,["tactus"]=t,["tam"]=t,["tantum"]=t,["te"]=t,["tempus"]=t,["ter"]=t,["tertius"]=t,["testis"]=t,["tortus"]=t,["tractus"]=t,["traiectus"]=t,["tranquillo"]=t,["transgressus"]=t,["transitus"]=t,["transmissus"]=t,["tributus"]=t,["tritus"]=t,["truncus"]=t,["turbo"]=t,["tute"]=t,["tutor"]=t,["uber"]=t,["ubique"]=t,["ultra"]=t,["uncus"]=t,["unus"]=t,["usque"]=t,["usucapio"]=t,["usus"]=t,["ut"]=t,["uter"]=t,["uti"]=t,["utique"]=t,["vas"]=t,["vel"]=t,["verbero"]=t,["versus"]=t,["verum"]=t,["vestitus"]=t,["victus"]=t,["viscera"]=t,["visus"]=t,["volgo"]=t,["volo"]=t}

      return data</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:38.217Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AR%3APeck&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=72491 t=1555362638089129
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:38 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1233.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 434406600, 483978806, 707789806
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5708825" pageid="5708825" ns="10" title="Template:R:Peck"><revisions><rev user="OrphicBot" timestamp="2016-08-06T03:10:27Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="OrphicBot moved page [[R:Peck]] to [[Template:R:Peck]] without leaving a redirect: Shorter, more consistent name." xml:space="preserve">{{#invoke:R:Perseus|create}}&lt;!--

      --&gt;{{cite-book&lt;!--
          --&gt;|editor=Harry Thurston Peck&lt;!--
          --&gt;|title=Harper's Dictionary of Classical Antiquities&lt;!--
          --&gt;|publisher=Harper &amp; Brothers&lt;!--
          --&gt;|location=New York&lt;!--
          --&gt;|year=1898&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:38.429Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AR%3ASmith%27s+Persons&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45942 t=1555362638328155
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1345'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:38 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1339.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 919430677, 647045633, 695785635
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5708821" pageid="5708821" ns="10" title="Template:R:Smith&#039;s Persons"><revisions><rev user="OrphicBot" timestamp="2016-08-06T20:01:24Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="OrphicBot moved page [[Template:R:Smith&#039;s B&amp;M]] to [[Template:R:Smith&#039;s Persons]] without leaving a redirect" xml:space="preserve">{{#invoke:R:Perseus|create}}&lt;!--

      --&gt;{{cite-book&lt;!--
          --&gt;|editor=William Smith&lt;!--
          --&gt;|title=A Dictionary of Greek Biography and Mythology&lt;!--
          --&gt;|publisher=John Murray&lt;!--
          --&gt;|location=London&lt;!--
          --&gt;|year=1848&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:38.640Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Anonlemma&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49589 t=1555362638534700
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:38 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 205277678, 252765414, 693231241
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5591821" pageid="5591821" ns="10" title="Template:nonlemma"><revisions><rev user="Rua" timestamp="2018-09-08T15:00:10Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">See the etymology of the [[WT:Lemmas|main entry]].&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:38.824Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ala-verb-form&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=60012 t=1555362638709697
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1333'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:38 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 582408455, 832647335, 692380480
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="972905" pageid="972905" ns="10" title="Template:la-verb-form"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T19:19:10Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:la-verb-form]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indef..." xml:space="preserve">{{head|la|verb forms|head={{{1|}}}}}&lt;!--

      --&gt;{{#if:{{{1|}}}||{{catlangname|la|verb forms needing attention}}}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:38.990Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ahead&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41595 t=1555362638893300
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1242'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:38 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 410218207, 731271703, 699742725
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="338925" pageid="338925" ns="10" title="Template:head"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T18:15:15Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:head]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:headword/templates|head_t}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:39.159Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=35292 t=1555362639065146
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:39 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1343.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 509327664, 555907169, 703569497
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4262766\" pageid=\"4262766\" ns=\"828\" title=\"Module:headword/templates\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-08T17:54:19Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Update to new [[WT:ACCEL]] standard\" xml:space=\"preserve\">local export = {}\n\n-- Part of speech types that should not be pluralized.\nlocal invariable = mw.loadData(\"Module:headword/data\"\
      ).invariable\n\nfunction export.head_t(frame)\n\tlocal plain_param = {}\n\tlocal list_with_holes = {list = true, allow_holes = true}\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[\"sc\"] = plain_param,\n\t\t[\"cat sc\"] = plain_param,\n\
      \t\t[\"sort\"] = plain_param,\n\t\t\n\t\t[2] = {required = true, default = \"nouns\"},\n\t\t[\"noposcat\"] = {type = \"boolean\"},\n\t\t[\"cat2\"] = plain_param,\n\t\t[\"cat3\"] = plain_param,\n\t\t[\"cat4\"] = plain_param,\n\t\t\n\t\t[\"head\"] = {list\
      \ = true, allow_holes = true, default = \"\"},\n\t\t[\"id\"] = plain_param,\n\t\t[\"tr\"] = list_with_holes,\n\t\t[\"ts\"] = list_with_holes,\n\t\t[\"g\"] = {list = true},\n\t\t\n\t\t[3] = list_with_holes,\n\t\t\n\t\t[\"f=accel-form\"]     = list_with_holes,\n\
      \t\t[\"f=accel-nostore\"]  = {list = true, allow_holes = true, type = \"boolean\"},\n\t\t[\"f=accel-translit\"] = list_with_holes,\n\t\t[\"f=request\"]        = list_with_holes,\n\t\t[\"f=alt\"]            = list_with_holes,\n\t\t[\"f=sc\"]           \
      \  = list_with_holes,\n\t\t[\"f=id\"]             = list_with_holes,\n\t\t[\"f=tr\"]             = list_with_holes,\n\t\t[\"f=g\"]              = list_with_holes,\n\t\t[\"f=qual\"]           = list_with_holes,\n\t\t[\"f=nolink\"]         = {list = true,\
      \ allow_holes = true, type = \"boolean\"},\n\t\t[\"f=lang\"]           = list_with_holes,\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\t-- Get language and script information\n\tlocal data = {}\n\
      \tdata.lang = require(\"Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\tdata.sort_key = args[\"sort\"]\n\tdata.heads = args[\"head\"]\n\tdata.id = args[\"id\"]\n\tdata.translits = args[\"tr\"]\n\tdata.transcriptions\
      \ = args[\"ts\"]\n\tdata.genders = args[\"g\"]\n\t\n\t-- Script\n\tlocal cat_sc\n\t\n\tif args[\"cat sc\"] then\n\t\tdata.sc = (args[\"cat sc\"] and (require(\"Module:scripts\").getByCode(args[\"cat sc\"]) or error(\"The script code \\\"\" .. args[\"cat\
      \ sc\"] .. \"\\\" is not valid.\")) or nil)\n\t\tcat_sc = cat_sc\n\telse\n\t\tdata.sc = (args[\"sc\"] and (require(\"Module:scripts\").getByCode(args[\"sc\"]) or error(\"The script code \\\"\" .. args[\"sc\"] .. \"\\\" is not valid.\")) or nil)\n\tend\n\
      \t\n\t-- Part-of-speech category\n\tdata.pos_category = args[2]\n\tdata.noposcat = args[\"noposcat\"]\n\t\n\tif not data.pos_category:find(\"s$\") and not invariable[data.pos_category] then\n\t\t-- Make the plural form of the part of speech\n\t\tif data.pos_category:find(\"\
      x$\") then -- prefix, suffix, confix, infix, circumfix, affix, interfix, transfix\n\t\t\tdata.pos_category = data.pos_category .. \"es\"\n\t\telse\n\t\t\tdata.pos_category = data.pos_category .. \"s\"\n\t\tend\n\tend\n\t\n\tif cat_sc then\n\t\tdata.pos_category\
      \ = data.pos_category .. \" in \" .. cat_sc:getCategoryName()\n\tend\n\t\n\t-- Additional categories\n\tdata.categories = {}\n\t\n\tif args[\"cat2\"] then\n\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" \" .. args[\"cat2\"])\n\tend\n\
      \t\n\tif args[\"cat3\"] then\n\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" \" .. args[\"cat3\"])\n\tend\n\t\n\tif args[\"cat4\"] then\n\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" \" .. args[\"cat4\"])\n\t\
      end\n\t\n\t-- Inflected forms\n\tdata.inflections = {}\n\t\n\tfor i = 1, math.ceil(args[3].maxindex / 2) do\n\t\tlocal infl_part = {\n\t\t\tlabel    = args[3][i * 2 - 1],\n\t\t\taccel    = args[\"faccel-form\"][i] and {\n\t\t\t\tform     = args[\"faccel-form\"\
      ][i],\n\t\t\t\tnostore  = args[\"faccel-nostore\"][i],\n\t\t\t\ttranslit = args[\"faccel-translit\"][i],\n\t\t\t} or nil,\n\t\t\trequest  = args[\"frequest\"][i],\n\t\t}\n\t\t\n\t\tlocal form = {\n\t\t\tterm       =  args[3][i * 2],\n\t\t\talt        =\
      \  args[\"falt\"][i],\n\t\t\tgenders    = {args[\"fg\"][i]},\n\t\t\tid         =  args[\"fid\"][i],\n\t\t\tlang       =  args[\"flang\"][i],\n\t\t\tnolink     =  args[\"fnolink\"][i],\n\t\t\tqualifiers = {args[\"fqual\"][i]},\n\t\t\tsc         =  args[\"\
      fsc\"][i],\n\t\t\ttranslit   =  args[\"ftr\"][i],\n\t\t}\n\t\t\n\t\tif form.lang then\n\t\t\tform.lang = require(\"Module:languages\").getByCode(form.lang) or require(\"Module:languages\").err(form.lang, \"f\" .. i .. \"lang\")\n\t\tend\n\t\t\n\t\tif form.sc\
      \ then\n\t\t\tform.sc = require(\"Module:scripts\").getByCode(form.sc) or error(\"The script code \\\"\" .. form.sc .. \"\\\" is not valid.\")\n\t\tend\n\t\t\n\t\t-- If no term or alt is given, then the label is shown alone.\n\t\tif form.term or form.alt\
      \ then\n\t\t\ttable.insert(infl_part, form)\n\t\tend\n\t\t\n\t\tif infl_part.label == \"or\" then\n\t\t\t-- Append to the previous inflection part, if one exists\n\t\t\tif #infl_part &gt; 0 and data.inflections[1] then\n\t\t\t\ttable.insert(data.inflections[#data.inflections],\
      \ form)\n\t\t\tend\n\t\telseif infl_part.label then\n\t\t\t-- Add a new inflection part\n\t\t\ttable.insert(data.inflections, infl_part)\n\t\tend\n\tend\n\t\n\treturn require(\"Module:headword\").full_headword(data)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:39.357Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fparameters%2Fname+with+equals&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=68951 t=1555362639233523
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1149'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:39 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 579596999, 738698298, 707265475
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="6569386" pageid="6569386" ns="10" title="Template:tracking/parameters/name with equals"><revisions><rev user="ShakespeareFan00" timestamp="2018-12-22T21:57:04Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Removal of stray tag" xml:space="preserve">&lt;noinclude&gt;
      Headword templates where parameter name is with equals.

      Index of tracking templates:
      {{Special:PrefixIndex/Template:tracking/parameters/name with equals|stripprefix=1}}
      [[Category:head tracking]]
      &lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:39.532Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ainflection+of&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=39541 t=1555362639437753
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1263'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:39 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 587217306, 504931558, 700687651
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="563883" pageid="563883" ns="10" title="Template:inflection of"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T18:15:16Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:inflection of]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (inde..." xml:space="preserve">{{#invoke:form of/templates|inflection_of_t}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:10:39.742Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aform+of%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48561 t=1555362639609299
      Cache-control: private, must-revalidate, max-age=0
      Connection: close
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:39 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 212478921, 500904876, 690939347
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4895369\" pageid=\"4895369\" ns=\"828\" title=\"Module:form of/templates\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-10T05:06:28Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"support notext=\" xml:space=\"preserve\">local export = {}\n\nlocal m_form_of = require(\"Module:form of\")\nlocal rfind = mw.ustring.find\nlocal rmatch = mw.ustring.match\nlocal rsplit\
      \ = mw.text.split\n\n-- Add tracking category for PAGE when called from TEMPLATE. The tracking category\n-- linked to is [[Template:tracking/form-of/TEMPLATE/PAGE]].\nlocal function track(template, page)\n\trequire(\"Module:debug\").track(\"form-of/\"\
      \ .. template .. \"/\" .. page)\nend\n\n\n--[=[\nProcess parent arguments. This is similar to the following:\n\trequire(\"Module:parameters\").process(parent_args, params)\nbut in addition it does the following:\n(1) Supplies default values for unspecified\
      \ parent arguments as specified in\n\tDEFAULTS, which consist of specs of the form \"ARG=VALUE\". These are\n\tadded to the parent arguments prior to processing, so boolean and number\n\tparameters will process the value appropriately.\n(2) Removes parent\
      \ arguments specified in IGNORESPECS, which consist either\n\tof bare argument names to remove, or list-argument names to remove of the\n\tform \"ARG:list\".\n(3) Tracks the use of any parent arguments specified in TRACKED_PARAMS, which\n\tis a set-type\
      \ table where the keys are arguments as they exist after\n\tprocessing (hence numeric arguments should be numbers, not strings)\n\tand the values should be boolean true.\n]=]--\nlocal function process_parent_args(template, parent_args, params, defaults,\
      \ ignorespecs, tracked_params)\n\tif #defaults &gt; 0 or #ignorespecs &gt; 0 then\n\t\tlocal new_parent_args = {}\n\t\tfor _, default in ipairs(defaults) do\n\t\t\tlocal defparam, defval = rmatch(default, \"^(.-)=(.*)$\")\n\t\t\tif not defparam then\n\t\
      \t\t\terror(\"Bad default spec \" .. default)\n\t\t\tend\n\t\t\tnew_parent_args[defparam] = defval\n\t\tend\n\t\n\t\tlocal params_to_ignore = {}\n\t\tlocal numbered_list_params_to_ignore = {}\n\t\tlocal named_list_params_to_ignore = {}\n\n\t\tfor _, ignorespec\
      \ in ipairs(ignorespecs) do\n\t\t\tfor _, ignore in ipairs(rsplit(ignorespec, \",\")) do\n\t\t\t\tlocal param = rmatch(ignore, \"^(.*):list$\")\n\t\t\t\tif param then\n\t\t\t\t\tif rfind(param, \"^[0-9]+$\") then\n\t\t\t\t\t\ttable.insert(numbered_list_params_to_ignore,\
      \ tonumber(param))\n\t\t\t\t\telse\n\t\t\t\t\t\ttable.insert(named_list_params_to_ignore,\n\t\t\t\t\t\t\t\"^\" .. require(\"Module:utilities\").pattern_escape(param) .. \"[0-9]*$\")\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tif rfind(ignore, \"^[0-9]+$\"\
      ) then\n\t\t\t\t\t\tignore = tonumber(ignore)\n\t\t\t\t\tend\n\t\t\t\t\tparams_to_ignore[ignore] = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\tfor k, v in pairs(parent_args) do\n\t\t\tif not params_to_ignore[k] then\n\t\t\t\tlocal ignore_me = false\n\t\
      \t\t\tif type(k) == \"number\" then\n\t\t\t\t\tfor _, lparam in ipairs(numbered_list_params_to_ignore) do\n\t\t\t\t\t\tif k &gt;= lparam then\n\t\t\t\t\t\t\tignore_me = true\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\t\
      for _, lparam in ipairs(named_list_params_to_ignore) do\n\t\t\t\t\t\tif rfind(k, lparam) then\n\t\t\t\t\t\t\tignore_me = true\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\tif not ignore_me then\n\t\t\t\t\tnew_parent_args[k]\
      \ = v\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\tparent_args = new_parent_args\n\tend\n\n\tlocal args = require(\"Module:parameters\").process(parent_args, params)\n\n\t-- Tracking for certain user-specified params. This is generally used for\n\t-- parameters\
      \ that we accept but ignore, so that we can eventually remove\n\t-- all uses of these params and stop accepting them.\n\tif tracked_params then\n\t\tfor tracked_param, _ in pairs(tracked_params) do\n\t\t\tif parent_args[tracked_param] then\n\t\t\t\ttrack(template,\
      \ \"arg/\" .. tracked_param)\n\t\t\tend\n\t\tend\n\tend\n\n\treturn args\nend\n\n\n-- Split TAGSPECS (inflection tag specifications) on SPLIT_REGEX, which\n-- may be nil for no splitting.\nlocal function split_inflection_tags(tagspecs, split_regex)\n\t\
      if not split_regex then\n\t\treturn tagspecs\n\tend\n\tlocal inflection_tags = {}\n\tfor _, tagspec in ipairs(tagspecs) do\n\t\tfor _, tag in ipairs(rsplit(tagspec, split_regex)) do\n\t\t\ttable.insert(inflection_tags, tag)\n\t\tend\n\tend\n\treturn inflection_tags\n\
      end\n\n\n-- Modify PARAMS in-place by adding parameters that control the link to the\n-- main entry. TERM_PARAM is the number of the param specifying the main\n-- entry itself; TERM_PARAM + 1 will be the display text, and TERM_PARAM + 2\n-- will be the\
      \ gloss, unless NO_NUMBERED_GLOSS is given.\nlocal function add_link_params(params, term_param, no_numbered_gloss)\n\t-- Numbered params controlling link display\n\tparams[term_param] = {}\n\tparams[term_param + 1] = {}\n\tif not no_numbered_gloss then\n\
      \t\tparams[term_param + 2] = {alias_of = \"t\"}\n\tend\n\t\n\t-- Named params controlling link display\n\tparams[\"t\"] = {}\n\tparams[\"gloss\"] = {alias_of = \"t\"}\n\tparams[\"sc\"] = {}\n\tparams[\"tr\"] = {}\n\tparams[\"ts\"] = {}\n\tparams[\"pos\"\
      ] = {}\n\tparams[\"g\"] = {list = true}\n\tparams[\"id\"] = {}\n\tparams[\"lit\"] = {}\nend\n\n\n-- Given processed invocation arguments IARGS and processed parent arguments\n-- ARGS, as well as TERM_PARAM (the parent argument specifying the main\n-- entry)\
      \ and COMPAT (true if the language code is found in args[\"lang\"]\n-- instead of args[1]), return LANG, TERMINFO, CATEGORIES, where\n-- * LANG is the language code;\n-- * TERMINFO is the terminfo structure specifying the main entry, as\n--   passed to\
      \ full_link in Module:links;\n-- * CATEGORIES is the categories to add the page to.\n--\n-- This is a subfunction of construct_form_of_text().\nlocal function get_terminfo_and_categories(iargs, args, term_param, compat)\n\tlocal lang = args[compat and\
      \ \"lang\" or 1] or iargs[\"lang\"] or \"und\"\n\tlang = require(\"Module:languages\").getByCode(lang) or\n\t\trequire(\"Module:languages\").err(lang, compat and \"lang\" or 1)\n\n\t-- Determine categories for the page, including tracking categories\n\n\
      \tlocal categories = {}\n\n\tif not args[\"nocat\"] then\n\t\tfor _, cat in ipairs(iargs[\"cat\"]) do\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" \" .. cat)\n\t\tend\n\tend\n\tfor _, cat in ipairs(args[\"cat\"]) do\n\t\ttable.insert(categories,\
      \ lang:getCanonicalName() .. \" \" .. cat)\n\tend\n\t\t\n\t-- Format the link, preceding text and categories\n\n\tlocal terminfo\n\n\tif iargs[\"nolink\"] then\n\t\tterminfo = nil\n\telseif iargs[\"linktext\"] then\n\t\tterminfo = iargs[\"linktext\"]\n\
      \telse\n\t\tlocal term = args[term_param]\n\n\t\tif not term and not args[term_param + 1] and not args[\"tr\"] and not args[\"ts\"] then\n\t\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\t\tterm = \"term\"\n\t\t\telse\n\t\t\t\terror(\"\
      No linked-to term specified; either specify term, alt, translit or transcription\")\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- add tracking category if term is same as page title\n\t\tif term and mw.title.getCurrentTitle().text == lang:makeEntryName(term) then\n\
      \t\t\ttable.insert(categories, \"Forms linking to themselves\")\n\t\tend\n\t\t-- maybe add tracking category if primary entry doesn't exist (this is an\n\t\t-- expensive call so we don't do it by default)\n\t\tif iargs[\"noprimaryentrycat\"] and term and\
      \ mw.title.getCurrentTitle().nsText == \"\"\n\t\t\tand not mw.title.new(term).exists then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" \" .. iargs[\"noprimaryentrycat\"])\n\t\tend\n\n\t\tlocal sc = args[\"sc\"] or iargs[\"sc\"]\n\t\t\n\
      \t\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or\n\t\t\terror(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil)\n\n\t\tterminfo = {\n\t\t\tlang = lang,\n\t\t\tsc = sc,\n\t\t\tterm = term,\n\t\t\talt = args[term_param + 1],\n\
      \t\t\tid = args[\"id\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\tlit = args[\"lit\"],\n\t\t}\n\tend\n\t\n\treturn lang, terminfo, categories\nend\n\
      \n\n-- Construct and return the full definition line for a form-of-type template\n-- invocation, given processed invocation arguments IARGS, processed parent\n-- arguments ARGS, TERM_PARAM (the parent argument specifying the main entry),\n-- COMPAT (true\
      \ if the language code is found in args[\"lang\"] instead of\n-- args[1]), and DO_FORM_OF, which is a function of one argument (the\n-- terminfo structure ultimately passed to full_link in Module:links) that\n-- should return the actual definition-line\
      \ text, minus any terminating\n-- period/dot. The terminating period/dot will be added as appropriate, as\n-- well as formatted categories to add the page to.\nlocal function construct_form_of_text(iargs, args, term_param, compat, do_form_of)\n\tlocal\
      \ lang, terminfo, categories = get_terminfo_and_categories(iargs, args, term_param, compat)\n\n\treturn do_form_of(terminfo) .. (\n\t\targs[\"nodot\"] and \"\" or args[\"dot\"] or iargs[\"withdot\"] and \".\" or \"\"\n\t) .. require(\"Module:utilities\"\
      ).format_categories(categories, lang, args[\"sort\"])\nend\n\n\n--[=[\nFunction that implements {{form of}} and the various more specific form-of\ntemplates (but not {{inflection of}} or templates that take tagged inflection\nparameters).\n\nInvocation\
      \ params:\n\n1= (required):\n\tText to display before the link.\nterm_param=:\n\tNumbered param holding the term linked to. Other numbered params come after.\n\tDefaults to 1 if invocation or template param lang= is present, otherwise 2.\nlang=:\n\tDefault\
      \ language code for language-specific templates. If specified, no\n\tlanguage code needs to be specified, and if specified it needs to be set\n\tusing lang=, not 1=.\nsc=:\n\tDefault script code for language-specific templates. The script code can\n\t\
      still be overridden using template param sc=.\ncat=, cat2=, ...:\n\tCategories to place the page into. The language name will automatically be\n\tprepended. Note that there is also a template param cat= to specify\n\tcategories at the template level. Use\
      \ of nocat= disables categorization of\n\tcategories specified using invocation param cat=, but not using template\n\tparam cat=.\nignore=, ignore2=, ...:\n\tOne or more template params to silently accept and ignore. Useful e.g. when\n\tthe template takes\
      \ additional parameters such as from= or POS=. Each value\n\tis a comma-separated list of either bare parameter names or specifications\n\tof the form \"PARAM:list\" to specify that the parameter is a list parameter.\ndef=, def2=, ...:\n\tOne or more default\
      \ values to supply for template args. For example,\n\tspecifying '|def=tr=-' causes the default for template param '|tr=' to be\n\t'-'. Actual template params override these defaults.\nwithcap=:\n\tCapitalize the first character of the text preceding the\
      \ link, unless\n\ttemplate param nocap= is given.\nwithdot=:\n\tAdd a final period after the link, unless template param nodot= is given\n\tto suppress the period, or dot= is given to specify an alternative\n\tpunctuation character.\nnolink=:\n\tSuppress\
      \ the display of the link. If specified, none of the template\n\tparams that control the link (TERM_PARAM, TERM_PARAM + 1, TERM_PARAM + 2,\n\tt=, gloss=, sc=, tr=, ts=, pos=, g=, id=, lit=) will be available.\n\tIf the calling template uses any of these\
      \ parameters, they must be\n\tignored using ignore=.\nlinktext=:\n\tOverride the display of the link with the specified text. This is useful\n\tif a custom template is available to format the link (e.g. in Hebrew,\n\tChinese and Japanese). If specified,\
      \ none of the template params that\n\tcontrol the link (TERM_PARAM, TERM_PARAM + 1, TERM_PARAM + 2, t=, gloss=,\n\tsc=, tr=, ts=, pos=, g=, id=, lit=) will be available. If the calling\n\ttemplate uses any of these parameters, they must be ignored using\
      \ ignore=.\nposttext=:\n\tAdditional text to display directly after the formatted link, before any\n\tterminating period/dot and inside of \"&lt;span class='use-with-mention'&gt;\".\nnoprimaryentrycat=:\n\tCategory to add the page to if the primary entry\
      \ linked to doesn't exist.\n\tThe language name will automatically be prepended.\n]=]--\nfunction export.form_of_t(frame)\n\tlocal iparams = {\n\t\t[1] = {required = true},\n\t\t[\"term_param\"] = {type = \"number\"},\n\t\t[\"lang\"] = {},\n\t\t[\"sc\"\
      ] = {},\n\t\t[\"cat\"] = {list = true},\n\t\t[\"ignore\"] = {list = true},\n\t\t[\"def\"] = {list = true},\n\t\t[\"withcap\"] = {type = \"boolean\"},\n\t\t[\"withdot\"] = {type = \"boolean\"},\n\t\t[\"nolink\"] = {type = \"boolean\"},\n\t\t[\"linktext\"\
      ] = {},\n\t\t[\"posttext\"] = {},\n\t\t[\"noprimaryentrycat\"] = {},\n\t}\n\t\n\tlocal iargs = require(\"Module:parameters\").process(frame.args, iparams)\n\tlocal parent_args = frame:getParent().args\n\n\tlocal term_param = iargs[\"term_param\"]\n\t\n\
      \tlocal compat = iargs[\"lang\"] or parent_args[\"lang\"]\n\tterm_param = term_param or compat and 1 or 2\n\n\tlocal params = {\n\t\t-- Numbered params\n\t\t[compat and \"lang\" or 1] = {required = not iargs[\"lang\"]},\n\t\t\n\t\t-- Named params not controlling\
      \ link display\t\t\n\t\t[\"cat\"] = {list = true},\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t\t-- FIXME! The following should only be available when withcap=1 in\n\t\t-- invocation args. Before doing that, need to remove all uses\
      \ of\n\t\t-- nocap= in other circumstances.\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t-- FIXME! The following should only be available when withdot=1 in\n\t\t-- invocation args. Before doing that, need to remove all uses of\n\t\t-- nodot= in other\
      \ circumstances.\n\t\t[\"nodot\"] = {type = \"boolean\"},\n\t}\n\n\tif not iargs[\"nolink\"] and not iargs[\"linktext\"] then\n\t\tadd_link_params(params, term_param)\n\tend\n\n\tif next(iargs[\"cat\"]) then\n\t\tparams[\"nocat\"] = {type = \"boolean\"\
      }\n\tend\n\n\tif iargs[\"withdot\"] then\n\t\tparams[\"dot\"] = {}\n\tend\n\n\tlocal ignored_params = {}\n\tif not iargs[\"withcap\"] then\n\t\tignored_params[\"nocap\"] = true\n\tend\n\tif not iargs[\"withdot\"] then\n\t\tignored_params[\"nodot\"] = true\n\
      \tend\n\n\tlocal args = process_parent_args(\"form-of-t\", parent_args, params, iargs[\"def\"],\n\t\tiargs[\"ignore\"], ignored_params)\n\t\n\tlocal text = args[\"notext\"] and \"\" or iargs[1]\n\tif iargs[\"withcap\"] and not args[\"nocap\"] then\n\t\t\
      text = m_form_of.ucfirst(text)\n\tend\n\n\treturn construct_form_of_text(iargs, args, term_param, compat,\n\t\tfunction(terminfo)\n\t\t\treturn m_form_of.format_form_of(text, terminfo, iargs[\"posttext\"])\n\t\tend\n\t)\nend\n\n--[=[\nFunction that implements\
      \ form-of templates that are defined by specific tagged\ninflections (typically a template referring to a non-lemma inflection,\nsuch as {{genitive plural of}}). This works exactly like form_of_t() except\nthat the \"form of\" text displayed before the\
      \ link is based off of a\npre-specified set of inflection tags (which will be appropriately linked to\nthe glossary) instead of arbitrary text. From the user's perspective, there\nis no difference between templates implemented using form_of_t() and\ntagged_form_of_t();\
      \ they accept exactly the same parameters and work the same.\nSee also inflection_of_t() below, which is intended for templates with\nuser-specified inflection tags.\n\nInvocation params:\n\n1=, 2=, ... (required):\n\tOne or more inflection tags describing\
      \ the inflection in question.\nsplit_tags=:\n\tIf specified, character to split specified inflection tags on. This allows\n\tmultiple tags to be included in a single argument, simplifying template\n\tcode.\nterm_param=:\nlang=:\nsc=:\ncat=, cat2=, ...:\n\
      ignore=, ignore2=, ...:\ndef=, def2=, ...:\nwithcap=:\nwithdot=:\nnolink=:\nlinktext=:\nposttext=:\nnoprimaryentrycat=:\n\tAll of these are the same as in form_of_t().\n]=]--\nfunction export.tagged_form_of_t(frame)\n\tlocal iparams = {\n\t\t[1] = {list\
      \ = true, required = true},\n\t\t[\"split_tags\"] = {},\n\t\t[\"term_param\"] = {type = \"number\"},\n\t\t[\"lang\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"cat\"] = {list = true},\n\t\t[\"ignore\"] = {list = true},\n\t\t[\"def\"] = {list = true},\n\t\t[\"withcap\"\
      ] = {type = \"boolean\"},\n\t\t[\"withdot\"] = {type = \"boolean\"},\n\t\t[\"nolink\"] = {type = \"boolean\"},\n\t\t[\"linktext\"] = {},\n\t\t[\"posttext\"] = {},\n\t\t[\"noprimaryentrycat\"] = {},\n\t}\n\t\n\tlocal iargs = require(\"Module:parameters\"\
      ).process(frame.args, iparams)\n\tlocal parent_args = frame:getParent().args\n\n\tlocal term_param = iargs[\"term_param\"]\n\n\tlocal compat = iargs[\"lang\"] or parent_args[\"lang\"]\n\tterm_param = term_param or compat and 1 or 2\n\n\tlocal params =\
      \ {\n\t\t-- Numbered params\n\t\t[compat and \"lang\" or 1] = {required = not iargs[\"lang\"]},\n\n\t\t-- Named params not controlling link display\t\t\n\t\t[\"cat\"] = {list = true},\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t\t\
      -- FIXME! The following should only be available when withcap=1 in\n\t\t-- invocation args. Before doing that, need to remove all uses of\n\t\t-- nocap= in other circumstances.\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t-- FIXME! The following should\
      \ only be available when withdot=1 in\n\t\t-- invocation args. Before doing that, need to remove all uses of\n\t\t-- nodot= in other circumstances.\n\t\t[\"nodot\"] = {type = \"boolean\"},\n\t}\n\t\n\tif not iargs[\"nolink\"] and not iargs[\"linktext\"\
      ] then\n\t\tadd_link_params(params, term_param)\n\tend\n\n\tif next(iargs[\"cat\"]) then\n\t\tparams[\"nocat\"] = {type = \"boolean\"}\n\tend\n\t\n\tif iargs[\"withdot\"] then\n\t\tparams[\"dot\"] = {}\n\tend\n\n\tlocal ignored_params = {}\n\tif not iargs[\"\
      withcap\"] then\n\t\tignored_params[\"nocap\"] = true\n\tend\n\tif not iargs[\"withdot\"] then\n\t\tignored_params[\"nodot\"] = true\n\tend\n\n\tlocal args = process_parent_args(\"tagged-form-of-t\", parent_args,\n\t\tparams, iargs[\"def\"], iargs[\"ignore\"\
      ], ignored_params)\n\t\n\treturn construct_form_of_text(iargs, args, term_param, compat,\n\t\tfunction(terminfo)\n\t\t\treturn m_form_of.tagged_inflections(\n\t\t\t\tsplit_inflection_tags(iargs[1], iargs[\"split_tags\"]), terminfo,\n\t\t\t\targs[\"notext\"\
      ], iargs[\"withcap\"] and not args[\"nocap\"],\n\t\t\t\tiargs[\"posttext\"]\n\t\t\t)\n\t\tend\n\t)\nend\n\n--[=[\nFunction that implements {{inflection of}} and certain semi-specific variants,\nsuch as {{participle of}} and {{past participle form of}}.\
      \ This function is\nintended for templates that allow the user to specify a set of inflection tags.\nIt works similarly to form_of_t() and tagged_form_of_t() except that the\ncalling convention for the calling template is\n\t{{TEMPLATE|LANG|MAIN_ENTRY_LINK|MAIN_ENTRY_DISPLAY_TEXT|TAG|TAG|...}}\n\
      instead of \n\t{{TEMPLATE|LANG|MAIN_ENTRY_LINK|MAIN_ENTRY_DISPLAY_TEXT|GLOSS}}\nNote that there isn't a numbered parameter for the gloss, but it can still\nbe specified using t= or gloss=.\n\nInvocation params:\n\npreinfl=, preinfl2=, ...:\n\tExtra inflection\
      \ tags to automatically prepend to the tags specified by\n\tthe template.\npostinfl=, postinfl2=, ...:\n\tExtra inflection tags to automatically append to the tags specified by the\n\ttemplate. Used for example by {{past participle form of}} to add the\
      \ tags\n\t'of the|past|p' onto the user-specified tags, which indicate which past\n\tparticiple form the page refers to.\nsplit_tags=:\n\tIf specified, character to split specified inflection tags on. This allows\n\tmultiple tags to be included in a single\
      \ argument, simplifying template\n\tcode. Note that this applies *ONLY* to inflection tags specified in the\n\tinvocation arguments using preinfl= or postinfl=, not to user-specified\n\tinflection tags.\nterm_param=:\nlang=:\nsc=:\ncat=, cat2=, ...:\n\
      ignore=, ignore2=, ...:\ndef=, def2=, ...:\nwithcap=:\nwithdot=:\nnolink=:\nlinktext=:\nposttext=:\nnoprimaryentrycat=:\n\tAll of these are the same as in form_of_t().\n]=]--\nfunction export.inflection_of_t(frame)\n\tlocal iparams = {\n\t\t[\"preinfl\"\
      ] = {list = true},\n\t\t[\"postinfl\"] = {list = true},\n\t\t[\"split_tags\"] = {},\n\t\t[\"term_param\"] = {type = \"number\"},\n\t\t[\"lang\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"cat\"] = {list = true},\n\t\t[\"ignore\"] = {list = true},\n\t\t[\"def\"\
      ] = {list = true},\n\t\t[\"withcap\"] = {type = \"boolean\"},\n\t\t[\"withdot\"] = {type = \"boolean\"},\n\t\t[\"nolink\"] = {type = \"boolean\"},\n\t\t[\"linktext\"] = {},\n\t\t[\"posttext\"] = {},\n\t\t[\"noprimaryentrycat\"] = {},\n\t}\n\n\tlocal iargs\
      \ = require(\"Module:parameters\").process(frame.args, iparams)\n\tlocal parent_args = frame:getParent().args\n\n\tlocal term_param = iargs[\"term_param\"]\n\t\n\tlocal compat = iargs[\"lang\"] or parent_args[\"lang\"]\n\tterm_param = term_param or compat\
      \ and 1 or 2\n\n\tlocal params = {\n\t\t-- Numbered params\n\t\t[compat and \"lang\" or 1] = {required = not iargs[\"lang\"]},\n\t\t[term_param + 2] = {list = true, required = true},\n\t\t\n\t\t-- Named params not controlling link display\t\t\n\t\t[\"\
      cat\"] = {list = true},\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t\t-- FIXME! The following should only be available when withcap=1 in\n\t\t-- invocation args. Before doing that, need to remove all uses of\n\t\t-- nocap= in other\
      \ circumstances.\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t-- FIXME! The following should only be available when withdot=1 in\n\t\t-- invocation args. Before doing that, need to remove all uses of\n\t\t-- nodot= in other circumstances.\n\t\t[\"nodot\"\
      ] = {type = \"boolean\"},\n\t\t-- FIXME! The following should only be available when cat= is specified\n\t\t-- in the invocation args. Before doing that, need to remove all uses\n\t\t-- of nocat= in other circumstances.\n\t\t[\"nocat\"] = {type = \"boolean\"\
      },\n\t}\n\t\n\tif not iargs[\"nolink\"] and not iargs[\"linktext\"] then\n\t\tadd_link_params(params, term_param, \"no-numbered-gloss\")\n\tend\n\n\tlocal ignored_params = {}\n\tif not iargs[\"withcap\"] then\n\t\tignored_params[\"nocap\"] = true\n\tend\n\
      \tif not iargs[\"withdot\"] then\n\t\tignored_params[\"nodot\"] = true\n\tend\n\tif not next(iargs[\"cat\"]) then\n\t\tignored_params[\"nocat\"] = true\n\tend\n\n\tlocal args = process_parent_args(\"inflection-of-t\", parent_args,\n\t\tparams, iargs[\"\
      def\"], iargs[\"ignore\"], ignored_params)\n\t\n\tlocal infls\n\tif not next(iargs[\"preinfl\"]) and not next(iargs[\"postinfl\"]) then\n\t\tinfls = args[term_param + 2]\n\telse\n\t\tinfls = {}\n\t\tfor _, infl in ipairs(split_inflection_tags(iargs[\"\
      preinfl\"], iargs[\"split_tags\"])) do\n\t\t\ttable.insert(infls, infl)\n\t\tend\n\t\tfor _, infl in ipairs(args[term_param + 2]) do\n\t\t\ttable.insert(infls, infl)\n\t\tend\n\t\tfor _, infl in ipairs(split_inflection_tags(iargs[\"postinfl\"], iargs[\"\
      split_tags\"])) do\n\t\t\ttable.insert(infls, infl)\n\t\tend\n\tend\n\n\treturn construct_form_of_text(iargs, args, term_param, compat,\n\t\tfunction(terminfo)\n\t\t\treturn m_form_of.tagged_inflections(\n\t\t\t\tinfls, terminfo, args[\"notext\"],\n\t\t\
      \t\tiargs[\"withcap\"] and not args[\"nocap\"], iargs[\"posttext\"]\n\t\t\t)\n\t\tend\n\t)\nend\n\nreturn export\n\n-- For Vim, so we get 4-space tabs\n-- vim: set ts=4 sw=4 noet:</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:39.985Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aform+of&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58551 t=1555362639865613
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:39 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1312.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 426780637, 831631101, 688806469
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4222325\" pageid=\"4222325\" ns=\"828\" title=\"Module:form of\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-10T05:06:26Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"support notext=\" xml:space=\"preserve\">local m_links = require(\"Module:links\")\nlocal m_table = require(\"Module:table\")\nlocal m_data = mw.loadData(\"Module:form of/data\")\n\nlocal rmatch = mw.ustring.match\n\
      local rsplit = mw.text.split\n\nlocal export = {}\n\n-- FIXME! Move to a utility module.\n\nfunction export.ucfirst(text)\n\tlocal function doucfirst(text)\n\t\t-- Actual function to uppercase first letter.\n\t\treturn mw.ustring.upper(mw.ustring.sub(text,\
      \ 1, 1)) .. mw.ustring.sub(text, 2)\n\tend\n\t-- If there's a link at the beginning, uppercase the first letter of the\n\t-- link text. This pattern matches both piped and unpiped links.\n\t-- If the link is not piped, the second capture (linktext) will\
      \ be empty.\n\tlocal link, linktext, remainder = rmatch(text, \"^%[%[([^|%]]+)%|?(.-)%]%](.*)$\")\n\tif link then\n\t\treturn \"[[\" .. link .. \"|\" .. doucfirst(linktext ~= \"\" and linktext or link) .. \"]]\" .. remainder\n\tend\n\treturn doucfirst(text)\n\
      end\n\n\nfunction export.format_form_of(text, terminfo, posttext)\n\tlocal parts = {}\n\ttable.insert(parts, \"&lt;span class='form-of-definition use-with-mention'&gt;\")\n\ttable.insert(parts, text)\n\tif text ~= \"\" and terminfo then\n\t\ttable.insert(parts,\
      \ \" \")\n\tend\n\tif terminfo then\n\t\ttable.insert(parts, \"&lt;span class='form-of-definition-link'&gt;\")\n\t\tif type(terminfo) == \"string\" then\n\t\t\ttable.insert(parts, terminfo)\n\t\telse\n\t\t\ttable.insert(parts, m_links.full_link(terminfo,\
      \ \"term\", false))\n\t\tend\n\t\ttable.insert(parts, \"&lt;/span&gt;\")\n\tend\n\tif posttext then\n\t\ttable.insert(parts, posttext)\n\tend\n\ttable.insert(parts, \"&lt;/span&gt;\")\n\treturn table.concat(parts)\nend\n\n\nlocal function normalize_tag(tag)\n\
      \tif m_data.shortcuts[tag] then\n\telseif m_data.tags[tag] then\n\telse\n\t\trequire(\"Module:debug\").track{\n\t\t\t\"inflection of/unknown\",\n\t\t\t\"inflection of/unknown/\" .. tag:gsub(\"%[\", \"(\"):gsub(\"%]\", \")\"):gsub(\"|\", \"!\")\n\t\t}\n\
      \tend\n\n\ttag = m_data.shortcuts[tag] or tag\n\tlocal data = m_data.tags[tag]\n\n\t-- If the tag has a special display form, use it\n\tif data and data.display then\n\t\ttag = data.display\n\tend\n\n\t-- If there is a nonempty glossary index, then show\
      \ a link to it\n\tif data and data.glossary then\n\t\ttag = \"[[Appendix:Glossary#\" .. mw.uri.anchorEncode(data.glossary) .. \"|\" .. tag .. \"]]\"\n\tend\n\treturn tag\nend\n\nfunction export.tagged_inflections(tags, terminfo, notext, capfirst, posttext)\n\
      \tlocal cur_infl = {}\n\tlocal inflections = {}\n\t\n\tfor i, tagspec in ipairs(tags) do\n\t\tif tagspec == \";\" then\n\t\t\tif #cur_infl &gt; 0 then\n\t\t\t\ttable.insert(inflections, table.concat(cur_infl, \" \"))\n\t\t\tend\n\t\t\t\n\t\t\tcur_infl\
      \ = {}\n\t\telse\n\t\t\tlocal split_tags = rsplit(tagspec, \"//\", true)\n\t\t\tif #split_tags == 1 then\n\t\t\t\ttable.insert(cur_infl, normalize_tag(split_tags[1]))\n\t\t\telse\n\t\t\t\tlocal normalized_tags = {}\n\t\t\t\tfor _, tag in ipairs(split_tags)\
      \ do\n\t\t\t\t\ttable.insert(normalized_tags, normalize_tag(tag))\n\t\t\t\tend\n\t\t\t\ttable.insert(cur_infl, m_table.serialCommaJoin(normalized_tags))\n\t\t\tend\n\t\tend\n\tend\n\t\n\tif #cur_infl &gt; 0 then\n\t\ttable.insert(inflections, table.concat(cur_infl,\
      \ \" \"))\n\tend\n\t\n\tif #inflections == 1 then\n\t\treturn export.format_form_of(\n\t\t\tnotext and \"\" or ((capfirst and export.ucfirst(inflections[1]) or inflections[1]) ..\n\t\t\t\t(terminfo and \" of\" or \"\")),\n\t\t\tterminfo, posttext\n\t\t\
      )\n\telse\n\t\tlocal link = export.format_form_of(\n\t\t\tnotext and \"\" or ((capfirst and \"Inflection\" or \"inflection\") ..\n\t\t\t\t(terminfo and \" of\" or \"\")),\n\t\t\tterminfo, (posttext or \"\") .. \":\"\n\t\t)\n\t\treturn link ..\"\\n## &lt;span\
      \ class='form-of-definition use-with-mention'&gt;\" .. table.concat(inflections, \"&lt;/span&gt;\\n## &lt;span class='form-of-definition use-with-mention'&gt;\") .. \"&lt;/span&gt;\"\n\tend\nend\n\nfunction export.to_Wikidata_IDs(tags)\n\tif type(tags)\
      \ == \"string\" then\n\t\ttags = mw.text.split(tags, \"|\", true)\n\tend\n\t\n\tlocal ret = {}\n\t\n\tfor i, tag in ipairs(tags) do\n\t\tif tag == \";\" then\n\t\t\terror(\"Semicolon is not supported for Wikidata IDs\")\n\t\tend\n\t\t\n\t\ttag = m_data.shortcuts[tag]\
      \ or tag\n\t\tlocal data = m_data.tags[tag]\n\t\t\n\t\tif not data or not data.wikidata then\n\t\t\terror(\"The tag \\\"\" .. tag .. \"\\\" does not have a Wikidata ID defined in Module:form of/data\")\n\t\tend\n\t\t\n\t\ttable.insert(ret, data.wikidata)\n\
      \tend\n\t\n\treturn ret\nend\n\n\nreturn export\n\n-- For Vim, so we get 4-space tabs\n-- vim: set ts=4 sw=4 noet:</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:40.159Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aform+of%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=33154 t=1555362640054551
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:40 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 688161268, 835100063, 695388262
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4625972\" pageid=\"4625972\" ns=\"828\" title=\"Module:form of/data\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-11T02:03:34Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add quotative mood and wikidata for volitive mood\" xml:space=\"preserve\">local tags = {}\n\n-- Person\ntags[\"first-person\"] = {\n\ttag_type = \"person\",\n\tglossary = \"first person\"\
      ,\n\tshortcuts = {\"1\"},\n\twikidata = \"Q21714344\",\n}\n\ntags[\"second-person\"] = {\n\ttag_type = \"person\",\n\tglossary = \"second person\",\n\tshortcuts = {\"2\"},\n\twikidata = \"Q51929049\",\n}\n\ntags[\"third-person\"] = {\n\ttag_type = \"person\"\
      ,\n\tglossary = \"third person\",\n\tshortcuts = {\"3\"},\n\twikidata = \"Q51929074\",\n}\n\ntags[\"impersonal\"] = {\n\ttag_type = \"person\",\n\tglossary = \"impersonal\",\n\tshortcuts = {\"impers\"},\n}\n\n-- Number\ntags[\"singular\"] = {\n\ttag_type\
      \ = \"number\",\n\tglossary = \"singular number\",\n\tshortcuts = {\"s\"},\n\twikidata = \"Q110786\",\n}\n\ntags[\"dual\"] = {\n\ttag_type = \"number\",\n\tglossary = \"dual number\",\n\tshortcuts = {\"d\"},\n\twikidata = \"Q110022\",\n}\n\ntags[\"trial\"\
      ] = {\n\ttag_type = \"number\",\n\tglossary = \"trial number\",\n\tshortcuts = {\"tr\"},\n\twikidata = \"Q2142560\",\n}\n\ntags[\"paucal\"] = {\n\ttag_type = \"number\",\n\tglossary = \"paucal number\",\n\tshortcuts = {\"pau\"},\n\twikidata = \"Q489410\"\
      ,\n}\n\ntags[\"distributive paucal\"] = {\n\ttag_type = \"number\",\n\tglossary = \"distributive paucal number\",\n\tshortcuts = {\"dpau\"},\n}\n\ntags[\"plural\"] = {\n\ttag_type = \"number\",\n\tglossary = \"plural number\",\n\tshortcuts = {\"p\"},\n\
      \twikidata = \"Q146786\",\n}\n\ntags[\"singulative\"] = {\n\ttag_type = \"number\",\n\tglossary = \"singulative number\",\n\tshortcuts = {\"sgl\"},\n\twikidata = \"Q1450795\",\n}\n\ntags[\"collective\"] = {\n\ttag_type = \"number\",\n\tglossary = \"collective\
      \ number\",\n\tshortcuts = {\"col\"},\n\twikidata = \"Q694268\",\n}\n\n-- Gender\ntags[\"masculine\"] = {\n\ttag_type = \"gender\",\n\tglossary = \"gender\",\n\tshortcuts = {\"m\"},\n\twikidata = \"Q499327\",\n}\n\ntags[\"feminine\"] = {\n\ttag_type =\
      \ \"gender\",\n\tglossary = \"gender\",\n\tshortcuts = {\"f\"},\n\twikidata = \"Q1775415\",\n}\n\ntags[\"neuter\"] = {\n\ttag_type = \"gender\",\n\tglossary = \"gender\",\n\tshortcuts = {\"n\"},\n\twikidata = \"Q1775461\",\n}\n\ntags[\"common\"] = {\n\t\
      tag_type = \"gender\",\n\tglossary = \"gender\",\n\tshortcuts = {\"c\"},\n\twikidata = \"Q1305037\",\n}\n\ntags[\"virile\"] = {\n\ttag_type = \"gender\",\n\tglossary = \"virile\",\n\tshortcuts = {\"vr\"},\n}\n\ntags[\"nonvirile\"] = {\n\ttag_type = \"\
      gender\",\n\tglossary = \"nonvirile\",\n\tshortcuts = {\"nv\"},\n}\n\n-- Animacy (may be useful sometimes for [[Module:object usage]].)\ntags[\"animate\"] = {\n\ttag_type = \"animacy\",\n\tglossary = \"animate\",\n\tshortcuts = {\"an\"},\n\twikidata =\
      \ \"Q51927507\",\n}\n\ntags[\"inanimate\"] = {\n\ttag_type = \"animacy\",\n\tglossary = \"inanimate\",\n\tshortcuts = {\"in\"},\n\twikidata = \"Q51927539\",\n}\n\ntags[\"personal\"] = {\n\ttag_type = \"animacy\",\n\tshortcuts = {\"pr\"},\n}\n\n-- Tense/aspect\n\
      tags[\"present\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"present tense\",\n\tshortcuts = {\"pres\"},\n\twikidata = \"Q192613\",\n}\n\ntags[\"past\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"past tense\",\n\twikidata = \"Q1994301\"\
      ,\n}\n\ntags[\"future\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"future tense\",\n\tshortcuts = {\"fut\", \"futr\"},\n\twikidata = \"Q501405\",\n}\n\ntags[\"non-past\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"non-past tense\",\n\
      \tshortcuts = {\"npast\"},\n\twikidata = \"Q16916993\",\n}\n\ntags[\"progressive\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"progressive\",\n\tshortcuts = {\"prog\"},\n\twikidata = \"Q56653945\",\n}\n\ntags[\"preterite\"] = {\n\ttag_type = \"\
      tense-aspect\",\n\tshortcuts = {\"pret\"},\n\twikidata = \"Q442485\",\n}\n\ntags[\"perfect\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"perfect\",\n\tshortcuts = {\"perf\"},\n\twikidata = \"Q625420\",\n}\n\ntags[\"imperfect\"] = {\n\ttag_type\
      \ = \"tense-aspect\",\n\tglossary = \"imperfect\",\n\tshortcuts = {\"impf\", \"imperf\"},\n}\n\ntags[\"pluperfect\"] = {\n\ttag_type = \"tense-aspect\",\n\tshortcuts = {\"plup\", \"pluperf\"},\n\twikidata = \"Q623742\",\n}\n\ntags[\"semelfactive\"] = {\n\
      \ttag_type = \"tense-aspect\",\n\tshortcuts = {\"semf\"},\n\twikidata = \"Q7449203\",\n}\n\ntags[\"aorist\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"aorist tense\",\n\tshortcuts = {\"aor\", \"aori\"},\n\twikidata = \"Q216497\",\n}\n\ntags[\"\
      past historic\"] = {\n\ttag_type = \"tense-aspect\",\n\tshortcuts = {\"phis\"},\n}\n\ntags[\"imperfective\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"imperfective\",\n\tshortcuts = {\"impfv\", \"imperfv\"},\n\twikidata = \"Q371427\",\n}\n\n\
      tags[\"perfective\"] = {\n\ttag_type = \"tense-aspect\",\n\tglossary = \"perfective\",\n\tshortcuts = {\"pfv\", \"perfv\"},\n\twikidata = \"Q1424306\",\n}\n\ntags[\"iterative\"] = {\n\ttag_type = \"tense-aspect\",\n\tshortcuts = {\"iter\"},\n\twikidata\
      \ = \"Q2866772\",\n}\n\n-- Mood\ntags[\"imperative\"] = {\n\ttag_type = \"mood\",\n\tglossary = \"imperative mood\",\n\tshortcuts = {\"imp\", \"impr\"},\n\twikidata = \"Q22716\",\n}\n\ntags[\"indicative\"] = {\n\ttag_type = \"mood\",\n\tglossary = \"indicative\
      \ mood\",\n\tshortcuts = {\"ind\", \"indc\", \"indic\"},\n\twikidata = \"Q682111\",\n}\n\ntags[\"subjunctive\"] = {\n\ttag_type = \"mood\",\n\tglossary = \"subjunctive mood\",\n\tshortcuts = {\"sub\", \"subj\"},\n\twikidata = \"Q473746\",\n}\n\ntags[\"\
      conditional\"] = {\n\ttag_type = \"mood\",\n\tglossary = \"conditional mood\",\n\tshortcuts = {\"cond\"},\n\twikidata = \"Q625581\",\n}\n\ntags[\"optative\"] = {\n\ttag_type = \"mood\",\n\tglossary = \"optative mood\",\n\tshortcuts = {\"opta\", \"opt\"\
      },\n\twikidata = \"Q527205\",\n}\n\ntags[\"potential\"] = {\n\ttag_type = \"mood\",\n\tshortcuts = {\"potn\"},\n\twikidata = \"Q2296856\",\n}\n\ntags[\"jussive\"] = {\n\ttag_type = \"mood\",\n\tglossary = \"jussive mood\",\n\tshortcuts = {\"juss\"},\n\t\
      wikidata = \"Q462367\",\n}\n\ntags[\"cohortative\"] = {\n\ttag_type = \"mood\",\n\tshortcuts = {\"coho\", \"cohort\"},\n}\n\ntags[\"volitive\"] = {\n\ttag_type = \"mood\",\n\tshortcuts = {\"voli\"},\n\twikidata = \"Q10716592\",\n}\n\n-- Exists at least\
      \ in Estonian\ntags[\"quotative\"] = {\n\ttag_type = \"mood\",\n\tglossary = \"quotative mood\",\n\tshortcuts = {\"quot\"},\n\twikidata = \"Q7272884\",\n}\n\n-- Voice\ntags[\"active\"] = {\n\ttag_type = \"voice\",\n\tglossary = \"active voice\",\n\tshortcuts\
      \ = {\"act\", \"actv\"},\n\twikidata = \"Q1317831\",\n}\n\ntags[\"middle\"] = {\n\ttag_type = \"voice\",\n\tglossary = \"middle voice\",\n\tshortcuts = {\"mid\", \"midl\"},\n}\n\ntags[\"passive\"] = {\n\ttag_type = \"voice\",\n\tglossary = \"passive voice\"\
      ,\n\tshortcuts = {\"pass\", \"pasv\"},\n\twikidata = \"Q1194697\",\n}\n\ntags[\"mediopassive\"] = {\n\ttag_type = \"voice\",\n\tglossary = \"mediopassive\",\n\tshortcuts = {\"mp\", \"mpsv\"},\n\twikidata = \"Q1601545\",\n}\n\n-- Non-finite\ntags[\"infinitive\"\
      ] = {\n\ttag_type = \"non-finite\",\n\tshortcuts = {\"inf\"},\n\twikidata = \"Q179230\",\n}\n\ntags[\"participle\"] = {\n\ttag_type = \"non-finite\",\n\tglossary = \"participle\",\n\tshortcuts = {\"part\", \"ptcp\"},\n\twikidata = \"Q814722\",\n}\n\ntags[\"\
      converb\"] = {\n\ttag_type = \"non-finite\",\n\twikidata = \"Q149761\",\n}\n\ntags[\"possessive\"] = {\n\ttag_type = \"non-finite\",\n\tshortcuts = {\"poss\"},\n\twikidata = \"Q2105891\",\n}\n\ntags[\"negative\"] = {\n\ttag_type = \"non-finite\",\n\tshortcuts\
      \ = {\"neg\"},\n}\n\ntags[\"connegative\"] = {\n\ttag_type = \"non-finite\",\n\tshortcuts = {\"conn\", \"conneg\"},\n\twikidata = \"Q5161718\",\n}\n\ntags[\"supine\"] = {\n\ttag_type = \"non-finite\",\n\tglossary = \"supine\",\n\tshortcuts = {\"sup\"},\n\
      \twikidata = \"Q548470\",\n}\n\n-- Cases\ntags[\"abessive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"abe\"},\n\twikidata = \"Q319822\",\n}\n\ntags[\"ablative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"ablative case\",\n\tshortcuts = {\"abl\"\
      },\n\twikidata = \"Q156986\",\n}\n\ntags[\"absolutive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"abs\"},\n\twikidata = \"Q332734\",\n}\n\ntags[\"accusative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"accusative case\",\n\tshortcuts = {\"acc\"\
      },\n\twikidata = \"Q146078\",\n}\n\ntags[\"adessive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"ade\"},\n\twikidata = \"Q281954\",\n}\n\ntags[\"adjectival\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"adj\"},\n}\n\ntags[\"adverbial\"] = {\n\ttag_type\
      \ = \"case\",\n\tglossary = \"adverbial\",\n\tshortcuts = {\"adv\"},\n}\n\ntags[\"allative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"all\"},\n\twikidata = \"Q655020\",\n}\n\ntags[\"anterior\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"ant\"\
      },\n}\n\ntags[\"associative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"ass\", \"assoc\"},\n\twikidata = \"Q15948746\",\n}\n\ntags[\"causal-final\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"cfi\", \"cfin\"},\n\twikidata = \"Q18012653\",\n}\n\n\
      tags[\"comitative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"com\"},\n\twikidata = \"Q838581\",\n}\n\n-- be careful not to clash with comparative degree\ntags[\"comparative case\"] = {\n\ttag_type = \"case\",\n\tdisplay = \"comparative\",\n\tshortcuts\
      \ = {\"comc\"},\n\twikidata = \"Q5155633\",\n}\n\ntags[\"dative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"dative case\",\n\tshortcuts = {\"dat\"},\n\twikidata = \"Q145599\",\n}\n\ntags[\"delative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"del\"\
      },\n\twikidata = \"Q1183901\",\n}\n\ntags[\"direct\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"dir\"},\n\twikidata = \"Q1751855\",\n}\n\ntags[\"distributive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"dis\", \"dist\"},\n\twikidata = \"Q492457\"\
      ,\n}\n\ntags[\"elative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"elative case\",\n\tshortcuts = {\"ela\"},\n\twikidata = \"Q394253\",\n}\n\ntags[\"ergative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"ergative case\",\n\tshortcuts = {\"erg\"},\n\
      \twikidata = \"Q324305\",\n}\n\ntags[\"essive-formal\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"esf\", \"efor\"},\n\twikidata = \"Q3827688\",\n}\n\ntags[\"essive-modal\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"esm\", \"emod\"},\n\twikidata\
      \ = \"Q3827703\",\n}\n\ntags[\"essive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"ess\"},\n\twikidata = \"Q148465\",\n}\n\ntags[\"exclusive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"exc\", \"excl\"},\n}\n\ntags[\"genitive\"] = {\n\ttag_type\
      \ = \"case\",\n\tglossary = \"genitive case\",\n\tshortcuts = {\"gen\"},\n\twikidata = \"Q146233\",\n}\n\ntags[\"illative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"ill\"},\n\twikidata = \"Q474668\",\n}\n\ntags[\"inessive\"] = {\n\ttag_type = \"\
      case\",\n\tshortcuts = {\"ine\"},\n\twikidata = \"Q282031\",\n}\n\ntags[\"instructive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"ist\"},\n\twikidata = \"Q1665275\",\n}\n\ntags[\"instrumental\"] = {\n\ttag_type = \"case\",\n\tglossary = \"instrumental\
      \ case\",\n\tshortcuts = {\"ins\"},\n\twikidata = \"Q192997\",\n}\n\ntags[\"limitative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"limitative case\",\n\tshortcuts = {\"lim\"},\n\twikidata = \"Q35870079\",\n}\n\ntags[\"locative\"] = {\n\ttag_type = \"\
      case\",\n\tglossary = \"locative case\",\n\tshortcuts = {\"loc\"},\n\twikidata = \"Q202142\",\n}\n\ntags[\"locative-qualitative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"locative-qualitative case\",\n\tshortcuts = {\"lqu\", \"lqua\"},\n}\n\ntags[\"\
      nominative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"nominative case\",\n\tshortcuts = {\"nom\"},\n\twikidata = \"Q131105\",\n}\n\ntags[\"objective\"] = {\n\ttag_type = \"case\",\n\tglossary = \"objective case\",\n\tshortcuts = {\"obj\"},\n\twikidata\
      \ = \"Q1233197\",  -- Same as oblique. Wikipedia considers them the same thing, but we want to allow users to choose their own terminology.\n}\n\ntags[\"oblique\"] = {\n\ttag_type = \"case\",\n\tglossary = \"oblique case\",\n\tshortcuts = {\"obl\"},\n\t\
      wikidata = \"Q1233197\",\n}\n\ntags[\"partitive\"] = {\n\ttag_type = \"case\",\n\tglossary = \"partitive case\",\n\tshortcuts = {\"par\"},\n\twikidata = \"Q857325\",\n}\n\ntags[\"prolative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"pro\"},\n\twikidata\
      \ = \"Q952933\",\n}\n\ntags[\"prepositional\"] = {\n\ttag_type = \"case\",\n\tglossary = \"prepositional case\",\n\tshortcuts = {\"pre\", \"prep\"},\n\twikidata = \"Q2114906\",\n}\n\ntags[\"sociative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"sociative\
      \ case\",\n\tshortcuts = {\"soc\"},\n\twikidata = \"Q3773161\",\n}\n\ntags[\"sublative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"sbl\"},\n\twikidata = \"Q2120615\",\n}\n\ntags[\"superessive\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"spe\"\
      },\n\twikidata = \"Q222355\",\n}\n\ntags[\"temporal\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"tem\", \"temp\"},\n\twikidata = \"Q3235219\",\n}\n\ntags[\"terminative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"ter\", \"term\"},\n\twikidata =\
      \ \"Q747019\",\n}\n\ntags[\"translative\"] = {\n\ttag_type = \"case\",\n\tshortcuts = {\"tra\", \"tran\"},\n\twikidata = \"Q950170\",\n}\n\ntags[\"vocative\"] = {\n\ttag_type = \"case\",\n\tglossary = \"vocative case\",\n\tshortcuts = {\"voc\"},\n\twikidata\
      \ = \"Q185077\",\n}\n\n-- State\ntags[\"construct\"] = {\n\ttag_type = \"state\",\n\tglossary = \"construct state\",\n\tshortcuts = {\"cons\", \"construct state\"},\n\twikidata = \"Q1641446\",\n}\n\ntags[\"definite\"] = {\n\ttag_type = \"state\",\n\tglossary\
      \ = \"definite\",\n\tshortcuts = {\"def\", \"defn\", \"definite state\"},\n\twikidata = \"Q53997851\",\n}\n\ntags[\"indefinite\"] = {\n\ttag_type = \"state\",\n\tglossary = \"indefinite\",\n\tshortcuts = {\"indef\", \"indf\", \"indefinite state\"},\n\t\
      wikidata = \"Q53997857\",\n}\n\ntags[\"attributive\"] = {\n\ttag_type = \"state\",\n\tglossary = \"attributive\",\n\tshortcuts = {\"attr\"},\n}\n\ntags[\"predicative\"] = {\n\ttag_type = \"state\",\n\tshortcuts = {\"pred\"},\n}\n\n-- Degrees of comparison\n\
      tags[\"comparative degree\"] = {\n\ttag_type = \"comparison\",\n\tglossary = \"comparative\",\n\tshortcuts = {\"comd\", \"comparative\"},\n\twikidata = \"Q14169499\",\n}\n\ntags[\"superlative degree\"] = {\n\ttag_type = \"comparison\",\n\tglossary = \"\
      superlative\",\n\tshortcuts = {\"supd\", \"superlative\"},\n\twikidata = \"Q1817208\",\n}\n\ntags[\"elative degree\"] = {\n\ttag_type = \"comparison\",\n\tglossary = \"elative\",\n\tshortcuts = {\"elad\"},  -- Can't use \"elative\" as shortcut because\
      \ that's already used for the elative case\n\twikidata = \"Q1555419\",\n}\n\ntags[\"equative degree\"] = {\n\ttag_type = \"comparison\",\n\tshortcuts = {\"equd\", \"equative\"},\n\twikidata = \"Q5384239\",\n}\n\n-- Sound changes\ntags[\"contracted\"] =\
      \ {\n\ttag_type = \"sound change\",\n}\n\n-- Other tags\ntags[\"and\"] = {\n\ttag_type = \"other\",\n}\n\nlocal shortcuts = {}\n\n-- Create the shortcuts list\nfor name, data in pairs(tags) do\n\tif data.shortcuts then\n\t\tfor _, shortcut in ipairs(data.shortcuts)\
      \ do\n\t\t\t-- If the shortcut is already in the list, then there is a duplicate.\n\t\t\tif shortcuts[shortcut] then\n\t\t\t\terror(\"The shortcut \\\"\" .. shortcut .. \"\\\" (for the grammar tag \\\"\" .. name .. \"\\\") conflicts with an existing shortcut\
      \ for the tag \\\"\" .. shortcuts[shortcut] .. \"\\\".\")\n\t\t\telseif tags[shortcut] then\n\t\t\t\terror(\"The shortcut \\\"\" .. shortcut .. \"\\\" (for the grammar tag \\\"\" .. name .. \"\\\") conflicts with an existing tag with that name.\")\n\t\t\
      \tend\n\t\t\t\n\t\t\tshortcuts[shortcut] = name\n\t\tend\n\tend\nend\n\nreturn {tags = tags, shortcuts = shortcuts}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:10:40.380Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=File%3AWikipedia-logo.png&prop=imageinfo&iiprop=url&iiurlwidth=44
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=75495 t=1555362640249589
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:40 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1229.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 604160102, 571612117, 691985983
    body: <?xml version="1.0"?><api><continue iistart="2010-05-26T15:56:42Z" continue="||" /><query><pages><page _idx="-1" ns="6" title="File:Wikipedia-logo.png" missing="" known="" imagerepository="shared"><imageinfo><ii thumburl="https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Wikipedia-logo.png/44px-Wikipedia-logo.png" thumbwidth="44" thumbheight="44" url="https://upload.wikimedia.org/wikipedia/commons/6/63/Wikipedia-logo.png" descriptionurl="https://commons.wikimedia.org/wiki/File:Wikipedia-logo.png" descriptionshorturl="https://commons.wikimedia.org/w/index.php?curid=162278" /></imageinfo></page></pages></query></api>
- recorded: 2019-04-15T21:10:40.708Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=File%3ANl-nectar.ogg&prop=imageinfo&iiprop=url&iiurlwidth=175
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50510 t=1555362640602689
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '556'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:10:40 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1340.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 222134907, 636838303, 698072829
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="6" title="File:Nl-nectar.ogg" missing="" known="" imagerepository="shared"><imageinfo><ii thumburl="https://en.wiktionary.org/w/resources/assets/file-type-icons/fileicon-ogg.png" thumbwidth="175" thumbheight="175" url="https://upload.wikimedia.org/wikipedia/commons/1/16/Nl-nectar.ogg" descriptionurl="https://commons.wikimedia.org/wiki/File:Nl-nectar.ogg" descriptionshorturl="https://commons.wikimedia.org/w/index.php?curid=38167851" /></imageinfo></page></pages></query></api>
