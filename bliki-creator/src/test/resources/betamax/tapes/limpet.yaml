!tape
name: limpet
interactions:
- recorded: 2019-04-15T21:07:25.957Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=limpet&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42992 t=1555362445866629
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '3544'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:25 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Set-Cookie: WMF-Last-Access=15-Apr-2019;Path=/;HttpOnly;secure;Expires=Fri, 17 May 2019 12:00:00 GMT, WMF-Last-Access-Global=15-Apr-2019;Path=/;Domain=.wiktionary.org;HttpOnly;secure;Expires=Fri, 17 May 2019 12:00:00 GMT, GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; Path=/; secure; Domain=.wiktionary.org
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;https=1;nocookies=1
      X-Cache: cp1087 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 746734692, 728684913, 695516311
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="55639" pageid="55639" ns="0" title="limpet"><revisions><rev user="Rukhabot" timestamp="2019-04-09T03:44:12Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="updating {{t}}/{{t+}}" xml:space="preserve">==English==

      ===Alternative forms===
      * {{l|en|limpin}} {{q|dialectal}}

      ===Etymology===
      From {{inh|en|enm|lempet}}, from {{inh|en|ang|lempedu|t=lamprey}}, borrowed from {{bor|en|ML.|lampreda}}, alteration of {{der|en|LL.|lampetra|t=lamprey}}, whose further origin is unknown, though is [[folk etymology|traditionally]] thought to derive from {{compound|la|lambō|petra|gloss1=I lick, lap|gloss2=stone, rock}}. {{doublet|en|lamprey}}, which came through {{bor|en|fro|-}}.

      ===Pronunciation===
      * {{IPA|/ˈlɪm.pɪt/|lang=en}}
      * {{rhymes|ɪmpɪt|lang=en}}

      ===Noun===
      [[File:Common limpets1.jpg|thumb|right|Common '''limpets''' (''[[Patella vulgata]]'') in Pembrokeshire, Wales]]
      {{en-noun}}

      # A small [[mollusc]], of the family [[Patellidae]] with a conical shell found clinging to rocks in the [[intertidal]] zones of rocky shores.
      # {{lb|en|British}} Someone [[clingy]] or [[dependent]]; someone disregarding or ignorant of another's [[personal space]].
      #: ''He stuck to me like a '''limpet''' all day!''

      ====Derived terms====
      * {{l|en|limpet mine}}

      ====Translations====
      {{trans-top|a small mollusc}}
      * Basque: {{t+|eu|lapa}}
      * Breton: {{t+|br|brennigenn|f}}
      * Catalan: {{t|ca|pagellida|f}}
      * Cornish: {{t|kw|brenigen}}
      * Czech: {{t|cs|přílipka|f}}
      * Danish: {{t|da|albueskæl|n}}
      * Dutch: {{t|nl|napslak|f}}
      * Finnish: {{t|fi|maljakotilo}}
      * French: {{t+|fr|patelle|f}}, {{t+|fr|lampotte|f}}
      * Galician: {{t|gl|lapa|f}}, {{t|gl|patela|f}}
      * German: {{t|de|Napfschnecke|f}}
      * Greek: {{t+|el|πεταλίδα|f}}
      *: Ancient: {{t|grc|λεπάς|f}}
      {{trans-mid}}
      * Irish: {{t|ga|bairneach|m}}
      * Italian: {{t|it|patella|f}}
      * Korean: {{t|ko|삿갓조개}}
      * Latin: {{t|la|mītulus|m}}
      * Macedonian: {{t|mk|прилепец|m}}
      * Maori: {{t|mi|ngākihi}}, {{t|mi|kākihi}}, {{t|mi|piritoka}}
      * Norman: {{t|nrf|baîni|m}} {{qualifier|Jersey}}, {{t|nrf|fllie|f}} {{qualifier|Guernsey}}
      * Portuguese: {{t+|pt|lapa|f}}
      * Russian: {{t|ru|[[блю́дечко]] ([[моллю́ск]])|n}}, {{t|ru|[[морской|морско́е]] [[блю́дечко]]}}
      * Spanish: {{t+|es|lapa|f}}
      * Swedish: {{t|sv|skålsnäcka|c}}
      * Vietnamese: {{t|vi|con sao sao}}
      * Welsh: {{t|cy|llygad maharen|m}}, {{t|cy|cragen maharen|f}}, {{t|cy|brenigen|f}}, {{t|cy|cogwrn|m}}
      {{trans-bottom}}

      {{trans-top|someone dependant}}
      * Catalan: {{t+|ca|paparra|f}}
      * Finnish: {{t+|fi|iiliäinen}}
      {{trans-mid}}
      * Galician: {{t|gl|lapa|f}}
      * German: {{t+|de|Anhang|m}}, {{t+|de|Anhängsel|n}}
      {{trans-bottom}}

      ===References===
      * {{R:Etymonline}}

      ===Further reading===
      * {{pedia}}
      * {{specieslite|Patellidae}}

      ===Anagrams===
      * {{anagrams|en|a=eilmpt|timple}}

      [[Category:en:Gastropods]]
      [[Category:en:People]]</rev></revisions></page></pages></query></api>
- recorded: 2015-09-17T18:47:39.359Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Arfe&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:39 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1068 miss (0), cp3003 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 1292563261, 147422994, 2666520554
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="255843" pageid="255843" ns="10" title="Template:rfe"><revisions><rev user="Nemo bis" timestamp="2015-09-12T07:32:01Z" comment="http://www.w3.org/QA/Tips/noClickHere" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{request box&lt;!--
      --&gt;|1=[[File:EB1911_-_Volume_01_-_Page_001_-_1.svg|50px]]&lt;!--
      --&gt;|2=This {{&lt;noinclude&gt;temp|&lt;/noinclude&gt;pagetype}} lacks etymological information. If you are familiar with the origin of this term, please add it to the page per [[Wiktionary:Etymology|etymology instructions]]. {{#if:{{{1|}}}| &lt;br /&gt;Particularly: “{{{1|}}}”|}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;includeonly&gt;&lt;!--
      --&gt;{{{demo|&lt;!--
        --&gt;{{catlangname|{{{lang|und}}}|entries needing etymology}}&lt;!--
      --&gt;}}}&lt;!--

      --&gt;{{#if:{{{lang|}}}||[[Category:Language code missing/rfe]]}}&lt;!--

      --&gt;&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}</rev></revisions></page></pages></query></api>
- recorded: 2015-09-17T18:47:39.549Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Apagetype&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:39 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1066 miss (0), cp3010 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2862181567, 1342415481, 2666521362
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"965414\" pageid=\"965414\" ns=\"10\" title=\"Template:pagetype\"><revisions><rev user=\"Kephir\" timestamp=\"2014-05-20T19:04:35Z\" comment=\"just &quot;module&quot;; may be\
      \ inaccurate for documentation pages, but whatever.\" contentformat=\"text/x-wiki\" contentmodel=\"wikitext\" xml:space=\"preserve\">&lt;includeonly&gt;&lt;!--\n\nDecide whether to make the first letter uppercase or not\n\n--&gt;{{{{#ifeq:{{{2|{{{1}}}}}}|U|ucfirst|#titleparts}}:&lt;!--\n\
      \n  --&gt;{{#ifeq:{{{1}}}|a|&lt;!-- Decide whether to prefix indefinite article\n\n    --&gt;{{#ifeq:{{TALKSPACE}}|{{NAMESPACE}}|a talk page|{{#switch:{{NAMESPACE}}|&lt;!--main--&gt;=an entry|Category=a category|Template=a template|Appendix=an appendix|Wiktionary=a\
      \ project page|Index=an index|File=an image page|Module=a module|Wikisaurus=a Wikisaurus page|#default=a {{lc:{{NAMESPACE}}}} page}}}}&lt;!-- \n\n  --&gt;|&lt;!-- \n\n    --&gt;{{#ifeq:{{TALKSPACE}}|{{NAMESPACE}}|talk page|{{#switch:{{NAMESPACE}}|&lt;!--main--&gt;=entry|Category|Template|Appendix|Index={{lc:{{NAMESPACE}}}}|Wiktionary=project\
      \ page|Wikisaurus=Wikisaurus page|File=image page|Module=module|#default={{lc:{{NAMESPACE}}}} page}}}}&lt;!--\n  \n  --&gt;}}&lt;!--\n\n--&gt;}}&lt;!--\n\n--&gt;&lt;/includeonly&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>"
- recorded: 2015-09-17T18:47:39.740Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Arequest+box&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:39 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1053 miss (0), cp3008 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 3563626089, 370284942, 2666522157
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="1146648" pageid="1146648" ns="10" title="Template:request box"><revisions><rev user="177.133.48.197" anon="" timestamp="2014-06-13T02:56:25Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">&lt;div class=&quot;noprint request-box&quot; style=&quot;width: auto; margin: 0; padding: 0.5em; border-collapse: collapse;overflow: hidden;&quot;&gt;
      {| style=&quot;background:#FFFFFF; width:90%; margin: auto; border:1px dashed #999999; text-align:left&quot;
      | {{{1}}}
      | {{{2}}}
      |}
      &lt;/div&gt;&lt;noinclude&gt;[[Category:Template boxes]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2015-09-17T18:47:39.937Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Acatlangname&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:39 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1055 miss (0), cp3003 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2083890654, 147423419, 2666522972
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="2130756" pageid="2130756" ns="10" title="Template:catlangname"><revisions><rev user="CodeCat" timestamp="2013-07-29T12:47:08Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:utilities|template_categorize|format=pos}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:31.219Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48095 t=1555362451115663
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1312.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 427034112, 635683815, 697054421
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4073440\" pageid=\"4073440\" ns=\"828\" title=\"Module:utilities\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-10-30T22:40:37Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"pipe doesn&#039;t have to be escaped\" xml:space=\"preserve\">local export = {}\n\nlocal data = mw.loadData(\"Module:utilities/data\")\nlocal notneeded = data.notneeded\nlocal neededhassubpage\
      \ = data.neededhassubpage\n\n-- A helper function to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nfunction export.pattern_escape(text)\n\tif type(text) == \"table\" then\n\t\ttext = text.args[1]\n\tend\n\ttext = mw.ustring.gsub(text,\
      \ \"([%^$()%%.%[%]*+%-?])\", \"%%%1\")\n\treturn text\nend\n\nfunction export.plain_gsub(text, pattern, replacement)\n\tlocal invoked = false\n\t\n\tif type(text) == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\
      \t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = {},\n\t\t\t\t[2] = {},\n\t\t\t\t[3] = { allow_empty = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\
      \t\t\treplacement = args[3]\n\t\telse\n\t\t\terror(\"If the first argument to plain_gsub is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not ( type(pattern) == \"string\" or type(pattern) == \"number\" ) then\n\t\t\terror(\"The second\
      \ argument to plain_gsub should be a string or a number.\")\n\t\tend\n\t\t\n\t\tif not ( type(replacement) == \"string\" or type(replacement) == \"number\" ) then\n\t\t\terror(\"The third argument to plain_gsub should be a string or a number.\")\n\t\t\
      end\n\tend\n\t\n\tpattern = export.pattern_escape(pattern)\n\t\n\tif invoked then\n\t\ttext = mw.ustring.gsub(text, pattern, replacement)\n\t\treturn text\n\telse\n\t\treturn mw.ustring.gsub(text, pattern, replacement)\n\tend\nend\n\n--[[\nFormat the categories\
      \ with the appropriate sort key. CATEGORIES is a list of\ncategories.\n\t-- LANG is an object encapsulating a language; if nil, the object for\n\t   language code 'und' (undetermined) will be used.\n\t-- SORT_KEY is placed in the category invocation, and\
      \ indicates how the\n\t   page will sort in the respective category. Normally this should be nil,\n\t   and a default sort key based on the subpage name (the part after the\n\t   colon) will be used.\n\t-- SORT_BASE lets you override the default sort key\
      \ used when SORT_KEY is\n\t   nil. Normally, this should be nil, and a language-specific default sort\n\t   key is computed from the subpage name (e.g. for Russian this converts\n\t   Cyrillic ё to a string consisting of Cyrillic е followed by U+10FFFF,\n\
      \t   so that effectively ё sorts after е instead of the default Wikimedia\n\t   sort, which (I think) is based on Unicode sort order and puts ё after я,\n\t   the last letter of the Cyrillic alphabet.\n\t-- FORCE_OUTPUT forces normal output in all namespaces.\
      \ Normally, nothing\n\t   is output if the page isn't in the main, Appendix:, Reconstruction: or\n\t   Citations: namespaces.\n]]\nfunction export.format_categories(categories, lang, sort_key, sort_base, force_output, sc)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\
      \t\n\tif type(lang) == \"table\" and not lang.getCode then\n\t\terror(\"The second argument to format_categories should be a language object.\")\n\tend\n\t\n\tif force_output or data.allowedNamespaces[NAMESPACE] then\n\t\tlocal PAGENAME = mw.title.getCurrentTitle().text\n\
      \t\tlocal SUBPAGENAME = mw.title.getCurrentTitle().subpageText\n\t\t\n\t\tif not lang then\n\t\t\tlang = require(\"Module:languages\").getByCode(\"und\")\n\t\tend\n\t\t\n\t\t-- Generate a default sort key\n\t\tsort_base = lang:makeSortKey(sort_base or\
      \ SUBPAGENAME, sc)\n\t\t\n\t\tif sort_key and sort_key ~= \"\" then\n\t\t\t-- Gather some statistics regarding sort keys\n\t\t\tif mw.ustring.upper(sort_key) == sort_base then\n\t\t\t\ttable.insert(categories, \"Sort key tracking/redundant\")\n\t\t\tend\n\
      \t\telse\n\t\t\tsort_key = sort_base\n\t\tend\n\t\t\n\t\t--[[\tIf the resulting key is the same as the wiki software's\n\t\t\t\tdefault, or if the sortkey is empty, remove it\t\t\t ]]\n\t\tif sort_key == PAGENAME or sort_key == \"\" then\n\t\t\tsort_key\
      \ = nil\n\t\tend\n\t\t\n\t\tlocal out_categories = {}\n\t\tfor key, cat in ipairs(categories) do\n\t\t\tout_categories[key] = \"[[Category:\" .. cat .. (sort_key and \"|\" .. sort_key or \"\") .. \"]]\"\n\t\tend\n\t\t\n\t\treturn table.concat(out_categories,\
      \ \"\")\n\telse\n\t\treturn \"\"\n\tend\nend\n\n-- Used by {{categorize}}\nfunction export.template_categorize(frame)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\tlocal format = frame.args[\"format\"]\n\tlocal args = frame:getParent().args\n\
      \t\n\tlocal langcode = args[1]; if langcode == \"\" then langcode = nil end\n\tlocal sort_key = args[\"sort\"]; if sort_key == \"\" then sort_key = nil end\n\tlocal categories = {}\n\t\n\tif not langcode then\n\t\tif NAMESPACE == \"Template\" then return\
      \ \"\" end\n\t\terror(\"Language code has not been specified. Please pass parameter 1 to the template.\")\n\tend\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(langcode)\n\t\n\tif not lang then\n\t\tif NAMESPACE == \"Template\" then return\
      \ \"\" end\n\t\terror(\"The language code \\\"\" .. langcode .. \"\\\" is not valid.\")\n\tend\n\t\n\tlocal prefix = \"\"\n\t\n\tif format == \"pos\" then\n\t\tprefix = lang:getCanonicalName() .. \" \"\n\telseif format == \"topic\" then\n\t\tprefix = lang:getCode()\
      \ .. \":\"\n\tend\n\t\n\tlocal i = 2\n\tlocal cat = args[i]\n\t\n\twhile cat do\n\t\tif cat ~= \"\" then\n\t\t\ttable.insert(categories, prefix .. cat)\n\t\tend\n\t\t\n\t\ti = i + 1\n\t\tcat = args[i]\n\tend\n\t\n\treturn export.format_categories(categories,\
      \ lang, sort_key)\nend\n\nfunction export.catfix(lang, sc)\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"catfix/no lang\")\n\t\treturn nil\n\telseif type(lang) ~= \"table\" then\n\t\trequire(\"Module:debug\").track(\"catfix/lang not table\"\
      )\n\t\treturn nil\n\tend\n\tlocal canonicalName = lang:getCanonicalName() or error('The first argument to the function \"catfix\" should be a language object from Module:languages.')\n\t\n\tif sc and not sc.getCode then\n\t\terror('The second argument\
      \ to the function \"catfix\" should be a script object from Module:scripts.')\n\tend\n\t\n\t-- To add script classes to links on pages created by category boilerplate templates.\n\tif not sc then\n\t\tsc = data.catfix_scripts[lang:getCode()]\n\t\tif sc\
      \ then\n\t\t\tsc = require(\"Module:scripts\").getByCode(sc)\n\t\tend\n\tend\n\t\n\treturn \"&lt;span id=\\\"catfix\\\" style=\\\"display:none;\\\" class=\\\"CATFIX-\" .. mw.uri.anchorEncode(canonicalName) .. \"\\\"&gt;\" ..\n\t\trequire(\"Module:script\
      \ utilities\").tag_text(\"&amp;nbsp;\", lang, sc, nil) ..\n\t\t\"&lt;/span&gt;\"\nend\n\nfunction export.catfix_template(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t\t[2] = { alias_of = \"sc\" },\n\t\t[\"sc\"] = {},\n\t}\n\t\n\tlocal args = require(\"\
      Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal sc = args.sc\n\tif sc then\n\t\tsc = require(\"Module:scripts\"\
      ).getByCode(sc) or error('The script code \"' .. sc .. '\", provided in the second parameter, is not valid.')\n\tend\n\t\n\treturn export.catfix(lang, sc)\nend\n\n-- Not exporting because it is not used yet.\nlocal function getDateTense(frame) \n\tlocal\
      \ name_num_mapping = {[\"January\"] = 1, [\"February\"] = 2, [\"March\"] = 3, [\"April\"] = 4, [\"May\"] = 5, [\"June\"] = 6, \n\t\t[\"July\"] = 7, [\"August\"] = 8, [\"September\"] = 9, [\"October\"] = 10, [\"November\"] = 11, [\"December\"] = 12, \n\t\
      \t[1] = 1, [2] = 2, [3] = 3, [4] = 4, [5] = 5, [6] = 6, [7] = 7, [8] = 8, [9] = 9, [10] = 10, [11] = 11, [12] = 12}\n\tlocal month = name_num_mapping[frame.args[2]]\n\tlocal date = os.time({year = frame.args[1], day = frame.args[3], month = month})\n\t\
      local today = os.time() -- 12 AM/PM\n\tlocal diff = os.difftime(date, today)\n\tlocal daylength = 24 * 3600\n\t\n\tif diff &lt; -daylength / 2 then return \"past\"\n\telse \n\t\tif diff &gt; daylength / 2  then return \"future\"\n\t\telse return \"present\"\
      \ end\n\tend\nend\n\nfunction export.make_id(lang, str)\n\t--[[\tIf called with invoke, first argument is a frame object.\n\t\t\tIf called by a module, first argument is a language object. ]]\n\tlocal invoked = false\n\t\n\tif type(lang) == \"table\" then\n\
      \t\tif lang.args then\n\t\t\tinvoked = true\n\t\t\t\n\t\t\tlocal frame = lang\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = {},\n\t\t\t\t[2] = {},\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\
      \t\t\t\n\t\t\tlocal langCode = args[1]\n\t\t\tstr = args[2]\n\t\t\t\n\t\t\tlocal m_languages = require(\"Module:languages\")\n\t\t\t\n\t\t\tlang = m_languages.getByCode(langCode) or m_languages.err(langCode, 1)\n\t\telseif not lang.getCanonicalName then\n\
      \t\t\terror(\"The first argument to make_id should be a language object.\")\n\t\tend\n\tend\n\n\tif not ( type(str) == \"string\" or type(str) == \"number\" ) then\n\t\terror(\"The second argument to make_id should be a string or a number.\")\n\tend\n\t\
      \n\tlocal canonicalName = lang:getCanonicalName()\n\t\n\tstr = mw.uri.encode(str, \"WIKI\")\n\t\n\tlocal id = canonicalName .. \"-\" .. str\n\t\n\tif invoked then\n\t\treturn '&lt;li class=\"senseid\" id=\"' .. id .. '\"&gt;'\n\telse\n\t\treturn id\n\t\
      end\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:27.340Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=57692 t=1555362447211934
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1229.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 928029197, 826064204, 693651053
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4453474\" pageid=\"4453474\" ns=\"828\" title=\"Module:languages\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-13T02:06:03Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add getNonEtymological\" xml:space=\"preserve\">local export = {}\n\n--[=[\tThis function checks for things that could plausibly be a language code:\n\t\ttwo or three lowercase letters,\
      \ two or three groups of three lowercase\n\t\tletters with hyphens between them. If such a pattern is not found,\n\t\tit is likely the editor simply forgot to enter a language code. ]=]\n\nfunction export.err(langCode, param, text, template_tag)\n\tlocal\
      \ ordinals = {\n\t\t\"first\", \"second\", \"third\", \"fourth\", \"fifth\", \"sixth\",\n\t\t\"seventh\", \"eighth\", \"ninth\", \"tenth\", \"eleventh\", \"twelfth\",\n\t\t\"thirteenth\", \"fourteenth\", \"fifteenth\", \"sixteenth\", \"seventeenth\",\n\
      \t\t\"eighteenth\", \"nineteenth\", \"twentieth\"\n\t}\n\t\n\tif not template_tag then\n\t\ttemplate_tag = \"\"\n\telse\n\t\tif type(template_tag) ~= \"string\" then\n\t\t\ttemplate_tag = template_tag()\n\t\tend\n\t\ttemplate_tag = \" (Original template:\
      \ \" .. template_tag .. \")\"\n\tend\n\tlocal paramType = type(param)\n\tif paramType == \"number\" then\n\t\tordinal = ordinals[param]\n\t\tparam = ordinal .. ' parameter'\n\telseif paramType == \"string\" then\n\t\tparam = 'parameter \"' .. param ..\
      \ '\"'\n\telse\n\t\terror(\"The parameter name is \"\n\t\t\t\t.. (paramType == \"table\" and \"a table\" or tostring(param))\n\t\t\t\t.. \", but it should be a number or a string.\" .. template_tag, 2)\n\tend\n\t\n\t-- Can use string.find because language\
      \ codes only contain ASCII.\n\tif not langCode or langCode == \"\" then\n\t\terror(\"The \" .. param .. \" (\" .. (text or \"language code\") .. \") is missing.\" .. template_tag, 2)\n\telseif langCode:find(\"^%l%l%l?$\")\n\t\t\tor langCode:find(\"^%l%l%l%-%l%l%l$\"\
      )\n\t\t\tor langCode:find(\"^%l%l%l%-%l%l%l%-%l%l%l$\") then\n\t\terror(\"The language code \\\"\" .. langCode .. \"\\\" is not valid.\" .. template_tag, 2)\n\telse\n\t\terror(\"Please enter a \" .. (text or \"language code\") .. \" in the \" .. param\
      \ .. \".\" .. template_tag, 2)\n\tend\nend\n\nlocal function do_entry_name_or_sort_key_replacements(text, replacements)\n\tif replacements.from then\n\t\tfor i, from in ipairs(replacements.from) do\n\t\t\tlocal to = replacements.to[i] or \"\"\n\t\t\ttext\
      \ = mw.ustring.gsub(text, from, to)\n\t\tend\n\tend\n\t\n\tif replacements.remove_diacritics then\n\t\ttext = mw.ustring.toNFD(text)\n\t\ttext = mw.ustring.gsub(text,\n\t\t\t'[' .. replacements.remove_diacritics .. ']',\n\t\t\t'')\n\t\ttext = mw.ustring.toNFC(text)\n\
      \tend\n\t\n\treturn text\nend\n\nlocal Language = {}\n\nfunction Language:getCode()\n\treturn self._code\nend\n\n\nfunction Language:getCanonicalName()\n\treturn self._rawData[1] or self._rawData.canonicalName\nend\n\n\nfunction Language:getOtherNames()\n\
      \treturn self._rawData.otherNames or {}\nend\n\n\nfunction Language:getType()\n\treturn self._rawData.type or \"regular\"\nend\n\n\nfunction Language:getWikimediaLanguages()\n\tif not self._wikimediaLanguageObjects then\n\t\tlocal m_wikimedia_languages\
      \ = require(\"Module:wikimedia languages\")\n\t\tself._wikimediaLanguageObjects = {}\n\t\tlocal wikimedia_codes = self._rawData.wikimedia_codes or { self._code }\n\t\t\n\t\tfor _, wlangcode in ipairs(wikimedia_codes) do\n\t\t\ttable.insert(self._wikimediaLanguageObjects,\
      \ m_wikimedia_languages.getByCode(wlangcode))\n\t\tend\n\tend\n\t\n\treturn self._wikimediaLanguageObjects\nend\n\nfunction Language:getWikipediaArticle()\n\tif self._rawData.wikipedia_article then\n\t\treturn self._rawData.wikipedia_article \n\telseif\
      \ self._wikipedia_article then\n\t\treturn self._wikipedia_article\n\telseif self:getWikidataItem() and mw.wikibase then\n\t\tself._wikipedia_article = mw.wikibase.sitelink(self:getWikidataItem(), 'enwiki')\n\tend\n\tif not self._wikipedia_article then\n\
      \t\tself._wikipedia_article = mw.ustring.gsub(self:getCategoryName(), \"Creole language\", \"Creole\")\n\tend\n\treturn self._wikipedia_article\nend\n\nfunction Language:makeWikipediaLink()\n\treturn \"[[w:\" .. self:getWikipediaArticle() .. \"|\" .. self:getCanonicalName()\
      \ .. \"]]\"\nend\n\nfunction Language:getWikidataItem()\n\treturn self._rawData[2] or self._rawData.wikidata_item\nend\n\nfunction Language:getScripts()\n\tif not self._scriptObjects then\n\t\tlocal m_scripts = require(\"Module:scripts\")\n\t\tself._scriptObjects\
      \ = {}\n\t\t\n\t\tfor _, sc in ipairs(self._rawData.scripts or { \"None\" }) do\n\t\t\ttable.insert(self._scriptObjects, m_scripts.getByCode(sc))\n\t\tend\n\tend\n\t\n\treturn self._scriptObjects\nend\n\nfunction Language:getScriptCodes()\n\treturn self._rawData.scripts\
      \ or { \"None\" }\nend\n\nfunction Language:getFamily()\n\tif self._familyObject then\n\t\treturn self._familyObject\n\tend\n\t\t\n\tlocal family = self._rawData[3] or self._rawData.family \n\tif family then\n\t\tself._familyObject = require(\"Module:families\"\
      ).getByCode(family)\n\tend\n\t\n\treturn self._familyObject\nend\n\n\nfunction Language:getAncestors()\n\tif not self._ancestorObjects then\n\t\tself._ancestorObjects = {}\n\t\t\n\t\tif self._rawData.ancestors then\n\t\t\tfor _, ancestor in ipairs(self._rawData.ancestors)\
      \ do\n\t\t\t\ttable.insert(self._ancestorObjects, export.getByCode(ancestor) or require(\"Module:etymology languages\").getByCode(ancestor))\n\t\t\tend\n\t\telse\n\t\t\tlocal fam = self:getFamily()\n\t\t\tlocal protoLang = fam and fam:getProtoLanguage()\
      \ or nil\n\t\t\t\n\t\t\t-- For the case where the current language is the proto-language\n\t\t\t-- of its family, we need to step up a level higher right from the start.\n\t\t\tif protoLang and protoLang:getCode() == self:getCode() then\n\t\t\t\tfam =\
      \ fam:getFamily()\n\t\t\t\tprotoLang = fam and fam:getProtoLanguage() or nil\n\t\t\tend\n\t\t\t\n\t\t\twhile not protoLang and not (not fam or fam:getCode() == \"qfa-not\") do\n\t\t\t\tfam = fam:getFamily()\n\t\t\t\tprotoLang = fam and fam:getProtoLanguage()\
      \ or nil\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(self._ancestorObjects, protoLang)\n\t\tend\n\tend\n\t\n\treturn self._ancestorObjects\nend\n\nlocal function iterateOverAncestorTree(node, func)\n\tfor _, ancestor in ipairs(node:getAncestors()) do\n\t\t\
      if ancestor then\n\t\t\tlocal ret = func(ancestor) or iterateOverAncestorTree(ancestor, func)\n\t\t\tif ret then\n\t\t\t\treturn ret\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction Language:getAncestorChain()\n\tif not self._ancestorChain then\n\t\tself._ancestorChain\
      \ = {}\n\t\tlocal step = #self:getAncestors() == 1 and self:getAncestors()[1] or nil\n\t\t\n\t\twhile step do\n\t\t\ttable.insert(self._ancestorChain, 1, step)\n\t\t\tstep = #step:getAncestors() == 1 and step:getAncestors()[1] or nil\n\t\tend\n\tend\n\t\
      \n\treturn self._ancestorChain\nend\n\n\nfunction Language:hasAncestor(otherlang)\n\tlocal function compare(ancestor)\n\t\treturn ancestor:getCode() == otherlang:getCode()\n\tend\n\t\n\treturn iterateOverAncestorTree(self, compare) or false\nend\n\n\n\
      function Language:getCategoryName()\n\tlocal name = self:getCanonicalName()\n\t\n\t-- If the name already has \"language\" in it, don't add it.\n\tif name:find(\"[Ll]anguage$\") then\n\t\treturn name\n\telse\n\t\treturn name .. \" language\"\n\tend\nend\n\
      \n\nfunction Language:getStandardCharacters()\n\treturn self._rawData.standardChars\nend\n\n\nfunction Language:makeEntryName(text)\n\ttext = mw.ustring.gsub(text, \"^[¿¡]\", \"\")\n\ttext = mw.ustring.gsub(text, \"(.)[؟?!;՛՜ ՞ ՟？！︖︕।॥။၊་།]$\", \"%1\"\
      )\n\t\n\tif self:getCode() == \"ar\" then\n\t\tlocal U = mw.ustring.char\n\t\tlocal taTwiil = U(0x640)\n\t\tlocal waSla = U(0x671)\n\t\t-- diacritics ordinarily removed by entry_name replacements\n\t\tlocal Arabic_diacritics = U(0x64B, 0x64C, 0x64D, 0x64E,\
      \ 0x64F, 0x650, 0x651, 0x652, 0x670)\n\t\t\n\t\tif text == waSla or mw.ustring.find(text, \"^\" .. taTwiil .. \"?[\" .. Arabic_diacritics .. \"]\" .. \"$\") then\n\t\t\treturn text\n\t\tend\n\tend\n\t\n\tif type(self._rawData.entry_name) == \"table\" then\n\
      \t\ttext = do_entry_name_or_sort_key_replacements(text, self._rawData.entry_name)\n\tend\n\t\n\treturn text\nend\n\n\n-- Add to data tables?\nlocal has_dotted_undotted_i = {\n\t[\"az\"] = true,\n\t[\"crh\"] = true,\n\t[\"gag\"] = true,\n\t[\"kaa\"] = true,\n\
      \t[\"tt\"] = true,\n\t[\"tr\"] = true,\n\t[\"zza\"] = true,\n}\n\nfunction Language:makeSortKey(name, sc)\n\tif has_dotted_undotted_i[self:getCode()] then\n\t\tname = name:gsub(\"I\", \"ı\")\n\tend\n\t\n\tname = mw.ustring.lower(name)\n\t\n\t-- Remove\
      \ initial hyphens and *\n\tlocal hyphens_regex = \"^[-־ـ*]+(.)\"\n\tname = mw.ustring.gsub(name, hyphens_regex, \"%1\")\n\t\n\t-- If there are language-specific rules to generate the key, use those\n\tif type(self._rawData.sort_key) == \"table\" then\n\
      \t\tname = do_entry_name_or_sort_key_replacements(name, self._rawData.sort_key)\n\telseif type(self._rawData.sort_key) == \"string\" then\n\t\tname = require(\"Module:\" .. self._rawData.sort_key).makeSortKey(name, self:getCode(), sc and sc:getCode())\n\
      \tend\n\t\n\t-- Remove parentheses, as long as they are either preceded or followed by something\n\tname = mw.ustring.gsub(name, \"(.)[()]+\", \"%1\")\n\tname = mw.ustring.gsub(name, \"[()]+(.)\", \"%1\")\n\t\n\tif has_dotted_undotted_i[self:getCode()]\
      \ then\n\t\tname = name:gsub(\"i\", \"İ\")\n\tend\n\t\n\treturn mw.ustring.upper(name)\nend\n\nfunction Language:overrideManualTranslit()\n\tif self._rawData.override_translit then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\n\nfunction Language:transliterate(text,\
      \ sc, module_override)\n\tif not ((module_override or self._rawData.translit_module) and text) then\n\t\treturn nil\n\tend\n\t\n\tif module_override then\n\t\trequire(\"Module:debug\").track(\"module_override\")\n\tend\n\t\n\treturn require(\"Module:\"\
      \ .. (module_override or self._rawData.translit_module)).tr(text, self:getCode(), sc and sc:getCode() or nil)\nend\n\nfunction Language:hasTranslit()\n\treturn self._rawData.translit_module and true or false\nend\n\n\nfunction Language:link_tr()\n\treturn\
      \ self._rawData.link_tr and true or false\nend\n\n\nfunction Language:toJSON()\n\tlocal entryNamePatterns = nil\n\tlocal entryNameRemoveDiacritics = nil\n\t\n\tif self._rawData.entry_name then\n\t\tentryNameRemoveDiacritics = self._rawData.entry_name.remove_diacritics\n\
      \t\tif self._rawData.entry_name.from then\n\t\t\tentryNamePatterns = {}\n\t\t\tfor i, from in ipairs(self._rawData.entry_name.from) do\n\t\t\t\tlocal to = self._rawData.entry_name.to[i] or \"\"\n\t\t\t\ttable.insert(entryNamePatterns, { from = from, to\
      \ = to })\n\t\t\tend\n\t\tend\n\tend\n\t\n\tlocal ret = {\n\t\tancestors = self._rawData.ancestors,\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\tentryNamePatterns = entryNamePatterns,\n\
      \t\tfamily = self._rawData[3] or self._rawData.family,\n\t\totherNames = self:getOtherNames(),\n\t\tscripts = self._rawData.scripts,\n\t\ttype = self:getType(),\n\t\twikimediaLanguages = self._rawData.wikimedia_codes,\n\t\twikidataItem = self:getWikidataItem(),\n\
      \t}\n\t\n\treturn require(\"Module:JSON\").toJSON(ret)\nend\n\n\n-- Do NOT use this method!\n-- All uses should be pre-approved on the talk page!\nfunction Language:getRawData()\n\treturn self._rawData\nend\n\nLanguage.__index = Language\n\n\nfunction\
      \ export.getDataModuleName(code)\n\tif code:find(\"^%l%l$\") then\n\t\treturn \"languages/data2\"\n\telseif code:find(\"^%l%l%l$\") then\n\t\tlocal prefix = code:sub(1, 1)\n\t\treturn \"languages/data3/\" .. prefix\n\telseif code:find(\"^[%l-]+$\") then\n\
      \t\treturn \"languages/datax\"\n\telse\n\t\treturn nil\n\tend\nend\n\n\nlocal function getRawLanguageData(code)\n\tlocal modulename = export.getDataModuleName(code)\n\treturn modulename and mw.loadData(\"Module:\" .. modulename)[code] or nil\nend\n\n\n\
      function export.makeObject(code, data)\n\tif data and data.deprecated then\n\t\trequire(\"Module:debug\").track {\n\t\t\t\"languages/deprecated\",\n\t\t\t\"languages/deprecated/\" .. code\n\t\t}\n\tend\n\t\n\treturn data and setmetatable({ _rawData = data,\
      \ _code = code }, Language) or nil\nend\n\n\nfunction export.getByCode(code)\n\tif type(code) ~= \"string\" then\n\t\terror(\"The function getByCode expects a string as its first argument, but received \" .. (code == nil and \"nil\" or \"a \" .. type(code))\
      \ .. \".\")\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.getByName(name)\n\tlocal byName = mw.loadData(\"Module:languages/by name\")\n\tlocal code = byName.all and byName.all[name] or byName[name]\n\t\
      \n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.getByCanonicalName(name)\n\tlocal byName = mw.loadData(\"Module:languages/canonical names\")\n\tlocal code = byName and\
      \ byName[name]\n\t\n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, getRawLanguageData(code))\nend\n\n\nfunction export.iterateAll()\n\tmw.incrementExpensiveFunctionCount()\n\tlocal m_data = mw.loadData(\"Module:languages/alldata\"\
      )\n\tlocal func, t, var = pairs(m_data)\n\t\n\treturn function()\n\t\tlocal code, data = func(t, var)\n\t\treturn export.makeObject(code, data)\n\tend\nend\n\n--[[\tIf language is an etymology language, iterates through parent languages\n\t\tuntil it finds\
      \ a non-etymology language. ]]\nfunction export.getNonEtymological(lang)\n\twhile lang:getType() == \"etymology language\" do\n\t\tlocal parentCode = lang:getParentCode()\n\t\tlocal parent = export.getByCode(parentCode)\n\t\t\tor require(\"Module:etymology\
      \ languages\").getByCode(parentCode)\n\t\t\tor require(\"Module:families\").getByCode(parentCode)\n\t\t\n\t\tlang = parent\n--\t\tmw.log(terminfo.lang:getCode() .. \" \" .. terminfo.lang:getType())\n\tend\n\t\n\treturn lang\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:27.592Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata2&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55607 t=1555362447420682
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 606605746, 568920004, 678132949
    body: !!binary |-
      
- recorded: 2015-09-17T18:47:41.065Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aa&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:41 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1068 miss (0), cp3004 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 1292565518, 1450512294, 2666527624
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="55584" pageid="55584" ns="10" title="Template:a"><revisions><rev user="Kc kennylau" timestamp="2015-06-19T02:32:54Z" comment="Use module" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:a|show}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2015-09-17T18:47:41.252Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aa&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:41 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1065 miss (0), cp3005 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 19367134, 863978339, 2666528417
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4830341\" pageid=\"4830341\" ns=\"828\" title=\"Module:a\"><revisions><rev user=\"Kc kennylau\" timestamp=\"2015-06-21T07:11:15Z\" comment=\"Protected &quot;[[Module:a]]&quot;:\
      \ Highly visible template/module ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nfunction export.show(frame)\n\
      \tdata = require(&quot;Module:a/data&quot;)\n\tlocal args = frame:getParent().args\n\tif not args[1] or args[1] == &quot;&quot; then\n\t\tif mw.title.getCurrentTitle().nsText == &quot;Template&quot; then\n\t\t\treturn '&lt;span class=&quot;ib-brac&quot;&gt;&lt;span\
      \ class=&quot;qualifier-brac&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-content&quot;&gt;&lt;span class=&quot;qualifier-content&quot;&gt;{{{1}}}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-brac&quot;&gt;&lt;span class=&quot;qualifier-brac&quot;&gt;)&lt;/span&gt;&lt;/span&gt;'\n\
      \t\telse\n\t\t\terror(&quot;No accents specified.&quot;, 2)\n\t\t\treturn\n\t\tend\n\tend\n\t\n\tlocal accents = {}\n\t\n\tfor i,j in ipairs(args) do\n\t\tif j then \n\t\t\tlocal accent = mw.text.trim(j)\n\t\t\tif accent == &quot;&quot; then\n\t\t\t\t\
      --ignore\n\t\t\telseif data[accent] then\n\t\t\t\tif data[accent].link then\n\t\t\t\t\ttable.insert(accents, &quot;[[w:&quot; .. data[accent].link .. &quot;|&quot; .. (data[accent].display or data[accent].link) .. &quot;]]&quot;)\n\t\t\t\telseif data[accent].display\
      \ then\n\t\t\t\t\ttable.insert(accents, data[accent].display)\n\t\t\t\tend\n\t\t\telse\n\t\t\t\ttable.insert(accents, accent)\n\t\t\tend\n\t\tend\n\tend\n\t\n\tlocal output = table.concat(accents, &quot;, &quot;)\n\tif output == &quot;&quot; then\n\t\t\
      error(&quot;No accents specified.&quot;, 2)\n\t\treturn\n\telse\n\t\treturn\n\t\t\t'&lt;span class=&quot;ib-brac&quot;&gt;&lt;span class=&quot;qualifier-brac&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-content&quot;&gt;&lt;span class=&quot;qualifier-content&quot;&gt;'\
      \ ..\n\t\t\toutput .. '&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ib-brac&quot;&gt;&lt;span class=&quot;qualifier-brac&quot;&gt;)&lt;/span&gt;&lt;/span&gt;'\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-09-17T18:47:41.448Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aa%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:41 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1068 miss (0), cp3008 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 1292565996, 370286028, 2666529203
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4830339\" pageid=\"4830339\" ns=\"828\" title=\"Module:a/data\"><revisions><rev user=\"Wikitiki89\" timestamp=\"2015-09-08T17:01:33Z\" comment=\"\" contentformat=\"text/plain\"\
      \ contentmodel=\"Scribunto\" xml:space=\"preserve\">local m = {}\n\n-- A\n\nm[&quot;AAVE&quot;] = {\n\tlink = &quot;African American Vernacular English&quot;,\n\tdisplay = &quot;AAVE&quot;\n}\n\nm[&quot;æ-tensing&quot;] = {\n\tlink = &quot;æ-tensing&quot;\n\
      }\nm[&quot;ae-tensing&quot;] = m[&quot;æ-tensing&quot;]\n\nm[&quot;Anglicised&quot;] = {\n\tlink = &quot;Anglicisation#Anglicisation_of_non-English-language_vocabulary_and_names&quot;,\n\tdisplay = &quot;Anglicised&quot;\n}\nm[&quot;Anglicized&quot;] =\
      \ m[&quot;Anglicised&quot;]\n\nm[&quot;ar-Cairene&quot;] = {\n\tlink = &quot;Egyptian Arabic&quot;,\n\tdisplay = &quot;Cairene&quot;\n}\nm[&quot;Cairene&quot;] = m[&quot;ar-Cairene&quot;]\n\nm[&quot;Arvanite&quot;] = {\n\tlink = &quot;Arvanitika&quot;,\n\
      \tdisplay = &quot;Arvanite&quot;\n}\n\nm[&quot;Ashkenazi Hebrew&quot;] = {\n\tlink = &quot;Ashkenazi Hebrew&quot;,\n\tdisplay = &quot;Ashkenazi Hebrew&quot;\n}\nm[&quot;Ashkenazi&quot;] = m[&quot;Ashkenazi Hebrew&quot;]\n\nm[&quot;Australia&quot;] = {\n\
      \tlink = &quot;Australian English phonology&quot;,\n\tdisplay = &quot;Australia&quot;\n}\nm[&quot;AU&quot;] = m[&quot;Australia&quot;]\nm[&quot;Aus&quot;] = m[&quot;Australia&quot;]\nm[&quot;AusE&quot;] = m[&quot;Australia&quot;]\n\n-- B\n\nm[&quot;BE-nl&quot;]\
      \ = {\n\tlink = &quot;Belgian Dutch&quot;,\n\tdisplay = &quot;Belgium&quot;\n}\nm[&quot;BE&quot;] = m[&quot;BE-nl&quot;]\n\nm[&quot;Beijing&quot;] = {\n\tlink = &quot;Beijing dialect&quot;,\n\tdisplay = &quot;Beijing&quot;\n}\n\nm[&quot;Boston&quot;] =\
      \ {\n\tlink = &quot;Boston English&quot;,\n\tdisplay = &quot;Boston&quot;\n}\nm[&quot;Bos&quot;] = m[&quot;Boston&quot;]\n\nm[&quot;Brazil&quot;] = {\n\tlink = &quot;Brazilian Portuguese&quot;,\n\tdisplay = &quot;Brazil&quot;\n}\nm[&quot;BP&quot;] = m[&quot;Brazil&quot;]\n\
      m[&quot;BR&quot;] = m[&quot;Brazil&quot;]\nm[&quot;Brazilian Portuguese&quot;] = m[&quot;Brazil&quot;]\n\n-- C\n\nm[&quot;Canada&quot;] = {\n\tlink = &quot;Canadian English&quot;,\n\tdisplay = &quot;Canada&quot;\n}\nm[&quot;CA&quot;] = m[&quot;Canada&quot;]\n\
      m[&quot;Canadian&quot;] = m[&quot;Canada&quot;]\n\nm[&quot;Canadian Shift&quot;] = {\n\tlink = &quot;Canadian Shift&quot;,\n\tdisplay = &quot;Canadian Vowel Shift&quot;\n}\nm[&quot;Canadian shift&quot;] = m[&quot;Canadian Shift&quot;]\nm[&quot;Canadian\
      \ Vowel Shift&quot;] = m[&quot;Canadian Shift&quot;]\nm[&quot;Canadian vowel shift&quot;] = m[&quot;Canadian Shift&quot;]\n\nm[&quot;Carioca&quot;] = {\n\tlink = &quot;Carioca#Carioca Dialect&quot;,\n\tdisplay = &quot;Carioca&quot;\n}\nm[&quot;RJ&quot;]\
      \ = m[&quot;Carioca&quot;]\n\nm[&quot;Castilian&quot;] = {\n\tlink = &quot;Castilian Spanish&quot;,\n\tdisplay = &quot;Castilian&quot;\n}\nm[&quot;Spain&quot;] = m[&quot;Castilian&quot;]\n\nm[&quot;ceceo&quot;] = {\n\tlink = &quot;Phonological history\
      \ of Spanish coronal fricatives#Ceceo&quot;,\n\tdisplay = &quot;''ceceo'' merger&quot;\n}\n\nm[&quot;central Germany&quot;] = {\n\tdisplay = &quot;central Germany&quot;\n}\nm[&quot;central German&quot;] = m[&quot;central Germany&quot;]\nm[&quot;Central\
      \ German&quot;] = m[&quot;central Germany&quot;]\nm[&quot;Central Germany&quot;] = m[&quot;central Germany&quot;]\n\nm[&quot;Central Scotland&quot;] = {\n\tlink = &quot;Central Scots&quot;,\n\tdisplay = &quot;Central Scotland&quot;\n}\n\nm[&quot;ceseo&quot;]\
      \ = {\n\tlink = &quot;Phonological history of Spanish coronal fricatives#Ceseo_or_seceo&quot;,\n\tdisplay = &quot;''ceseo''-''seceo'' mixing&quot;\n}\nm[&quot;seceo&quot;] = m[&quot;ceseo&quot;]\n\nm[&quot;Classical&quot;] = {\n\tlink = &quot;Classical\
      \ Latin&quot;,\n\tdisplay = &quot;Classical&quot;\n}\n\nm[&quot;Connacht&quot;] = {\n\tlink = &quot;Connacht Irish&quot;,\n\tdisplay = &quot;Connacht&quot;\n}\n\nm[&quot;cot-caught&quot;] = {\n\tlink = &quot;Phonological history of English low back vowels#Cot–\
      caught merger&quot;,\n\tdisplay = &quot;''cot''–''caught'' merger&quot;\n}\nm[&quot;caught-cot&quot;] = m[&quot;cot-caught&quot;]\n\nm[&quot;cy-N&quot;] = {\n\tlink = &quot;Welsh language#Dialects&quot;,\n\tdisplay = &quot;North Wales&quot;\n}\nm[&quot;cy-g&quot;]\
      \ = m[&quot;cy-N&quot;]\n\nm[&quot;cy-S&quot;] = {\n\tlink = &quot;Welsh language#Dialects&quot;,\n\tdisplay = &quot;South Wales&quot;\n}\nm[&quot;cy-h&quot;] = m[&quot;cy-S&quot;]\n\n-- D\n\nm[&quot;Dari&quot;] = {\n\tlink = &quot;Dari Persian&quot;,\n\
      \tdisplay = &quot;Dari&quot;\n}\n\nm[&quot;distinción&quot;] = {\n\tlink = &quot;Phonological_history_of_Spanish_coronal_fricatives#Distinction&quot;,\n\tdisplay = &quot;''z''-''s'' distinction&quot;\n}\n\n-- E\n\nm[&quot;Ecclesiastical&quot;] = {\n\t\
      link = &quot;Ecclesiastical Latin&quot;,\n\tdisplay = &quot;Ecclesiastical&quot;\n}\n\nm[&quot;Egyptological&quot;] = {\n\tlink = &quot;Egyptian language#Egyptological pronunciation&quot;,\n\tdisplay = &quot;Egyptological&quot;\n}\n\nm[&quot;Estuary English&quot;]\
      \ = {\n\tlink = &quot;Estuary English&quot;\n}\n\n-- F\n\nm[&quot;father-bother&quot;] = {\n\tlink = &quot;Phonological history of English low back vowels#Father–bother merger&quot;,\n\tdisplay = &quot;''father''-''bother'' merger&quot;\n}\n\nm[&quot;FS&quot;]\
      \ = {\n\tlink = &quot;Standard French&quot;,\n\tdisplay = &quot;FS&quot;\n}\n\nm[&quot;FV&quot;] = {\n\tlink = &quot;French Flemish&quot;,\n\tdisplay = &quot;French Flanders&quot;\n}\n\n-- G\n\nm[&quot;GenAm&quot;] = {\n\tlink = &quot;General American&quot;\n\
      }\nm[&quot;GA&quot;] = m[&quot;GenAm&quot;]\n\nm[&quot;Geordie&quot;] = {\n\tlink = &quot;Geordie&quot;\n}\n\nm[&quot;Gheg&quot;] = {\n\tlink = &quot;Gheg Albanian&quot;,\n\tdisplay = &quot;Gheg&quot;\n}\n\nm[&quot;Givi&quot;] = {\n\tlink = &quot;Giv,\
      \ South Khorasan&quot;,\n\tdisplay = &quot;Givi&quot;\n}\n\n-- H\n\nm[&quot;hbo&quot;] = {\n\tlink = &quot;Biblical_Hebrew#Phonology&quot;,\n\tdisplay = &quot;Biblical Hebrew&quot;\n}\n\nm[&quot;Biblical Hebrew&quot;] = m[&quot;hbo&quot;]\n\nm[&quot;horse-hoarse&quot;]\
      \ = {\n    link = &quot;English-language_vowel_changes_before_historic_/r/#Horse.E2.80.93hoarse_merger&quot;,\n    display = &quot;without the horse–hoarse merger&quot;\n}\n\nm[&quot;hy-E&quot;] = {\n\tlink = &quot;Eastern Armenian language&quot;,\n\t\
      display = &quot;Eastern Armenian&quot;\n}\n\nm[&quot;hy-IR&quot;] = {\n\tlink = &quot;Armenian Iranians#Culture_and_language&quot;,\n\tdisplay = &quot;Eastern Armenian - Iran&quot;\n}\n\nm[&quot;hy-W&quot;] = {\n\tlink = &quot;Western Armenian language&quot;,\n\
      \tdisplay = &quot;Western Armenian&quot;\n}\n\nm[&quot;hy-Y&quot;] = {\n\tlink = &quot;Yerevan&quot;,\n\tdisplay = &quot;Eastern Armenian - Yerevan&quot;\n}\n\n-- I\n\nm[&quot;IL&quot;] = {\n\tlink = &quot;Modern Hebrew phonology&quot;,\n\tdisplay = &quot;Modern\
      \ Israeli Hebrew&quot;\n}\nm[&quot;Israeli Hebrew&quot;] = m[&quot;IL&quot;]\nm[&quot;Modern Hebrew&quot;] = m[&quot;IL&quot;]\nm[&quot;Modern Israeli&quot;] = m[&quot;IL&quot;]\nm[&quot;Modern Israeli Hebrew&quot;] = m[&quot;IL&quot;]\nm[&quot;Modern/Israeli\
      \ Hebrew&quot;] = m[&quot;IL&quot;]\n\nm[&quot;InE&quot;] = {\n\tlink = &quot;Indian English&quot;,\n\tdisplay = &quot;InE&quot;\n}\n\nm[&quot;IR&quot;] = {\n\tlink = &quot;Western Persian&quot;,\n\tdisplay = &quot;Iranian Persian&quot;\n}\n\nm[&quot;Ireland&quot;]\
      \ = {\n\tlink = &quot;Hiberno-English&quot;,\n\tdisplay = &quot;Ireland&quot;\n}\nm[&quot;HE&quot;] = m[&quot;Ireland&quot;]\nm[&quot;IE&quot;] = m[&quot;Ireland&quot;]\n\nm[&quot;Italian Hebrew&quot;] = {\n\tlink = &quot;Italian Hebrew&quot;,\n\tdisplay\
      \ = &quot;Italian Hebrew&quot;\n}\n\n-- J\n\nm[&quot;Johor-Selangor&quot;] = {\n\tlink = &quot;Malayan languages&quot;,\n\tdisplay = &quot;Johor-Selangor&quot;\n}\n\n-- K\n\nm[&quot;Kabul, Peshawar&quot;] = {\n\tlink = &quot;Pashto dialects&quot;,\n\t\
      display = &quot;Kabul, Peshawar&quot;\n}\n\nm[&quot;Kandahar&quot;] = {\n\tlink = &quot;Kandahari Pashto&quot;,\n\tdisplay = &quot;Kandahar&quot;\n}\nm[&quot;ps-Kandahar&quot;] = m[&quot;Kandahar&quot;]\n\n-- L\n\nm[&quot;Latinate&quot;] = {\n\tlink =\
      \ &quot;Latin#Phonology&quot;,\n\tdisplay = &quot;Latinate&quot;\n}\n\nm[&quot;lleísmo&quot;] = {\n\tlink = &quot;Yeísmo&quot;,\n\tdisplay = &quot;''ll''-''y'' distinction&quot;\n}\n\n-- M\n\nm[&quot;Mary-marry-merry&quot;] = {\n\tlink = &quot;English-language\
      \ vowel changes before historic /r/#Mary.E2.80.93marry.E2.80.93merry_merger&quot;,\n\tdisplay = &quot;''Mary''-''marry''-''merry'' merger&quot;\n}\nm[&quot;Mmmm&quot;] = m[&quot;Mary-marry-merry&quot;]\n\nm[&quot;Midwestern US&quot;] = {\n\tlink = &quot;Midwestern\
      \ United States#Linguistic_characteristics&quot;,\n\tdisplay = &quot;Midwestern US&quot;\n}\nm[&quot;Midwest US&quot;] = m[&quot;Midwestern US&quot;]\nm[&quot;Midwest US English&quot;] = m[&quot;Midwestern US&quot;]\nm[&quot;Midwestern US English&quot;]\
      \ = m[&quot;Midwestern US&quot;]\n\nm[&quot;Mizrahi Hebrew&quot;] = {\n\tlink = &quot;Mizrahi Hebrew&quot;,\n\tdisplay = &quot;Mizrahi Hebrew&quot;\n}\nm[&quot;Mizrahi&quot;] = m[&quot;Mizrahi Hebrew&quot;]\nm[&quot;Mizrakhi&quot;] = m[&quot;Mizrahi Hebrew&quot;]\n\
      m[&quot;Mizrachi&quot;] = m[&quot;Mizrahi Hebrew&quot;]\nm[&quot;Mizrakhi Hebrew&quot;] = m[&quot;Mizrahi Hebrew&quot;]\nm[&quot;Mizrachi Hebrew&quot;] = m[&quot;Mizrahi Hebrew&quot;]\n\nm[&quot;Munster&quot;] = {\n\tlink = &quot;Munster Irish&quot;,\n\
      \tdisplay = &quot;Munster&quot;\n}\n\n-- N\n\nm[&quot;Netherlands&quot;] = {\n\tlink = &quot;Dutch phonology&quot;,\n\tdisplay = &quot;Netherlands&quot;\n}\nm[&quot;NL&quot;] = m[&quot;Netherlands&quot;]\n\nm[&quot;New Latin&quot;] = {\n\tlink = &quot;New\
      \ Latin&quot;\n}\n\nm[&quot;New York&quot;] = {\n\tlink = &quot;New York dialect#Linguistic_features&quot;,\n\tdisplay = &quot;NYC&quot;\n}\nm[&quot;NY&quot;] = m[&quot;New York&quot;]\nm[&quot;NYC&quot;] = m[&quot;New York&quot;]\n\nm[&quot;New Zealand&quot;]\
      \ = {\n\tlink = &quot;New Zealand English&quot;,\n\tdisplay = &quot;New Zealand&quot;\n}\nm[&quot;NZ&quot;] = m[&quot;New Zealand&quot;]\n\nm[&quot;non-Mary-marry-merry&quot;] = {\n\tlink = &quot;English-language vowel changes before historic /r/#Mary.E2.80.93marry.E2.80.93merry_merger&quot;,\n\
      \tdisplay = &quot;''Mary''-''marry''-''merry'' distinction&quot;\n}\nm[&quot;nMmmm&quot;] = m[&quot;non-Mary-marry-merry&quot;]\n\nm[&quot;non-rhotic&quot;] = {\n\tlink = &quot;Rhoticity in English&quot;,\n\tdisplay = &quot;non-rhotic&quot;\n}\nm[&quot;nonrhotic&quot;]\
      \ = m[&quot;non-rhotic&quot;]\n\nm[&quot;northern and central Germany&quot;] = {\n\tdisplay = &quot;northern Germany, central Germany&quot;\n}\nm[&quot;north and central German&quot;] = m[&quot;northern and central Germany&quot;]\nm[&quot;North and Central\
      \ German&quot;] = m[&quot;northern and central Germany&quot;]\nm[&quot;north and central Germany&quot;] = m[&quot;northern and central Germany&quot;]\nm[&quot;North and Central Germany&quot;] = m[&quot;northern and central Germany&quot;]\nm[&quot;northern\
      \ and central German&quot;] = m[&quot;northern and central Germany&quot;]\nm[&quot;Northern and Central German&quot;] = m[&quot;northern and central Germany&quot;]\nm[&quot;Northern and Central Germany&quot;] = m[&quot;northern and central Germany&quot;]\n\
      \nm[&quot;Northern England&quot;] = {\n\tlink = &quot;Northern England English&quot;,\n\tdisplay = &quot;Northern England&quot;\n}\nm[&quot;North England&quot;] = m[&quot;Northern England&quot;]\n\nm[&quot;northern Germany&quot;] = {\n\tdisplay = &quot;northern\
      \ Germany&quot;\n}\nm[&quot;north German&quot;] = m[&quot;northern Germany&quot;]\nm[&quot;North German&quot;] = m[&quot;northern Germany&quot;]\nm[&quot;north Germany&quot;] = m[&quot;northern Germany&quot;]\nm[&quot;North Germany&quot;] = m[&quot;northern\
      \ Germany&quot;]\nm[&quot;northern German&quot;] = m[&quot;northern Germany&quot;]\nm[&quot;Northern German&quot;] = m[&quot;northern Germany&quot;]\nm[&quot;Northern Germany&quot;] = m[&quot;northern Germany&quot;]\n\nm[&quot;Northern Scotland&quot;]\
      \ = {\n\tlink = &quot;Northern Scots&quot;,\n\tdisplay = &quot;Northern Scotland&quot;\n}\n\n-- O\n\n-- P\n\nm[&quot;Palestinian Hebrew&quot;] = {\n\tlink = &quot;Palestinian vocalization&quot;,\n\tdisplay = &quot;Palestinian Hebrew&quot;\n}\n\nm[&quot;pin-pen&quot;]\
      \ = {\n\tlink = &quot;Phonological history of English high front vowels#Pin–pen merger&quot;,\n\tdisplay = &quot;''pin''–''pen'' merger&quot;\n}\nm[&quot;pen-pin&quot;] = m[&quot;pin-pen&quot;]\n\nm[&quot;Philippine&quot;] = {\n\tlink = &quot;Philippine\
      \ English&quot;,\n\tdisplay = &quot;Philippine&quot;\n}\nm[&quot;Philippines&quot;] = m[&quot;Philippine&quot;]\n\nm[&quot;Portugal&quot;] = {\n\tlink = &quot;European Portuguese&quot;,\n\tdisplay = &quot;Portugal&quot;\n}\nm[&quot;EP&quot;] = m[&quot;Portugal&quot;]\n\
      m[&quot;PT&quot;] = m[&quot;Portugal&quot;]\n\nm[&quot;ps-Kabul&quot;] = {\n\tlink = &quot;Pashto dialects&quot;,\n\tdisplay = &quot;Kabuli&quot;\n}\n\n-- Q\n\nm[&quot;Quanzhou&quot;] = {\n\tlink = &quot;Quanzhou&quot;\n}\n\nm[&quot;Quetta&quot;] = {\n\
      \tlink = &quot;Pashto dialects&quot;,\n\tdisplay = &quot;Quetta&quot;\n}\n\n-- R\n\nm[&quot;rhotic&quot;] = {\n\tlink = &quot;Rhotic and non-rhotic accents&quot;,\n\tdisplay = &quot;rhotic&quot;\n}\n\nm[&quot;Riau-Lingga&quot;] = {\n\tlink = &quot;Riau-Lingga\
      \ Sultanate&quot;,\n\tdisplay = &quot;Riau-Lingga&quot;\n}\n\nm[&quot;RP&quot;] = {\n\tlink = &quot;Received Pronunciation&quot;\n}\n\n-- S\n\nm[&quot;São Paulo&quot;] = {\n\tlink = &quot;Brazilian Portuguese&quot;,\n\tdisplay = &quot;São Paulo&quot;\n\
      }\n\nm[&quot;Scotland&quot;] = {\n\tlink = &quot;Scottish English&quot;,\n\tdisplay = &quot;Scotland&quot;\n}\n\nm[&quot;Sephardi Hebrew&quot;] = {\n\tlink = &quot;Sephardi Hebrew&quot;,\n\tdisplay = &quot;Sephardi Hebrew&quot;\n}\nm[&quot;Sephardi&quot;]\
      \ = m[&quot;Sephardi Hebrew&quot;]\n\nm[&quot;seseo&quot;] = {\n\tlink = &quot;Phonological history of Spanish coronal fricatives#Seseo&quot;,\n\tdisplay = &quot;''seseo'' merger&quot;\n}\n\nm[&quot;Sistani&quot;] = {\n\tlink = &quot;Sistani dialect&quot;,\n\
      \tdisplay = &quot;Sistani&quot;\n}\n\nm[&quot;South Africa&quot;] = {\n\tlink = &quot;South African English&quot;,\n\tdisplay = &quot;South Africa&quot;\n}\nm[&quot;SAE&quot;] = m[&quot;South Africa&quot;]\n\nm[&quot;Southern American English&quot;] =\
      \ {\n\tlink = &quot;Southern American English&quot;\n}\nm[&quot;Southern US&quot;] = m[&quot;Southern American English&quot;]\nm[&quot;Southern US English&quot;] = m[&quot;Southern American English&quot;]\nm[&quot;Southern U.S. English&quot;] = m[&quot;Southern\
      \ American English&quot;]\n\nm[&quot;South Brazil&quot;] = {\n\tlink = &quot;Brazilian Portuguese&quot;,\n\tdisplay = &quot;South Brazil&quot;\n}\n\nm[&quot;southern Germany&quot;] = {\n\tdisplay = &quot;southern Germany&quot;\n}\nm[&quot;south German&quot;]\
      \ = m[&quot;southern Germany&quot;]\nm[&quot;South German&quot;] = m[&quot;southern Germany&quot;]\nm[&quot;south Germany&quot;] = m[&quot;southern Germany&quot;]\nm[&quot;South Germany&quot;] = m[&quot;southern Germany&quot;]\nm[&quot;southern German&quot;]\
      \ = m[&quot;southern Germany&quot;]\nm[&quot;Southern German&quot;] = m[&quot;southern Germany&quot;]\nm[&quot;Southern Germany&quot;] = m[&quot;southern Germany&quot;]\n\nm[&quot;Southern Scotland&quot;] = {\n\tlink = &quot;Southern Scots&quot;,\n\tdisplay\
      \ = &quot;Southern Scotland&quot;\n}\n\nm[&quot;St. Louis&quot;] = {\n\tlink = &quot;North American regional phonology#St._Louis_and_vicinity&quot;,\n\tdisplay = &quot;St. Louis (Missouri)&quot;\n}\nm[&quot;STL&quot;] = m[&quot;St. Louis&quot;]\n\nm[&quot;standard&quot;]\
      \ = {\n\tdisplay = &quot;standard&quot;\n}\nm[&quot;Standard&quot;] = m[&quot;standard&quot;]\n\nm[&quot;Swedish&quot;] = {\n\tlink = &quot;Swedish pronunciation&quot;,\n\tdisplay = &quot;Swedish&quot;\n}\n\nm[&quot;Syrian Hebrew&quot;] = {\n\tlink = &quot;Syrian_Jews#Pronunciation_of_Hebrew&quot;,\n\
      \tdisplay = &quot;Syrian Hebrew&quot;\n}\n\n-- T\n\nm[&quot;Tajik&quot;] = {\n\tlink = &quot;Tajik language&quot;,\n\tdisplay = &quot;Tajik&quot;\n}\nm[&quot;Tajiki&quot;] = m[&quot;Tajik&quot;]\n\nm[&quot;Tehrani&quot;] = {\n\tlink = &quot;Tehrani accent&quot;,\n\
      \tdisplay = &quot;Tehrani&quot;\n}\n\nm[&quot;Tiberian Hebrew&quot;] = {\n\tlink = &quot;Tiberian Hebrew&quot;,\n\tdisplay = &quot;Tiberian Hebrew&quot;\n}\nm[&quot;Tiberian&quot;] = m[&quot;Tiberian Hebrew&quot;]\n\nm[&quot;Tosk&quot;] = {\n\tlink = &quot;Tosk\
      \ Albanian&quot;,\n\tdisplay = &quot;Tosk&quot;\n}\n\n-- U\n\nm[&quot;UK&quot;] = {\n\tlink = &quot;British English&quot;,\n\tdisplay = &quot;UK&quot;\n}\nm[&quot;British&quot;] = m[&quot;UK&quot;]\n\nm[&quot;Ulster&quot;] = {\n\tlink = &quot;Ulster Irish&quot;,\n\
      \tdisplay = &quot;Ulster&quot;\n}\n\nm[&quot;US&quot;] = {\n\tlink = &quot;American English&quot;,\n\tdisplay = &quot;US&quot;\n}\n\n-- V\n\nm[&quot;Valencia&quot;] = {\n\tlink = &quot;Valencian&quot;\n}\nm[&quot;Valencian&quot;] = m[&quot;Valencia&quot;]\n\
      \n-- W\n\nm[&quot;Wales&quot;] = {\n\tlink = &quot;Welsh English&quot;,\n\tdisplay = &quot;Wales&quot;\n}\nm[&quot;Welsh&quot;] = m[&quot;Wales&quot;]\n\nm[&quot;Wardak&quot;] = {\n\tlink = &quot;Pashto dialects&quot;,\n\tdisplay = &quot;Wardak&quot;\n\
      }\n\nm[&quot;Wazirwola&quot;] = {\n\tlink = &quot;Wazirwola dialect&quot;,\n\tdisplay = &quot;Wazirwola&quot;\n}\n\n-- X\n\nm[&quot;Xiamen&quot;] = {\n\tlink = &quot;Xiamen&quot;\n}\n\n-- Y\n\nm[&quot;yeísmo&quot;] = {\n\tlink = &quot;Yeísmo&quot;,\n\t\
      display = &quot;''ll''-''y'' neutralization&quot;\n}\n\nm[&quot;Yemenite Hebrew&quot;] = {\n\tlink = &quot;Yemenite Hebrew&quot;,\n\tdisplay = &quot;Yemenite Hebrew&quot;\n}\n\nm[&quot;YIVO&quot;] = {\n\tlink = &quot;YIVO&quot;\n}\n\n-- Z\n\nm[&quot;Zhangzhou&quot;]\
      \ = {\n\tlink = &quot;Zhangzhou&quot;\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:34.454Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AIPA&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=39683 t=1555362454370516
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:34 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 211880313, 820828364, 701862181
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="82468" pageid="82468" ns="10" title="Template:IPA"><revisions><rev user="Rua" timestamp="2019-03-31T20:37:23Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:IPA/templates|IPA}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:34.640Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46600 t=1555362454542420
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:34 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 608537251, 563915524, 703889801
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4463906\" pageid=\"4463906\" ns=\"828\" title=\"Module:IPA/templates\"><revisions><rev user=\"Rua\" timestamp=\"2019-03-31T20:38:27Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal m_IPA = require(\"Module:IPA\")\n\nlocal U = mw.ustring.char\nlocal syllabic = U(0x0329)\n\n-- Used for [[Template:IPA]].\nfunction\
      \ export.IPA(frame)\n\tlocal parent_args = frame.getParent and frame:getParent().args or frame\n\tlocal compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default =\
      \ \"\"},\n\t\t[1 + offset] = {list = true, allow_holes = true},\n\t\t[\"n\"] = {list = true, allow_holes = true},\n\t\t[\"qual\"] = {list = true, allow_holes = true},\n\t\t[\"nocount\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args\
      \ = require(\"Module:parameters\").process(parent_args, params)\n\tlocal langarg = args[compat and \"lang\" or 1]\n\tlocal lang = mw.title.getCurrentTitle().nsText == \"Template\" and \"en\" or langarg\n\tlang = require(\"Module:languages\").getByCode(lang)\n\
      \n\t-- [[Special:WhatLinksHere/Template:tracking/IPA/grc]]\n\tif lang and lang:getCode() == \"grc\" then\n\t\trequire(\"Module:debug\").track(\"IPA/grc\")\n\tend\n\t\n\tlocal items = {}\n\t\n\tfor i = 1, math.max(args[1 + offset].maxindex, args[\"n\"].maxindex)\
      \ do\n\t\tlocal pron = args[1 + offset][i]\n\t\tlocal note = args[\"n\"][i]\n\t\tlocal qual = args[\"qual\"][i]\n\t\t\n\t\tif lang then\n\t\t\trequire(\"Module:IPA/tracking\").run_tracking(pron, lang)\n\t\tend\n\t\t\n\t\tif pron or note or qual then\n\t\
      \t\ttable.insert(items, {pron = pron, note = note, qualifiers = {qual}})\n\t\tend\n\tend\n\t\n\treturn m_IPA.format_IPA_full(lang, items, nil, nil, args.sort, args.nocount)\nend\n\n-- Used for [[Template:IPAchar]].\nfunction export.IPAchar(frame)\n\tlocal\
      \ params = {\n\t\t[1] = {list = true, allow_holes = true},\n\t\t[\"n\"] = {list = true, allow_holes = true},\n\t\t[\"lang\"] = {}, -- This parameter is not used and does nothing, but is allowed for futureproofing.\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame.getParent and frame:getParent().args or frame, params)\n\t\n\tlocal items = {}\n\t\n\tfor i = 1, math.max(args[1].maxindex, args[\"n\"].maxindex) do\n\t\tlocal pron = args[1][i]\n\t\tlocal note = args[\"n\"][i]\n\t\t\n\t\tif pron or note\
      \ then\n\t\t\ttable.insert(items, {pron = pron, note = note})\n\t\tend\n\tend\n\t\n\t-- Format\n\treturn m_IPA.format_IPA_multiple(nil, items)\nend\n\nfunction export.XSAMPA(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t}\n\tlocal args\
      \ = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn m_IPA.XSAMPA_to_IPA(args[1] or \"[Eg'zA:mp5=]\")\nend\n\n-- Used by [[Template:X2IPA]]\nfunction export.X2IPAtemplate(frame)\n\tlocal parent_args = frame.getParent\
      \ and frame:getParent().args or frame\n\tlocal compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default = \"und\"},\n\t\t[1 + offset] = {list = true, allow_holes\
      \ = true},\n\t\t[\"n\"] = { list = true, allow_holes = true },\n\t\t[\"qual\"] = { list = true, allow_holes = true },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(parent_args, params)\n\t\n\tlocal m_XSAMPA = require(\"Module:IPA/X-SAMPA\"\
      )\n\t\n\tpronunciations, notes, qualifiers, lang = args[1 + offset], args[\"n\"], args[\"qual\"], args[compat and \"lang\" or 1]\n\t\n\tlocal output = {}\n\ttable.insert(output, \"{{IPA\")\n\t\n\ttable.insert(output, \"|\" .. lang)\n\n\tfor i = 1, math.max(pronunciations.maxindex,\
      \ notes.maxindex, qualifiers.maxindex) do\n\t\tif pronunciations[i] then\n\t\t\ttable.insert(output, \"|\"..m_XSAMPA.XSAMPA_to_IPA(pronunciations[i]))\n\t\tend\n\t\tif notes[i] then\n\t\t\ttable.insert(output, \"|n\"..i..\"=\"..notes[i])\n\t\tend\n\t\t\
      if qualifiers[i] then\n\t\t\ttable.insert(output, \"|qual\"..i..\"=\"..qualifiers[i])\n\t\tend\n\tend\n\t\n\ttable.insert(output, \"}}\")\n\n\treturn table.concat(output)\nend\n\n-- Used by [[Template:X2IPAchar]]\nfunction export.X2IPAchar(frame)\n\tlocal\
      \ params = {\n\t\t[1] = { list = true, allow_holes = true },\n\t\t[\"n\"] = { list = true, allow_holes = true },\n\t\t[\"lang\"] = { },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal m_XSAMPA\
      \ = require(\"Module:IPA/X-SAMPA\")\n\t\n\tpronunciations, notes, lang = args[1], args[\"n\"], args[\"lang\"]\n\t\n\tlocal output = {}\n\ttable.insert(output, \"{{IPAchar\")\n\t\n\tfor i = 1, math.max(pronunciations.maxindex, notes.maxindex) do\n\t\tif\
      \ pronunciations[i] then\n\t\t\ttable.insert(output, \"|\"..m_XSAMPA.XSAMPA_to_IPA(pronunciations[i]))\n\t\tend\n\t\tif notes[i] then\n\t\t\ttable.insert(output, \"|n\"..i..\"=\"..notes[i])\n\t\tend\n\tend\n\t\n\tif lang then\n\t\ttable.insert(output,\
      \ \"|lang=\"..lang)\n\tend\n\t\n\ttable.insert(output, \"}}\")\n\t\n\treturn table.concat(output)\nend\n\n-- Used by [[Template:x2rhymes]]\nfunction export.X2rhymes(frame)\n\tlocal parent_args = frame.getParent and frame:getParent().args or frame\n\tlocal\
      \ compat = parent_args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\n\tlocal params = {\n\t\t[compat and \"lang\" or 1] = {required = true, default = \"und\"},\n\t\t[1 + offset] = {required = true, list = true, allow_holes = true},\n\t}\n\t\n\tlocal\
      \ args = require(\"Module:parameters\").process(parent_args, params)\n\t\n\tlocal m_XSAMPA = require(\"Module:IPA/X-SAMPA\")\n\t\n\tpronunciations, lang = args[1 + offset], args[compat and \"lang\" or 1]\n\t\n\tlocal output =  {}\n\ttable.insert(output,\
      \ \"{{rhymes\")\n\t\n\ttable.insert(output, \"|\" .. lang)\n\n\tfor i = 1, pronunciations.maxindex do\n\t\tif pronunciations[i] then\n\t\t\ttable.insert(output, \"|\"..m_XSAMPA.XSAMPA_to_IPA(pronunciations[i]))\n\t\tend\n\tend\n\t\n\ttable.insert(output,\
      \ \"}}\")\n\t\n\treturn table.concat(output)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:34.819Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41688 t=1555362454719087
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:34 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1283.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 425595235, 238515812, 697184025
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3923940\" pageid=\"3923940\" ns=\"828\" title=\"Module:IPA\"><revisions><rev user=\"Suzukaze-c\" timestamp=\"2019-02-27T02:22:09Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"move leading space inside .previewonly.error\" xml:space=\"preserve\">local export = {}\n-- [[Module:IPA/data]]\n\nlocal m_data = mw.loadData('Module:IPA/data') -- [[Module:IPA/data]]\nlocal m_symbols =\
      \ mw.loadData('Module:IPA/data/symbols') -- [[Module:IPA/data/symbols]]\nlocal m_syllables -- [[Module:syllables]]; loaded below if needed\n\nlocal sub = mw.ustring.sub\nlocal find = mw.ustring.find\nlocal gsub = mw.ustring.gsub\nlocal match = mw.ustring.match\n\
      local gmatch = mw.ustring.gmatch\nlocal U = mw.ustring.char\n\nfunction export.format_IPA_full(lang, items, err, separator, sortKey, no_count)\n\tlocal IPA_key, key_link, err_text, prefix, IPAs, category\n\tlocal hasKey = m_data.langs_with_infopages\n\t\
      local namespace = mw.title.getCurrentTitle().nsText\n\t\n\tif err then\n\t\terr_text = '&lt;span class=\"error\"&gt;' .. err .. '&lt;/span&gt;'\n\telse\n\t\tif hasKey[lang:getCode()] then\n\t\t\tIPA_key = \"Appendix:\" .. lang:getCanonicalName() .. \"\
      \ pronunciation\"\n\t\telse\n\t\t\tIPA_key = \"wikipedia:\" .. lang:getCanonicalName() .. \" phonology\"\n\t\tend\n\t\t\n\t\tkey_link = \"[[\" .. IPA_key .. \"|key]]\"\n\tend\n\n\t\n\tlocal prefix = \"[[Wiktionary:International Phonetic Alphabet|IPA]]&lt;sup&gt;(\"\
      \ .. ( key_link or err_text ) .. \")&lt;/sup&gt;:&amp;#32;\"\n\t\n\tIPAs = export.format_IPA_multiple(lang, items, separator, no_count)\n\t\n\tif lang and (namespace == \"\" or namespace == \"Reconstruction\") then\n\t\tsortKey = sortKey or lang:makeSortKey(mw.title.getCurrentTitle().text)\n\
      \t\tsortKey = sortKey and (\"|\" .. sortKey) or \"\"\n\t\tcategory = \"[[Category:\" .. lang:getCanonicalName() .. \" terms with IPA pronunciation\" .. sortKey .. \"]]\"\n\telse\n\t\tcategory = \"\"\n\tend\n\n\treturn prefix .. IPAs .. category\nend\n\n\
      local function determine_repr(pron)\n\tlocal repr_mark = {}\n\tlocal repr, reconstructed\n\t\n\t-- remove initial asterisk before representation marks, used on some Reconstruction pages\n\tif find(pron, \"^%*\") then\n\t\treconstructed = true\n\t\tpron\
      \ = sub(pron, 2)\n\tend\n\t\n\tlocal representation_types = {\n\t\t['/'] = { right = '/', type = 'phonemic', },\n\t\t['['] = { right = ']', type = 'phonetic', },\n\t\t['⟨'] = { right = '⟩', type = 'orthographic', },\n\t\t['-'] = { type = 'rhyme' },\n\t\
      }\n\t\n\trepr_mark.i, repr_mark.f, repr_mark.left, repr_mark.right = find(pron, '^(.).-(.)$')\n\t\n\tlocal representation_type = representation_types[repr_mark.left]\n\t\n\tif representation_type then\n\t\tif representation_type.right then\n\t\t\tif repr_mark.right\
      \ == representation_type.right then\n\t\t\t\trepr = representation_type.type\n\t\t\tend\n\t\telse\n\t\t\trepr = representation_type.type\n\t\tend\n\telse\n\t\trepr = nil\n\tend\n\t\n\treturn repr, reconstructed\nend\n\nlocal function hasInvalidSeparators(transcription)\n\
      \tif find(transcription, \"%.[ˈˌ]\") then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\nfunction export.format_IPA_multiple(lang, items, separator, no_count)\n\tlocal notes = {}\n\tlocal categories = {}\n\tseparator = separator or ', '\n\t\n\
      \t-- Format\n\tif not items[1] then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\ttable.insert(items, {pron = \"/aɪ piː ˈeɪ/\"})\n\t\telse\n\t\t\ttable.insert(categories, \"[[Category:Pronunciation templates without a pronunciation]]\"\
      )\n\t\tend\n\tend\n\t\n\tlocal bits = {}\n\t\n\tfor _, item in ipairs(items) do\n\t\tlocal bit = export.format_IPA(lang, item.pron)\n\t\t\n\t\tif item.qualifiers and item.qualifiers[1] then\n\t\t\tbit = require(\"Module:qualifier\").format_qualifier(item.qualifiers)\
      \ .. \" \" .. bit\n\t\tend\n\t\t\n\t\tif item.note then\n\t\t\tbit = bit .. mw.getCurrentFrame():extensionTag(\"ref\", item.note)\n\t\tend\n\t\t\n\t\ttable.insert(bits, bit)\n\t\t\n\t\t--[=[\t[[Special:WhatLinksHere/Template:tracking/IPA/syntax-error]]\n\
      \t\t\t\tThe length or gemination symbol should not appear after a syllable break or stress symbol.\t]=]\n\t\t\n\t\tif find(item.pron, \"[ˈˌ%.][ːˑ]\") then\n\t\t\trequire(\"Module:debug\").track(\"IPA/syntax-error\")\n\t\tend\n\t\t\n\t\tif lang then\n\t\
      \t\t-- Add syllable count if the language's diphthongs are listed in [[Module:syllables]].\n\t\t\tif not no_count and mw.title.getCurrentTitle().namespace == 0 then\n\t\t\t\tm_syllables = m_syllables or require('Module:syllables')\n\t\t\t\tif m_syllables.hasDiphthongs(lang)\
      \ then\n\t\t\t\t\tif determine_repr(item.pron) == \"phonemic\" or lang:getCode() == \"ru\" then\n\t\t\t\t\t\tlocal syllable_count = m_syllables.getVowels(item.pron, lang)\n\t\t\t\t\t\tif syllable_count then\n\t\t\t\t\t\t\ttable.insert(categories, \"[[Category:\"\
      \ .. lang:getCanonicalName() .. \" \" .. syllable_count .. \"-syllable words]]\")\n\t\t\t\t\t\tend\t\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tif lang:getCode() == \"en\" then\n\t\t\t\tif hasInvalidSeparators(item.pron) then\n\t\t\t\t\ttable.insert(categories,\
      \ \"[[Category:IPA for English using .ˈ or .ˌ]]\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\n\treturn table.concat(bits, separator) .. table.concat(categories)\nend\n\n-- Takes an IPA pronunciation and formats it and adds cleanup categories.\nfunction\
      \ export.format_IPA(lang, pron, split_output)\n\tlocal err = {}\n\tlocal categories = {}\n\t\n\t-- Remove wikilinks, so that wikilink brackets are not misinterpreted as\n\t-- indicating phonemic transcription\n\tlocal str_gsub = string.gsub\n\tlocal without_links\
      \ = str_gsub(pron, '%[%[[^|%]]+|([^%]]+)%]%]', '%1')\n\twithout_links = str_gsub(without_links, '%[%[[^%]]+%]%]', '%1')\n\t\n\t-- Detect whether this is a phonemic or phonetic transcription\n\tlocal repr, reconstructed = determine_repr(without_links)\n\
      \t\n\tif reconstructed then\n\t\tpron = sub(pron, 2)\n\tend\n\t\n\t-- If valid, strip the representation marks\n\tif repr == \"phonemic\" then\n\t\tpron = sub(pron, 2, -2)\n\t\twithout_links = sub(without_links, 2, -2)\n\telseif repr == \"phonetic\" then\n\
      \t\tpron = sub(pron, 2, -2)\n\t\twithout_links = sub(without_links, 2, -2)\n\telseif repr == \"orthographic\" then\n\t\tpron = sub(pron, 2, -2)\n\t\twithout_links = sub(without_links, 2, -2)\n\telseif repr == \"rhyme\" then\n\t\tpron = sub(pron, 2)\n\t\
      \twithout_links = sub(without_links, 2)\n\telse\n\t\ttable.insert(categories, \"[[Category:IPA pronunciations with invalid representation marks]]\")\n\t\t-- table.insert(err, \"invalid representation marks\")\n\t\t-- Removed because it's annoying when\
      \ previewing pronunciation pages.\n\tend\n\t\n\t-- Check for obsolete and nonstandard symbols\n\tfor i, symbol in ipairs(m_data.nonstandard) do\n\t\tlocal result\n\t\tfor nonstandard in gmatch(pron, symbol) do\n\t\t\tif not result then\n\t\t\t\tresult\
      \ = {}\n\t\t\tend\n\t\t\ttable.insert(result, nonstandard)\n\t\t\ttable.insert(categories, \"[[Category:IPA pronunciations with obsolete or nonstandard characters|\" .. nonstandard .. \"]]\")\n\t\tend\n\t\t\n\t\tif result then\n\t\t\ttable.insert(err,\
      \ \"obsolete or nonstandard characters (\" .. table.concat(result) .. \")\")\n\t\t\tbreak\n\t\tend\n\tend\n\t\n\t--[[ Check for invalid symbols after removing the following:\n\t\t\t1. wikilinks (handled above)\n\t\t\t2. paired HTML tags\n\t\t\t3. bolding\n\
      \t\t\t4. italics\n\t\t\t5. HTML entity for space\n\t\t\t6. asterisk at beginning of transcription\n\t\t\t7. comma followed by spacing characters\n\t\t\t8. superscripts enclosed in superscript parentheses\t\t]]\n\tlocal found_HTML\n\tlocal result = str_gsub(without_links,\
      \ \"&lt;(%a+)[^&gt;]*&gt;([^&lt;]+)&lt;/%1&gt;\",\n\t\tfunction(tagName, content)\n\t\t\tfound_HTML = true\n\t\t\treturn content\n\t\tend)\n\tresult = str_gsub(result, \"'''([^']*)'''\", \"%1\")\n\tresult = str_gsub(result, \"''([^']*)''\", \"%1\")\n\t\
      result = str_gsub(result, \"&amp;[^;]+;\", \"\") -- This may catch things that are not valid character entities.\n\tresult = str_gsub(result, \"^%*\", \"\")\n\tresult = gsub(result, \",%s+\", \"\")\n\tresult = gsub(result, \"⁽[\".. m_symbols.superscripts\
      \ .. \"]+⁾\", \"\")\n\tresult = gsub(result, '[' .. m_symbols.valid .. ']', '')\n\tif result ~= '' then\n\t\tlocal suggestions = {}\n\t\tmw.log(pron, result)\n\t\tlocal namespace = mw.title.getCurrentTitle().namespace\n\t\tlocal category\n\t\tif namespace\
      \ == 0 then\n\t\t\t-- main namespace\n\t\t\tcategory = \"IPA pronunciations with invalid IPA characters\"\n\t\telseif namespace == 118 then\n\t\t\t-- reconstruction namespace\n\t\t\tcategory = \"IPA pronunciations with invalid IPA characters/reconstruction\"\
      \n\t\telse\n\t\t\tcategory = \"IPA pronunciations with invalid IPA characters/non_mainspace\"\n\t\tend\n\t\tfor character in gmatch(result, \".\") do\n\t\t\tlocal suggestion = m_symbols.suggestions[character]\n\t\t\tif suggestion then\n\t\t\t\ttable.insert(suggestions,\
      \ character .. \" with \" .. suggestion)\n\t\t\tend\n\t\t\ttable.insert(categories, \"[[Category:\" .. category .. \"|\" .. character .. \"]]\")\n\t\tend\n\t\ttable.insert(err, \"invalid IPA characters (\" .. result .. \")\")\n\t\tif suggestions[1] then\n\
      \t\t\ttable.insert(err, \"replace \" .. table.concat(suggestions, \", \"))\n\t\tend\n\tend\n\t\n\tif found_HTML then\n\t\ttable.insert(categories, \"[[Category:IPA pronunciations with paired HTML tags]]\")\n\tend\n\t\n\t-- Reference inside IPA template\
      \ usage\n\t-- FIXME: Doesn't work; you can't put HTML in module output.\n\t--if mw.ustring.find(pron, '&lt;/ref&gt;') then\n\t--\ttable.insert(categories, \"[[Category:IPA pronunciations with reference]]\")\n\t--end\n\t\n\tif repr == \"phonemic\" or repr\
      \ == \"rhyme\" then\n\t\tif lang and m_data.phonemes[lang:getCode()] then\n\t\t\tlocal valid_phonemes = m_data.phonemes[lang:getCode()]\n\t\t\tlocal rest = pron\n\t\t\tlocal phonemes = {}\n\t\t\t\n\t\t\twhile mw.ustring.len(rest) &gt; 0 do\n\t\t\t\tlocal\
      \ longestmatch = \"\"\n\t\t\t\t\n\t\t\t\tif sub(rest, 1, 1) == \"(\" or sub(rest, 1, 1) == \")\" then\n\t\t\t\t\tlongestmatch = sub(rest, 1, 1)\n\t\t\t\telse\n\t\t\t\t\tfor _, phoneme in ipairs(valid_phonemes) do\n\t\t\t\t\t\tif mw.ustring.len(phoneme)\
      \ &gt; mw.ustring.len(longestmatch) and sub(rest, 1, mw.ustring.len(phoneme)) == phoneme then\n\t\t\t\t\t\t\tlongestmatch = phoneme\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif mw.ustring.len(longestmatch) &gt; 0 then\n\t\t\t\t\t\
      table.insert(phonemes, longestmatch)\n\t\t\t\t\trest = sub(rest, mw.ustring.len(longestmatch) + 1)\n\t\t\t\telse\n\t\t\t\t\tlocal phoneme = sub(rest, 1, 1)\n\t\t\t\t\ttable.insert(phonemes, \"&lt;span style=\\\"color: red\\\"&gt;\" .. phoneme .. \"&lt;/span&gt;\"\
      )\n\t\t\t\t\trest = sub(rest, 2)\n\t\t\t\t\ttable.insert(categories, \"[[Category:IPA pronunciations with invalid phonemes/\" .. lang:getCode() .. \"]]\")\n\t\t\t\t\trequire(\"Module:debug\").track(\"IPA/invalid phonemes/\" .. phoneme)\n\t\t\t\tend\n\t\
      \t\tend\n\t\t\t\n\t\t\tpron = table.concat(phonemes)\n\t\tend\n\t\t\n\t\tif repr == \"phonemic\" then\n\t\t\tpron = \"/\" .. pron .. \"/\"\n\t\telse\n\t\t\tpron = \"-\" .. pron\n\t\tend\n\telseif repr == \"phonetic\" then\n\t\tpron = \"[\" .. pron .. \"\
      ]\"\n\telseif repr == \"orthographic\" then\n\t\tpron = \"⟨\" .. pron .. \"⟩\"\n\tend\n\t\n\tif reconstructed then\n\t\tpron = \"*\" .. pron\n\tend\n\t\n\tif err[1] then\n\t\terr = '&lt;span class=\"previewonly error\" style=\"font-size: small;&gt;&amp;#32;'\
      \ .. table.concat(err, ', ') .. '&lt;/span&gt;'\n\telse\n\t\terr = \"\"\n\tend\n\t\n\tif split_output then -- for use of IPA in links \n\t\treturn '&lt;span class=\"IPA\"&gt;' .. pron .. '&lt;/span&gt;', table.concat(categories), err\n\telse\n\t\treturn\
      \ '&lt;span class=\"IPA\"&gt;' .. pron .. '&lt;/span&gt;' .. err .. table.concat(categories)\n\tend\nend\n\nfunction export.example(frame)\n\tlocal output = {}\n\t\n\tlocal m_links = require('Module:links')\n\tlocal m_languages = require('Module:languages')\n\
      \t\n\ttable.insert(\n\t\toutput,\n[[\n{| class=\"wikitable\"\n! Term !! IPA !! Generated X-SAMPA !! Regenerated IPA !! Matched?\n]]\n\t)\n\tlocal row =\n[[\n|-\n| link || IPA || XSAMPA || regenerated_IPA || matched\n]]\n\t\n\tlocal examples = mw.text.split(frame.args[1],\
      \ \",%s*\")\n\t\n\tlocal m_XSAMPA = require(\"Module:IPA/X-SAMPA\")\n\t\n\tfor _, example in pairs(examples) do\n\t\tlocal lang, word = match(example, \"(%l%l%l?):(.+) [/%[]\")\n\t\t\n\t\tif lang then\n\t\t\tlang = m_languages.getByCode(lang) or error('\"\
      ' .. lang .. '\" is not a valid language code.')\n\t\tend\n\t\t\n\t\tlocal IPA = match(example, \"/[^/]+/\")\n\t\t\tor match(example, \"%[[^%]]+%]\")\n\t\t\tor error('No IPA transcription found in \"' .. example .. '\".')\n\t\tlocal XSAMPA = m_XSAMPA.IPA_to_XSAMPA(IPA)\n\
      \t\tlocal regenerated_IPA = m_XSAMPA.XSAMPA_to_IPA(XSAMPA)\n\t\t\n\t\tcontent = {\n\t\t\tlink = lang and word and m_links.full_link{ term = word, lang = lang },\n\t\t\tmatched = IPA == regenerated_IPA\n\t\t\t\tand '&lt;span style=\"color: green;\"&gt;yes&lt;/span&gt;'\n\
      \t\t\t\tor '&lt;span style=\"color: red;\"&gt;no&lt;/span&gt;',\n\t\t\tIPA = '&lt;span class=\"IPA\"&gt;' .. IPA .. '&lt;/span&gt;',\n\t\t\tXSAMPA = '&lt;code&gt;' .. XSAMPA .. '&lt;/span&gt;',\n\t\t\tregenerated_IPA = '&lt;span class=\"IPA\"&gt;' .. regenerated_IPA\
      \ .. '&lt;/span&gt;'\n\t\t}\n\t\t\n\t\tlocal function add_content(item)\n\t\t\treturn content[item] or \"\"\n\t\tend\n\t\tlocal row = gsub(row, \"[%a_]+\", add_content)\n\t\ttable.insert(output, row)\n\tend\n\t\n\ttable.insert(output, \"|}\")\n\t\n\treturn\
      \ table.concat(output)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:35.002Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56098 t=1555362454898364
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:34 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1347.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 565639241, 565354998, 688802944
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4118506\" pageid=\"4118506\" ns=\"828\" title=\"Module:IPA/data\"><revisions><rev user=\"Mahagaja\" timestamp=\"2019-02-27T13:31:09Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"mfe now exists\" xml:space=\"preserve\">local data = {}\n\n--[=[\tPlease add language codes for new pronunciation keys to the list below.\n\t\tThis will allow [[Template:IPA]] and the\
      \ functions in [[Module:IPA]] to\n\t\tautomatically link to the key.\t]=]\nlocal langcodes = {\n\t\"ca\",\n    \"cy\",\n\t\"de\",\n    \"dsb\",\n    \"el\",\n\t\"en\",\n    \"eo\",\n    \"es\",\n    \"fr\",\n    \"ga\",\n    \"gd\",\n    \"got\",\n   \
      \ \"hu\",\n    \"it\",\n    \"la\",\n    \"liv\",\n    \"mdf\",\n    \"mfe\",\n    \"my\",\n    \"nci\",\n\t\"nl\",\n    \"no\",\n    \"pjt\",\n    \"pl\",\n    \"pt\",\n    \"sl\",\n    \"sga\",\n    \"sv\",\n    \"ug\",\n    \"wlm\",\n    \"yi\",\n}\n\
      \ndata.langs_with_infopages = {}\n\n--[=[\tThis goes through the list of langcodes, and fills\n\t\tthe table data.langs_with_infopages with items\n\t\tsuch as [\"ca\"] = true, [\"cy\"] = true, ... ,\n\t\tso that [[Module:IPA]] can easily access them. ]=]\n\
      for _, langcode in ipairs(langcodes) do\n\tdata.langs_with_infopages[langcode] = true\nend\n\n-- Non-standard or obsolete IPA symbols.\ndata.nonstandard = {\n\t--[[\tThe following symbols consist of more than one character,\n\t\t\tso we can't put them\
      \ in the line below.\t\t]]\n\t\"ɑ̢\", \"d̂\", \"t̂\", \"n̂\", \"l̂\", \"k̫\", \"ɔ̗\", \"ɔ̖\",\n\t\n\t\"[ʦʣʧʤʨʥ?ƍσƺƪƻƾƞᶀᶁᶂᶃᶄᶅᶆᶈᶇᶉᶊᶋƫᶌᶍᶎʓʆλƛłščžǰǧǯẋᵻᵿⱻʚ\"\n\t.. \"ɷωıȹȸ∅ØƥƭƈƙʠʇʗʖʞɩɼȣяɿʅʮʯᴀᴀᴇGRŒQȡȶȵȴKPT]\"\n}\n\n-- See valid IPA characters at [[Module:IPA/data/symbols]].\n\
      \ndata.phonemes = {}\ndata.phonemes[\"nl\"] = {\n\t\"m\", \"n\", \"ŋ\",\n\t\"p\", \"b\", \"t\", \"d\", \"k\", \"ɡ\",\n\t\"f\", \"v\", \"s\", \"z\", \"ʃ\", \"ʒ\", \"x\", \"ɣ\", \"ɦ\",\n\t\"ʋ\", \"l\", \"j\", \"r\",\n\t\"ɪ\", \"ʏ\", \"ɛ\", \"ə\", \"ɔ\",\
      \ \"ɑ\",\n\t\"i\", \"iː\", \"y\", \"yː\", \"u\", \"uː\", \"eː\", \"øː\", \"oː\", \"ɛː\", \"œː\", \"ɔː\", \"aː\",\n\t\"ɛi̯\", \"œy̯\", \"ɔi̯\", \"ɑu̯\", \"ɑi̯\",\n\t\"iu̯\", \"yu̯\", \"ui̯\", \"eːu̯\", \"oːi̯\", \"aːi̯\",\n\t\"ˈ\", \"ˌ\", \".\", \" \",\n\
      \t}\ndata.phonemes[\"hy\"] = {\n\t\"ɑ\", \"b\", \"ɡ\", \"d\", \"ɛ\", \"z\", \"ɛ\", \"ə\", \"tʰ\", \"ʒ\", \"i\", \"l\", \"χ\", \"t͡s\",\n\t\"k\", \"h\", \"d͡z\", \"ʁ\", \"t͡ʃ\", \"m\", \"j\", \"n\", \"ʃ\", \"ɔ\", \"t͡ʃʰ\", \"p\", \"d͡ʒ\",\n\t\"r\", \"s\"\
      , \"v\", \"t\", \"ɾ\", \"t͡sʰ\", \"v\", \"pʰ\", \"kʰ\", \"ɔ\", \"f\", \"ŋɡ\", \"ŋk\",\n\t\"ŋχ\", \"u\", \"ˈ\", \"ˌ\", \".\", \" \", \"ː\",\n\t}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:26.704Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aparameters&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50648 t=1555362446595408
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:26 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 423663543, 628847145, 699572082
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4797340\" pageid=\"4797340\" ns=\"828\" title=\"Module:parameters\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-01T01:32:55Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"OK, resurrect the bug fix for disappearing &quot;falt&quot; and such while I figure out how to clone a table properly\" xml:space=\"preserve\">local export = {}\n\n-- A helper function\
      \ to escape magic characters in a string\n-- Magic characters: ^$()%.[]*+-?\nlocal plain = require(\"Module:string\").pattern_escape\n\n-- A helper function that removes empty numeric indexes in a table,\n-- so that the values are tightly packed like in\
      \ a normal Lua table.\nlocal remove_holes = require(\"Module:table\").compressSparseArray\n\nfunction export.process(args, params, return_unknown)\n\tlocal args_new = {}\n\t\n\t-- Process parameters for specific properties\n\tlocal required = {}\n\tlocal\
      \ patterns = {}\n\tlocal names_with_equal_sign = {}\n\tlocal list_from_index = nil\n\t\n\tfor name, param in pairs(params) do\n\t\tif param.required then\n\t\t\tif param.alias_of then\n\t\t\t\trequire(\"Module:debug\").track(\"parameters/required alias\"\
      )\n\t\t\tend\n\t\t\trequired[name] = true\n\t\tend\n\t\t\n\t\tif param.list then\n\t\t\tlocal key = name\n\t\t\tif type(name) == \"string\" then\n\t\t\t\tkey = string.gsub(name, \"=\", \"\")\n\t\t\tend\n\t\t\tif param.default ~= nil then\n\t\t\t\targs_new[key]\
      \ = {param.default, maxindex = 1}\n\t\t\telse\n\t\t\t\targs_new[key] = {maxindex = 0}\n\t\t\tend\n\t\t\t\n\t\t\tif type(param.list) == \"string\" then\n\t\t\t\t-- If the list property is a string, then it represents the name\n\t\t\t\t-- to be used as the\
      \ prefix for list items. This is for use with lists\n\t\t\t\t-- where the first item is a numbered parameter and the\n\t\t\t\t-- subsequent ones are named, such as 1, pl2, pl3.\n\t\t\t\tif string.find(param.list, \"=\") then\n\t\t\t\t\tpatterns[\"^\" ..\
      \ string.gsub(plain(param.list), \"=\", \"(%%d+)\") .. \"$\"] = name\n\t\t\t\telse\n\t\t\t\t\tpatterns[\"^\" .. plain(param.list) .. \"(%d+)$\"] = name\n\t\t\t\tend\n\t\t\telseif type(name) == \"number\" then\n\t\t\t\t-- If the name is a number, then all\
      \ indexed parameters from\n\t\t\t\t-- this number onwards go in the list.\n\t\t\t\tlist_from_index = name\n\t\t\telse\n\t\t\t\tif string.find(name, \"=\") then\n\t\t\t\t\tpatterns[\"^\" .. string.gsub(plain(name), \"=\", \"(%%d+)\") .. \"$\"] = string.gsub(name,\
      \ \"=\", \"\")\n\t\t\t\telse\n\t\t\t\t\tpatterns[\"^\" .. plain(name) .. \"(%d+)$\"] = name\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif string.find(name, \"=\") then\n\t\t\t\t-- DO NOT SIDE-EFFECT A TABLE WHILE ITERATING OVER IT.\n\t\t\t\t-- Some elements\
      \ may be skipped or processed twice if you do.\n\t\t\t\t-- Instead, track the changes we want to make to `params`, and\n\t\t\t\t-- do them after the iteration over `params` is done.\n\t\t\t\ttable.insert(names_with_equal_sign, name)\n\t\t\tend\n\t\telseif\
      \ param.default ~= nil then\n\t\t\targs_new[name] = param.default\n\t\tend\n\tend\n\n\t--Process required changes to `params`\n\tfor _, name in ipairs(names_with_equal_sign) do\n\t\trequire(\"Module:debug\").track(\"parameters/name with equals\")\n\t\t\
      params[string.gsub(name, \"=\", \"\")] = params[name]\n\t\tparams[name] = nil\n\tend\n\n\t-- Process the arguments\n\tlocal args_unknown = {}\n\t\n\tfor name, val in pairs(args) do\n\t\tlocal index = nil\n\t\t\n\t\tif type(name) == \"number\" then\n\t\t\
      \tif list_from_index ~= nil and name &gt;= list_from_index then\n\t\t\t\tindex = name - list_from_index + 1\n\t\t\t\tname = list_from_index\n\t\t\tend\n\t\telse\n\t\t\t-- Does this argument name match a pattern?\n\t\t\tfor pattern, pname in pairs(patterns)\
      \ do\n\t\t\t\tindex = mw.ustring.match(name, pattern)\n\t\t\t\t\n\t\t\t\t-- It matches, so store the parameter name and the\n\t\t\t\t-- numeric index extracted from the argument name.\n\t\t\t\tif index then\n\t\t\t\t\tindex = tonumber(index)\n\t\t\t\t\t\
      name = pname\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal param = params[name]\n\t\t\n\t\t-- If a parameter without the trailing index was found, and\n\t\t-- require_index is set on the param, set the param to nil to treat it\n\t\t\
      -- as if it isn't recognized.\n\t\tif not index and param and param.require_index then\n\t\t\tparam = nil\n\t\tend\n\t\t\n\t\t-- If no index was found, use 1 as the default index.\n\t\t-- This makes list parameters like g, g2, g3 put g at index 1.\n\t\t\
      index = index or 1\n\t\t\n\t\t-- If the argument is not in the list of parameters, trigger an error.\n\t\t-- return_unknown suppresses the error, and stores it in a separate list instead.\n\t\tif not param then\n\t\t\tif return_unknown then\n\t\t\t\targs_unknown[name]\
      \ = val\n\t\t\telse\n\t\t\t\terror(\"The parameter \\\"\" .. name .. \"\\\" is not used by this template.\", 2)\n\t\t\tend\n\t\telse\n\t\t\t-- Remove leading and trailing whitespace unless allow_whitespace is true.\n\t\t\tif not param.allow_whitespace\
      \ then\n\t\t\t\tval = mw.text.trim(val)\n\t\t\tend\n\t\t\t\n\t\t\t-- Empty string is equivalent to nil unless allow_empty is true.\n\t\t\tif val == \"\" and not param.allow_empty then\n\t\t\t\tval = nil\n\t\t\tend\n\t\t\t\n\t\t\t-- Convert to proper type\
      \ if necessary.\n\t\t\tif param.type == \"boolean\" then\n\t\t\t\tval = not (not val or val == \"\" or val == \"0\" or val == \"no\" or val == \"n\" or val == \"false\")\n\t\t\telseif param.type == \"number\" then\n\t\t\t\tval = tonumber(val)\n\t\t\telseif\
      \ param.type then\n\t\t\t\trequire(\"Module:debug\").track {\n\t\t\t\t\t\"parameters/unrecognized type\",\n\t\t\t\t\t\"parameters/unrecognized type/\" .. tostring(param.type)\n\t\t\t\t}\n\t\t\tend\n\t\t\t\n\t\t\t-- Can't use \"if val\" alone, because val\
      \ may be a boolean false.\n\t\t\tif val ~= nil then\n\t\t\t\t-- Mark it as no longer required, as it is present.\n\t\t\t\trequired[param.alias_of or name] = nil\n\t\t\t\t\n\t\t\t\t-- Store the argument value.\n\t\t\t\tif param.list then\n\t\t\t\t\t-- If\
      \ the parameter is an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\t\targs_new[name][index] = val\n\t\t\t\t\t\t\n\t\t\t\t\t\t-- Store\
      \ the highest index we find.\n\t\t\t\t\t\targs_new[name].maxindex = math.max(index, args_new[name].maxindex)\n\t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\t\t\t\t\t\
      args_new[param.alias_of][index] = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest index we find.\n\t\t\t\t\t\t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of]\
      \ = val\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\t-- If the parameter is an alias of another, store it as the original,\n\t\t\t\t\t-- but avoid overwriting it; the original takes precedence.\n\t\t\t\t\tif not param.alias_of then\n\t\t\t\t\
      \t\targs_new[name] = val\n\t\t\t\t\telseif args[param.alias_of] == nil then\n\t\t\t\t\t\tif params[param.alias_of] and params[param.alias_of].list then\n\t\t\t\t\t\t\targs_new[param.alias_of][1] = val\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t-- Store the highest\
      \ index we find.\n\t\t\t\t\t\t\targs_new[param.alias_of].maxindex = math.max(1, args_new[param.alias_of].maxindex)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\targs_new[param.alias_of] = val\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\
      \t\n\t-- The required table should now be empty.\n\t-- If any entry remains, trigger an error, unless we're in the template namespace.\n\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\tlocal list = {}\n\t\tfor name, param in pairs(required)\
      \ do\n\t\t\ttable.insert(list, name)\n\t\tend\n\t\t\n\t\tlocal count = #list\n\t\tif count == 1 then\n\t\t\terror('The parameter \"' .. list[1] .. '\" is required.', 2)\n\t\telseif count == 2 then\n\t\t\terror('The parameters \"' .. table.concat(list,\
      \ '\" and \"') .. '\" are required.', 2)\n\t\telseif count &gt; 2 then\n\t\t\terror('The parameters \"' .. mw.text.listToText(list, '\", \"', '\", and \"') .. '\" are required.', 2)\n\t\tend\n\tend\n\t\n\t-- Remove holes in any list parameters if needed.\n\
      \tfor name, val in pairs(args_new) do\n\t\tif type(val) == \"table\" and not params[name].allow_holes then\n\t\t\targs_new[name] = remove_holes(val)\n\t\tend\n\tend\n\t\n\tif return_unknown then\n\t\treturn args_new, args_unknown\n\telse\n\t\treturn args_new\n\
      \tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:35.750Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Arhymes&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56142 t=1555362455648793
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:35 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 586621992, 261688353, 697807032
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="481649" pageid="481649" ns="10" title="Template:rhymes"><revisions><rev user="Rua" timestamp="2019-03-31T20:56:04Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:rhymes|show}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2015-09-17T18:47:43.127Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:43 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1067 miss (0), cp3005 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 866603894, 863979516, 2666536436
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4253487\" pageid=\"4253487\" ns=\"828\" title=\"Module:languages/templates\"><revisions><rev user=\"CodeCat\" timestamp=\"2015-07-04T14:10:38Z\" comment=\"\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nfunction export.exists(frame)\n\tlocal args = frame.args\n\tlocal lang = args[1] or error(&quot;Language code has not been specified. Please pass parameter 1 to the module\
      \ invocation.&quot;)\n\t\n\tlang = require(&quot;Module:languages&quot;).getByCode(lang)\n\t\n\tif lang then\n\t\treturn &quot;1&quot;\n\telse\n\t\treturn &quot;&quot;\n\tend\nend\n\n-- Used by the following JS:\n-- * [[WT:ACCEL]]\n-- * [[WT:EDIT]]\n--\
      \ * [[WT:NEC]]\nfunction export.getByCode(frame)\n\tlocal args = frame.args\n\tlocal langcode = args[1] or error(&quot;Language code has not been specified. Please pass parameter 1 to the module invocation.&quot;)\n\tlocal itemname = args[2] or error(&quot;Type\
      \ of information to look up has not been specified. Please pass parameter 2 to the module invocation.&quot;)\n\t\n\tlocal lang = require(&quot;Module:languages&quot;).getByCode(langcode)\n\t\n\tif not lang then\n\t\terror(&quot;The language code '&quot;\
      \ .. langcode .. &quot;' is not valid.&quot;)\n\tend\n\t\n\t-- The item that the caller wanted to look up\n\tif itemname == &quot;getOtherNames&quot; then\n\t\tlocal index = args[3]; if index == &quot;&quot; then index = nil end\n\t\tindex = tonumber(index\
      \ or error(&quot;Please specify the numeric index of the desired name.&quot;))\n\t\treturn lang:getOtherNames()[index] or &quot;&quot;\n\telseif itemname == &quot;getFamily&quot; then\n\t\treturn lang:getFamily():getCode()\n\telseif itemname == &quot;getWikimediaLanguages&quot;\
      \ then\n\t\tlocal index = args[3]; if index == &quot;&quot; then index = nil end\n\t\tindex = tonumber(index or error(&quot;Please specify the numeric index of the desired language.&quot;))\n\t\tlocal langs = lang:getWikimediaLanguages()\n\t\t\n\t\tif\
      \ langs[index] then\n\t\t\treturn langs[index]:getCode()\n\t\telse\n\t\t\treturn &quot;&quot;\n\t\tend\n\telseif itemname == &quot;getScripts&quot; then\n\t\tlocal index = args[3]; if index == &quot;&quot; then index = nil end\n\t\tindex = tonumber(index\
      \ or error(&quot;Please specify the numeric index of the desired script.&quot;))\n\t\tlocal scripts = lang:getScripts()\n\t\t\n\t\tif scripts[index] then\n\t\t\treturn scripts[index]:getCode()\n\t\telse\n\t\t\treturn &quot;&quot;\n\t\tend\n\telseif itemname\
      \ == &quot;getAncestors&quot; then\n\t\tlocal index = args[3]; if index == &quot;&quot; then index = nil end\n\t\tindex = tonumber(index or error(&quot;Please specify the numeric index of the desired ancestor.&quot;))\n\t\tlocal ancestors = lang:getAncestors()\n\
      \t\t\n\t\tif ancestors[index] then\n\t\t\treturn ancestors[index]:getCode()\n\t\telse\n\t\t\treturn &quot;&quot;\n\t\tend\n\telseif itemname == &quot;transliterate&quot; then\n\t\tlocal text = args[3]; if text == &quot;&quot; then text = nil end\n\t\t\
      local sc = args[4]; if sc == &quot;&quot; then sc = nil end\n\t\tlocal module_override = args[5]; if module_override == &quot;&quot; then module_override = nil end\n\t\tsc = (sc and (require(&quot;Module:scripts&quot;).getByCode(sc) or error(&quot;The\
      \ script code \\&quot;&quot; .. sc .. &quot;\\&quot; is not valid.&quot;)) or nil)\n\t\treturn lang:transliterate(text, sc, module_override) or &quot;&quot;\n\telseif itemname == &quot;makeEntryName&quot; then\n\t\tlocal text = args[3]; if text == &quot;&quot;\
      \ then text = nil end\n\t\treturn lang:makeEntryName(text) or &quot;&quot;\n\telseif itemname == &quot;makeSortKey&quot; then\n\t\tlocal text = args[3]; if text == &quot;&quot; then text = nil end\n\t\treturn lang:makeSortKey(text) or &quot;&quot;\n\t\
      elseif lang[itemname] then\n\t\tlocal ret = lang[itemname](lang)\n\t\t\n\t\tif type(ret) == &quot;string&quot; then\n\t\t\treturn ret\n\t\telse\n\t\t\terror(&quot;The function \\&quot;&quot; .. itemname .. &quot;\\&quot; did not return a string value.&quot;)\n\
      \t\tend\n\telse\n\t\terror(&quot;Requested invalid item name \\&quot;&quot; .. itemname .. &quot;\\&quot;.&quot;)\n\tend\nend\n\nfunction export.getByCanonicalName(frame)\n\tlocal args = frame.args\n\tlocal langname = args[1] or error(&quot;Language name\
      \ has not been specified. Please pass parameter 1 to the module invocation.&quot;)\n\t\n\tlocal lang = require(&quot;Module:languages&quot;).getByCanonicalName(langname)\n\t\n\tif lang then\n\t\treturn lang:getCode()\n\telse\n\t\treturn &quot;&quot;\n\t\
      end\nend\n\nfunction export.makeEntryName(frame)\n\tlocal args = frame.args\n\tlocal langname = args[1] or error(&quot;Language name has not been specified. Please pass parameter 1 to the module invocation.&quot;)\n\t\n\tlocal lang = require(&quot;Module:languages&quot;).getByCode(langname)\n\
      \t\n\tif lang then\n\t\treturn lang:makeEntryName(args[2])\n\telse\n\t\treturn &quot;&quot;\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-09-17T18:47:43.558Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AIPAchar%2Fold&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:43 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1067 miss (0), cp3006 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 866604261, 1812153364, 2666537266
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="4463901" pageid="4463901" ns="10" title="Template:IPAchar/old"><revisions><rev user="ZxxZxxZ" timestamp="2014-06-28T14:23:15Z" comment="Created page with &quot;&lt;!--             --&gt;&lt;span class=&quot;IPA&quot; lang=&quot;&quot;&gt;{{{1}}}&lt;/span&gt;&lt;!-- --&gt;{{#if:{{{2|}}}|, &lt;span class=&quot;IPA&quot; lang=&quot;&quot;&gt;{{{2}}}&lt;/span&gt;}}&lt;!-- --&gt;{{#if:{{{3|}}}|, &lt;span class=&quot;IPA&quot; lang=...&quot;" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">&lt;!--             --&gt;&lt;span class=&quot;IPA&quot; lang=&quot;&quot;&gt;{{{1}}}&lt;/span&gt;&lt;!--
      --&gt;{{#if:{{{2|}}}|, &lt;span class=&quot;IPA&quot; lang=&quot;&quot;&gt;{{{2}}}&lt;/span&gt;}}&lt;!--
      --&gt;{{#if:{{{3|}}}|, &lt;span class=&quot;IPA&quot; lang=&quot;&quot;&gt;{{{3}}}&lt;/span&gt;}}&lt;!--
      --&gt;{{#if:{{{4|}}}|, &lt;span class=&quot;IPA&quot; lang=&quot;&quot;&gt;{{{4}}}&lt;/span&gt;}}&lt;!--
      --&gt;{{#if:{{{5|}}}|, &lt;span class=&quot;IPA&quot; lang=&quot;&quot;&gt;{{{5}}}&lt;/span&gt;}}&lt;!--
      --&gt;{{#if:{{{6|}}}|, &lt;span class=&quot;IPA&quot; lang=&quot;&quot;&gt;{{{6}}}&lt;/span&gt;}}&lt;!--
      --&gt;&lt;includeonly&gt;{{#if:{{{1|}}}||[[Category:Pronunciation templates without a pronunciation]]}}&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:36.123Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aen-noun&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48470 t=1555362456028744
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:36 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1344.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 424187647, 642791639, 699735106
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="286438" pageid="286438" ns="10" title="Template:en-noun"><revisions><rev user="Rua" timestamp="2018-09-28T11:31:43Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Undo revision 50399302 by [[Special:Contributions/Rua|Rua]] ([[User talk:Rua|talk]])" xml:space="preserve">{{#invoke:en-headword|show|nouns}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:36.335Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aen-headword&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51402 t=1555362456211703
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:36 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 406122000, 736175176, 696761229
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4091555\" pageid=\"4091555\" ns=\"828\" title=\"Module:en-headword\"><revisions><rev user=\"Quesotiotyo\" timestamp=\"2019-02-16T03:02:16Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"fixed matching pattern for Category:English words containing three consecutive instances of the same letter (entries with three consecutive numbers or punctuation marks shouldn&#039;t\
      \ be included)\" xml:space=\"preserve\">local export = {}\nlocal pos_functions = {}\n\nlocal lang = require(\"Module:languages\").getByCode(\"en\")\n\nlocal function glossary_link(entry, text)\n\ttext = text or entry\n\treturn \"[[Appendix:Glossary#\"\
      \ .. entry .. \"|\" .. text .. \"]]\"\nend\n\n-- The main entry point.\n-- This is the only function that can be invoked from a template.\nfunction export.show(frame)\n\tPAGENAME = mw.title.getCurrentTitle().text\n\t\n\tlocal poscat = frame.args[1] or\
      \ error(\"Part of speech has not been specified. Please pass parameter 1 to the module invocation.\")\n\t\n\tlocal params = {\n\t\t[\"head\"] = {list = true, default = \"\"},\n\t\t[\"suff\"] = {type = \"boolean\"},\n\t}\n\t\n\tif pos_functions[poscat]\
      \ then\n\t\tfor key, val in pairs(pos_functions[poscat].params) do\n\t\t\tparams[key] = val\n\t\tend\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\tlocal data = {lang = lang, pos_category = poscat,\
      \ categories = {}, heads = args[\"head\"], inflections = {}}\n\t\n\tif args[\"suff\"] then\n\t\tdata.pos_category = \"suffixes\"\n\t\t\n\t\tif poscat == \"adjectives\" or poscat == \"adverbs\" or poscat == \"nouns\" or poscat == \"verbs\" then\n\t\t\t\
      table.insert(data.categories, (\"%s %s-forming suffixes\")\n\t\t\t\t:format(lang:getCanonicalName(), poscat:gsub(\"s$\", \"\")))\n\t\telse\n\t\t\terror(\"No category exists for suffixes forming \" .. poscat .. \".\")\n\t\tend\n\tend\n\t\n\tif pos_functions[poscat]\
      \ then\n\t\tpos_functions[poscat].func(args, data)\n\tend\n\t\n\tlocal pagename = mw.title.getCurrentTitle().text\n\tif pagename:find(\"[Qq][^Uu]\") or pagename:find(\"[Qq]$\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" words\
      \ containing Q not followed by U\")\n\tend\n\tif pagename:find(\"([A-Za-z])%1%1\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" words containing three consecutive instances of the same letter\")\n\tend\n\tif pagename:find(\"[^c]ie\"\
      ) or pagename:find(\"cei\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" words following the I before E except after C rule\")\n\tend\n\tif pagename:find(\"[^c]ei\") or pagename:find(\"cie\") then\n\t\ttable.insert(data.categories,\
      \ lang:getCanonicalName() .. \" words not following the I before E except after C rule\")\n\tend\n\tif not mw.ustring.toNFD(pagename):lower():find(\"[aeiouy]\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" words without vowels\"\
      )\n\tend\n\tif pagename:find(\"yre$\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. ' words ending in \"-yre\"')\n\tend\n\tif not pagename:find(\" \") and pagename:len() &gt; 25 then\n\t\ttable.insert(data.categories, \"Long \" ..\
      \ lang:getCanonicalName() .. ' words')\n\tend\n\tif pagename:find(\"^[^aeiou ]*a[^aeiou ]*e[^aeiou ]*i[^aeiou ]*o[^aeiou ]*u[^aeiou ]*$\") then\n\t\ttable.insert(data.categories, lang:getCanonicalName() .. ' words that use all vowels in alphabetical order')\n\
      \tend\n\treturn require(\"Module:headword\").full_headword(data)\nend\n\n-- This function does the common work between adjectives and adverbs\nfunction make_comparatives(params, data)\n\tlocal comp_parts = {label = glossary_link(\"comparable\", \"comparative\"\
      ), accel = {form = \"comparative\"}}\n\tlocal sup_parts = {label = glossary_link(\"comparable\", \"superlative\"), accel = {form = \"superlative\"}}\n\t\n\tif #params == 0 then\n\t\ttable.insert(params, {\"more\"})\n\tend\n\t\n\t-- To form the stem, replace\
      \ -(e)y with -i and remove a final -e.\n\tlocal stem = PAGENAME:gsub(\"([^aeiou])e?y$\", \"%1i\"):gsub(\"e$\", \"\")\n\t\n\t-- Go over each parameter given and create a comparative and superlative form\n\tfor i, val in ipairs(params) do\n\t\tlocal comp\
      \ = val[1]\n\t\tlocal sup = val[2]\n\t\t\n\t\tif comp == \"more\" and PAGENAME ~= \"many\" and PAGENAME ~= \"much\" then\n\t\t\ttable.insert(comp_parts, \"[[more]] \" .. PAGENAME)\n\t\t\ttable.insert(sup_parts, \"[[most]] \" .. PAGENAME)\n\t\telseif comp\
      \ == \"further\" and PAGENAME ~= \"far\" then\n\t\t\ttable.insert(comp_parts, \"[[further]] \" .. PAGENAME)\n\t\t\ttable.insert(sup_parts, \"[[furthest]] \" .. PAGENAME)\n\t\telseif comp == \"er\" then\n\t\t\ttable.insert(comp_parts, stem .. \"er\")\n\t\
      \t\ttable.insert(sup_parts, stem .. \"est\")\n\t\telseif comp == \"-\" or sup == \"-\" then\n\t\t\t-- Allowing '-' makes it more flexible to not have some forms\n\t\t\tif comp ~= \"-\" then\n\t\t\t\ttable.insert(comp_parts, comp)\n\t\t\tend\n\t\t\tif sup\
      \ ~= \"-\" then\n\t\t\t\ttable.insert(sup_parts, sup)\n\t\t\tend\n\t\telse\n\t\t\t-- If the full comparative was given, but no superlative, then\n\t\t\t-- create it by replacing the ending -er with -est.\n\t\t\tif not sup then\n\t\t\t\tif comp:find(\"\
      er$\") then\n\t\t\t\t\tsup = comp:gsub(\"er$\", \"est\")\n\t\t\t\telse\n\t\t\t\t\terror(\"The superlative of \\\"\" .. comp .. \"\\\" cannot be generated automatically. Please provide it with the \\\"sup\" .. (i == 1 and \"\" or i) .. \"=\\\" parameter.\"\
      )\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(comp_parts, comp)\n\t\t\ttable.insert(sup_parts, sup)\n\t\tend\n\tend\n\t\n\ttable.insert(data.inflections, comp_parts)\n\ttable.insert(data.inflections, sup_parts)\nend\n\npos_functions[\"adjectives\"\
      ] = {\n\tparams = {\n\t\t[1] = {list = true, allow_holes = true},\n\t\t[\"sup\"] = {list = true, allow_holes = true},\n\t\t},\n\tfunc = function(args, data)\n\t\tlocal shift = 0\n\t\tlocal is_not_comparable = false\n\t\tlocal is_comparative_only = false\n\
      \t\t\n\t\t-- If the first parameter is ?, then don't show anything, just return.\n\t\tif args[1][1] == \"?\" then\n\t\t\treturn\n\t\t-- If the first parameter is -, then move all parameters up one position.\n\t\telseif args[1][1] == \"-\" then\n\t\t\t\
      shift = 1\n\t\t\tis_not_comparable = true\n\t\t-- If the only argument is +, then remember this and clear parameters\n\t\telseif args[1][1] == \"+\" and args[1].maxindex == 1 then\n\t\t\tshift = 1\n\t\t\tis_comparative_only = true\n\t\tend\n\t\t\n\t\t\
      -- Gather all the comparative and superlative parameters.\n\t\tlocal params = {}\n\t\t\n\t\tfor i = 1, args[1].maxindex - shift do\n\t\t\tlocal comp = args[1][i + shift]\n\t\t\tlocal sup = args[\"sup\"][i]\n\t\t\t\n\t\t\tif comp or sup then\n\t\t\t\ttable.insert(params,\
      \ {comp, sup})\n\t\t\tend\n\t\tend\n\t\t\n\t\tif shift == 1 then\n\t\t\t-- If the first parameter is \"-\" but there are no parameters,\n\t\t\t-- then show \"not comparable\" only and return.\n\t\t\t-- If there are parameters, then show \"not generally\
      \ comparable\"\n\t\t\t-- before the forms.\n\t\t\tif #params == 0 then\n\t\t\t\tif is_not_comparable then\n\t\t\t\t\ttable.insert(data.inflections, {label = \"not \" .. glossary_link(\"comparable\")})\n\t\t\t\t\ttable.insert(data.categories, lang:getCanonicalName()\
      \ .. \" uncomparable adjectives\")\n\t\t\t\t\treturn\n\t\t\t\tend\n\t\t\t\tif is_comparative_only then\n\t\t\t\t\ttable.insert(data.inflections, {label = glossary_link(\"comparable\", \"comparative\") .. \" form only\"})\n\t\t\t\t\ttable.insert(data.categories,\
      \ lang:getCanonicalName() .. \" comparative-only adjectives\")\n\t\t\t\t\treturn\n\t\t\t\tend\n\t\t\telse\n\t\t\t\ttable.insert(data.inflections, {label = \"not generally \" .. glossary_link(\"comparable\")})\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Process the\
      \ parameters\n\t\tmake_comparatives(params, data)\n\tend\n}\n\npos_functions[\"adverbs\"] = {\n\tparams = {\n\t\t[1] = {list = true, allow_holes = true},\n\t\t[\"sup\"] = {list = true, allow_holes = true},\n\t\t},\n\tfunc = function(args, data)\n\t\tlocal\
      \ shift = 0\n\t\t\n\t\t-- If the first parameter is ?, then don't show anything, just return.\n\t\tif args[1][1] == \"?\" then\n\t\t\treturn\n\t\t-- If the first parameter is -, then move all parameters up one position.\n\t\telseif args[1][1] == \"-\"\
      \ then\n\t\t\tshift = 1\n\t\tend\n\t\t\n\t\t-- Gather all the comparative and superlative parameters.\n\t\tlocal params = {}\n\t\t\n\t\tfor i = 1, args[1].maxindex - shift do\n\t\t\tlocal comp = args[1][i + shift]\n\t\t\tlocal sup = args[\"sup\"][i]\n\t\
      \t\t\n\t\t\tif comp or sup then\n\t\t\t\ttable.insert(params, {comp, sup})\n\t\t\tend\n\t\tend\n\t\t\n\t\tif shift == 1 then\n\t\t\t-- If the first parameter is \"-\" but there are no parameters,\n\t\t\t-- then show \"not comparable\" only and return.\
      \ If there are parameters,\n\t\t\t-- then show \"not generally comparable\" before the forms.\n\t\t\tif #params == 0 then\n\t\t\t\ttable.insert(data.inflections, {label = \"not \" .. glossary_link(\"comparable\")})\n\t\t\t\ttable.insert(data.categories,\
      \ lang:getCanonicalName() .. \" uncomparable adverbs\")\n\t\t\t\treturn\n\t\t\telse\n\t\t\t\ttable.insert(data.inflections, {label = \"not generally \" .. glossary_link(\"comparable\")})\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Process the parameters\n\t\tmake_comparatives(params,\
      \ data)\n\tend\n}\n\npos_functions[\"nouns\"] = {\n\tparams = {\n\t\t[1] = {list = true, allow_holes = true},\n\t\t\n\t\t-- TODO: This should really be a list parameter too...\n\t\t[\"plqual\"] = {},\n\t\t[\"pl2qual\"] = {},\n\t\t[\"pl3qual\"] = {},\n\t\
      \t[\"pl4qual\"] = {},\n\t\t[\"pl5qual\"] = {},\n\t\t},\n\tfunc = function(args, data)\n\t\t-- Gather all the plural parameters from the numbered parameters.\n\t\tlocal plurals = {}\n\t\t\n\t\tfor i = 1, args[1].maxindex do\n\t\t\tlocal pl = args[1][i]\n\
      \t\t\t\n\t\t\tif pl then\n\t\t\t\tlocal qual = args[\"pl\" .. (i == 1 and \"\" or i) .. \"qual\"]\n\t\t\t\t\n\t\t\t\tif qual then\n\t\t\t\t\ttable.insert(plurals, {term = pl, qualifiers = {qual}})\n\t\t\t\telse\n\t\t\t\t\ttable.insert(plurals, pl)\n\t\t\
      \t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Decide what to do next...\n\t\tlocal mode = nil\n\t\t\n\t\tif plurals[1] == \"?\" or plurals[1] == \"!\" or plurals[1] == \"-\" or plurals[1] == \"~\" then\n\t\t\tmode = plurals[1]\n\t\t\ttable.remove(plurals,\
      \ 1)  -- Remove the mode parameter\n\t\tend\n\t\t\n\t\t-- Plural is unknown\n\t\tif mode == \"?\" then\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" nouns with unknown or uncertain plurals\")\n\t\t\treturn\n\t\t-- Plural is not attested\n\
      \t\telseif mode == \"!\" then\n\t\t\ttable.insert(data.inflections, {label = \"plural not attested\"})\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" nouns with unattested plurals\")\n\t\t\treturn\n\t\t-- Uncountable noun; may occasionally\
      \ have a plural\n\t\telseif mode == \"-\" then\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" uncountable nouns\")\n\t\t\t\n\t\t\t-- If plural forms were given explicitly, then show \"usually\"\n\t\t\tif #plurals &gt; 0 then\n\t\t\t\
      \ttable.insert(data.inflections, {label = \"usually \" .. glossary_link(\"uncountable\")})\n\t\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable nouns\")\n\t\t\telse\n\t\t\t\ttable.insert(data.inflections, {label = glossary_link(\"\
      uncountable\")})\n\t\t\tend\n\t\t-- Mixed countable/uncountable noun, always has a plural\n\t\telseif mode == \"~\" then\n\t\t\ttable.insert(data.inflections, {label = glossary_link(\"countable\") .. \" and \" .. glossary_link(\"uncountable\")})\n\t\t\t\
      table.insert(data.categories, lang:getCanonicalName() .. \" uncountable nouns\")\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable nouns\")\n\t\t\t\n\t\t\t-- If no plural was given, add a default one now\n\t\t\tif #plurals ==\
      \ 0 then\n\t\t\t\tplurals = {\"s\"}\n\t\t\tend\n\t\t-- The default, always has a plural\n\t\telse\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable nouns\")\n\t\t\t\n\t\t\t-- If no plural was given, add a default one now\n\t\t\
      \tif #plurals == 0 then\n\t\t\t\tplurals = {\"s\"}\n\t\t\tend\n\t\t\tif plural and not mw.title.new(plural).exists then\n\t\t\t\ttable.insert(categories, \"English nouns with missing plurals\")\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- If there are no plurals\
      \ to show, return now\n\t\tif #plurals == 0 then\n\t\t\treturn\n\t\tend\n\t\t\n\t\t-- There are plural forms to show, so show them\n\t\tlocal pl_parts = {label = \"plural\", accel = {form = \"p\"}}\n\t\t\n\t\tlocal function check_ies(pl, stem)\n\t\t\t\
      local newplural, nummatches = stem:gsub(\"([^aeiou])y$\",\"%1ies\")\n\t\t\treturn nummatches &gt; 0 and pl == newplural\n\t\tend\n\t\tlocal stem = PAGENAME\n\t\tlocal irregular = false\n\t\tfor i, pl in ipairs(plurals) do\n\t\t\tif pl == \"s\" then\n\t\
      \t\t\ttable.insert(pl_parts, stem .. \"s\")\n\t\t\telseif pl == \"es\" then\n\t\t\t\ttable.insert(pl_parts, stem .. \"es\")\n\t\t\telse\n\t\t\t\ttable.insert(pl_parts, pl)\n\t\t\t\tif type(pl) == \"table\" then\n\t\t\t\t\tpl = pl.term\n\t\t\t\tend\n\t\t\
      \t\tif not stem:find(\" \") and not (pl == stem .. \"s\" or pl == stem .. \"es\" or check_ies(pl, stem)) then\n\t\t\t\t\tirregular = true\n\t\t\t\t\tif pl == stem then\n\t\t\t\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" invariant nouns\"\
      )\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\tif irregular then\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" nouns with irregular plurals\")\n\t\tend\n\t\t\n\t\ttable.insert(data.inflections, pl_parts)\n\tend\n}\n\npos_functions[\"\
      proper nouns\"] = {\n\tparams = {\n\t\t[1] = {list = true},\n\t\t},\n\tfunc = function(args, data)\n\t\tlocal plurals = args[1]\n\t\t\n\t\t-- Decide what to do next...\n\t\tlocal mode = nil\n\t\t\n\t\tif plurals[1] == \"?\" or plurals[1] == \"!\" or plurals[1]\
      \ == \"-\" or plurals[1] == \"~\" then\n\t\t\tmode = plurals[1]\n\t\t\ttable.remove(plurals, 1)  -- Remove the mode parameter\n\t\tend\n\t\t\n\t\t-- Plural is unknown\n\t\tif mode == \"?\" then\n\t\t\ttable.insert(data.categories, lang:getCanonicalName()\
      \ .. \" proper nouns with unknown or uncertain plurals\")\n\t\t\treturn\n\t\t-- Plural is not attested\n\t\telseif mode == \"!\" then\n\t\t\ttable.insert(data.inflections, {label = \"plural not attested\"})\n\t\t\ttable.insert(data.categories, lang:getCanonicalName()\
      \ .. \" proper nouns with unattested plurals\")\n\t\t\treturn\n\t\t-- Uncountable noun; may occasionally have a plural\n\t\telseif mode == \"-\" then\n\t\t\t-- If plural forms were given explicitly, then show \"usually\"\n\t\t\tif #plurals &gt; 0 then\n\
      \t\t\t\ttable.insert(data.inflections, {label = \"usually \" .. glossary_link(\"uncountable\")})\n\t\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable proper nouns\")\n\t\t\telse\n\t\t\t\ttable.insert(data.inflections, {label =\
      \ glossary_link(\"uncountable\")})\n\t\t\tend\n\t\t-- Mixed countable/uncountable noun, always has a plural\n\t\telseif mode == \"~\" then\n\t\t\ttable.insert(data.inflections, {label = glossary_link(\"countable\") .. \" and \" .. glossary_link(\"uncountable\"\
      )})\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable proper nouns\")\n\t\t\t\n\t\t\t-- If no plural was given, add a default one now\n\t\t\tif #plurals == 0 then\n\t\t\t\tplurals = {\"s\"}\n\t\t\tend\n\t\telseif #plurals &gt;\
      \ 0 then\n\t\t\ttable.insert(data.categories, lang:getCanonicalName() .. \" countable proper nouns\")\n\t\tend\n\t\t\n\t\t-- If there are no plurals to show, return now\n\t\tif #plurals == 0 then\n\t\t\treturn\n\t\tend\n\t\t\n\t\t-- There are plural forms\
      \ to show, so show them\n\t\tlocal pl_parts = {label = \"plural\", accel = {form = \"p\"}}\n\t\t\n\t\tlocal stem = PAGENAME\n\t\t\n\t\tfor i, pl in ipairs(plurals) do\n\t\t\tif pl == \"s\" then\n\t\t\t\ttable.insert(pl_parts, stem .. \"s\")\n\t\t\telseif\
      \ pl == \"es\" then\n\t\t\t\ttable.insert(pl_parts, stem .. \"es\")\n\t\t\telse\n\t\t\t\ttable.insert(pl_parts, pl)\n\t\t\tend\n\t\n\t\tend\n\t\t\n\t\ttable.insert(data.inflections, pl_parts)\n\tend\n}\n\npos_functions[\"verbs\"] = {\n\tparams = {\n\t\t\
      [1] = {list = \"pres_3sg\", allow_holes = true},\n\t\t\n\t\t[\"pres_3sg_qual\"] = {},\n\t\t[\"pres_3sg2_qual\"] = {},\n\t\t[\"pres_3sg3_qual\"] = {},\n\t\t[\"pres_3sg4_qual\"] = {},\n\t\t[\"pres_3sg5_qual\"] = {},\n\t\t\n\t\t[2] = {list = \"pres_ptc\"\
      , allow_holes = true},\n\t\t\n\t\t[\"pres_ptc_qual\"] = {},\n\t\t[\"pres_ptc2_qual\"] = {},\n\t\t[\"pres_ptc3_qual\"] = {},\n\t\t[\"pres_ptc4_qual\"] = {},\n\t\t[\"pres_ptc5_qual\"] = {},\n\t\t\n\t\t[3] = {list = \"past\", allow_holes = true},\n\t\t\n\t\
      \t[\"past_qual\"] = {},\n\t\t[\"past2_qual\"] = {},\n\t\t[\"past3_qual\"] = {},\n\t\t[\"past4_qual\"] = {},\n\t\t[\"past5_qual\"] = {},\n\t\t\n\t\t[4] = {list = \"past_ptc\", allow_holes = true},\n\t\t\n\t\t[\"past_ptc_qual\"] = {},\n\t\t[\"past_ptc2_qual\"\
      ] = {},\n\t\t[\"past_ptc3_qual\"] = {},\n\t\t[\"past_ptc4_qual\"] = {},\n\t\t[\"past_ptc5_qual\"] = {},\n\t\t},\n\tfunc = function(args, data)\n\t\t-- Get parameters\n\t\tlocal par1 = args[1][1]\n\t\tlocal par2 = args[2][1]\n\t\tlocal par3 = args[3][1]\n\
      \t\tlocal par4 = args[4][1]\n\t\t\n\t\tlocal pres_3sg_forms = {label = \"third-person singular simple present\", accel = {form = \"3|s|pres\"}}\n\t\tlocal pres_ptc_forms = {label = \"present participle\", accel = {form = \"pres|ptcp\"}}\n\t\tlocal past_forms\
      \ = {label = \"simple past\", accel = {form = \"past\"}}\n\t\tlocal pres_3sg_form = par1 or PAGENAME .. \"s\"\n\t\tlocal pres_ptc_form = par2 or PAGENAME .. \"ing\"\n\t\tlocal past_form = par3 or PAGENAME .. \"ed\"\n\t\t\n\t\tif par1 and not par2 and not\
      \ par3 then\n\t\t\t-- This is the \"new\" format, which uses only the first parameter.\n\t\t\tif par1 == \"es\" then\n\t\t\t\tpres_3sg_form = PAGENAME .. \"es\"\n\t\t\t\tpres_ptc_form = PAGENAME .. \"ing\"\n\t\t\t\tpast_form = PAGENAME .. \"ed\"\n\t\t\t\
      elseif par1 == \"ies\" then\n\t\t\t\tif not mw.ustring.find(PAGENAME, \"y$\") then\n\t\t\t\t\terror(\"The first parameter is \\\"ies\\\" but the verb does not end in -y.\")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tlocal stem = mw.ustring.gsub(PAGENAME, \"y$\",\
      \ \"\")\n\t\t\t\tpres_3sg_form = stem .. \"ies\"\n\t\t\t\tpres_ptc_form = stem .. \"ying\"\n\t\t\t\tpast_form = stem .. \"ied\"\n\t\t\telseif par1 == \"d\" then\n\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\tpres_ptc_form = PAGENAME .. \"ing\"\n\t\
      \t\t\tpast_form = PAGENAME .. \"d\"\n\t\t\telse\n\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\tpres_ptc_form = par1 .. \"ing\"\n\t\t\t\tpast_form = par1 .. \"ed\"\n\t\t\tend\n\t\telse\n\t\t\t-- This is the \"legacy\" format, using the second and third\
      \ parameters as well.\n\t\t\t-- It is included here for backwards compatibility and to ease the transition.\n\t\t\tif par3 then\n\t\t\t\tif par3 == \"es\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/es3\")\n\t\t\t\t\tpres_3sg_form = par1\
      \ .. par2 .. \"es\"\n\t\t\t\t\tpres_ptc_form = par1 .. par2 .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. par2 .. \"ed\"\n\t\t\t\telseif par3 == \"ing\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ing3\")\n\t\t\t\t\tpres_3sg_form = PAGENAME\
      \ .. \"s\"\n\t\t\t\t\tpres_ptc_form = par1 .. par2 .. \"ing\"\n\t\t\t\t\t\n\t\t\t\t\tif par2 == \"y\" then\n\t\t\t\t\t\tpast_form = PAGENAME .. \"d\"\n\t\t\t\t\telse\n\t\t\t\t\t\tpast_form = par1 .. par2 .. \"ed\"\n\t\t\t\t\tend\n\t\t\t\telseif par3 ==\
      \ \"ed\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ed3\")\n\t\t\t\t\t\n\t\t\t\t\tif par2 == \"i\" then\n\t\t\t\t\t\tpres_3sg_form = par1 .. par2 .. \"es\"\n\t\t\t\t\t\tpres_ptc_form = PAGENAME .. \"ing\"\n\t\t\t\t\telse\n\t\t\t\t\t\t\
      pres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\t\t\tpres_ptc_form = par1 .. par2 .. \"ing\"\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tpast_form = par1 .. par2 .. \"ed\"\n\t\t\t\telseif par3 == \"d\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/d3\"\
      )\n\t\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\t\tpres_ptc_form = par1 .. par2 .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. par2 .. \"d\"\n\t\t\t\telse\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/xxx3\")\n\t\t\t\tend\n\t\t\telse\n\t\t\
      \t\tif par2 == \"es\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/es2\")\n\t\t\t\t\tpres_3sg_form = par1 .. \"es\"\n\t\t\t\t\tpres_ptc_form = par1 .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. \"ed\"\n\t\t\t\telseif par2 == \"ies\" then\n\
      \t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ies2\")\n\t\t\t\t\t\n\t\t\t\t\tif par1 .. \"y\" ~= PAGENAME then\n\t\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ies2/par1 not pagename\")\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tpres_3sg_form\
      \ = par1 .. \"ies\"\n\t\t\t\t\tpres_ptc_form = par1 .. \"ying\"\n\t\t\t\t\tpast_form = par1 .. \"ied\"\n\t\t\t\telseif par2 == \"ing\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ing2\")\n\t\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\
      \t\t\t\tpres_ptc_form = par1 .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. \"ed\"\n\t\t\t\telseif par2 == \"ed\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/ed2\")\n\t\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\t\tpres_ptc_form = par1\
      \ .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. \"ed\"\n\t\t\t\telseif par2 == \"d\" then\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/d2\")\n\t\t\t\t\t\n\t\t\t\t\tif par1 ~= PAGENAME then\n\t\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/d2/par1\
      \ not pagename\")\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tpres_3sg_form = PAGENAME .. \"s\"\n\t\t\t\t\tpres_ptc_form = par1 .. \"ing\"\n\t\t\t\t\tpast_form = par1 .. \"d\"\n\t\t\t\telse\n\t\t\t\t\trequire(\"Module:debug\").track(\"en-headword/xxx2\")\n\t\
      \t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal pres_3sg_qual = args[\"pres_3sg_qual\"]\n\t\tlocal pres_ptc_qual = args[\"pres_ptc_qual\"]\n\t\tlocal past_qual = args[\"past_qual\"]\n\t\t\n\t\ttable.insert(pres_ptc_forms, {term = pres_ptc_form, qualifiers\
      \ = {pres_ptc_qual}})\n\t\ttable.insert(pres_3sg_forms, {term = pres_3sg_form, qualifiers = {pres_3sg_qual}})\n\t\ttable.insert(past_forms, {term = past_form, qualifiers = {past_qual}})\n\t\t\n\t\t-- Present 3rd singular\n\t\tfor i = 2, args[1].maxindex\
      \ do\n\t\t\tlocal form = args[1][i]\n\t\t\tlocal qual = args[\"pres_3sg\" .. i .. \"_qual\"]\n\t\t\t\n\t\t\tif form then\n\t\t\t\ttable.insert(pres_3sg_forms, {term = form, qualifiers = {qual}})\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Present participle\n\t\t\
      for i = 2, args[2].maxindex do\n\t\t\tlocal form = args[2][i]\n\t\t\tlocal qual = args[\"pres_ptc\" .. i .. \"_qual\"]\n\t\t\t\n\t\t\tif form then\n\t\t\t\ttable.insert(pres_ptc_forms, {term = form, qualifiers = {qual}})\n\t\t\tend\n\t\tend\n\t\t\n\t\t\
      -- Past\n\t\tfor i = 2, args[3].maxindex do\n\t\t\tlocal form = args[3][i]\n\t\t\tlocal qual = args[\"past\" .. i .. \"_qual\"]\n\t\t\t\n\t\t\tif form then\n\t\t\t\ttable.insert(past_forms, {term = form, qualifiers = {qual}})\n\t\t\tend\n\t\tend\n\t\t\n\
      \t\t-- Past participle\n\t\tlocal found_past_ptc = false\n\t\tlocal past_ptc_forms = {label = \"past participle\", accel = {form = \"past|ptcp\"}}\n\t\tlocal qual = args[\"past_ptc_qual\"]; if qual == \"\" then qual = nil end\n\t\ttable.insert(past_ptc_forms,\
      \ {term = par4 or past_form, qualifiers = {qual}})\n\t\tif par4 or qual then\n\t\t\tfound_past_ptc = true\n\t\tend\n\t\tfor i = 2, args[4].maxindex do\n\t\t\tlocal form = args[4][i]\n\t\t\tlocal qual = args[\"past_ptc\" .. i .. \"_qual\"]\n\t\t\tif form\
      \ then\n\t\t\t\ttable.insert(past_ptc_forms, {term = form, qualifiers = {qual}})\n\t\t\t\tfound_past_ptc = true\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Are the past forms identical to the past participle forms?\n\t\tlocal identical = true\n\t\t\n\t\tif #past_forms\
      \ ~= #past_ptc_forms then\n\t\t\tidentical = false\n\t\telse\n\t\t\tfor key, val in ipairs(past_forms) do\n\t\t\t\tif past_ptc_forms[key].term ~= val.term or past_ptc_forms[key].qual ~= val.qual then\n\t\t\t\t\tidentical = false\n\t\t\t\t\tbreak\n\t\t\t\
      \tend\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Insert the forms\n\t\ttable.insert(data.inflections, pres_3sg_forms)\n\t\ttable.insert(data.inflections, pres_ptc_forms)\n\t\t\n\t\tif not found_past_ptc or identical then\n\t\t\tpast_forms.label = \"simple past\
      \ and past participle\"\n\t\t\tpast_forms.accel = {form = \"past|and|past|ptcp\"}\n\t\t\ttable.insert(data.inflections, past_forms)\n\t\telse\n\t\t\ttable.insert(data.inflections, past_forms)\n\t\t\ttable.insert(data.inflections, past_ptc_forms)\n\t\t\
      end\n\tend\n}\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:36.543Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48948 t=1555362456421768
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:36 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 509057869, 240538332, 687466129
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3989053\" pageid=\"3989053\" ns=\"828\" title=\"Module:headword\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-04T11:34:46Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal m_data = mw.loadData(\"Module:headword/data\")\n\nlocal title = mw.title.getCurrentTitle()\n\nlocal isLemma = m_data.lemmas\nlocal isNonLemma = m_data.nonlemmas\n\
      local notranslit = m_data.notranslit\nlocal toBeTagged = m_data.toBeTagged\n\nlocal parameters = {\n\tlang = { type = \"object\" },\n\tscript = { type = \"object\" },\n\theads = { type = \"table\" },\n\ttranslits = { type = \"table\" },\n\ttranscriptions\
      \ = { type = \"table\" },\n\tinflections = { type = \"table\" },\n\tgenders = { type = \"table\" },\n\tcategories = { type = \"table\" },\n\tpos_category = { type = \"string\" },\n\tsort_key = { type = \"string\" },\n\tid = { type = \"string\" },\n}\n\n\
      local function test_script(text, script_code)\n\tif type(text) == \"string\" and type(script_code) == \"string\" then\n\t\tlocal sc = require(\"Module:scripts\").getByCode(script_code)\n\t\tlocal characters\n\t\tif sc then\n\t\t\tcharacters = sc:getCharacters()\n\
      \t\tend\n\t\t\n\t\tlocal out\n\t\tif characters then\n\t\t\ttext = mw.ustring.gsub(text, \"%W\", \"\")\n\t\t\tout = mw.ustring.find(text, \"[\" .. characters .. \"]\")\n\t\tend\n\t\t\n\t\tif out then\n\t\t\treturn true\n\t\telse\n\t\t\treturn false\n\t\
      \tend\n\telse\n\t\tmw.log(\"Parameters to test_script were incorrect.\")\n\t\treturn nil\n\tend\nend\n\n\nlocal function preprocess(data)\n\t--[=[\n\t[[Special:WhatLinksHere/Template:tracking/headword/heads-not-table]]\n\t[[Special:WhatLinksHere/Template:tracking/headword/translits-not-table]]\n\
      \t]=]\n\tif type(data.heads) ~= \"table\" then\n\t\tif data.heads then\n\t\t\trequire(\"Module:debug\").track(\"headword/heads-not-table\")\n\t\tend\n\t\t\n\t\tdata.heads = { data.heads }\n\tend\n\t\n\tif type(data.translits) ~= \"table\" then\n\t\tif\
      \ data.translits then\n\t\t\trequire(\"Module:debug\").track(\"headword/translits-not-table\")\n\t\tend\n\t\t\n\t\tdata.translits = { data.translits }\n\tend\n\t\n\tif type(data.transcriptions) ~= \"table\" then\n\t\tif data.transcriptions then\n\t\t\t\
      require(\"Module:debug\").track(\"headword/transcriptions-not-table\")\n\t\tend\n\t\t\n\t\tdata.transcriptions = { data.transcriptions }\n\tend\n\t\n\tif not data.heads or #data.heads == 0 then\n\t\tdata.heads = {\"\"}\n\tend\n\t\n\t-- Determine if term\
      \ is reconstructed\n\tlocal is_reconstructed = data.lang:getType() == \"reconstructed\"\n\t\tor title.nsText == \"Reconstruction\"\n\t\n\t-- Create a default headword.\n\tlocal subpagename = title.subpageText\n\tlocal pagename = title.text\n\tlocal default_head\n\
      \tif is_reconstructed then\n\t\tdefault_head = require(\"Module:utilities\").plain_gsub(pagename, data.lang:getCanonicalName() .. \"/\", \"\")\n\telse\n\t\tdefault_head = subpagename\n\tend\n\t\n\t-- Add links to multi-word page names when appropriate\n\
      \tif data.lang:getCode() ~= \"zh\" then\n\t\tlocal spacingPunctuation = \"([%s%p]+)\"\n\t\t--[[ \tVariable containing anything that is\n\t\t\t\tnot a punctuation character found inside of words.\n\t\t\t\tUsed to exclude characters from the above regex.\t\
      ]]\n\t\tlocal notWordPunc = \"([^-־׳״'.·*’]+)\"\n\t\tlocal contains_words = false\n\t\t\n\t\tfor possibleWordBreak in mw.ustring.gmatch(default_head, spacingPunctuation) do\n\t\t\tif mw.ustring.find(possibleWordBreak, notWordPunc) then\n\t\t\t\tcontains_words\
      \ = true\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\n\t\tif (not is_reconstructed) and contains_words then\n\t\t\tlocal function workaround_to_exclude_chars(s)\n\t\t\t\treturn mw.ustring.gsub(s, notWordPunc, \"]]%1[[\")\n\t\t\tend\n\t\t\t\n\t\t\tdefault_head\
      \ = \"[[\"\n\t\t\t\t.. mw.ustring.gsub(\n\t\t\t\t\tdefault_head,\n\t\t\t\t\tspacingPunctuation,\n\t\t\t\t\tworkaround_to_exclude_chars\n\t\t\t\t\t)\n\t\t\t\t.. \"]]\"\n\t\t\t--[=[\n\t\t\tuse this when workaround is no longer needed:\n\t\t\tdefault_head\
      \ = \"[[\"\n\t\t\t\t.. mw.ustring.gsub(default_head, WORDBREAKCHARS, \"]]%1[[\")\n\t\t\t\t.. \"]]\"\n\t\t\t\n\t\t\tRemove any empty links, which could have been created above\n\t\t\tat the beginning or end of the string.\n\t\t\t]=]\n\t\t\tdefault_head\
      \ = mw.ustring.gsub(default_head, \"%[%[%]%]\", \"\")\n\t\tend\n\tend\n\t\n\tif is_reconstructed then\n\t\tdefault_head = \"*\" .. default_head\n\tend\n\t\n\t-- If a head is the empty string \"\", then replace it with the default\n\tfor i, head in ipairs(data.heads)\
      \ do\n\t\tif head == \"\" then\n\t\t\thead = default_head\n\t\telse\n\t\t\tif head == default_head and data.lang:getCanonicalName() == \"English\" then\n\t\t\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" terms with redundant head\
      \ parameter\")\n\t\t\tend\t\t\t\n\t\tend\n\t\tdata.heads[i] = head\n\tend\n\t\n\t--[[\tTry to detect the script if it was not provided\n\t\t\tWe use the first headword for this, and assume\n\t\t\tthat all of them have the same script\n\t\t\tThis *should*\
      \ always be true, right?\t\t]]\n\tif not data.sc then\n\t\tdata.sc = require(\"Module:scripts\").findBestScript(data.heads[1], data.lang)\n\tend\n\t\n\tfor i, val in pairs(data.translits) do\n\t\tdata.translits[i] = {display = val, is_manual = true}\n\t\
      end\n\t\n\t-- Make transliterations\n\tfor i, head in ipairs(data.heads) do\n\t\tlocal translit = data.translits[i]\n\t\t\n\t\t-- Try to generate a transliteration if necessary\n\t\t-- Generate it if the script is not Latn or similar, and if no transliteration\
      \ was provided\n\t\tif translit and translit.display == \"-\" then\n\t\t\ttranslit = nil\n\t\telseif not translit and not (data.sc:getCode():find(\"Latn\", nil, true) or data.sc:getCode() == \"Latinx\" or data.sc:getCode() == \"None\") and (not data.sc\
      \ or data.sc:getCode() ~= \"Imag\") then\n\t\t\ttranslit = data.lang:transliterate(require(\"Module:links\").remove_links(head), data.sc)\n\t\t\t\n\t\t\t-- There is still no transliteration?\n\t\t\t-- Add the entry to a cleanup category.\n\t\t\tif not\
      \ translit and not notranslit[data.lang:getCode()] then\n\t\t\t\ttranslit = \"&lt;small&gt;transliteration needed&lt;/small&gt;\"\n\t\t\t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" terms needing transliteration\")\n\t\t\tend\n\t\t\
      \t\n\t\t\tif translit then\n\t\t\t\ttranslit = {display = translit, is_manual = false}\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Link to the transliteration entry for languages that require this\n\t\tif translit and data.lang:link_tr() then\n\t\t\ttranslit.display\
      \ = require(\"Module:links\").full_link{\n\t\t\t\tterm = translit.display,\n\t\t\t\tlang = data.lang,\n\t\t\t\tsc = require(\"Module:scripts\").getByCode(\"Latn\"),\n\t\t\t\ttr = \"-\"\n\t\t\t\t}\n\t\tend\n\t\t\n\t\tdata.translits[i] = translit\n\tend\n\
      \t\n\tif data.id and type(data.id) ~= \"string\" then\n\t\terror(\"The id in the data table should be a string.\")\n\tend\nend\n\n\n-- Format a headword with transliterations\nlocal function format_headword(data)\n\tlocal m_links = require(\"Module:links\"\
      )\n\tlocal m_scriptutils = require(\"Module:script utilities\")\n\t\n\t-- Are there non-empty transliterations?\n\t-- Need to do it this way because translit[1] might be nil while translit[2] is not\n\tlocal has_translits = false\n\t\n\t-- Format the headwords\n\
      \tfor i, head in ipairs(data.heads) do\n\t\tif data.translits[i] or data.transcriptions[i] then\n\t\t\thas_translits = true\n\t\tend\n\t\t\n\t\t-- Apply processing to the headword, for formatting links and such\n\t\tif head:find(\"[[\", nil, true) and\
      \ (not data.sc or data.sc:getCode() ~= \"Imag\") then\n\t\t\thead = m_links.language_link({term = head, lang = data.lang}, false)\n\t\tend\n\t\t\n\t\t-- Add language and script wrapper\n\t\tif i == 1 then\n\t\t\thead = m_scriptutils.tag_text(head, data.lang,\
      \ data.sc, \"head\", nil, data.id)\n\t\telse\n\t\t\thead = m_scriptutils.tag_text(head, data.lang, data.sc, \"head\", nil)\n\t\tend\n\t\t\n\t\tdata.heads[i] = head\n\tend\n\t\n\tlocal translits_formatted = \"\"\n\t\n\tif has_translits then\n\t\t-- Format\
      \ the transliterations\n\t\tlocal translits = data.translits\n\t\tlocal transcriptions = data.transcriptions\n\t\t\n\t\tif translits then\n\t\t\t-- using pairs() instead of ipairs() in case there is a gap\n\t\t\tfor i, _ in pairs(translits) do\n\t\t\t\t\
      if type(i) == \"number\" then\n\t\t\t\t\ttranslits[i] = m_scriptutils.tag_translit(translits[i].display, data.lang:getCode(), \"head\", nil, translits[i].is_manual)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\tif transcriptions then\n\t\t\tfor i, _ in pairs(transcriptions)\
      \ do\n\t\t\t\tif type(i) == \"number\" then\n\t\t\t\t\ttranscriptions[i] = m_scriptutils.tag_transcription(transcriptions[i], data.lang:getCode(), \"head\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\tfor i = 1, math.max(#translits, #transcriptions) do\n\t\
      \t\tlocal translits_formatted = {}\n\t\t\ttable.insert(translits_formatted, translits[i] and translits[i] or \"\")\n\t\t\ttable.insert(translits_formatted, (translits[i] and transcriptions[i]) and \" \" or \"\")\n\t\t\ttable.insert(translits_formatted,\
      \ transcriptions[i] and \"/\" .. transcriptions[i] .. \"/\" or \"\")\n\t\t\tdata.translits[i] = table.concat(translits_formatted)\n\t\tend\n\t\t\n\t\ttranslits_formatted = \" (\" .. table.concat(data.translits, \" &lt;i&gt;or&lt;/i&gt; \") .. \")\"\n\t\
      \t\n\t\tlocal transliteration_page = mw.title.new(data.lang:getCanonicalName() .. \" transliteration\", \"Wiktionary\")\n\t\t\n\t\tif transliteration_page then\n\t\t\tlocal success, exists = pcall(function () return transliteration_page.exists end)\n\t\
      \t\tif success and exists then\n\t\t\t\ttranslits_formatted = \" [[Wiktionary:\" .. data.lang:getCanonicalName() .. \" transliteration|•]]\" .. translits_formatted\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn table.concat(data.heads, \" &lt;i&gt;or&lt;/i&gt;\
      \ \") .. translits_formatted\nend\n\n\nlocal function format_genders(data)\n\tif data.genders and #data.genders &gt; 0 then\n\t\tlocal gen = require(\"Module:gender and number\")\n\t\treturn \"&amp;nbsp;\" .. gen.format_list(data.genders, data.lang)\n\t\
      else\n\t\treturn \"\"\n\tend\nend\n\n\nlocal function format_inflection_parts(data, parts)\n\tlocal m_links = require(\"Module:links\")\n\t\n\tfor key, part in ipairs(parts) do\n\t\tif type(part) ~= \"table\" then\n\t\t\tpart = {term = part}\n\t\tend\n\
      \t\t\n\t\tlocal qualifiers = \"\"\n\t\t\n\t\tif part.qualifiers and #part.qualifiers &gt; 0 then\n\t\t\tqualifiers = require(\"Module:qualifier\").format_qualifier(part.qualifiers) .. \" \"\n\t\t\t\n\t\t\t-- [[Special:WhatLinksHere/Template:tracking/headword/qualifier]]\n\
      \t\t\trequire(\"Module:debug\").track(\"headword/qualifier\")\n\t\tend\n\t\t\n\t\tlocal partaccel = part.accel\n\t\tlocal face = part.hypothetical and \"hypothetical\" or \"bold\"\n\t\tlocal nolink = part.hypothetical or part.nolink\n\t\t\n\t\t-- Convert\
      \ the term into a full link\n\t\t-- Don't show a transliteration here, the consensus seems to be not to\n\t\t-- show them in headword lines to avoid clutter.\n\t\tpart = m_links.full_link(\n\t\t\t{\n\t\t\t\tterm = not nolink and part.term or nil,\n\t\t\
      \t\talt = part.alt or (nolink and part.term or nil),\n\t\t\t\tlang = part.lang or data.lang,\n\t\t\t\tsc = part.sc or parts.sc or (not part.lang and data.sc),\n\t\t\t\tid = part.id,\n\t\t\t\tgenders = part.genders,\n\t\t\t\ttr = part.translit or (not (parts.enable_auto_translit\
      \ or data.inflections.enable_auto_translit) and \"-\" or nil),\n\t\t\t\tts = part.transcription,\n\t\t\t\taccel = parts.accel or partaccel,\n\t\t\t},\n\t\t\tface,\n\t\t\tfalse\n\t\t\t)\n\t\t\n\t\tpart = qualifiers .. part\n\t\t\n\t\tparts[key] = part\n\
      \tend\n\t\n\tlocal parts_output = \"\"\n\t\n\tif #parts &gt; 0 then\n\t\tparts_output = \" \" .. table.concat(parts, \" &lt;i&gt;or&lt;/i&gt; \")\n\telseif parts.request then\n\t\tparts_output = \" &lt;small&gt;[please provide]&lt;/small&gt;\"\n\t\t\t\
      .. require(\"Module:utilities\").format_categories(\n\t\t\t\t{data.lang:getCanonicalName() .. \" entries needing inflection\"},\n\t\t\t\tlang,\n\t\t\t\tnil,\n\t\t\t\tnil,\n\t\t\t\tdata.force_cat_output,\n\t\t\t\tdata.sc\n\t\t\t\t)\n\tend\n\t\n\treturn\
      \ \"&lt;i&gt;\" .. parts.label .. \"&lt;/i&gt;\" .. parts_output\nend\n\n-- Format the inflections following the headword\nlocal function format_inflections(data)\n\tif data.inflections and #data.inflections &gt; 0 then\n\t\t-- Format each inflection individually\n\
      \t\tfor key, infl in ipairs(data.inflections) do\n\t\t\tdata.inflections[key] = format_inflection_parts(data, infl)\n\t\tend\n\t\t\n\t\treturn \" (\" .. table.concat(data.inflections, \", \") .. \")\"\n\telse\n\t\treturn \"\"\n\tend\nend\n\nlocal function\
      \ show_headword_line(data)\n\tlocal namespace = title.nsText\n\n\t-- Check the namespace against the language type\n\tif namespace == \"\" then\n\t\tif data.lang:getType() == \"reconstructed\" then\n\t\t\terror(\"Entries for this language must be placed\
      \ in the Reconstruction: namespace.\")\n\t\telseif data.lang:getType() == \"appendix-constructed\" then\n\t\t\terror(\"Entries for this language must be placed in the Appendix: namespace.\")\n\t\tend\n\tend\n\t\n\tlocal tracking_categories = {}\n\n\tif\
      \ not data.noposcat then\t\n\t\tlocal pos_category = data.lang:getCanonicalName() .. \" \" .. data.pos_category\n\t\tif pos_category ~= \"Translingual Han characters\" then\n\t\t\ttable.insert(data.categories, 1, pos_category)\n\t\tend\n\tend\n\t\n\t--\
      \ Is it a lemma category?\n\tif isLemma[data.pos_category] or isLemma[data.pos_category:gsub(\"^reconstructed \", \"\")] then\n\t\tif not data.noposcat then\n\t\t\ttable.insert(data.categories, 1, data.lang:getCanonicalName() .. \" lemmas\")\n\t\tend\n\
      \t-- Is it a nonlemma category?\n\telseif isNonLemma[data.pos_category]\n\t\tor isNonLemma[data.pos_category:gsub(\"^reconstructed \", \"\")]\n\t\tor isLemma[data.pos_category:gsub(\"^mutated \", \"\")]\n\t\tor isNonLemma[data.pos_category:gsub(\"^mutated\
      \ \", \"\")] then\n\t\t\n\t\tif not data.noposcat then\n\t\t\ttable.insert(data.categories, 1, data.lang:getCanonicalName() .. \" non-lemma forms\")\n\t\tend\n\t-- It's neither; we don't know what this category is, so tag it with a tracking category.\n\
      \telse\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/headword/unrecognized pos]]\n\t\t]=]\n\t\ttable.insert(tracking_categories, \"head tracking/unrecognized pos\")\n\t\trequire(\"Module:debug\").track{\n\t\t\t\"headword/unrecognized pos\"\
      ,\n\t\t\t\"headword/unrecognized pos/lang/\" .. data.lang:getCode(),\n\t\t\t\"headword/unrecognized pos/pos/\" .. data.pos_category\n\t\t}\n\tend\n\t\n\t-- Preprocess\n\tpreprocess(data)\n\t\n\tlocal m_links = require(\"Module:links\")\n\t\n\tif namespace\
      \ == \"\" and data.lang:getType() ~= \"reconstructed\" then\n\t\tfor _, head in ipairs(data.heads) do\n\t\t\tif title.prefixedText ~= m_links.getLinkPage(m_links.remove_links(head), data.lang) then\n\t\t\t\t--[=[\n\t\t\t\t[[Special:WhatLinksHere/Template:tracking/headword/pagename\
      \ spelling mismatch]]\n\t\t\t\t]=]\n\t\t\t\trequire(\"Module:debug\").track{\n\t\t\t\t\t\"headword/pagename spelling mismatch\",\n\t\t\t\t\t\"headword/pagename spelling mismatch/\" .. data.lang:getCode()\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\
      end\n\t\n\t-- Format and return all the gathered information\n\treturn\n\t\tformat_headword(data) ..\n\t\tformat_genders(data) ..\n\t\tformat_inflections(data) ..\n\t\trequire(\"Module:utilities\").format_categories(\n\t\t\ttracking_categories, data.lang,\
      \ data.sort_key, nil, data.force_cat_output, data.sc\n\t\t\t)\nend\n\nfunction export.full_headword(data)\n\tlocal tracking_categories = {}\n\t\n\t-- Script-tags the topmost header.\n\tlocal pagename = title.text\n\tlocal fullPagename = title.fullText\n\
      \tlocal namespace = title.nsText\n\t\n\tif not data.lang or type(data.lang) ~= \"table\" or not data.lang.getCode then\n\t\terror(\"In data, the first argument to full_headword, data.lang should be a language object.\")\n\tend\n\t\n\tif not data.sc then\n\
      \t\tdata.sc = require(\"Module:scripts\").findBestScript(data.heads and data.heads[1] ~= \"\" and data.heads[1] or pagename, data.lang)\n\telse\n\t\t-- Track uses of sc parameter\n\t\tlocal best = require(\"Module:scripts\").findBestScript(pagename, data.lang)\n\
      \t\trequire(\"Module:debug\").track(\"headword/sc\")\n\t\t\n\t\tif data.sc:getCode() == best:getCode() then\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/redundant\")\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/redundant/\" .. data.sc:getCode())\n\
      \t\telse\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/needed\")\n\t\t\trequire(\"Module:debug\").track(\"headword/sc/needed/\" .. data.sc:getCode())\n\t\tend\n\tend\n\t\n\tlocal displayTitle\n\t-- Assumes that the scripts in \"toBeTagged\" will\
      \ never occur in the Reconstruction namespace.\n\tif namespace == \"\" and data.sc and toBeTagged[data.sc:getCode()] or\n\t\t\tdata.sc:getCode() == \"Jpan\" and (test_script(pagename, \"Hira\") or test_script(pagename, \"Kana\")) then\n\t\tdisplayTitle\
      \ = '&lt;span class=\"' .. data.sc:getCode() .. '\"&gt;' .. pagename .. '&lt;/span&gt;'\n\telseif namespace == \"Reconstruction\" then\n\t\tdisplayTitle, matched = mw.ustring.gsub(\n\t\t\tfullPagename,\n\t\t\t\"^(Reconstruction:[^/]+/)(.+)$\",\n\t\t\t\
      function(before, term)\n\t\t\t\treturn before ..\n\t\t\t\t\trequire(\"Module:script utilities\").tag_text(\n\t\t\t\t\t\tterm,\n\t\t\t\t\t\tdata.lang,\n\t\t\t\t\t\tdata.sc\n\t\t\t\t\t)\n\t\t\tend\n\t\t)\n\t\t\n\t\tif matched == 0 then\n\t\t\tdisplayTitle\
      \ = nil\n\t\tend\n\tend\n\t\n\tif displayTitle then\n\t\tlocal frame = mw.getCurrentFrame()\n\t\tframe:callParserFunction(\n\t\t\t\"DISPLAYTITLE\",\n\t\t\tdisplayTitle\n\t\t)\n\tend\n\t\n\tif data.force_cat_output then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/headword/force\
      \ cat output]]\n\t\t]=]\n\t\trequire(\"Module:debug\").track(\"headword/force cat output\")\n\tend\n\t\n\tif data.getCanonicalName then\n\t\terror('The \"data\" variable supplied to \"full_headword\" should not be a language object.')\n\tend\n\t\t\n\t\
      -- Were any categories specified?\n\tif data.categories and #data.categories &gt; 0 then\n\t\tlocal lang_name = require(\"Module:string\").pattern_escape(data.lang:getCanonicalName())\n\t\tfor _, cat in ipairs(data.categories) do\n\t\t\t-- Does the category\
      \ begin with the language name? If not, tag it with a tracking category.\n\t\t\tif not mw.ustring.find(cat, \"^\" .. lang_name) then\n\t\t\t\tmw.log(cat, data.lang:getCanonicalName())\n\t\t\t\ttable.insert(tracking_categories, \"head tracking/no lang category\"\
      )\n\t\t\t\t\n\t\t\t\t--[=[\n\t\t\t\t[[Special:WhatLinksHere/Template:tracking/head tracking/no lang category]]\n\t\t\t\t]=]\n\t\t\t\trequire(\"Module:debug\").track{\n\t\t\t\t\t\"headword/no lang category\",\n\t\t\t\t\t\"headword/no lang category/lang/\"\
      \ .. data.lang:getCode()\n\t\t\t\t}\n\t\t\tend\n\t\tend\n\t\t\n\t\tif not data.pos_category\n\t\t\tand mw.ustring.find(data.categories[1], \"^\" .. data.lang:getCanonicalName())\n\t\t\t\tthen\n\t\t\tdata.pos_category = mw.ustring.gsub(data.categories[1],\
      \ \"^\" .. data.lang:getCanonicalName() .. \" \", \"\")\n\t\t\ttable.remove(data.categories, 1)\n\t\tend\n\tend\n\t\n\tif not data.pos_category then\n\t\terror(\n\t\t\t'No valid part-of-speech categories were found in the list '\n\t\t\t.. 'of categories\
      \ passed to the function \"full_headword\". '\n\t\t\t.. 'The part-of-speech category should consist of a language\\'s '\n\t\t\t.. 'canonical name plus a part of speech.'\n\t\t\t)\n\tend\n\t\n\t-- Categorise for unusual characters\n\tlocal standard = data.lang:getStandardCharacters()\n\
      \t\n\tif standard then\n\t\tif mw.ustring.len(title.subpageText) ~= 1 and not mw.ustring.match(title.text, \"^Unsupported titles/\") then\n\t\t\tfor character in mw.ustring.gmatch(title.subpageText, \"([^\" .. standard .. \"])\") do\n\t\t\t\tlocal upper\
      \ = mw.ustring.upper(character)\n\t\t\t\tif not mw.ustring.find(upper, \"[\" .. standard .. \"]\") then\n\t\t\t\t\tcharacter = upper\n\t\t\t\tend\n\t\t\t\ttable.insert(\n\t\t\t\t\tdata.categories,\n\t\t\t\t\tdata.lang:getCanonicalName() .. \" terms spelled\
      \ with \" .. character\n\t\t\t\t)\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Categorise for palindromes\n\tif title.nsText ~= \"Reconstruction\"\n\t\tand require('Module:palindromes').is_palindrome(\n\t\t\ttitle.subpageText, data.lang, data.sc\n\t\t\t) then\n\
      \t\ttable.insert(data.categories, data.lang:getCanonicalName() .. \" palindromes\")\n\tend\n\t\n\treturn\n\t\tshow_headword_line(data) ..\n\t\trequire(\"Module:utilities\").format_categories(\n\t\t\tdata.categories, data.lang, data.sort_key, nil, data.force_cat_output,\
      \ data.sc\n\t\t\t) ..\n\t\trequire(\"Module:utilities\").format_categories(\n\t\t\ttracking_categories, data.lang, data.sort_key, nil, data.force_cat_output, data.sc\n\t\t\t)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:27.992Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45289 t=1555362447896398
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 755991819, 732214236, 701469624
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4216643\" pageid=\"4216643\" ns=\"828\" title=\"Module:scripts\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-02-03T10:53:06Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"that was incorrect, but it turns out there aren&#039;t even any scripts whose canonical names contain &quot;script&quot;, so it didn&#039;t cause problems\" xml:space=\"preserve\">local export = {}\nlocal\
      \ Script = {}\n\nfunction Script:getCode()\n\treturn self._code\nend\n\nfunction Script:getCanonicalName()\n\treturn self._rawData.canonicalName\nend\n\nfunction Script:getOtherNames()\n\treturn self._rawData.otherNames or {}\nend\n\nfunction Script:getParent()\n\
      \treturn self._rawData.parent\nend\n\nfunction Script:getSystems()\n\tif not self._systemObjects then\n\t\tlocal m_systems = require(\"Module:writing systems\")\n\t\tself._systemObjects = {}\n\t\t\n\t\tfor _, sys in ipairs(self._rawData.systems or {})\
      \ do\n\t\t\ttable.insert(self._systemObjects, m_systems.getByCode(sys))\n\t\tend\n\tend\n\t\n\treturn self._systemObjects\nend\n\n--function Script:getAllNames()\n--\treturn self._rawData.names\n--end\n\n\nfunction Script:getType()\n\treturn \"script\"\
      \nend\n\n\nfunction Script:getCategoryName()\n\tlocal name = self._rawData.canonicalName\n\t\n\t-- If the name already has \"code\" or \"semaphore\" in it, don't add it.\n\t-- No names contain \"script\".\n\tif name:find(\"[Cc]ode$\") or name:find(\"[Ss]emaphore$\"\
      ) then\n\t\treturn name\n\telse\n\t\treturn name .. \" script\"\n\tend\nend\n\n\nfunction Script:getWikipediaArticle()\n\treturn self._rawData.wikipedia_article or self:getCategoryName()\nend\n\n\nfunction Script:getCharacters()\n\tif self._rawData.characters\
      \ then\n\t\treturn self._rawData.characters\n\telse\n\t\treturn nil\n\tend\nend\n\n\nfunction Script:countCharacters(text)\n\tif not self._rawData.characters then\n\t\treturn 0\n\telse\n\t\tlocal _, num = mw.ustring.gsub(text, \"[\" .. self._rawData.characters\
      \ .. \"]\", \"\")\n\t\treturn num\n\tend\nend\n\nfunction Script:getDirection()\n\tlocal direction = self._rawData.direction\n\tif not direction then\n\t\treturn nil\n\telse\n\t\treturn direction\n\tend\nend\n\n\nfunction Script:getRawData()\n\treturn\
      \ self._rawData\nend\n\n\nfunction Script:toJSON()\n\tlocal ret = {\n\t\tcanonicalName = self:getCanonicalName(),\n\t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\totherNames = self:getOtherNames(),\n\t\ttype = self:getType(),\n\t\
      \t}\n\t\n\treturn require(\"Module:JSON\").toJSON(ret)\nend\n\n\nScript.__index = Script\n\n\nfunction export.makeObject(code, data)\n\treturn data and setmetatable({ _rawData = data, _code = code }, Script) or nil\nend\n\n\nfunction export.getByCode(code)\n\
      \tif code == \"IPAchar\" then\n\t\trequire(\"Module:debug\").track(\"IPAchar\")\n\tend\n\treturn export.makeObject(code, mw.loadData(\"Module:scripts/data\")[code])\nend\n\nfunction export.getByCanonicalName(name)\n\tlocal code = mw.loadData(\"Module:scripts/by\
      \ name\")[name]\n\t\n\tif not code then\n\t\treturn nil\n\tend\n\t\n\treturn export.makeObject(code, mw.loadData(\"Module:scripts/data\")[code])\nend\n\n-- Find the best script to use, based on the characters of a string.\nfunction export.findBestScript(text,\
      \ lang)\n\tif not text or not lang or not lang.getScripts then\n\t\treturn export.getByCode(\"None\")\n\tend\n\t\n\tlocal scripts = lang:getScripts()\n\t\n\tif not scripts[2] then\n\t\treturn scripts[1]\n\tend\n\t\n\t--[=[\n\t\tRemove any HTML entities;\
      \ catfix function in [[Module:utilities]]\n\t\tadds tagging to a no-break space (&amp;nbsp;), which contains Latin characters;\n\t\thence Latin was returned as the script if \"Latn\" is one of the language's scripts.\n\t]=]\n\ttext = string.gsub(text,\
      \ \"&amp;[a-zA-Z0-9]+;\", \"\")\n\t\n\t-- Try to match every script against the text,\n\t-- and return the one with the most matching characters.\n\tlocal bestcount = 0\n\tlocal bestscript = nil\n\t\n\t-- Get length of text minus any spacing or punctuation\
      \ characters.\n\t-- Counting instances of UTF-8 character pattern is faster than mw.ustring.len.\n\tlocal _, length = string.gsub(mw.ustring.gsub(text, \"[%s%p]+\", \"\"), \"[\\1-\\127\\194-\\244][\\128-\\191]*\", \"\")\n\t\n\tif length == 0 then\n\t\t\
      return export.getByCode(\"None\")\n\tend\n\t\n\tfor i, script in ipairs(scripts) do\n\t\tlocal count = script:countCharacters(text)\n\t\t\n\t\tif count &gt;= length then\n\t\t\treturn script\n\t\tend\n\t\t\n\t\tif count &gt; bestcount then\n\t\t\tbestcount\
      \ = count\n\t\t\tbestscript = script\n\t\tend\n\tend\n\t\n\tif bestscript then\n\t\treturn bestscript\n\tend\n\t\n\t-- No matching script was found. Return \"None\".\n\treturn export.getByCode(\"None\")\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:28.213Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascripts%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=58317 t=1555362448070513
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:28 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 507027193, 646847872, 703497108
    body: !!binary |-
      
- recorded: 2019-04-15T21:07:27.815Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52547 t=1555362447680262
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 583284766, 260051382, 701371423
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3935515\" pageid=\"3935515\" ns=\"828\" title=\"Module:links\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T18:59:00Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\t[[Unsupported titles]] and pages with high\n\tmemory usage are listed at [[Module:links/data]].\n\t\n\tOther modules used:\n\t\t[[Module:script utilities]]\n\
      \t\t[[Module:scripts]]\n\t\t[[Module:languages]] and its submodules\n\t\t[[Module:gender and number]]\n\t\t[[Module:utilities]]\n\t\t[[Module:string]]\n\t\t[[Module:debug]]\n]=]\n\n-- These are prefixed with u to avoid confusion with the default string\
      \ methods\n-- of the same name.\nlocal usub = mw.ustring.sub\n\nlocal table_insert = table.insert\nlocal table_concat = table.concat\n\nlocal ignore_cap = {\n\t[\"ko\"] = true,\n}\n\nlocal phonetic_extraction = {\n\t[\"th\"] = \"Module:th\",\n\t[\"km\"\
      ] = \"Module:km\",\n}\n\nlocal pos_tags = {\n\t[\"a\"] = \"adjective\",\n\t[\"adv\"] = \"adverb\",\n\t[\"int\"] = \"interjection\",\n\t[\"n\"] = \"noun\",\n\t[\"pron\"] = \"pronoun\",\n\t[\"v\"] = \"verb\",\n\t[\"vi\"] = \"intransitive verb\",\n\t[\"vt\"\
      ] = \"transitive verb\",\n\t[\"vti\"] = \"transitive and intransitive verb\",\n}\n\nlocal unsupported_titles\nfunction export.getLinkPage(target, lang)\n\tunsupported_titles = unsupported_titles or mw.loadData(\"Module:links/data\").unsupported_titles\n\
      \tif unsupported_titles[target] then\n\t\treturn \"Unsupported titles/\" .. unsupported_titles[target]\n\tend\n\t\n\t-- If the link contains unexpanded template parameters, then don't create a link.\n\tif target:find(\"{{{\") then\n\t\treturn nil\n\tend\n\
      \t\n\tif target:sub(1, 1) == \":\" or target:sub(1, 2) == \"w:\" or target:sub(1, 10) == \"wikipedia:\" then\n\t\treturn target\n\tend\n\t\n\t-- Remove diacritics from the page name\n\ttarget = lang:makeEntryName(target)\n\t\n\tif target:sub(1, 1) == \"\
      /\" then\n\t\treturn \":\" .. target\n\t\n\t-- Link to appendix for reconstructed terms and terms in appendix-only languages\n\telseif target:sub(1, 1) == \"*\" and #target &gt; 1 then\n\t\tif lang:getCode() == \"und\" then\n\t\t\treturn nil\n\t\tend\n\
      \t\t\n\t\ttarget = \"Reconstruction:\" .. lang:getCanonicalName() .. \"/\" .. usub(target, 2)\n\telseif lang:getType() == \"reconstructed\" then\n\t\terror(\"The specified language \" .. lang:getCanonicalName()\n\t\t\t.. \" is unattested, while the given\
      \ word is not marked with '*' to indicate that it is reconstructed\")\n\telseif lang:getType() == \"appendix-constructed\" then\n\t\ttarget = \"Appendix:\" .. lang:getCanonicalName() .. \"/\" .. target\n\tend\n\t\n\treturn target\nend\n\n-- Make a language-specific\
      \ link from given link's parts\nlocal function makeLangLink(link, lang, id, allowSelfLink)\n\t-- Temporary tracking code\n\tlocal langCode = lang:getCode()\n\tif langCode == \"se\" or langCode == \"sia\" or langCode:find(\"^sm[ajns]$\")\n\t\t\tor langCode:find(\"\
      ^sj[dektu]$\") then\n\t\tif link.display and link.display:find(\"'\") then\n\t\t\trequire(\"Module:debug\").track(\"links/Sami apostrophe display\")\n\t\telseif link.target and link.target:find(\"'\") then\n\t\t\trequire(\"Module:debug\").track(\"links/Sami\
      \ apostrophe target\")\n\t\tend\n\tend\n\t\n\t-- Find fragments (when link didn't come from parseLink).\n\t-- Prevents {{l|en|word#Etymology 2|word}} from linking to [[word#Etymology 2#English]].\n\tif link.fragment == nil then\n\t\t-- Replace numeric\
      \ character references with the corresponding character (&amp;#29; → '),\n\t\t-- as they contain #, which causes the numeric character reference to be\n\t\t-- misparsed (wa'a → wa&amp;#29;a → pagename wa&amp;, fragment 29;a).\n\t\tlink.target = link.target:gsub(\"\
      &amp;#(%d+);\",\n\t\t\tfunction(number) return mw.ustring.char(tonumber(number)) end)\n\t\tlocal first, second = link.target:match(\"^([^#]+)#(.+)$\")\n\t\tif first then\n\t\t\tlink.target, link.fragment = first, second\n\t\tend\n\tend\n\t\n\t-- If there\
      \ is no display form, then create a default one\n\tif not link.display then\n\t\tlink.display = link.target\n\t\t\n\t\t-- Strip the prefix from the displayed form\n\t\t-- TODO: other interwiki links?\n\t\tif link.display:sub(1, 1) == \":\" and not mw.loadData(\"\
      Module:links/data\").unsupported_titles[link.display] then\n\t\t\tlink.display = link.display:sub(2) -- remove colon from beginning\n\t\telse\n\t\t\tlocal prefix = link.display:match(\"^([^:]+):\")\n\t\t\tlocal prefixes = {\n\t\t\t\tw = true,\n\t\t\t\t\
      wikipedia = true,\n\t\t\t}\n\t\t\t\n\t\t\tif prefixes[prefix] then\n\t\t\t\tlink.display = link.display:sub(#prefix + 2) -- remove prefix plus colon\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Process the target\n\tlink.target = export.getLinkPage(link.target,\
      \ lang)\n\t\n\tif not link.target then\n\t\treturn link.display\n\tend\n\t\n\t-- If the target is the same as the current page and there is no sense id\n\t-- and linking to the same page hasn't been turned on, then return a \"self-link\"\n\t-- like the\
      \ software does.\n\tif not (allowSelfLink or id) and link.target:gsub(\"^:\", \"\") == mw.title.getCurrentTitle().prefixedText then\n\t\treturn \"&lt;strong class=\\\"selflink\\\"&gt;\" .. link.display .. \"&lt;/strong&gt;\"\n\tend\n\t\n\t--[[\n\t\tAdd\
      \ fragment\n\t\tDo not add a section link to \"Undetermined\", as such sections do not exist and are invalid.\n\t\tTabbedLanguages handles links without a section by linking to the \"last visited\" section,\n\t\tbut adding \"Undetermined\" would break\
      \ that feature.\n\t\tFor localized prefixes that make syntax error, please use the format: [\"xyz\"] = true,\n\t]]\n\tlocal prefix = link.target:match(\"^:?([^:]+):\")\n\tlocal prefixes = {\n\t\tw = true,\n\t\twikipedia = true,\n\t\tCategory = true,\n\t\
      }\n\t\n\tif not prefixes[prefix] then\n\t\tif link.fragment or link.target:find(\"#$\") then\n\t\t\trequire(\"Module:debug\").track {\n\t\t\t\t\"links/fragment\",\n\t\t\t\t\"links/fragment/\" .. lang:getCode()\n\t\t\t}\n\t\tend\n\t\t\n\t\tif not link.fragment\
      \ and lang:getCode() ~= \"und\" then\n\t\t\tif id then\n\t\t\t\tlink.fragment = require(\"Module:utilities\").make_id(lang, id)\n\t\t\telseif not mw.ustring.find(link.target, \"^Appendix:\")\n\t\t\t\t\tand not mw.ustring.find(link.target, \"^Reconstruction:\"\
      ) then\n\t\t\t\tlink.fragment = lang:getCanonicalName()\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- This allows linking to pages like [[sms:a]] without it being treated weirdly.\n\t\tlink.target = link.target:gsub(\":\", \"&amp;#x3a;\")\n\tend\n\t\n\treturn \"[[\"\
      \ .. link.target .. (link.fragment and \"#\" .. link.fragment or \"\") .. \"|\" .. link.display .. \"]]\"\nend\n\n\n-- Split a link into its parts\nlocal function parseLink(linktext)\n\tlocal link = { target = linktext }\n\tlocal first, second = link.target:match(\"\
      ^([^|]+)|(.+)$\")\n\t\n\tif first then\n\t\tlink.target = first\n\t\tlink.display = second\n\telse\n\t\tlink.display = link.target\n\tend\n\t\n\tfirst, second = link.target:match(\"^(.+)#(.+)$\")\n\t\n\tif first then\n\t\tlink.target = first\n\t\tlink.fragment\
      \ = second\n\telse\n\t\t-- So that makeLangLink does not look for a fragment again\n\t\tlink.fragment = false\n\tend\n\t\n\treturn link\nend\n\n\n-- Creates a basic wikilink to the given term. If the text already contains\n-- links, these are replaced\
      \ with links to the correct section.\nfunction export.language_link(data, allowSelfLink, dontLinkRecons)\n\tif type(data) ~= \"table\" then\n\t\terror(\"The first argument to the function language_link must be a table. See Module:links/documentation for\
      \ more information.\")\n\tend\n\t\n\tlocal text = data.term\n\t\n\tif ignore_cap[data.lang:getCode()] and text then\n\t\ttext = text:gsub(\"%^\", \"\")\n\tend\n\t\n\t-- If the text begins with * and another character,\n\t-- then act as if each link begins\
      \ with *\n\tlocal allReconstructed = false\n\t\n\tif text:find(\"^*.\") then\n\t\tallReconstructed = true\n\tend\n\t\n\t-- Do we have embedded wikilinks?\n\tif text:find(\"[[\", nil, true) then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/links/alt-ignored]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/links/id-ignored]]\n\t\t]=]\n\t\t\n\t\tif data.alt then\n\t\t\trequire(\"Module:debug\").track(\"links/alt-ignored\")\n\t\t\tmw.log(\"(from Module:links)\", \"text with embedded wikilinks:\", text,\n\t\t\t\t\
      \"ignored alt:\", data.alt, \"lang:\", data.lang:getCode())\n\t\tend\n\t\t\n\t\tif data.id then\n\t\t\trequire(\"Module:debug\").track(\"links/id-ignored\")\n\t\t\tmw.log(\"(from Module:links)\", \"text with embedded wikilinks:\", text,\n\t\t\t\t\"ignored\
      \ id:\", data.id, \"lang:\", data.lang:getCode())\n\t\tend\n\t\t\n\t\t-- Begins and ends with a wikilink tag\n\t\tif text:find(\"^%[%[(.+)%]%]$\") then\n\t\t\t-- There are no [ ] in between.\n\t\t\t-- This makes the wikilink tag redundant.\n\t\t\tif text:find(\"\
      ^%[%[[^%[%]]+%]%]$\") then\n\t\t\t\trequire(\"Module:debug\").track(\"links/redundant wikilink\")\n\t\t\telse\n\t\t\t\tlocal temp = text:gsub(\"^%[%[(.+)%]%]$\", \"%1\")\n\t\t\t\ttemp = temp:gsub(\"%]%], %[%[\", \"|\")\n\t\t\t\t\n\t\t\t\tif not temp:find(\"\
      [%[%]]\") then\n\t\t\t\t\trequire(\"Module:debug\").track(\"links/list\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\ttext = text:gsub(\"%[%[([^%]]+)%]%]\",\n\t\t\tfunction(linktext)\n\t\t\t\tlocal link = parseLink(linktext)\n\t\t\t\t\n\t\t\t\tif allReconstructed\
      \ then\n\t\t\t\t\tlink.target = \"*\" .. link.target\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\treturn makeLangLink(link, data.lang, data.id, allowSelfLink, dontLinkRecons)\n\t\t\tend)\n\t\t\n\t\t-- Remove the extra * at the beginning if it's immediately followed\n\
      \t\t-- by a link whose display begins with * too\n\t\tif allReconstructed then\n\t\t\ttext = text:gsub(\"^%*%[%[([^|%]]+)|%*\", \"[[%1|*\")\n\t\tend\n\telse\n\t\t-- There is no embedded wikilink, make a link using the parameters.\n\t\ttext = makeLangLink({\
      \ target = text, display = data.alt }, data.lang, data.id, allowSelfLink, dontLinkRecons)\n\tend\n\t\n\treturn text\nend\n\nfunction export.mark(text, itemType, face, lang)\n\tlocal tag = { \"\", \"\" }\n\t\n\tif itemType == \"gloss\" then\n\t\ttag = {\
      \ '&lt;span class=\"mention-gloss-double-quote\"&gt;“&lt;/span&gt;&lt;span class=\"mention-gloss\"&gt;',\n\t\t\t'&lt;/span&gt;&lt;span class=\"mention-gloss-double-quote\"&gt;”&lt;/span&gt;' }\n\telseif itemType == \"tr\" then\n\t\tif face == \"term\"\
      \ then\n\t\t\ttag = { '&lt;span lang=\"' .. lang:getCode() .. '\" class=\"tr mention-tr Latn\"&gt;',\n\t\t\t\t'&lt;/span&gt;' }\n\t\telse\n\t\t\ttag = { '&lt;span lang=\"' .. lang:getCode() .. '\" class=\"tr Latn\"&gt;', '&lt;/span&gt;' }\n\t\tend\n\t\
      elseif itemType == \"ts\" then\n\t\ttag = { '&lt;span class=\"ts mention-ts Latn\"&gt;/', '/&lt;/span&gt;' }\n\telseif itemType == \"pos\" then\n\t\ttag = { '&lt;span class=\"ann-pos\"&gt;', '&lt;/span&gt;' }\n\telseif itemType == \"annotations\" then\n\
      \t\ttag = { '&lt;span class=\"mention-gloss-paren annotation-paren\"&gt;(&lt;/span&gt;',\n\t\t\t'&lt;span class=\"mention-gloss-paren annotation-paren\"&gt;)&lt;/span&gt;' }\n\tend\n\t\n\tif type(text) == \"string\" then\n\t\treturn tag[1] .. text .. tag[2]\n\
      \telse\n\t\treturn \"\"\n\tend\nend\n\n-- Format the annotations (things following the linked term)\nfunction export.format_link_annotations(data, face)\n\tlocal output = {}\n\t\n\t-- Interwiki link\n\tif data.interwiki then\n\t\ttable_insert(output, data.interwiki)\n\
      \tend\n\t\n\t-- Genders\n\tif type(data.genders) ~= \"table\" then\n\t\tdata.genders = { data.genders }\n\tend\n\t\n\tif data.genders and #data.genders &gt; 0 then\n\t\tlocal m_gen = require(\"Module:gender and number\")\n\t\ttable_insert(output, \"&amp;nbsp;\"\
      \ .. m_gen.format_list(data.genders, data.lang))\n\tend\n\t\n\tlocal annotations = {}\n\t\n\t-- Transliteration and transcription\n\tif data.tr or data.ts then\n\t\tlocal kind\n\t\tif face == \"term\" then\n\t\t\tkind = face\n\t\telse\n\t\t\tkind = \"\
      default\"\n\t\tend\n\t\t\n\t\tif data.tr and data.ts then\n\t\t\ttable_insert(annotations,\n\t\t\t\trequire(\"Module:script utilities\").tag_translit(data.tr, data.lang, kind)\n\t\t\t\t.. \" \" .. export.mark(data.ts, \"ts\"))\n\t\telseif data.ts then\n\
      \t\t\ttable_insert(annotations, export.mark(data.ts, \"ts\"))\n\t\telse\n\t\t\ttable_insert(annotations,\n\t\t\t\trequire(\"Module:script utilities\").tag_translit(data.tr, data.lang, kind))\n\t\tend\n\tend\n\t\n\t-- Gloss/translation\n\tif data.gloss\
      \ then\n\t\ttable_insert(annotations, export.mark(data.gloss, \"gloss\"))\n\tend\n\t\n\t-- Part of speech\n\tif data.pos then\n\t\t-- debug category for pos= containing transcriptions\n\t\tif data.pos:find(\"/[^&gt;&lt;]*/\") then\n\t\t\tdata.pos = data.pos\
      \ .. \"[[Category:links likely containing transcriptions in pos]]\"\n\t\tend\n\n\t\ttable_insert(annotations, export.mark(pos_tags[data.pos] or data.pos, \"pos\"))\n\tend\n\t\n\t-- Literal/sum-of-parts meaning\n\tif data.lit then\n\t\ttable_insert(annotations,\
      \ \"literally \" .. export.mark(data.lit, \"gloss\"))\n\tend\n\t\n\tif #annotations &gt; 0 then\n\t\ttable_insert(output, \" \" .. export.mark(table_concat(annotations, \", \"), \"annotations\"))\n\tend\n\t\n\treturn table_concat(output)\nend\n\n-- A version\
      \ of {{l}} or {{m}} that can be called from other modules too\nfunction export.full_link(data, face, allowSelfLink, dontLinkRecons)\n\tif type(data) ~= \"table\" then\n\t\terror(\"The first argument to the function full_link must be a table. \"\n\t\t\t\
      .. \"See Module:links/documentation for more information.\")\n\tend\n\t\n\t-- Create the link\n\tlocal output = {}\n\tlocal categories = {}\n\tlocal link = \"\"\n\tlocal annotations\n\t\n\t--local m_utilities = require(\"Module:utilities\")\n\t\n\t-- Is\
      \ there any text to show?\n\tif (data.term or data.alt) then\n\t\t-- Try to detect the script if it was not provided\n\t\tif not data.sc then\n\t\t\tdata.sc = require(\"Module:scripts\").findBestScript(data.alt or data.term, data.lang)\n\t\telse\n\t\t\t\
      -- Track uses of sc parameter\n\t\t\tlocal best = require(\"Module:scripts\").findBestScript(data.alt or data.term, data.lang)\n\t\t\trequire(\"Module:debug\").track(\"links/sc\")\n\t\t\t\n\t\t\tif data.sc:getCode() == best:getCode() then\n\t\t\t\trequire(\"\
      Module:debug\").track(\"links/sc/redundant\")\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/redundant/\" .. data.sc:getCode())\n\t\t\telse\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/needed\")\n\t\t\t\trequire(\"Module:debug\").track(\"links/sc/needed/\"\
      \ .. data.sc:getCode())\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal class = \"\"\n\t\t\n\t\tif data.accel then\n\t\t\tlocal form = data.accel.form and data.accel.form .. \"-form-of\" or \"\"\n\t\t\tlocal gender = data.accel.gender and \"gender-\" .. data.accel.gender\
      \ or \"\"\n\t\t\tlocal translit = data.accel.translit and \"transliteration-\" .. data.accel.translit or \"\"\n\t\t\t-- This is decoded again by [[WT:ACCEL]].\n\t\t\tlocal lemma = data.accel.lemma and \"origin-\" .. data.accel.lemma:gsub(\"%%\", \".\"\
      ):gsub(\" \", \"_\") or \"\" \n\t\t\tlocal lemma_translit = data.accel.lemma_translit and \"origin-transliteration-\" .. data.accel.lemma_translit or \"\"\n\t\t\tlocal no_store = data.accel.no_store and \"form-of-nostore\" or \"\"\n\t\t\t\n\t\t\taccel\
      \ =\n\t\t\t\tform .. \" \" ..\n\t\t\t\tgender .. \" \" ..\n\t\t\t\ttranslit .. \" \" ..\n\t\t\t\tlemma .. \" \" ..\n\t\t\t\tlemma_translit .. \" \" ..\n\t\t\t\tno_store .. \" \"\n\t\t\t\n\t\t\tclass = \"form-of lang-\" .. data.lang:getCode() .. \" \" ..\
      \ accel\n\t\tend\n\t\t\n\t\t-- Only make a link if the term has been given, otherwise just show the alt text without a link\n\t\tlink = require(\"Module:script utilities\").tag_text(\n\t\t\tdata.term and export.language_link(data, allowSelfLink, dontLinkRecons)\n\
      \t\t\tor data.alt, data.lang, data.sc, face, class)\n\telse\n\t\t--[[\tNo term to show.\n\t\t\t\tIs there at least a transliteration we can work from?\t]]\n\t\tlink = require(\"Module:script utilities\").request_script(data.lang, data.sc)\n\t\t\n\t\tif\
      \ link == \"\" or not data.tr or data.tr == \"-\" then\n\t\t\t-- No link to show, and no transliteration either. Show a term request.\n\t\t\tlocal category = \"\"\n\t\t\t\n\t\t\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\t\t\ttable_insert(categories,\
      \ \"[[Category:\" .. data.lang:getCanonicalName() .. \" term requests]]\")\n\t\t\tend\n\t\t\t\n\t\t\tlink = \"&lt;small&gt;[Term?]&lt;/small&gt;\"\n\t\tend\n\tend\n\t\n\ttable_insert(output, link)\n\t\n\tif data.tr == \"\" or data.tr == \"-\" then\n\t\t\
      data.tr = nil\n\t\n\telseif phonetic_extraction[data.lang:getCode()] then\n\t\tlocal m_phonetic = require(phonetic_extraction[data.lang:getCode()])\n\t\tdata.tr = data.tr or m_phonetic.getTranslit(export.remove_links(data.term))\n\t\n\telseif (data.term\
      \ or data.alt) and not data.sc:getCode():find(\"Lati?n\") then\n\t\t\n\t\t-- Try to generate a transliteration, unless transliteration has been\n\t\t-- supplied and we are in a high-memory entry.\n\t\tif not (data.tr and mw.loadData(\"Module:links/data\"\
      ).high_memory_entries[mw.title.getCurrentTitle().text]) then\n\t\t\tlocal automated_tr = data.lang:transliterate(export.remove_links(data.alt or data.term), data.sc)\n\t\t\t\n\t\t\tif automated_tr then\n\t\t\t\tlocal manual_tr = data.tr\n\t\t\t\t\n\t\t\
      \t\tif manual_tr then\n\t\t\t\t\tif manual_tr == automated_tr then\n\t\t\t\t\t\ttable_insert(categories,\n\t\t\t\t\t\t\t\"[[Category:Terms with redundant transliterations]]\"\n\t\t\t\t\t\t\t\t\t.. \"[[Category:Terms with redundant transliterations/\" ..\
      \ data.lang:getCode() .. \"]]\")\n\t\t\t\t\telse\n\t\t\t\t\t\t-- Prevents Arabic root categories from flooding the tracking categories.\n\t\t\t\t\t\tif mw.title.getCurrentTitle().nsText ~= \"Category\" then\n\t\t\t\t\t\t\ttable_insert(categories,\n\t\t\
      \t\t\t\t\t\t\"[[Category:Terms with manual transliterations different from the automated ones]]\"\n\t\t\t\t\t\t\t\t\t\t.. \"[[Category:Terms with manual transliterations different from the automated ones/\" .. data.lang:getCode() .. \"]]\")\n\t\t\t\t\t\
      \tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif (not manual_tr) or data.lang:overrideManualTranslit() then\n\t\t\t\t\tdata.tr = automated_tr\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- Link to the transliteration entry for languages that\
      \ require this\n\tif data.tr and data.lang:link_tr() then\n\t\tdata.tr = export.language_link { lang = data.lang, term = data.tr }\n\tend\n\t\n\ttable_insert(output, export.format_link_annotations(data, face))\n\t\n\treturn table_concat(output) .. table_concat(categories)\n\
      end\n\n\n--[[\tStrips links: deletes category links,\n\t\tthe targets of piped links,\n\t\tand all double square brackets.\t\t\t]]\nfunction export.remove_links(text)\n\tif type(text) == \"table\" then\n\t\ttext = text.args[1]\n\tend\n\t\n\tif not text\
      \ or text == \"\" then\n\t\treturn \"\"\n\tend\n\t\n\ttext = mw.ustring.gsub(text, \"%[%[Category:[^|%]]-|?[^|%]]-%]%]\", \"\")\n\ttext = text:gsub(\"%[%[[^|%]]-|\", \"\")\n\ttext = text:gsub(\"%[%[\", \"\")\n\ttext = text:gsub(\"%]%]\", \"\")\n\t\n\t\
      return text\nend\n\nfunction export.english_links(text)\n\tlocal lang = require(\"Module:languages\").getByCode(\"en\")\n\t\n\t-- Parentheses around function call to remove second return value, the\n\t-- number of replacements.\n\treturn (text:gsub(\"\
      %[%[([^%]]+)%]%]\",\n\t\tfunction(linktext)\n\t\t\tlocal link = parseLink(linktext)\n\t\t\treturn makeLangLink(link, lang, nil, true, false)\n\t\tend))\nend\n\nfunction export.light_link(data)\n\tlocal language_names = mw.loadData(\"Module:languages/code\
      \ to canonical name\")\n\tlocal script_codes = mw.loadData(\"Module:scripts/codes\")\n\t\n\tif data.langCode then\n\t\tdata.langName = language_names[data.langCode] or error('The language code \"' .. data.langCode .. '\" is not recognized.')\n\telse\n\t\
      \terror('Language code is required.')\n\tend\n\t\n\tif not data.term then\n\t\terror('Term to link to is required.')\n\tend\n\t\n\tif data.scCode then\n\t\tif not script_codes[data.scCode] then\n\t\t\terror('The script code \"' .. data.sc .. '\" is not\
      \ recognized.')\n\t\tend\n\telse\n\t\terror(\"The function light_link requires a script code.\")\n\tend\n\t\n\tlocal fragment\n\tif data.id then\n\t\tfragment = data.langName .. \"-\" .. mw.uri.encode(data.id, \"WIKI\")\n\telse\n\t\tfragment = data.langName\n\
      \tend\n\t\n\treturn table_concat {\n\t\t'&lt;span class=\"', data.scCode, '\" lang=\"', data.langCode,\n\t\t'\"&gt;[[', data.term, \"#\", fragment, \"|\", (data.alt or data.term), \"]]&lt;/span&gt;\"\n\t}\nend\n\n--[=[\n\tFor example, Norwegian_Bokm.C3.A5l\
      \ → Norwegian_Bokmål. 0xC3 and 0xA5 are the\n\thexadecimal-base representation of the two bytes used to encode the character\n\tå in the UTF-8 encoding:\n\t\t11000011 10100101\n\t\n\tNote that the bytes used to represent a character are actually different\
      \ from\n\tthe Unicode codepoint. For å, the codepoint is 0xE5. The bits (digits) that\n\tactually spell the codepoint are found in the brackets: 110[00011] 10[100101].\n\tFor further explanation, see [[w:UTF-8#Description]].\n]=]\n\n-- The character class\
      \ %x should not be used, as it includes the characters a-f,\n-- which do not occur in these anchor encodings.\nlocal capitalHex = \"[0-9A-F]\"\n\nlocal function decodeAnchor(anchor)\n\treturn (anchor:gsub(\"%.(\" .. capitalHex .. capitalHex .. \")\",\n\
      \t\tfunction(hexByte)\n\t\t\treturn string.char(tonumber(hexByte, 16))\n\t\tend))\nend\n\nfunction export.section_link(link)\n\tif type(link) ~= \"string\" then\n\t\terror(\"The first argument to section_link was a \" .. type(link) .. \", but it should\
      \ be a string.\")\n\tend\n\t\n\tlink = link:gsub(\"_\", \" \")\n\t\n\tlocal numberSigns = require(\"Module:string\").count(link, \"#\")\n\t\n\tif numberSigns &gt; 1 then\n\t\terror(\"The section link should only contain one number sign (#).\")\n\tend\n\
      \t\n\tlocal page, section = link:match(\"^([^#]+)#(.+)$\")\n\t\n\tif page and section then\n\t\tsection = decodeAnchor(section)\n\t\t\n\t\t-- URI-encode (percent-encode) section to allow square brackets, [],\n\t\t-- in section name. If not percent-encoded,\
      \ they prevent the parser from\n\t\t-- recognizing the link.\n\t\treturn table_concat { \"[[\", page, \"#\", mw.uri.encode(section, \"WIKI\"), \"|\", page, \" § \", section, \"]]\" }\n\telse\n\t\terror('The function \"' .. section_link .. '\" could not\
      \ find a number sign marking a section name.')\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:28.420Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=59325 t=1555362448302805
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:28 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1233.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 407233325, 556457777, 695552106
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4099100\" pageid=\"4099100\" ns=\"828\" title=\"Module:script utilities\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T16:56:29Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 52248476 by [[Special:Contributions/Rua|Rua]] ([[User talk:Rua|talk]])\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\tModules used:\n\t[[Module:script utilities/data]]\n\
      \t[[Module:scripts]]\n\t[[Module:languages]]\n\t[[Module:parameters]]\n\t[[Module:utilities]]\n\t[[Module:debug]]\n]=]\n\nfunction export.is_Latin_script(sc)\n\t-- Latn, Latf, Latinx, nv-Latn, pjt-Latn\n\treturn sc:getCode():find(\"Lat\") and true or false\n\
      end\n\n-- Used by [[Template:lang]]\nfunction export.lang_t(frame)\n\tparams = {\n\t\t[1] = {},\n\t\t[2] = { allow_empty = true, default = \"\" },\n\t\t[\"sc\"] = {},\n\t\t[\"face\"] = {},\n\t\t[\"class\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\t\n\tlocal lang = args[1] or (NAMESPACE == \"Template\" and \"und\") or error(\"Language code has not been specified. Please pass parameter 1 to the template.\"\
      )\n\tlang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, 1)\n\t\n\tlocal text = args[2]\n\t\n\tlocal sc = args[\"sc\"]\n\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\
      \" .. sc .. \"\\\" is not valid.\")) or nil)\n\t\n\tlocal face = args[\"face\"]\n\t\n\treturn export.tag_text(text, lang, sc, face, class)\nend\n\n-- Ustring turns on the codepoint-aware string matching. The basic string function\n-- should be used for\
      \ simple sequences of characters, Ustring function for\n-- sets – [].\nlocal function trackPattern(text, pattern, tracking, ustring)\n\tlocal find = ustring and mw.ustring.find or string.find\n\tif pattern and find(text, pattern) then\n\t\trequire(\"Module:debug\"\
      ).track(\"script/\" .. tracking)\n\tend\nend\n\nlocal function track(text, lang, sc)\n\tlocal U = mw.ustring.char\n\t\n\tif lang and text then\n\t\tlocal langCode = lang:getCode()\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/ang/acute]]\n\
      \t\tif langCode == \"ang\" then\n\t\t\tlocal decomposed = mw.ustring.toNFD(text)\n\t\t\tlocal acute = U(0x301)\n\t\t\t\n\t\t\ttrackPattern(decomposed, acute, \"ang/acute\")\n\t\t\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-phi]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-theta]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-kappa]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Greek/wrong-rho]]\n\t\t\tϑ, ϰ, ϱ, ϕ should generally\
      \ be replaced with θ, κ, ρ, φ.\n\t\t]=]\n\t\telseif langCode == \"el\" or langCode == \"grc\" then\n\t\t\ttrackPattern(text, \"ϑ\", \"Greek/wrong-theta\")\n\t\t\ttrackPattern(text, \"ϰ\", \"Greek/wrong-kappa\")\n\t\t\ttrackPattern(text, \"ϱ\", \"Greek/wrong-rho\"\
      )\n\t\t\ttrackPattern(text, \"ϕ\", \"Greek/wrong-phi\")\n\t\t\n\t\t\t--[=[\n\t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/spacing-coronis]]\n\t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/spacing-smooth-breathing]]\n\
      \t\t\t[[Special:WhatLinksHere/Template:tracking/script/Ancient Greek/wrong-apostrophe]]\n\t\t\t\tWhen spacing coronis and spacing smooth breathing are used as apostrophes, \n\t\t\t\tthey should be replaced with right single quotation marks (’).\n\t\t\t\
      ]=]\n\t\t\tif langCode == \"grc\" then\n\t\t\t\ttrackPattern(text, U(0x1FBD), \"Ancient Greek/spacing-coronis\")\n\t\t\t\ttrackPattern(text, U(0x1FBF), \"Ancient Greek/spacing-smooth-breathing\")\n\t\t\t\ttrackPattern(text, \"[\" .. U(0x1FBD) .. U(0x1FBF)\
      \ .. \"]\", \"Ancient Greek/wrong-apostrophe\", true)\n\t\t\tend\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/Russian/grave-accent]]\n\t\telseif langCode == \"ru\" then\n\t\t\tlocal decomposed = mw.ustring.toNFD(text)\n\t\t\t\n\t\t\t\
      trackPattern(decomposed, U(0x300), \"Russian/grave-accent\")\n\t\t\n\t\t-- [[Special:WhatLinksHere/Template:tracking/script/Tibetan/trailing-punctuation]]\n\t\telseif langCode == \"bo\" then\n\t\t\ttrackPattern(text, \"[་།]$\", \"Tibetan/trailing-punctuation\"\
      , true)\n\t\t\ttrackPattern(text, \"[་།]%]%]$\", \"Tibetan/trailing-punctuation\", true)\n\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/broken-ae]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/broken-am]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Thai/wrong-rue-lue]]\n\
      \t\t]=]\n\t\telseif langCode == \"th\" then\n\t\t\ttrackPattern(text, \"เ\"..\"เ\", \"Thai/broken-ae\")\n\t\t\ttrackPattern(text, \"ํ[่้๊๋]?า\", \"Thai/broken-am\", true)\n\t\t\ttrackPattern(text, \"[ฤฦ]า\", \"Thai/wrong-rue-lue\", true)\n\n\t\t--[=[\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/script/Lao/broken-ae]]\n\t\t[[Special:WhatLinksHere/Template:tracking/script/Lao/broken-am]]\n\t\t]=]\n\t\telseif langCode == \"lo\" then\n\t\t\ttrackPattern(text, \"ເ\"..\"ເ\", \"Lao/broken-ae\")\n\t\t\ttrackPattern(text,\
      \ \"ໍ[່້໊໋]?າ\", \"Lao/broken-am\", true)\n\t\tend\n\tend\nend\n\n-- Wrap text in the appropriate HTML tags with language and script class.\nfunction export.tag_text(text, lang, sc, face, class, id)\n\tif not sc then\n\t\tsc = require(\"Module:scripts\"\
      ).findBestScript(text, lang)\n\tend\n\t\n\ttrack(text, lang, sc)\n\t\t\n\t-- Replace space characters with newlines in Mongolian-script text, which is written top-to-bottom.\n\tif sc and sc:getDirection() == \"down\" then\n\t\t--[[\tFirst, escape targets\
      \ of wikilinks and HTML tags,\n\t\t\t\twhich should not have their spaces\n\t\t\t\treplaced with line breaks. ]]\n\t\tlocal escaped = {}\n\t\tlocal i = 0\n\t\tlocal escape_format = \"$%d\"\n\t\t\n\t\tlocal function escape(text, pattern, prefix)\n\t\t\t\
      return text:gsub(\n\t\t\t\tpattern,\n\t\t\t\tfunction(item)\n\t\t\t\t\ti = i + 1\n\t\t\t\t\tescaped[i] = item\n\t\t\t\t\treturn (prefix or \"\") .. escape_format:format(i)\n\t\t\t\tend)\n\t\tend\n\t\t\n\t\ttext = escape(text, \"%[%[([^|]+|)\", \"[[\")\n\
      \t\ttext = escape(text, \"&lt;[^&gt;]+&gt;\")\n\t\t\n\t\ttext = text:gsub(\" +\", \"&lt;br&gt;\")\n\t\t\n\t\t-- Unescape whatever was escaped.\n\t\ttext = text:gsub(\n\t\t\t\"$(%d)\",\n\t\t\tfunction(a)\n\t\t\t\ta = tonumber(a)\n\t\t\t\treturn escaped[a]\n\
      \t\t\tend\n\t\t)\n\tend\n\n\tif sc:getCode() == \"Imag\" then\n\t\tface = nil\n\tend\n\n\tlocal function class_attr(classes)\n\t\ttable.insert(classes, 1, sc:getCode())\n\t\tif class and class ~= '' then\n\t\t\ttable.insert(classes, class)\n\t\tend\n\t\
      \treturn 'class=\"' .. table.concat(classes, ' ') .. '\"'\n\tend\n\t\n\tlocal function tag_attr(...)\n\t\tlocal output = {}\n\t\tif id then\n\t\t\ttable.insert(output, 'id=\"' .. require(\"Module:utilities\").make_id(lang, id) .. '\"')\n\t\tend\n\t\t\n\
      \t\ttable.insert(output, class_attr({...}) )\n\t\t\n\t\tif lang then\n\t\t\ttable.insert(output, 'lang=\"' .. lang:getCode() .. '\"')\n\t\tend\n\t\t\n\t\treturn table.concat(output, \" \")\n\tend\n\t\n\tif face == \"hypothetical\" then\n\t-- [[Special:WhatLinksHere/Template:tracking/script-utilities/face/hypothetical]]\n\
      \t\trequire(\"Module:debug\").track(\"script-utilities/face/hypothetical\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").faces[face or \"nil\"]\n\t\n\tlocal post = \"\"\n\tif sc:getDirection() == \"rtl\" and (face == \"translation\"\
      \ or mw.ustring.find(text, \"%p$\")) then\n\t\tpost = \"&amp;lrm;\"\n\tend\n\t\n\t-- Add a script wrapper\n\tif data then\n\t\treturn ( data.prefix or \"\" ) .. '&lt;' .. data.tag .. ' ' .. tag_attr(data.class) .. '&gt;' .. text .. '&lt;/' .. data.tag\
      \ .. '&gt;' .. post\n\telse\n\t\terror('Invalid script face \"' .. face .. '\".')\n\tend\nend\n\nfunction export.tag_translit(translit, lang, kind, attributes, is_manual)\n\tif type(lang) == \"table\" then\n\t\tlang = lang.getCode and lang:getCode()\n\t\
      \t\tor error(\"Third argument to tag_translit should be a language code or language object.\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").translit[kind or \"default\"]\n\t\n\tlocal opening_tag = {}\n\t\n\ttable.insert(opening_tag,\
      \ data.tag)\n\tif lang == \"ja\" then\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. (is_manual and \"manual-tr \" or \"\") .. 'tr\"')\n\telse\n\t\ttable.insert(opening_tag, 'lang=\"' .. lang .. '-Latn\"\
      ')\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. (is_manual and \"manual-tr \" or \"\") .. 'tr Latn\"')\n\tend\n\t\n\tif data.dir then\n\t\ttable.insert(opening_tag, 'dir=\"' .. data.dir .. '\"')\n\tend\n\
      \t\n\ttable.insert(opening_tag, attributes)\n\t\n\treturn \"&lt;\" .. table.concat(opening_tag, \" \") .. \"&gt;\" .. translit .. \"&lt;/\" .. data.tag .. \"&gt;\"\nend\n\nfunction export.tag_transcription(transcription, lang, kind, attributes)\n\tif type(lang)\
      \ == \"table\" then\n\t\tlang = lang.getCode and lang:getCode()\n\t\t\tor error(\"Third argument to tag_translit should be a language code or language object.\")\n\tend\n\t\n\tlocal data = mw.loadData(\"Module:script utilities/data\").transcription[kind\
      \ or \"default\"]\n\t\n\tlocal opening_tag = {}\n\t\n\ttable.insert(opening_tag, data.tag)\n\tif lang == \"ja\" then\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. 'ts\"')\n\telse\n\t\ttable.insert(opening_tag,\
      \ 'lang=\"' .. lang .. '-Latn\"')\n\t\ttable.insert(opening_tag, 'class=\"' .. (data.classes and data.classes .. \" \" or \"\") .. 'ts Latn\"')\n\tend\n\t\n\tif data.dir then\n\t\ttable.insert(opening_tag, 'dir=\"' .. data.dir .. '\"')\n\tend\n\t\n\ttable.insert(opening_tag,\
      \ attributes)\n\t\n\treturn \"&lt;\" .. table.concat(opening_tag, \" \") .. \"&gt;\" .. transcription .. \"&lt;/\" .. data.tag .. \"&gt;\"\t\nend\n\n-- Add a notice to request the native script of a word\nfunction export.request_script(lang, sc)\n\tlocal\
      \ scripts = lang.getScripts and lang:getScripts() or error('The language \"' .. lang:getCode() .. '\" does not have the method getScripts. It may be unwritten.')\n\t\n\t-- By default, request for \"native\" script\n\tlocal cat_script = \"native\"\n\tlocal\
      \ disp_script = \"script\"\n\t\n\t-- If the script was not specified, and the language has only one script, use that.\n\tif not sc and #scripts == 1 then\n\t\tsc = scripts[1]\n\tend\n\t\n\t-- Is the script known?\n\tif sc then\n\t\t-- If the script is\
      \ Latin, return nothing.\n\t\tif export.is_Latin_script(sc) then\n\t\t\treturn \"\"\n\t\tend\n\t\t\n\t\tif sc:getCode() ~= scripts[1]:getCode() then\n\t\t\tdisp_script = sc:getCanonicalName()\n\t\tend\n\t\t\n\t\t-- The category needs to be specific to\
      \ script only if there is chance\n\t\t-- of ambiguity. This occurs when lang=und, or when the language has\n\t\t-- multiple scripts.\n\t\tif lang:getCode() == \"und\" or scripts[2] then\n\t\t\tcat_script = sc:getCanonicalName()\n\t\tend\n\telse\n\t\t--\
      \ The script is not known.\n\t\t-- Does the language have at least one non-Latin script in its list?\n\t\tlocal has_nonlatin = false\n\t\t\n\t\tfor i, val in ipairs(scripts) do\n\t\t\tif not export.is_Latin_script(val) then\n\t\t\t\thas_nonlatin = true\n\
      \t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- If there are non-Latin scripts, return nothing.\n\t\tif not has_nonlatin then\n\t\t\treturn \"\"\n\t\tend\n\tend\n\t\n\tlocal category = \"\"\n\t\n\tif mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\
      \t\tcategory = \"[[Category:\" .. lang:getCanonicalName() .. \" terms needing \" .. cat_script .. \" script]]\"\n\tend\n\t\n\treturn \"&lt;small&gt;[\" .. disp_script .. \" needed]&lt;/small&gt;\" .. category\nend\n\nfunction export.template_rfscript(frame)\n\
      \tlocal args = frame.args\n\tlocal lang = args[1] or error(\"The first parameter (language code) has not been given\")\n\tlocal sc = args[\"sc\"]; if sc == \"\" then sc = nil end\n\tlang = require(\"Module:languages\").getByCode(lang) or error(\"The language\
      \ code \\\"\" .. lang .. \"\\\" is not valid.\")\n\tsc = (sc and (require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil)\n\t\n\tlocal ret = export.request_script(lang, sc)\n\t\n\tif ret ==\
      \ \"\" then\n\t\terror(\"This language is written in the Latin alphabet. It does not need a native script.\")\n\telse\n\t\treturn ret\n\tend\nend\n\nfunction export.checkScript(text, scriptCode, result)\n\tlocal scriptObject = require(\"Module:scripts\"\
      ).getByCode(scriptCode)\n\t\n\tif not scriptObject then\n\t\terror('The script code \"' .. scriptCode .. '\" is not recognized.')\n\tend\n\t\n\tlocal originalText = text\n\t\n\t-- Remove non-letter characters.\n\ttext = mw.ustring.gsub(text, \"[%A]\",\
      \ \"\")\n\t\n\t-- Remove all characters of the script in question.\n\ttext = mw.ustring.gsub(text, \"[\" .. scriptObject:getCharacters() .. \"]\", \"\")\n\t\n\tif text ~= \"\" then\n\t\tif type(result) == \"string\" then\n\t\t\terror(result)\n\t\telse\n\
      \t\t\terror('The text \"' .. originalText .. '\" contains the letters \"' .. text .. '\" that do not belong to the ' .. scriptObject:getCategoryName() .. '.', 2)\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-09-17T18:47:45.246Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Arft-sense&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:45 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1066 miss (0), cp3007 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2862192290, 1306662339, 2666545460
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="914106" pageid="914106" ns="10" title="Template:rft-sense"><revisions><rev user="This, that and the other" timestamp="2014-07-13T06:35:26Z" comment="update link" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">&lt;span style=&quot;color:#777777&quot;&gt;([[Wiktionary:Tea room#{{{fragment|{{{section|{{PAGENAME}}}}}}}}|Discuss]]&lt;!--

       + Link
        --&gt;&lt;sup class=&quot;plainlinks&quot;&gt;([{{fullurle:Wiktionary:Tea room}}/{{CURRENTYEAR}}/{{CURRENTMONTHNAME}}?action=edit&amp;section=new&amp;preloadtitle={{urlencode:[[{{FULLPAGENAME}}]]}} +])&lt;/sup&gt;&lt;!--

      --&gt; this sense)&lt;/span&gt;&lt;includeonly&gt;{{#if:{{NAMESPACE}}||[[Category:Tea room]]}}{{#ifeq:{{{lang|en}}}|en||{{attention|{{{lang}}}|see Tea room discussion}}}}{{#if:{{{topic|}}}|[[Category:Entries needing topical attention]]}}&lt;/includeonly&gt;&lt;noinclude&gt;[[Category:Definition templates]][[Category:Request templates|rft-sense]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2015-09-17T18:24:26.824Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Afullurle%3AWiktionary%3ATea+room&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:24:26 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1055 miss (0), cp3030 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2081747742, 3880511348, 2660225858
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:fullurle:Wiktionary:Tea room" missing="" /></pages></query></api>
- recorded: 2015-09-17T18:47:45.436Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Acontext&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:45 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1065 miss (0), cp3005 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 19376299, 863981011, 2666546196
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="279373" pageid="279373" ns="10" title="Template:context"><revisions><rev user="CodeCat" timestamp="2014-04-08T13:36:35Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:labels/templates|show|compat=1}}&lt;!--

      --&gt;&lt;includeonly&gt;&lt;!--
      --&gt;{{#if:{{{lang|}}}||[[Category:Language code missing/context]]}}&lt;!--
      --&gt;&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:38.305Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44671 t=1555362458211244
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:38 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1343.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 493223285, 634279774, 696238316
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4393059\" pageid=\"4393059\" ns=\"828\" title=\"Module:labels/templates\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-31T04:12:12Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"when compat=1 in show(), allow language code in either lang= or 1=; otherwise only in lang=\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\tModules used:\n\t[[Module:labels]]\n\t\
      [[Module:parameters]]\n\t[[Module:utilities]]\n\t[[Module:languages]]\n\t[[Module:template_link]]\n]=]\n\nfunction export.show(frame)\n\tlocal parent_args = frame:getParent().args\n\tlocal compat = (frame.args[\"compat\"] or \"\") ~= \"\" and parent_args[\"\
      lang\"]\n\tlocal term_mode = (frame.args[\"term\"] or \"\") ~= \"\"\n\t\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {list = true},\n\t\t[\"nocat\"] = {type = \"boolean\"},\n\t\t[\"script\"] = {},\n\t\t[\"script2\"] = {},\n\t\t[\"sort\"\
      ] = {},\n\t\t[\"sort2\"] = {},\n\t}\n\t\n\tif compat then\n\t\tparams[1] = params[2]\n\t\tparams[2] = nil\n\t\tparams[\"lang\"] = {required = true}\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(parent_args, params)\n\t\n\t-- Gather\
      \ parameters\n\tlocal lang = args[compat and \"lang\" or 1]\n\tlocal labels = args[compat and 1 or 2]\n\tlocal nocat = args[\"nocat\"]\n\tlocal script = args[\"script\"]\n\tlocal script2 = args[\"script2\"]\n\tlocal sort_key = args[\"sort\"]\n\tlocal sort_key2\
      \ = args[\"sort2\"]\n\n\tif not lang then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tlang = \"und\"\n\t\telse\n\t\t\terror(\"Language code has not been specified. Please provide it to the template using the first parameter.\"\
      )\n\t\tend\n\tend\n\t\n\tlang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, compat and \"lang\" or 1)\n\t\n\treturn require(\"Module:labels\").show_labels(labels, lang, script, script2, sort_key, sort_key2,\
      \ nocat, term_mode)\nend\n\n--[[\ttemporary. intentionally undocumented.\n\t\tthis function is only to be used in\n\t\t{{alternative spelling of}},\n\t\t{{eye dialect of}}\n\t\tand similar templates\t\t\t\t\t]]\nfunction export.show_from(frame)\n\tlocal\
      \ m_labeldata = require('Module:labels/data')\n\t\n\tlocal froms = {}\n\tlocal categories = {}\n\tlocal args = frame:getParent().args\n\tlocal nocat = args[\"nocat\"]\n\tlocal lang = frame.args[\"lang\"] or args[\"lang\"] or args[1] or \"en\"\n\tlocal\
      \ limit = frame.args.limit and tonumber(frame.args.limit) or 99999\n\t\n\tlocal m_languages = require(\"Module:languages\")\n\tlang = m_languages.getByCode(lang) or m_languages.err(lang, \"lang\")\n\n\tlocal key, i = 'from', 1\n\twhile args[key] do\n\t\
      \tlocal k = args[key]\n\t\tk = m_labeldata.aliases[k] or k\n\t\tlocal data = m_labeldata.labels[k]\n\t\tlocal label = data and data.display or k\n\t\tlocal category1, category2\n\t\t\n\t\tif not nocat and data then\n\t\t\tif data.regional_categories then\n\
      \t\t\t\tfor j, cat in ipairs(data.regional_categories) do\n\t\t\t\t\tcategory1 = cat .. ' ' .. lang:getCanonicalName()\n\t\t\t\tend\n\t\t\tend\n\t\t\n\t\t\tif data.plain_categories then\n\t\t\t\tfor j, cat in ipairs(data.plain_categories) do\n\t\t\t\t\t\
      category2 = cat\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\t\ttable.insert(froms, label)\n\t\ttable.insert(categories, category1)\n\t\ttable.insert(categories, category2)\n\t\ti = i + 1\n\t\tif i &gt; limit then\n\t\t\tbreak\t\n\t\tend\n\t\tkey = 'from' .. i\n\
      \tend\n\t\n\tcategories = require(\"Module:utilities\").format_categories(categories, lang)\n\t\n\tif #froms == 0 then\n\t\treturn frame.args.default\n\tend\n\t\n\tif #froms == 2 then\n\t\treturn froms[1] .. \" and \" .. froms[2] .. categories\n\tend\n\
      \t\n\tlocal results = {}\n\tfor i, item in ipairs(froms) do\n\t\tif i == 1 then\n\t\t\t-- nothing\n\t\telseif i == #froms then\n\t\t\ttable.insert(results, '&lt;span class=\"serial-comma\"&gt;,&lt;/span&gt; &lt;span class=\"serial-and\"&gt; and&lt;/span&gt;\
      \ ')\n\t\telse\n\t\t\ttable.insert(results, ', ')\n\t\tend\n\t\t\n\t\ttable.insert(results, item)\n\tend\n\treturn table.concat(results) .. categories\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:38.488Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=36194 t=1555362458391986
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:38 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1226.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 920469558, 724949785, 695906769
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4073701\" pageid=\"4073701\" ns=\"828\" title=\"Module:labels\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-12-13T07:19:15Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"perhaps better: hide duplicate label only if it has categories; that will exclude the previously mentioned &quot;labels&quot;\" xml:space=\"preserve\">local m_labeldata = mw.loadData(\"Module:labels/data\"\
      )\nlocal m_utilities = require(\"Module:utilities\")\nlocal m_links = require(\"Module:links\")\n\nlocal export = {}\n\nlocal function show_categories(data, lang, script, sort_key, script2, sort_key2, term_mode)\n\tlocal categories = {}\n\tlocal categories2\
      \ = {}\n\t\n\tlocal lang_code = lang:getCode()\n\tlocal canonical_name = lang:getCanonicalName()\n\t\n\tlocal topical_categories = data.topical_categories or {}\n\tlocal sense_categories = data.sense_categories or {}\n\tlocal pos_categories = data.pos_categories\
      \ or {}\n\tlocal regional_categories = data.regional_categories or {}\n\tlocal plain_categories = data.plain_categories or {}\n\t\n\tfor i, cat in ipairs(topical_categories) do\n\t\ttable.insert(categories, lang_code .. \":\" .. cat)\n\t\t\n\t\tif script\
      \ then\n\t\t\ttable.insert(categories, lang_code .. \":\" .. cat .. \" in \" .. script .. \" script\")\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, lang_code .. \":\" .. cat .. \" in \" .. script2 .. \" script\")\n\t\tend\n\tend\n\
      \t\n\tfor i, cat in ipairs(sense_categories) do\n\t\tcat = (term_mode and cat .. \" terms\" ) or \"terms with \" .. cat .. \" senses\"\n\t\ttable.insert(categories, canonical_name .. \" \" .. cat)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories,\
      \ canonical_name .. \" \" .. cat .. \" in \" .. script .. \" script\")\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, canonical_name .. \" \" .. cat .. \" in \" .. script2 .. \" script\")\n\t\tend\n\tend\n\n\tfor i, cat in ipairs(pos_categories)\
      \ do\n\t\ttable.insert(categories, canonical_name .. \" \" .. cat)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories, canonical_name .. \" \" .. cat .. \" in \" .. script .. \" script\")\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2,\
      \ canonical_name .. \" \" .. cat .. \" in \" .. script2 .. \" script\")\n\t\tend\n\tend\n\t\n\tfor i, cat in ipairs(regional_categories) do\n\t\ttable.insert(categories, cat .. \" \" .. canonical_name)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories,\
      \ cat .. \" \" .. canonical_name .. \" in \" .. script .. \" script\")\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, cat .. \" \" .. canonical_name .. \" in \" .. script2 .. \" script\")\n\t\tend\n\tend\n\t\n\tfor i, cat in ipairs(plain_categories)\
      \ do\n\t\ttable.insert(categories, cat)\n\t\t\n\t\tif script then\n\t\t\ttable.insert(categories, cat .. \" in \" .. script .. \" script\")\n\t\tend\n\t\t\n\t\tif script2 then\n\t\t\ttable.insert(categories2, cat .. \" in \" .. script2 .. \" script\")\n\
      \t\tend\n\tend\n\t\n\treturn\tm_utilities.format_categories(categories, lang, sort_key) ..\n\t\t\tm_utilities.format_categories(categories2, lang, sort_key2)\nend\n\nfunction export.show_labels(labels, lang, script, script2, sort_key, sort_key2, nocat,\
      \ term_mode)\n\tif not labels[1] then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tlabels = {\"example\"}\n\t\telse\n\t\t\terror(\"You must specify at least one label.\")\n\t\tend\n\tend\n\t\n\t-- Show the labels\n\tlocal omit_preComma\
      \ = false\n\tlocal omit_postComma = true\n\tlocal omit_preSpace = false\n\tlocal omit_postSpace = true\n\t\n\tlocal lang_code = lang:getCode()\n\tlocal canonical_name = lang:getCanonicalName()\n\t\n\tlocal alias\n\tlocal already_seen = {}\n\t\n\tfor i,\
      \ label in ipairs(labels) do\n\t\tomit_preComma = omit_postComma\n\t\tomit_postComma = false\n\t\tomit_preSpace = omit_postSpace\n\t\tomit_postSpace = false\n\t\t\n\t\tlocal deprecated = false\n\t\tif m_labeldata.deprecated[label] then\n\t\t\tdeprecated\
      \ = true\n\t\tend\n\t\tif m_labeldata.aliases[label] then\n\t\t\talias = label\n\t\t\tlabel = m_labeldata.aliases[label]\n\t\tend\n\t\tif m_labeldata.deprecated[label] then\n\t\t\tdeprecated = true\n\t\tend\n\t\t\n\t\tlocal data = m_labeldata.labels[label]\
      \ or {}\n\t\t\n\t\tif data.track then\n\t\t\trequire(\"Module:debug\").track(\"labels/label/\" .. label)\n\t\tend\n\t\t\n\t\t--[=[\n\t\t\tDo not use the data in the table if the current language\n\t\t\tis not in the \"languages\" list.\n\t\t\t\n\t\t\t\
      If the original label was an alias, and was redirected to a label\n\t\t\twith a data file, go back to the original label.\n\t\t\t\n\t\t\tFor example, suppose the label \"Rome\" is used with the language code \"en\" (English).\n\t\t\t\"Rome\" redirects\
      \ to \"Romanesco\" in [[Module:labels/data/regional]].\n\t\t\tThe only language in the \"languages\" list is \"it\" (Italian).\n\t\t\tBecause the language code provided to the template was not \"it\",\n\t\t\tthe label's data file will not be used,\n\t\t\
      \tand the label will display as \"Rome\".\n\t\t\t\n\t\t\ttracking:\t[[Special:WhatLinksHere/Template:tracking/labels/incorrect-language]]\n\t\t\t\t\t\t[[Special:WhatLinksHere/Template:tracking/labels/redirect-undone]]\n\t\t]=]\n\t\tlocal languages = data.languages\n\
      \t\tif languages and not languages[lang_code] then\n\t\t\trequire(\"Module:debug\").track(\"labels/incorrect-language\")\n\t\t\tmw.log(\"incorrect language in label template \" .. lang_code .. \":\" .. label)\n\t\t\t\n\t\t\tif alias and label ~= alias\
      \ then\n\t\t\t\trequire(\"Module:debug\").track(\"labels/redirect-undone\")\n\t\t\t\tmw.log(\"redirect undone in label template \" .. lang_code .. \":\" .. label .. \" &gt; \" .. alias)\n\t\t\t\tlabel = alias\n\t\t\tend\n\t\t\t\n\t\t\tdata = {}\n\t\tend\n\
      \t\t\n\t\tif data.special_display then\n\t\t\tlocal function add_language_name(str)\n\t\t\t\tif str == \"canonical_name\" then\n\t\t\t\t\treturn canonical_name\n\t\t\t\telse\n\t\t\t\t\treturn \"\"\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tlabel = mw.ustring.gsub(data.special_display,\
      \ \"&lt;([^&gt;]+)&gt;\", add_language_name)\n\t\telse\n\t\t\t--[[\n\t\t\t\tIf data.glossary or data.Wikipedia are set to true, there is a glossary definition\n\t\t\t\twith an anchor identical to the label, or a Wikipedia article with a title\n\t\t\t\t\
      identical to the label.\n\t\t\t\t\tFor example, the code\n\t\t\t\t\t\tlabels[\"formal\"] = {\n\t\t\t\t\t\t\tglossary = true,\n\t\t\t\t\t\t}\n\t\t\t\t\tindicates that there is a glossary entry for \"formal\".\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\tOtherwise, data.glossary\
      \ and data.Wikipedia specify the title or the anchor.\n\t\t\t]]\n\t\t\tif data.glossary then\n\t\t\t\tlocal glossary_entry = type(data.glossary) == \"string\" and data.glossary or label\n\t\t\t\tlabel = \"[[Appendix:Glossary#\" .. glossary_entry .. \"\
      |\" .. ( data.display or label ) .. \"]]\"\n\t\t\telseif data.Wikipedia then\n\t\t\t\tWikipedia_entry = type(data.Wikipedia) == \"string\" and data.Wikipedia or label\n\t\t\t\tlabel = \"[[w:\" .. Wikipedia_entry .. \"|\" .. ( data.display or label ) ..\
      \ \"]]\"\n\t\t\telse\n\t\t\t\tlabel = data.display or label\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal omit_comma = omit_preComma or data.omit_preComma\n\t\tomit_postComma = data.omit_postComma\n\t\tlocal omit_space = omit_preSpace or data.omit_preSpace\n\t\t\
      omit_postSpace = data.omit_postSpace\n\t\t\n\t\tif deprecated then\n\t\t\tlabel = '&lt;span class=\"deprecated-label\"&gt;' .. label .. '&lt;/span&gt;'\n\t\t\tif not nocat then\n\t\t\t\tlabel = label .. m_utilities.format_categories({ \"Entries with deprecated\
      \ labels\" }, lang)\n\t\t\tend\n\t\tend\n\t\t\n\t\tlocal label_without_comma_or_space =\n\t\t\t(data.topical_categories or data.regional_categories\n\t\t\tor data.plain_categories or data.pos_categories\n\t\t\tor data.sense_categories) and label\n\t\t\t\
      or nil\n\t\t\n\t\tlabel = (omit_comma and \"\" or '&lt;span class=\"ib-comma\"&gt;,&lt;/span&gt;') ..\n\t\t\t\t(omit_space and \"\" or \"&amp;#32;\") ..\n\t\t\t\tlabel\n\t\t\n\t\t-- Track label text. If label text was previously used, don't show it,\n\t\
      \t-- but include the categories.\n\t\t-- For an example, see [[hypocretin]].\n\t\tif already_seen[label_without_comma_or_space] then\n\t\t\tlabels[i] = nocat and \"\" or\n\t\t\t\tshow_categories(data, lang, script, sort_key, script2, sort_key2, term_mode)\n\
      \t\telse\n\t\t\tlabels[i] = label .. (\n\t\t\t\tnocat and \"\" or\n\t\t\t\tshow_categories(data, lang, script, sort_key, script2, sort_key2, term_mode)\n\t\t\t)\n\t\tend\n\t\t\n\t\tif label_without_comma_or_space then\n\t\t\talready_seen[label_without_comma_or_space]\
      \ = true\n\t\tend\n\tend\n\t\n\treturn\n\t\t\"&lt;span class=\\\"ib-brac\\\"&gt;(&lt;/span&gt;&lt;span class=\\\"ib-content\\\"&gt;\" ..\n\t\ttable.concat(labels, \"\") ..\n\t\t\"&lt;/span&gt;&lt;span class=\\\"ib-brac\\\"&gt;)&lt;/span&gt;\"\nend\n\n\
      return export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:38.696Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53508 t=1555362458566691
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:38 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 570512085, 559234687, 688082348
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4077514\" pageid=\"4077514\" ns=\"828\" title=\"Module:labels/data\"><revisions><rev user=\"Mnemosientje\" timestamp=\"2019-04-10T19:23:30Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Reverted edits by [[Special:Contributions/User123o987name|User123o987name]]. If you think this rollback is in error, please leave a message on my talk page.\" xml:space=\"preserve\">local\
      \ labels = {}\nlocal aliases = {}\nlocal deprecated = {}\nlocal replacements = {\n\tlabels = {},\n\taliases = {},\n\tdeprecated = {},\n}\n\n\n--  Helper labels\n\nlabels['_'] = {\n\tdisplay = '',\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\n\n\
      labels['also'] = {\n\tomit_postComma = true,\n}\n\nlabels['and'] = {\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\naliases['&amp;'] = 'and'\n\nlabels['or'] = {\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\n\nlabels[';'] = {\n\tomit_preComma\
      \ = true,\n\tomit_postComma = true,\n\tomit_preSpace = true,\n}\n\n-- combine with 'except in', 'outside'? or retain for entries like \"wnuczę\"?\nlabels['except'] = {\n\tomit_preComma = true,\n\tomit_postComma = true,\n}\n\nlabels['outside'] = {\n\tomit_preComma\
      \ = true,\n\tomit_postComma = true,\n}\naliases['except in'] = 'outside'\n\n-- Qualifier labels\n\nlabels['chiefly'] = {\n\tomit_postComma = true,\n}\naliases['mainly'] = 'chiefly'\naliases['mostly'] = 'chiefly'\naliases['primarily'] = 'chiefly'\n\nlabels['especially']\
      \ = {\n\tomit_postComma = true,\n}\n\nlabels['particularly'] = {\n\tomit_postComma = true,\n}\n\nlabels['excluding'] = {\n\tomit_postComma = true,\n}\n\nlabels['extremely'] = {\n\tomit_postComma = true,\n}\n\nlabels['frequently'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['humorously'] = { omit_postComma = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"jocular terms\" },\n}\n\nlabels['including'] = {\n\tomit_postComma = true,\n\
      }\n\nlabels['many'] = {\n\tomit_postComma = true,\n} -- e.g. \"many dialects\"\n\nlabels['markedly'] = {\n\tomit_postComma = true,\n}\n\nlabels['mildly'] = {\n\tomit_postComma = true,\n}\n\nlabels['now'] = {\n\tomit_postComma = true,\n}\naliases['nowadays']\
      \ = 'now'\n\nlabels['of'] = {\n\tomit_postComma = true,\n}\n\nlabels['of a'] = {\n\tomit_postComma = true,\n}\n\nlabels['of an'] = {\n\tomit_postComma = true,\n}\n\nlabels['often'] = {\n\tomit_postComma = true,\n}\n\nlabels['originally'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['possibly'] = {\n\tomit_postComma = true,\n}\n-- aliases['perhaps'] = 'possibly'\n\nlabels['rarely'] = {\n\tomit_postComma = true,\n}\n\nlabels['slightly'] = {\n\tomit_postComma = true,\n}\n\nlabels['sometimes'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['somewhat'] = {\n\tomit_postComma = true,\n}\n\nlabels['strongly'] = {\n\tomit_postComma = true,\n}\n\nlabels['then'] = {\n\tomit_postComma = true,\n} -- e.g. \"then colloquial, now dated\"\n\nlabels['typically'] = {\n\tomit_postComma\
      \ = true,\n}\n\nlabels['usually'] = {\n\tomit_postComma = true,\n}\n\nlabels['very'] = {\n\tomit_postComma = true,\n}\n\n\n-- Grammatical labels\n\nlabels[\"abbreviation\"] = {\n\tdisplay = \"[[abbreviation]]\",\n\tpos_categories = { \"abbreviations\"\
      \ },\n}\n\nlabels[\"acronym\"] = {\n\tdisplay = \"[[acronym]]\",\n\tpos_categories = { \"acronyms\" },\n}\n\nlabels[\"active\"] = {\n\tWikipedia = \"Active voice\",\n}\naliases[\"active voice\"] = \"active\"\naliases[\"in the active\"] = \"active\"\n\n\
      labels[\"ambitransitive\"] = {\n\tdisplay = \"[[transitive]], [[intransitive]]\",\n\tpos_categories = { \"transitive verbs\", \"intransitive verbs\" },\n}\n\nlabels[\"archaic-verb-form\"] = {\n\tglossary = \"archaic\",\n\tpos_categories = { \"archaic verb\
      \ forms\" },\n}\n\nlabels[\"attributive\"] = {\n\tdisplay = \"[[Appendix:English nouns#Attributive|attributive]]\",\n}\n\nlabels[\"attributively\"] = {\n\tdisplay = \"[[Appendix:English nouns#Attributive|attributively]]\",\n}\n\nlabels[\"auxiliary\"] =\
      \ {\n\tglossary = true,\n\tpos_categories = { \"auxiliary verbs\" }\n}\n\nlabels[\"by ellipsis\"] = {\n\tdisplay = \"by [[ellipsis]]\",\n\tpos_categories = { \"ellipses\" },\n}\n\nlabels[\"by extension\"] = {}\n\nlabels[\"cardinal\"] = {\n\tdisplay = \"\
      [[cardinal number|cardinal]]\",\n\tpos_categories = { \"cardinal numbers\" },\n}\ndeprecated[\"cardinal\"] = true\n\nlabels[\"causative\"] = {\n\tdisplay = \"[[causative]]\" }\n\nlabels[\"cognate object\"] = {\n\tdisplay = \"with [[w:Cognate object|cognate\
      \ object]]\",\n\tpos_categories = { \"verbs used with cognate objects\" },\n}\naliases[\"with cognate object\"] = \"cognate object\"\n\nlabels[\"collective\"] = {\n\tglossary = true,\n\tdisplay = \"collective\",\n\tpos_categories = { \"collective nouns\"\
      \ },\n}\n\nlabels[\"collectively\"] = {\n\tdisplay = \"collectively\",\n\tpos_categories = { \"collective nouns\" },\n}\n\nlabels[\"control verb\"] = {\n\tWikipedia = true,\n\tpos_categories = { \"control verbs\" },\n}\naliases[\"control\"] = \"control\
      \ verb\"\n\nlabels[\"common\"] = {\n\tglossary = true\n}\n\nlabels[\"comparable\"] = {\n\tglossary = true\n}\n\nlabels[\"copulative\"] = {\n\tdisplay = \"[[copular verb|copulative]]\",\n\tpos_categories = { \"copulative verbs\" },\n}\naliases[\"copular\"\
      ] = \"copulative\"\n\nlabels[\"countable\"] = {\n\tglossary = true,\n\tpos_categories = { \"countable nouns\" },\n}\n\nlabels[\"ditransitive\"] = {\n\tglossary = true,\n\tpos_categories = { \"ditransitive verbs\" },\n}\n\nlabels[\"dysphemistic\"] = {\n\
      \twikipedia = \"Dysphemism\",\n\tpos_categories = { \"dysphemisms\" },\n}\naliases[\"dysphemism\"] = \"dysphemistic\"\n\nlabels[\"emphatic\"] = {\n\tglossary = true\n}\n\nlabels[\"ergative\"] = {\n\tglossary = true,\n\tpos_categories = { \"ergative verbs\"\
      \ },\n}\n\nlabels[\"feminine\"] = {\n\tglossary = true\n}\n\nlabels[\"focus\"] = {\n\tglossary = true,\n\tpos_categories = { \"focus adverbs\" },\n}\n\nlabels[\"fractional\"] = {\n\tpos_categories = { \"fractional numbers\" },\n}\n\nlabels[\"hedge\"] =\
      \ {\n\tglossary = true,\n\tpos_categories = { \"hedges\" },\n}\naliases[\"hedges\"] = \"hedge\"\n\nlabels[\"ideophonic\"] = {\n\tglossary = true,\n}\naliases[\"ideophone\"] = \"ideophonic\"\n\nlabels[\"idiomatic\"] = {\n\tglossary = true,\n\tpos_categories\
      \ = { \"idioms\" },\n}\naliases[\"idiom\"] = \"idiomatic\"\n\nlabels[\"impersonal\"] = {\n\tglossary = true,\n\tpos_categories = { \"impersonal verbs\" },\n}\n\nlabels[\"in the singular\"] = {\n\tdisplay = \"in the [[singular]]\",\n}\naliases[\"in singular\"\
      ] = \"in the singular\"\n\nlabels[\"in the dual\"] = {\n\tdisplay = \"in the [[dual]]\",\n}\naliases[\"in dual\"] = \"in the dual\"\n\nlabels[\"in the plural\"] = {\n\tdisplay = \"in the [[Appendix:Glossary#plural|plural]]\",\n}\naliases[\"in plural\"\
      ] = \"in the plural\"\n\nlabels[\"in the mediopassive\"] = {\n\tdisplay = \"in the [[mediopassive]]\" }\naliases[\"in mediopassive\"] = \"in the mediopassive\"\naliases[\"mediopassive\"] = \"in the mediopassive\"\n\nlabels[\"inanimate\"] = {\n\tglossary\
      \ = true\n}\n\naliases[\"indef\"] = \"indefinite\"\n\nlabels[\"initialism\"] = {\n\tdisplay = \"[[initialism]]\",\n\tpos_categories = { \"initialisms\" },\n}\n\nlabels[\"intransitive\"] = {\n\tglossary = true,\n\tpos_categories = { \"intransitive verbs\"\
      \ },\n}\n\n-- Japanese inflecting suffixes\nlabels[\"jodōshi\"] = {\n\tdisplay = \"[[助動詞#Japanese|jodōshi]]\",\n\tpos_categories = { \"auxiliary verbs in traditional grammar\" },\n}\n\naliases[\"jodoshi\"] = \"jodōshi\"\naliases[\"jodoushi\"] = \"jodō\
      shi\"\n\nlabels[\"not comparable\"] = {\n\tdisplay = \"[[Appendix:Glossary#uncomparable|not comparable]]\"\n}\naliases[\"notcomp\"] = \"not comparable\"\naliases[\"uncomparable\"] = \"not comparable\"\n\nlabels[\"masculine\"] = {\n\tglossary = true\n}\n\
      \nlabels[\"middle\"] = {\n\tWikipedia = \"Voice (grammar)#Middle\",\n}\naliases[\"middle voice\"] = \"middle\"\naliases[\"in the middle\"] = \"middle\"\naliases[\"in the middle voice\"] = \"middle\"\n\nlabels[\"mnemonic\"] = {\n\tdisplay = '[[mnemonic]]',\n\
      \tpos_categories = { \"mnemonics\" },\n}\n\nlabels[\"neuter\"] = {\n\tglossary = true\n}\n\nlabels[\"onomatopoeia\"] = {\n\tdisplay = \"[[onomatopoeia]]\",\n\tpos_categories = { \"onomatopoeias\" },\n}\n\nlabels[\"ordinal\"] = {\n\tpos_categories = { \"\
      ordinal numbers\" },\n}\ndeprecated[\"ordinal\"] = true\n\ndeprecated[\"plural\"] = true\n\nlabels[\"passive\"] = {\n\tWikipedia = \"Passive voice\",\n}\naliases[\"passive voice\"] = \"passive\"\naliases[\"in the passive\"] = \"passive\"\n\nlabels[\"plural\
      \ only\"] = {\n\tpos_categories = { \"pluralia tantum\" },\n}\naliases[\"pluralonly\"] = \"plural only\"\naliases[\"plurale tantum\"] = \"plural only\"\n\nlabels[\"possessive pronoun\"] = {\n\tdisplay = \"possessive\",\n\tpos_categories = { \"possessive\
      \ pronouns\" },\n}\n\nlabels[\"postpositive\"] = {\n\tglossary = true\n}\n\nlabels[\"productive\"] = {\n\tdisplay = \"[[productive]]\" }\n\n-- TODO: This label is probably inappropriate for many languages\nlabels[\"pronominal\"] = {\n\tdisplay = \"takes\
      \ a [[Appendix:Glossary#reflexive|reflexive pronoun]]\",\n}\n\nlabels[\"pro-verb\"] = {\n\tWikipedia = true\n}\n\nlabels[\"reciprocal\"] = {\n\tdisplay = \"[[Appendix:Glossary#reciprocal|reciprocal]]\",\n\tpos_categories = { \"reciprocal verbs\" },\n}\n\
      \nlabels[\"reflexive\"] = {\n\tdisplay = \"[[Appendix:Glossary#reflexive|reflexive]]\",\n\tpos_categories = { \"reflexive verbs\" },\n}\n\nlabels[\"reflexive pronoun\"] = {\n\tdisplay = \"[[Appendix:Glossary#reflexive|reflexive]]\",\n\tpos_categories =\
      \ { \"reflexive pronouns\" }\n}\n\nlabels[\"relational\"] = {\n\tdisplay = \"[[Appendix:Glossary#relational|relational]]\",\n\tpos_categories = { \"relational adjectives\" },\n}\n\nlabels[\"rhetorical question\"] = {\n\tglossary = true,\n\tpos_categories\
      \ = { \"rhetorical questions\" },\n}\n\nlabels[\"set phrase\"] = {\n\tdisplay = \"[[set phrase]]\" }\n\nlabels[\"simile\"] = {\n\tglossary = true,\n\tpos_categories = { \"similes\" },\n}\n\ndeprecated[\"singular\"] = true\n\nlabels[\"singular only\"] =\
      \ {\n\tdisplay = \"singular only\",\n\tpos_categories = { \"singularia tantum\" },\n}\naliases[\"singulare tantum\"] = \"singular only\"\naliases[\"no plural\"] = \"singular only\"\n\nlabels[\"snowclone\"] = {\n\tglossary = true,\n\tpos_categories = {\
      \ \"snowclones\" },\n}\n\nlabels[\"stative\"] = {\n\tWikipedia = \"stative verb\",\n\tpos_categories = { \"stative verbs\" },\n}\naliases[\"stative verb\"] = \"stative\"\n\nlabels[\"substantive\"] = {\n\ttrack = true\n}\n\nlabels[\"transitive\"] = {\n\t\
      glossary = true,\n\tpos_categories = { \"transitive verbs\" },\n}\n\nlabels[\"unaccusative\"] = {\n\tWikipedia = \"Unaccusative verb\",\n}\n\nlabels[\"uncountable\"] = {\n\tglossary = true,\n\tpos_categories = { \"uncountable nouns\" },\n}\n\nlabels[\"\
      unergative\"] = {\n\tWikipedia = \"Unergative verb\",\n}\n\nlabels[\"usually plural\"] = {\n\tdisplay = \"usually in the [[plural]]\",\n}\naliases[\"usually in the plural\"] = \"usually plural\"\naliases[\"usually in plural\"] = \"usually plural\"\n\n\n\
      -- Usage labels\n\nlabels[\"ACG\"] = {\n\tdisplay = \"[[ACG]]\",\n\t-- see also \"fandom slang\"\n\tpos_categories = { \"fandom slang\" },\n}\n\nlabels[\"advertising slang\"] = {\n\tpos_categories = { \"advertising slang\" },\n}\naliases[\"ad slang\"]\
      \ = \"advertising slang\"\naliases[\"cosmo\"] = \"advertising slang\"\n\nlabels[\"affectionate\"] = {\n\tdisplay = \"[[affectionate]]\",\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"affectionate\
      \ terms\" },\n}\naliases[\"endearing\"] = \"affectionate\"\n\nlabels[\"pre-classical\"] = {\n\tdisplay = \"pre-classical\",\n\tregional_categories = { \"Pre-classical\" },\n}\naliases[\"ante-classical\"] = \"pre-classical\"\n\nlabels[\"archaic\"] = {\n\
      \tglossary = true,\n\tsense_categories = { \"archaic\" },\n}\n\nlabels[\"Australian slang\"] = {\n\tregional_categories = { \"Australian\" },\n\tplain_categories = { \"Australian slang\" },\n}\n\nlabels[\"avoidance\"] = {\n\tglossary = true\n}\n\nlabels[\"\
      back slang\"] = {\n\tdisplay = \"[[Appendix:Glossary#backslang|back slang]]\",\n\tpos_categories = { \"back slang\" },\n}\naliases[\"backslang\"] = \"back slang\"\naliases[\"back-slang\"] = \"back slang\"\n\nlabels[\"Bargoens\"] = {\n\tWikipedia = true,\n\
      \tplain_categories = { \"Bargoens\" },\n}\n\nlabels[\"Braille\"] = {\n\tWikipedia = true,\n}\n\nlabels[\"British slang\"] = {\n\tplain_categories = { \"British slang\" },\n}\naliases[\"UK slang\"] = \"British slang\"\n\nlabels[\"buzzword\"] = {\n\tdisplay\
      \ = \"[[buzzword]]\",\n\tpos_categories = { \"buzzwords\" },\n}\n\nlabels[\"Cambridge University slang\"] = {\n\tplain_categories = { \"Cambridge University slang\" },\n}\naliases[\"Cambridge University\"] = \"Cambridge University slang\"\n\nlabels[\"\
      cant\"] = {\n\tdisplay = \"[[cant]]\",\n\tpos_categories = { \"cant\" },\n}\naliases[\"argot\"] = \"cant\"\naliases[\"cryptolect\"] = \"cant\"\n\nlabels[\"capitalized\"] = {\n\tdisplay = \"[[capitalisation|capitalized]]\" }\n\nlabels[\"childish\"] = {\n\
      \tdisplay = \"[[childish]]\",\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"childish terms\" },\n}\naliases[\"baby talk\"] = \"childish\"\naliases[\"child language\"] = \"childish\"\n\nlabels[\"\
      chu Nom\"] = {\n\tdisplay = \"[[Vietnamese]] [[chữ Nôm]]\",\n\tplain_categories = { \"Vietnamese Han tu\" },\n}\n\nlabels[\"Classic 1811 Dictionary of the i Tongue\"] = {\n\tdisplay = \"[[Appendix:Glossary#archaic|archaic]], [[Appendix:Glossary#slang|slang]]\"\
      ,\n\tplain_categories = { \"Classic 1811 Dictionary of the Vulgar Tongue\" },\n}\naliases[\"1811\"] = \"Classic 1811 Dictionary of the Vulgar Tongue\"\n\nlabels[\"Cockney rhyming slang\"] = {\n\tdisplay = \"[[Cockney rhyming slang]]\",\n\tplain_categories\
      \ = { \"Cockney rhyming slang\" },\n}\n\nlabels[\"colloquial\"] = {\n\tglossary = true,\n\tpos_categories = { \"colloquialisms\" },\n}\naliases[\"colloquially\"] = \"colloquial\"\n\nlabels[\"colloquial-um\"] = {\n\tglossary = \"colloquial\",\n\tpos_categories\
      \ = { \"colloquialisms containing sequence um\" },\n}\n\nlabels[\"colloquial-un\"] = {\n\tglossary = \"colloquial\",\n\tpos_categories = { \"colloquialisms containing sequence un\" },\n}\n\nlabels[\"costermongers\"] = {\n\tdisplay = \"[[Appendix:Costermongers'\
      \ back slang|costermongers]]\",\n\tplain_categories = { \"Costermongers' back slang\" },\n}\naliases[\"coster\"] = \"costermongers\"\naliases[\"costers\"] = \"costermongers\"\naliases[\"costermonger\"] = \"costermongers\"\naliases[\"costermongers back\
      \ slang\"] = \"costermongers\"\naliases[\"costermongers' back slang\"] = \"costermongers\"\n\nlabels[\"dated\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"dated\
      \ terms\" },\n}\n\nlabels[\"dated form\"] = {\n\tglossary = \"dated\",\n\tpos_categories = { \"dated forms\" },\n}\n\nlabels[\"dated sense\"] = {\n\tglossary = \"dated\",\n\tsense_categories = { \"dated\" },\n} -- combine with previous\n\n\nlabels[\"derogatory\"\
      ] = {\n\tdisplay = \"[[derogatory]]\",\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"derogatory terms\" },\n}\naliases[\"pejorative\"] = \"derogatory\"\naliases[\"disparaging\"] = \"derogatory\"\
      \n\nlabels[\"dialectal\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"dialectal terms\" },\n}\naliases[\"dialect\"] = \"dialectal\"\naliases[\"dialects\"] = \"dialectal\"\
      \n\nlabels[\"dismissal\"] = {\n\tdisplay = \"[[dismissal]]\",\n\tpos_categories = { \"dismissals\" },\n}\n\nlabels[\"ethnic slur\"] = {\n\tdisplay = \"[[ethnic]] [[slur]]\",\n\tpos_categories = { \"ethnic slurs\" },\n}\naliases[\"racial slur\"] = \"ethnic\
      \ slur\"\n\nlabels[\"euphemistic\"] = {\n\tglossary = \"euphemism\",\n\tpos_categories = { \"euphemisms\" },\n}\naliases[\"euphemism\"] = \"euphemistic\"\n\nlabels[\"eye dialect\"] = {\n\tpos_categories = { \"eye dialect\" },\n}\n\nlabels[\"familiar\"\
      ] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"familiar terms\" },\n}\n\nlabels[\"fandom slang\"] = {\n\tpos_categories = { \"fandom slang\" },\n}\naliases[\"fandom\"\
      ] = \"fandom slang\"\n\nlabels[\"figuratively\"] = {\n\tglossary = \"figurative\" }\naliases[\"figurative\"] = \"figuratively\"\naliases[\"metaphorically\"] = \"figuratively\"\naliases[\"metaphorical\"] = \"figuratively\"\naliases[\"metaphor\"] = \"figuratively\"\
      \n\nlabels[\"folk poetic\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"folk poetic terms\", \"poetic terms\" },\n}\n\nlabels[\"formal\"] = {\n\tglossary = true,\n\t-- should be \"terms\
      \ with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"formal terms\" },\n}\n\nlabels[\"gay slang\"] = {\n\tpos_categories = { \"gay slang\" },\n}\n\nlabels['hapax legomenon'] = {\n\tdisplay = \"hapax legomenon\",\n\t\
      pos_categories = { \"hapax legomena\" },\n\tglossary = true,\n}\n\nlabels[\"historical\"] = {\n\tglossary = true,\n\tsense_categories = { \"historical\" },\n}\naliases[\"historic\"] = \"historical\"\naliases[\"history\"] = \"historical\"\n\nlabels[\"non-native\
      \ speakers\"] = {\n\tdisplay = \"[[non-native speaker]]s\", -- so it can be preceded by \"used by\", \"an error by children and\", etc\n\tregional_categories = { \"Non-native speakers'\" },\n}\naliases[\"NNES\"] = \"non-native speakers\"\naliases[\"NNS\"\
      ] = \"non-native speakers\"\n\n-- used exclusively by languages that use the “Jpan” script code\nlabels[\"historical hiragana\"] = {\n\tpos_categories = { \"historical hiragana\" },\n}\n\n-- used exclusively by languages that use the “Jpan” script code\n\
      labels[\"historical katakana\"] = {\n\tpos_categories = { \"historical katakana\" },\n}\n\n-- applies to Japanese and Korean, etc., please do not confuse with \"polite\"\nlabels[\"honorific\"] = {\n\tWikipedia = \"Honorifics (linguistics)\",\n\t-- should\
      \ be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tpos_categories = { \"honorific terms\" },\n}\n\n-- for Ancient Greek\nlabels['Homeric epithet'] = {\n  display = \"[[Homeric Greek|Homeric]] [[w:Homeric epithets|epithet]]\"\
      ,\n  plain_categories = { \"Epic Ancient Greek\" },\n  omit_postComma = true,\n}\n\n-- applies to Japanese and Korean, etc.\nlabels[\"humble\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tdisplay = \"[[humble]]\"\
      ,\n\tpos_categories = { \"humble terms\" },\n}\n\nlabels[\"humorous\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp; NB and cf a similar \"jocular\" label further up on this page\n\tdisplay = \"[[humorous]]\"\
      ,\n\tpos_categories = { \"jocular terms\" },\n}\naliases[\"jocular\"] = \"humorous\"\n\nlabels[\"hyperbolic\"] = {\n\tpos_categories = { \"hyperboles\" },\n}\naliases[\"hyperbole\"] = \"hyperbolic\"\n\nlabels[\"hypercorrect\"] = {\n\tglossary = true,\n\
      \tpos_categories = { \"hypercorrections\" },\n}\n\nlabels[\"hyperforeign\"] = {\n\tglossary = true,\n\tpos_categories = { \"hyperforeign terms\" },\n}\n\nlabels[\"informal\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X\
      \ terms\" to the term-context temp\n\tpos_categories = { \"informal terms\" },\n}\naliases[\"informally\"] = \"informal\"\n\nlabels[\"Internet slang\"] = {\n\tdisplay = \"[[Internet]] [[slang]]\",\n\tpos_categories = { \"internet slang\" },\n}\n\naliases[\"\
      internet slang\"] = \"Internet slang\"\n\nlabels[\"IRC\"] = {\n\tdisplay = \"[[IRC]]\",\n\tpos_categories = { \"internet slang\" },\n}\n\nlabels[\"ironic\"] = {}\n\nlabels[\"leet\"] = {\n\tdisplay = \"[[leetspeak]]\",\n\tpos_categories = { \"leet\" },\n\
      }\naliases[\"leetspeak\"] = \"leet\"\n\nlabels['literally'] = {\n\tglossary = \"literally\" }\naliases['literal'] = 'literally'\n\nlabels[\"literary\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tglossary\
      \ = true,\n\tpos_categories = { \"literary terms\" },\n}\naliases[\"bookish\"] = \"literary\"\n\nlabels[\"loosely\"] = {\n\tglossary = true\n}\n\nlabels[\"Lubunyaca\"] = {\n\tdisplay = \"[[Lubunyaca]]\",\n\tpos_categories = { \"Lubunyaca\" },\n}\n\nlabels[\"\
      medical slang\"] = {\n\tdisplay = \"[[medical]] [[slang]]\",\n\tpos_categories = { \"medical slang\" },\n}\n\n-- for Awetí, Karajá, etc., where men and women use different words\nlabels[\"men's speech\"] = {\n\tglossary = \"men's speech\",\n\tpos_categories\
      \ = { \"men's speech terms\" },\n}\naliases[\"male speech\"] = \"men's speech\"\n\nlabels[\"metonymically\"] = {\n\tglossary = true,\n\tpos_categories = { \"metonyms\" },\n}\naliases[\"metonymic\"] = \"metonymically\"\naliases[\"metonymy\"] = \"metonymically\"\
      \naliases[\"metonym\"] = \"metonymically\"\n\nlabels[\"military slang\"] = {\n\tpos_categories = { \"military slang\" },\n}\n\nlabels[\"minced oath\"] = {\n\tdisplay = \"[[minced oath]]\",\n\tpos_categories = { \"euphemisms\" },\n}\n\nlabels[\"neologism\"\
      ] = {\n\tglossary = true,\n\tpos_categories = { \"neologisms\" },\n}\naliases[\"neologistic\"] = \"neologism\"\n\nlabels[\"New Julfa\"] = {\n\tregional_categories = { \"New Julfa\" },\n}\naliases[\"Jugha\"] = \"New Julfa\"\n\nlabels[\"no longer productive\"\
      ] = {\n\tdisplay = \"no longer [[Appendix:Glossary#productive|productive]]\",\n}\n\nlabels[\"nonce word\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp?\n\tdisplay = \"[[Appendix:Glossary#nonce word|nonce word]]\"\
      ,\n\tpos_categories = { \"nonce terms\" },\n}\naliases[\"nonce\"] = \"nonce word\"\n\nlabels[\"nonstandard\"] = {\n\tglossary = true,\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"nonstandard\
      \ terms\" },\n}\naliases[\"non-standard\"] = \"nonstandard\"\n\nlabels[\"nonstandard form\"] = {\n\tglossary = \"nonstandard\",\n\tpos_categories = { \"nonstandard forms\" },\n}\n\nlabels[\"obsolete\"] = {\n\tglossary = true,\n\tsense_categories = { \"\
      obsolete\" },\n}\n\nlabels[\"obsolete term\"] = {\n\tglossary = \"obsolete\",\n\t-- combine with previous two, q.v.\n\tpos_categories = { \"obsolete terms\" },\n}\n\nlabels[\"offensive\"] = {\n\tdisplay = \"[[offensive]]\",\n\t-- should be \"terms with\
      \ X senses\", leaving \"X terms\" to the term-context temp\n\tpos_categories = { \"offensive terms\" },\n}\n\nlabels[\"officialese\"] = {\n\tdisplay = \"[[officialese]]\",\n\tpos_categories = { \"officialese terms\" },\n}\n\nlabels[\"Oxbridge slang\"]\
      \ = {\n\tdisplay = \"[[Oxbridge]] slang\",\n\tplain_categories = { \"Cambridge University slang\", \"Oxford University slang\" },\n}\naliases[\"Oxbridge\"] = \"Oxbridge slang\"\n\nlabels[\"Oxford University slang\"] = {\n\tplain_categories = { \"Oxford\
      \ University slang\" },\n}\naliases[\"Oxford University\"] = \"Oxford University slang\"\n\nlabels[\"poetic\"] = {\n\t-- should be \"terms with X senses\", leaving \"X terms\" to the term-context temp\n\tdisplay = \"[[poetic]]\",\n\tpos_categories = {\
      \ \"poetic terms\" },\n}\n\nlabels[\"Polari\"] = {\n\tdisplay = \"[[Polari]]\",\n\tpos_categories = { \"Polari slang\" },\n}\n\nlabels[\"polite\"] = {\n\tpos_categories = { \"polite terms\" },\n}\n\nlabels[\"post-classical\"] = {\n\tdisplay = \"post-classical\"\
      ,\n\tregional_categories = { \"Post-classical\" },\n}\naliases[\"Post-classical\"] = \"post-classical\"\naliases[\"post-Classical\"] = \"post-classical\"\naliases[\"Post-Classical\"] = \"post-classical\"\naliases[\"Postclassical\"] = \"post-classical\"\
      \naliases[\"postclassical\"] = \"post-classical\"\n\nlabels[\"proscribed\"] = {\n\tglossary = true,\n\tpos_categories = { \"disputed terms\" },\n}\n\nlabels[\"radio slang\"] = {\n\tpos_categories = { \"radio slang\" },\n}\n\nlabels[\"rare\"] = {\n\tsense_categories\
      \ = { \"rare\" },\n}\naliases[\"rare sense\"] = \"rare\"\n\nlabels[\"rare term\"] = {\n\tdisplay = \"rare\",\n\t-- see comments about \"obsolete\"\n\tpos_categories = { \"rare terms\" },\n}\n\nlabels[\"religious slur\"] = {\n\tdisplay = \"[[religious]]\
      \ [[slur]]\",\n\tpos_categories = { \"religious slurs\" },\n}\naliases[\"sectarian slur\"] = \"religious slur\"\n\nlabels[\"retronym\"] = {\n\tdisplay = \"[[retronym]]\",\n\tpos_categories = { \"retronyms\" },\n}\n\nlabels[\"sarcastic\"] = {\n\tdisplay\
      \ = \"[[sarcastic]]\",\n\tpos_categories = { \"sarcastic terms\" },\n}\n\nlabels[\"school slang\"] = {\n\tpos_categories = { \"school slang\" },\n}\naliases[\"public school slang\"] = \"school slang\"\n\nlabels[\"slang\"] = {\n\tglossary = true,\n\tpos_categories\
      \ = { \"slang\" },\n}\n\nlabels[\"college slang\"] = {\n\tpos_categories = { \"student slang\" },\n}\naliases[\"university slang\"] = \"college slang\"\naliases[\"student slang\"] = \"college slang\"\n\nlabels[\"swear word\"] = {\n\tpos_categories = {\
      \ \"swear words\" },\n}\naliases[\"profanity\"] = \"swear word\"\naliases[\"expletive\"] = \"swear word\"\n\nlabels[\"text messaging\"] = {\n\tdisplay = \"[[text messaging]]\",\n\tpos_categories = { \"text messaging slang\" },\n}\naliases[\"texting\"]\
      \ = \"text messaging\"\n\nlabels[\"thieves' cant\"] = {\n\tWikipedia = true,\n\tplain_categories = { \"Thieves' cant\" },\n}\naliases[\"thieves cant\"] = \"thieves' cant\"\naliases[\"thieves'\"] = \"thieves' cant\"\naliases[\"thieves\"] = \"thieves' cant\"\
      \n\nlabels[\"trademark\"] = {\n\tdisplay = \"[[trademark]]\",\n\tpos_categories = { \"trademarks\" },\n}\n\nlabels[\"transferred sense\"] = {\n\tglossary = true,\n\tpos_categories = { \"terms with transferred senses\" },\n}\n\nlabels[\"transferred senses\"\
      ] = {\n\tdisplay = \"[[transferred sense#English|transferred senses]]\",\n\tpos_categories = { \"terms with transferred senses\" },\n}\n\nlabels[\"uds.\"] = {\n\tdisplay = \"[[Appendix:Spanish pronouns#Ustedes and vosotros|used formally in Spain]]\" }\n\
      \nlabels[\"uncommon\"] = {\n\tpos_categories = { \"rare forms\" },\n}\n\nlabels[\"verlan\"] = {\n\tdisplay = \"[[Appendix:Glossary#verlan|verlan]]\",\n\tplain_categories = { \"Verlan\" },\n}\n\nlabels[\"very rare\"] = {\n\tpos_categories = { \"rare forms\"\
      \ },\n}\n\nlabels[\"vulgar\"] = {\n\tglossary = true,\n\tpos_categories = { \"vulgarities\" },\n}\naliases[\"coarse\"] = \"vulgar\"\naliases[\"obscene\"] = \"vulgar\"\naliases[\"profane\"] = \"vulgar\"\n\nlabels[\"vesre\"] = {\n\tplain_categories = { \"\
      Vesre\" },\n}\n\n-- for Awetí, Karajá, etc., where men &amp; women use different words\nlabels[\"women's speech\"] = {\n\tglossary = \"women's speech\",\n\tpos_categories = { \"women's speech terms\" },\n}\naliases[\"female speech\"] = \"women's speech\"\
      \n\nlabels[\"example1\"] = {\n\tWikipedia = \"Wu Chinese\"\n}\n\nlabels[\"example2\"] = {\n\tglossary = \"palatalization\"\n}\n\n\n-- Regional labels\nlocal m_regional = require(\"Module:labels/data/regional\")\n\nfor key, val in pairs(m_regional.labels)\
      \ do\n\tlabels[key] = val\nend\n\nfor key, val in pairs(m_regional.aliases) do\n\taliases[key] = val\nend\n\nfor key, val in pairs(m_regional.deprecated) do\n\tdeprecated[key] = val\nend\n\n\n-- Topical labels\n\nlocal m_topical = require(\"Module:labels/data/topical\"\
      )\n\nfor key, val in pairs(m_topical.labels) do\n\tlabels[key] = val\nend\n\nfor key, val in pairs(m_topical.aliases) do\n\taliases[key] = val\nend\n\nfor key, val in pairs(m_topical.deprecated) do\n\tdeprecated[key] = val\nend\n\n--[[\tAdd subvariety\
      \ labels and the corresponding aliases\n\t\tand deprecated labels if they have a language code\n\t\tin the \"languages\" field.\t\t\t\t\t\t\t\t]]\nlocal m_subvarieties = require(\"Module:labels/data/subvarieties\")\n\nfor key, val in pairs(m_subvarieties.labels)\
      \ do\n\tif labels[key] then\n\t\treplacements.labels[key] = labels[key]\n\tend\n\t\n\tif val.languages then\n\t\tlabels[key] = val\n\tend\nend\n\nfor key, val in pairs(m_subvarieties.aliases) do\n\tif aliases[key] then\n\t\treplacements.aliases[key] =\
      \ aliases[key]\n\tend\n\t\n\tif labels[val] then\n\t\taliases[key] = val\n\tend\nend\n\nfor key, val in pairs(m_subvarieties.deprecated) do\n\tif deprecated[key] then\n\t\treplacements.deprecated[key] = deprecated[key]\n\tend\n\t\n\tif labels[key] then\n\
      \t\tdeprecated[key] = val\n\tend\nend\n\nreturn {\n\t[\"labels\"] = labels,\n\t[\"aliases\"] = aliases,\n\t[\"deprecated\"] = deprecated,\n\t[\"replacements\"] = replacements,\n}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:39.148Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Fregional&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=74179 t=1555362458777735
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:38 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 929436910, 490194495, 696170946
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4952140\" pageid=\"4952140\" ns=\"828\" title=\"Module:labels/data/regional\"><revisions><rev user=\"Fay Freak\" timestamp=\"2019-04-08T01:27:43Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Add Chad, Mali, Mauritania.\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\nlocal deprecated = {}\n\nlocal m_data_functions = require(\"Module:labels/data/functions\")\n\
      \n-- Generic\n\n--not sure where to put this\nlabels[\"Classical\"] = {\n\tspecial_display = \"[[Classical &lt;canonical_name&gt;]]\",\n\tregional_categories = {\"Classical\"},\n}\naliases[\"classical\"] = \"Classical\"\n\nlabels[\"regional\"] = {\n\t\
      regional_categories = {\"Regional\"},\n}\n\n\n-- Africa\n\nlabels[\"Africa\"] = {\n\tregional_categories = {\"African\"},\n}\naliases[\"African\"] = \"Africa\"\n\nlabels[\"Algeria\"] = {\n\tdisplay = \"Algeria\",\n\tregional_categories = {\"Algerian\"\
      },\n}\naliases[\"Algerian\"] = \"Algeria\"\n\nlabels[\"Angola\"] = {\n\tregional_categories = {\"Angolan\"},\n}\naliases[\"Angolan\"] = \"Angola\"\n\nlabels[\"Botswana\"] = {\n\tregional_categories = {\"Botswanan\"},\n}\n\nlabels[\"Cape Verde\"] = {\n\t\
      regional_categories = {\"Cape Verdean\"},\n}\naliases[\"Cape Verdean\"] = \"Cape Verde\"\n\nlabels[\"Chad\"] = {\n\tdisplay = \"Chad\",\n\tregional_categories = {\"Chadian\"},\n}\naliases[\"Chadian\"] = \"Chad\"\n\nlabels[\"Congo\"] = {\n\tdisplay = \"\
      Congo\",\n\tregional_categories = {\"Congolese\"},\n} -- these could be split if need be\naliases[\"Democratic Republic of the Congo\"] = \"Congo\"\naliases[\"Democratic Republic of Congo\"] = \"Congo\"\naliases[\"DR Congo\"] = \"Congo\"\naliases[\"Congo-Kinshasa\"\
      ] = \"Congo\"\naliases[\"Republic of the Congo\"] = \"Congo\"\naliases[\"Republic of Congo\"] = \"Congo\"\naliases[\"Congo-Brazzaville\"] = \"Congo\"\naliases[\"Congolese\"] = \"Congolese\"\n\nlabels[\"Durban\"] = {\n\tdisplay = \"[[Durban]]\",\n\tregional_categories\
      \ = {\"Durban\"},\n}\n\nlabels[\"East Africa\"] = {\n\tregional_categories = {\"East African\"},\n}\naliases[\"East African\"] = \"East Africa\"\n\nlabels[\"Egypt\"] = {\n\tregional_categories = {\"Egyptian\"},\n}\naliases[\"Egyptian\"] = \"Egypt\"\n\n\
      labels[\"Equatorial Guinea\"] = {\n    display = \"[[w:Equatorial Guinea|Equatorial Guinea]]\",\n\tregional_categories = {\"Equatorial Guinean\"},\n}\naliases[\"Equatorial Guinean\"] = \"Equatorial Guinea\"\naliases[\"Equatoguinean\"] = \"Equatorial Guinea\"\
      \n\nlabels[\"Ghana\"] = {\n\tregional_categories = {\"Ghanaian\"},\n}\n\nlabels[\"Haketia\"] = {\n    display = \"[[w:Haketia|Haketia]]\",\n    plain_categories = {\"Haketia\"},\n}\naliases[\"Hakitia\"] = \"Haketia\"\naliases[\"Haquitía\"] = \"Haketia\"\
      \n\nlabels[\"Kenya\"] = {\n\tregional_categories = {\"Kenyan\"},\n}\naliases[\"Kenyan\"] = \"Kenya\"\n\nlabels[\"Liberia\"] = {\n\tregional_categories = {\"Liberian\"},\n}\naliases[\"Liberian\"] = \"Liberia\"\n\nlabels[\"Mali\"] = {\n\tdisplay = \"Mali\"\
      ,\n\tregional_categories = {\"Malian\"},\n}\naliases[\"Malian\"] = \"Mali\"\n\nlabels[\"Mauritania\"] = {\n\tdisplay = \"Mauritania\",\n\tregional_categories = {\"Mauritanian\"},\n}\naliases[\"Mauritanian\"] = \"Mauritania\"\n\nlabels[\"Morocco\"] = {\n\
      \tregional_categories = {\"Moroccan\"},\n}\naliases[\"Moroccan\"] = \"Morocco\"\n\nlabels[\"Mozambique\"] = {\n\tregional_categories = {\"Mozambican\"},\n}\naliases[\"Mozambican\"] = \"Mozambique\"\n\nlabels[\"Namibia\"] = {\n\tregional_categories = {\"\
      Namibian\"},\n}\naliases[\"Namibian\"] = \"Namibia\"\n\nlabels[\"Natal\"] = {\n\tdisplay = \"[[Natal]]\",\n\tregional_categories = {\"Natal\"},\n}\n\nlabels[\"Niger\"] = {\n\tregional_categories = {\"Nigerien\"},\n}\naliases[\"Nigerien\"] = \"Niger\"\n\
      \nlabels[\"Nigeria\"] = {\n\tregional_categories = {\"Nigerian\"},\n}\naliases[\"Nigerian\"] = \"Nigeria\"\n\nlabels[\"Rhodesia\"] = {\n\tdisplay = \"[[w:Rhodesia|Rhodesia]]\",\n\tregional_categories = {\"Rhodesian\"},\n}\naliases[\"Rhodesian\"] = \"Rhodesia\"\
      \n\nlabels[\"Rwanda\"] = {\n\tdisplay = \"Rwanda\",\n\tregional_categories = {\"Rwandan\"},\n}\n\nlabels[\"Réunion\"] = {\n\tregional_categories = {\"Réunion\"},\n}\n\nlabels[\"South Africa\"] = {\n\tdisplay = \"[[w:South Africa|South Africa]]\",\n\tregional_categories\
      \ = {\"South African\"},\n}\naliases[\"South African\"] = \"South Africa\"\n\nlabels[\"Sudan\"] = {\n\tdisplay = \"[[w:Sudan|Sudan]]\",\n\tregional_categories = {\"Sudanese\"},\n}\naliases[\"Sudanese\"] = \"Sudan\"\n\nlabels[\"Tanzania\"] = {\n\tregional_categories\
      \ = {\"Tanzanian\"},\n}\n\nlabels[\"Tunisian\"] = {\n\tdisplay = \"Tunisia\",\n\tregional_categories = {\"Tunisian\"} }\naliases[\"Tunisia\"] = \"Tunisian\"\n\nlabels[\"Uganda\"] = {\n\tregional_categories = {\"Ugandan\"}\n}\n\nlabels[\"West Africa\"]\
      \ = {\n\tregional_categories = {\"West African\"},\n}\naliases[\"West African\"] = \"West Africa\"\n\nlabels[\"Zimbabwe\"] = {\n\tdisplay = \"[[Zimbabwe]]\",\n\tregional_categories = {\"Zimbabwe\"},\n}\n\nlabels[\"Zululand\"] = {\n\tdisplay = \"[[Zululand]]\"\
      ,\n\tregional_categories = {\"Zululand\"},\n}\n\n\n-- North America\n\nlabels[\"Acadia\"] = {\n\tdisplay = \"Acadian\",\n\tregional_categories = {\"Acadian\"},\n}\n\nlabels[\"Alberta\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Appalachia\"\
      ] = {\n\tdisplay = \"[[Appalachia]]\",\n\tregional_categories = {\"Appalachian\"},\n}\naliases[\"Appalachian\"] = \"Appalachia\"\n\nlabels[\"Atlantic Canada\"] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"British Columbia\"] = {\n\
      \tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Cajun\"] = {\n\tdisplay = \"[[w:Cajun|Louisiana]]\",\n\tregional_categories = {\"Louisiana\"},\n}\n\nlabels[\"Canada\"] = {\n\tdisplay = \"[[w:Canada|Canada]]\",\n\tregional_categories = {\"Canadian\"\
      },\n}\naliases[\"Canadian\"] = \"Canada\"\n\nlabels[\"Canadian Prairies\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Georgia\"] = {\n\tdisplay = \"[[w:Georgia (U.S. state)|Georgia]]\",\n\tregional_categories = {\"Georgian\"},\n}\n\nlabels[\"\
      Indiana\"] = {\n\tdisplay = \"[[w:Indiana|Indiana]]\",\n\tregional_categories = {\"Indiana\"},\n}\naliases[\"Indianan\"] = \"Indiana\"\naliases[\"Indianian\"] = \"Indiana\"\n\nlabels[\"Labrador\"] = {\n\tdisplay = \"[[Labrador]]\",\n\tregional_categories\
      \ = {\"Labrador\"},\n}\n\nlabels[\"Louisiana\"] = {\n\tregional_categories = {\"Louisiana\"},\n}\naliases[\"New Orleans\"] = \"Louisiana\"\n\nlabels[\"Manitoba\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Maryland\"] = {\n\tdisplay =\
      \ \"[[w:Maryland|Maryland]]\",\n\tregional_categories = {\"Maryland\"},\n}\n\nlabels[\"Mecayapan\"] = {\n\tregional_categories = {\"Mecayapan\"},\n}\n\nlabels[\"Mexico\"] = {\n\tregional_categories = {\"Mexican\"},\n}\naliases[\"Mexican\"] = \"Mexico\"\
      \n\nlabels[\"Midland US\"] = {\n\tdisplay = \"[[w:Midland American English|Midland US]]\", -- for lack of a better link target\n\tregional_categories = {\"Midland US\"},\n}\naliases[\"North Midland US\"] = \"Midland US\" -- split North and South off?\n\
      aliases[\"Northern Midland US\"] = \"Midland US\"\naliases[\"South Midland US\"] = \"Midland US\"\naliases[\"Southern Midland US\"] = \"Midland US\"\n\nlabels[\"Midwest US\"] = {\n\tdisplay = \"[[w:Midwestern United States|Midwestern US]]\",\n\tregional_categories\
      \ = {\"Midwest US\"},\n}\naliases[\"Midwestern US\"] = \"Midwest US\"\n\nlabels[\"Missouri\"] = {\n\tdisplay = \"[[w:Missouri|Missouri]]\",\n\tregional_categories = {\"Missourian\"},\n}\naliases[\"St Louis, Missouri\"] = \"Missouri\"\naliases[\"St. Louis,\
      \ Missouri\"] = \"Missouri\"\n\nlabels[\"New Brunswick\"] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"New England\"] = {\n\tdisplay = \"[[w:New England|New England]]\",\n\tregional_categories = {\"New England\"},\n}\n\nlabels[\"\
      New Jersey\"] = {\n\tdisplay = \"[[w:New Jersey|New Jersey]]\",\n\tregional_categories = {\"New Jersey\"},\n}\n\nlabels[\"New York\"] = {\n\tdisplay = \"[[w:New York|New York]]\",\n\tregional_categories = {\"New York\"},\n}\naliases[\"NY\"] = \"New York\"\
      \n\nlabels[\"New York City\"] = {\n\tdisplay = \"[[w:New York City|New York City]]\",\n\tregional_categories = {\"New York City\"},\n}\naliases[\"NYC\"] = \"New York City\"\naliases[\"New York city\"] = \"New York City\"\n\nlabels[\"Newfoundland\"] = {\n\
      \tdisplay = \"[[Newfoundland English|Newfoundland]]\",\n\tregional_categories = {\"Newfoundland\"},\n}\n\nlabels[\"North America\"] = {\n\tdisplay = \"[[Canada]], [[American English|US]]\",\n\tregional_categories = {\"Canadian\", \"American\"},\n}\naliases[\"\
      North American\"] = \"North America\"\n\nlabels[\"North Carolina\"] = {\n\tdisplay = \"[[w:North Carolina|North Carolina]]\",\n\tregional_categories = {\"North Carolinian\"},\n}\n\nlabels[\"North India\"] = {\n\tdisplay = \"[[w:North India|North India]]\"\
      ,\n\tregional_categories = {\"North Indian\"},\n}\n\nlabels[\"Northwest Territories\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Northwestern US\"] = {\n\tdisplay = \"[[w:Northwestern United States|Northwestern US]]\",\n\tregional_categories\
      \ = {\"Northwestern US\"},\n}\naliases[\"northwestern US\"] = \"Northwestern US\"\n\nlabels[\"Nova Scotia\"] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"Nunavut\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Ohio\"\
      ] = {\n\tdisplay = \"[[Ohio]]\",\n\tregional_categories = {\"Ohioan\"},\n}\n\nlabels[\"Ontario\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Pennsylvania\"] = {\n\tdisplay = \"[[w:Pennsylvania|Pennsylvania]]\",\n\tregional_categories =\
      \ {\"Pennsylvanian\"},\n}\n\nlabels[\"Pittsburgh\"] = {\n\tdisplay = \"[[w:Pittsburgh|Pittsburgh]]\",\n\tregional_categories = {\"Pennsylvanian\"},\n} -- can be split off if enough entries in it arise; group with PA for now\n\nlabels[\"Prince Edward Island\"\
      ] = {\n\tregional_categories = {\"Atlantic Canadian\"},\n}\n\nlabels[\"Quebec\"] = {\n\tregional_categories = {\"Quebec\"},\n}\naliases[\"Québec\"] = \"Quebec\"\n\nlabels[\"Saskatchewan\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\nlabels[\"Southern\
      \ US\"] = {\n\tdisplay = \"[[w:Southern United States|Southern US]]\",\n\tregional_categories = {\"Southern US\"},\n}\naliases[\"southern US\"] = \"Southern US\"\naliases[\"US South\"] = \"Southern US\"\naliases[\"US Southern\"] = \"Southern US\"\n\nlabels[\"\
      Southwestern US\"] = {\n\tdisplay = \"[[w:Southwestern United States|Southwestern US]]\",\n\tregional_categories = {\"Southwestern US\"},\n}\naliases[\"Southwest US\"] = \"Southwestern US\"\naliases[\"southwest US\"] = \"Southwestern US\"\naliases[\"southwestern\
      \ US\"] = \"Southwestern US\"\n\nlabels[\"Texas\"] = {\n\tdisplay = \"[[w:Texas|Texas]]\",\n\tregional_categories = {\"Texan\"},\n}\naliases[\"TX\"] = \"Texas\"\n\nlabels[\"Upper Midwest US\"] = {\n\tdisplay = \"[[w:Upper Midwest|Upper Midwestern US]]\"\
      ,\n\tregional_categories = {\"Upper Midwest US\"},\n}\naliases[\"Upper Midwestern US\"] = \"Upper Midwest US\"\n\nlabels[\"US\"] = {\n\tdisplay = \"[[w:United States|US]]\",\n\tregional_categories = {\"American\"},\n}\naliases[\"U.S.\"] = \"US\"\naliases[\"\
      United States\"] = \"US\"\naliases[\"United States of America\"] = \"US\"\naliases[\"USA\"] = \"US\"\naliases[\"America\"] = \"US\" -- or should these be aliases of 'North America'?\naliases[\"American\"] = \"US\"\n\nlabels[\"Virginia\"] = {\n\tdisplay\
      \ = \"[[w:Virginia|Virginia]]\",\n\tregional_categories = {\"Virginian\"},\n}\n\nlabels[\"Yukon\"] = {\n\tregional_categories = {\"Canadian\"},\n}\n\n-- Yokuts tribal varieties\n\nlabels[\"Chawchila\"] = {\n\tregional_categories = {\"Chawchila\"},\n}\n\
      \nlabels[\"Choinimni\"] = {\n\tregional_categories = {\"Choinimni\"},\n}\naliases[\"Choynimni\"] = \"Choinimni\"\n\nlabels[\"Choinok\"] = {\n\tregional_categories = {\"Choinok\"},\n}\naliases[\"Choynok\"] = \"Choinok\"\n\n\nlabels[\"Chukaimina\"] = {\n\
      \tregional_categories = {\"Chukaimina\"},\n}\naliases[\"Chukaymina\"] = \"Chukaimina\"\n\nlabels[\"Chukchansi\"] = {\n\tregional_categories = {\"Chukchansi\"},\n}\n\nlabels[\"Chulamni\"] = {\n\tregional_categories = {\"Chulamni\"},\n}\naliases[\"Yachikumne\"\
      ] = \"Chulamni\"\naliases[\"Yachikumni\"] = \"Chulamni\"\n\nlabels[\"Dumna\"] = {\n\tregional_categories = {\"Dumna\"},\n}\n\nlabels[\"Hometwoli\"] = {\n\tregional_categories = {\"Hometwoli\"},\n}\n\nlabels[\"Kechayi\"] = {\n\tregional_categories = {\"\
      Kechayi\"},\n}\n\nlabels[\"Kocheyali\"] = {\n\tregional_categories = {\"Kocheyali\"},\n}\naliases[\"Ayitcha\"] = \"Kocheyali\"\naliases[\"Ayticha\"] = \"Kocheyali\"\n\nlabels[\"Koyeti\"] = {\n\tregional_categories = {\"Koyeti\"},\n}\n\nlabels[\"Lakisamni\"\
      ] = {\n\tregional_categories = {\"Lakisamni\"},\n}\n\nlabels[\"Michahay\"] = {\n\tregional_categories = {\"Michahay\"},\n}\n\nlabels[\"Noptinte\"] = {\n\tregional_categories = {\"Noptinte\"},\n}\naliases[\"Nopṭinṭe\"] = \"Noptinte\"\naliases[\"Nopthrinthre\"\
      ] = \"Noptinte\"\naliases[\"Nopchinchi\"] = \"Noptinte\"\n\nlabels[\"Tachi\"] = {\n\tregional_categories = {\"Tachi\"},\n}\n\nlabels[\"Tawalimni\"] = {\n\tregional_categories = {\"Tawalimni\"},\n}\n\nlabels[\"Tulamni\"] = {\n\tregional_categories = {\"\
      Tulamni\"},\n}\naliases[\"Tulamne\"] = \"Tulamni\"\n\nlabels[\"Wechihit\"] = {\n\tregional_categories = {\"Wechihit\"},\n}\n\nlabels[\"Wo'lasi\"] = {\n\tregional_categories = {\"Wo'lasi\"},\n}\n\nlabels[\"Wukchumni\"] = {\n\tregional_categories = {\"Wukchumni\"\
      },\n}\naliases[\"Wukchamni\"] = \"Wukchumni\"\naliases[\"Wikchamni\"] = \"Wukchumni\"\n\nlabels[\"Yawdanchi\"] = {\n\tregional_categories = {\"Yawdanchi\"},\n}\n\nlabels[\"Yawelmani\"] = {\n\tregional_categories = {\"Yawelmani\"},\n}\n\n\n-- Central America\
      \ and Caribbean\n\nlabels[\"Barbados\"] = {\n\tregional_categories = {\"Barbadian\"},\n}\naliases[\"Barbadian\"] = \"Barbados\"\n\nlabels[\"Belize\"] = {\n\tdisplay = \"[[w:Belize|Belize]]\",\n\tregional_categories = {\"Belizean\"},\n}\naliases[\"Belizean\"\
      ] = \"Belize\"\n\nlabels[\"Caribbean\"] = {\n\tdisplay = \"[[Caribbean]]\",\n\tregional_categories = {\"Caribbean\"},\n}\n\nlabels[\"Central America\"] = {\n\tregional_categories = {\"Central American\"},\n}\n\nlabels[\"Cincinnati\"] = {\n\tdisplay = \"\
      [[Cincinnati]]\",\n\tregional_categories = {\"Cincinnati\"},\n}\n\nlabels[\"Cirebon\"] = {\n\tplain_categories = {\"Cirebon Javanese\"},\n}\n\nlabels[\"Costa Rica\"] = {\n\tregional_categories = {\"Costa Rican\"},\n}\n\nlabels[\"Cuba\"] = {\n\tregional_categories\
      \ = {\"Cuban\"},\n}\n\nlabels[\"Dominican Republic\"] = {\n\tregional_categories = {\"Dominican\"},\n}\n\nlabels[\"El Salvador\"] = {\n\tregional_categories = {\"Salvadorian\"},\n}\n\nlabels[\"Guatemala\"] = {\n\tregional_categories = {\"Guatemalan\"},\n\
      }\n\nlabels[\"Honduras\"] = {\n\tregional_categories = {\"Honduran\"},\n}\n\nlabels[\"Jamaica\"] = {\n\tdisplay = \"[[w:Jamaica|Jamaica]]\",\n\tregional_categories = {\"Jamaican\"},\n}\naliases[\"Jamaican\"] = \"Jamaica\"\n\nlabels[\"Nicaragua\"] = {\n\
      \tregional_categories = {\"Nicaraguan\"},\n}\n\nlabels[\"Panama\"] = {\n\tregional_categories = {\"Panamanian\"},\n}\n\n\n-- South America\n\nlabels[\"Argentina\"] = {\n\tregional_categories = {\"Argentinian\"},\n}\n\nlabels[\"Bolivia\"] = {\n\tregional_categories\
      \ = {\"Bolivian\"},\n}\n\nlabels[\"Brazil\"] = {\n\tdisplay = \"[[w:Brazil|Brazil]]\",\n\tregional_categories = {\"Brazilian\"},\n}\n\nlabels[\"Chile\"] = {\n\tregional_categories = {\"Chilean\"},\n}\n\nlabels[\"Colombia\"] = {\n\tregional_categories =\
      \ {\"Colombian\"},\n}\n\nlabels[\"Ecuador\"] = {\n\tregional_categories = {\"Ecuadorian\"},\n}\n\nlabels[\"Guyana\"] = {\n\tregional_categories = {\"Guyanese\"},\n}\n\nlabels[\"Northeast Brazil\"] = {\n\tregional_categories = {\"Northeastern Brazilian\"\
      } \n}\naliases[\"Nordestino\"] = \"Northeast Brazil\"\naliases[\"Nordeste\"] = \"Northeast Brazil\"\naliases[\"Northeastern Brazilian\"] = \"South Brazil\"\naliases[\"Northeast Brazilian\"] = \"South Brazil\"\n\nlabels[\"Paraguay\"] = {\n\tregional_categories\
      \ = {\"Paraguayan\"},\n}\n\nlabels[\"Paraná\"] = {\n\tdisplay = \"[[w:Paraná (state)|Paraná]]\",\n\tregional_categories = {\"Paranaense\"},\n}\naliases[\"Paranaense\"] = \"Paraná\"\n\nlabels[\"Peru\"] = {\n\tregional_categories = {\"Peruvian\"},\n}\n\n\
      labels[\"Rio de Janeiro\"] = {\n\tdisplay = \"[[w:Rio de Janeiro|Rio de Janeiro]]\",\n\tregional_categories = {\"Carioca\"},\n}\naliases[\"Fluminense\"] = \"Rio de Janeiro\"\naliases[\"Carioca\"] = \"Rio de Janeiro\"\n\nlabels[\"Rio Grande do Sul\"] =\
      \ {\n\tregional_categories = {\"Gaúcho\"} \n}\naliases[\"Gaúcho\"] = \"Rio Grande do Sul\"\naliases[\"Gaucho\"] = \"Rio Grande do Sul\"\n\nlabels[\"São Paulo\"] = {\n\tdisplay = \"[[w:São Paulo (state)|São Paulo]]\",\n\tregional_categories = {\"Paulista\"\
      },\n}\naliases[\"Sao Paulo\"] = \"São Paulo\"\naliases[\"Paulista\"] = \"São Paulo\"\n\nlabels[\"South Brazil\"] = {\n\tregional_categories = {\"Southern Brazilian\"} \n}\naliases[\"Southern Brazilian\"] = \"South Brazil\"\naliases[\"South Brazilian\"\
      ] = \"South Brazil\"\n\nlabels[\"Trinidad and Tobago\"] = {\n\tdisplay = \"[[Trinidad and Tobago]]\",\n\tregional_categories = {\"Trinidad and Tobago\"},\n}\n\nlabels[\"Uruguay\"] = {\n\tregional_categories = {\"Uruguayan\"},\n}\n\nlabels[\"Suriname\"\
      ] = {\n\tdisplay = \"[[w:Suriname|Suriname]]\",\n\tregional_categories = {\"Surinamese\"},\n}\n\nlabels[\"Venezuela\"] = {\n\tregional_categories = {\"Venezuelan\"},\n}\naliases[\"Venezuelan\"] = \"Venezuela\"\n\n\n-- Asia\n\nlabels[\"Adana\"] = {\n\t\
      display = \"[[w:Adana|Adana]]\",\n\tregional_categories = {\"Adana\"},\n}\naliases[\"Atana\"] = \"Adana\"\n\nlabels[\"Afyonkarahisar\"] = {\n\tdisplay = \"[[w:Afyonkarahisar|Afyonkarahisar]]\",\n\tregional_categories = {\"Afyonkarahisar\"},\n}\naliases[\"\
      Afyon\"] = \"Afyonkarahisar\"\n\nlabels[\"Ağın\"] = {\n\tdisplay = \"[[w:Ağın|Ağın]]\",\t\n\tregional_categories = {\"Ağın\"},\n}\naliases[\"Aghin\"] = \"Ağın\"\naliases[\"Vaghaver\"] = \"Ağın\"\n\nlabels[\"Ağrı\"] = {\n\tdisplay = \"[[w:Ağrı|Ağrı]]\"\
      ,\n\tregional_categories = {\"Ağrı\"},\n}\naliases[\"Aghri\"] = \"Ağrı\"\naliases[\"Karaköse\"] = \"Ağrı\"\n\nlabels[\"Ahlat\"] = {\n\tdisplay = \"[[w:Ahlat|Ahlat]]\",\n\tregional_categories = {\"Ahlat\"},\n}\naliases[\"Khlat\"] = \"Ahlat\"\naliases[\"\
      Xlat\"] = \"Ahlat\"\n\nlabels[\"Akhalkalaki\"] = {\n\tdisplay = \"[[w:Akhalkalaki|Akhalkalaki]]\",\n\tregional_categories = {\"Akhalkalaki\"},\n}\naliases[\"Akhalkalak\"] = \"Akhalkalaki\"\naliases[\"Akhlkalak\"] = \"Akhalkalaki\"\n\nlabels[\"Akn\"] =\
      \ {\n\tdisplay = \"[[w:Kemaliye|Akn]]\",\n\tregional_categories = {\"Akn\"},\n}\naliases[\"Egin\"] = \"Akn\"\naliases[\"Eğin\"] = \"Akn\"\n\nlabels[\"Alashkert\"] = {\n\tdisplay = \"[[w:Eleşkirt|Alashkert]]\",\n\tregional_categories = {\"Alashkert\"},\n\
      }\naliases[\"Eleşkirt\"] = \"Alashkert\"\naliases[\"Alaškert\"] = \"Alashkert\"\n\nlabels[\"Amur\"] = {\n\tdisplay = \"[[w:Amur|Amur]]\",\n\tregional_categories = {\"Amur\"},\n}\n\nlabels[\"Angkorian\"] = {\n\tdisplay = \"[[w:Khmer language#Historical\
      \ periods|Angkorian]]\",\n\tregional_categories = {\"Angkorian\"},\n}\n\nlabels[\"Ankara\"] = {\n\tdisplay = \"[[w:Ankara|Ankara]]\",\n\tregional_categories = {\"Ankara\"},\n}\n\nlabels[\"Antalya\"] = {\n\tdisplay = \"[[w:Antalya|Antalya]]\",\n\tregional_categories\
      \ = {\"Antalya\"},\n}\n\nlabels[\"Arapgir\"] = {\n\tdisplay = \"[[w:Arapgir|Arapgir]]\",\n\tregional_categories = {\"Arapgir\"},\n}\naliases[\"Arapkir\"] = \"Arapgir\"\naliases[\"Arabkir\"] = \"Arapgir\"\n\nlabels[\"Ardanuç\"] = {\n\tdisplay = \"[[w:Ardanuç\
      |Ardanuç]]\",\n\tregional_categories = {\"Ardanuç\"},\n}\naliases[\"Artanuj\"] = \"Ardanuç\"\naliases[\"Ardanuji\"] = \"Ardanuç\"\n\nlabels[\"Artvin\"] = {\n\tdisplay = \"[[w:Artvin|Artvin]]\",\n\tregional_categories = {\"Artvin\"},\n}\naliases[\"Ardvin\"\
      ] = \"Artvin\"\naliases[\"Ardvini\"] = \"Artvin\"\n\nlabels[\"Banten\"] = {\n\tdisplay = \"[[w:Bantenese|Banten]]\",\n\tregional_categories = {\"Banten\"},\n}\naliases[\"Bantenese\"] = \"Banten\"\n\nlabels[\"Beijing\"] = {\n\tdisplay = \"[[w:Beijing dialect|Beijing]]\"\
      ,\n\tregional_categories = {\"Beijing\"},\n}\naliases[\"Peking\"] = \"Beijing\"\naliases[\"Pekingese\"] = \"Beijing\"\naliases[\"Beijing Mandarin\"] = \"Beijing\"\n\nlabels[\"Balıkesir\"] = {\n\tdisplay = \"[[w:Balıkesir|Balıkesir]]\",\n\tregional_categories\
      \ = {\"Balıkesir\"},\n}\n\nlabels[\"Bình Định\"] = {\n\tdisplay = \"[[w:Bình Định|Bình Định dialect]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Binh Dinh\"] = \"Bình Định\"\naliases[\"Bình Định dialect\"] = \"Bình Định\"\naliases[\"Binh\
      \ Dinh dialect\"] = \"Bình Định\"\n\nlabels[\"Bitlis\"] = {\n\tdisplay = \"[[w:Bitlis|Bitlis]]\",\n\tregional_categories = {\"Bitlis\"},\n}\naliases[\"Baghesh\"] = \"Bitlis\"\n\nlabels[\"hbo\"] = {\n    display = \"[[w:Biblical Hebrew|Biblical Hebrew]]\"\
      ,\n    plain_categories = {\"Biblical Hebrew\"},\n}\naliases[\"Biblical Hebrew\"] = \"hbo\"\naliases[\"Classical Hebrew\"] = \"hbo\"\naliases[\"Ancient Hebrew\"] = \"hbo\"\naliases[\"Old Hebrew\"] = \"hbo\"\n\nlabels[\"Bogor\"] = {\n\tregional_categories\
      \ = {\"Bogor\"},\n}\n\nlabels[\"Brebes\"] = {\n\tregional_categories = {\"Brebes\"},\n}\naliases[\"Brebian\"] = \"Brebes\"\n\nlabels[\"Brunei\"] = {\n\tdisplay = \"[[w:Brunei|Brunei]]\",\n\tregional_categories = {\"Bruneian\"},\n}\n\nlabels[\"Burdur\"\
      ] = {\n\tdisplay = \"[[w:Burdur|Burdur]]\",\n\tregional_categories = {\"Burdur\"},\n}\n\nlabels[\"Bursa\"] = {\n\tdisplay = \"[[w:Bursa|Bursa]]\",\n\tregional_categories = {\"Bursa\"},\n}\n\nlabels[\"Çanakkale\"] = {\n\tdisplay = \"[[w:Çanakkale|Çanakkale]]\"\
      ,\n\tregional_categories = {\"Çanakkale\"},\n}\n\nlabels[\"Çemişgezek\"] = {\n\tdisplay = \"[[w:Çemişgezek|Çemişgezek]]\",\n\tregional_categories = {\"Çemişgezek\"},\n}\naliases[\"Chmshkatsag\"] = \"Çemişgezek\"\naliases[\"Çemişkezek\"] = \"Çemişgezek\"\
      \naliases[\"Čmškacag\"] = \"Çemişgezek\"\n\nlabels[\"central Assam\"] = {\n\tdisplay = \"Central Assam\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Central Assam\"] = \"central Assam\"\naliases[\"Central Assamese\"] = \"central Assam\"\naliases[\"\
      central Assamese\"] = \"central Assam\"\n\nlabels[\"central Vietnam\"] = {\n\tdisplay = \"[[w:Central Vietnam|Central Vietnam]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Central Vietnam\"] = \"central Vietnam\"\naliases[\"central Vietnamese\"\
      ] = \"central Vietnam\"\naliases[\"Central Vietnamese\"] = \"central Vietnam\"\n\nlabels[\"China\"] = {\n\tdisplay = \"[[w:China|China]]\",\n\tregional_categories = {\"Chinese\"},\n}\n\nlabels[\"Cirebon\"] = {\n\tregional_categories = {\"Cirebon\"},\n\
      }\naliases[\"Cirebonese\"] = \"Cirebon\"\n\nlabels[\"Cypriot\"] = {\n\tdisplay = \"[[w:Cyprus|Cyprus]]\",\n\tregional_categories = {\"Cypriot\"},\n}\naliases['cypriot'] = 'Cypriot'\n\nlabels[\"Delhi\"] = {\n\tdisplay = \"[[w:Delhi|Delhi]]\",\n\tregional_categories\
      \ = {\"Delhi\"},\n}\n\nlabels[\"Divriği\"] = {\n\tdisplay = \"[[w:Divriği|Divriği]]\",\n\tregional_categories = {\"Divriği\"},\n}\naliases[\"Tevrik\"] = \"Divriği\"\naliases[\"Tewrik\"] = \"Divriği\"\naliases[\"Dewrik\"] = \"Divriği\"\naliases[\"Devrik\"\
      ] = \"Divriği\"\naliases[\"Devrike\"] = \"Divriği\"\naliases[\"Dewrike\"] = \"Divriği\"\n\nlabels[\"Denizli\"] = {\n\tdisplay = \"[[w:Denizli|Denizli]]\",\n\tregional_categories = {\"Denizli\"},\n}\n\nlabels[\"Diyarbakır\"] = {\n\tdisplay = \"[[w:Diyarbakı\
      r|Diyarbakır]]\",\n\tregional_categories = {\"Diyarbakır\"},\n}\naliases[\"Diyarbakir\"] = \"Diyarbakır\"\naliases[\"Diyarbekir\"] = \"Diyarbakır\"\naliases[\"Tigranakert\"] = \"Diyarbakır\"\n\nlabels[\"East Sakhalin\"] = {\n\tdisplay = \"East [[w:Sakhalin|Sakhalin]]\"\
      , \n\tregional_categories = {\"East Sakhalin\"},\n}\n\nlabels[\"Elazığ\"] = {\n\tdisplay = \"[[w:Elazığ|Elazığ]]\",\n\tregional_categories = {\"Elazığ\"},\n}\naliases[\"Elazig\"] = \"Elazığ\"\naliases[\"Elazigh\"] = \"Elazığ\"\n\nlabels[\"Erciş\"] = {\n\
      \tdisplay = \"[[w:Erciş|Erciş]]\",\n\tregional_categories = {\"Erciş\"},\n}\naliases[\"Ercis\"] = \"Erciş\"\naliases[\"Archesh\"] = \"Erciş\"\naliases[\"Artchesh\"] = \"Erciş\"\naliases[\"Erdîş\"] = \"Erciş\"\n\nlabels[\"Erzurum\"] = {\n\tdisplay = \"\
      [[w:Erzurum|Erzurum]]\",\n\tregional_categories = {\"Erzurum\"},\n}\naliases[\"Karin\"] = \"Erzurum\"\naliases[\"Erzrum\"] = \"Erzurum\"\n\nlabels[\"Eskişehir\"] = {\n\tdisplay = \"[[w:Eskişehir|Eskişehir]]\",\n\tregional_categories = {\"Eskişehir\"},\n\
      }\n\nlabels[\"Fengkai\"] = {\n\tdisplay = \"[[w:Fengkai County|Fengkai]]\",\n\tregional_categories = {\"Fengkai\"},\n}\n\nlabels[\"Fuzuli\"] = {\n\tdisplay = \"[[w:Fuzuli District|Fuzuli]]\",\n\tregional_categories = {\"Fuzuli\"},\n}\naliases[\"Füzuli\"\
      ] = \"Fuzuli\"\naliases[\"Fizuli\"] = \"Fuzuli\"\n\nlabels[\"Gadabay\"] = {\n\tdisplay = \"[[w:Gadabay District|Gadabay]]\",\n\tregional_categories = {\"Gadabay\"},\n}\naliases[\"Gədəbəy\"] = \"Gadabay\"\naliases[\"Getabek\"] = \"Gadabay\"\n\nlabels[\"\
      Ganja\"] = {\n\tdisplay = \"[[w:Ganja, Azerbaijan|Ganja]]\",\n\tregional_categories = {\"Ganja\"},\n}\naliases[\"Gandzak\"] = \"Ganja\"\n\nlabels[\"Gansu\"] = {\n\tdisplay = \"[[w:Gansu, China|Gansu]]\",\n\tregional_categories = {\"Gansu\"},\n}\n\nlabels[\"\
      Giresun\"] = {\n\tdisplay = \"[[w:Giresun|Giresun]]\",\n\tregional_categories = {\"Giresun\"},\n}\n\nlabels[\"Goris\"] = {\n\tdisplay = \"[[w:Goris|Goris]]\",\n\tregional_categories = {\"Goris\"},\n}\n\nlabels[\"Hải Phòng\"] = {\n\tdisplay = \"[[w:Haiphong|Hả\
      i Phòng dialect]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"Hai Phong\"] = \"Hải Phòng\"\naliases[\"Haiphong\"] = \"Hải Phòng\"\naliases[\"Hải Phòng dialect\"] = \"Hải Phòng\"\naliases[\"Hai Phong dialect\"] = \"Hải Phòng\"\n\nlabels[\"\
      Haiti\"] = {\n\tdisplay = \"[[w:Haiti|Haiti]]\",\n\tregional_categories = {\"Haitian\"},\n}\n\nlabels[\"Hakkari\"] = {\n\tdisplay = \"[[w:Hakkari|Hakkari]]\",\t\n\tregional_categories = {\"Hakkari\"},\n}\naliases[\"Hakkiari\"] = \"Hakkari\"\naliases[\"\
      Hakari\"] = \"Hakkari\"\naliases[\"Hakiari\"] = \"Hakkari\"\naliases[\"Hakkâri\"] = \"Hakkari\"\n\nlabels[\"Hà Tĩnh\"] = {\n\tdisplay = \"[[w:Hà Tĩnh|Hà Tĩnh dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Ha Tinh\"] = \"Hà Tĩnh\"\n\
      aliases[\"Hà Tĩnh dialect\"] = \"Hà Tĩnh\"\naliases[\"Ha Tinh dialect\"] = \"Hà Tĩnh\"\n\nlabels[\"Hemşin\"] = {\n\tdisplay = \"[[w:Hemşin|Hemşin]]\",\n\tregional_categories = {\"Hemşin\"},\n}\n\nlabels[\"Hong Kong\"] = {\n\tdisplay = \"[[w:Hong Kong|Hong\
      \ Kong]]\",\n\tregional_categories = {\"Hong Kong\"},\n}\n\nlabels[\"Huế\"] = {\n\tdisplay = \"[[w:Huế|Huế dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Hue\"] = \"Huế\"\naliases[\"Huế dialect\"] = \"Huế\"\naliases[\"Hue dialect\"\
      ] = \"Huế\"\n\nlabels[\"Hyderabad\"] = {\n\tdisplay = \"[[w:Hyderabad|Hyderabad]]\",\n\tregional_categories = {\"Hyderabadi\"},\n}\n\nlabels[\"İçel\"] = {\n\tdisplay = \"[[w:Mersin Province|İçel]]\",\n\tregional_categories = {\"İçel\"},\n}\naliases[\"\
      Içel\"] = \"İçel\"\n\nlabels[\"India\"] = {\n\tdisplay = \"[[w:India|India]]\",\n\tregional_categories = {\"Indian\"},\n}\naliases[\"Indian\"] = \"India\"\n\nlabels[\"Indore\"] = {\n\tdisplay = \"[[Indore|Indore]]\",\n\tregional_categories = {\"Indore\"\
      },\n}\n\nlabels[\"Indonesia\"] = {\n\tdisplay = \"[[w:Indonesia|Indonesia]]\",\n\tregional_categories = {\"Indonesian\"},\n}\n\nlabels[\"Iran\"] = {\n\tdisplay = \"[[w:Iran|Iran]]\",\n\tregional_categories = {\"Iranian\"},\n}\n\nlabels[\"Iraqi\"] = {\n\
      \tdisplay = \"Iraq\",\n\tregional_categories = {\"Iraqi\"} }\naliases[\"Iraq\"] = \"Iraqi\"\n\nlabels[\"Isparta\"] = {\n\tdisplay = \"[[w:Isparta|Isparta]]\",\n\tregional_categories = {\"Isparta\"},\n}\n\nlabels[\"Israel\"] = {\n\tdisplay = \"[[w:Israel|Israel]]\"\
      ,\n\tregional_categories = {\"Israeli\"},\n}\naliases[\"Israeli\"] = \"Israel\"\n\nlabels[\"Ivory Coast\"] = {\n\tdisplay = \"[[w:Ivory Coast|Ivory Coast]]\",\n\tregional_categories = {\"Ivorian\"},\n}\naliases[\"Côte d’Ivoire\"] = \"Ivory Coast\"\naliases[\"\
      Côte d'Ivoire\"] = \"Ivory Coast\"\naliases[\"Ivorian\"] = \"Ivory Coast\"\n\nlabels[\"İzmir\"] = {\n\tdisplay = \"[[w:İzmir|İzmir]]\",\n\tregional_categories = {\"İzmir\"},\n}\naliases[\"Izmir\"] = \"İzmir\"\n\nlabels[\"İzmit\"] = {\n\tdisplay = \"[[w:İ\
      zmit|İzmit]]\",\n\tregional_categories = {\"İzmit\"},\n}\naliases[\"Izmit\"] = \"İzmit\"\naliases[\"Nicomedia\"] = \"İzmit\"\naliases[\"Nikomedia\"] = \"İzmit\"\n\nlabels[\"Jakarta\"] = {\n\tdisplay = \"[[w:Jakarta|Jakarta]]\",\n\tregional_categories =\
      \ {\"Jakarta\"},\n}\n\nlabels[\"Java\"] = {\n\tdisplay = \"[[w:Java|Java]]\",\n\tregional_categories = {\"Javanese\"},\n}\naliases[\"Javanese\"] = \"Java\"\n\nlabels[\"Jordanian\"] = {\n\tdisplay = \"Jordan\",\n\tregional_categories = {\"Jordanian\"} }\n\
      aliases[\"Jordan\"] = \"Jordanian\"\n\nlabels[\"Kaptanpaşa\"] = {\n\tdisplay = \"[[w:tr:Kaptanpaşa, Çayeli|Kaptanpaşa]]\",\n\tregional_categories = {\"Rize\"},\n}\n\nlabels[\"Kars\"] = {\n\tdisplay = \"[[w:Kars|Kars]]\",\n\tregional_categories = {\"Kars\"\
      },\n}\naliases[\"Ghars\"] = \"Kars\"\n\nlabels[\"Kathiyawadi\"] = {\n\tdisplay = \"[[w:Kathiawar|Kathiyawadi]]\",\n\tregional_categories = {\"Kathiyawadi\"},\n}\naliases[\"Kathiawadi\"] = \"Kathiyawadi\"\naliases[\"Sorathi\"] = \"Kathiyawadi\"\naliases[\"\
      Bhawnagari\"] = \"Kathiyawadi\"\naliases[\"Gohilwadi\"] = \"Kathiyawadi\"\naliases[\"Holadi\"] = \"Kathiyawadi\"\naliases[\"Jhalawadi\"] = \"Kathiyawadi\"\n\nlabels[\"Kayseri\"] = {\n\tdisplay = \"[[w:Kayseri|Kayseri]]\",\n\tregional_categories = {\"Kayseri\"\
      },\n}\naliases[\"Kesaria\"] = \"Kayseri\"\n\nlabels[\"Kazym\"] = {\n\tregional_categories = {\"Kazym\"},\n}\n\nlabels[\"Kemaliye\"] = {\n\tdisplay = \"[[w:Kemaliye|Kemaliye]]\",\n\tregional_categories = {\"Kemaliye\"},\n}\n\nlabels[\"Kharberd\"] = {\n\t\
      display = \"[[w:Elazığ|Kharberd]]\",\n\tregional_categories = {\"Kharberd\"},\n}\naliases[\"Kharpert\"] = \"Kharberd\"\naliases[\"Kharput\"] = \"Kharberd\"\naliases[\"Harput\"] = \"Kharberd\"\n\nlabels[\"Khevsureti\"] = {\n\tdisplay = \"[[w:Khevsureti|Khevsureti]]\"\
      ,\n\tregional_categories = {\"Khevsureti\"},\n}\naliases[\"Khevsuria\"] = \"Khevsureti\"\n\nlabels[\"Khotorjur\"] = {\n\tdisplay = \"[[w:Khotorjur|Khotorjur]]\",\n\tregional_categories = {\"Khotorjur\"},\n}\naliases[\"Khodorchur\"] = \"Khotorjur\"\naliases[\"\
      Hodiçor\"] = \"Khotorjur\"\naliases[\"Xodiçur\"] = \"Khotorjur\"\naliases[\"Xodrçur\"] = \"Khotorjur\"\naliases[\"Xodorçur\"] = \"Khotorjur\"\naliases[\"Sırakonak\"] = \"Khotorjur\"\n\nlabels[\"Konya\"] = {\n\tdisplay = \"[[w:Konya|Konya]]\",\n\tregional_categories\
      \ = {\"Konya\"},\n}\n\nlabels[\"Lachin\"] = {\n\tdisplay = \"[[w:Lachin District|Lachin]]\",\n\tregional_categories = {\"Lachin\"},\n}\naliases[\"Laçın\"] = \"Lachin\"\naliases[\"Laçîn\"] = \"Lachin\"\n\nlabels[\"Lebanese\"] = {\n\tdisplay = \"Lebanon\"\
      ,\n\tregional_categories = {\"Lebanese\"} }\naliases[\"Lebanon\"] = \"Lebanese\"\n\nlabels[\"Levantine\"] = {\n\tdisplay = \"[[w:Levant|Levantine]]\",\n\tregional_categories = {\"Levantine\"},\n}\naliases[\"Levant\"] = \"Levantine\"\n\nlabels[\"Libya\"\
      ] = {\n\tdisplay = \"Libya\",\n\tregional_categories = {\"Libyan\"} }\naliases[\"Libyan\"] = \"Libya\"\n\nlabels[\"Lisan ud-Dawat\"] = {\n\tdisplay = \"[[w:Lisan ud-Dawat|LDA]]\",\n\tregional_categories = {\"Lisan ud-Dawat\"},\n}\naliases[\"LDA\"] = \"\
      Lisan ud-Dawat\"\naliases[\"Lisaan ud-Da'wat\"] = \"Lisan ud-Dawat\"\naliases[\"Lisaan ud-Da'wat il-'Alaviyah\"] = \"Lisan ud-Dawat\"\n\nlabels[\"Lucknow\"] = {\n\tregional_categories = {\"Lucknow\"},\n}\n\nlabels[\"Macau\"] = {\n\tdisplay = \"[[w:Macau|Macau]]\"\
      ,\n\tregional_categories = {\"Macanese\"},\n}\naliases[\"Macao\"] = \"Macau\"\nlabels[\"Mainland China\"] = {\n\tdisplay = \"[[w:Mainland China|Mainland China]]\",\n\tregional_categories = {\"Mainland China\"},\n}\naliases[\"Mainland\"] = \"Mainland China\"\
      \naliases[\"mainland\"] = \"Mainland China\"\naliases[\"mainland China\"] = \"Mainland China\"\n\nlabels[\"Malatya\"] = {\n\tdisplay = \"[[w:Malatya|Malatya]]\",\n\tregional_categories = {\"Malatya\"},\n}\naliases[\"Malatia\"] = \"Malatya\"\n\nlabels[\"\
      Malayeri\"] = {\n\tdisplay = \"[[w:Malayer|Malayeri]]\",\n\tregional_categories = {\"Malayeri\"},\n}\n\nlabels[\"Malaysia\"] = {\n\tdisplay = \"[[w:Malaysia|Malaysia]]\",\n\tregional_categories = {\"Malaysian\"},\n}\naliases[\"Malaysian\"] = \"Malaysia\"\
      \n\nlabels[\"Medieval Hebrew\"] = {\n    display = \"[[w:Medieval Hebrew|Medieval Hebrew]]\",\n    plain_categories = {\"Medieval Hebrew\"},\n}\n\nlabels[\"Mehsani\"] = {\n\tdisplay = \"[[w:Mehsana|Mehsani]]\",\n\tregional_categories = {\"Mehsani\"},\n\
      }\naliases[\"Mahesani\"] = \"Mehsani\"\n\nlabels[\"Mekong Delta\"] = {\n\tdisplay = \"[[w:Mekong Delta|Mekong Delta dialect]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Mekong Delta dialect\"] = \"Mekong Delta\"\n\nlabels[\"Mesudiye\"] =\
      \ {\n\tdisplay = \"[[w:Mesudiye, Ordu|Mesudiye]]\",\n\tregional_categories = {\"Mesudiye\"},\n}\n\nlabels[\"Mishnaic Hebrew\"] = {\n    display = \"[[w:Mishnaic Hebrew|Mishnaic Hebrew]]\",\n    plain_categories = {\"Mishnaic Hebrew\"},\n}\naliases[\"Mishnaic\"\
      ] = \"Mishnaic Hebrew\"\n\nlabels[\"Moks\"] = {\n\tdisplay = \"[[w:Bahçesaray (District), Van|Moks]]\",\n\tregional_categories = {\"Moks\"},\n}\naliases[\"Müküs\"] = \"Moks\"\naliases[\"Miks\"] = \"Moks\"\n\nlabels[\"Muğla\"] = {\n\tdisplay = \"[[w:Muğ\
      la|Muğla]]\",\n\tregional_categories = {\"Muğla\"},\n}\n\nlabels[\"Mumbai\"] = {\n\tregional_categories = {\"Mumbai\"},\n}\n\nlabels[\"Muş\"] = {\n\tdisplay = \"[[w:Muş|Muş]]\",\n\tregional_categories = {\"Muş\"},\n}\naliases[\"Mush\"] = \"Muş\"\n\nlabels[\"\
      Nakhchivan\"] = {\n\tdisplay = \"[[w:Nakhchivan|Nakhchivan]]\",\n\tregional_categories = {\"Nakhchivan\"},\n}\naliases[\"Naxçıvan\"] = \"Nakhchivan\"\naliases[\"Nakhichevan\"] = \"Nakhchivan\"\naliases[\"Nakhijevan\"] = \"Nakhchivan\"\naliases[\"Nahçı\
      van\"] = \"Nakhchivan\"\n\nlabels[\"Negeri Sembilan\"] = {\n\tdisplay = \"[[w:Negeri Sembilan|Negeri Sembilan]]\",\n\tregional_categories = {\"Negeri Sembilan\"},\n}\n\nlabels[\"Nepal\"] = {\n\tdisplay = \"[[w:Nepal|Nepal]]\",\n\tregional_categories =\
      \ {\"Nepali\"},\n}\n\nlabels[\"Nghệ An\"] = {\n\tdisplay = \"[[w:Nghệ An|Nghệ An dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Nghe An\"] = \"Nghệ An\"\naliases[\"Nghệ An dialect\"] = \"Nghệ An\"\naliases[\"Nghe An dialect\"] = \"\
      Nghệ An\"\n\nlabels[\"Nghệ Tĩnh\"] = {\n\tdisplay = \"[[w:Nghệ Tĩnh|Nghệ Tĩnh dialect]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Nghe Tinh\"] = \"Nghệ Tĩnh\"\naliases[\"Nghệ Tinh dialect\"] = \"Nghệ Tĩnh\"\naliases[\"Nghe Tinh dialect\"\
      ] = \"Nghệ Tĩnh\"\n\nlabels[\"Niğde\"] = {\n\tdisplay = \"[[w:Niğde|Niğde]]\",\n\tregional_categories = {\"Niğde\"},\n}\naliases[\"Nigde\"] = \"Niğde\"\n\nlabels[\"Nor Bayazet\"] = {\n\tdisplay = \"[[w:Nor Bayazet|Nor Bayazet]]\",\n\tregional_categories\
      \ = {\"Nor Bayazet\"},\n}\naliases[\"Novo-Bayazet\"] = \"Nor Bayazet\"\naliases[\"Gavar\"] = \"Nor Bayazet\"\n\nlabels[\"Nor Nakhichevan\"] = {\n\tdisplay = \"[[w:Nakhichevan-on-Don|Nor Nakhichevan]]\",\n\tregional_categories = {\"Nor Nakhichevan\"},\n\
      }\naliases[\"New Nakhichevan\"] = \"Nor Nakhichevan\"\naliases[\"Nor Nakhijevan\"] = \"Nor Nakhichevan\"\naliases[\"Nakhichevan-on-Don\"] = \"Nor Nakhichevan\"\n\nlabels[\"North Korea\"] = {\n\tdisplay = \"[[w:North Korea|North Korea]]\",\n\tregional_categories\
      \ = {\"North\"},\n}\n\nlabels[\"North Sakhalin\"] = {\n\tdisplay = \"North [[w:Sakhalin|Sakhalin]]\", \n\tregional_categories = {\"North Sakhalin\"},\n}\n\nlabels[\"North Central Vietnam\"] = {\n\tdisplay = \"[[w:North Central Coast|North Central Vietnam]]\"\
      ,\n\tregional_categories = {\"Central\"},\n}\naliases[\"North-Central Vietnam\"] = \"North Central Vietnam\"\n\nlabels[\"northern Vietnam\"] = {\n\tdisplay = \"[[w:Northern Vietnam|Northern Vietnam]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"\
      north Vietnam\"] = \"northern Vietnam\"\naliases[\"North Vietnam\"] = \"northern Vietnam\"\naliases[\"north Vietnamese\"] = \"northern Vietnam\"\naliases[\"North Vietnamese\"] = \"northern Vietnam\"\naliases[\"Northern Vietnam\"] = \"northern Vietnam\"\
      \naliases[\"northern Vietnamese\"] = \"northern Vietnam\"\naliases[\"Northern Vietnamese\"] = \"northern Vietnam\"\n\nlabels[\"Oman\"] = {\n\tdisplay = \"Oman\",\n\tregional_categories = {\"Omani\"},\n}\naliases[\"Omani\"] = \"Oman\"\n\nlabels[\"overseas\
      \ Vietnamese\"] = {\n\tdisplay = \"[[w:Overseas Vietnamese|Overseas Vietnamese]]\",\n\tregional_categories = {\"Overseas\"},\n}\naliases[\"Overseas Vietnamese\"] = \"overseas Vietnamese\"\n\nlabels[\"Pahang\"] = {\n\tdisplay = \"[[w:Pahang|Pahang]]\",\n\
      \tregional_categories = {\"Pahang\"},\n}\n\nlabels[\"Pakistan\"] = {\n\tdisplay = \"[[w:Pakistan|Pakistan]]\",\n\tregional_categories = {\"Pakistani\"},\n}\n\nlabels[\"Palestinian\"] = {\n\tdisplay = \"Palestine\",\n\tregional_categories = {\"Palestinian\"\
      } }\naliases[\"Palestine\"] = \"Palestinian\"\n\nlabels[\"Partizak\"] = {\n\tdisplay = \"[[w:hy:Պարտիզակ (Քոջաելի)|Partizak]]\",\n\tregional_categories = {\"Partizak\"},\n}\naliases[\"Bardizag\"] = \"Partizak\"\n\nlabels[\"Perak\"] = {\n\tdisplay = \"\
      [[w:Perak|Perak]]\",\n\tregional_categories = {\"Perak\"},\n}\n\nlabels[\"Philadelphia\"] = {\n\tdisplay = \"[[w:Philadelphia|Philadelphia]]\",\n\tregional_categories = {\"Pennsylvanian\"},\n} -- can be split off if enough entries in it arise; group with\
      \ PA for now\n\nlabels[\"Philippines\"] = {\n\tdisplay = \"[[w:Philippines|Philippines]]\",\n\tregional_categories = {\"Philippine\"},\n}\n\nlabels[\"Phú Yên\"] = {\n\tdisplay = \"[[w:Phú Yên|Phú Yên dialect]]\",\n\tregional_categories = {\"Southern\"\
      },\n}\naliases[\"Phu Yen\"] = \"Phú Yên\"\naliases[\"Phú Yên dialect\"] = \"Phú Yên\"\naliases[\"Phu Yen dialect\"] = \"Phú Yên\"\n\nlabels[\"Pre-Angkorian\"] = {\n\tdisplay = \"[[w:Khmer language#Historical periods|Pre-Angkorian]]\",\n\tregional_categories\
      \ = {\"Pre-Angkorian\"},\n}\n\nlabels[\"Priangan\"] = {\n\tregional_categories = {\"Priangan\"},\n}\n\nlabels[\"Pshavi\"] = {\n\tdisplay = \"[[w:Pshavi|Pshavi]]\",\n\tregional_categories = {\"Pshavi\"},\n}\n\nlabels[\"Pulur\"] = {\n\tdisplay = \"[[w:Ovacı\
      k, Dersim|Pulur]]\",\n\tregional_categories = {\"Pulur\"},\n}\n\nlabels[\"Qakh\"] = {\n\tdisplay = \"[[w:Qakh District|Qakh]]\",\n\tregional_categories = {\"Qakh\"},\n}\naliases[\"Kakhi\"] = \"Qakh\"\naliases[\"Gakh\"] = \"Qakh\"\naliases[\"Qax\"] = \"\
      Qakh\"\n\nlabels[\"Qinghai\"] = {\n\tdisplay = \"[[w:Qinghai, China|Qinghai]]\",\n\tregional_categories = {\"Qinghai\"},\n}\n\nlabels[\"Quảng Bình\"] = {\n\tdisplay = \"[[w:Quảng Bình|Quảng Bình dialect]]\",\n\tregional_categories = {\"Central\"},\n}\n\
      aliases[\"Quang Binh\"] = \"Quảng Bình\"\naliases[\"Quảng Bình dialect\"] = \"Quảng Bình\"\naliases[\"Quang Binh dialect\"] = \"Quảng Bình\"\n\nlabels[\"Quảng Nam\"] = {\n\tdisplay = \"[[w:Quảng Nam|Quảng Nam dialect]]\",\n\tregional_categories = {\"Southern\"\
      },\n}\naliases[\"Quang Nam\"] = \"Quảng Nam\"\naliases[\"Quảng Nam dialect\"] = \"Quảng Nam\"\naliases[\"Quang Nam dialect\"] = \"Quảng Nam\"\n\nlabels[\"Quảng Ngãi\"] = {\n\tdisplay = \"[[w:Quảng Ngãi|Quảng Ngãi dialect]]\",\n\tregional_categories = {\"\
      Southern\"},\n}\naliases[\"Quang Ngai\"] = \"Quảng Ngãi\"\naliases[\"Quảng Ngãi dialect\"] = \"Quảng Ngãi\"\naliases[\"Quang Ngai dialect\"] = \"Quảng Ngãi\"\n\nlabels[\"Quảng Trị\"] = {\n\tdisplay = \"[[w:Quảng Trị|Quảng Trị dialect]]\",\n\tregional_categories\
      \ = {\"Central\"},\n}\naliases[\"Quang Tri\"] = \"Quảng Trị\"\naliases[\"Quảng Trị dialect\"] = \"Quảng Trị\"\naliases[\"Quang Tri dialect\"] = \"Quảng Trị\"\n\nlabels[\"Rize\"] = {\n\tdisplay = \"[[w:Rize|Rize]]\",\n\tregional_categories = {\"Rize\"},\n\
      }\n\nlabels[\"Sakhalin\"] = {\n\tdisplay = \"[[w:Sakhalin|Sakhalin]]\",\n\tregional_categories = {\"Sakhalin\"},\n}\n\nlabels[\"Salyan\"] = {\n\tdisplay = \"[[w:Salyan District, Azerbaijan|Salyan]]\",\n\tregional_categories = {\"Salyan\"},\n}\n\nlabels[\"\
      Sasun\"] = {\n\tdisplay = \"[[w:Sason|Sasun]]\",\n\tregional_categories = {\"Sasun\"},\n}\naliases[\"Sason\"] = \"Sasun\"\naliases[\"Sassoun\"] = \"Sasun\"\n\nlabels[\"Shamakhi\"] = {\n\tdisplay = \"[[w:Shamakhi|Shamakhi]]\",\n\tregional_categories = {\"\
      Shamakhi\"},\n}\naliases[\"Şamaxı\"] = \"Shamakhi\"\n\nlabels[\"Shanghai\"] = {\n\tdisplay = \"[[w:Shanghai|Shanghai]]\",\n\tregional_categories = {\"Shanghainese\"},\n}\naliases[\"Shanghainese\"] = \"Shanghai\"\n\nlabels[\"Sheki\"] = {\n\tdisplay = \"\
      [[w:Sheki, Azerbaijan|Sheki]]\",\n\tregional_categories = {\"Sheki\"},\n}\naliases[\"Şəki\"] = \"Sheki\"\naliases[\"Shaki\"] = \"Sheki\"\n\nlabels[\"Shidong\"] = {\n\tdisplay = \"[[w:Shidong|Shidong]]\",\n\tregional_categories = {\"Shidong\"},\n}\n\nlabels[\"\
      Shuryshkar\"] = {\n\tregional_categories = {\"Shuryshkar\"},\n}\naliases[\"Shurishkar\"] = \"Shuryshkar\"\n\nlabels[\"Singapore\"] = {\n\tdisplay = \"[[w:Singapore|Singapore]]\",\n\tregional_categories = {\"Singapore\"},\n}\naliases[\"Singaporian\"] =\
      \ \"Singapore\"\n\nlabels[\"Sivas\"] = {\n\tdisplay = \"[[w:Sivas|Sivas]]\",\n\tregional_categories = {\"Sivas\"},\n}\naliases[\"Sebastia\"] = \"Sivas\"\naliases[\"Sebastea\"] = \"Sivas\"\n\nlabels[\"South Korea\"] = {\n\tdisplay = \"[[w:South Korea|South\
      \ Korea]]\",\n\tregional_categories = {\"South\"},\n}\n\nlabels[\"South Sakhalin\"] = {\n\tdisplay = \"South [[w:Sakhalin|Sakhalin]]\", \n\tregional_categories = {\"South Sakhalin\"},\n}\n\nlabels[\"southern Vietnam\"] = {\n\tdisplay = \"[[w:Southern Vietnam|Southern\
      \ Vietnam]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"south Vietnam\"] = \"southern Vietnam\"\naliases[\"South Vietnam\"] = \"southern Vietnam\"\naliases[\"south Vietnamese\"] = \"southern Vietnam\"\naliases[\"South Vietnamese\"] = \"southern\
      \ Vietnam\"\naliases[\"Southern Vietnam\"] = \"southern Vietnam\"\naliases[\"southern Vietnamese\"] = \"southern Vietnam\"\naliases[\"Southern Vietnamese\"] = \"southern Vietnam\"\n\nlabels[\"Sri Lanka\"] = {\n\tdisplay = \"[[Sri Lanka]]\",\n\tregional_categories\
      \ = {\"Sri Lankan\"},\n}\n\nlabels[\"Surati\"] = {\n\tdisplay = \"[[w:Surat district|Surati]]\",\n\tregional_categories = {\"Surati\"},\n}\n\nlabels[\"Surgut\"] = {\n\tdisplay = \"[[w:Surgut|Surgut]]\",\n\tregional_categories = {\"Surgut\"},\n}\n\nlabels[\"\
      Suzhou\"] = {\n\tdisplay = \"[[w:Suzhou|Suzhou]]\",\n\tregional_categories = {\"Suzhounese\"},\n}\naliases[\"Suzhounese\"] = \"Suzhou\"\n\nlabels[\"Syrian\"] = {\n\tdisplay = \"Syria\",\n\tregional_categories = {\"Syrian\"} }\naliases[\"Syria\"] = \"Syrian\"\
      \n\nlabels[\"Taiwan\"] = {\n\tdisplay = \"[[w:Taiwan|Taiwan]]\",\n\tregional_categories = {\"Taiwanese\"},\n}\naliases[\"Taiwanese\"] = \"Taiwan\"\n\nlabels[\"Tbilisi\"] = {\n\tdisplay = \"[[w:Tbilisi|Tbilisi]]\",\n\tregional_categories = {\"Tbilisi\"\
      },\n}\naliases[\"Tiflis\"] = \"Tbilisi\"\n\nlabels[\"Thailand\"] = {\n\tdisplay = \"[[w:Thailand|Thailand]]\",\n\tregional_categories = {\"Thai\"},\n}\n\nlabels[\"Thanh Hoá\"] = {\n\tdisplay = \"[[w:Thanh Hoá|Thanh Hoá dialect]]\",\n\tregional_categories\
      \ = {\"Central\"},\n}\naliases[\"Thanh Hoa\"] = \"Thanh Hoá\"\naliases[\"Thanh Hoá dialect\"] = \"Thanh Hoá\"\naliases[\"Thanh Hoa dialect\"] = \"Thanh Hoá\"\n\nlabels[\"Tianjin\"] = {\n\tdisplay = \"[[w:Tianjin dialect|Tianjin]]\",\n\tplain_categories\
      \ = {\"Mandarin Chinese\"},\n}\naliases[\"Tianjin dialect\"] = \"Tianjin\"\naliases[\"Tianjin Mandarin\"] = \"Tianjin\"\naliases[\"Tianjinese\"] = \"Tianjin\"\n\nlabels[\"Tokat\"] = {\n\tdisplay = \"[[w:Tokat|Tokat]]\",\n\tregional_categories = {\"Tokat\"\
      },\n}\naliases[\"Evdokia\"] = \"Tokat\"\n\nlabels[\"Trabzon\"] = {\n\tdisplay = \"[[w:Trabzon|Trabzon]]\",\n\tregional_categories = {\"Trabzon\"},\n}\naliases[\"Trapizon\"] = \"Trabzon\"\n\nlabels[\"Urfa\"] = {\n\tdisplay = \"[[w:Şanlıurfa|Urfa]]\",\n\t\
      regional_categories = {\"Urfa\"},\n}\naliases[\"Urha\"] = \"Urfa\"\naliases[\"Şanlıurfa\"] = \"Urfa\"\n\nlabels[\"Uşak\"] = {\n\tdisplay = \"[[w:Uşak|Uşak]]\",\n\tregional_categories = {\"Uşak\"},\n}\n\nlabels[\"Van\"] = {\n\tdisplay = \"[[w:Van, Turkey|Van]]\"\
      ,\n\tregional_categories = {\"Van\"},\n}\n\nlabels[\"Vietnam\"] = {\n\tdisplay = \"[[w:Vietnam|Vietnam]]\",\n\tregional_categories = {\"Vietnamese\"},\n}\n\nlabels[\"Wuhan\"] = {\n\tdisplay = \"[[w:Wuhan dialect|Wuhan]]\",\n\tregional_categories = {\"\
      Wuhan\"},\n}\naliases[\"Hankou\"] = \"Wuhan\"\naliases[\"Hankow\"] = \"Wuhan\"\naliases[\"Wuhan dialect\"] = \"Wuhan\"\n\nlabels[\"Yanbian\"] = {\n\tdisplay = \"[[w:Korean language in China|Yanbian dialect]]\",\n\tregional_categories = {\"Yanbian\"},\n\
      }\n\nlabels[\"Yemen\"] = {\n\tdisplay = \"Yemen\",\n\tregional_categories = {\"Yemeni\"},\n}\naliases[\"Yemeni\"] = \"Yemen\"\naliases[\"Yemenite\"] = \"Yemen\"\n\nlabels[\"Yerevan\"] = {\n\tdisplay = \"[[w:Yerevan|Yerevan]]\",\n\tregional_categories =\
      \ {\"Yerevan\"},\n}\naliases[\"İrəvan\"] = \"Yerevan\"\n\nlabels[\"Yonggu\"] = {\n\tdisplay = \"[[w:Yonggu, Guangdong|Yonggu]]\",\n\tregional_categories = {\"Yonggu\"},\n}\n\nlabels[\"Zangilan\"] = {\n\tdisplay = \"[[w:Zəngilan|Zangilan]]\",\n\tregional_categories\
      \ = {\"Zangilan\"},\n}\naliases[\"Zəngilan\"] = \"Zangilan\"\naliases[\"Zangelan\"] = \"Zangilan\"\n\nlabels[\"Zanjan\"] = {\n\tdisplay = \"[[w:Zanjan, Iran|Zanjan]]\",\n\tregional_categories = {\"Zanjan\"},\n}\naliases[\"Zәncan\"] = \"Zanjan\"\naliases[\"\
      Zәngan\"] = \"Zanjan\"\n\nlabels[\"Zaqatala\"] = {\n\tdisplay = \"[[w:Zaqatala District|Zaqatala]]\",\n\tregional_categories = {\"Zaqatala\"},\n}\naliases[\"Zakatala\"] = \"Zaqatala\"\naliases[\"Zagatala\"] = \"Zaqatala\"\n\n\n-- Europe\n\nlabels[\"Aachen\"\
      ] = {\n\tdisplay = \"[[w:Aachen dialect|Aachen]]\",\n\tregional_categories = {\"Aachen\"},\n}\n\nlabels[\"Alghero\"] = {\n\tdisplay = \"[[w:Alghero|Alghero]]\",\n\tregional_categories = {\"Algherese\"},\n}\n\nlabels[\"Alsatian\"] = {\n\tdisplay = \"[[w:Alsatian\
      \ dialect|Alsatian]]\",\n\tregional_categories = {\"Alsatian\"},\n}\naliases[\"Alsace\"] = \"Alsatian\"\naliases[\"Alsacien\"] = \"Alsatian\"\naliases[\"Alsatian German\"] = \"Alsatian\"\naliases[\"Elsässisch\"] = \"Alsatian\"\n\nlabels[\"Al-Andalus\"\
      ] = {\n\tdisplay = \"[[w:al-Andalus|al-Andalus]]\",\n\tregional_categories = {\"Andalusian\"},\n}\naliases[\"al-Andalus\"] = \"Al-Andalus\"\n\nlabels[\"Andalusia\"] = {\n\tdisplay = \"[[w:Andalusia|Andalusia]]\",\n\tregional_categories = {\"Andalusian\"\
      },\n}\nlabels[\"Antrim\"] = {\n\tdisplay = \"[[w:County Antrim|Antrim]]\",\n\tregional_categories = {\"Ulster\"},\n}\n\nlabels[\"Aragón\"] = {\n\tregional_categories = {\"Aragonese\"},\n}\n\nlabels[\"Aran\"] = {\n\tdisplay = \"[[w:Aran Islands|Aran]]\"\
      ,\n\tregional_categories = {\"Connacht\"},\n}\n\nlabels[\"Arran\"] = {\n\tdisplay = \"[[w:Isle of Arran|Arran]]\",\n\tregional_categories = {\"Arran\"},\n}\n\nlabels[\"Arvanitika\"] = {\n\tdisplay = \"[[w:Arvanitika|Arvanitika]]\",\n\tregional_categories\
      \ = {\"Arvanitika\"},\n}\n\nlabels[\"Asturias\"] = {\n\tregional_categories = {\"Asturian\"},\n}\n\nlabels[\"Austria\"] = {\n\tdisplay = \"[[w:Austria|Austria]]\",\n\tregional_categories = {\"Austrian\"},\n}\naliases[\"Austrian\"] = \"Austria\"\n\nlabels[\"\
      Auvergne\"] = {\n\tdisplay = \"[[w:Auvergnat (language)|Auvergne]]\",\n\tregional_categories = {\"Auvergnese\"},\n}\n\nlabels[\"Bedfordshire\"] = {\n\tdisplay = \"[[w:Bedfordshire|Bedfordshire]]\",\n\tregional_categories = {\"Bedfordshire\"},\n}\naliases[\"\
      Bedfordshire dialect\"] = \"Bedfordshire\"\n\nlabels[\"Berkshire\"] = {\n\tdisplay = \"[[w:Berkshire|Berkshire]]\",\n\tregional_categories = {\"Berkshire\"},\n}\naliases[\"Berkshire dialect\"] = \"Berkshire\"\n\nlabels[\"Balearics\"] = {\n\tdisplay = \"\
      [[w:Balearic Islands|Balearics]]\",\n\tregional_categories = {\"Balearic\"},\n}\n\nlabels[\"Banat\"] = {\n\tdisplay = \"[[w:Banat|Banat]]\",\n\tregional_categories = {\"Banat\"},\n}\n\nlabels[\"Batavia\"] = {\n\tdisplay = \"[[w:Betawi language|Batavian\
      \ Malay]]\",\n\tplain_categories = {\"Batavian Malay\"},\n}\naliases[\"Batavian\"] = \"Batavia\"\naliases[\"Betawi\"] = \"Batavia\"\n\nlabels[\"Belgium\"] = {\n\tdisplay = \"[[w:Belgium|Belgium]]\",\n\tregional_categories = {\"Belgian\"},\n}\naliases[\"\
      Belgian\"] = \"Belgium\"\n\naliases[\"Bologna\"] = \"Bolognese\"\nlabels[\"Bolognese\"] = {\n\tdisplay = \"[[Bolognese]]\",\n\tregional_categories = {\"Bolognese\"},\n}\n\nlabels[\"Bosnia\"] = {\n\tdisplay = \"[[w:Bosnia|Bosnia]]\",\n\tregional_categories\
      \ = {\"Bosnian\"},\n}\naliases[\"Bosnian\"] = \"Bosnia\"\n\nlabels[\"Brabant\"] = {\n\tdisplay = \"[[w:Brabant|Brabant]]\",\n\tregional_categories = {\"Brabantian\"},\n}\n\nlabels[\"Bristol\"] = {\n\tdisplay = \"[[w:Bristol|Bristol]]\",\n\tregional_categories\
      \ = {\"Bristolian\"},\n}\naliases[\"Bristolian\"] = \"Bristol\"\n\nlabels[\"Britain\"] = {\n\tdisplay = \"[[w:Britain|Britain]]\",\n\tregional_categories = {\"British\"},\n}\naliases[\"Brit\"] = \"Britain\"\naliases[\"British\"] = \"Britain\"\naliases[\"\
      Great Britain\"] = \"Britain\"\naliases[\"UK\"] = \"Britain\"\naliases[\"United Kingdom\"] = \"Britain\"\n\nlabels[\"Bukovina\"] = {\n\tdisplay = \"[[w:Bukovina|Bukovina]]\",\n\tregional_categories = {\"Bukovinian\"},\n}\naliases[\"Bucovina\"] = \"Bukovina\"\
      \naliases[\"Bukovinian\"] = \"Bukovina\"\n\nlabels[\"Burgos\"] = {\n\tregional_categories = {\"Burgos\"},\n}\n\nlabels[\"Campello Monti\"] = {\n\tdisplay = \"[[:it:w:Campello Monti|Campello Monti]]\",\n\tplain_categories = {\"Campello Monti Walser\"},\n\
      }\n\nlabels[\"Carcoforo\"] = {\n\tdisplay = \"[[w:Carcoforo|Carcoforo]]\",\n\tplain_categories = {\"Carcoforo Walser\"},\n}\n\naliases[\"Carpi\"] = \"Carpigiano\"\nlabels[\"Carpigiano\"] = {\n\tdisplay = \"[[w:Carpi, Emilia-Romagna|Carpigiano]]\",\n\t\
      regional_categories = {\"Carpigiano\"},\n}\n\nlabels[\"Central Germany\"] = {\n\tdisplay = \"central Germany\",\n\tregional_categories = {\"Central German\"},\n}\naliases[\"Central German\"] = \"Central Germany\"\naliases[\"central Germany\"] = \"Central\
      \ Germany\"\naliases[\"central German\"] = \"Central Germany\"\n\nlabels[\"Central Italy\"] = {\n\tdisplay = \"[[w:Central Italian|central Italy]]\",\n\tregional_categories = {\"Central\"},\n}\naliases[\"Central Italian\"] = \"Central Italy\"\naliases[\"\
      central Italy\"] = \"Central Italy\"\naliases[\"central Italian\"] = \"Central Italy\"\n\nlabels[\"Channel Islands\"] = {\n\tdisplay = \"[[w:Channel Islands|Channel Islands]]\",\n\tregional_categories = {\"Channel Islands\"},\n}\n\nlabels[\"Chungcheong\"\
      ] = {\n\tdisplay = \"[[w:Chungcheong dialect|Chungcheong dialect]]\",\n\tregional_categories = {\"Chungcheong\"},\n}\n\nlabels[\"Chungnam\"] = {\n\tdisplay = \"[[w:Chungcheong dialect|Chungnam dialect]]\",\n\tregional_categories = {\"Chungcheong\"},\n\
      }\n\nlabels[\"Connacht\"] = {\n\tdisplay = \"[[w:Connacht|Connacht]]\",\n\tregional_categories = {\"Connacht\"},\n}\n\nlabels[\"Connemara\"] = {\n\tdisplay = \"[[w:Connemara|Connemara]]\",\n\tregional_categories = {\"Connacht\"},\n}\n\nlabels[\"Cornwall\"\
      ] = {\n\tdisplay = \"[[w:Cornwall|Cornwall]]\",\n\tregional_categories = {\"Cornish\"},\n}\naliases[\"Cornish\"] = \"Cornwall\"\naliases[\"Cornish dialect\"] = \"Cornwall\"\n\nlabels[\"Crimea\"] = {\n\tdisplay = \"[[w:Crimea|Crimea]]\",\n\tregional_categories\
      \ = {\"Crimean\"},\n}\naliases[\"Crimean\"] = \"Crimea\"\n\nlabels[\"Croatia\"] = {\n\tdisplay = \"[[w:Croatia|Croatia]]\",\n\tregional_categories = {\"Croatian\"},\n}\naliases[\"Croatian\"] = \"Croatia\"\n\nlabels[\"Cumbria\"] = {\n\tdisplay = \"[[w:Cumbria|Cumbria]]\"\
      ,\n\tregional_categories = {\"Cumbrian\"},\n}\naliases[\"Cumbrian\"] = \"Cumbria\"\n\nlabels[\"DDR\"] = {\n\tdisplay = \"[[w:German Democratic Republic|East Germany]]\",\n\tregional_categories = {\"DDR\"},\n}\naliases[\"GDR\"] = \"DDR\"\naliases[\"East\
      \ German\"] = \"DDR\"\naliases[\"East Germany\"] = \"DDR\"\n\nlabels[\"Dalmatia\"] = {\n\tdisplay = \"[[w:Dalmatia|Dalmatia]]\",\n\tregional_categories = {\"Dalmatian\"},\n}\n\nlabels[\"Derbyshire\"] = {\n\tdisplay = \"[[w:Derbyshire|Derbyshire]]\",\n\t\
      regional_categories = {\"Derbyshire\"},\n}\naliases[\"Derbyshire dialect\"] = \"Derbyshire\"\n\nlabels[\"Devon\"] = {\n\tdisplay = \"[[w:Devon|Devon]]\",\n\tregional_categories = {\"Devonian\"},\n}\naliases[\"Devonian\"] = \"Devon\"\naliases[\"Devonian\
      \ dialect\"] = \"Devon\"\naliases[\"Devonshire\"] = \"Devon\"\naliases[\"Devonshire dialect\"] = \"Devon\"\n\nlabels[\"Dobruja\"] = {\n\tdisplay = \"[[w:Dobruja|Dobruja]]\",\n\tregional_categories = {\"Dobrujan\"},\n}\naliases[\"Dobrogea\"] = \"Dobruja\"\
      \naliases[\"Dobrujan\"] = \"Dobruja\"\n\nlabels[\"Dorset\"] = {\n\tdisplay = \"[[w:Dorset|Dorset]]\",\n\tregional_categories = {\"Dorset\"},\n}\naliases[\"Dorset dialect\"] = \"Dorset\"\n\nlabels[\"Dublin\"] = {\n\tdisplay = \"[[w:Dublin|Dublin]]\",\n\t\
      regional_categories = {\"Dublin\"},\n}\n\nlabels[\"Durham\"] = {\n\tdisplay = \"[[w:County Durham|Durham]]\",\n\tregional_categories = {\"Durham\"},\n}\n\nlabels[\"East Anglia\"] = {\n\tdisplay = \"[[w:East Anglia|East Anglia]]\",\n\tregional_categories\
      \ = {\"East Anglian\"},\n}\naliases[\"East Anglian\"] = \"East Anglia\"\naliases[\"East Anglian dialect\"] = \"East Anglia\"\n\nlabels[\"East Midlands\"] = {\n\tdisplay = \"[[w:East Midlands|East Midlands]]\",\n\tregional_categories = {\"East Midlands\"\
      },\n}\naliases[\"East Midlands dialect\"] = \"East Midlands\"\n\nlabels[\"East Palatine\"] = {\n\tdisplay = \"[[w:Palatine German language|Vorderpfälzisch]]\",\n\tregional_categories = {\"East Palatine\"},\n}\naliases[\"Vorderpfälzisch\"] = \"East Palatine\"\
      \n\nlabels[\"Edirne\"] = {\n\tdisplay = \"[[w:Edirne|Edirne]]\",\n\tregional_categories = {\"Edirne\"},\n}\naliases[\"Adrianople\"] = \"Edirne\"\naliases[\"Odrin\"] = \"Edirne\"\n\nlabels[\"England\"] = {\n\tdisplay = \"[[w:England|England]]\",\n\tregional_categories\
      \ = {\"English\"},\n}\n\nlabels[\"Essex\"] = {\n\tdisplay = \"[[w:Essex|Essex]]\",\n\tregional_categories = {\"Essex\"},\n}\naliases[\"Essex dialect\"] = \"Essex\"\n\nlabels[\"Europe\"] = {\n\tdisplay = \"[[w:Europe|Europe]]\",\n\tregional_categories =\
      \ {\"European\"},\n}\n\nlabels[\"Exmoor\"] = {\n\tdisplay = \"[[w:Exmoor|Exmoor]]\",\n\tregional_categories = {\"Devonian\", \"Somerset\"},\n}\n\nlabels[\"Finland\"] = {\n\tdisplay = \"[[w:Finland|Finland]]\",\n\tregional_categories = {\"Finland\"},\n\
      }\naliases[\"Finnish\"] = \"Finland\"\n\nlabels[\"France\"] = {\n\tdisplay = \"[[w:France|France]]\",\n\tregional_categories = {\"French\"},\n}\n\nlabels[\"Föhr-Amrum\"] = {\n\tdisplay = \"[[w:Föhr-Amrum|Föhr-Amrum]]\",\n\tregional_categories = {\"Föhr-Amrum\"\
      },\n}\naliases[\"Föhr-Amrum dialect\"] = \"Föhr-Amrum\"\naliases[\"Feer\"] = \"Föhr-Amrum\"\naliases[\"Fering\"] = \"Föhr-Amrum\"\naliases[\"Oomram\"] = \"Föhr-Amrum\"\naliases[\"Öömrang\"] = \"Föhr-Amrum\"\n\nlabels[\"Formazza\"] = {\n\tdisplay = \"[[w:Formazza|Formazza]]\"\
      ,\n\tplain_categories = {\"Formazza Walser\"},\n}\n\nlabels[\"Galicia\"] = {\n\tregional_categories = {\"Galician\"},\n}\nlabels[\"Galway\"] = {\n\tdisplay = \"[[w:County Galway|Galway]]\",\n\tregional_categories = {\"Galway\"},\n}\n\nlabels[\"Gangwon\"\
      ] = {\n\tdisplay = \"[[w:Gangwon dialect|Gangwon dialect]]\",\n\tregional_categories = {\"Gangwon\"},\n}\naliases[\"Kangwon\"] = \"Gangwon\"\naliases[\"Kangwŏn\"] = \"Gangwon\"\n\nlabels[\"Gascony\"] = {\n\tdisplay = \"[[w:Gascon language|Gascony]]\",\n\
      \tregional_categories = {\"Gascon\"},\n}\n\nlabels[\"Germany\"] = {\n\tregional_categories = {\"German\"},\n}\naliases[\"German\"] = \"Germany\" -- comment this alias out if it causes problems\n\nlabels[\"Gloucestershire\"] = {\n\tdisplay = \"[[w:Gloucestershire|Gloucestershire]]\"\
      ,\n\tregional_categories = {\"Gloucestershire\"},\n}\naliases[\"Gloucestershire dialect\"] = \"Gloucestershire\"\naliases[\"Glos\"] = \"Gloucestershire\"\n\nlabels[\"Granada\"] = {\n\tregional_categories = {\"Granada\"},\n}\nlabels[\"Gressoney\"] = {\n\
      \tdisplay = \"[[w:Gressoney|Gressoney]]\", -- disambig page :-/\n\tplain_categories = {\"Gressoney Walser\"},\n}\n\nlabels[\"Guernsey\"] = {\n\tdisplay = \"[[w:Guernsey|Guernsey]]\",\n\tregional_categories = {\"Guernsey\"},\n}\n\nlabels[\"Gyeonggi\"] =\
      \ {\n\tdisplay = \"[[w:Gyeonggi dialect|Gyeonggi dialect]]\",\n\tregional_categories = {\"Gyeonggi\"},\n}\n\nlabels[\"Gyeongsang\"] = {\n\tdisplay = \"[[w:Gyeongsang dialect|Gyeongsang dialect]]\",\n\tregional_categories = {\"Gyeongsang\"},\n}\n\nlabels[\"\
      The Hague\"] = {\n\tdisplay = \"[[w:The Hague|The Hague]]\",\n\tregional_categories = {\"Hague\"},\n}\naliases[\"Hague\"] = \"The Hague\"\naliases[\"Den Haag\"] = \"The Hague\"\n\nlabels[\"Hamgyŏng\"] = {\n\tdisplay = \"[[w:Hamgyŏng dialect|Hamgyŏng dialect]]\"\
      ,\n\tregional_categories = {\"Hamgyŏng\"},\n}\naliases[\"Hamgyong\"] = \"Hamgyŏng\"\naliases[\"Hamgyeong\"] = \"Hamgyŏng\"\n\nlabels[\"Hartlepool\"] = {\n\tdisplay = \"[[w:Hartlepool|Hartlepool]]\",\n\tregional_categories = {\"Teesside\"},\n}\n\nlabels[\"\
      Heligoland\"] = {\n\tdisplay = \"[[w:Heligoland|Heligoland]]\",\n\tregional_categories = {\"Heligolandic\"},\n}\naliases[\"Heligoland dialect\"] = \"Heligoland\"\naliases[\"Halunder\"] = \"Heligoland\"\naliases[\"Heligolandic\"] = \"Heligoland\"\naliases[\"\
      Helgoland\"] = \"Heligoland\"\naliases[\"Helgoland dialect\"] = \"Heligoland\"\n\nlabels[\"Herefordshire\"] = {\n\tdisplay = \"[[w:Herefordshire|Herefordshire]]\",\n\tregional_categories = {\"Herefordshire\"},\n}\naliases[\"Herefordshire dialect\"] = \"\
      Herefordshire\"\n\nlabels[\"Hessian\"] = {\n\tdisplay = \"[[w:Hessian dialects|Hessian]]\",\n\tregional_categories = {\"Hessian\"},\n}\naliases[\"Hesse\"] = \"Hessian\"\naliases[\"Hessen\"] = \"Hessian\"\naliases[\"Hessisch\"] = \"Hessian\"\n\nlabels[\"\
      Holland\"] = {\n\tdisplay = \"[[w:Holland|Holland]]\",\n\tregional_categories = {\"Hollandic\"},\n}\naliases[\"Hollandic\"] = \"Holland\"\n\nlabels[\"Hwanghae\"] = {\n\tdisplay = \"[[w:Hwanghae dialect|Hwanghae dialect]]\",\n\tregional_categories = {\"\
      Hwanghae\"},\n}\n\nlabels[\"Ireland\"] = {\n\tdisplay = \"[[w:Ireland|Ireland]]\",\n\tregional_categories = {\"Irish\"},\n}\naliases[\"Irish\"] = \"Ireland\"\n\nlabels[\"Isle of Man\"] = {\n\tdisplay = \"[[w:Isle of Man|Isle of Man]]\",\n\tregional_categories\
      \ = {\"Manx\"},\n}\naliases[\"Manx\"] = \"Isle of Man\"\naliases[\"Isle of Mann\"] = \"Isle of Man\"\n\nlabels[\"Isle of Wight\"] = {\n\tdisplay = \"[[w:Isle of Wight|Isle of Wight]]\",\n\tregional_categories = {\"Isle of Wight\"},\n}\n\nlabels[\"Issime\"\
      ] = {\n\tdisplay = \"[[w:Issime|Issime]]\",\n\tplain_categories = {\"Issime Walser\"},\n}\n\nlabels[\"Istanbul\"] = {\n\tdisplay = \"[[w:Istanbul|Istanbul]]\",\n\tregional_categories = {\"Istanbul\"},\n}\naliases[\"İstanbul\"] = \"Istanbul\"\naliases[\"\
      Polis\"] = \"Istanbul\"\n\nlabels[\"Jeju\"] = {\n\tdisplay = \"[[w:Jeju dialect|Jeju dialect]]\",\n\tregional_categories = {\"Jeju\"},\n}\n\nlabels[\"Jeolla\"] = {\n\tdisplay = \"[[w:Jeolla dialect|Jeolla dialect]]\",\n\tregional_categories = {\"Jeolla\"\
      },\n}\n\nlabels[\"Jersey\"] = {\n\tdisplay = \"[[w:Jersey|Jersey]]\",\n\tregional_categories = {\"Jersey\"},\n}\n\nlabels[\"Kazan\"] = {\n\tdisplay = \"[[w:Kazan|Kazan]]\",\n\tregional_categories = {\"Kazan\"},\n}\n\nlabels[\"Kent\"] = {\n\tdisplay = \"\
      [[w:Kent|Kent]]\",\n\tregional_categories = {\"Kentish\"},\n}\naliases[\"Kentish\"] = \"Kent\"\naliases[\"Kentish dialect\"] = \"Kent\"\naliases[\"Kent dialect\"] = \"Kent\"\n\nlabels[\"Kerry\"] = {\n\tdisplay = \"[[w:Gaeltacht#Kerry Gaeltacht|Kerry]]\"\
      ,\n\tregional_categories = {\"Munster\"},\n}\n\nlabels[\"Kırklareli\"] = {\n\tdisplay = \"[[w:Kırklareli|Kırklareli]]\",\n\tregional_categories = {\"Kırklareli\"},\n}\naliases[\"Kirklareli\"] = \"Kırklareli\"\n\nlabels[\"Kölsch\"] = {\n\tdisplay = \"[[w:Colognian\
      \ language|Kölsch]]\",\n\tregional_categories = {\"Kölsch\"},\n}\naliases[\"Colognian\"] = \"Kölsch\"\naliases[\"Cologne\"] = \"Kölsch\"\naliases[\"Köln\"] = \"Kölsch\"\n\nlabels[\"Kukkuzi\"] = {\n\tdisplay = \"[[w:Kukkuzi|Kukkuzi]]\",\n\tregional_categories\
      \ = {\"Kukkuzi\"},\n}\n\nlabels[\"Lancashire\"] = {\n\tdisplay = \"[[w:Lancashire|Lancashire]]\",\n\tregional_categories = {\"Lancashire\"},\n}\n\nlabels[\"Languedoc\"] = {\n\tdisplay = \"[[w:Languedocien dialect|Languedoc]]\",\n\tregional_categories =\
      \ {\"Languedocian\"},\n}\n\nlabels[\"Liechtenstein\"] = {\n\tdisplay = \"[[w:Liechenstein|Liechtenstein]]\",\n\tregional_categories = {\"Liechtenstein\"},\n}\n\nlabels[\"Limousin\"] = {\n\tdisplay = \"[[w:Limousin dialect|Limousin]]\",\n\tregional_categories\
      \ = {\"Limousin\"},\n}\n\nlabels[\"Lincolnshire\"] = {\n\tdisplay = \"[[w:Lincolnshire|Lincolnshire]]\",\n\tregional_categories = {\"Lincolnshire\"},\n}\n\nlabels[\"Liverpool\"] = {\n\tdisplay = \"[[w:Liverpool|Liverpudlian]]\",\n\tregional_categories\
      \ = {\"Liverpudlian\"},\n}\naliases[\"Scouse\"] = \"Liverpool\"\n\nlabels[\"Lombardic\"] = {\n\tdisplay = \"[[w:Lombardic language|Lombardic]]\",\n\tplain_categories = {\"Lombardic\"},\n}\n\nlabels[\"London\"] = {\n\tdisplay = \"[[w:London|London]]\",\n\
      \tregional_categories = {\"London\"},\n}\n\nlabels[\"Lorraine\"] = {\n\tdisplay = \"[[w:Lorraine|Lorraine]]\",\n\tregional_categories = {\"Lorraine\"},\n}\n\nlabels[\"Luserna\"] = {\n\tdisplay = \"[[w:Luserna|Luserna]]\",\n\tregional_categories = {\"Luserna\"\
      },\n}\n\nlabels[\"Luxembourg\"] = {\n\tdisplay = \"[[w:Luxembourg|Luxembourg]]\",\n\tregional_categories = {\"Luxembourgish\"},\n}\naliases[\"Luxembourgish\"] = \"Luxembourg\"\naliases[\"Luxemburg\"] = \"Luxembourg\"\naliases[\"Luxemburgish\"] = \"Luxembourg\"\
      \n\nlabels[\"Lviv\"] = {\n\tdisplay = \"[[w:Lviv|Lviv]]\",\n\tregional_categories = {\"Lviv\"},\n}\naliases[\"Lvov\"] = \"Lviv\"\n\nlabels[\"Maastrichtian\"] = {\n\tdisplay = \"[[w:Maastrichtian dialect|Maastrichtian]]\",\n\tplain_categories = {\"Maastrichtian\
      \ Limburgish\"},\n}\n\nlabels[\"Mallorca\"] = {\n\tdisplay = \"[[w:Mallorca|Mallorca]]\",\n\tregional_categories = {\"Mallorcan\"},\n}\n\nlabels[\"Malta\"] = {\n\tregional_categories = {\"Maltese\"},\n}\n\nlabels[\"Mancunian\"] = {\n\tdisplay = \"[[w:Manchester|Mancunian]]\"\
      ,\n\tregional_categories = {\"Mancunian\"},\n}\naliases[\"Manchester\"] = \"Mancunian\"\naliases[\"Manc\"] = \"Mancunian\"\n\naliases[\"Mantua\"] = \"Mantovano\"\nlabels[\"Mantovano\"] = {\n\tdisplay = \"[[w:Mantua|Mantovano]]\",\n\tregional_categories\
      \ = {\"Mantovano\"},\n}\n\nlabels[\"Maramureș\"] = {\n\tdisplay = \"[[w:Maramureș|Maramureș]]\",\n\tregional_categories = {\"Maramureș\"},\n}\naliases[\"Maramures\"] = \"Maramureș\"\n\nlabels[\"Marseille\"] = {\n\tdisplay = \"[[w:Marseille|Marseille]]\"\
      ,\n\tregional_categories = {\"Marseille\"},\n}\n\nlabels[\"Midlands\"] = {\n\tdisplay = \"[[w:The Midlands|Midlands]]\",\n\tregional_categories = {\"Midlands\"},\n}\naliases[\"Midlands dialect\"] = \"Midlands\"\naliases[\"South Midlands\"] = \"Midlands\"\
      \ -- OK as alias? or a subvariety worth distinguishing?\n\nlabels[\"Minangkabau\"] = {\n\tdisplay = \"[[w:Minangkabau language|Minangkabau Malay]]\",\n\tplain_categories = {\"Minangkabau Malay\"},\n}\n\naliases[\"Mirandola\"] = \"Mirandolese\"\nlabels[\"\
      Mirandolese\"] = {\n\tdisplay = \"[[w:Mirandola|Mirandolese]]\",\n\tregional_categories = {\"Mirandolese\"},\n}\n\naliases[\"Modena\"] = \"Modenese\"\nlabels[\"Modenese\"] = {\n\tdisplay = \"[[w:Modena|Modenese]]\",\n\tregional_categories = {\"Modenese\"\
      },\n}\n\nlabels[\"Moldavia\"] = {\n\tdisplay = \"[[w:Moldavia|Moldavia]]\",\n\tregional_categories = {\"Moldavian\"},\n}\naliases[\"Moldavian\"] = \"Moldavia\"\naliases[\"Moldova\"] = \"Moldavia\"\naliases[\"Moldovan\"] = \"Moldavia\"\n\n\nlabels[\"Montenegro\"\
      ] = {\n\tdisplay = \"[[w:Montenegro|Montenegro]]\",\n\tregional_categories = {\"Montenegrin\"},\n}\naliases[\"Montenegrin\"] = \"Montenegro\"\n\nlabels[\"Moscow\"] = {\n\tdisplay = \"[[w:Moscow|Moscow]]\",\n\tregional_categories = {\"Moscow\"},\n}\n\n\
      labels[\"Moselle Franconian\"] = {\n\tdisplay = \"[[w:Moselle Franconian dialects|Moselle Franconian]]\",\n\tregional_categories = {\"Moselle\"},\n}\naliases[\"Moselfränkisch\"] = \"Moselle Franconian\"\n\nlabels[\"Munster\"] = {\n\tdisplay = \"[[w:Munster|Munster]]\"\
      ,\n\tregional_categories = {\"Munster\"},\n}\n\nlabels[\"Muntenia\"] = {\n\tdisplay = \"[[w:Muntenia|Muntenia]]\",\n\tregional_categories = {\"Muntenian\"},\n}\naliases[\"Muntenian\"] = \"Muntenia\"\n\nlabels[\"Murcia\"] = {\n\tregional_categories = {\"\
      Murcian\"},\n}\n\nlabels[\"Naples\"] = {\n\tdisplay = \"[[w:Naples|Naples]]\",\n\tregional_categories = {\"Neapolitan\"},\n}\naliases[\"Neapolitan\"] = \"Naples\"\n\nlabels[\"Navarre\"] = {\n\tregional_categories = {\"Navarre\"},\n}\nlabels[\"Netherlands\"\
      ] = {\n\tdisplay = \"[[w:Netherlands|Netherlands]]\",\n\tregional_categories = {\"Netherlands\"},\n}\n\nlabels[\"Norfolk\"] = {\n\tdisplay = \"[[w:Norfolk|Norfolk]]\",\n\tregional_categories = {\"Norfolk\"},\n}\n\nlabels[\"North Wales\"] = {\n\tdisplay\
      \ = \"[[w:North Wales|North Wales]]\",\n\tregional_categories = {\"North Wales\"},\n}\n\nlabels[\"Northern and Central Germany\"] = {\n\tdisplay = \"[[w:Northern Germany|northern]] and central Germany\",\n\tregional_categories = {\"Northern\", \"Central\"\
      },\n}\naliases[\"northern and central Germany\"] = \"Northern and Central Germany\"\naliases[\"Northern and Central German\"] = \"Northern and Central Germany\"\naliases[\"northern and central German\"] = \"Northern and Central Germany\"\naliases[\"North\
      \ and Central Germany\"] = \"Northern and Central Germany\"\naliases[\"north and central Germany\"] = \"Northern and Central Germany\"\naliases[\"North and Central German\"] = \"Northern and Central Germany\"\naliases[\"north and central German\"] = \"\
      Northern and Central Germany\"\n\nlabels[\"Northern Crimea\"] = {\n\tdisplay = \"Northern [[w:Crimea|Crimea]]\",\n\tregional_categories = {\"Northern\"},\n}\n\nlabels[\"Northern England\"] = {\n\tdisplay = \"[[w:Northern England|Northern England]]\",\n\
      \tregional_categories = {\"Northern England\"},\n}\naliases[\"northern England\"] = \"Northern England\"\naliases[\"North England\"] = \"Northern England\"\naliases[\"north England\"] = \"Northern England\"\n\nlabels[\"Northern Germany\"] = {\n\tdisplay\
      \ = \"[[w:Northern Germany|Northern Germany]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"northern Germany\"] = \"Northern Germany\"\naliases[\"Northern German\"] = \"Northern Germany\"\naliases[\"northern German\"] = \"Northern Germany\"\
      \naliases[\"North Germany\"] = \"Northern Germany\"\naliases[\"north Germany\"] = \"Northern Germany\"\naliases[\"North German\"] = \"Northern Germany\"\naliases[\"north German\"] = \"Northern Germany\"\n\nlabels[\"Northern Ireland\"] = {\n\tdisplay =\
      \ \"[[w:Northern Ireland|Northern Ireland]]\",\n\tregional_categories = {\"Ulster\"},\n}\naliases[\"Northern Irish\"] = \"Northern Ireland\"\n\nlabels[\"Northern Isles\"] = {\n\tdisplay = \"[[w:Orkney|Orkney]], [[w:Shetland|Shetland]]\",\n\tregional_categories\
      \ = {\"Orkney\", \"Shetland\"},\n}\naliases[\"Insular Scots\"] = \"Northern Isles\"\n\nlabels[\"Northern Italy\"] = {\n\tdisplay = \"[[w:Northern Italy|northern Italy]]\",\n\tregional_categories = {\"Northern\"},\n}\naliases[\"Northern Italian\"] = \"\
      Northern Italy\"\naliases[\"northern Italy\"] = \"Northern Italy\"\naliases[\"northern Italian\"] = \"Northern Italy\"\n\nlabels[\"Northumbria\"] = {\n\tdisplay = \"[[w:Northumbria|Northumbria]]\",\n\tregional_categories = {\"Northumbrian\"},\n}\naliases[\"\
      Northumbrian\"] = \"Northumbria\"\naliases[\"Northumberland\"] = \"Northumbria\"\naliases[\"Northeast England\"] = \"Northumbria\"\naliases[\"North-East England\"] = \"Northumbria\"\naliases[\"North East England\"] = \"Northumbria\"\n\nlabels[\"Nottinghamshire\"\
      ] = {\n\tdisplay = \"[[w:Nottinghamshire|Nottinghamshire]]\",\n\tregional_categories = {\"Nottinghamshire\"},\n}\naliases[\"Nottinghamshire dialect\"] = \"Nottinghamshire\"\n\nlabels[\"Oltenia\"] = {\n\tdisplay = \"[[w:Oltenia|Oltenia]]\",\n\tregional_categories\
      \ = {\"Oltenian\"},\n}\naliases[\"Oltenian\"] = \"Oltenia\"\n\nlabels[\"Orenburg\"] = {\n\tdisplay = \"[[w:Orenburg|Orenburg]]\",\n\tregional_categories = {\"Orenburg\"},\n}\n\nlabels[\"Orkney\"] = {\n\tdisplay = \"[[w:Orkney|Orkney]]\",\n\tregional_categories\
      \ = {\"Orkney\"},\n}\naliases[\"Orcadian\"] = \"Orkney\"\n\nlabels[\"Oxfordshire\"] = {\n\tdisplay = \"[[w:Oxfordshire|Oxfordshire]]\",\n\tregional_categories = {\"Oxfordshire\"},\n}\naliases[\"Oxfordshire dialect\"] = \"Oxfordshire\"\n\nlabels[\"Pahang\"\
      ] = {\n\tdisplay = \"[[w:Pahang Malay|Pahang Malay]]\",\n\tplain_categories = {\"Pahang Malay\"},\n}\n\nlabels[\"Palatine German\"] = {\n\tdisplay = \"[[w:Palatine German language|Palatine]]\",\n\tregional_categories = {\"Palatine\"},\n}\naliases[\"Palatinate\
      \ German\"] = \"Palatine German\"\naliases[\"Palatinate\"] = \"Palatine German\"\naliases[\"Palatine\"] = \"Palatine German\" -- remove if other languages have 'palatine' varieties\naliases[\"Pälzisch\"] = \"Palatine German\"\naliases[\"Pfälzisch\"] =\
      \ \"Palatine German\"\n\naliases[\"Parma\"] = \"Parmigiano\"\nlabels[\"Parmigiano\"] = {\n\tdisplay = \"[[w:Parma|Parmigiano]]\",\n\tregional_categories = {\"Parmigiano\"},\n}\n\naliases[\"Piacenza\"] = \"Piacentino\"\nlabels[\"Piacentino\"] = {\n\tdisplay\
      \ = \"[[w:Piacenza|Piacentino]]\",\n\tregional_categories = {\"Piacentino\"},\n}\n\nlabels[\"Picardy\"] = {\n\tdisplay = \"[[w:Picardy|Picardy]]\",\n\tregional_categories = {\"Picard\"},\n}\n\nlabels[\"Portugal\"] = {\n\tdisplay = \"[[w:Portugal|Portugal]]\"\
      ,\n\tregional_categories = {\"Portuguese\"},\n}\n\nlabels[\"Provence\"] = {\n\tdisplay = \"[[w:Provençal dialect|Provence]]\",\n\tregional_categories = {\"Provençal\"},\n}\n\nlabels[\"Prussia\"] = {\n\tdisplay = \"[[w:Prussia (region)|Prussia]]\",\n\t\
      regional_categories = {\"Prussian\"},\n}\naliases[\"Prussian\"] = \"Prussia\"\naliases[\"East Prussia\"] = \"Prussia\" -- aliased for now; if many entries use it, it can be separated\naliases[\"East Prussian\"] = \"Prussia\"\naliases[\"West Prussia\"]\
      \ = \"Prussia\"\naliases[\"West Prussian\"] = \"Prussia\"\n\nlabels[\"Pskov\"] = {\n\tdisplay = \"[[w:Pskov|Pskov]]\",\n\tregional_categories = {\"Pskov\"},\n}\naliases[\"Reggio Emilia\"] = \"Reggiano\"\n\nlabels[\"P'yŏng'an\"] = {\n\tdisplay = \"[[w:Pyongan\
      \ dialect|P'yŏng'an dialect]]\",\n\tregional_categories = {\"P'yŏng'an\"},\n}\naliases[\"Pyongan\"] = \"P'yŏng'an\"\naliases[\"Pyong'an\"] = \"P'yŏng'an\"\naliases[\"Pyŏngan\"] = \"P'yŏng'an\"\naliases[\"P'yŏngan\"] = \"P'yŏng'an\"\naliases[\"Pyeongan\"\
      ] = \"P'yŏng'an\"\naliases[\"Pyeong'an\"] = \"P'yŏng'an\"\naliases[\"Pyeong-an\"] = \"P'yŏng'an\"\n\nlabels[\"Reggiano\"] = {\n\tdisplay = \"[[w:Reggio Emilia|Reggiano]]\",\n\tregional_categories = {\"Reggiano\"},\n}\n\nlabels[\"Rimella\"] = {\n\tdisplay\
      \ = \"[[w:Rimella|Rimella]]\",\n\tplain_categories = {\"Rimella Walser\"},\n}\n\nlabels[\"Ripuarian\"] = {\n\tdisplay = \"[[w:Ripuarian language|Ripuarian]]\",\n\tregional_categories = {\"Ripuarian\"},\n}\naliases[\"Ripuarian Franconian\"] = \"Ripuarian\"\
      \naliases[\"Ripuarisch\"] = \"Ripuarian\"\n\nlabels[\"Romanesco\"] = {\n\tdisplay = \"[[w:Romanesco dialect|Rome]]\",\n\tregional_categories = {\"Romanesco\"},\n\tlanguages = { \"it\" },\n}\naliases[\"Roman Italian\"] = \"Romanesco\"\naliases[\"Romanesco\
      \ Italian\"] = \"Romanesco\"\naliases[\"Roman\"] = \"Romanesco\"\naliases[\"Rome\"] = \"Romanesco\"\n\nlabels[\"Rotterdam\"] = {\n\tdisplay = \"[[w:Rotterdam|Rotterdam]]\",\n\tregional_categories = {\"Rotterdam\"},\n}\naliases[\"Rotterdams\"] = \"Rotterdam\"\
      \n\nlabels[\"Saint Ouen\"] = {\n\tdisplay = \"[[w:Saint Ouen, Jersey|Saint Ouën]]\",\n\tregional_categories = {\"Saint Ouënnais\"},\n}\n\nlabels[\"Saint Petersburg\"] = {\n\tdisplay = \"[[w:Saint Petersburg|Saint Petersburg]]\",\n\tregional_categories\
      \ = {\"Saint Petersburg\"},\n}\naliases[\"St Petersburg\"] = \"Saint Petersburg\"\naliases[\"St. Petersburg\"] = \"Saint Petersburg\"\n\nlabels[\"Sappada\"] = {\n\tdisplay = \"[[w:Sappada|Sappada]]\",\n\tregional_categories = {\"Sappada\"},\n}\n\nlabels[\"\
      Sark\"] = {\n\tdisplay = \"[[w:Sercquiais|Sark]]\",\n\tregional_categories = {\"Sarkese\"},\n}\n\nlabels[\"Sauris\"] = {\n\tdisplay = \"[[w:Sauris|Sauris]]\",\n\tregional_categories = {\"Sauris\"},\n}\n\nlabels[\"Scania\"] = {\n\tdisplay = \"[[w:Scania|Scania]]\"\
      ,\n\tregional_categories = {\"Scanian\"},\n}\naliases[\"Skanian\"] = \"Scania\"\naliases[\"Skåne\"] = \"Scania\"\n\nlabels[\"Scotland\"] = {\n\tdisplay = \"[[w:Scotland|Scotland]]\",\n\tregional_categories = {\"Scottish\"},\n}\naliases[\"Scottish\"] =\
      \ \"Scotland\"\n\nlabels[\"Sense\"] = {\n\tdisplay = \"[[w:Sense District|Sense]]\",\n\tregional_categories = {\"Sensler\"},\n}\naliases[\"Sensler\"] = \"Sense\"\naliases[\"Sense District\"] = \"Sense\"\naliases[\"Senslerdeutsch\"] = \"Sense\"\n\nlabels[\"\
      Serbia\"] = {\n\tdisplay = \"[[w:Serbia|Serbia]]\",\n\tregional_categories = {\"Serbian\"},\n}\naliases[\"Serbian\"] = \"Serbia\"\n\nlabels[\"Sette Comuni\"] = {\n\tdisplay = \"[[w:Sette Comuni|Sette Comuni]]\",\n\tplain_categories = {\"Sette Comuni Cimbrian\"\
      },\n}\naliases[\"7\"] = \"Sette Comuni\"\naliases[\"Seven Comunes\"] = \"Sette Comuni\"\n\nlabels[\"Shetland\"] = {\n\tdisplay = \"[[w:Shetland|Shetland]]\",\n\tregional_categories = {\"Shetland\"},\n}\naliases[\"Shetland islands\"] = \"Shetland\"\naliases[\"\
      Shetland Islands\"] = \"Shetland\"\naliases[\"Shetlandic\"] = \"Shetland\"\naliases[\"Shetlands\"] = \"Shetland\"\n\nlabels[\"Silesia\"] = {\n\tdisplay = \"[[w:Silesia|Silesia]]\",\n\tregional_categories = {\"Silesian\"},\n}\naliases[\"Silesian\"] = \"\
      Silesia\"\naliases[\"Silesian German\"] = \"Silesia\" -- might be appropriate to split German/Polish? but why?\naliases[\"Lower Silesian\"] = \"Silesia\" -- ... would any entries be categorized different?\naliases[\"Upper Silesian\"] = \"Silesia\"\n\n\
      labels[\"Somerset\"] = {\n\tdisplay = \"[[w:Somerset|Somerset]]\",\n\tregional_categories = {\"Somerset\"},\n}\naliases[\"Somerset dialect\"] = \"Somerset\"\n\nlabels[\"South Asia\"] = {\n\tdisplay = \"[[w:South Asia|South Asia]]\",\n\tregional_categories\
      \ = {\"South Asian\"},\n}\n\nlabels[\"South Hessian\"] = {\n\tdisplay = \"South Hessian\",\n\tregional_categories = {\"South Hessian\"},\n}\naliases[\"South Hesse\"] = \"South Hessian\"\naliases[\"south Hesse\"] = \"South Hessian\"\naliases[\"South Hessen\"\
      ] = \"South Hessian\"\naliases[\"south Hessen\"] = \"South Hessian\"\naliases[\"south Hessian\"] = \"South Hessian\"\naliases[\"Südhessisch\"] = \"South Hessian\"\n\nlabels[\"South Wales\"] = {\n\tdisplay = \"[[w:South Wales|South Wales]]\",\n\tregional_categories\
      \ = {\"South Wales\"},\n}\n\nlabels[\"Southern England\"] = {\n\tdisplay = \"[[w:Southern England|Southern England]]\",\n\tregional_categories = {\"Southern England\"},\n}\naliases[\"southern England\"] = \"Southern England\"\naliases[\"South England\"\
      ] = \"Southern England\"\naliases[\"south England\"] = \"Southern England\"\n\nlabels[\"Southern Italy\"] = {\n\tdisplay = \"[[w:Southern Italy|southern Italy]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Southern Italian\"] = \"Southern\
      \ Italy\"\naliases[\"southern Italy\"] = \"Southern Italy\"\naliases[\"southern Italian\"] = \"Southern Italy\"\n\nlabels[\"Southern Russia\"] = {\n\tdisplay = \"[[w:Southern Russia|Southern Russia]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"\
      South of Russia\"] = \"Southern Russia\"\naliases[\"south of Russia\"] = \"Southern Russia\"\naliases[\"South Russia\"] = \"Southern Russia\"\naliases[\"Southern Russian\"] = \"Southern Russia\"\naliases[\"southern Russia\"] = \"Southern Russia\"\naliases[\"\
      southern Russian\"] = \"Southern Russia\"\n\nlabels[\"South Tyrol\"] = {\n\tdisplay = \"[[w:South Tyrol|South Tyrol]]\",\n\tregional_categories = {\"South Tyrolean\"},\n}\naliases[\"Alto Adige\"] = \"South Tyrol\"\naliases[\"South Tirol\"] = \"South Tyrol\"\
      \naliases[\"South Tirolean\"] = \"South Tyrol\"\naliases[\"South Tirolese\"] = \"South Tyrol\"\naliases[\"South Tyrolean\"] = \"South Tyrol\"\naliases[\"South Tyrolese\"] = \"South Tyrol\"\n\nlabels[\"Spain\"] = {\n\tdisplay = \"[[w:Spain|Spain]]\",\n\t\
      regional_categories = {\"Spanish\"},\n}\n\nlabels[\"Suffolk\"] = {\n\tdisplay = \"[[w:Suffolk|Suffolk]]\",\n\tregional_categories = {\"Suffolk\"},\n}\naliases[\"Suffolk dialect\"] = \"Suffolk\"\n\nlabels[\"Suðuroy\"] = {\n\tdisplay = \"[[w:Suðuroy|Suð\
      uroy]]\",\n\tregional_categories = {\"Suðuroy\"},\n}\n\nlabels[\"Sweden\"] = {\n\tdisplay = \"[[w:Sweden|Sweden]]\",\n\tregional_categories = {\"Swedish\"},\n}\n\nlabels[\"Switzerland\"] = {\n\tdisplay = \"[[w:Switzerland|Switzerland]]\",\n\tregional_categories\
      \ = {\"Switzerland\"},\n}\naliases[\"Swiss\"] = \"Switzerland\"\naliases[\"Swiss German\"] = \"Switzerland\" -- some German entries use this alias; let -sche know if it causes problems\n\nlabels[\"Sylt\"] = {\n\tdisplay = \"[[w:Sylt|Sylt]]\",\n\tregional_categories\
      \ = {\"Sylt\"},\n}\naliases[\"Söl\"] = \"Sylt\"\naliases[\"Sölring\"] = \"Sylt\"\naliases[\"Söl'\"] = \"Sylt\"\naliases[\"Söl'ring\"] = \"Sylt\"\n\nlabels[\"Teesside\"] = {\n\tdisplay = \"[[w:Teesside|Teesside]]\",\n\tregional_categories = {\"Teesside\"\
      },\n}\n\nlabels[\"Terengganu\"] = {\n\tdisplay = \"[[w:Terengganu Malay|Terengganu Malay]]\",\n\tplain_categories = {\"Terengganu Malay\"},\n}\n\nlabels[\"Thirteen Communities\"] = {\n\tdisplay = \"[[w:Thirteen Communities|Thirteen Communities]]\",\n\t\
      plain_categories = {\"Thirteen Communities Cimbrian\"},\n}\naliases[\"13\"] = \"Thirteen Communities\"\naliases[\"13 Communities\"] = \"Thirteen Communities\"\n\nlabels[\"Timau\"] = {\n\tdisplay = \"[[w:Paluzza|Timau]]\",\n\tregional_categories = {\"Timau\"\
      },\n}\n\nlabels[\"Torlakian\"] = {\n        display = \"[[w:Torlakian dialect|Torlakian]]\",\n        plain_categories = {\"Torlakian Serbo-Croatian\"},\n}\n\nlabels[\"Transylvania\"] = {\n\tdisplay = \"[[w:Transylvania|Transylvania]]\",\n\tregional_categories\
      \ = {\"Transylvanian\"},\n}\naliases[\"Transilvania\"] = \"Transylvania\"\naliases[\"Transylvanian\"] = \"Transylvania\"\n\nlabels[\"Tuscany\"] = {\n\tdisplay = \"[[w:Tuscan dialect|Tuscany]]\",\n\tregional_categories = {\"Tuscan\"},\n}\naliases[\"Tuscan\"\
      ] = \"Tuscany\"\n\nlabels[\"Ukraine\"] = {\n\tdisplay = \"[[w:Ukraine|Ukraine]]\",\n\tregional_categories = {\"Ukrainian\"},\n}\n\nlabels[\"Ulster\"] = {\n\tdisplay = \"[[w:Ulster|Ulster]]\",\n\tregional_categories = {\"Ulster\"},\n}\n\nlabels[\"Upper\
      \ Saxony\"] = {\n\tdisplay = \"[[w:Upper Saxony|Upper Saxony]]\",\n\tregional_categories = {\"Upper Saxon\"},\n}\naliases[\"Upper Saxon\"] = \"Upper Saxony\"\naliases[\"Upper Saxon German\"] = \"Upper Saxony\" -- gmw-ecg dialect; cf Silesian; move to data/subvarieties?\n\
      \nlabels[\"Uri\"] = {\n\tdisplay = \"[[w:Canton of Uri|Uri]]\",\n\tregional_categories = {\"Urner\"},\n}\naliases[\"Urseren\"] = \"Uri\"\naliases[\"Urner\"] = \"Uri\"\naliases[\"Urnerdeutsch\"] = \"Uri\"\n\nlabels[\"Valencia\"] = {\n\tdisplay = \"[[w:Valencia|Valencia]]\"\
      ,\n\tregional_categories = {\"Valencian\"},\n}\naliases[\"Valencian\"] = \"Valencia\"\n\nlabels[\"Venice\"] = {\n\tdisplay = \"[[w:Venice|Venice]]\",\n\tregional_categories = {\"Venetian\"},\n}\naliases[\"Venetian\"] = \"Venice\"\n\nlabels[\"Vienna\"]\
      \ = {\n\tdisplay = \"[[w:Vienna|Vienna]]\",\n\tregional_categories = {\"Viennese\"},\n}\naliases[\"Viennese\"] = \"Vienna\"\n\nlabels[\"Vojvodina\"] = {\n\tdisplay = \"[[w:Vojvodina|Vojvodina]]\",\n\tregional_categories = {\"Vojvodina\"},\n}\n\nlabels[\"\
      Wales\"] = {\n\tdisplay = \"[[w:Wales|Wales]]\",\n\tregional_categories = {\"Welsh\"},\n}\naliases[\"Welsh\"] = \"Wales\"\n\nlabels[\"Wallonia\"] = {\n\tdisplay = \"[[w:Wallonia|Wallonia]]\",\n\tregional_categories = {\"Wallonian\"},\n}\n\nlabels[\"Waterford\"\
      ] = {\n\tdisplay = \"[[w:Gaeltacht na nDéise|Waterford]]\",\n\tregional_categories = {\"Munster\"},\n}\n\nlabels[\"Wearside\"] = {\n\tdisplay = \"[[w:Wearside|Wearside]]\",\n\tregional_categories = {\"Wearside\"},\n}\n\nlabels[\"Wenzhou\"] = {\n\tdisplay\
      \ = \"[[w:Wenzhounese|Wenzhou]]\",\n\tregional_categories = {\"Wenzhounese\"},\n}\naliases[\"Wenzhounese\"] = \"Wenzhou\"\naliases[\"Wenzhou Wu\"] = \"Wenzhou\"\naliases[\"Oujiang\"] = \"Wenzhou\"\n\nlabels[\"West Country\"] = {\n\tdisplay = \"[[w:West\
      \ Country|West Country]]\",\n\tregional_categories = {\"West Country\"},\n}\naliases[\"West England\"] = \"West Country\"\naliases[\"west England\"] = \"West Country\"\naliases[\"Western England\"] = \"West Country\"\naliases[\"western England\"] = \"\
      West Country\"\naliases[\"West of England\"] = \"West Country\"\n\nlabels[\"West Midlands\"] = {\n\tdisplay = \"[[w:West Midlands|West Midlands]]\",\n\tregional_categories = {\"West Midlands\"},\n}\n\nlabels[\"West Palatine\"] = {\n\tdisplay = \"[[w:Palatine\
      \ German language|Westpfälzisch]]\",\n\tregional_categories = {\"West Palatine\"},\n}\naliases[\"Westpfälzisch\"] = \"West Palatine\"\n\nlabels[\"Western Ukraine\"] = {\n\tdisplay = \"[[w:Western Ukraine|Western Ukraine]]\",\n\tregional_categories = {\"\
      Western\"},\n}\n\nlabels[\"Wiltshire\"] = {\n\tdisplay = \"[[w:Wiltshire|Wiltshire]]\",\n\tregional_categories = {\"Wiltshire\"},\n}\naliases[\"Wiltshire dialect\"] = \"Wiltshire\"\naliases[\"Wilts\"] = \"Wiltshire\"\naliases[\"Wilts dialect\"] = \"Wiltshire\"\
      \n\nlabels[\"Yorkshire\"] = {\n\tdisplay = \"[[w:Yorkshire|Yorkshire]]\",\n\tregional_categories = {\"Yorkshire\"},\n}\n\n\n-- Australia and Oceania\n\nlabels[\"Australia\"] = {\n\tdisplay = \"[[w:Australia|Australia]]\",\n\tregional_categories = {\"Australian\"\
      },\n}\naliases[\"AU\"] = \"Australia\"\naliases[\"Australian\"] = \"Australia\"\n\nlabels[\"Hawaii\"] = {\n\tdisplay = \"[[w:Hawaii|Hawaii]]\",\n\tregional_categories = {\"Hawaiian\"},\n}\n\nlabels[\"Kauaʻi\"] = {\n\tdisplay = \"[[w:Kauai|Kauaʻi]]\",\n\
      \tregional_categories = {\"Kauaʻi\"},\n}\naliases[\"Kauai\"] = \"Kauaʻi\"\naliases[\"Kaua'i\"] = \"Kauaʻi\"\n\nlabels[\"Lānaʻi\"] = {\n\tdisplay = \"[[w:Lanai|Lānaʻi]]\",\n\tregional_categories = {\"Lānaʻi\"},\n}\naliases[\"Lanaʻi\"] = \"Lānaʻi\"\naliases[\"\
      Lanai\"] = \"Lānaʻi\"\naliases[\"Lāna'i\"] = \"Lānaʻi\"\naliases[\"Lana'i\"] = \"Lānaʻi\"\n\nlabels[\"Maui\"] = {\n\tdisplay = \"[[w:Maui|Maui]]\",\n\tregional_categories = {\"Maui\"},\n}\n\nlabels[\"Mekong Delta\"] = {\n\tdisplay = \"[[w:Mekong Delta|Mekong\
      \ Delta dialect]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"Mekong Delta dialect\"] = \"Mekong Delta\"\n\nlabels[\"Molokaʻi\"] = {\n\tdisplay = \"[[w:Molokai|Molokaʻi]]\",\n\tregional_categories = {\"Molokaʻi\"},\n}\naliases[\"Molokai\"\
      ] = \"Molokaʻi\"\naliases[\"Moloka'i\"] = \"Molokaʻi\"\n\nlabels[\"New Zealand\"] = {\n\tdisplay = \"[[w:New Zealand|New Zealand]]\",\n\tregional_categories = {\"New Zealand\"},\n}\naliases[\"NZ\"] = \"New Zealand\"\n\nlabels[\"Niʻihau\"] = {\n\tdisplay\
      \ = \"[[w:Niihau|Niʻihau]]\",\n\tregional_categories = {\"Niʻihau\"},\n}\naliases[\"Ni'ihau\"] = \"Niʻihau\"\naliases[\"Niihau\"] = \"Niʻihau\"\n\n\n-- Other/unclear\n\nlabels[\"Antarctica\"] = {\n\tdisplay = \"[[w:Antarctica|Antarctica]]\",\n\tregional_categories\
      \ = {\"Antarctic\"},\n}\naliases[\"Antarctic\"] = \"Antarctica\"\naliases[\"South Pole\"] = \"Antarctica\"\n\nlabels[\"Antilles\"] = {\n\tregional_categories = {\"Antilles\"},\n}\n\nlabels[\"Commonwealth\"] = {\n\tdisplay = \"[[Commonwealth of Nations]]\"\
      ,\n\tregional_categories = {\"Commonwealth\"},\n}\n\nlabels[\"Kitti\"] = {\n\tregional_categories = {\"Kitti\"},\n}\n\n\n-- Language specific\n\nlabels[\"African American Vernacular English\"] = {\n\tdisplay = \"[[w:African American Vernacular English|African\
      \ American Vernacular]]\",\n\tregional_categories = {\"African American Vernacular\"},\n}\naliases[\"AAVE\"] = \"African American Vernacular English\"\naliases[\"ebonics\"] = \"African American Vernacular English\"\n\nlabels[\"Anglo-Norman\"] = {\n\tdisplay\
      \ = \"[[w:Anglo-Norman language|Anglo-Norman]]\",\n\tplain_categories = {\"Anglo-Norman Old French\"},\n}\n\nlabels[\"Australian English\"] = {\n\tdisplay = \"[[w:Australian English|Australia]]\",\n\tplain_categories = {\"Australian English\"},\n}\n\n\
      labels[\"Akhmimic\"] = {\n\tdisplay = \"[[w:Coptic language#Akhmimic|Akhmimic]]\",\n\tplain_categories = {\"Akhmimic Coptic\"},\n}\n\nlabels[\"Ararat\"] = {\n\tdisplay = \"[[w:Araratian dialect|Ararat]]\",\n\tplain_categories = {\"Ararat Armenian\"},\n\
      }\n\nlabels[\"Balhae\"] = {\n\tplain_categories = {\"Balhae Old Korean\"},\n}\n\nlabels[\"Balkar\"] = {\n\tplain_categories = {\"Balkar\"},\n}\n\nlabels[\"Birmingham\"] = {\n\tdisplay = \"[[wikipedia:Brummie|Birmingham]]\",\n\tplain_categories = {\"Birmingham\
      \ English\"},\n}\naliases[\"Brummie\"] = \"Birmingham\"\naliases[\"Brummy\"] = \"Birmingham\"\n\nlabels[\"Bohairic\"] = {\n\tdisplay = \"[[w:Coptic language#Bohairic|Bohairic]]\",\n\tplain_categories = {\"Bohairic Coptic\"},\n}\naliases[\"Memphitic\"]\
      \ = \"Bohairic\"\n\nlabels[\"Bokmål\"] = {\n\tdisplay = \"[[w:Bokmål|Bokmål]]\",\n\tplain_categories = {\"Norwegian Bokmål\"},\n}\n\nlabels[\"Border Scots\"] = {\n\tplain_categories = {\"Border Scots\"},\n}\n\nlabels[\"British Contemporary Latin\"] = {\n\
      \tdisplay = \"British [[w:Contemporary Latin|Contemporary Latin]]\",\n\tplain_categories = {\"British Contemporary Latin\"},\n}\naliases[\"Contemporary Anglo-Latin\"] = \"British Contemporary Latin\"\naliases[\"Contemporary British\"] = \"British Contemporary\
      \ Latin\"\n\nlabels[\"British Late Latin\"] = {\n\tdisplay = \"British [[w:Late Latin|Late Latin]]\",\n\tplain_categories = {\"British Late Latin\"},\n}\naliases[\"Late Anglo-Latin\"] = \"British Late Latin\"\naliases[\"Late British\"] = \"British Late\
      \ Latin\"\n\nlabels[\"British Medieval Latin\"] = {\n\tdisplay = \"British [[w:Medieval Latin|Medieval Latin]]\",\n\tplain_categories = {\"British Medieval Latin\"},\n}\naliases[\"British Mediaeval Latin\"] = \"British Medieval Latin\"\naliases[\"Mediaeval\
      \ Anglo-Latin\"] = \"British Medieval Latin\"\naliases[\"Mediaeval British\"] = \"British Medieval Latin\"\naliases[\"Medieval Anglo-Latin\"] = \"British Medieval Latin\"\naliases[\"Medieval British\"] = \"British Medieval Latin\"\n\nlabels[\"British New\
      \ Latin\"] = {\n\tdisplay = \"British [[w:New Latin|New Latin]]\",\n\tplain_categories = {\"British New Latin\"},\n}\naliases[\"New Anglo-Latin\"] = \"British New Latin\"\naliases[\"New British\"] = \"British New Latin\"\n\nlabels[\"British Renaissance\
      \ Latin\"] = {\n\tdisplay = \"British [[w:Renaissance Latin|Renaissance Latin]]\",\n\tplain_categories = {\"British Renaissance Latin\"},\n}\naliases[\"Renaissance Anglo-Latin\"] = \"British Renaissance Latin\"\naliases[\"Renaissance British\"] = \"British\
      \ Renaissance Latin\"\n\nlabels[\"British Vulgar Latin\"] = {\n\tdisplay = \"[[w:British Vulgar Latin|British Vulgar Latin]]\",\n\tplain_categories = {\"British Vulgar Latin\"},\n}\naliases[\"Vulgar Anglo-Latin\"] = \"British Vulgar Latin\"\naliases[\"\
      Vulgar British\"] = \"British Vulgar Latin\"\n\nlabels[\"Canadian English\"] = {\n\tdisplay = \"[[w:Canadian English|Canada]]\",\n\tplain_categories = {\"Canadian English\"},\n}\n\nlabels[\"Canadian spelling\"] = {\n\tdisplay = \"[[w:Canadian spelling|Canadian]]\"\
      ,\n\tplain_categories = {\"Canadian English forms\"},\n}\n\nlabels[\"Cantonese\"] = {\n\tdisplay = \"[[w:Cantonese|Cantonese]]\",\n\tplain_categories = {\"Cantonese Chinese\"},\n}\n\nlabels[\"Central Plains Mandarin\"] = {\n\tdisplay = \"[[w:Central Plains\
      \ Mandarin|Central Plains Mandarin]]\",\n\tplain_categories = {\"Central Plains Mandarin\"},\n}\naliases[\"Zhongyuan Mandarin\"] = \"Central Plains Mandarin\"\n\nlabels[\"Chakavian\"] = {\n\tdisplay = \"[[Chakavian]]\",\n\tplain_categories = {\"Chakavian\
      \ Serbo-Croatian\"},\n}\naliases[\"Čakavian\"] = \"Chakavian\"\n\nlabels[\"Cham Albanian\"] = {\n\tdisplay = \"[[w:Cham Albanian dialect|Cham]]\",\n\tplain_categories = {\"Cham Albanian\"},\n}\n\nlabels[\"Chinglish\"] = {\n\tdisplay = \"[[w:Chinglish|Chinglish]]\"\
      ,\n\tplain_categories = {\"Chinglish\"},\n}\n\nlabels[\"Cockney\"] = {\n\tdisplay = \"[[w:Cockney#Speech|Cockney]]\",\n\tplain_categories = {\"Cockney English\"},\n}\n\nlabels[\"Cois Fharraige\"] = {\n\tdisplay = \"[[w:Gaeltacht Cois Fharraige|Cois Fharraige]]\"\
      ,\n\tplain_categories = {\"Cois Fharraige Irish\"},\n}\naliases[\"Cois Fhairrge\"] = \"Cois Fharraige\"\n\nlabels[\"Dari\"] = {\n\tdisplay = \"[[w:Dari (Persian)|Dari (Afghanistan)]]\",\n\tplain_categories = {\"Dari Persian\"},\n}\n\nlabels[\"De'kwana\"\
      ] = {\n\tdisplay = \"De'kwana dialect\",\n\tplain_categories = {\"De'kwana Maquiritari\"},\n}\naliases[\"De'kwana dialect\"] = \"De'kwana\"\n\nlabels[\"dialectal Mandarin\"] = {\n\tdisplay = \"dialectal [[Mandarin]]\",\n\tplain_categories = {\"Mandarin\
      \ Chinese\"},\n}\nlabels[\"dialectal Cantonese\"] = {\n\tdisplay = \"dialectal [[Cantonese]]\",\n\tplain_categories = {\"Cantonese Chinese\"},\n}\nlabels[\"dialectal Hakka\"] = {\n\tdisplay = \"dialectal [[Hakka]]\",\n\tplain_categories = {\"Hakka Chinese\"\
      },\n}\nlabels[\"dialectal Gan\"] = {\n\tdisplay = \"dialectal [[Gan]]\",\n\tplain_categories = {\"Gan Chinese\"},\n}\nlabels[\"dialectal Jin\"] = {\n\tdisplay = \"dialectal [[Jin]]\",\n\tplain_categories = {\"Jin Chinese\"},\n}\nlabels[\"dialectal Min\
      \ Dong\"] = {\n\tdisplay = \"dialectal [[Min Dong]]\",\n\tplain_categories = {\"Min Dong Chinese\"},\n}\nlabels[\"dialectal Min Nan\"] = {\n\tdisplay = \"dialectal [[Min Nan]]\",\n\tplain_categories = {\"Min Nan Chinese\"},\n}\nlabels[\"dialectal Wu\"\
      ] = {\n\tdisplay = \"dialectal [[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n}\nlabels[\"dialectal Xiang\"] = {\n\tdisplay = \"dialectal [[Xiang]]\",\n\tplain_categories = {\"Xiang Chinese\"},\n}\n\nlabels[\"Digor\"] = {\n\tdisplay = \"Digor dialect\"\
      ,\n\tplain_categories = {\"Digor Ossetian\"},\n}\naliases[\"Digor dialect\"] = \"Digor\"\n\nlabels[\"Doric Scots\"] = {\n\tdisplay = \"[[w:Doric dialect (Scotland)|Doric]]\",\n\tplain_categories = {\"Doric Scots\"},\n}\n\nlabels[\"East Anglian English\"\
      ] = {\n\tdisplay = \"[[w:East Anglian English|East Anglia]]\",\n\tplain_categories = {\"East Anglian English\"},\n}\n\nlabels[\"East Frisian\"] = {\n\tdisplay = \"[[w:East Frisian Low Saxon|East Frisian]]\",\n\tplain_categories = {\"East Frisian Low German\"\
      },\n} -- for East Frisian dialectal German Low German, not the Frisianic language\n\nlabels[\"East Germanic\"] = {\n\tdisplay = \"[[w:East Germanic languages|East Germanic]]\",\n\tplain_categories = {\"East Proto-Germanic\"},\n}\n\nlabels[\"East Midlands\
      \ English\"] = {\n\tdisplay = \"[[w:East Midlands English|East Midlands]]\",\n\tplain_categories = {\"East Midlands English\"},\n}\n\nlabels[\"Eastern Armenian\"] = {\n\tdisplay = \"[[w:Eastern Armenian|Eastern Armenian]]\",\n\tplain_categories = {\"Eastern\
      \ Armenian\"},\n}\n\nlabels[\"Eastern Catalan\"] = {\n\tdisplay = \"[[w:Catalan dialects|Eastern Catalan]]\",\n\tplain_categories = {\"Eastern Catalan\"},\n}\n\nlabels[\"Ecclesiastical Latin\"] = {\n\tdisplay = \"[[w:Ecclesiastical Latin|Ecclesiastical\
      \ Latin]]\",\n\tplain_categories = {\"Ecclesiastical Latin\"},\n}\naliases[\"Church Latin\"] = \"Ecclesiastical Latin\"\n\nlabels[\"Dungan\"] = {\n\tdisplay = \"[[w:Dungan language|Dungan]]\",\n\tplain_categories = {\"Dungan Chinese\"},\n}\n\nlabels[\"\
      Ekavian\"] = {\n\tdisplay = \"[[Ekavian]]\",\n}\n\nlabels[\"European French\"] = {\n\tdisplay = \"[[w:European French|Europe]]\",\n\tplain_categories = {\"European French\"},\n}\n\nlabels[\"Fayyumic\"] = {\n\tdisplay = \"[[w:Coptic language#Fayyumic|Fayyumic]]\"\
      ,\n\tplain_categories = {\"Fayyumic Coptic\"},\n}\naliases[\"Faiyumic\"] = \"Fayyumic\"\naliases[\"Bashmuric\"] = \"Fayyumic\"\n\nlabels[\"East and West Flanders\"] = {\n\tdisplay = \"[[w:East Flanders|East]] and [[w:West Flanders|West Flanders]]\",\n\t\
      plain_categories = {\"East and West Flemish Dutch\"},\n}\naliases[\"Flanders\"] = \"East and West Flanders\"\naliases[\"Flemish\"] = \"East and West Flanders\"\n\nlabels[\"Gan\"] = {\n\tdisplay = \"[[w:Gan Chinese|Gan]]\",\n\tplain_categories = {\"Gan\
      \ Chinese\"},\n}\n\nlabels[\"Geordie\"] = {\n\tdisplay = \"[[w:Geordie|Geordie]]\",\n\tplain_categories = {\"Geordie English\"},\n}\n\nlabels[\"Gheg\"] = {\n\tdisplay = \"[[w:Gheg Albanian|Gheg]]\",\n\tplain_categories = {\"Gheg Albanian\"},\n}\n\nlabels[\"\
      Guardiol\"] = {\n\tdisplay = \"[[w:Guardia Piemontese|Guardiol]]\",\n\tplain_categories = {\"Guardiol Occitan\"},\n}\n\nlabels[\"Hakka\"] = {\n\tdisplay = \"[[w:Hakka Chinese|Hakka]]\",\n\tplain_categories = {\"Hakka Chinese\"},\n}\n\nlabels[\"Hamburgisch\"\
      ] = {\n\tdisplay = \"[[w:Hamburgisch dialect|Hamburgisch]]\",\n\tplain_categories = {\"Hamburgisch Low German\"},\n}\n\nlabels[\"Hamshen\"] = {\n\tdisplay = \"[[w:Homshetsi dialect|Hamshen]]\",\n\tplain_categories = {\"Hamshen Armenian\"},\n}\naliases[\"\
      Homshetsi\"] = \"Hamshen\"\naliases[\"Homshetsma\"] = \"Hamshen\"\n\nlabels[\"Helsinki slang\"] = {\n\tdisplay = \"[[w:Helsinki slang|Helsinki slang]]\",\n\tplain_categories = {\"Helsinki slang\"},\n}\n\nlabels[\"Hokkien\"] = {\n\tdisplay = \"[[w:Hokkien|Hokkien]]\"\
      ,\n\tplain_categories = {\"Hokkien Chinese\"},\n}\n\nlabels[\"Hong Kong Cantonese\"] = {\n\tdisplay = \"[[w:Hong Kong Cantonese|Hong Kong Cantonese]]\",\n\tplain_categories = {\"Hong Kong Cantonese\"},\n}\n\nlabels[\"Hubei\"] = {\n\tdisplay = \"[[w:Hubei|Hubei]]\"\
      ,\n}\n\nlabels[\"Hulu Pahang\"] = {\n\tplain_categories = {\"Hulu Pahang Malay\"},\n}\n\nlabels[\"Ikavian\"] = {\n\tdisplay = \"[[Ikavian]]\",\n\tplain_categories = {\"Ikavian Serbo-Croatian\"},\n}\n\nlabels[\"Indian English\"] = {\n\tdisplay = \"[[w:Indian\
      \ English|India]]\",\n\tplain_categories = {\"Indian English\"},\n}\n\nlabels[\"Ingilo\"] = {\n\tdisplay = \"[[w:Ingiloy people|Ingilo]]\",\n\tplain_categories = {\"Ingilo Georgian\"},\n}\naliases[\"Ingiloy\"] = \"Ingilo\"\naliases[\"Saingilo\"] = \"Ingilo\"\
      \n\nlabels[\"Inner Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About Mbugu|Ma'a]]\",\n\tplain_categories = {\"Inner Mbugu\"},\n}\naliases[\"inner Mbugu\"] = \"Inner Mbugu\"\n\nlabels[\"Inuktun\"] = {\n\tplain_categories = {\"Inuktun Inuktitut\"},\n}\naliases[\"\
      Polar Eskimo\"] = \"Inuktun\"\n\nlabels[\"Inuttut\"] = {\n\tplain_categories = {\"Inuttut Inuktitut\"},\n}\naliases[\"Nunatsiavummiutut\"] = \"Inuttut\"\naliases[\"Labradorimiutut\"] = \"Inuttut\"\naliases[\"Inuttitut\"] = \"Inuttut\"\n\nlabels[\"Irish\
      \ English\"] = {\n\tdisplay = \"[[w:Irish English|Ireland]]\",\n\tplain_categories = {\"Irish English\"},\n}\n\nlabels[\"Iron\"] = {\n\tdisplay = \"Iron dialect\",\n\tplain_categories = {\"Iron Ossetian\"},\n}\naliases[\"Iron dialect\"] = \"Iron\"\n\n\
      labels[\"Itivimuit\"] = {\n\tplain_categories = {\"Itivimuit Inuktitut\"},\n}\n\nlabels[\"Jianghuai Mandarin\"] = {\n\tdisplay = \"[[w:Lower Yangtze Mandarin|Jianghuai Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"Jiang-Huai\
      \ Mandarin\"] = \"Jianghuai Mandarin\"\naliases[\"Lower Yangtze Mandarin\"] = \"Jianghuai Mandarin\"\n\nlabels[\"Jiaoliao Mandarin\"] = {\n\tdisplay = \"[[w:Jiaoliao Mandarin|Jiaoliao Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"\
      Jiao-Liao Mandarin\"] = \"Jiaoliao Mandarin\"\n\nlabels[\"Jilu Mandarin\"] = {\n\tdisplay = \"[[w:Jilu Mandarin|Jilu Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"Ji-Lu Mandarin\"] = \"Jilu Mandarin\"\n\nlabels[\"Jin\"] = {\n\
      \tdisplay = \"[[w:Jin Chinese|Jin]]\",\n\tregional_categories = {\"Jin\"},\n}\n\nlabels[\"Kajkavian\"] = {\n\tdisplay = \"[[Kajkavian]]\",\n\tplain_categories = {\"Kajkavian Serbo-Croatian\"},\n}\n\nlabels[\"Karabakh\"] = {\n\tdisplay = \"[[w:Karabakh\
      \ dialect (Armenian)|Karabakh]]\",\n\tplain_categories = {\"Karabakh Armenian\"},\n}\naliases[\"Gharabagh\"] = \"Karabakh\"\naliases[\"Artsakh\"] = \"Karabakh\"\n\nlabels[\"Kansai\"] = {\n\tdisplay = \"[[w:Kansai dialect|Kansai]]\",\n\tplain_categories\
      \ = {\"Kansai Japanese\"},\n}\n\nlabels[\"Karachay\"] = {\n\tplain_categories = {\"Karachay\"},\n}\n\nlabels[\"Kichwa\"] = {\n\tdisplay = \"[[w:Kichwa language|Standard Ecuadorian Kichwa]]\",\n\tplain_categories = {\"Standard Kichwa\"},\n}\n\nlabels[\"\
      Kromanti\"] = {\n\tdisplay = \"[[w:Jamaican Maroon spirit-possession language|Kromanti spirit possession language]]\",\n\tplain_categories = {\"Kromanti Akan\"},\n}\n\nlabels[\"Lanyin Mandarin\"] = {\n\tdisplay = \"[[w:Lanyin Mandarin|Lanyin Mandarin]]\"\
      ,\n\tplain_categories = {\"Mandarin Chinese\"},\n}\naliases[\"Lan-Yin Mandarin\"] = \"Lanyin Mandarin\"\n\nlabels[\"Late Latin\"] = {\n\tdisplay = \"[[w:Late Latin|Late Latin]]\",\n\tplain_categories = {\"Late Latin\"},\n}\n\nlabels[\"Latin America\"]\
      \ = {\n\tdisplay = \"[[w:Latin America|Latin America]]\",\n\tplain_categories = {\"Latin American Spanish\"},\n}\naliases[\"Latin American Spanish\"] = \"Latin America\"\n\nlabels[\"Louisiana French\"] = {\n\tdisplay = \"[[w:Cajun French|Louisiana]]\"\
      ,\n\tplain_categories = {\"Louisiana French\"},\n}\n\nlabels[\"Low Prussian\"] = {\n\tdisplay = \"[[w:Low Prussian dialect|Low Prussian]]\",\n\tplain_categories = {\"Low Prussian Low German\"},\n}\n\nlabels[\"Lowlands Scots\"] = {\n\tplain_categories =\
      \ {\"Lowlands Scots\"},\n}\n\nlabels[\"Lycopolitan\"] = {\n\tdisplay = \"[[w:Coptic language#Lycopolitan|Lycopolitan]]\",\n\tplain_categories = {\"Lycopolitan Coptic\"},\n}\naliases[\"Subakhmimic\"] = \"Lycopolitan\"\naliases[\"Assiutic\"] = \"Lycopolitan\"\
      \n\nlabels[\"Mecklenburgisch Low German\"] = {\n\tdisplay = \"[[w:Mecklenburgisch dialect|Mecklenburgisch]]\",\n\tplain_categories = {\"Mecklenburgisch Low German\"},\n}\naliases[\"Mecklenburgisch\"] = \"Mecklenburgisch Low German\"\naliases[\"Mecklenburg\"\
      ] = \"Mecklenburgisch Low German\"\n\nlabels[\"Medieval Latin\"] = {\n\tdisplay = \"[[w:Medieval Latin|Medieval Latin]]\",\n\tplain_categories = {\"Medieval Latin\"},\n}\n\nlabels[\"Midlands English\"] = {\n\tdisplay = \"[[w:Midlands English|Midlands]]\"\
      ,\n\tplain_categories = {\"Midlands English\"},\n}\n\nlabels[\"Min\"] = {\n\tdisplay = \"[[w:Min Chinese|Min]]\",\n\tplain_categories = {\"Min Chinese\"},\n}\n\nlabels[\"Min Bei\"] = {\n\tdisplay = \"[[w:Northern Min|Min Bei]]\",\n\tplain_categories =\
      \ {\"Min Bei Chinese\"},\n}\n\nlabels[\"Min Dong\"] = {\n\tdisplay = \"[[w:Eastern Min|Min Dong]]\",\n\tplain_categories = {\"Min Dong Chinese\"},\n}\n\nlabels[\"Min Nan\"] = {\n\tdisplay = \"[[w:Southern Min|Min Nan]]\",\n\tplain_categories = {\"Min Nan\
      \ Chinese\"},\n}\n\nlabels[\"Min Zhong\"] = {\n\tdisplay = \"[[w:Central Min|Min Zhong]]\",\n\tplain_categories = {\"Min Zhong Chinese\"},\n}\n\nlabels[\"Mistralian\"] = {\n\tdisplay = \"[[w:Occitan language#Writing system|Mistralian]]\",\n\tplain_categories\
      \ = {\"Mistralian Occitan\"},\n}\n\nlabels[\"Mooring\"] = {\n\tdisplay = \"[[w:Mooring (North Frisian dialect)|Mooring]]\",\n\tplain_categories = {\"Mooring North Frisian\"},\n}\naliases[\"Mooring dialect\"] = \"Mooring\"\n\nlabels[\"Multicultural London\
      \ English\"] = {\n\tdisplay = \"[[w:Multicultural London English|MLE]]\",\n\tplain_categories = {\"Multicultural London English\"},\n}\naliases[\"MLE\"] = \"Multicultural London English\"\n\nlabels[\"New Latin\"] = {\n\tdisplay = \"[[w:New Latin|New Latin]]\"\
      ,\n\tplain_categories = {\"New Latin\"},\n}\n\nlabels[\"New Zealand English\"] = {\n\tdisplay = \"[[w:New Zealand English|New Zealand]]\",\n\tplain_categories = {\"New Zealand English\"},\n}\n\nlabels[\"Non-Oxford British spelling\"] = {\n\tdisplay = \"\
      Non-[[w:Oxford spelling|Oxford]] [[British English]]\",\n\tplain_categories = {\"British English forms\"},\n}\naliases[\"non-Oxford British spelling\"] = \"Non-Oxford British spelling\"\naliases[\"Non-Oxford\"] = \"Non-Oxford British spelling\"\naliases[\"\
      non-Oxford\"] = \"Non-Oxford British spelling\"\n\nlabels[\"Normal Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About Mbugu|Mbugu]]\",\n\tplain_categories = {\"Normal Mbugu\"},\n}\naliases[\"normal Mbugu\"] = \"Normal Mbugu\"\n\nlabels[\"North Germanic\"]\
      \ = {\n\tdisplay = \"[[w:North Germanic languages|North Germanic]]\",\n\tplain_categories = {\"North Proto-Germanic\"},\n}\n\nlabels[\"Northeastern Mandarin\"] = {\n\tdisplay = \"[[w:Northeastern Mandarin|Northeastern Mandarin]]\",\n\tplain_categories\
      \ = {\"Mandarin Chinese\"},\n}\naliases[\"northeastern Mandarin\"] = \"Northeastern Mandarin\"\n\nlabels[\"Northern Dutch\"] = {\n\tdisplay = \"[[w:Dutch dialects|Northern]]\",\n\tplain_categories = {\"Northern Dutch\"},\n}\n\nlabels[\"Northern England\
      \ English\"] = {\n\tdisplay = \"[[w:Northern England English|Northern England]]\",\n\tplain_categories = {\"Northern England English\"},\n}\naliases[\"Northern English dialect\"] = \"Northern England English\"\naliases[\"northern English\"] = \"Northern\
      \ England English\"\naliases[\"North English\"] = \"Northern England English\"\naliases[\"north English\"] = \"Northern England English\"\n\nlabels[\"Northern Finnic\"] = {\n\tplain_categories = {\"Northern Proto-Finnic\"},\n}\n\nlabels[\"Northern Wu\"\
      ] = {\n\tdisplay = \"Northern [[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n}\n\nlabels[\"Northwest Germanic\"] = {\n\tdisplay = \"[[w:Northwest Germanic languages|Northwest Germanic]]\",\n\tplain_categories = {\"Northwest Proto-Germanic\"},\n}\n\n\
      labels[\"Nynorsk\"] = {\n\tdisplay = \"Nynorsk\",\n\tplain_categories = {\"Norwegian Nynorsk\"},\n}\n\nlabels[\"Oxford British spelling\"] = {\n\tdisplay = \"[[w:Oxford spelling|Oxford]] [[British English]]\",\n\tplain_categories = {\"Oxford spellings\"\
      },\n}\naliases[\"Oxford\"] = \"Oxford British spelling\"\n\nlabels[\"Oxyrhynchite\"] = {\n\tdisplay = \"[[w:Coptic language#Oxyrhynchite|Oxyrhynchite]]\",\n\tplain_categories = {\"Oxyrhynchite Coptic\"},\n}\naliases[\"Mesokemic\"] = \"Oxyrhynchite\"\n\n\
      labels[\"Pennsylvania Dutch English\"] = {\n\tdisplay = \"[[w:Pennsylvania Dutch English|Pennsylvania Dutch English]]\",\n\tplain_categories = {\"Pennsylvania Dutch English\"},\n}\n\nlabels[\"Pomeranian Low German\"] = {\n\tdisplay = \"[[w:Pomeranian Low\
      \ German|Pomeranian]]\",\n\tplain_categories = {\"Pomeranian Low German\"},\n}\naliases[\"Pomeranian LG\"] = \"Pomeranian Low German\"\n\nlabels[\"Potteries\"] = {\n\tdisplay = \"[[w:Potteries dialect|Potteries]]\",\n\tplain_categories = {\"Potteries English\"\
      },\n}\naliases[\"Potteries dialect\"] = \"Potteries\"\n\nlabels[\"Punjab\"] = {\n\tdisplay = \"[[w:Punjab|Punjab]]\",\n\tregional_categories = {\"Punjabi\"},\n}\n\nlabels[\"Puter\"] = {\n\tdisplay = \"[[w:Putèr|Puter]]\",\n\tplain_categories = {\"Puter\
      \ Romansch\"},\n}\n\nlabels[\"Puxian Min\"] = {\n\tdisplay = \"[[w:Pu-Xian Min|Puxian Min]]\",\n\tplain_categories = {\"Puxian Min Chinese\"},\n}\naliases[\"Puxian\"] = \"Puxian Min\"\naliases[\"Pu-Xian Min\"] = \"Puxian Min\"\naliases[\"Pu-Xian\"] = \"\
      Puxian Min\"\naliases[\"Xinghua\"] = \"Puxian Min\"\naliases[\"Hinghwa\"] = \"Puxian Min\"\n\nlabels[\"Quanzhou\"] = {\n\tdisplay = \"[[w:Quanzhou dialect|Quanzhou]]\",\n\tplain_categories = {\"Hokkien Chinese\"},\n}\naliases[\"Quanzhou dialect\"] = \"\
      Quanzhou\"\naliases[\"Chinchew\"] = \"Quanzhou\"\naliases[\"Chinchew dialect\"] = \"Quanzhou\"\naliases[\"Choanchew\"] = \"Quanzhou\"\naliases[\"Choanchew dialect\"] = \"Quanzhou\"\n\nlabels[\"Renaissance Latin\"] = {\n\tdisplay = \"[[w:Renaissance Latin|Renaissance\
      \ Latin]]\",\n\tplain_categories = {\"Renaissance Latin\"},\n}\n\nlabels[\"Royal Thai\"] = {\n\tdisplay = \"royal\",\n\tplain_categories = {\"Thai royal vocabulary\"},\n}\n\nlabels[\"Rumantsch Grischun\"] = {\n\tdisplay = \"[[w:Rumantsch Grischun|Rumantsch\
      \ Grischun]]\",\n}\n\nlabels[\"Saarland\"] = {\n\tdisplay = \"Saarland\",\n\tregional_categories = {\"Saarland\"},\n}\naliases[\"Saarländisch\"] = \"Saarland\"\naliases[\"Saarlandic\"] = \"Saarland\"\naliases[\"Saarlandish\"] = \"Saarland\"\n\nlabels[\"\
      Sahidic\"] = {\n\tdisplay = \"[[w:Coptic language#Sahidic|Sahidic]]\",\n\tplain_categories = {\"Sahidic Coptic\"},\n}\naliases[\"Thebaic\"] = \"Sahidic\"\n\nlabels[\"Saigon\"] = {\n\tdisplay = \"[[w:Saigon|Saigon]]\",\n\tregional_categories = {\"Southern\"\
      },\n}\naliases[\"Saigonese\"] = \"Saigon\"\n\nlabels[\"Scottish English\"] = {\n\tdisplay = \"[[w:Scottish English|Scotland]]\",\n\tplain_categories = {\"Scottish English\"},\n}\n\nlabels[\"Shapsug\"] = {\n\tdisplay = \"[[w:Shapsug Adyghe dialect|Shapsug\
      \ dialect]]\",\n\tplain_categories = {\"Shapsug Adyghe\"},\n}\n\nlabels[\"Shopski\"] = {\n\tdisplay = \"[[w:Shopi#Dialects|Shopski]]\",\n\tplain_categories = {\"Shopski Bulgarian\"},\n}\n\nlabels[\"Sichuan\"] = {\n\tdisplay = \"[[w:Sichuanese dialects|Sichuan]]\"\
      ,\n\tplain_categories = {\"Sichuanese Chinese\"},\n}\naliases[\"Sichuanese\"] = \"Sichuan\"\n\nlabels[\"Silla\"] = {\n\tplain_categories = {\"Silla Old Korean\"},\n}\n\nlabels[\"Sistani\"] = {\n\tdisplay = \"[[w:Sistani dialect|Sistani]]\",\n\tplain_categories\
      \ = {\"Sistani Persian\"},\n}\n\nlabels[\"Shropshire\"] = {\n\tdisplay = \"[[w:Shropshire|Shropshire]]\",\n\tregional_categories = {\"Shropshire\"},\n}\naliases[\"Shropshire dialect\"] = \"Shropshire\"\naliases[\"Shrops\"] = \"Shropshire\"\naliases[\"\
      Salop\"] = \"Shropshire\"\naliases[\"Salopian\"] = \"Shropshire\"\n\nlabels[\"Skiri Pawnee\"] = {\n\tplain_categories = {\"Skiri Pawnee\"},\n}\n\nlabels[\"South African English\"] = {\n\tdisplay = \"[[w:South African English|South Africa]]\",\n\tplain_categories\
      \ = {\"South African English\"},\n}\n\nlabels[\"South Scots\"] = {\n\tdisplay = \"[[w:Southern Scots|South Scots]]\",\n\tplain_categories = {\"South Scots\"},\n}\n\nlabels[\"Southern Dutch\"] = {\n\tdisplay = \"[[w:Dutch dialects|Southern]]\",\n\tplain_categories\
      \ = {\"Southern Dutch\"},\n}\n\nlabels[\"Southern England English\"] = {\n\tdisplay = \"[[w:English in southern England|Southern England]]\",\n\tplain_categories = {\"Southern England English\"},\n}\naliases[\"Southern English\"] = \"Southern England English\"\
      \naliases[\"Southern English dialect\"] = \"Southern England English\"\n\nlabels[\"Southern Germany\"] = {\n\tdisplay = \"[[w:Southern Germany|southern Germany]]\",\n\tregional_categories = {\"Southern\"},\n}\naliases[\"southern Germany\"] = \"southern\
      \ Germany\"\naliases[\"Southern German\"] = \"southern Germany\"\naliases[\"southern German\"] = \"southern Germany\"\naliases[\"South Germany\"] = \"southern Germany\"\naliases[\"south Germany\"] = \"southern Germany\"\naliases[\"South German\"] = \"\
      southern Germany\"\naliases[\"south German\"] = \"southern Germany\"\n\nlabels[\"Southern US English\"] = {\n\tdisplay = \"[[w:Southern American English|Southern US]]\",\n\tplain_categories = {\"Southern US English\"},\n}\naliases[\"Southern American English\"\
      ] = \"Southern US English\"\n\nlabels[\"Southern Wu\"] = {\n\tdisplay = \"Southern [[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n}\n\nlabels[\"Southwestern Mandarin\"] = {\n\tdisplay = \"[[w:Southwestern Mandarin|Southwestern Mandarin]]\",\n\tplain_categories\
      \ = {\"Southwestern Mandarin\"},\n}\naliases[\"southwestern Mandarin\"] = \"Southwestern Mandarin\"\naliases[\"Upper Yangtze Mandarin\"] = \"Southwestern Mandarin\"\naliases[\"Southwest Mandarin\"] = \"Southwestern Mandarin\"\n\naliases[\"Spilamberto\"\
      ] = \"Spilambertese\"\nlabels[\"Spilambertese\"] = {\n\tdisplay = \"[[w:Spilamberto|Spilambertese]]\",\n\tregional_categories = {\"Spilambertese\"},\n}\n\nlabels[\"Surmiran\"] = {\n\tdisplay = \"[[w:Surmiran dialect|Surmiran]]\",\n\tplain_categories =\
      \ {\"Surmiran Romansch\"},\n}\n\nlabels[\"Sursilvan\"] = {\n\tdisplay = \"[[w:Sursilvan dialects (Romansh)|Sursilvan]]\",\n\tplain_categories = {\"Sursilvan Romansch\"},\n}\n\nlabels[\"Sussex\"] = {\n\tdisplay = \"[[w:Sussex dialect|Sussex]]\",\n\tplain_categories\
      \ = {\"Sussex English\"},\n}\n\nlabels[\"Sutsilvan\"] = {\n\tdisplay = \"[[w:Sutsilvan dialects (Romansh)|Sutsilvan]]\",\n\tplain_categories = {\"Sutsilvan Romansch\"},\n}\n\nlabels[\"Switzerland and Liechtenstein spelling\"] = {\n\tdisplay = \"[[Switzerland]]\
      \ and [[Liechtenstein]]\",\n\tplain_categories = {\"Switzerland and Liechtenstein German forms\"},\n}\naliases[\"SLDE\"] = \"Switzerland and Liechtenstein spelling\"\n\nlabels[\"Tosk\"] = {\n\tdisplay = \"[[w:Tosk Albanian|Tosk]]\",\n\tplain_categories\
      \ = {\"Tosk Albanian\"},\n}\n\nlabels[\"Trás-os-Montes\"] = {\n\tdisplay = \"[[Trás-os-Montes]]\",\n\tplain_categories = {\"Transmontane Portuguese\"},\n}\n\nlabels[\"Tyneside\"] = {\n\tplain_categories = {\"Geordie English\"},\n}\n\nlabels[\"Ulster Scots\"\
      ] = {\n\tdisplay = \"[[w:Ulster Scots dialects|Ulster Scots]]\",\n\tplain_categories = {\"Ulster Scots\"},\n}\naliases[\"Ullans\"] = \"Ulster Scots\"\n\nlabels[\"Uttar Pradesh\"] = {\n\tdisplay = \"[[w:Uttar Pradesh|Uttar Pradesh]]\",\n\tregional_categories\
      \ = {\"Uttar Pradeshi\"},\n}\n\nlabels[\"Vallader\"] = {\n\tdisplay = \"[[w:Vallader dialect (Romansh)|Vallader]]\",\n\tplain_categories = {\"Vallader Romansch\"},\n}\n\nlabels[\"Vivaro-Alpine\"] = {\n\tdisplay = \"[[w:Vivaro-Alpine dialect|Vivaro-Alpine]]\"\
      ,\n\tplain_categories = {\"Vivaro-Alpine Occitan\"},\n}\n\nlabels[\"Vulgar Latin\"] = {\n\tdisplay = \"[[w:Vulgar Latin|Vulgar Latin]]\",\n\tplain_categories = {\"Vulgar Latin\"},\n}\n\nlabels[\"West Country English\"] = {\n\tdisplay = \"[[w:West Country\
      \ English|West Country]]\",\n\tplain_categories = {\"West Country English\"},\n}\naliases[\"West Country dialect\"] = \"West Country English\"\n\nlabels[\"West Germanic\"] = {\n\tdisplay = \"[[w:West Germanic languages|West Germanic]]\",\n\tplain_categories\
      \ = {\"West Proto-Germanic\"},\n}\n\nlabels[\"West Midlands English\"] = {\n\tdisplay = \"[[w:West Midlands English|West Midlands]]\",\n\tplain_categories = {\"West Midlands English\"},\n}\naliases[\"West Midlands dialect\"] = \"West Midlands English\"\
      \n\nlabels[\"Western Armenian\"] = {\n\tdisplay = \"[[w:Western Armenian|Western Armenian]]\",\n\tplain_categories = {\"Western Armenian\"},\n}\n\nlabels[\"Western Catalan\"] = {\n\tdisplay = \"[[w:Catalan dialects|Western Catalan]]\",\n\tplain_categories\
      \ = {\"Western Catalan\"},\n}\n\nlabels[\"Western Malayo-Polynesian\"] = {\n\tdisplay = \"[[w:Western Malayo-Polynesian languages|Western Malayo-Polynesian]]\",\n\tplain_categories = {\"Western Proto-Malayo-Polynesian\"},\n}\n\nlabels[\"Western Pomeranian\
      \ Low German\"] = {\n\tdisplay = \"Western Pomeranian\",\n\tplain_categories = {\"Western Pomeranian Low German\"},\n}\naliases[\"West Pomeranian Low German\"] = \"Western Pomeranian Low German\"\naliases[\"Western Pomeranian LG\"] = \"Western Pomeranian\
      \ Low German\"\naliases[\"West Pomeranian LG\"] = \"Western Pomeranian Low German\"\n\nlabels[\"Western Samic\"] = {\n\tplain_categories = {\"Western Proto-Samic\"},\n}\n\nlabels[\"Wu\"] = {\n\tdisplay = \"[[w:Wu Chinese|Wu]]\",\n\tplain_categories = {\"\
      Wu Chinese\"},\n}\n\nlabels[\"Xiamen\"] = {\n\tdisplay = \"[[w:Amoy dialect|Xiamen]]\",\n\tplain_categories = {\"Hokkien Chinese\"},\n}\naliases[\"Xiamen dialect\"] = \"Xiamen\"\naliases[\"Amoy\"] = \"Xiamen\"\naliases[\"Amoy dialect\"] = \"Xiamen\"\n\n\
      labels[\"Xiang\"] = {\n\tdisplay = \"[[w:Xiang Chinese|Xiang]]\",\n\tplain_categories = {\"Xiang Chinese\"},\n}\n\nlabels[\"Ye'kwana\"] = {\n\tdisplay = \"Ye'kwana dialect\",\n\tplain_categories = {\"Ye'kwana Maquiritari\"},\n}\naliases[\"Ye'kwana dialect\"\
      ] = \"Ye'kwana\"\n\nlabels[\"Zhangzhou\"] = {\n\tdisplay = \"[[w:Zhangzhou dialect|Zhangzhou]]\",\n\tplain_categories = {\"Hokkien Chinese\"},\n}\naliases[\"Zhangzhou dialect\"] = \"Zhangzhou\"\naliases[\"Changchew\"] = \"Zhangzhou\"\naliases[\"Changchew\
      \ dialect\"] = \"Zhangzhou\"\n\n-- Adds labels[label][\"languages\"][language_code] = true for members of \"languages\" field.\nm_data_functions.handle_languages(labels)\n\nreturn {labels = labels, aliases = aliases, deprecated = deprecated}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:39.655Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atrans-top&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=37739 t=1555362459571491
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:39 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1315.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 425986509, 814838879, 700421282
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="454350" pageid="454350" ns="10" title="Template:trans-top"><revisions><rev user="Erutuon" timestamp="2017-06-13T19:37:12Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="change requested by [[User:CodeCat|CodeCat]] in [[Wiktionary:Grease pit/2017/June#Requested change to Template:trans-top]]" xml:space="preserve">{{#if:{{{1|}}}||{{#ifeq:{{NAMESPACE}}||[[Category:Translation table header lacks gloss]]}}}}&lt;div class="NavFrame" {{#ifeq:{{{1|}}}|Translations to be checked||{{#if:{{{id|{{{1|}}}}}}|id{{=}}"Translations-{{anchorencode:{{{id|{{{1}}}}}}}}"}}}}&gt;
      &lt;div class="NavHead" style="text-align:left; "&gt;{{#invoke:links|remove_links|{{{1|Translations}}}}}&lt;/div&gt;
      &lt;div class="NavContent"&gt;
      {| class="translations" role="presentation" style="width:100%;" data-gloss="{{#invoke:ugly hacks|escape_wiki|{{{1|}}}}}"
      |-
      | class="translations-cell" style="background-color:#ffffe0; vertical-align:top; width:48%; text-align:left; " |
      &lt;noinclude&gt;
      |}&lt;/div&gt;&lt;/div&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:39.830Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3A%3D&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51070 t=1555362459733637
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:39 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 200953976, 829107138, 696528765
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5118411" pageid="5118411" ns="10" title="Template:="><revisions><rev user="Yair rand" timestamp="2016-02-04T04:30:06Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="close noinclude" xml:space="preserve">=&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:40.030Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Augly+hacks&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56756 t=1555362459925660
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:40 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 752787547, 634999867, 694173760
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4300282\" pageid=\"4300282\" ns=\"828\" title=\"Module:ugly hacks\"><revisions><rev user=\"Rua\" timestamp=\"2018-01-04T23:40:32Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"Removed some unused functions\" xml:space=\"preserve\">local export = {}\n\nfunction export.explode(frame)\n\tlocal wanted_index = tonumber(frame.args[3])\n \n\tlocal count = 1\n\tfor item in mw.text.gsplit(frame.args[1],\
      \ frame.args[2], true) do\n\t\tif count == wanted_index then\n\t\t\treturn item\n\t\tend\n\t\tcount = count + 1\t\n\tend\n\t\n\treturn \"\"\nend\n\nfunction export.substr(frame)\n\treturn mw.ustring.sub(frame.args[1] or \"\", tonumber(frame.args[2]) or\
      \ 1, tonumber(frame.args[3]) or -1)\nend\n\nfunction export.find(frame)\n\treturn mw.ustring.find(frame.args[1] or \"\", frame.args[2] or \"\", 1, true) or \"\"\nend\n\nfunction export.find_pattern(frame)\n\treturn mw.ustring.find(frame.args[1] or \"\"\
      , frame.args[2] or \"\", 1, false) or \"\"\nend\n\nfunction export.replace(frame)\n\treturn (mw.ustring.gsub(frame.args[1] or \"\", frame.args[2] or \"\", frame.args[3] or \"\"))\nend\n\nfunction export.match(frame)\n\treturn (mw.ustring.match(frame.args[1]\
      \ or \"\", frame.args[2] or \"\"))\nend\n\nfunction export.escape_wiki(frame)\n\treturn mw.text.nowiki(frame.args[1] or \"\")\nend\n\nfunction export.escape_html(frame)\n\treturn mw.text.encode(frame.args[1] or \"\")\nend\n\nfunction export.is_valid_page_name(frame)\n\
      \tlocal res = mw.title.new(frame.args[1])\n\tif res then\n\t\treturn \"valid\"\n\telse\n\t\treturn \"\"\n\tend\nend\n\nreturn setmetatable({ }, {\n\t__index = function(self, key)\n\t\tlocal m_debug = require('Module:debug')\n\t\tlocal frame = mw.getCurrentFrame()\n\
      \t\tlocal pframe = frame:getParent()\n\t\tlocal tname = pframe and pframe:getTitle()\n\n\t\tm_debug.track('ugly hacks/' .. key)\n\t\tif pframe then\n\t\t\tm_debug.track('ugly hacks/' .. key .. '/from ' .. tname)\n\t\telse\n\t\t\tmw.log(debug.traceback('ugly\
      \ hacks: parent frame not available'))\n\t\tend\n\t\treturn export[key]\t\n\tend\n})</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:33.660Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Adebug&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=79650 t=1555362453528640
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:33 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 568161979, 239329138, 698034834
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4109235\" pageid=\"4109235\" ns=\"828\" title=\"Module:debug\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-12-25T05:19:47Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 51139735 by [[Special:Contributions/Erutuon|Erutuon]] ([[User talk:Erutuon|talk]]): restore if needed\" xml:space=\"preserve\">local export = {}\n\nlocal escape\ndo\n\tlocal escapes = {\n\t\
      \t[\"\\a\"] = \"a\", [\"\\b\"] = \"b\", [\"\\f\"] = \"f\", [\"\\n\"] = \"n\", [\"\\r\"] = \"r\",\n\t\t[\"\\t\"] = \"t\", [\"\\v\"] = \"v\", [\"\\\\\"] = \"\\\\\", [\"\\\"\"] = '\"', [\"'\"] = \"'\",\n\t}\n\t\n\tlocal function helper(char)\n\t\treturn escapes[char]\
      \ and \"\\\\\" .. escapes[char]\n\t\t\tor (\"\\\\%03d\"):format(char:byte())\n\tend\n\t\n\t-- Escape control characters, backslash, double quote, and bytes that aren't\n\t-- used in UTF-8.\n\t-- Escape stuff that can't be saved in a MediaWiki page, like\
      \ invalid UTF-8\n\t-- and NFD character sequences? Hard.\n\t-- Similar to string.format(\"%q\", str), which does not use C-like simple\n\t-- escapes and does not escape bytes that are not used in UTF-8.\n\tescape = function (str)\n\t\treturn (str:gsub(\"\
      [%z\\1-\\31\\\\\\\"\\127\\192\\193\\245-\\255]\", helper))\n\tend\nend\n\nexport.escape = escape\n\n-- Convert a value to a string\nfunction export.dump(value, prefix, tsort)\n\tlocal t = type(value)\n\t\n\tprefix = prefix or \"\"\n\t\n\tif t == \"string\"\
      \ then\n\t\treturn '\"' .. escape(value) .. '\"'\n\telseif t == \"table\" then\n\t\tlocal str_table = {}\n\t\t\n\t\ttable.insert(str_table, \" {\")\n\t\t\n\t\tfor key, val in require(\"Module:table\").sortedPairs(value, tsort) do\n\t\t\ttable.insert(str_table,\
      \ \" \" .. prefix .. \"\\t[\" .. export.dump(key, prefix .. \"\\t\") .. \"] = \" .. export.dump(val, prefix .. \"\\t\"):gsub(\"^ \", \"\") .. \",\")\n\t\tend\n\t\t\n\t\ttable.insert(str_table, \" \" .. prefix .. \"}\")\n\t\t\n\t\treturn table.concat(str_table,\
      \ \"\\n\")\n\telse\n\t\treturn tostring(value)\n\tend\nend\n\n\nfunction export.highlight_dump(value, prefix, tsort, options)\n\toptions = options or {}\n\t\n\tlocal func = options.modified and \"modified_dump\" or \"dump\"\n\t\n\tlocal dump = export[func](value,\
      \ prefix, tsort)\n\t\n\t-- Remove spaces at beginnings of lines (which are simply to force a &lt;pre&gt;&lt;/pre&gt; tag).\n\tdump = dump:gsub(\"^ \", \"\")\n\tdump = dump:gsub(\"\\n \", \"\\n\")\n\t\n\treturn export.highlight(dump)\nend\n\n\n-- Returns\
      \ true if table contains a table as one of its values\nlocal function containsTable(t)\n\tfor key, value in pairs(t) do\n\t\tif type(value) == \"table\" then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\n\n\nlocal function containsTablesWithSize(t,\
      \ size)\n\tfor key, value in pairs(t) do\n\t\tif type(value) == \"table\" and require(\"Module:table\").size(value) ~= size then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend\t\n\n\n--[=[\n\tConvert a value to a string.\n\tLike dump below, but\
      \ if a table has consecutive numbered keys and does not\n\thave a table as one of its values, it will be placed on a single line.\n\tUsed by [[Module:User:Erutuon/script recognition]].\n]=]\nfunction export.modified_dump(value, prefix, tsort)\n\tlocal\
      \ t = type(value)\n\t\n\tprefix = prefix or \"\"\n\t\n\tif t == \"string\" then\n\t\treturn '\"' .. value .. '\"'\n\telseif t == \"table\" then\n\t\tlocal str_table = {}\n\t\t\n\t\tlocal containsTable = containsTable(value)\n\t\tlocal consecutive = require(\"\
      Module:table\").isArray(value)\n\t\tif consecutive and not containsTable or containsTable and containsTablesWithSize(value, 3) then\n\t\t\ttable.insert(str_table, \"{\")\n\t\t\t\n\t\t\tfor key, val in require(\"Module:table\").sortedPairs(value, tsort)\
      \ do\n\t\t\t\tif containsTable then\n\t\t\t\t\ttable.insert(str_table, \"\\n\\t\" .. prefix)\n\t\t\t\telse\n\t\t\t\t\ttable.insert(str_table, \" \")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif type(key) == \"string\" then\n\t\t\t\t\ttable.insert(str_table, \"[\"\
      \ .. export.modified_dump(key) .. \"] = \")\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\ttable.insert(str_table, type(key) == \"number\" and type(val) == \"number\" and string.format(\"0x%05X\", val) or export.modified_dump(val))\n\t\t\t\t\n\t\t\t\tif not (consecutive\
      \ and #value == 3) or type(key) == \"number\" and value[key + 1] then\n\t\t\t\t\ttable.insert(str_table, \",\")\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif containsTable then\n\t\t\t\ttable.insert(str_table, \"\\n\" .. prefix)\n\t\t\telse\n\t\t\t\ttable.insert(str_table,\
      \ \" \")\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(str_table, \"}\")\n\t\t\treturn table.concat(str_table)\n\t\tend\n\t\t\n\t\ttable.insert(str_table, \" {\")\n\t\t\n\t\tfor key, val in require(\"Module:table\").sortedPairs(value, tsort) do\n\t\t\ttable.insert(str_table,\
      \ \" \" .. prefix .. \"\\t[\" .. export.modified_dump(key, prefix .. \"\\t\") .. \"] = \" .. export.modified_dump(val, prefix .. \"\\t\"):gsub(\"^ \", \"\") .. \",\")\n\t\tend\n\t\t\n\t\ttable.insert(str_table, \" \" .. prefix .. \"}\")\n\t\t\n\t\treturn\
      \ table.concat(str_table, \"\\n\")\n\telseif t == \"number\" and value &gt; 46 then\n\t\treturn string.format(\"0x%05X\", value)\n\telse\n\t\treturn tostring(value)\n\tend\nend\n\t\n\nfunction export.track(key)\n\tlocal frame = mw.getCurrentFrame()\n\t\
      if key then\n\t\tif type(key) ~= \"table\" then\n\t\t\tkey = { key }\n\t\tend\n\t\t\n\t\tfor i, value in pairs(key) do\n\t\t\tpcall(frame.expandTemplate, frame, { title = 'tracking/' .. value })\n\t\tend\n\telse\n\t\terror('No tracking key supplied to\
      \ the function \"' .. track .. '\".')\n\tend\nend\n\n\n-- Trigger a script error from a template\nfunction export.error(frame)\n\terror(frame.args[1] or \"(no message specified)\")\nend\n\n--[[\n\tConvenience function for generating syntaxhighlight tags.\n\
      \tDisplay defaults to block.\n\tOptions is a table. To display inline text with HTML highlighting:\n\t\t{ inline = true, lang = \"html\" }\n]]\nfunction export.highlight(content, options)\n\tif type(content) == \"table\" then\n\t\toptions = content\n\t\
      \toptions = {\n\t\t\tlang = options.lang or \"lua\",\n\t\t\tinline = options.inline and true\n\t\t}\n\t\treturn function(content)\n\t\t\treturn mw.getCurrentFrame():extensionTag{\n\t\t\t\tname = \"syntaxhighlight\",\n\t\t\t\tcontent = content,\n\t\t\t\t\
      args = options\n\t\t\t}\n\t\tend\n\telse\n\t\treturn mw.getCurrentFrame():extensionTag{\n\t\t\tname = \"syntaxhighlight\",\n\t\t\tcontent = content,\n\t\t\targs = {\n\t\t\t\tlang = options and options.lang or \"lua\",\n\t\t\t\tinline = options and options.inline\
      \ and true or nil\n\t\t\t}\n\t\t}\n\tend\nend\n\nfunction export.track_unrecognized_args(args, template_name)\n\tlocal function track(code)\n\t\texport.track(template_name .. \"/\" .. code)\n\tend\n\t\n    track(\"unrecognized arg\")\n\t\n\tlocal arg_list\
      \ = {}\n\tfor arg, value in pairs(args) do\n\t\ttrack(\"unrecognized arg/\" .. arg)\n\t\ttable.insert(arg_list, (\"|%s=%s\"):format(arg, value))\n\tend\n\t\n\tmw.log(\n\t\t(\"Unrecognized parameter%s in {{%s}}: %s.\"):format(\n\t\t\targ_list[2] and \"\
      s\" or \"\",\n\t\t\ttemplate_name,\n\t\t\ttable.concat(arg_list, \", \")))\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:48.141Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fescape_wiki&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=31355 t=1555362468065690
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '289'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:48 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1228.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 932545237, 492358471, 692831351
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/escape_wiki" to="Template:tracking/ugly hacks/escape wiki" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/escape wiki" missing="" /></pages></query></api>
- recorded: 2015-09-17T18:47:47.530Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fescape_wiki%2Ffrom+%3D&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:47 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1052 miss (0), cp3009 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 637394585, 909060167, 2666555603
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/escape_wiki/from =" to="Template:tracking/ugly hacks/escape wiki/from =" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/escape wiki/from =" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:07:41.435Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3At&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48628 t=1555362461339996
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:41 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 678007038, 819420343, 688350001
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="193228" pageid="193228" ns="10" title="Template:t"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T20:02:53Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:t]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:translations|show}}&lt;!--

      --&gt;{{#ifeq:{{{1|}}}|en|[[Category:English translations]]}}&lt;!--
      --&gt;{{#ifeq:{{{1|}}}|mul|[[Category:Translingual translations]]}}&lt;!--
      --&gt;{{#ifeq:{{{1|}}}|und|[[Category:Undefined translations]]}}&lt;!--

      --&gt;{{redlink category|{{{1|}}}|{{{2|}}}|template=t}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:40.706Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Atranslations&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47471 t=1555362460596310
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:40 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 409429970, 652184680, 696238399
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4073391\" pageid=\"4073391\" ns=\"828\" title=\"Module:translations\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-10T03:58:50Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"extract implementation into separate function callable by Lua\" xml:space=\"preserve\">local m_links = require(\"Module:links\")\n\nlocal export = {}\n\nlocal interwiki_langs = {\n\t[\"\
      ckb\"] = \"ku\",\n\t[\"kmr\"] = \"ku\",\n\t[\"lki\"] = \"ku\",\n\t[\"nds-de\"] = \"nds\",\n\t[\"nds-nl\"] = \"nds\",\n\t[\"pdt\"] = \"nds\",\n\t[\"sdh\"] = \"ku\",\n}\n\nlocal ignore_caps = {\n\t[\"ko\"] = true,\n}\n\nlocal tracked = {\n\t[\"se\"] = true,\n\
      }\n\n-- The main entry point.\n-- This is the only function that can be invoked from a template.\nfunction export.show(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {},\n\t\t[3] = {list = true},\n\t\t[\"alt\"] =\
      \ {},\n\t\t[\"id\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"lit\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal terminfo = {\n\t\tlang = require(\"\
      Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1),\n\t\tsc = (args[\"sc\"] and (require(\"Module:scripts\").getByCode(args[\"sc\"]) or error(\"The script code \\\"\" .. args[\"sc\"] .. \"\\\" is not valid.\")) or nil),\n\
      \t\tterm = args[2] or (mw.title.getCurrentTitle().nsText == \"Template\" and \"term\") or nil,\n\t\talt = args[\"alt\"],\n\t\tid = args[\"id\"],\n\t\tgenders = args[3],\n\t\ttr = args[\"tr\"],\n\t\tts = args[\"ts\"],\n\t\tlit = args[\"lit\"],\n\t\tinterwiki\
      \ = frame.args[\"interwiki\"],\n\t\t}\n\t\n\treturn export.show_terminfo(terminfo)\nend\n\nfunction export.show_terminfo(terminfo)\t\n\t-- Translations must be for mainspace languages\n\tif terminfo.lang:getType() == \"reconstructed\" or terminfo.lang:getType()\
      \ == \"appendix-constructed\" then\n\t\terror(\"Translations must be for attested and approved main-namespace languages.\")\n\tend\n\t\n\t-- Don't show the interwiki link if there is nothing to link to.\n\tif terminfo.term then\n\t\t-- Track translations\
      \ for particular languages\n\t\tif tracked[terminfo.lang:getCode()] then\n\t\t\trequire(\"Module:debug\").track(\"translations/\" .. terminfo.lang:getCode())\n\t\tend\n\t\t\n\t\tlocal wmlangs = {}\n\t\t\n\t\tif interwiki_langs[terminfo.lang:getCode()]\
      \ then\n\t\t\twmlangs = {require(\"Module:wikimedia languages\").getByCode(interwiki_langs[terminfo.lang:getCode()])}\n\t\telse\n\t\t\twmlangs = terminfo.lang:getWikimediaLanguages()\n\t\tend\n\t\t\n\t\t-- Don't show the interwiki link if the language\
      \ is not recognised by Wikimedia\n\t\t-- or if the term contains links (for SOP translations)\n\t\tif terminfo.term:find(\"[[\", nil, true) or #wmlangs == 0 then\n\t\t\tterminfo.interwiki = false\n\t\tend\n\t\t\n\t\tif wmlangs[1] and ignore_caps[wmlangs[1]:getCode()]\
      \ then\n\t\t\tterminfo.term2 = mw.ustring.gsub(terminfo.term, \"^%^\", \"\")\n\t\tend\n\t\t\n\t\tif terminfo.interwiki then\n\t\t\tterminfo.interwiki =\n\t\t\t\t\"&lt;span class=\\\"\" .. terminfo.interwiki .. \"\\\"&gt;&amp;nbsp;[[:\" ..\n\t\t\t\twmlangs[1]:getCode()\
      \ .. \":\" ..\n\t\t\t\tterminfo.lang:makeEntryName(terminfo.term2 or terminfo.term) ..\n\t\t\t\t\"|(\" .. wmlangs[1]:getCode() .. \")]]&lt;/span&gt;\"\n\t\tend\n\telse\n\t\t-- Track what entries currently don't provide a term\n\t\trequire(\"Module:debug\"\
      ).track(\"translations/no term\")\n\t\trequire(\"Module:debug\").track(\"translations/no term/\" .. terminfo.lang:getCode())\n\tend\n\t\n\tif terminfo.lang and terminfo.lang:getCode() == 'yue' and terminfo.tr then\n\t\tterminfo.tr = mw.ustring.gsub(terminfo.tr,\
      \ '([1-9-])','&lt;sup&gt;%1&lt;/sup&gt;')\n\tend\n\t\n\treturn m_links.full_link(terminfo, \"translation\", true)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:40.872Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Awikimedia+languages&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=40150 t=1555362460784755
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:40 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1339.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 910490994, 637324361, 693291816
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4506944\" pageid=\"4506944\" ns=\"828\" title=\"Module:wikimedia languages\"><revisions><rev user=\"Rua\" timestamp=\"2015-01-26T16:00:55Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal WikimediaLanguage = {}\n\nfunction WikimediaLanguage:getCode()\n\treturn self._code\nend\n\nfunction WikimediaLanguage:getCanonicalName()\n\
      \treturn self._rawData.canonicalName\nend\n\n--function WikimediaLanguage:getAllNames()\n--\treturn self._rawData.names\n--end\n\nfunction WikimediaLanguage:getType()\n\treturn \"Wikimedia\"\nend\n\nfunction WikimediaLanguage:getWiktionaryLanguage()\n\t\
      if not self._wiktionaryLanguageObject then\n\t\tself._wiktionaryLanguageObject = require(\"Module:languages\").getByCode(self._rawData.wiktionary_code)\n\tend\n\t\n\treturn self._wiktionaryLanguageObject\nend\n\n-- Do NOT use this method!\n-- All uses\
      \ should be pre-approved on the talk page!\nfunction WikimediaLanguage:getRawData()\n\treturn self._rawData\nend\n\nWikimediaLanguage.__index = WikimediaLanguage\n\n\nfunction export.getByCode(code)\n\t-- Only accept codes the software recognises\n\tif\
      \ not mw.language.isKnownLanguageTag(code) then\n\t\treturn nil\n\tend\n\t\n\tlocal rawData = mw.loadData(\"Module:wikimedia languages/data\")[code]\n\t\n\t-- If there is no specific Wikimedia code, then \"borrow\" the information\n\t-- from the general\
      \ Wiktionary language code\n\tif not rawData then\n\t\tlocal lang = require(\"Module:languages\").getByCode(code)\n\t\t\n\t\tif not lang then\n\t\t\treturn nil\n\t\tend\n\t\t\n\t\trawData = {canonicalName = lang:getCanonicalName(), wiktionary_code = code}\n\
      \telseif not rawData.canonicalName then\n\t\trawData = {canonicalName = require(\"Module:languages\").getByCode(rawData.wiktionary_code):getCanonicalName(), wiktionary_code = rawData.wiktionary_code}\n\tend\n\t\n\treturn setmetatable({ _rawData = rawData,\
      \ _code = code }, WikimediaLanguage)\nend\n\nfunction export.getByCodeWithFallback(code)\n\tlocal object = export.getByCode(code)\n\t\n\tif object then\n\t\treturn object\n\tend\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(code)\n\t\n\t\
      if not lang then\n\t\treturn nil\n\tend\n\t\n\treturn lang:getWikimediaLanguages()[1]\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:41.042Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Awikimedia+languages%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=43785 t=1555362460950103
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:41 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1341.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 932479158, 563491390, 694731921
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4506945\" pageid=\"4506945\" ns=\"828\" title=\"Module:wikimedia languages/data\"><revisions><rev user=\"Daniel Carrero\" timestamp=\"\
      2015-11-24T03:34:30Z\" contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Reverted edits by [[Special:Contributions/Daniel Carrero|Daniel Carrero]]. If you think this rollback is in error, please leave a message on my talk page.\" xml:space=\"\
      preserve\">local m = {}\n\nm[\"als\"] = {\n\twiktionary_code = \"gsw\",\n}\n\nm[\"bat-smg\"] = {\n\twiktionary_code = \"sgs\",\n}\n\nm[\"bs\"] = {\n\tcanonicalName = \"Bosnian\",\n\twiktionary_code = \"sh\",\n}\n\nm[\"bxr\"] = {\n\twiktionary_code = \"\
      bua\",\n}\n\nm[\"diq\"] = {\n\twiktionary_code = \"zza\",\n}\n\nm[\"eml\"] = {\n\tcanonicalName = \"Emiliano-Romagnolo\",\n\twiktionary_code = \"egl\",\n}\n\nm[\"fiu-vro\"] = {\n\twiktionary_code = \"vro\",\n}\n\nm[\"hr\"] = {\n\tcanonicalName = \"Croatian\"\
      ,\n\twiktionary_code = \"sh\",\n}\n\nm[\"ksh\"] = {\n\twiktionary_code = \"gmw-cfr\",\n}\n\nm[\"mhr\"] = {\n\twiktionary_code = \"chm\",\n}\n\nm[\"nrm\"] = {\n\twiktionary_code = \"nrf\",\n}\n\nm[\"roa-rup\"] = {\n\twiktionary_code = \"rup\",\n}\n\nm[\"\
      roa-tara\"] = {\n\twiktionary_code = \"roa-tar\",\n}\n\nm[\"simple\"] = {\n\tcanonicalName = \"Simple English\",\n\twiktionary_code = \"en\",\n}\n\nm[\"sr\"] = {\n\tcanonicalName = \"Serbian\",\n\twiktionary_code = \"sh\",\n}\n\nm[\"zh-classical\"] = {\n\
      \twiktionary_code = \"ltc\",\n}\n\nm[\"zh-min-nan\"] = {\n\twiktionary_code = \"nan\",\n}\n\nm[\"zh-yue\"] = {\n\twiktionary_code = \"yue\",\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:41.260Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Agender+and+number&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=65909 t=1555362461143791
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:41 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1278.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 603957195, 823054654, 703792141
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3906346\" pageid=\"3906346\" ns=\"828\" title=\"Module:gender and number\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-06T20:41:16Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Separate the genders with &quot;or&quot;, which is clearer than a comma\" xml:space=\"preserve\">--[=[\n\tThis module creates standardised displays for gender and number.\n\tIt converts\
      \ a gender specification into Wiki/HTML format.\n\t\n\tA gender specification is a list of one of the elements listed below,\n\tseparated by hyphens. Examples are: \"c\", \"n\", \"f-p\", \"m-an-p\"\n]=]--\n\nlocal export = {}\n\nlocal codes = {}\n\n--\
      \ A list of all possible \"parts\" that a specification can be made out of.\n\ncodes[\"?\"] = {type = \"other\", display = '&lt;abbr title=\"gender incomplete\"&gt;?&lt;/abbr&gt;'}\n\n-- Genders\ncodes[\"m\"] = {type = \"gender\", display = '&lt;abbr title=\"\
      masculine gender\"&gt;m&lt;/abbr&gt;'}\ncodes[\"f\"] = {type = \"gender\", display = '&lt;abbr title=\"feminine gender\"&gt;f&lt;/abbr&gt;'}\ncodes[\"n\"] = {type = \"gender\", display = '&lt;abbr title=\"neuter gender\"&gt;n&lt;/abbr&gt;'}\ncodes[\"c\"\
      ] = {type = \"gender\", display = '&lt;abbr title=\"common gender\"&gt;c&lt;/abbr&gt;'}\n\n-- Animacy\ncodes[\"an\"] = {type = \"animacy\", display = '&lt;abbr title=\"animate\"&gt;anim&lt;/abbr&gt;'}\ncodes[\"in\"] = {type = \"animacy\", display = '&lt;abbr\
      \ title=\"inanimate\"&gt;inan&lt;/abbr&gt;'}\n\n-- Personal\ncodes[\"pr\"] = {type = \"personal\", display = '&lt;abbr title=\"personal\"&gt;pers&lt;/abbr&gt;'}\ncodes[\"np\"] = {type = \"personal\", display = '&lt;abbr title=\"non-personal\"&gt;npers&lt;/abbr&gt;'}\n\
      \n-- Numbers\ncodes[\"s\"] = {type = \"number\", display = '&lt;abbr title=\"singular number\"&gt;sg&lt;/abbr&gt;'}\ncodes[\"d\"] = {type = \"number\", display = '&lt;abbr title=\"dual number\"&gt;du&lt;/abbr&gt;'}\ncodes[\"p\"] = {type = \"number\", display\
      \ = '&lt;abbr title=\"plural number\"&gt;pl&lt;/abbr&gt;'}\n\n-- Verb qualifiers\ncodes[\"impf\"] = {type = \"perfectivity\", display = '&lt;abbr title=\"imperfective aspect\"&gt;impf&lt;/abbr&gt;'}\ncodes[\"pf\"] = {type = \"perfectivity\", display =\
      \ '&lt;abbr title=\"perfective aspect\"&gt;pf&lt;/abbr&gt;'}\n\n-- Version of format_list that can be invoked from a template.\nfunction export.show_list(frame)\n\tlocal args = frame.args\n\tlocal lang = args[\"lang\"]; if lang == \"\" then lang = nil\
      \ end\n\tlocal list = {}\n\tlocal i = 1\n\t\n\twhile args[i] and args[i] ~= \"\" do\n\t\ttable.insert(list, args[i])\n\t\ti = i + 1\n\tend\n\t\n\treturn export.format_list(list, lang)\nend\n\n-- Format one or more gender specifications, in the form of\
      \ a table of specifications.\nfunction export.format_list(list, lang)\n\tlocal is_nounclass = nil\n\t\n\t-- Iterate over each specification and format it\n\tfor key, spec in ipairs(list) do\n\t\tlocal nc\n\t\tlist[key], nc = export.format_specification(spec,\
      \ lang)\n\t\t\n\t\t-- Ensure that the specifications are either all noun classes, or none are.\n\t\tif is_nounclass == nil then\n\t\t\tis_nounclass = nc\n\t\telseif is_nounclass ~= nc then\n\t\t\terror(\"Noun classes and genders cannot be mixed. Please\
      \ use either one or the other.\")\n\t\tend\n\tend\n\t\n\tif is_nounclass then\n\t\t-- Add the processed codes together with slashes\n\t\treturn \"&lt;span class=\\\"gender\\\"&gt;class \" .. table.concat(list, \"/\") .. \"&lt;/span&gt;\"\n\telse\n\t\t\
      -- Add the processed codes together with commas\n\t\treturn \"&lt;span class=\\\"gender\\\"&gt;\" .. table.concat(list, \" or \") .. \"&lt;/span&gt;\"\n\tend\nend\n\n-- Format the sub-parts of a single gender specification.\nfunction export.format_specification(spec,\
      \ lang)\n\tlocal categories = \"\"\n\tlocal ret = \"\"\n\tlocal is_nounclass = false\n\t\n\t-- If the specification starts with cX, then it is a noun class specification.\n\tif spec:find(\"^[1-9]\") or spec:find(\"^c[^-]\") then\n\t\tis_nounclass = true\n\
      \t\tcode = spec:gsub(\"^c\", \"\")\n\t\t\n\t\tif code == \"?\" then\n\t\t\tret = \"&lt;abbr class=\\\"noun-class\\\" title=\\\"noun class missing\\\"&gt;?&lt;/abbr&gt;\"\n\t\telse\n\t\t\tret = \"&lt;abbr class=\\\"noun-class\\\" title=\\\"noun class \"\
      \ .. code .. \"\\\"&gt;\" .. code .. \"&lt;/abbr&gt;\"\n\t\tend\n\telse\n\t\tlocal types = {}\n\t\t\n\t\t-- Split the parts and iterate over each part, converting it into its display form\n\t\tlocal parts = mw.text.split(spec, \"-\")\n\t\t\n\t\tfor key,\
      \ code in ipairs(parts) do\n\t\t\t-- Is this code valid?\n\t\t\tif not codes[code] then\n\t\t\t\terror(\"The gender specification \\\"\" .. spec .. \"\\\" is not valid.\")\n\t\t\tend\n\t\t\t\n\t\t\tif codes[code].type ~= \"other\" and types[codes[code].type]\
      \ then\n\t\t\t\t--require(\"Module:debug\").track(\"gender and number/multiple\")\n\t\t\t\t--require(\"Module:debug\").track(\"gender and number/multiple/\" .. spec)\n\t\t\t\terror(\"The gender specification \\\"\" .. spec .. \"\\\" contains multiple tags\
      \ of type \\\"\" .. codes[code].type .. \"\\\".\")\n\t\t\tend\n\t\t\t\t\n\t\t\tparts[key] = codes[code].display\n\t\t\ttypes[codes[code].type] = true\n\t\tend\n\t\t\n\t\t-- Add the processed codes together with non-breaking spaces\n\t\tret = table.concat(parts,\
      \ \"&amp;nbsp;\")\n\tend\n\t\n\t-- Do some additional checks if a language was given\n\tif lang then\n\t\t-- Is this an incomplete gender?\n\t\tif spec:find(\"?\") then\n\t\t\tlocal m_utilities = require(\"Module:utilities\")\n\t\t\tcategories = m_utilities.format_categories({lang:getCanonicalName()\
      \ .. \" terms with incomplete gender\"}, nil)\n\t\tend\n\t\t\n\t\t-- Check if the specification is valid\n\t\t--elseif langinfo.genders then\n\t\t--\tlocal valid_genders = {}\n\t\t--\tfor _, g in ipairs(langinfo.genders) do valid_genders[g] = true end\n\
      \t\t--\t\n\t\t--\tif not valid_genders[spec] then\n\t\t--\t\tlocal valid_string = {}\n\t\t--\t\tfor i, g in ipairs(langinfo.genders) do valid_string[i] = g end\n\t\t--\t\terror(\"The gender specification \\\"\" .. spec .. \"\\\" is not valid for \" ..\
      \ langinfo.names[1] .. \". Valid are: \" .. table.concat(valid_string, \", \"))\n\t\t--\tend\n\t\t--end\n\tend\n\t\n\treturn ret .. categories, is_nounclass\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:40.509Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3At%2B&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46528 t=1555362460416684
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:40 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 512790206, 499949517, 692112294
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="548891" pageid="548891" ns="10" title="Template:t+"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T20:02:53Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:t+]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:translations|show|interwiki=tpos}}&lt;!--

      --&gt;{{#ifeq:{{{1|}}}|en|[[Category:English translations]]}}&lt;!--
      --&gt;{{#ifeq:{{{1|}}}|mul|[[Category:Translingual translations]]}}&lt;!--
      --&gt;{{#ifeq:{{{1|}}}|und|[[Category:Undefined translations]]}}&lt;!--

      --&gt;{{redlink category|{{{1|}}}|{{{2|}}}|template=t+}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:42.598Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ael-translit&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54729 t=1555362462495220
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:42 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 206973048, 733228702, 686713954
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3927303\" pageid=\"3927303\" ns=\"828\" title=\"Module:el-translit\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-01-23T19:56:48Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"fix deletion of character\" xml:space=\"preserve\">local export = {}\n\nlocal tt = {\n\t[\"α\"] = \"a\",  [\"ά\"] = \"á\",  [\"β\"] = \"v\",  [\"γ\"] = \"g\",  [\"δ\"] = \"d\",\n\t[\"ε\
      \"] = \"e\",  [\"έ\"] = \"é\",  [\"ζ\"] = \"z\",  [\"η\"] = \"i\",  [\"ή\"] = \"í\",\n\t[\"θ\"] = \"th\", [\"ι\"] = \"i\",  [\"ί\"] = \"í\",  [\"ϊ\"] = \"ï\",  [\"ΐ\"] = \"ḯ\",\n\t[\"κ\"] = \"k\",  [\"λ\"] = \"l\",  [\"μ\"] = \"m\",  [\"ν\"] = \"n\", \
      \ [\"ξ\"] = \"x\",\n\t[\"ο\"] = \"o\",  [\"ό\"] = \"ó\",  [\"π\"] = \"p\",  [\"ρ\"] = \"r\",  [\"σ\"] = \"s\",\n\t[\"ς\"] = \"s\",  [\"τ\"] = \"t\",  [\"υ\"] = \"y\",  [\"ύ\"] = \"ý\",  [\"ϋ\"] = \"ÿ\",\n\t[\"ΰ\"] = \"ÿ́\",  [\"φ\"] = \"f\",  [\"χ\"] =\
      \ \"ch\", [\"ψ\"] = \"ps\", [\"ω\"] = \"o\",\n\t[\"ώ\"] = \"ó\",\n\t[\"Α\"] = \"A\",  [\"Ά\"] = \"Á\",  [\"Β\"] = \"V\",  [\"Γ\"] = \"G\",  [\"Δ\"] = \"D\",\n\t[\"Ε\"] = \"E\",  [\"Έ\"] = \"É\",  [\"Ζ\"] = \"Z\",  [\"Η\"] = \"I\",  [\"Ή\"] = \"Í\",\n\t\
      [\"Θ\"] = \"Th\", [\"Ι\"] = \"I\",  [\"Ί\"] = \"Í\",  [\"Κ\"] = \"K\",  [\"Λ\"] = \"L\",\n\t[\"Μ\"] = \"M\",  [\"Ν\"] = \"N\",  [\"Ξ\"] = \"X\",  [\"Ο\"] = \"O\",  [\"Ό\"] = \"Ó\",\n\t[\"Π\"] = \"P\",  [\"Ρ\"] = \"R\",  [\"Σ\"] = \"S\",  [\"Τ\"] = \"T\"\
      ,  [\"Υ\"] = \"Y\",\n\t[\"Ύ\"] = \"Ý\",  [\"Φ\"] = \"F\",  [\"Χ\"] = \"Ch\", [\"Ψ\"] = \"Ps\", [\"Ω\"] = \"O\",\n\t[\"Ώ\"] = \"Ó\",\n\t[\";\"] = \"?\",  [\"·\"] = \";\"\n}\n\n-- transliterates any words or phrases\nfunction export.tr(text, lang, sc)\n\t\
      local gsub = mw.ustring.gsub\n\t\n\tlocal acute = mw.ustring.char(0x301)\n\tlocal diaeresis = mw.ustring.char(0x308)\n\t\n\ttext = gsub(text, \"([αεηΑΕΗ])([υύ])(.?)\",\n\t\t\t\tfunction (vowel, upsilon, following)\n\t\t\t\t\treturn tt[vowel]\n\t\t\t\t\t\
      \t.. (upsilon == \"ύ\" and acute or \"\")\n\t\t\t\t\t\t.. ((\"θκξπσςτφχψ\"):find(following) and \"f\" or \"v\")\n\t\t\t\t\t\t.. following\n\t\t\t\tend)\n\t\n\ttext = gsub(text, \"([αεοωΑΕΟΩ])([ηή])\",\n\t\t\t\tfunction (vowel, ita)\n\t\t\t\t\tif ita ==\
      \ \"ή\" then\n\t\t\t\t\t\treturn tt[vowel] .. \"i\" .. diaeresis .. acute\n\t\t\t\t\telse\n\t\t\t\t\t\treturn tt[vowel] .. \"i\" .. diaeresis\n\t\t\t\t\tend\n\t\t\t\tend)\n\t\n\ttext = gsub(text, \"[οΟ][υύ]\",\n\t\t\t\t{[\"ου\"] = \"ou\", [\"ού\"] = \"\
      oú\",\n\t\t\t\t [\"Ου\"] = \"Ou\", [\"Ού\"] = \"Oú\"})\n\n\ttext = gsub(text, \"(.?)([μΜ])π\",\n\t\t\t\tfunction (before, mi)\n\t\t\t\t\tif before == \"\" or before == \" \" or before == \"-\" then\n\t\t\t\t\t\tif mi == \"Μ\" then\n\t\t\t\t\t\t\treturn\
      \ before .. \"B\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn before .. \"b\"\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend)\n\t\n\ttext = gsub(text, \"(.?)([νΝ])τ\",\n\t\t\t\tfunction (before, ni)\n\t\t\t\t\tif before == \"\" or before == \" \" or before ==\
      \ \"-\" then\n\t\t\t\t\t\tif ni == \"Ν\" then\n\t\t\t\t\t\t\treturn before .. \"D\"\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn before .. \"d\"\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend)\n\n\ttext = gsub(text, \"γ([γξχ])\", \"n%1\")\n\n\ttext = gsub(text,\
      \ \".\", tt)\n\n\treturn text\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:44.318Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atrans-mid&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=59641 t=1555362464212514
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:44 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 746769162, 244859708, 698979487
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="454352" pageid="454352" ns="10" title="Template:trans-mid"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T20:02:56Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:trans-mid]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefini..." xml:space="preserve">&lt;noinclude&gt;
      [[Category:Column templates|{{PAGENAME}}]]
      &lt;/noinclude&gt;| style="width:1%; " |
      | class="translations-cell" style="background-color:#ffffe0; vertical-align:top; text-align:left; width:48%; " |
      &lt;noinclude&gt;[[Category:Translation templates|trans mid]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:46.175Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata3%2Fn&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=65004 t=1555362466020995
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:46 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1339.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 588129031, 652118821, 695025733
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4206205\" pageid=\"4206205\" ns=\"828\" title=\"Module:languages/data3/n\"><revisions><rev user=\"Metaknowledge\" timestamp=\"2019-04-14T16:46:35Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local u = mw.ustring.char\n\n-- UTF-8 encoded strings for some commonly-used diacritics\nlocal GRAVE     = u(0x0300)\nlocal ACUTE     = u(0x0301)\nlocal CIRC\
      \      = u(0x0302)\nlocal TILDE     = u(0x0303)\nlocal MACRON    = u(0x0304)\nlocal BREVE     = u(0x0306)\nlocal DOTABOVE  = u(0x0307)\nlocal DIAER     = u(0x0308)\nlocal CARON     = u(0x030C)\nlocal DGRAVE    = u(0x030F)\nlocal INVBREVE  = u(0x0311)\n\
      local DOTBELOW  = u(0x0323)\nlocal RINGBELOW = u(0x0325)\nlocal CEDILLA   = u(0x0327)\n\nlocal Deva = {\"Deva\"}\nlocal Latn = {\"Latn\"}\n\nlocal m = {}\n\nm[\"naa\"] = {\n\t\"Namla\",\n\t\"Q3508760\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"nab\"] =\
      \ {\n\t\"Nambikwara\",\n\t\"Q2068190\",\n\t\"sai-nmk\",\n\totherNames = {\"Nambiquara\", \"Nambicuara\", \"Nambikuara\", \"Southern Nambikuára\"},\n\tscripts = Latn,\n}\n\nm[\"nac\"] = {\n\t\"Narak\",\n\t\"Q6965295\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\
      \nm[\"nae\"] = {\n\t\"Naka'ela\",\n\t\"Q6960073\",\n\t\"poz\",\n\tscripts = Latn,\n}\n\nm[\"naf\"] = {\n\t\"Nabak\",\n\t\"Q11732491\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"nag\"] = {\n\t\"Naga Pidgin\",\n\t\"Q3503454\",\n\t\"crp\",\n\totherNames =\
      \ {\"Nagamese\"},\n\tscripts = Latn,\n}\n\nm[\"nah\"] = {\n\t\"Nahuatl\",\n\t\"Q13300\",\n\t\"azc-nah\",\n\tscripts = Latn,\n}\n\nm[\"naj\"] = {\n\t\"Nalu\",\n\t\"Q36026\",\n\t\"alv-sng\",\n\tscripts = Latn,\n}\n\nm[\"nak\"] = {\n\t\"Nakanai\",\n\t\"Q6528669\"\
      ,\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"nal\"] = {\n\t\"Nalik\",\n\t\"Q3335387\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"nam\"] = {\n\t\"Ngan'gityemerri\",\n\t\"Q3298041\",\n\totherNames = {\"Ngan'gi\", \"Nangikurrunggurr\"},\n\tscripts =\
      \ Latn,\n}\n\nm[\"nan\"] = {\n\t\"Min Nan\",\n\t\"Q36495\",\n\t\"zhx-min-hai\",\n\totherNames = {\"Hokkien\", \"Taiwanese\", \"Amoy\", \"Xiamenese\"},\n\tscripts = {\"Hani\", \"Latn\"},\n\twikimedia_codes = {\"zh-min-nan\"},\n}\n\nm[\"nao\"] = {\n\t\"\
      Naaba\",\n\t\"Q11883865\",\n\t\"tbq\",\n\totherNames = {\"Naapa\", \"Nawa Sherpa\"},\n\tancestors = {\"xct\"},\n}\n\nm[\"nap\"] = {\n\t\"Neapolitan\",\n\t\"Q33845\",\n\t\"roa-itd\",\n\tscripts = Latn,\n}\n\nm[\"naq\"] = {\n\t\"Nama\",\n\t\"Q13301\",\n\t\
      \"khi-khk\",\n\totherNames = {\"Khoekhoe\", \"Hottentot\"},\n\tscripts = Latn,\n}\n\nm[\"nar\"] = {\n\t\"Iguta\",\n\t\"Q5621686\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"nas\"] = {\n\t\"Nasioi\",\n\t\"Q56772\",\n\t\"paa\",\n\totherNames = {\"Naasioi\"\
      },\n\tscripts = Latn,\n}\n\nm[\"nat\"] = {\n\t\"Hungworo\",\n\t\"Q3914395\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"naw\"] = {\n\t\"Nawuri\",\n\t\"Q35906\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"nax\"] = {\n\t\"Nakwi\",\n\t\"Q3504178\",\n\t\
      \"qfa-mal\",\n\tscripts = Latn,\n}\n\nm[\"nay\"] = {\n\t\"Ngarrindjeri\",\n\t\"Q7022091\",\n\t\"aus-pam\",\n\totherNames = {\"Yaraldi\"},\n\tscripts = Latn,\n}\n\nm[\"naz\"] = {\n\t\"Coatepec Nahuatl\",\n\t\"Q5138605\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\
      \tancestors = {\"nah\"},\n}\n\nm[\"nba\"] = {\n\t\"Nyemba\",\n\t\"Q3346655\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"nbb\"] = {\n\t\"Ndoe\",\n\t\"Q36134\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"nbc\"] = {\n\t\"Chang\",\n\t\"Q5071694\",\n\t\
      \"tbq\",\n\tscripts = Latn,\n}\n\nm[\"nbd\"] = {\n\t\"Ngbinda\",\n\t\"Q11132859\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nbe\"] = {\n\t\"Konyak Naga\",\n\t\"Q6430448\",\n\t\"sit\",\n\tscripts = Latn,\n}\n\nm[\"nbg\"] = {\n\t\"Nagarchal\",\n\t\"Q13299\"\
      ,\n\t\"dra\",\n\tancestors = {\"gon\"},\n}\n\nm[\"nbh\"] = {\n\t\"Ngamo\",\n\t\"Q3438705\",\n\t\"cdc-wst\",\n\tscripts = Latn,\n}\n\nm[\"nbi\"] = {\n\t\"Mao Naga\",\n\t\"Q12952905\",\n\t\"sit\",\n\tscripts = Latn,\n}\n\nm[\"nbj\"] = {\n\t\"Ngarinman\"\
      ,\n\t\"Q10600380\",\n\tscripts = Latn,\n}\n\nm[\"nbk\"] = {\n\t\"Nake\",\n\t\"Q11732496\",\n\t\"ngf-mad\",\n\tscripts = Latn,\n}\n\nm[\"nbm\"] = {\n\t\"Ngbaka Ma'bo\",\n\t\"Q3915331\",\n\t\"nic-ubg\",\n\tscripts = Latn,\n}\n\nm[\"nbn\"] = {\n\t\"Kuri\"\
      ,\n\t\"Q3200540\",\n\t\"poz\",\n\totherNames = {\"Nabi\"},\n\tscripts = Latn,\n}\n\nm[\"nbo\"] = {\n\t\"Nkukoli\",\n\t\"Q3914482\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"nbp\"] = {\n\t\"Nnam\",\n\t\"Q36138\",\n\t\"nic-bod\",\n\tscripts = Latn,\n\
      }\n\nm[\"nbq\"] = {\n\t\"Nggem\",\n\t\"Q12952956\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"nbr\"] = {\n\t\"Numana\",\n\t\"Q5529310\",\n\t\"nic-bco\",\n\totherNames = {\"Ningye\", \"Numana-Nunku-Gbantu-Numbu\"},\n\tscripts = Latn,\n}\n\nm[\"nbs\"] = {\n\
      \t\"Namibian Sign Language\",\n\t\"Q6961792\",\n\t\"sgn\",\n\tscripts = Latn, -- when documented\n}\n\nm[\"nbt\"] = {\n\t\"Na\",\n\t\"Q12952895\",\n\t\"sit-tan\",\n\totherNames = {\"Bangni\"},\n\tscripts = {\"Deva\", \"Latn\"},\n}\n\nm[\"nbu\"] = {\n\t\
      \"Rongmei Naga\",\n\t\"Q12952912\",\n\t\"sit\",\n\tscripts = Latn,\n}\n\nm[\"nbv\"] = {\n\t\"Ngamambo\",\n\t\"Q11129694\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"nbw\"] = {\n\t\"Southern Ngbandi\",\n\t\"Q17522635\",\n\t\"nic-ubg\",\n\tscripts = Latn,\n\
      }\n\nm[\"nby\"] = {\n\t\"Ningera\",\n\t\"Q11732524\",\n\tscripts = Latn,\n}\n\nm[\"nca\"] = {\n\t\"Iyo\",\n\t\"Q6101336\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"ncb\"] = {\n\t\"Central Nicobarese\",\n\t\"Q3335553\",\n\totherNames = {\"Nancowry\"\
      , \"Nankwari\", \"Camorta\", \"Kamorta\", \"Katchal\", \"Tehnu\"},\n\tscripts = {\"Deva\", \"Latn\"},\n}\n\nm[\"ncc\"] = {\n\t\"Ponam\",\n\t\"Q3396122\",\n\t\"poz-aay\",\n\tscripts = Latn,\n}\n\nm[\"ncd\"] = {\n\t\"Nachering\",\n\t\"Q6957144\",\n\t\"sit\"\
      ,\n\tscripts = Deva,\n}\n\nm[\"nce\"] = {\n\t\"Yale\",\n\t\"Q2992915\",\n\tscripts = Latn,\n}\n\nm[\"ncf\"] = {\n\t\"Notsi\",\n\t\"Q3344784\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"ncg\"] = {\n\t\"Nisga'a\",\n\t\"Q3342138\",\n\tscripts = Latn,\n\
      }\n\nm[\"nch\"] = {\n\t\"Central Huasteca Nahuatl\",\n\t\"Q2194290\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"nci\"] = {\n\t\"Classical Nahuatl\",\n\t\"Q559242\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"\
      },\n\tentry_name = {\n\t\tfrom = {\"Ā\", \"ā\", \"Ē\", \"ē\", \"Ī\", \"ī\", \"Ō\", \"ō\", \"Ū\", \"ū\", \"Ȳ\", \"ȳ\"},\n\t\tto   = {\"A\", \"a\", \"E\", \"e\", \"I\", \"i\", \"O\", \"o\", \"U\", \"u\", \"Y\", \"y\"}\n\t},\n}\n\nm[\"ncj\"] = {\n\t\"Northern\
      \ Puebla Nahuatl\",\n\t\"Q15705671\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"nck\"] = {\n\t\"Nakara\",\n\t\"Q6960662\",\n\t\"aus-arn\",\n\tscripts = Latn,\n}\n\nm[\"ncl\"] = {\n\t\"Michoacán Nahuatl\",\n\t\"Q2896217\",\n\
      \t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"ncm\"] = {\n\t\"Nambo\",\n\t\"Q42173731\",\n\tscripts = Latn,\n}\n\nm[\"ncn\"] = {\n\t\"Nauna\",\n\t\"Q3337158\",\n\t\"poz-aay\",\n\tscripts = Latn,\n}\n\nm[\"nco\"] = {\n\t\"Sibe\"\
      ,\n\t\"Q56806\",\n\tscripts = Latn,\n}\n\nm[\"ncr\"] = {\n\t\"Ncane\",\n\t\"Q11297920\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"ncs\"] = {\n\t\"Nicaraguan Sign Language\",\n\t\"Q33765\",\n\t\"sgn\",\n\tscripts = {\"Sgnw\"},\n}\n\nm[\"nct\"] = {\n\
      \t\"Chothe Naga\",\n\t\"Q5105385\",\n\t\"tbq-kuk\",\n\totherNames = {\"Chothe\"},\n\tscripts = {\"Beng\", \"Latn\"},\n}\n\nm[\"ncu\"] = {\n\t\"Chumburung\",\n\t\"Q35198\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"ncx\"] = {\n\t\"Central Puebla Nahuatl\"\
      ,\n\t\"Q5061727\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"ncz\"] = {\n\t\"Natchez\",\n\t\"Q3111838\",\n\tscripts = Latn,\n}\n\nm[\"nda\"] = {\n\t\"Ndasa\",\n\t\"Q35904\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ndb\"] =\
      \ {\n\t\"Kenswei Nsei\",\n\t\"Q7067553\",\n\t\"alv\",\n\tscripts = Latn,\n}\n\nm[\"ndc\"] = {\n\t\"Ndau\",\n\t\"Q13311\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ndd\"] = {\n\t\"Nde-Nsele-Nta\",\n\t\"Q36131\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\n\
      m[\"ndf\"] = {\n\t\"Nadruvian\",\n\t\"Q6957967\",\n\tscripts = Latn,\n}\n\nm[\"ndg\"] = {\n\t\"Ndengereko\",\n\t\"Q6983726\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ndh\"] = {\n\t\"Ndali\",\n\t\"Q6983678\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ndi\"\
      ] = {\n\t\"Chamba Leko\",\n\t\"Q36381\",\n\t\"alv\",\n\totherNames = {\"Samba Leko\", \"Samba Leeko\"},\n\tscripts = Latn,\n}\n\nm[\"ndj\"] = {\n\t\"Ndamba\",\n\t\"Q6983684\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ndk\"] = {\n\t\"Ndaka\",\n\t\"Q11164947\"\
      ,\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ndl\"] = {\n\t\"Ndolo\",\n\t\"Q6983788\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ndm\"] = {\n\t\"Ndam\",\n\t\"Q56283\",\n\t\"cdc-est\",\n\tscripts = Latn,\n}\n\nm[\"ndn\"] = {\n\t\"Ngundi\",\n\t\"Q35916\",\n\
      \t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ndp\"] = {\n\t\"Ndo\",\n\t\"Q6983774\",\n\t\"csu\",\n\tscripts = Latn,\n}\n\nm[\"ndq\"] = {\n\t\"Ndombe\",\n\t\"Q6983792\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ndr\"] = {\n\t\"Ndoola\",\n\t\"Q35837\",\n\t\"\
      nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"nds\"] = {\n\t\"Low German\",\n\t\"Q25433\",\n\t\"gmw\",\n\totherNames = {\"Low Saxon\", \"Modern Low German\"},\n\tscripts = Latn,\n\tancestors = {\"gml\"},\n}\n\nm[\"ndt\"] = {\n\t\"Ndunga\",\n\t\"Q6983857\",\n\
      \t\"nic-ubg\",\n\tscripts = Latn,\n}\n\nm[\"ndu\"] = {\n\t\"Dugun\",\n\t\"Q11015189\",\n\tscripts = Latn,\n}\n\nm[\"ndv\"] = {\n\t\"Ndut\",\n\t\"Q36028\",\n\t\"alv-sng\",\n\tscripts = Latn,\n}\n\nm[\"ndw\"] = {\n\t\"Ndobo\",\n\t\"Q11008568\",\n\t\"bnt\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"ndx\"] = {\n\t\"Nduga\",\n\t\"Q6983833\",\n\tscripts = Latn,\n}\n\nm[\"ndy\"] = {\n\t\"Lutos\",\n\t\"Q6705910\",\n\t\"csu\",\n\tscripts = Latn,\n}\n\nm[\"ndz\"] = {\n\t\"Ndogo\",\n\t\"Q35983\",\n\t\"nic-ubg\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"nea\"] = {\n\t\"Eastern Ngad'a\",\n\t\"Q12473454\",\n}\n\nm[\"neb\"] = {\n\t\"Toura\",\n\t\"Q7853636\",\n\t\"dmn\",\n\tscripts = Latn,\n}\n\nm[\"nec\"] = {\n\t\"Nedebang\",\n\t\"Q4925378\",\n}\n\nm[\"ned\"] = {\n\t\"Nde-Gbite\",\n\t\
      \"Q11010279\",\n}\n\nm[\"nee\"] = {\n\t\"Kumak\",\n\t\"Q3347266\",\n\t\"poz-cln\",\n\totherNames = {\"Nêlêmwa-Nixumwak\", \"Nêlêmwa\", \"Nixumwak\", \"Nenema\"},\n\tscripts = Latn,\n}\n\nm[\"nef\"] = {\n\t\"Nefamese\",\n\t\"Q6987002\",\n}\n\nm[\"neg\"\
      ] = {\n\t\"Negidal\",\n\t\"Q33676\",\n\t\"tuw\",\n\tscripts = {\"Cyrl\"},\n}\n\nm[\"neh\"] = {\n\t\"Nyenkha\",\n\t\"Q3695185\",\n\t\"sit\",\n\totherNames = {\"Nyen\", \"Henka\", \"Mangsdekha\", \"Phobjip\", \"Mangdep\", \"Mangde\", \"Hen Kha\", \"Henkha\"\
      , \"Mandebi-kha\", \"Nehan\", \"Phobjikha\", \"Chutobikha\"},\n\tscripts = {\"Tibt\", \"Latn\"},\n}\n\nm[\"nej\"] = {\n\t\"Neko\",\n\t\"Q6989840\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"nek\"] = {\n\t\"Neku\",\n\t\"Q14916900\",\n\t\"poz-cln\",\n\
      }\n\nm[\"nem\"] = {\n\t\"Nemi\",\n\t\"Q3338008\",\n\t\"poz-cln\",\n\tscripts = Latn,\n}\n\nm[\"nen\"] = {\n\t\"Nengone\",\n\t\"Q3338052\",\n\t\"poz-occ\",\n\tscripts = Latn,\n}\n\nm[\"neo\"] = {\n\t\"Ná-Meo\",\n\t\"Q15977293\",\n\t\"hmn\",\n}\n\nm[\"neq\"\
      ] = {\n\t\"North Central Mixe\",\n\t\"Q25559729\",\n\tscripts = Latn,\n}\n\nm[\"ner\"] = {\n\t\"Yahadian\",\n\t\"Q8046778\",\n\tscripts = Latn,\n}\n\nm[\"nes\"] = {\n\t\"Bhoti Kinnauri\",\n\t\"Q21179921\",\n}\n\nm[\"net\"] = {\n\t\"Nete\",\n\t\"Q6998869\"\
      ,\n}\n\nm[\"neu\"] = {\n\t\"Neo\",\n\t\"Q606917\",\n\t\"art\",\n\ttype = \"appendix-constructed\",\n\tscripts = Latn,\n}\n\nm[\"nev\"] = {\n\t\"Nyaheun\",\n\t\"Q7070801\",\n\t\"mkh-ban\",\n}\n\nm[\"new\"] = {\n\t\"Newari\",\n\t\"Q33979\",\n\t\"sit\",\n\
      \tscripts = {\"Deva\", \"Newa\"},\n\tancestors = {\"nwx\"},\n\ttranslit_module = \"new-translit\",\n}\n\nm[\"nex\"] = {\n\t\"Neme\",\n\t\"Q12952941\",\n}\n\nm[\"ney\"] = {\n\t\"Neyo\",\n\t\"Q36410\",\n\t\"kro\",\n}\n\nm[\"nez\"] = {\n\t\"Nez Perce\",\n\
      \t\"Q3339226\",\n\t\"nai-shp\",\n\totherNames = {\"Nez Percé\", \"Numipu\"},\n\tscripts = Latn,\n}\n\nm[\"nfa\"] = {\n\t\"Dhao\",\n\t\"Q2053828\",\n\t\"poz\",\n}\n\nm[\"nfd\"] = {\n\t\"Ahwai\",\n\t\"Q3913957\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\n\
      m[\"nfl\"] = {\n\t\"Aiwoo\",\n\t\"Q56742\",\n\t\"poz-oce\",\n\totherNames = {\"Äiwoo\"},\n\tscripts = Latn,\n}\n\nm[\"nfr\"] = {\n\t\"Nafaanra\",\n\t\"Q13297\",\n\t\"alv\",\n\tscripts = Latn,\n}\n\nm[\"nfu\"] = {\n\t\"Mfumte\",\n\t\"Q6826794\",\n\t\"nic-grf\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"nga\"] = {\n\t\"Ngbaka\",\n\t\"Q36022\",\n\t\"alv-sav\",\n\totherNames = {\"Ngbaka Gbaya\", \"Ngbaka Minagende\"},\n\tscripts = Latn,\n}\n\nm[\"ngb\"] = {\n\t\"Northern Ngbandi\",\n\t\"Q17522631\",\n\t\"nic-ubg\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"ngc\"] = {\n\t\"Lingombe\",\n\t\"Q3123524\",\n\t\"bnt\",\n\totherNames = {\"Ngombe (Democratic Republic of the Congo)\", \"Ngombe\"},\n}\n\nm[\"ngd\"] = {\n\t\"Bagandou\",\n\t\"Q35910\",\n\t\"bnt\",\n\totherNames = {\"Ngando (Central\
      \ African Republic)\", \"Ngando\", \"Bangandou\"},\n}\n\nm[\"nge\"] = {\n\t\"Ngemba\",\n\t\"Q6750551\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"ngg\"] = { -- compare 'aiy'\n\t\"Ngbaka Manza\",\n\t\"Q11033316\",\n\t\"alv\",\n\tscripts = Latn,\n}\n\n\
      m[\"ngh\"] = {\n\t\"Nǀuu\",\n\t\"Q2618974\",\n\t\"khi-tuu\",\n\totherNames = {\"Nǁng\"},\n\tscripts = Latn,\n}\n\nm[\"ngi\"] = {\n\t\"Ngizim\",\n\t\"Q3914924\",\n\t\"cdc-wst\",\n\tscripts = Latn,\n}\n\nm[\"ngj\"] = {\n\t\"Ngie\",\n\t\"Q36361\",\n\t\"nic-bod\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"ngk\"] = {\n\t\"Ngalkbun\",\n\t\"Q3913790\",\n\t\"aus-gun\",\n\tscripts = Latn,\n}\n\nm[\"ngl\"] = {\n\t\"Lomwe\",\n\t\"Q35824\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ngm\"] = {\n\t\"Ngatik Men's Creole\",\n\t\"Q36400\"\
      ,\n\t\"crp\",\n\totherNames = {\"Ngatikese\", \"Ngatikese Pidgin\", \"Ngatikese Creole\"},\n}\n\nm[\"ngn\"] = {\n\t\"Ngwo\",\n\t\"Q36051\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"ngo\"] = {\n\t\"Ngoni\",\n\t\"Q7022547\",\n\t\"bnt\",\n\tscripts =\
      \ Latn,\n}\n\nm[\"ngp\"] = {\n\t\"Ngulu\",\n\t\"Q7193332\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ngq\"] = {\n\t\"Ngoreme\",\n\t\"Q7022573\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ngr\"] = {\n\t\"Nagu\",\n\t\"Q3063524\",\n\t\"poz-oce\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"ngs\"] = {\n\t\"Gvoko\",\n\t\"Q3441188\",\n\t\"cdc-cbm\",\n\tscripts = Latn,\n}\n\nm[\"ngt\"] = {\n\t\"Ngeq\",\n\t\"Q25559548\",\n\t\"mkh-kat\",\n\totherNames = {\"Kriang\", \"Ngkriang\"},\n}\n\nm[\"ngu\"] = {\n\t\"Guerrero Nahuatl\"\
      ,\n\t\"Q5614980\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"ngv\"] = {\n\t\"Nagumi\",\n\t\"Q35842\",\n}\n\nm[\"ngw\"] = {\n\t\"Ngwaba\",\n\t\"Q3440480\",\n\t\"cdc-cbm\",\n\tscripts = Latn,\n}\n\nm[\"ngx\"] = {\n\t\"Nggwahyi\"\
      ,\n\t\"Q56265\",\n\t\"cdc-cbm\",\n\tscripts = Latn,\n}\n\nm[\"ngy\"] = {\n\t\"Tibea\",\n\t\"Q36598\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ngz\"] = {\n\t\"Ngungwel\",\n\t\"Q35920\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nha\"] = {\n\t\"Nhanda\"\
      ,\n\t\"Q3339380\",\n\t\"aus-psw\",\n\tscripts = Latn,\n}\n\nm[\"nhb\"] = {\n\t\"Beng\",\n\t\"Q3913311\",\n\t\"dmn\",\n\tscripts = Latn,\n}\n\nm[\"nhc\"] = {\n\t\"Tabasco Nahuatl\",\n\t\"Q6047326\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"\
      nah\"},\n}\n\nm[\"nhd\"] = {\n\t\"Chiripá\",\n\t\"Q2873230\",\n\t\"tup-gua\",\n\totherNames = {\"Ava Guarani\", \"Chiripá Guarani\", \"Nhandéva\"},\n\tancestors = {\"gn\"},\n}\n\nm[\"nhe\"] = {\n\t\"Eastern Huasteca Nahuatl\",\n\t\"Q4358289\",\n\t\"azc-nah\"\
      ,\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"nhf\"] = {\n\t\"Nhuwala\",\n\t\"Q10600396\",\n\t\"aus-nga\",\n\tscripts = Latn,\n}\n\nm[\"nhg\"] = {\n\t\"Tetelcingo Nahuatl\",\n\t\"Q3450252\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors =\
      \ {\"nah\"},\n}\n\nm[\"nhh\"] = {\n\t\"Nahari\",\n\t\"Q6583560\",\n\t\"inc\",\n\tancestors = {\"inc-mgd\"},\n}\n\nm[\"nhi\"] = {\n\t\"Zacatlán-Ahuacatlán-Tepetzintla Nahuatl\",\n\t\"Q12953764\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"\
      },\n}\n\nm[\"nhk\"] = {\n\t\"Cosoleacaque Nahuatl\",\n\t\"Q12953757\",\n\t\"azc-nah\",\n\totherNames = {\"Isthmus-Cosoleacaque Nahuatl\", \"Cosoleacaque Isthmus Nahuatl\"},\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"nhm\"] = {\n\t\"Morelos\
      \ Nahuatl\",\n\t\"Q4800819\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"nhn\"] = {\n\t\"Central Nahuatl\",\n\t\"Q6047309\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"nho\"] = {\n\t\"Takuu\",\n\t\
      \"Q3409818\",\n\t\"poz-pnp\",\n\tscripts = Latn,\n}\n\nm[\"nhp\"] = {\n\t\"Pajapan Nahuatl\",\n\t\"Q12953760\",\n\t\"azc-nah\",\n\totherNames = {\"Isthmus-Pajapan Nahuatl\", \"Pajapan Isthmus Nahuatl\"},\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\
      \nm[\"nhq\"] = {\n\t\"Huaxcaleca Nahuatl\",\n\t\"Q12953758\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"nhr\"] = {\n\t\"Naro\",\n\t\"Q2164778\",\n\t\"khi-kal\",\n\tscripts = Latn,\n}\n\nm[\"nht\"] = {\n\t\"Ometepec Nahuatl\"\
      ,\n\t\"Q7090132\",\n}\n\nm[\"nhu\"] = {\n\t\"Noone\",\n\t\"Q36072\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"nhv\"] = {\n\t\"Temascaltepec Nahuatl\",\n\t\"Q2379405\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"nhw\"] =\
      \ {\n\t\"Western Huasteca Nahuatl\",\n\t\"Q2678840\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"nhx\"] = {\n\t\"Mecayapan Nahuatl\",\n\t\"Q12953756\",\n\t\"azc-nah\",\n\totherNames = {\"Isthmus-Mecayapan Nahuatl\", \"Mecayapan\
      \ Isthmus Nahuatl\"},\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"nhy\"] = {\n\t\"Northern Oaxaca Nahuatl\",\n\t\"Q12953763\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"nhz\"] = {\n\t\"Santa María La Alta Nahuatl\"\
      ,\n\t\"Q15705753\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"nia\"] = {\n\t\"Nias\",\n\t\"Q2407831\",\n\t\"poz-nws\",\n\tscripts = Latn,\n}\n\nm[\"nib\"] = {\n\t\"Nakame\",\n\t\"Q11732495\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n\
      }\n\nm[\"nid\"] = {\n\t\"Ngandi\",\n\t\"Q7021977\",\n\t\"aus-arn\",\n\tscripts = Latn,\n}\n\nm[\"nie\"] = {\n\t\"Niellim\",\n\t\"Q33662\",\n}\n\nm[\"nif\"] = {\n\t\"Nek\",\n\t\"Q6989781\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"nig\"] = {\n\t\"Ngalakan\"\
      ,\n\t\"Q3913796\",\n\t\"aus-gun\",\n\tscripts = Latn,\n}\n\nm[\"nih\"] = {\n\t\"Nyiha\",\n\t\"Q11128374\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nii\"] = {\n\t\"Nii\",\n\t\"Q35237\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"nij\"] = {\n\t\"Ngaju\",\n\
      \t\"Q2992872\",\n\t\"poz-brw\",\n\tscripts = Latn,\n}\n\nm[\"nik\"] = {\n\t\"Southern Nicobarese\",\n\t\"Q7570194\",\n}\n\nm[\"nil\"] = {\n\t\"Nila\",\n\t\"Q7036821\",\n}\n\nm[\"nim\"] = {\n\t\"Nilamba\",\n\t\"Q4121200\",\n\t\"bnt\",\n\tscripts = Latn,\n\
      }\n\nm[\"nin\"] = {\n\t\"Ninzo\",\n\t\"Q3914021\",\n\t\"nic-bco\",\n}\n\nm[\"nio\"] = {\n\t\"Nganasan\",\n\t\"Q36743\",\n\t\"syd\",\n\tscripts = {\"Cyrl\"},\n}\n\nm[\"niq\"] = {\n\t\"Nandi\",\n\t\"Q6956591\",\n\t\"sdv\",\n}\n\nm[\"nir\"] = {\n\t\"Nimboran\"\
      ,\n\t\"Q301116\",\n}\n\nm[\"nis\"] = {\n\t\"Nimi\",\n\t\"Q11732523\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"nit\"] = {\n\t\"Southeastern Kolami\",\n\t\"Q56767\",\n\t\"dra\",\n\totherNames = {\"Naiki\"},\n}\n\nm[\"niu\"] = {\n\t\"Niuean\",\n\t\"\
      Q33790\",\n\t\"poz-pol\",\n\tscripts = Latn,\n}\n\nm[\"niv\"] = {\n\t\"Nivkh\",\n\t\"Q36464\",\n\t\"qfa-iso\",\n\tscripts = {\"Cyrl\"},\n\ttranslit_module = \"niv-translit\",\n}\n\nm[\"niw\"] = {\n\t\"Nimo\",\n\t\"Q3504126\",\n}\n\nm[\"nix\"] = {\n\t\"\
      Hema\",\n\t\"Q5710904\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"niy\"] = {\n\t\"Ngiti\",\n\t\"Q7022396\",\n\t\"csu\",\n}\n\nm[\"niz\"] = {\n\t\"Ningil\",\n\t\"Q11732527\",\n\t\"qfa-tor\",\n}\n\nm[\"nja\"] = {\n\t\"Nzanyi\",\n\t\"Q3441299\",\n\t\"cdc-cbm\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"njb\"] = {\n\t\"Nocte Naga\",\n\t\"Q7046410\",\n}\n\nm[\"njd\"] = {\n\t\"Ndonde Hamba\",\n\t\"Q6983793\",\n}\n\nm[\"njh\"] = {\n\t\"Lotha Naga\",\n\t\"Q33590\",\n}\n\nm[\"nji\"] = {\n\t\"Gudanji\",\n\t\"Q3915692\",\n}\n\n\
      m[\"njj\"] = {\n\t\"Njen\",\n\t\"Q36112\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"njl\"] = {\n\t\"Njalgulgule\",\n\t\"Q7071229\",\n\t\"sdv\",\n}\n\nm[\"njm\"] = {\n\t\"Angami\",\n\t\"Q56761\",\n\t\"sit\",\n}\n\nm[\"njn\"] = {\n\t\"Liangmai Naga\"\
      ,\n\t\"Q14194500\",\n}\n\nm[\"njo\"] = {\n\t\"Ao\",\n\t\"Q28433\",\n\t\"tbq\",\n\totherNames = {\"Mongsen Ao\", \"Ao Naga\"},\n\tscripts = Latn,\n}\n\nm[\"njr\"] = {\n\t\"Njerep\",\n\t\"Q35844\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"njs\"] = {\n\
      \t\"Nisa\",\n\t\"Q13593518\",\n}\n\nm[\"njt\"] = {\n\t\"Ndyuka-Trio Pidgin\",\n\t\"Q13591205\",\n}\n\nm[\"nju\"] = {\n\t\"Ngadjunmaya\",\n\t\"Q7021846\",\n}\n\nm[\"njx\"] = {\n\t\"Kunyi\",\n\t\"Q3196559\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"njy\"\
      ] = {\n\t\"Njyem\",\n\t\"Q35898\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"njz\"] = {\n\t\"Nyishi\",\n\t\"Q56870\",\n\t\"sit-tan\",\n\totherNames = {\"Nishi\", \"Nisi\", \"Nissi\", \"Nishing\", \"Nyising\", \"Bangni\", \"Dafla\", \"Daphla\", \"Lel\"},\n\
      \tscripts = Latn,\n}\n\nm[\"nka\"] = {\n\t\"Nkoya\",\n\t\"Q7042633\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nkb\"] = {\n\t\"Khoibu Naga\",\n\t\"Q21481876\",\n}\n\nm[\"nkc\"] = {\n\t\"Nkongho\",\n\t\"Q35863\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"\
      nkd\"] = {\n\t\"Koireng\",\n\t\"Q6426342\",\n\t\"sit\",\n}\n\nm[\"nke\"] = {\n\t\"Duke\",\n\t\"Q3041075\",\n\t\"poz-ocw\",\n}\n\nm[\"nkf\"] = {\n\t\"Inpui Naga\",\n\t\"Q21481817\",\n}\n\nm[\"nkg\"] = {\n\t\"Nekgini\",\n\t\"Q11732509\",\n\t\"ngf-fin\",\n\
      \tscripts = Latn,\n}\n\nm[\"nkh\"] = {\n\t\"Khezha Naga\",\n\t\"Q6401519\",\n}\n\nm[\"nki\"] = {\n\t\"Thangal Naga\",\n\t\"Q56374\",\n}\n\nm[\"nkj\"] = {\n\t\"Nakai\",\n\t\"Q14916897\",\n\t\"ngf-okk\",\n\tscripts = Latn,\n}\n\nm[\"nkk\"] = {\n\t\"Nokuku\"\
      ,\n\t\"Q7048122\",\n\t\"poz-vnc\",\n}\n\nm[\"nkm\"] = {\n\t\"Namat\",\n\t\"Q15634505\",\n}\n\nm[\"nkn\"] = {\n\t\"Nkangala\",\n\t\"Q10962292\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nko\"] = {\n\t\"Nkonya\",\n\t\"Q35867\",\n\t\"alv-kwa\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"nkp\"] = {\n\t\"Niuatoputapu\",\n\t\"Q3399095\",\n\t\"poz-pnp\",\n}\n\nm[\"nkq\"] = {\n\t\"Nkami\",\n\t\"Q7042522\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"nkr\"] = {\n\t\"Nukuoro\",\n\t\"Q2635961\",\n\t\"poz-pnp\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"nks\"] = {\n\t\"North Asmat\",\n\t\"Q11732049\",\n}\n\nm[\"nkt\"] = {\n\t\"Nyika\",\n\t\"Q16917497\",\n\t\"bnt\",\n\totherNames = {\"Nyiha\", \"Kinyika\", \"Kinyiha\", \"Nyixa\", \"Chinyika\"},\n\tscripts = Latn,\n}\n\nm[\"nku\"] =\
      \ {\n\t\"Bouna Kulango\",\n\t\"Q20668241\",\n}\n\nm[\"nkw\"] = {\n\t\"Nkutu\",\n\t\"Q7193313\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nkx\"] = {\n\t\"Nkoroo\",\n\t\"Q36000\",\n\t\"ijo\",\n}\n\nm[\"nkz\"] = {\n\t\"Nkari\",\n\t\"Q11130307\",\n\t\"nic-bco\"\
      ,\n}\n\nm[\"nla\"] = {\n\t\"Ngombale\",\n\t\"Q36292\",\n\t\"bai\",\n\tscripts = Latn,\n}\n\nm[\"nlc\"] = {\n\t\"Nalca\",\n\t\"Q6960839\",\n\t\"ngf\",\n\totherNames = {\"Hmanggona\", \"Hmonono\", \"Kimjal\"},\n\tscripts = Latn,\n}\n\nm[\"nle\"] = {\n\t\"\
      East Nyala\",\n\t\"Q25559347\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nlg\"] = {\n\t\"Gela\",\n\t\"Q3063531\",\n\t\"poz-sls\",\n\tscripts = Latn,\n}\n\nm[\"nli\"] = {\n\t\"Grangali\",\n\t\"Q3444203\",\n\t\"inc-dar\",\n\totherNames = {\"Nangalami\"},\n\
      }\n\nm[\"nlj\"] = {\n\t\"Nyali\",\n\t\"Q7070830\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nlk\"] = {\n\t\"Ninia Yali\",\n\t\"Q12953310\",\n}\n\nm[\"nll\"] = {\n\t\"Nihali\",\n\t\"Q33904\",\n\t\"qfa-iso\",\n\tscripts = {\"Deva\", \"Latn\"},\n}\n\nm[\"\
      nlm\"] = {\n\t\"Mankiyali\",\n\t\"Q47522426\",\n\t\"inc-dar\",\n\totherNames = {\"Tarawara\", \"Tarawari\", \"Trawara\"},\n}\n\nm[\"nlo\"] = {\n\t\"Ngul\",\n\t\"Q35894\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nlq\"] = {\n\t\"Lao Naga\",\n\tnil,\n}\n\
      \nm[\"nlu\"] = {\n\t\"Nchumbulu\",\n\t\"Q36143\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"nlv\"] = {\n\t\"Orizaba Nahuatl\",\n\t\"Q3086050\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"nlw\"] = {\n\t\"Walangama\",\n\t\"\
      Q7961277\",\n}\n\nm[\"nlx\"] = {\n\t\"Nahali\",\n\t\"Q33361\",\n\t\"inc\",\n\tancestors = {\"psu\"},\n}\n\nm[\"nly\"] = {\n\t\"Nyamal\",\n\t\"Q7070837\",\n\t\"aus-nga\",\n\tscripts = Latn,\n}\n\nm[\"nlz\"] = {\n\t\"Nalögo\",\n\t\"Q20527138\",\n\t\"poz-oce\"\
      ,\n}\n\nm[\"nma\"] = {\n\t\"Maram Naga\",\n\t\"Q56378\",\n}\n\nm[\"nmb\"] = {\n\t\"Big Nambas\",\n\t\"Q2902304\",\n\t\"poz-vnc\",\n}\n\nm[\"nmc\"] = {\n\t\"Ngam\",\n\t\"Q3915446\",\n\t\"csu-sar\",\n\tscripts = Latn,\n}\n\nm[\"nmd\"] = {\n\t\"Ndumu\",\n\
      \t\"Q35901\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nme\"] = {\n\t\"Mzieme Naga\",\n\t\"Q6949473\",\n}\n\nm[\"nmf\"] = {\n\t\"Tangkhul Naga\",\n\t\"Q7682992\",\n\totherNames = {\"Tangkhul\"},\n}\n\nm[\"nmg\"] = {\n\t\"Kwasio\",\n\t\"Q34098\",\n\t\"\
      bnt\",\n\tscripts = Latn,\n}\n\nm[\"nmh\"] = {\n\t\"Monsang Naga\",\n\t\"Q6902496\",\n}\n\nm[\"nmi\"] = {\n\t\"Nyam\",\n\t\"Q3438738\",\n\t\"cdc-wst\",\n\tscripts = Latn,\n}\n\nm[\"nmj\"] = {\n\t\"Bangando-Ngombe\",\n\t\"Q3913949\",\n\totherNames = {\"\
      Bagando-Ngombe\", \"Ngombe-Kaka\", \"Ngombe (Central African Republic)\", \"Ngombe\"},\n}\n\nm[\"nmk\"] = {\n\t\"Namakura\",\n\t\"Q3335410\",\n\t\"poz-vnc\",\n}\n\nm[\"nml\"] = {\n\t\"Ndemli\",\n\t\"Q36089\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"\
      nmm\"] = {\n\t\"Manangba\",\n\t\"Q6746900\",\n\t\"sit\",\n\totherNames = {\"Manang\", \"Manange\", \"Manang Ke\", \"Nyishang\", \"Nyishangte\", \"Nyishangba\"},\n\tscripts = {\"Tibt\", \"Deva\"},\n}\n\nm[\"nmn\"] = {\n\t\"ǃXóõ\",\n\t\"Q13229\",\n\t\"khi-tuu\"\
      ,\n\totherNames = {\"Xoo\", \"Taa\"},\n\tscripts = Latn,\n}\n\nm[\"nmo\"] = {\n\t\"Moyon Naga\",\n\t\"Q6927748\",\n\t\"tbq-kuk\",\n\totherNames = {\"Moyon\"},\n}\n\nm[\"nmp\"] = {\n\t\"Nimanbur\",\n\tnil,\n}\n\nm[\"nmq\"] = {\n\t\"Nambya\",\n\t\"Q11008869\"\
      ,\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nmr\"] = {\n\t\"Nimbari\",\n\t\"Q36069\",\n}\n\nm[\"nms\"] = {\n\t\"Letemboi\",\n\t\"Q3236886\",\n\t\"poz-vnc\",\n}\n\nm[\"nmt\"] = {\n\t\"Namonuito\",\n\t\"Q12908815\",\n\t\"poz-mic\",\n}\n\nm[\"nmu\"] = {\n\t\
      \"Northeast Maidu\",\n\t\"Q3278074\",\n\t\"nai-mdu\",\n\tscripts = Latn,\n}\n\nm[\"nmv\"] = {\n\t\"Ngamini\",\n\t\"Q7021944\",\n\t\"aus-kar\",\n\tscripts = Latn,\n}\n\nm[\"nmw\"] = {\n\t\"Nimoa\",\n\t\"Q7037729\",\n\t\"poz-ocw\",\n\totherNames = {\"Rifao\"\
      },\n}\n\nm[\"nmy\"] = {\n\t\"Namuyi\",\n\t\"Q56844\",\n\t\"sit\",\n}\n\nm[\"nmz\"] = {\n\t\"Nawdm\",\n\t\"Q36085\",\n\t\"nic-gur\",\n\tscripts = Latn,\n}\n\nm[\"nna\"] = {\n\t\"Nyangumarta\",\n\t\"Q33653\",\n}\n\nm[\"nnb\"] = {\n\t\"Nande\",\n\t\"Q3196953\"\
      ,\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nnc\"] = {\n\t\"Nancere\",\n\t\"Q3140491\",\n\t\"cdc-est\",\n\tscripts = Latn,\n}\n\nm[\"nnd\"] = {\n\t\"West Ambae\",\n\t\"Q2841479\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"nne\"] = {\n\t\"Ngandyera\"\
      ,\n\t\"Q10961003\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nnf\"] = {\n\t\"Ngaing\",\n\t\"Q11732510\",\n\t\"ngf-fin\",\n\totherNames = {\"Mailang\", \"Sor\"},\n\tscripts = Latn,\n}\n\nm[\"nng\"] = {\n\t\"Maring Naga\",\n\t\"Q12952908\",\n}\n\nm[\"nnh\"\
      ] = {\n\t\"Ngiemboon\",\n\t\"Q36286\",\n\t\"bai\",\n\tscripts = Latn,\n}\n\nm[\"nni\"] = {\n\t\"North Nuaulu\",\n\t\"Q12952968\",\n}\n\nm[\"nnj\"] = {\n\t\"Nyangatom\",\n\t\"Q4662604\",\n\t\"sdv\",\n}\n\nm[\"nnk\"] = {\n\t\"Nankina\",\n\t\"Q11732502\"\
      ,\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"nnl\"] = {\n\t\"Northern Rengma Naga\",\n\t\"Q7067615\",\n}\n\nm[\"nnm\"] = {\n\t\"Namia\",\n\t\"Q56363\",\n\t\"paa-spk\",\n\tscripts = Latn,\n}\n\nm[\"nnn\"] = {\n\t\"Ngete\",\n\t\"Q56625\",\n\t\"cdc\",\n\
      \tscripts = Latn,\n}\n\nm[\"nnp\"] = {\n\t\"Wancho\",\n\t\"Q7967085\",\n\t\"sit\",\n}\n\nm[\"nnq\"] = {\n\t\"Ngindo\",\n\t\"Q7022366\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nnr\"] = {\n\t\"Narungga\",\n\t\"Q13591127\",\n\t\"aus-pam\",\n}\n\nm[\"nnt\"\
      ] = {\n\t\"Nanticoke\",\n\t\"Q3915517\",\n\t\"alg\",\n\tscripts = Latn,\n}\n\nm[\"nnu\"] = {\n\t\"Dwang\",\n\t\"Q35258\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"nnv\"] = {\n\t\"Nukunu\",\n\t\"Q10604066\",\n}\n\nm[\"nnw\"] = {\n\t\"Southern Nuni\"\
      ,\n\t\"Q11152248\",\n\t\"nic-gur\",\n\tscripts = Latn,\n}\n\nm[\"nnx\"] = {\n\t\"Ngong\",\n\t\"Q12952915\",\n}\n\nm[\"nny\"] = { -- contrast aus-ynk\n\t\"Nyangga\",\n\t\"Q10604331\",\n\t\"aus-tnk\",\n\tscripts = Latn,\n}\n\nm[\"nnz\"] = {\n\t\"Nda'nda'\"\
      ,\n\t\"Q36016\",\n\t\"bai\",\n\tscripts = Latn,\n}\n\nm[\"noa\"] = {\n\t\"Woun Meu\",\n\t\"Q3111873\",\n\t\"sai-chc\",\n\tscripts = Latn,\n}\n\nm[\"noc\"] = {\n\t\"Nuk\",\n\t\"Q11732534\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"nod\"] = {\n\t\"Northern\
      \ Thai\",\n\t\"Q565110\",\n\t\"tai-swe\",\n\tscripts = {\"Lana\", \"Thai\"},\n\tsort_key = {\n\t\tfrom = {\"%p\", \"[᩠ᩳ-᩿]\", \"ᩔ\", \"ᩕ\", \"ᩖ\", \"ᩘ\", \"([ᨭ-ᨱ])ᩛ\", \"([ᨷ-ᨾ])ᩛ\", \"ᩤ\", \"[็-๎]\", \"([เแโใไ])([ก-ฮ])\"},\n\t\tto   = {\"\", \"\", \"ᩈᩈ\
      \", \"ᩁ\", \"ᩃ\", \"ᨦ\", \"%1ᨮ\", \"%1ᨻ\", \"ᩣ\", \"\", \"%2%1\"}},\n}\n\nm[\"noe\"] = {\n\t\"Nimadi\",\n\t\"Q3502294\",\n\t\"inc\",\n\tscripts = Deva,\n\tancestors = {\"raj\"},\n}\n\nm[\"nof\"] = {\n\t\"Nomane\",\n\t\"Q11732531\",\n}\n\nm[\"nog\"] = {\n\
      \t\"Nogai\",\n\t\"Q33871\",\n\t\"trk\",\n\totherNames = {\"Nogay\"},\n\tscripts = {\"Cyrl\", \"Arab\", \"Latn\"},\n\ttranslit_module = \"nog-translit\",\n\toverride_translit = true,\n}\n\nm[\"noh\"] = {\n\t\"Nomu\",\n\t\"Q11732532\",\n}\n\nm[\"noi\"] =\
      \ {\n\t\"Noiri\",\n\t\"Q12953774\",\n\t\"inc\",\n\tancestors = {\"psu\"},\n}\n\nm[\"noj\"] = {\n\t\"Nonuya\",\n\t\"Q5372139\",\n\t\"sai-wit\",\n\tscripts = Latn,\n}\n\nm[\"nok\"] = {\n\t\"Nooksack\",\n\t\"Q3343396\",\n}\n\nm[\"nol\"] = {\n\t\"Nomlaki\"\
      ,\n\t\"Q3343229\",\n\t\"nai-wtq\",\n\tscripts = Latn,\n}\n\nm[\"nom\"] = {\n\t\"Nocamán\",\n\t\"Q7046289\",\n\t\"sai-pan\",\n\tscripts = Latn,\n}\n\nm[\"non\"] = {\n\t\"Old Norse\",\n\t\"Q35505\",\n\t\"gmq\",\n\totherNames = {\"Old Icelandic\", \"Old Norwegian\"\
      }, -- note: Old Swedish and Old Danish have their own codes\n\tscripts = {\"Latn\", \"Runr\"},\n}\n\nm[\"nop\"] = {\n\t\"Numanggang\",\n\t\"Q7069052\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"noq\"] = {\n\t\"Ngongo\",\n\t\"Q11057478\",\n\t\"bnt\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"nos\"] = {\n\t\"Eastern Nisu\",\n\t\"Q25559419\",\n\t\"tbq-lol\",\n}\n\nm[\"not\"] = {\n\t\"Nomatsiguenga\",\n\t\"Q3342992\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"nou\"] = {\n\t\"Ewage-Notu\",\n\t\"Q5418860\",\n}\n\n\
      m[\"nov\"] = {\n\t\"Novial\",\n\t\"Q36738\",\n\t\"art\",\n\tscripts = Latn,\n}\n\nm[\"now\"] = {\n\t\"Nyambo\",\n\t\"Q4967930\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"noy\"] = {\n\t\"Noy\",\n\t\"Q36321\",\n}\n\nm[\"noz\"] = {\n\t\"Nayi\",\n\t\"Q3183349\"\
      ,\n\t\"omv\",\n}\n\nm[\"npa\"] = {\n\t\"Nar Phu\",\n\t\"Q4926353\",\n}\n\nm[\"npb\"] = {\n\t\"Nupbikha\",\n\t\"Q3695201\",\n\t\"tbq\",\n}\n\nm[\"nph\"] = {\n\t\"Phom\",\n\t\"Q7187109\",\n\t\"sit\",\n}\n\nm[\"npl\"] = {\n\t\"Southeastern Puebla Nahuatl\"\
      ,\n\t\"Q4632950\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"npn\"] = {\n\t\"Mondropolon\",\n\t\"Q3320594\",\n\t\"poz-aay\",\n}\n\nm[\"npo\"] = {\n\t\"Pochuri Naga\",\n\t\"Q7206342\",\n}\n\nm[\"nps\"] = {\n\t\"Nipsan\",\n\t\
      \"Q11732528\",\n}\n\nm[\"npu\"] = {\n\t\"Puimei Naga\",\n\t\"Q7259044\",\n}\n\nm[\"npy\"] = {\n\t\"Napu\",\n\t\"Q12953768\",\n}\n\nm[\"nqg\"] = {\n\t\"Ede Nago\",\n\t\"Q12952408\",\n}\n\nm[\"nqk\"] = {\n\t\"Kura Ede Nago\",\n\t\"Q12952409\",\n}\n\nm[\"\
      nqm\"] = {\n\t\"Ndom\",\n\t\"Q6983791\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"nqn\"] = {\n\t\"Nen\",\n\t\"Q20816352\",\n}\n\nm[\"nqo\"] = {\n\t\"N'Ko\",\n\t\"Q18546266\",\n\t\"dmn-man\",\n\tscripts = {\"Nkoo\"},\n}\n\nm[\"nqq\"] = {\n\t\"Kyan-Karyaw\
      \ Naga\",\n\tnil,\n}\n\nm[\"nra\"] = {\n\t\"Ngom\",\n\t\"Q36087\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nrb\"] = {\n\t\"Nara\",\n\t\"Q36179\",\n\t\"sdv\",\n}\n\nm[\"nrc\"] = {\n\t\"Noric\",\n\t\"Q37023\",\n\t\"cel\",\n\tscripts = {\"Ital\"},\n}\n\n\
      m[\"nre\"] = {\n\t\"Southern Rengma Naga\",\n\t\"Q7313205\",\n}\n\nm[\"nrf\"] = {\n\t\"Norman\",\n\t\"Q33850\",\n\t\"roa-oil\",\n\totherNames = {\"Cauchois\", \"Jèrriais\", \"Jersiais\", \"Jersey French\", \"Jersey Norman\", \"Jersey Norman French\", \"\
      Guernésiais\", \"Guernesiais\", \"Dgèrnésiais\", \"Guernsey French\", \"Guernsey Norman French\", \"Augeron\", \"Sercquiais\", \"Auregnais\", \"Cotentinais\", \"Brayon\", \"Roumois\"},\n\tscripts = Latn,\n\tancestors = {\"frm\"},\n\tsort_key = {\n\t\t\
      from = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\" , \"œ\" , \"'\"},\n\t\tto   = {\"a\"\t , \"e\"\t , \"i\"\t , \"o\"\t , \"u\"\t , \"y\"\t , \"c\", \"ae\", \"oe\"}} ,\n\twikimedia_codes = {\"nrm\"},\n}\n\nm[\"\
      nrg\"] = {\n\t\"Narango\",\n\t\"Q12952929\",\n\t\"poz-vnc\",\n}\n\nm[\"nri\"] = {\n\t\"Chokri Naga\",\n\t\"Q5104247\",\n\t\"sit\",\n}\n\nm[\"nrk\"] = {\n\t\"Ngarla\",\n\t\"Q3915860\",\n\t\"aus-nga\",\n\tscripts = Latn,\n}\n\nm[\"nrl\"] = {\n\t\"Ngarluma\"\
      ,\n\t\"Q7022078\",\n\t\"aus-nga\",\n\tscripts = Latn,\n}\n\nm[\"nrm\"] = {\n\t\"Narom\",\n\t\"Q3336135\",\n\t\"poz-swa\",\n\tscripts = Latn,\n}\n\nm[\"nrn\"] = {\n\t\"Norn\",\n\t\"Q36708\",\n\t\"gmq\",\n\tscripts = Latn,\n\tancestors = {\"non\"},\n}\n\n\
      m[\"nrp\"] = {\n\t\"North Picene\",\n\t\"Q430138\",\n\tscripts = {\"Ital\"},\n\ttranslit_module = \"Ital-translit\",\n}\n\nm[\"nrr\"] = {\n\t\"Norra\",\n\t\"Q12952967\",\n\t\"tai\",\n}\n\nm[\"nrt\"] = {\n\t\"Northern Kalapuya\",\n\t\"Q3192121\",\n}\n\n\
      m[\"nru\"] = {\n\t\"Narua\",\n\t\"Q21658869\",\n\t\"tbq\",\n}\n\nm[\"nrx\"] = {\n\t\"Ngurmbur\",\n\t\"Q2591251\",\n}\n\nm[\"nrz\"] = {\n\t\"Lala\",\n\t\"Q6480151\",\n\t\"poz-ocw\",\n}\n\nm[\"nsa\"] = {\n\t\"Sangtam Naga\",\n\t\"Q7418144\",\n\t\"sit\",\n\
      }\n\nm[\"nsc\"] = {\n\t\"Nshi\",\n\t\"Q11129508\",\n\t\"nic-grf\",\n\tscripts = Latn,\n}\n\nm[\"nsd\"] = {\n\t\"Southern Nisu\",\n\tnil,\n\t\"tbq-lol\",\n}\n\nm[\"nse\"] = {\n\t\"Nsenga\",\n\t\"Q3081996\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nsg\"\
      ] = {\n\t\"Ngasa\",\n\t\"Q56345\",\n\t\"sdv\",\n}\n\nm[\"nsh\"] = {\n\t\"Ngoshie\",\n\t\"Q7022582\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"nsi\"] = {\n\t\"Nigerian Sign Language\",\n\t\"Q7033021\",\n\t\"sgn\",\n}\n\nm[\"nsk\"] = {\n\t\"Naskapi\"\
      ,\n\t\"Q1704302\",\n\t\"alg\",\n\tscripts = {\"Cans\"},\n\tancestors = {\"cr\"},\n\ttranslit_module = \"nsk-translit\",\n}\n\nm[\"nsl\"] = {\n\t\"Norwegian Sign Language\",\n\t\"Q1781613\",\n\t\"sgn\",\n}\n\nm[\"nsm\"] = {\n\t\"Sema\",\n\t\"Q3478238\"\
      ,\n\t\"sit\",\n}\n\nm[\"nsn\"] = {\n\t\"Nehan\",\n\t\"Q3337774\",\n\t\"poz-ocw\",\n}\n\nm[\"nso\"] = {\n\t\"Northern Sotho\",\n\t\"Q33890\",\n\t\"bnt-sts\",\n\tscripts = Latn,\n}\n\nm[\"nsp\"] = {\n\t\"Nepalese Sign Language\",\n\t\"Q3915492\",\n\t\"sgn\"\
      ,\n}\n\nm[\"nsq\"] = {\n\t\"Northern Sierra Miwok\",\n\t\"Q3344226\",\n\t\"nai-utn\",\n\tscripts = Latn,\n}\n\nm[\"nsr\"] = {\n\t\"Maritime Sign Language\",\n\t\"Q3915483\",\n\t\"sgn\",\n}\n\nm[\"nss\"] = {\n\t\"Nali\",\n\t\"Q3335385\",\n\t\"poz-aay\"\
      ,\n}\n\nm[\"nst\"] = {\n\t\"Tangsa\",\n\t\"Q56350\",\n\t\"sit\",\n}\n\nm[\"nsu\"] = {\n\t\"Sierra Negra Nahuatl\",\n\tnil,\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"nsv\"] = {\n\t\"Southwestern Nisu\",\n\tnil,\n\t\"tbq-lol\"\
      ,\n}\n\nm[\"nsw\"] = {\n\t\"Navut\",\n\t\"Q3337327\",\n\t\"poz-vnc\",\n}\n\nm[\"nsx\"] = {\n\t\"Nsongo\",\n\t\"Q7067577\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nsy\"] = {\n\t\"Nasal\",\n\t\"Q6966574\",\n}\n\nm[\"nsz\"] = {\n\t\"Nisenan\",\n\t\"Q33665\"\
      ,\n\t\"nai-mdu\",\n\tscripts = Latn,\n}\n\nm[\"ntd\"] = {\n\t\"Northern Tidong\",\n\tnil,\n\totherNames = {\"Sesayap Tidong\", \"Northern Tidung\", \"Sesayap Tidung\"},\n}\n\nm[\"nte\"] = {\n\t\"Nathembo\",\n\t\"Q11030947\",\n\t\"bnt\",\n\totherNames =\
      \ {\"Sakati\"},\n}\n\nm[\"ntg\"] = {\n\t\"Ngantangarra\",\n\t\"Q33060509\",\n}\n\nm[\"nti\"] = {\n\t\"Natioro\",\n\t\"Q36140\",\n}\n\nm[\"ntj\"] = {\n\t\"Ngaanyatjarra\",\n\t\"Q3915409\",\n\t\"aus-pam\",\n\tscripts = Latn,\n}\n\nm[\"ntk\"] = {\n\t\"Ikoma\"\
      ,\n\t\"Q5996114\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ntm\"] = {\n\t\"Nateni\",\n\t\"Q3070731\",\n\t\"nic-gur\",\n\tscripts = Latn,\n}\n\nm[\"nto\"] = {\n\t\"Ntomba\",\n\t\"Q11130292\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ntp\"] = {\n\t\"Northern\
      \ Tepehuan\",\n\t\"Q15615651\",\n\t\"azc\",\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"á\", \"é\", \"í\", \"ó\", \"ú\"},\n\t\tto   = {\"a\", \"e\", \"i\", \"o\", \"u\"}\n\t},\n}\n\nm[\"ntr\"] = {\n\t\"Delo\",\n\t\"Q35195\",\n\t\"nic-gur\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"nts\"] = {\n\t\"Natagaimas\",\n\t\"Q6967931\",\n}\n\nm[\"ntu\"] = {\n\t\"Natügu\",\n\tnil,\n\t\"poz-oce\",\n}\n\nm[\"ntw\"] = {\n\t\"Nottoway\",\n\t\"Q3344791\",\n\t\"iro\",\n}\n\nm[\"ntx\"] = {\n\t\"Somra\",\n\t\"Q7560536\",\n\totherNames\
      \ = {\"Tangkhul Naga\", \"Burmese Tangkhul\", \"Somra Tangkhul\"},\n}\n\nm[\"nty\"] = {\n\t\"Mantsi\",\n\t\"Q56878\",\n\t\"tbq-lol\",\n}\n\nm[\"nua\"] = {\n\t\"Yuaga\",\n\t\"Q3573088\",\n\t\"poz-cln\",\n\tscripts = Latn,\n}\n\nm[\"nuc\"] = {\n\t\"Nukuini\"\
      ,\n\t\"Q3346231\",\n}\n\nm[\"nud\"] = {\n\t\"Ngala\",\n\t\"Q7021893\",\n\t\"paa-spk\",\n\tscripts = Latn,\n}\n\nm[\"nue\"] = {\n\t\"Ngundu\",\n\t\"Q12952953\",\n\t\"bad\",\n\tscripts = Latn,\n}\n\nm[\"nuf\"] = {\n\t\"Nusu\",\n\t\"Q56413\",\n\t\"tbq-lol\"\
      ,\n}\n\nm[\"nug\"] = {\n\t\"Nungali\",\n\t\"Q7069826\",\n}\n\nm[\"nuh\"] = {\n\t\"Ndunda\",\n\t\"Q3913968\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"nui\"] = {\n\t\"Ngumbi\",\n\t\"Q36459\",\n\t\"bnt\",\n\totherNames = {\"Kombe\"},\n}\n\nm[\"nuj\"\
      ] = {\n\t\"Nyole (Uganda)\",\n\t\"Q3739448\",\n\t\"bnt\",\n\totherNames = {\"Nyole\", \"LoNyole\", \"Lunyole\", \"Nyuli\"},\n\tscripts = Latn,\n}\n\nm[\"nuk\"] = {\n\t\"Nootka\",\n\t\"Q2992876\",\n\t\"wak\",\n\totherNames = {\"Nuu-chah-nulth\", \"Nuuchahnulth\"\
      , \"T'aat'aaqsapa\"},\n\tscripts = Latn,\n}\n\nm[\"nul\"] = {\n\t\"Nusa Laut\",\n\t\"Q7070332\",\n}\n\nm[\"num\"] = {\n\t\"Niuafo'ou\",\n\t\"Q36173\",\n\t\"poz-pol\",\n\tscripts = Latn,\n}\n\nm[\"nun\"] = {\n\t\"Anong\",\n\t\"Q2748232\",\n\t\"tbq\",\n\t\
      otherNames = {\"Nung\"}, -- also mistakenly assigned the name \"Ayi\" by the ISO\n}\n\nm[\"nuo\"] = {\n\t\"Nguôn\",\n\t\"Q3915785\",\n\t\"mkh-vie\",\n}\n\nm[\"nup\"] = {\n\t\"Nupe\",\n\t\"Q36720\",\n\t\"alv-von\",\n\totherNames = {\"Nupe-Nupe-Tako\"},\n\
      \tscripts = Latn,\n}\n\nm[\"nuq\"] = {\n\t\"Nukumanu\",\n\t\"Q12909019\",\n\t\"poz-pnp\",\n}\n\nm[\"nur\"] = {\n\t\"Nuguria\",\n\t\"Q7068910\",\n\t\"poz-pnp\",\n\totherNames = {\"Nukuria\"},\n}\n\nm[\"nus\"] = {\n\t\"Nuer\",\n\t\"Q33675\",\n\t\"sdv\",\n\
      \tscripts = Latn,\n}\n\nm[\"nut\"] = {\n\t\"Nung\",\n\t\"Q72695\",\n\t\"tai\",\n}\n\nm[\"nuu\"] = {\n\t\"Ngbundu\",\n\t\"Q11126081\",\n\t\"nic-ubg\",\n\tscripts = Latn,\n}\n\nm[\"nuv\"] = {\n\t\"Northern Nuni\",\n\t\"Q11016572\",\n\t\"nic-gur\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"nuw\"] = {\n\t\"Nguluwan\",\n\t\"Q6528643\",\n}\n\nm[\"nux\"] = {\n\t\"Mehek\",\n\t\"Q6809452\",\n\t\"paa-spk\",\n\tscripts = Latn,\n}\n\nm[\"nuy\"] = {\n\t\"Nunggubuyu\",\n\t\"Q1747811\",\n\t\"aus-arn\",\n\totherNames = {\"Wubuy\"\
      },\n}\n\nm[\"nuz\"] = {\n\t\"Tlamacazapa Nahuatl\",\n\t\"Q2073277\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"nvh\"] = {\n\t\"Nasarian\",\n\t\"Q6966614\",\n\t\"poz-vnc\",\n}\n\nm[\"nvm\"] = {\n\t\"Namiae\",\n\t\"Q12952922\"\
      ,\n}\n\nm[\"nvo\"] = {\n\t\"Nyokon\",\n\tnil,\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"nwa\"] = {\n\t\"Nawathinehena\",\n\t\"Q6982892\",\n\t\"alg\",\n\tscripts = Latn,\n}\n\nm[\"nwb\"] = {\n\t\"Nyabwa\",\n\t\"Q33664\",\n\t\"kro\",\n}\n\nm[\"nwc\"]\
      \ = {\n\t\"Classical Newari\",\n\t\"Q5128301\",\n\t\"sit\",\n}\n\nm[\"nwe\"] = {\n\t\"Ngwe\",\n\t\"Q36181\",\n\t\"bai\",\n\tscripts = Latn,\n}\n\nm[\"nwi\"] = {\n\t\"Southwest Tanna\",\n\t\"Q3504488\",\n}\n\nm[\"nwm\"] = {\n\t\"Nyamusa-Molo\",\n\t\"Q12747951\"\
      ,\n}\n\nm[\"nwo\"] = {\n\t\"Nauo\",\n\t\"Q6981305\",\n\t\"aus-pam\",\n\totherNames = {\"Nawo\"},\n\tscripts = Latn,\n}\n\nm[\"nwr\"] = {\n\t\"Nawaru\",\n\t\"Q12638166\",\n\t\"ngf\",\n\totherNames = {\"Sirio\"},\n}\n\nm[\"nwx\"] = {\n\t\"Middle Newar\"\
      ,\n\tnil,\n\t\"sit\",\n\tancestors = {\"nwc\"},\n}\n\nm[\"nwy\"] = {\n\t\"Nottoway-Meherrin\",\n\tnil,\n\t\"iro\",\n}\n\nm[\"nxa\"] = {\n\t\"Nauete\",\n\t\"Q6981095\",\n\t\"poz\",\n}\n\nm[\"nxd\"] = {\n\t\"Longandu\",\n\t\"Q3913277\",\n\t\"bnt\",\n\totherNames\
      \ = {\"Ngando (Democratic Republic of the Congo)\", \"Ngando\"},\n}\n\nm[\"nxe\"] = {\n\t\"Nage\",\n\t\"Q2295569\",\n\t\"poz-cet\",\n}\n\nm[\"nxg\"] = {\n\t\"Ngadha\",\n\t\"Q1516651\",\n\t\"poz-cet\",\n\totherNames = {\"Ngad'a\"},\n\tscripts = Latn,\n\
      }\n\nm[\"nxi\"] = {\n\t\"Nindi\",\n\t\"Q7038230\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nxl\"] = {\n\t\"South Nuaulu\",\n\t\"Q18544857\",\n}\n\nm[\"nxm\"] = {\n\t\"Numidian\",\n\t\"Q35761\",\n\t\"afa\",\n\tscripts = {\"Tfng\", \"Latn\"}, --Tfng may\
      \ not support all the needed characters\n}\n\nm[\"nxn\"] = {\n\t\"Ngawun\",\n\t\"Q3915711\",\n\t\"aus-pam\",\n\tscripts = Latn,\n}\n\nm[\"nxo\"] = {\n\t\"Ndambomo\",\n\t\"Q6983681\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nxq\"] = {\n\t\"Naxi\",\n\t\"\
      Q2478711\",\n\t\"tbq\",\n}\n\nm[\"nxr\"] = {\n\t\"Ninggerum\",\n\t\"Q11732526\",\n\t\"ngf-okk\",\n\tscripts = Latn,\n}\n\nm[\"nxu\"] = {\n\t\"Narau\",\n\t\"Q6965452\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"nxx\"] = {\n\t\"Nafri\",\n\t\"Q6958211\",\n\
      \t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"nyb\"] = {\n\t\"Nyangbo\",\n\t\"Q36256\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nyc\"] = {\n\t\"Nyanga-li\",\n\t\"Q7070876\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nyd\"] = {\n\t\"Nyole (Kenya)\",\n\t\"Q7071227\"\
      ,\n\t\"bnt\",\n\totherNames = {\"Nyole\", \"Nyore\", \"Olunyole\", \"Lunyole\", \"Lunyore\", \"Nyoole\", \"Olunyore\"},\n\tscripts = Latn,\n}\n\nm[\"nye\"] = {\n\t\"Nyengo\",\n\t\"Q7071068\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nyf\"] = {\n\t\"Giryama\"\
      ,\n\t\"Q3107606\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nyg\"] = {\n\t\"Nyindu\",\n\t\"Q11030685\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nyh\"] = {\n\t\"Nyigina\",\n\t\"Q3913780\",\n\t\"aus-nyu\",\n\tscripts = Latn,\n}\n\nm[\"nyi\"] = {\n\t\"Nyimang\"\
      ,\n\t\"Q34846\",\n\t\"sdv\",\n\tscripts = Latn,\n}\n\nm[\"nyj\"] = {\n\t\"Nyanga (Congo)\",\n\t\"Q7070879\",\n\t\"bnt\",\n\totherNames = {\"Kinyanga\", \"Nyanga\"},\n\tscripts = Latn,\n}\n\nm[\"nyk\"] = {\n\t\"Nyaneka\",\n\t\"Q10962298\",\n\t\"bnt\",\n\
      \tscripts = Latn,\n}\n\nm[\"nyl\"] = {\n\t\"Nyeu\",\n\t\"Q3033578\",\n\t\"mkh-kat\",\n}\n\nm[\"nym\"] = {\n\t\"Nyamwezi\",\n\t\"Q4121131\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nyn\"] = {\n\t\"Nyankole\",\n\t\"Q13207\",\n\t\"bnt\",\n\totherNames =\
      \ {\"Nkore-Kiga\", \"Runyankore\", \"Runyankore-Rukiga\", \"Nkore\", \"Kiga\", \"Chiga\", \"Nyankore\", \"Ankole\", \"Banyankole\", \"Lunyankole\", \"Rukiga\"},\n\tscripts = Latn,\n}\n\nm[\"nyo\"] = {\n\t\"Nyoro\",\n\t\"Q33794\",\n\t\"bnt\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"nyp\"] = {\n\t\"Nyang'i\",\n\t\"Q7070894\",\n}\n\nm[\"nyr\"] = {\n\t\"Shinyiha\",\n\t\"Q12636088\",\n\t\"bnt\",\n\totherNames = {\"Nyiha\"},\n}\n\nm[\"nys\"] = {\n\t\"Nyunga\",\n\t\"Q7049771\",\n\t\"aus-pam\",\n\totherNames = {\"Noongar\"\
      , \"Nyuunga\"},\n\tscripts = Latn,\n}\n\nm[\"nyt\"] = {\n\t\"Nyawaygi\",\n\t\"Q3915783\",\n\t\"aus-dyb\",\n}\n\nm[\"nyu\"] = {\n\t\"Nyungwe\",\n\t\"Q7071318\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"nyv\"] = {\n\t\"Nyulnyul\",\n\t\"Q3442732\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"nyw\"] = {\n\t\"Nyaw\",\n\t\"Q26425602\",\n\t\"tai\",\n\totherNames = {\"Tai Mene\", \"Tai Yo\"},\n}\n\nm[\"nyx\"] = {\n\t\"Nganyaywana\",\n\t\"Q3913800\",\n\t\"aus-cww\",\n\tscripts = Latn,\n}\n\nm[\"nyy\"] = {\n\t\"Nyakyusa\",\n\t\
      \"Q3272620\",\n\t\"bnt\",\n\totherNames = {\"Kinyakyusa\", \"Nyakyusa-Ngonde\"},\n\tscripts = Latn,\n}\n\nm[\"nza\"] = {\n\t\"Tigon Mbembe\",\n\t\"Q36518\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"nzb\"] = {\n\t\"Njebi\",\n\t\"Q35923\",\n\t\"bnt\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"nzd\"] = {\n\t\"Nzadi\",\n\t\"Q17152586\",\n\t\"bnt\",\n\totherNames = {\"Ngiemba\", \"Lensibun\", \"Ndzé Ntaa\"},\n\tscripts = Latn,\n\tentry_name = {\n\t\tfrom = {\"[ÀÂǍÁ]\", \"[àâǎá]\", \"[ÈÊĚÉ]\", \"[èêěé]\", \"[ÌÎǏÍ\
      ]\", \"[ìîǐí]\", \"[ÒÔǑÓ]\", \"[òôǒó]\", \"[ÙÛǓÚ]\", \"[ùûǔú]\", \"[ǹń]\", \"ḿ\", \"[`ˋ]\", GRAVE, CIRC, CARON, ACUTE},\n\t\tto   = {\"A\", \"a\", \"E\", \"e\", \"I\", \"i\", \"O\", \"o\", \"U\", \"u\", \"n\", \"m\"}},\n}\n\nm[\"nzi\"] = {\n\t\"Nzima\"\
      ,\n\t\"Q36337\",\n\t\"alv-kwa\",\n\totherNames = {\"Appolo\"},\n}\n\nm[\"nzk\"] = {\n\t\"Nzakara\",\n\t\"Q3913339\",\n\t\"znd\",\n\tscripts = Latn,\n}\n\nm[\"nzm\"] = {\n\t\"Zeme Naga\",\n\t\"Q21491053\",\n}\n\nm[\"nzs\"] = {\n\t\"New Zealand Sign Language\"\
      ,\n\t\"Q36239\",\n\t\"sgn\",\n}\n\nm[\"nzu\"] = {\n\t\"Teke-Nzikou\",\n\t\"Q36606\",\n}\n\nm[\"nzy\"] = {\n\t\"Nzakambay\",\n\t\"Q36374\",\n\t\"alv\",\n\tscripts = Latn,\n}\n\nm[\"nzz\"] = {\n\t\"Nanga Dama Dogon\",\n\t\"Q6963443\",\n\t\"qfa-dgn\",\n}\n\
      \nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:29.303Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aqualifier&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=68350 t=1555362449188378
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1222.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 569797099, 246757792, 689855074
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="278931" pageid="278931" ns="10" title="Template:qualifier"><revisions><rev user="Jberkel" timestamp="2017-04-24T22:24:06Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Replaced content with &quot;{{#invoke:qualifier|qualifier_t}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;&quot;" xml:space="preserve">{{#invoke:qualifier|qualifier_t}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:46.846Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aru-translit&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=68328 t=1555362466702641
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:46 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1229.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 504248862, 496751081, 692831322
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3907076\" pageid=\"3907076\" ns=\"828\" title=\"Module:ru-translit\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-02-22T03:03:16Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"fixes for ё in prefixes and suffixes\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\nFIXME:\n\n1. (DONE) If you write '''Б'''ез, it transliterates to '''B'''jez instead of\n   '''B'''ez,\
      \ as it should.\n2. (DONE) Convert ъ to nothing before comma or other non-letter particle, e.g.\n   in Однимъ словомъ, идешь на чтеніе.\n3. (DONE) Make special-casing for adjectives in -го and for что (and friends)\n    be the default, and implement transformations\
      \ in Cyrillic rather than after\n    translit so that we can display the transformed Cyrillic in the\n    \"phonetic respelling\" notation of {{ru-IPA}}.\n4. (DONE) Convert apostrophe to ъ before transliteration when after a consonant\n   and before a\
      \ vowel (requested by Atitarev).\n]=]\n\nlocal u = mw.ustring.char\nlocal rfind = mw.ustring.find\nlocal rsub = mw.ustring.gsub -- WARNING: Don't return this directly in a function, or surround in parens\nlocal rmatch = mw.ustring.match\nlocal rsplit =\
      \ mw.text.split\nlocal ulower = mw.ustring.lower\nlocal usub = mw.ustring.sub\n\nlocal GR = u(0x0300) -- grave =  ̀\nlocal TEMP_G = u(0xFFF1) -- substitute to preserve g from changing to v\n\nlocal function ine(x) -- if not empty\n\tif x == \"\" then return\
      \ nil else return x end\nend\n\n-- In this table, we now map Cyrillic е and э to je and e, and handle the\n-- post-consonant version (plain e and ɛ) specially.\nlocal tab = {\n\t[\"А\"]=\"A\", [\"Б\"]=\"B\", [\"В\"]=\"V\", [\"Г\"]=\"G\", [\"Д\"]=\"D\"\
      , [\"Е\"]=\"Je\", [\"Ё\"]=\"Jó\", [\"Ж\"]=\"Ž\", [\"З\"]=\"Z\", [\"И\"]=\"I\", [\"Й\"]=\"J\",\n\t[\"К\"]=\"K\", [\"Л\"]=\"L\", [\"М\"]=\"M\", [\"Н\"]=\"N\", [\"О\"]=\"O\", [\"П\"]=\"P\", [\"Р\"]=\"R\", [\"С\"]=\"S\", [\"Т\"]=\"T\", [\"У\"]=\"U\", [\"Ф\"\
      ]=\"F\",\n\t[\"Х\"]=\"X\", [\"Ц\"]=\"C\", [\"Ч\"]=\"Č\", [\"Ш\"]=\"Š\", [\"Щ\"]=\"Šč\", [\"Ъ\"]=\"ʺ\", [\"Ы\"]=\"Y\", [\"Ь\"]=\"ʹ\", [\"Э\"]=\"E\", [\"Ю\"]=\"Ju\", [\"Я\"]=\"Ja\",\n\t['а']='a', ['б']='b', ['в']='v', ['г']='g', ['д']='d', ['е']='je', ['ё\
      ']='jó', ['ж']='ž', ['з']='z', ['и']='i', ['й']='j',\n\t['к']='k', ['л']='l', ['м']='m', ['н']='n', ['о']='o', ['п']='p', ['р']='r', ['с']='s', ['т']='t', ['у']='u', ['ф']='f',\n\t['х']='x', ['ц']='c', ['ч']='č', ['ш']='š', ['щ']='šč', ['ъ']='ʺ', ['ы']='y',\
      \ ['ь']='ʹ', ['э']='e', ['ю']='ju', ['я']='ja',\n\t-- Russian style quotes\n\t['«']='“', ['»']='”',\n\t-- archaic, pre-1918 letters\n\t['І']='I', ['і']='i', ['Ѳ']='F', ['ѳ']='f',\n\t['Ѣ']='Jě', ['ѣ']='jě', ['Ѵ']='I', ['ѵ']='i',\n}\n\n-- following based\
      \ on ru-common for use with is_monosyllabic()\n-- any Cyrillic or Latin vowel, including ёЁ and composed Cyrillic vowels with grave accent;\n-- not including accented Latin vowels except ě (FIXME, might want to change this)\nlocal lowercase_vowels = \"\
      аеиоуяэыюіѣѵүѐѝёaeiouyěɛ\"\nlocal uppercase_vowels = \"АЕИОУЯЭЫЮІѢѴҮЀЍЁAEIOUYĚƐ\"\nlocal vowels = lowercase_vowels .. uppercase_vowels\n\n-- FIXME! Doesn't work with ɣ, which gets included in this character set\nlocal non_consonants = \"[\" .. vowels ..\
      \ \"ЪЬъьʹʺ%A]\"\nlocal consonants = \"[^\" .. vowels .. \"ЪЬъьʹʺ%A]\"\n\nlocal map_to_plain_e_map = {[\"Е\"] = \"E\", [\"е\"] = \"e\", [\"Ѣ\"] = \"Ě\", [\"ѣ\"] = \"ě\", [\"Э\"] = \"Ɛ\", [\"э\"] = \"ɛ\"}\nlocal function map_to_plain_e(pre, e)\n\treturn\
      \ pre .. map_to_plain_e_map[e]\nend\n\nlocal map_to_je_map = {[\"Е\"] = \"Je\", [\"е\"] = \"je\", [\"Ѣ\"] = \"Jě\", [\"ѣ\"] = \"jě\", [\"Э\"] = \"E\", [\"э\"] = \"e\"}\nlocal function map_to_je(pre, e)\n\tif e == nil then\n\t\te = pre\n\t\tpre = \"\"\n\
      \tend\n\treturn pre .. map_to_je_map[e]\nend\n\n-- decompose composed grave chars; they will map to uncomposed Latin letters for\n-- consistency with other char+grave combinations, and we do this early to\n-- avoid problems converting to e or je\nlocal\
      \ decompose_grave_map = {['ѐ'] = 'е' .. GR, ['Ѐ'] = 'Е' .. GR, ['ѝ'] = 'и' .. GR, ['Ѝ'] = 'И' .. GR}\n\n-- True if Cyrillic or decomposed Latin word has no more than one vowel;\n-- includes non-syllabic stems such as льд-; copied from ru-common and modified\n\
      -- to avoid having to import that module (which would slow things down\n-- significantly)\nlocal function is_monosyllabic(word)\n\treturn not rfind(word, \"[\" .. vowels .. \"].*[\" .. vowels .. \"]\")\nend\n\n-- Apply transformations to the Cyrillic to\
      \ more closely match pronunciation.\n-- Return two arguments: the \"original\" text (after decomposing composed\n-- grave characters), and the transformed text. If the two are different,\n-- {{ru-IPA}} should display a \"phonetic respelling\" notation.\
      \ \n-- NOADJ disables special-casing for adjectives in -го, while FORCEADJ forces\n-- special-casing for adjectives, including those in -аго (pre-reform spelling)\n-- and disables checking for exceptions (e.g. много, ого). NOSHTO disables\n-- special-casing\
      \ for что and related words.\nfunction export.apply_tr_fixes(text, noadj, noshto, forceadj)\n\t-- decompose composed grave characters before we convert Cyrillic е to\n\t-- Latin e or je\n\ttext = rsub(text, \"[ѐЀѝЍ]\", decompose_grave_map)\n\n\tlocal origtext\
      \ = text\n\t-- the second half of the if-statement below is an optimization; see above.\n\tif not noadj and text:find(\"го\") then\n\t\tlocal v = {[\"г\"] = \"в\", [\"Г\"] = \"В\"}\n\t\tlocal repl = function(e, g, o, sja) return e .. v[g] .. o .. (sja\
      \ or \"\") end\n\t\t-- Handle какого-нибудь/-либо/-то; must be done first because of an exception\n\t\t-- made for бого-, снего-, etc.\n\t\ttext = rsub(text, \"([кКтТ][аА][кК][оеОЕ\" .. (forceadj and \"аА\" or \"\") .. \"][\\204\\129\\204\\128]?)([гГ])([о\
      О]%-)\", repl)\n\t\tif not forceadj then\n\t\t\t-- handle много\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Мм]но[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle немного, намного\n\t\t\ttext\
      \ = rsub(text, \"%f[%a\\204\\129\\204\\128]([Нн][еа]мно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle до́рого [short form of дорогой, adverb]\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Д\
      д]о[\\204\\129\\204\\128]?ро)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle недо́рого [short form of недорогой, adverb]\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Нн]едо[\\204\\129\\204\\128]?ро)го%f[^%a\\204\\\
      129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle стро́го\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Сс]тро[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle нестро́го\n\t\t\ttext\
      \ = rsub(text, \"%f[%a\\204\\129\\204\\128]([Нн]естро[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle на́строго\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Нн]а[\\204\\129\\204\\128]?стро)г\
      о%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle убо́го\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Уу]бо[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle поло́го\n\
      \t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Пп]оло[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- check for neuter short forms of compound adjectives in -но́гий\n\t\t\tif rfind(text, \"оно[\\204\\\
      129\\204\\128]?го%f[^%a\\204\\129\\204\\128]\") then\n\t\t\t\t-- handle безно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Бб]езно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle босо\
      но́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Бб]осоно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle веслоно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Вв]еслоно\
      [\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle длинноно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Дд]линноно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G\
      \ .. \"о\")\n\t\t\t\t-- handle двуно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Дд]вуно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle коротконо́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\\
      204\\129\\204\\128]([Кк]оротконо[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle кривоно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Кк]ривоно[\\204\\129\\204\\128]?)го%f[^%a\\204\\\
      129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle одноно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Оо]дноно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle пятино́го\n\
      \t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Пп]ятино[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle трёхно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Тт]р[ёе][\\204\\129\\\
      204\\128]?хно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle хромоно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Хх]ромоно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"\
      %1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle четвероно́го\n\t\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Чч]етвероно[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t\t-- handle шестино́го\n\t\t\t\ttext\
      \ = rsub(text, \"%f[%a\\204\\129\\204\\128]([Шш]естино[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\tend\n\t\t\t-- handle пе́го [short form of пе́гий \"piebald\"]\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\\
      204\\128]([Пп]е[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle лого, сого, ого\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([лсЛС]?[Оо][\\204\\129\\204\\128]?)г(о[\\204\\129\\204\\128]?)%f[^%a\\\
      204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"%2\")\n\t\t\t-- handle Того, То́го (but not того or Того́, which have /v/)\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128](То́?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle\
      \ лего\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Лл]е[\\204\\129\\204\\128]?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle игого, огого; note, we substitute TEMP_G for both г's\n\t\t\t-- because otherwise the\
      \ ого- at the beginning gets converted to ово\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([ИиОо])гог(о[\\204\\129\\204\\128]?)%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\" .. TEMP_G .. \"%2\")\n\t\t\t-- handle Диего\n\t\t\ttext = rsub(text,\
      \ \"%f[%a\\204\\129\\204\\128](Дие́?)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G .. \"о\")\n\t\t\t-- handle бо́лого\n\t\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Бб]о[\\204\\129\\204\\128]?ло)го%f[^%a\\204\\129\\204\\128]\", \"%1\" .. TEMP_G\
      \ .. \"о\")\n\t\t\t-- handle *ого-, *его- (e.g. бого-, снего-)\n\t\t\ttext = rsub(text, \"([ео][\\204\\129\\204\\128]?)го%-\", \"%1\" .. TEMP_G .. \"о-\")\n\t\tend\n\t\t--handle genitive/accusative endings, which are spelled -ого/-его/-аго\n\t\t-- (-ogo/-ego/-ago)\
      \ but transliterated -ovo/-evo/-avo; only for adjectives\n\t\t-- and pronouns, excluding words like много, ого (-аго occurs in\n\t\t-- pre-reform spelling); \\204\\129 is an acute accent, \\204\\128 is a grave accent\n\t\tlocal pattern = \"([оеОЕ\" ..\
      \ (forceadj and \"аА\" or \"\") .. \"][\\204\\129\\204\\128]?)([гГ])([оО][\\204\\129\\204\\128]?)\"\n\t\tlocal reflexive = \"([сС][яЯ][\\204\\129\\204\\128]?)\"\n\t\ttext = rsub(text, pattern .. \"%f[^%a\\204\\129\\204\\128]\", repl)\n\t\ttext = rsub(text,\
      \ pattern .. reflexive .. \"%f[^%a\\204\\129\\204\\128]\", repl)\n\t\t-- handle сегодня\n\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Сс]е)г(о[\\204\\129\\204\\128]?дня)%f[^%a\\204\\129\\204\\128]\", \"%1в%2\")\n\t\t-- handle сегодняшн-\n\t\ttext\
      \ = rsub(text, \"%f[%a\\204\\129\\204\\128]([Сс]е)г(о[\\204\\129\\204\\128]?дняшн)\", \"%1в%2\")\n\t\t-- replace TEMP_G with g; must be done after the -go -&gt; -vo changes\n\t\ttext = rsub(text, TEMP_G, \"г\")\n\tend\n\n\t-- the second half of the if-statement\
      \ below is an optimization; see above.\n\tif not noshto and text:find(\"то\") then\n\t\tlocal ch2sh = {[\"ч\"] = \"ш\", [\"Ч\"] = \"Ш\"}\n\t\t-- Handle что\n\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Чч])(то[\\204\\129\\204\\128]?)%f[^%a\\204\\\
      129\\204\\128]\",\n\t\t\tfunction(ch, to) return ch2sh[ch] .. to end)\n\t\t-- Handle чтобы, чтоб\n\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Чч])(то[\\204\\129\\204\\128]?бы?)%f[^%a\\204\\129\\204\\128]\",\n\t\t\tfunction(ch, to) return ch2sh[ch]\
      \ .. to end)\n\t\t-- Handle ничто\n\t\ttext = rsub(text, \"%f[%a\\204\\129\\204\\128]([Нн]и)ч(то[\\204\\129\\204\\128]?)%f[^%a\\204\\129\\204\\128]\", \"%1ш%2\")\n\tend\n\n\t-- Handle мягкий, лёгкий, легчать, etc.\n\ttext = rsub(text, \"([МмЛл][яеё][\\\
      204\\129\\204\\128]?)г([кч])\", \"%1х%2\")\n\n\treturn origtext, text\nend\n\n-- Transliterate after the pronunciation-related transformations of\n-- export.apply_tr_fixes() have been applied. Called from {{ru-IPA}}.\n-- INCLUDE_MONOSYLLABIC_JO_ACCENT\
      \ is as in export.tr().\nfunction export.tr_after_fixes(text, include_monosyllabic_jo_accent)\n\t-- Remove word-final hard sign, either utterance-finally or followed by\n\t-- a non-letter character such as space, comma, period, hyphen, etc.\n\ttext = rsub(text,\
      \ \"[Ъъ]$\", \"\")\n\ttext = rsub(text, \"[Ъъ]([%A])\", \"%1\")\n\n\t-- Convert apostrophe the hard sign between consonant and vowel (i.e.\n\t-- in the places where the hard sign normally occurs in modern text).\n\t-- Apostrophe is sometimes used to indicate\
      \ the hard sign; this may have\n\t-- originated from the forcible removal of the hard sign from printing\n\t-- offices in the 1920's, after the implementation of the Russian\n\t-- orthography reform. The if-statement is an optimization; see below.\n\t\
      if rfind(text, \"'\") then\n\t\ttext = rsub(text, \"(\" .. consonants .. \")'([\" .. lowercase_vowels .. \"])\", \"%1ъ%2\")\n\t\ttext = rsub(text, \"(\" .. consonants .. \")'([\" .. uppercase_vowels .. \"])\", \"%1Ъ%2\")\n\tend\n\n\t-- the if-statement\
      \ below isn't necessary but may speed things up,\n\t-- particularly when include_monosyllabic_jo_accent isn't set, in that\n\t-- in the majority of cases where ё doesn't occur, we avoid a pattern find\n\t-- (in is_monosyllabic()) and three pattern subs.\
      \ The translit module needs\n\t-- to be as fast as possible since it may be called hundreds or\n\t-- thousands of times on some pages.\n\tif rfind(text, \"[Ёё]\") then\n\t\t-- We need to special-case ё after a \"hushing\" consonant, which becomes\n\t\t\
      -- ó (or o), without j. We also need special cases for monosyllabic ё\n\t\t-- when INCLUDE_MONOSYLLABIC_JO_ACCENT isn't set, so we don't add the\n\t\t-- accent mark that we would otherwise include.\n\t\tif not include_monosyllabic_jo_accent and is_monosyllabic(text)\
      \ and not rfind(text, \"^%-\") then\n\t\t\ttext = rsub(text, \"([жшчщЖШЧЩ])ё\",\"%1o\")\n\t\t\ttext = text:gsub(\"ё\", \"jo\")\n\t\t\ttext = text:gsub(\"Ё\", \"Jo\")\n\t\telse\n\t\t\t-- in a nonmonosyllabic word where there is a later stressed vowel\n\t\
      \t\t-- in the same word (e.g. трёхэта́жный), don't put an accent mark on ё.\n\t\t\ttext = rsub(text, \"ё([^ %-]-[\" .. vowels .. \"]́)\", \"jo%1\")\n\t\t\t-- same goes if there are two ё's in a word (трёхколёсный, четырёхзвёздный)\n\t\t\ttext = rsub(text,\
      \ \"ё([^ %-]-ё)\", \"jo%1\")\n\t\t\t-- same goes if this is a prefix (четырёх-)\n\t\t\ttext = rsub(text, \"ё([^ %-]-%-)$\", \"jo%1\")\n\t\t\t-- same goes if there is a stressed vowel *followed* by ё (this is\n\t\t\t-- quite rare but occurs e.g. in А́нд\
      зё \"Anjō (city in Japan)\"\n\t\t\ttext = rsub(text, \"([\" .. vowels .. \"]́[^ %-]-)ё\", \"%1jo\")\n\t\t\t-- handle hushing consonant + ё + another accented vowel (e.g. шёлкопряди́льня)\n\t\t\t-- (already partly converted by previous regexes)\n\t\t\t\
      text = rsub(text, \"([жшчщЖШЧЩ])j\",\"%1\")\n\t\t\t-- handle remaining cases of hushing consonant + ё\n\t\t\ttext = rsub(text, \"([жшчщЖШЧЩ])ё\",\"%1ó\")\n\t\t\t-- conversion of remaining ё will occur as a result of 'tab'.\n\t\tend\n\tend\n\n\t-- ю after\
      \ ж and ш becomes u (e.g. брошюра, жюри)\n\ttext = rsub(text, \"([жшЖШ])ю\",\"%1u\")\n\n\t-- the if-statement below isn't necessary but may speed things up in that\n\t-- in the majority of cases where the letters below don't occur, we avoid\n\t-- six pattern\
      \ subs.\n\tif rfind(text, \"[ЕеѢѣЭэ]\") then\n\t\t-- е after a dash at the beginning of a word becomes e, and э becomes ɛ\n\t\t-- (like after a consonant)\n\t\ttext = rsub(text, \"^(%-)([ЕеѢѣЭэ])\", map_to_plain_e)\n\t\ttext = rsub(text, \"(%s%-)([ЕеѢѣ\
      Ээ])\", map_to_plain_e)\n\t\t-- don't get confused by single quote or parens between consonant and е;\n\t\t-- e.g. Б'''ез''', американ(ец)\n\t\ttext = rsub(text, \"(\" .. consonants .. \"['%(%)]*)([ЕеѢѣЭэ])\", map_to_plain_e)\n\n\t\t-- This is now the\
      \ default\n\t\t-- е after a vowel or at the beginning of a word becomes je, and э becomes e\n\t\t-- text = rsub(text, \"^([ЕеѢѣЭэ])\", map_to_je)\n\t\t-- text = rsub(text, \"(\" .. non_consonants .. \")([ЕеѢѣЭэ])\", map_to_je)\n\t\t-- -- need to do it\
      \ twice in case of sequences of such vowels\n\t\t-- text = rsub(text, \"^([ЕеѢѣЭэ])\", map_to_je)\n\t\t-- text = rsub(text, \"(\" .. non_consonants .. \")([ЕеѢѣЭэ])\", map_to_je)\n\tend\n\n\ttext = (rsub(text,'.',tab))\n\treturn text\nend\n\n-- Transliterates\
      \ text, which should be a single word or phrase. It should\n-- include stress marks, which are then preserved in the transliteration.\n-- ё is a special case: it is rendered (j)ó in multisyllabic words and\n-- monosyllabic words in multi-word phrases,\
      \ but rendered (j)o without an\n-- accent in isolated monosyllabic words, unless INCLUDE_MONOSYLLABIC_JO_ACCENT\n-- is specified. (This is used in conjugation and declension tables.)\n-- NOADJ disables special-casing for adjectives in -го, while FORCEADJ\
      \ forces\n-- special-casing for adjectives and disables checking for exceptions\n-- (e.g. много). NOSHTO disables special-casing for что and related words.\nfunction export.tr(text, lang, sc, include_monosyllabic_jo_accent, noadj, noshto, forceadj)\n\t\
      local origtext, subbed_text = export.apply_tr_fixes(text, noadj, noshto, forceadj)\n\treturn export.tr_after_fixes(subbed_text, include_monosyllabic_jo_accent)\nend\n\n-- translit with various special-case substitutions; NOADJ disables\n-- special-casing\
      \ for adjectives in -го, while FORCEADJ forces special-casing\n-- for adjectives and disables checking for expections (e.g. много).\n-- NOSHTO disables special-casing for что and related words. SUB is used\n-- to implement arbitrary substitutions in the\
      \ Cyrillic text before other\n-- transformations are applied and before translit. It is of the form\n-- FROM/TO,FROM/TO,...\nfunction export.tr_sub(text, include_monosyllabic_jo_accent, noadj, noshto, sub,\n\tforceadj)\n\tif type(text) == 'table' then\
      \ -- called directly from a template\n\t\tinclude_monosyllabic_jo_accent = ine(text.args.include_monosyllabic_jo_accent)\n\t\tnoadj = ine(text.args.noadj)\n\t\tnoshto = ine(text.args.noshto)\n\t\tsub = ine(text.args.sub)\n\t\ttext = text.args[1]\n\tend\n\
      \n\tif sub then\n\t\tlocal subs = rsplit(sub, \",\")\n\t\tfor _, subpair in ipairs(subs) do\n\t\t\tlocal subsplit = rsplit(subpair, \"/\")\n\t\t\ttext = rsub(text, subsplit[1], subsplit[2])\n\t\tend\n\tend\n\n\treturn export.tr(text, nil, nil, include_monosyllabic_jo_accent,\
      \ noadj, noshto, forceadj)\nend\n\n--for adjectives, pronouns\nfunction export.tr_adj(text, include_monosyllabic_jo_accent)\n\tif type(text) == 'table' then -- called directly from a template\n\t\tinclude_monosyllabic_jo_accent = ine(text.args.include_monosyllabic_jo_accent)\n\
      \t\ttext = text.args[1]\n\tend\n\n\t-- we have to include \"forceadj\" because typically when tr_adj() is called\n\t-- from the noun or adjective modules, it's called with suffix ого, which\n\t-- would otherwise trigger the exceptional case and be transliterated\
      \ as ogo\n\treturn export.tr(text, nil, nil, include_monosyllabic_jo_accent, false,\n\t\t\"noshto\", \"forceadj\")\nend\n\nreturn export\n\n-- For Vim, so we get 4-space tabs\n-- vim: set ts=4 sw=4 noet:</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:47.968Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atrans-bottom&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=64626 t=1555362467856065
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:47 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1233.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 608080964, 567841571, 696529055
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="454351" pageid="454351" ns="10" title="Template:trans-bottom"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T20:02:55Z" contentformat="text/x-wiki"
      contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:trans-bottom]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite)
      [Move=Allow only template editors and administrators] (indef..." xml:space="preserve">|}&lt;/div&gt;&lt;/div&gt;&lt;noinclude&gt;[[Category:Column templates|{{PAGENAME}}]]&lt;/noinclude&gt;&lt;noinclude&gt;[[Category:Translation templates|trans bottom]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>'
- recorded: 2015-09-17T18:47:51.233Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fescape_wiki%2Ffrom+trans-top&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:51 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1055 miss (0), cp3004 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 2083905781, 1450524531, 2666570541
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/escape_wiki/from trans-top" to="Template:tracking/ugly hacks/escape wiki/from trans-top" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/escape wiki/from trans-top" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:07:49.597Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Apedia&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45873 t=1555362469505750
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1130'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:49 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 422423786, 733589331, 700455686
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="600622" pageid="600622" ns="10" title="Template:pedia"><revisions><rev user="Rua" timestamp="2014-08-11T23:47:22Z" contentformat="text/x-wiki" contentmodel="wikitext"
      comment="Protected &quot;[[Template:pedia]]&quot;: Counter-productive edit warring: Nothing is broken ([Edit=Allow only administrators] (expires 23:47, 18 August 2014 (UTC)) [Move=Allow only administrators] (expires 23:47, 18 August 2014 (UTC)))" xml:space="preserve">#redirect
      [[Template:projectlink/Wikipedia]]</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:07:49.773Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aprojectlink%2FWikipedia&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53679 t=1555362469674901
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1024'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:49 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 674899318, 824823242, 686714421
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="71571" pageid="71571" ns="10" title="Template:projectlink/Wikipedia"><revisions><rev user="Erutuon" timestamp="2018-02-06T05:17:30Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="documentation template" xml:space="preserve">{{#invoke:wikipedia|projectlink|prefix=w|name=Wikipedia|image=Wikipedia-logo.svg}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2015-09-17T18:47:52.038Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Awikimedia+languages%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:52 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1065 miss (0), cp3003 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 19390965, 147432985, 2666575533
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><query><pages><page _idx=\"4506952\" pageid=\"4506952\" ns=\"828\" title=\"Module:wikimedia languages/templates\"><revisions><rev user=\"CodeCat\" timestamp=\"2014-08-11T01:32:53Z\" comment=\"\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" xml:space=\"preserve\">local export = {}\n\nfunction export.exists(frame, fallback)\n\tlocal args = frame.args\n\tlocal lang = args[1] or error(&quot;Wikimedia language code has not been specified. Please pass parameter\
      \ 1 to the module invocation.&quot;)\n\t\n\tlang = require(&quot;Module:wikimedia languages&quot;)[(fallback and &quot;getByCodeWithFallback&quot; or &quot;getByCode&quot;)](lang)\n\t\n\tif lang then\n\t\treturn &quot;1&quot;\n\telse\n\t\treturn &quot;&quot;\n\
      \tend\nend\n\nfunction export.existsWithFallback(frame)\n\treturn export.exists(frame, true)\nend\n\nfunction export.getByCode(frame, fallback)\n\tlocal args = frame.args\n\tlocal langcode = args[1] or error(&quot;Wikimedia language code has not been specified.\
      \ Please pass parameter 1 to the module invocation.&quot;)\n\tlocal itemname = args[2] or error(&quot;Type of information to look up has not been specified. Please pass parameter 2 to the module invocation.&quot;)\n\t\n\tlocal lang = require(&quot;Module:wikimedia\
      \ languages&quot;)[(fallback and &quot;getByCodeWithFallback&quot; or &quot;getByCode&quot;)](langcode)\n\t\n\tif not lang then\n\t\terror(&quot;The wikimedia language code '&quot; .. langcode .. &quot;' is not valid.&quot;)\n\tend\n\t\n\t-- The item that\
      \ the caller wanted to look up\n\tif itemname == &quot;getAllNames&quot; then\n\t\tlocal index = args[3]; if index == &quot;&quot; then index = nil end\n\t\tindex = tonumber(index or error(&quot;Please specify the numeric index of the desired name.&quot;))\n\
      \t\treturn lang:getAllNames()[index] or &quot;&quot;\n\telseif itemname == &quot;getWiktionaryLanguage&quot; then\n\t\treturn lang:getWiktionaryLanguage():getCode()\n\telseif lang[itemname] then\n\t\tlocal ret = lang[itemname](lang)\n\t\t\n\t\tif type(ret)\
      \ == &quot;string&quot; then\n\t\t\treturn ret\n\t\telse\n\t\t\terror(&quot;The function \\&quot;&quot; .. itemname .. &quot;\\&quot; did not return a string value.&quot;)\n\t\tend\n\telse\n\t\terror(&quot;Requested invalid item name \\&quot;&quot; ..\
      \ itemname .. &quot;\\&quot;.&quot;)\n\tend\nend\n\nfunction export.getByCodeWithFallback(frame)\n\treturn export.getByCode(frame, true)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2015-09-17T18:47:52.235Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alang&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:52 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1065 miss (0), cp3003 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 19391384, 147433108, 2666576325
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="2249840" pageid="2249840" ns="10" title="Template:lang"><revisions><rev user="CodeCat" timestamp="2014-04-09T16:25:33Z" comment="" contentformat="text/x-wiki" contentmodel="wikitext" xml:space="preserve">{{#invoke:script utilities|lang_t}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:50.126Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aspecieslite&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46298 t=1555362470035173
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '976'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:50 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1280.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 574938895, 833198410, 702516770
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="819511" pageid="819511" ns="10" title="Template:specieslite"><revisions><rev user="Robert Ullmann" timestamp="2007-11-14T08:57:01Z" contentformat="text/x-wiki"
      contentmodel="wikitext" comment="[[Template:specieslite]] moved to [[Template:PL:species]]: Project Link name" xml:space="preserve">#REDIRECT [[Template:PL:species]]</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:07:50.302Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3APL%3Aspecies&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53344 t=1555362470203561
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1031'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:50 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1312.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 408090613, 247478980, 694174202
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="603606" pageid="603606" ns="10" title="Template:PL:species"><revisions><rev user="Rua" timestamp="2016-10-13T19:47:50Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:wikipedia|projectlink|prefix=wikispecies|name=Wikispecies|image=Wikispecies-logo.svg}}&lt;noinclude&gt;[[Category:Projectlink subtemplates|species]]&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2015-09-17T18:47:52.826Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=File%3AEB1911_-_Volume_01_-_Page_001_-_1.svg&prop=imageinfo&iiprop=url&iiurlwidth=50
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:52 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1065 miss (0), cp3003 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 19392675, 147433623, 2666579025
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="File:EB1911_-_Volume_01_-_Page_001_-_1.svg" to="File:EB1911 - Volume 01 - Page 001 - 1.svg" /></normalized><pages><page _idx="-1" ns="6" title="File:EB1911 - Volume 01 - Page 001 - 1.svg" missing="" imagerepository="shared"><imageinfo><ii thumburl="https://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/EB1911_-_Volume_01_-_Page_001_-_1.svg/50px-EB1911_-_Volume_01_-_Page_001_-_1.svg.png" thumbwidth="50" thumbheight="18" url="https://upload.wikimedia.org/wikipedia/commons/0/0a/EB1911_-_Volume_01_-_Page_001_-_1.svg" descriptionurl="https://commons.wikimedia.org/wiki/File:EB1911_-_Volume_01_-_Page_001_-_1.svg" /></imageinfo></page></pages></query></api>
- recorded: 2019-04-15T21:07:50.917Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=File%3ACommon+limpets1.jpg&prop=imageinfo&iiprop=url&iiurlwidth=220
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=71275 t=1555362470800889
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '599'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:50 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1287.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 426806074, 825804466, 689856012
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="6" title="File:Common limpets1.jpg" missing="" known="" imagerepository="shared"><imageinfo><ii thumburl="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f4/Common_limpets1.jpg/220px-Common_limpets1.jpg" thumbwidth="220" thumbheight="165" url="https://upload.wikimedia.org/wikipedia/commons/f/f4/Common_limpets1.jpg" descriptionurl="https://commons.wikimedia.org/wiki/File:Common_limpets1.jpg" descriptionshorturl="https://commons.wikimedia.org/w/index.php?curid=3010122" /></imageinfo></page></pages></query></api>
- recorded: 2015-09-17T18:47:53.824Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=File%3AWikipedia-logo.png&prop=imageinfo&iiprop=url&iiurlwidth=15
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=PT:17:Vila_Nova_De_Gaia:41.13:-8.62:v4; WMF-Last-Access=17-Sep-2015
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Age: '0'
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Type: text/xml; charset=utf-8
      Date: Thu, 17 Sep 2015 18:47:53 GMT
      Server: nginx/1.9.4
      Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,X-Forwarded-Proto,Cookie
      X-Analytics: https=1;WMF-Last-Access=17-Sep-2015
      X-Cache: cp1065 miss (0), cp3031 miss (0), cp3040 frontend miss (0)
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.6.5
      X-Varnish: 19394910, 2134694809, 2666583391
    body: <?xml version="1.0"?><api><continue iistart="2010-05-26T15:56:42Z" continue="||" /><query><pages><page _idx="-1" ns="6" title="File:Wikipedia-logo.png" missing="" imagerepository="shared"><imageinfo><ii thumburl="https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Wikipedia-logo.png/15px-Wikipedia-logo.png" thumbwidth="15" thumbheight="15" url="https://upload.wikimedia.org/wikipedia/commons/6/63/Wikipedia-logo.png" descriptionurl="https://commons.wikimedia.org/wiki/File:Wikipedia-logo.png" /></imageinfo></page></pages></query></api>
- recorded: 2019-04-15T21:07:51.516Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=File%3AWikispecies-logo.svg&prop=imageinfo&iiprop=url&iiurlwidth=15
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=60862 t=1555362471410605
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '644'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:51 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 509810847, 634019822, 691063835
    body: <?xml version="1.0"?><api><continue iistart="2006-07-06T18:32:54Z" continue="||" /><query><pages><page _idx="-1" ns="6" title="File:Wikispecies-logo.svg" missing="" known="" imagerepository="shared"><imageinfo><ii thumburl="https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikispecies-logo.svg/15px-Wikispecies-logo.svg.png" thumbwidth="15" thumbheight="18" url="https://upload.wikimedia.org/wikipedia/commons/d/df/Wikispecies-logo.svg" descriptionurl="https://commons.wikimedia.org/wiki/File:Wikispecies-logo.svg" descriptionshorturl="https://commons.wikimedia.org/w/index.php?curid=926316" /></imageinfo></page></pages></query></api>
- recorded: 2019-04-15T21:07:26.128Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Al&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55356 t=1555362446027574
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:26 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1348.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 1007198352, 633560896, 698924579
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4580518" pageid="4580518" ns="10" title="Template:l"><revisions><rev user="Rua" timestamp="2014-10-30T23:36:59Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="CodeCat moved page [[Template:l]] to [[Template:link]] over redirect" xml:space="preserve">#REDIRECT [[Template:link]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:26.292Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alink&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=39089 t=1555362446207254
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:26 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1341.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 188447086, 628552611, 683211755
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="784216" pageid="784216" ns="10" title="Template:link"><revisions><rev user="Dixtosa" timestamp="2016-11-05T20:05:15Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="undo myslef. moving template data to documentation page to see if that works too" xml:space="preserve">{{#invoke:links/templates|l_term_t&lt;noinclude&gt;|demo=term&lt;/noinclude&gt;}}&lt;!--

      --&gt;{{#ifeq:{{PAGENAME}}|RecentChanges||&lt;!--
          --&gt;{{#ifeq:{{{1|}}}|und|[[Category:Undetermined language links]]}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;{{redlink category|{{{1|}}}|{{{2|}}}|template=l}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:26.525Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=99200 t=1555362446372909
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:26 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1222.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 652214035, 556189352, 695943770
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4282542\" pageid=\"4282542\" ns=\"828\" title=\"Module:links/templates\"><revisions><rev user=\"Rua\" timestamp=\"2019-04-03T18:56:49Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\n--[=[\n\tModules used:\n\t[[Module:links]]\n\t[[Module:languages]]\n\t[[Module:scripts]]\n\t[[Module:parameters]]\n\t[[Module:debug]]\n]=]\n\
      \n-- Used in [[Template:l]] and [[Template:m]].\nfunction export.l_term_t(frame)\n\tlocal face = frame.args[\"face\"]\n\tlocal allowSelfLink = frame.args[\"notself\"]; allowSelfLink = not allowSelfLink or allowSelfLink == \"\"\n\t\n\tlocal params = {\n\
      \t\t[1] = {required = true},\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"gloss\"},\n\t\t[\"accel-form\"] = {},\n\t\t[\"accel-nostore\"] = {type = \"boolean\"},\n\t\t[\"accel-translit\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] =\
      \ {},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {alias_of = \"gloss\"},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t}\n\t\n\t-- Compatibility mode for {{term}}.\n\t-- If given a nonempty value, the\
      \ function uses lang= to specify the\n\t-- language, and all the positional parameters shift one number lower.\n\tlocal compat = (frame.args[\"compat\"] or \"\") ~= \"\"\n\t\n\tif compat then\n\t\tparams[\"lang\"] = {},\n\t\ttable.remove(params, 1)\n\t\
      end\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = args[compat and \"lang\" or 1]\n\t\n\t-- Tracking for missing language or und\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"\
      link/no lang\")\n\telseif lang == \"und\" then\n\t\trequire(\"Module:debug\").track(\"link/und\")\n\tend\n\t\n\tlang = lang or \"und\"\n\tlocal sc = args[\"sc\"]\n\t\n\tlocal term = args[(compat and 1 or 2)]\n\tlocal alt = args[(compat and 2 or 3)]\n\t\
      \n\t-- Check parameters\n\tlang = require(\"Module:languages\").getByCode(lang) or\n\t\trequire(\"Module:languages\").err(lang, 1)\n\t\n\tif sc then\n\t\tsc = require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is\
      \ not valid.\")\n\tend\n\t\n\tif not term and not alt and frame.args[\"demo\"] then\n\t\tterm = frame.args[\"demo\"]\n\tend\n\t\n\t-- Forward the information to full_link\n\treturn require(\"Module:links\").full_link( \n\t\t{\n\t\t\tlang = lang, \n\t\t\
      \tsc = sc, \n\t\t\tterm = term,\n\t\t\talt = alt, \n\t\t\tid = args[\"id\"], \n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgenders = args[\"g\"], \n\t\t\tgloss = args[\"gloss\"], \n\t\t\tpos = args[\"pos\"], \n\t\t\tlit = args[\"lit\"],\n\
      \t\t\taccel = args[\"accel-form\"] and {\n\t\t\t\tform = args[\"accel-form\"],\n\t\t\t\tnostore = args[\"accel-nostore\"],\n\t\t\t\ttranslit = args[\"accel-translit\"],\n\t\t\t} or nil,\n\t\t},\n\t\tface,\n\t\tallowSelfLink\n\t)\nend\n\n-- Used in [[Template:ll]].\n\
      function export.ll(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2] = { allow_empty = true },\n\t\t[3] = {},\n\t\t[\"notself\"] = { type = \"boolean\", default = false },\n\t\t[\"id\"] = {},\n\t}\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\tlocal allowSelfLink = not args[\"notself\"]\n\t\n\tlocal lang = args[1]\n\tlang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, 1)\n\t\n\tlocal text = args[2]\n\tlocal\
      \ alt = args[3]\n\tif text == \"\" then\n\t\treturn alt or \"\"\n\tend\n\t\n\tlocal id = args[\"id\"]\n\t\n\treturn require(\"Module:links\").language_link(\n\t\t{\n\t\t\tterm = text,\n\t\t\talt = alt,\n\t\t\tlang = lang,\n\t\t\tid = id\n\t\t},\n\t\tallowSelfLink\n\
      \t)\nend\n\nfunction export.def_t(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn require(\"Module:links\").english_links(args[1])\n\
      end\n\n\nfunction export.linkify_t(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\targs[1] = mw.text.trim(args[1])\n\t\n\tif\
      \ args[1] == \"\" or args[1]:find(\"[[\", nil, true) then\n\t\treturn args[1]\n\telse\n\t\treturn \"[[\" .. args[1] .. \"]]\"\n\tend\nend\n\nfunction export.section_link_t(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame:getParent().args, params)\n\t\n\treturn require(\"Module:links\").section_link(args[1])\nend\n\nfunction export.language_name_link_t(frame)\n\tlocal face = frame.args[\"face\"]\n\tlocal allowSelfLink = frame.args[\"notself\"]; allowSelfLink\
      \ = not allowSelfLink or allowSelfLink == \"\"\n\t\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"gloss\"},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"\
      ] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {alias_of = \"gloss\"},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"w\"] = { type = \"boolean\", default = false },\n\t}\n\t\n\t-- Compatibility mode for {{term}}.\n\t-- If given a nonempty\
      \ value, the function uses lang= to specify the\n\t-- language, and all the positional parameters shift one number lower.\n\tlocal compat = (frame.args[\"compat\"] or \"\") ~= \"\"\n\t\n\tif compat then\n\t\tparams[\"lang\"] = {},\n\t\ttable.remove(params,\
      \ 1)\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = args[compat and \"lang\" or 1]\n\t\n\t-- Tracking for missing language or und\n\tif not lang then\n\t\trequire(\"Module:debug\").track(\"\
      link/no lang\")\n\telseif lang == \"und\" then\n\t\trequire(\"Module:debug\").track(\"link/und\")\n\tend\n\t\n\tlang = lang or \"und\"\n\tlocal sc = args[\"sc\"]\n\t\n\tlocal term = args[(compat and 1 or 2)]\n\tlocal alt = args[(compat and 2 or 3)]\n\t\
      \n\t-- Check parameters\n\tlang = require(\"Module:languages\").getByCode(lang) or\n\t\trequire(\"Module:languages\").err(lang, 1)\n\tif sc then\n\t\tsc = require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not\
      \ valid.\")\n\tend\n\t\n\tif not term and not alt and frame.args[\"demo\"] then\n\t\tterm = frame.args[\"demo\"]\n\tend\n\t\n\t--[[\n\t\tAdd a language name, linked to Wikipedia if the Wikipedia parameter is set to true.\n\t\tForward the information to\
      \ full_link.\n\t]]\n\tlocal language_name = args.w and lang:makeWikipediaLink() or lang:getCanonicalName()\n\t\n\tif term == \"-\" then\n\t\treturn language_name\n\telse\n\t\treturn language_name .. \" \" ..\n\t\t\trequire(\"Module:links\").full_link(\
      \ \n\t\t\t\t{\n\t\t\t\t\tlang = lang, \n\t\t\t\t\tsc = sc, \n\t\t\t\t\tterm = term, \n\t\t\t\t\talt = alt, \n\t\t\t\t\tid = args[\"id\"], \n\t\t\t\t\ttr = args[\"tr\"], \n\t\t\t\t\tts = args[\"ts\"], \n\t\t\t\t\tgenders = args[\"g\"], \n\t\t\t\t\tgloss\
      \ = args[\"gloss\"], \n\t\t\t\t\tpos = args[\"pos\"], \n\t\t\t\t\tlit = args[\"lit\"]\n\t\t\t\t},\n\t\t\t\tface,\n\t\t\t\tallowSelfLink\n\t\t\t)\n\tend\nend\n\nfunction export.light_link_t(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t\
      [2] = { required = true },\n\t\t[3] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"langname\"] = { required = true },\n\t}\n\t\n\tlocal args = frame:getParent().args\n\t\n\tfor key, value in pairs (params) do\n\t\tif value.required then\n\t\t\tif not args[key] then\n\
      \t\t\t\terror('Parameter \"' .. key .. '\" is required.')\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn require(\"Module:links\").light_link{  \n\t\tlangCode = args[1], \n\t\tterm = args[2], \n\t\talt = args[3], \n\t\tscCode = args.sc or \"Latn\",  \n\t\tlangName\
      \ = args.langname\n\t}\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:26.915Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Astring&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=39181 t=1555362446789043
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:26 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1340.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 590974651, 561312159, 701175252
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4099547\" pageid=\"4099547\" ns=\"828\" title=\"Module:string\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-10-18T08:33:33Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"okay for count to be nil\" xml:space=\"preserve\">local str = {}\n\n-- Cannot include null byte.\nlocal UTF8_char = \"[\\1-\\127\\194-\\244][\\128-\\191]*\"\n\n--[[\nulen\n\nCounts UTF-8 characters. Faster\
      \ than mw.ustring.len.\n\nAssumes that the encoding is correct. Unlike mw.ustring.len, does not return nil\nif encoding is invalid.\n\nDoes not count the bytes 192, 193, and 245-255. They are not used in UTF-8 and\nwill not occur if the string is valid.\
      \ They are replaced with the replacement\ncharacter (U+FFFD) on MediaWiki pages.\n--]]\nfunction str.ulen(text)\n\tlocal _, length = string.gsub(text, UTF8_char, \"\")\n\treturn length\nend\n\n--[[\nlen\n\nThis function returns the length of the target\
      \ string.\n\nUsage:\n{{#invoke:string|len|target_string|}}\nOR\n{{#invoke:string|len|s=target_string}}\n\nParameters\n    s: The string whose length to report\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing\
      \ whitespace from the target string.\n]]\nfunction str.len(frame)\n\tlocal new_args = str._getParameters(frame.args, { 's' });\n\tlocal s = new_args['s'] or '';\n\treturn mw.ustring.len(s)\nend\n\n--[[\nsub\n\nThis function returns a substring of the target\
      \ string at specified indices.\n\nUsage:\n{{#invoke:string|sub|target_string|start_index|end_index}}\nOR\n{{#invoke:string|sub|s=target_string|i=start_index|j=end_index}}\n\nParameters\n    s: The string to return a subset of\n    i: The fist index of\
      \ the substring to return, defaults to 1.\n    j: The last index of the string to return, defaults to the last character.\n    \nThe first character of the string is assigned an index of 1.  If either i or j\nis a negative value, it is interpreted the\
      \ same as selecting a character by\ncounting from the end of the string.  Hence, a value of -1 is the same as\nselecting the last character of the string.\n\nIf the requested indices are out of range for the given string, an error is\nreported.\n]]\nfunction\
      \ str.sub(frame)\n\tlocal new_args = str._getParameters(frame.args, { 's', 'i', 'j' });\n\tlocal s = new_args['s'] or '';\n\tlocal i = tonumber(new_args['i']) or 1;\n\tlocal j = tonumber(new_args['j']) or -1;\n\t\n\tlocal len = mw.ustring.len(s);\n\t\n\
      \t-- Convert negatives for range checking\n\tif i &lt; 0 then\n\t\ti = len + i + 1;\n\tend\n\tif j &lt; 0 then\n\t\tj = len + j + 1;\n\tend\n\t\n\tif i &gt; len or j &gt; len or i &lt; 1 or j &lt; 1 then\n\t\treturn str._error('String subset index out\
      \ of range');\n\tend\n\tif j &lt; i then\n\t\treturn str._error('String subset indices out of order');\n\tend\n\t\n\treturn mw.ustring.sub(s, i, j)\nend\n\n--[[\nThis function implements that features of {{str sub old}} and is kept in order\nto maintain\
      \ these older templates.\n]]\nfunction str.sublength(frame)\n\tlocal i = tonumber(frame.args.i) or 0\n\tlocal len = tonumber(frame.args.len)\n\treturn mw.ustring.sub(frame.args.s, i + 1, len and (i + len))\nend\n\n--[[\nmatch\n\nThis function returns a\
      \ substring from the source string that matches a\nspecified pattern.\n\nUsage:\n{{#invoke:string|match|source_string|pattern_string|start_index|match_number|plain_flag|nomatch_output}}\nOR\n{{#invoke:string|pos|s=source_string|pattern=pattern_string|start=start_index\n\
      \    |match=match_number|plain=plain_flag|nomatch=nomatch_output}}\n\nParameters\n    s: The string to search\n    pattern: The pattern or string to find within the string\n    start: The index within the source string to start the search.  The first\n\
      \        character of the string has index 1.  Defaults to 1.\n    match: In some cases it may be possible to make multiple matches on a single\n        string.  This specifies which match to return, where the first match is\n        match= 1.  If a negative\
      \ number is specified then a match is returned\n        counting from the last match.  Hence match = -1 is the same as requesting\n        the last match.  Defaults to 1.\n    plain: A flag indicating that the pattern should be understood as plain\n  \
      \      text.  Defaults to false.\n    nomatch: If no match is found, output the \"nomatch\" value rather than an error.\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from each string.  In\
      \ some circumstances this is desirable, in\nother cases one may want to preserve the whitespace.\n\nIf the match_number or start_index are out of range for the string being queried, then\nthis function generates an error.  An error is also generated if\
      \ no match is found.\nIf one adds the parameter ignore_errors=true, then the error will be suppressed and\nan empty string will be returned on any failure.\n\nFor information on constructing Lua patterns, a form of [regular expression], see:\n\n* http://www.lua.org/manual/5.1/manual.html#5.4.1\n\
      * http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Patterns\n* http://www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual#Ustring_patterns\n\n]]\nfunction str.match(frame)\n\tlocal new_args = str._getParameters(frame.args,\
      \ { 's', 'pattern', 'start', 'match', 'plain', 'nomatch' });\n\tlocal s = new_args['s'] or '';\n\tlocal start = tonumber(new_args['start']) or 1;\n\tlocal plain_flag = str._getBoolean(new_args['plain'] or false);\n\tlocal pattern = new_args['pattern']\
      \ or '';\n\tlocal match_index = math.floor(tonumber(new_args['match']) or 1);\n\tlocal nomatch = new_args['nomatch'];\n\t\n\tif s == '' then\n\t\treturn str._error('Target string is empty');\n\tend\n\tif pattern == '' then\n\t\treturn str._error('Pattern\
      \ string is empty');\n\tend\n\tif math.abs(start) &lt; 1 or math.abs(start) &gt; mw.ustring.len(s) then\n\t\treturn str._error('Requested start is out of range');\n\tend\n\tif match_index == 0 then\n\t\treturn str._error('Match index is out of range');\n\
      \tend\n\tif plain_flag then\n\t\tpattern = str.pattern_escape(pattern);\n\tend\n\t\n\tlocal result\n\tif match_index == 1 then\n\t\t-- Find first match is simple case\n\t\tresult = mw.ustring.match(s, pattern, start)\n\telse\n\t\tif start &gt; 1 then\n\
      \t\t\ts = mw.ustring.sub(s, start);\n\t\tend\n\t\t\n\t\tlocal iterator = mw.ustring.gmatch(s, pattern);\n\t\tif match_index &gt; 0 then\n\t\t\t-- Forward search\n\t\t\tfor w in iterator do\n\t\t\t\tmatch_index = match_index - 1;\n\t\t\t\tif match_index\
      \ == 0 then\n\t\t\t\t\tresult = w;\n\t\t\t\t\tbreak;\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\t-- Reverse search\n\t\t\tlocal result_table = {};\n\t\t\tlocal count = 1;\n\t\t\tfor w in iterator do\n\t\t\t\tresult_table[count] = w;\n\t\t\t\tcount = count\
      \ + 1;\n\t\t\tend\n\t\t\t\n\t\t\tresult = result_table[count + match_index];\n\t\tend\n\tend\n\t\n\tif result == nil then\n\t\tif nomatch == nil then\n\t\t\treturn str._error('Match not found');\n\t\telse\n\t\t\treturn nomatch;\n\t\tend\n\telse\n\t\treturn\
      \ result;\n\tend\nend\n\n--[[\npos\n\nThis function returns a single character from the target string at position pos.\n\nUsage:\n{{#invoke:string|pos|target_string|index_value}}\nOR\n{{#invoke:string|pos|target=target_string|pos=index_value}}\n\nParameters\n\
      \    target: The string to search\n    pos: The index for the character to return\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from the target string.  In some circumstances this is desirable,\
      \ in\nother cases one may want to preserve the whitespace.\n\nThe first character has an index value of 1.\n\nIf one requests a negative value, this function will select a character by counting backwards\nfrom the end of the string.  In other words pos\
      \ = -1 is the same as asking for the last character.\n\nA requested value of zero, or a value greater than the length of the string returns an error.\n]]\nfunction str.pos(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'target', 'pos' });\n\
      \tlocal target_str = new_args['target'] or '';\n\tlocal pos = tonumber(new_args['pos']) or 0;\n\t\n\tif pos == 0 or math.abs(pos) &gt; mw.ustring.len(target_str) then\n\t\treturn str._error('String index out of range');\n\tend\n\t\n\treturn mw.ustring.sub(target_str,\
      \ pos, pos);\nend\n\n--[[\nstr_find\n\nThis function duplicates the behavior of {{str_find}}, including all of its quirks.\nThis is provided in order to support existing templates, but is NOT RECOMMENDED for\nnew code and templates.  New code is recommended\
      \ to use the \"find\" function instead.\n\nReturns the first index in \"source\" that is a match to \"target\".  Indexing is 1-based,\nand the function returns -1 if the \"target\" string is not present in \"source\".\n\nImportant Note: If the \"target\"\
      \ string is empty / missing, this function returns a\nvalue of \"1\", which is generally unexpected behavior, and must be accounted for\nseparatetly.\n]]\nfunction str.str_find(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'source', 'target'\
      \ });\n\tlocal source_str = new_args['source'] or '';\n\tlocal target_str = new_args['target'] or '';\n\t\n\tif target_str == '' then\n\t\treturn 1;\n\tend\n\t\n\tlocal start = mw.ustring.find(source_str, target_str, 1, true)\n\tif start == nil then\n\t\
      \tstart = -1\n\tend\n\t\n\treturn start\nend\n\n--[[\nfind\n\nThis function allows one to search for a target string or pattern within another\nstring.\n\nUsage:\n{{#invoke:string|find|source_str|target_string|start_index|plain_flag}}\nOR\n{{#invoke:string|find|source=source_str|target=target_str|start=start_index|plain=plain_flag}}\n\
      \nParameters\n    source: The string to search\n    target: The string or pattern to find within source\n    start: The index within the source string to start the search, defaults to 1\n    plain: Boolean flag indicating that target should be understood\
      \ as plain\n        text and not as a Lua style regular expression, defaults to true\n\nIf invoked using named parameters, Mediawiki will automatically remove any leading or\ntrailing whitespace from the parameter.  In some circumstances this is desirable,\
      \ in\nother cases one may want to preserve the whitespace.\n\nThis function returns the first index &gt;= \"start\" where \"target\" can be found\nwithin \"source\".  Indices are 1-based.  If \"target\" is not found, then this\nfunction returns an empty\
      \ string.  If either \"source\" or \"target\" are missing / empty, this\nfunction also returns an empty string.\n\nThis function should be safe for UTF-8 strings.\n]]\nfunction str.find(frame)\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2]\
      \ = { required = true },\n\t\t[3] = { type = \"number\" },\n\t\t[4] = { type = \"boolean\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\treturn mw.ustring.find(args[1], args[2], args[3], args[4])\nend\n\n\
      --[[\nreplace\n\nThis function allows one to replace a target string or pattern within another\nstring.\n\nUsage:\n{{#invoke:string|replace|source_str|pattern_string|replace_string|replacement_count|plain_flag}}\nOR\n{{#invoke:string|replace|source=source_string|pattern=pattern_string|replace=replace_string|\n\
      \   count=replacement_count|plain=plain_flag}}\n\nParameters\n    source: The string to search\n    pattern: The string or pattern to find within source\n    replace: The replacement text\n    count: The number of occurences to replace, defaults to all.\n\
      \    plain: Boolean flag indicating that pattern should be understood as plain\n        text and not as a Lua style regular expression, defaults to true\n]]\nfunction str.replace(frame)\n\tlocal new_args = str._getParameters(frame.args, { 'source', 'pattern',\
      \ 'replace', 'count', 'plain' });\n\tlocal source_str = new_args['source'] or '';\n\tlocal pattern = new_args['pattern'] or '';\n\tlocal replace = new_args['replace'] or '';\n\tlocal count = tonumber(new_args['count']);\n\tlocal plain = new_args['plain']\
      \ or true;\n\t\n\tif source_str == '' or pattern == '' then\n\t\treturn source_str;\n\tend\n\tplain = str._getBoolean(plain);\n\t\n\tif plain then\n\t\tpattern = str.pattern_escape(pattern);\n\t\treplace = mw.ustring.gsub(replace, \"%%\", \"%%%%\"); --Only\
      \ need to escape replacement sequences.\n\tend\n\t\n\tlocal result;\n\t\n\tresult = mw.ustring.gsub(source_str, pattern, replace, count);\n\t\n\treturn result;\nend\n\n\nfunction str.gsub(frame)\n\tlocal params = {\n\t\t[1] = { required = true, allow_empty\
      \ = true },\n\t\t[2] = { required = true, allow_empty = true },\n\t\t[3] = { required = true, allow_empty = true },\n\t\t[4] = { type = \"number\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\treturn (mw.ustring.gsub(args[1],\
      \ args[2], args[3], args[4]))\nend\n\n\n--[[\n    simple function to pipe string.rep to templates.\n]]\n\nfunction str.rep(frame)\n\tlocal repetitions = tonumber(frame.args[2])\n\tif not repetitions then\n\t\treturn str._error('function rep expects a number\
      \ as second parameter, received \"' .. (frame.args[2] or '') .. '\"')\n\tend\n\treturn string.rep(frame.args[1] or '', repetitions)\nend\n\nfunction str.lower(frame)\n\tlocal text = frame.args[1] or ''\n\treturn mw.ustring.lower(text)\nend\n\nstr.lc =\
      \ str.lower\n\n--[[\nHelper function that populates the argument list given that user may need to use a mix of\nnamed and unnamed parameters.  This is relevant because named parameters are not\nidentical to unnamed parameters due to string trimming, and\
      \ when dealing with strings\nwe sometimes want to either preserve or remove that whitespace depending on the application.\n]]\nfunction str._getParameters(frame_args, arg_list)\n\tlocal new_args = {};\n\tlocal index = 1;\n\tlocal value;\n\t\n\tfor _, arg\
      \ in ipairs(arg_list) do\n\t\tvalue = frame_args[arg]\n\t\tif value == nil then\n\t\t\tvalue = frame_args[index];\n\t\t\tindex = index + 1;\n\t\tend\n\t\tnew_args[arg] = value;\n\tend\n\t\n\treturn new_args;\nend\n\n--[[\nHelper function to handle error\
      \ messages.\n]]\nfunction str._error(error_str)\n\tlocal frame = mw.getCurrentFrame();\n\tlocal error_category = frame.args.error_category or 'Errors reported by Module String';\n\tlocal ignore_errors = frame.args.ignore_errors or false;\n\tlocal no_category\
      \ = frame.args.no_category or false;\n\t\n\tif str._getBoolean(ignore_errors) then\n\t\treturn '';\n\tend\n\t\n\tlocal error_str = '&lt;strong class=\"error\"&gt;String Module Error: ' .. error_str .. '&lt;/strong&gt;';\n\tif error_category ~= '' and not\
      \ str._getBoolean(no_category) then\n\t\terror_str = '[[Category:' .. error_category .. ']]' .. error_str;\n\tend\n\t\n\treturn error_str;\nend\n\n--[[\nHelper Function to interpret boolean strings\n]]\nfunction str._getBoolean(boolean_str)\n\tlocal boolean_value;\n\
      \t\n\tif type(boolean_str) == 'string' then\n\t\tboolean_str = boolean_str:lower();\n\t\tif boolean_str == 'false' or boolean_str == 'no' or boolean_str == '0'\n\t\t\t\tor boolean_str == '' then\n\t\t\tboolean_value = false;\n\t\telse\n\t\t\tboolean_value\
      \ = true;\n\t\tend\n\telseif type(boolean_str) == 'boolean' then\n\t\tboolean_value = boolean_str;\n\telse\n\t\terror('No boolean value found');\n\tend\n\treturn boolean_value\nend\n\n--[[\nHelper function that escapes all pattern characters – ().%+-*?[^$]\
      \ – so that they will be treated\nas plain text.\n]]\nfunction str.pattern_escape(pattern_str)\n\tlocal invoked = false\n\t\n\tif type(pattern_str) == \"table\" then\n\t\tif pattern_str.args then\n\t\t\tlocal frame = pattern_str\n\t\t\tinvoked = true\n\
      \t\t\t\n\t\t\tif frame.args[1] then\n\t\t\t\tpattern_str = frame.args[1]\n\t\t\telse\n\t\t\t\tpattern_str = frame:getParent().args[1]\n\t\t\tend\n\t\telse\n\t\t\terror(\"First argument to pattern_escape should be a string, a number, or a frame object.\"\
      )\n\t\tend\n\telseif not (type(pattern_str) == \"string\" or type(pattern_str) == \"number\") then\n\t\terror(\"First argument to pattern_escape should be a string or a number.\")\n\tend\n\t\n\tif invoked then\n\t\tlocal escaped = mw.ustring.gsub(pattern_str,\
      \ \"([%(%)%.%%%+%-%*%?%[%^%$%]])\", \"%%%1\")\n\t\treturn escaped\n\telse\n\t\treturn mw.ustring.gsub(pattern_str, \"([%(%)%.%%%+%-%*%?%[%^%$%]])\", \"%%%1\");\n\tend\nend\n\nfunction str.count(text, pattern, plain)\n\tif not (type(text) == \"string\"\
      \ or type(text) == \"number\") then\n\t\terror('The first argument to the function \"count\" must be a string or a number, not a ' .. type(text) .. '.')\n\tend\n\t\n\tif not (type(pattern) == \"string\" or type(pattern) == \"number\") then\n\t\terror('The\
      \ first argument to the function \"count\" must be a string or a number, not a ' .. type(text) .. '.')\n\tend\n\t\n\tif plain then\n\t\tpattern = str.pattern_escape(pattern)\n\tend\n\t\n\tlocal _, count = mw.ustring.gsub(text, pattern, \"\")\n\t\n\treturn\
      \ count\nend\n\nfunction str.plain_gsub(text, pattern, replacement)\n\tlocal invoked = false\n\t\n\tif type(text) == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1]\
      \ = {},\n\t\t\t\t[2] = {},\n\t\t\t\t[3] = { allow_empty = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\t\t\treplacement = args[3]\n\t\t\
      else\n\t\t\terror(\"If the first argument to plain_gsub is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not (type(pattern) == \"string\" or type(pattern) == \"number\") then\n\t\t\terror(\"The second argument to plain_gsub should be\
      \ a string or a number.\")\n\t\tend\n\t\t\n\t\tif not (type(replacement) == \"string\" or type(replacement) == \"number\") then\n\t\t\terror(\"The third argument to plain_gsub should be a string or a number.\")\n\t\tend\n\tend\n\t\n\tpattern = str.pattern_escape(pattern)\n\
      \t\n\tif invoked then\n\t\ttext = mw.ustring.gsub(text, pattern, replacement)\n\t\treturn text\n\telse\n\t\treturn mw.ustring.gsub(text, pattern, replacement)\n\tend\nend\n\nfunction str.matchToArray(text, pattern)\n\tlocal invoked = false\n\t\n\tif type(text)\
      \ == \"table\" then\n\t\tinvoked = true\n\t\t\n\t\tif text.args then\n\t\t\tlocal frame = text\n\t\t\t\n\t\t\tlocal params = {\n\t\t\t\t[1] = { required = true },\n\t\t\t\t[2] = { required = true },\n\t\t\t}\n\t\t\t\n\t\t\tlocal args = require(\"Module:parameters\"\
      ).process(frame.args, params)\n\t\t\t\n\t\t\ttext = args[1]\n\t\t\tpattern = args[2]\n\t\telse\n\t\t\terror(\"If the first argument to matchToArray is a table, it should be a frame object.\")\n\t\tend\n\telse\n\t\tif not (type(pattern) == \"string\" or\
      \ type(pattern) == \"number\") then\n\t\t\terror(\"The second argument to matchToArray should be a string or a number.\")\n\t\tend\n\tend\n\t\n\tlocal matches = {}\n\tlocal i = 0\n\tfor match in mw.ustring.gmatch(text, pattern) do\n\t\ti = i + 1\n\t\t\
      matches[i] = match\n\tend\n\t\n\tif i &gt; 0 then\n\t\tif invoked then\n\t\t\treturn table.concat(matches, \", \")\n\t\telse\n\t\t\treturn matches\n\t\tend\n\telse\n\t\tif invoked then\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn nil\n\t\tend\n\tend\nend\n\
      \n--[=[\n\tSimilar to gmatch, but it returns the count of the match in addition to the\n\tlist of captures, something like ipairs().\n\t\n\tIf the pattern doesn't contain any captures, the whole match is returned.\n\t\n\tInvoke thus:\n\t\n\t\tfor i, whole_match\
      \ in require(\"Module:string\").imatch(text, pattern) do\n\t\t\t[ do something with i and whole_match ]\n\t\tend\n\t\n\tor\n\t\n\t\tfor i, capture1[, capture2[, capture3[, ...]]] in require(\"Module:string\").imatch(text, pattern) do\n\t\t\t[ do something\
      \ with i and capture1 ]\n\t\tend\n\t\n\tFor example, this code\n\t\tfor i, whole_match in require(\"Module:string\").imatch(\"a b c\", \"[a-z]\") do\n\t\t\tmw.log(i, whole_match)\n\t\tend\n\twill log\n\t\t1\ta\n\t\t2\tb\n\t\t3\tc\n]=]\nfunction str.imatch(text,\
      \ pattern, pos, plain, use_basic_Lua_function)\n\tlocal i = 0\n\tpos = pos or 0\n\tif not string.find(pattern, \"%b()\") then\n\t\tpattern = \"(\" .. pattern .. \")\"\n\tend\n\tlocal find = use_basic_Lua_function and string.find or mw.ustring.find\n\t\
      return function()\n\t\ti = i + 1\n\t\tlocal return_values = { find(text, pattern, pos, plain) }\n\t\tlocal j = return_values[2]\n\t\t\n\t\tif return_values[3] then\n\t\t\tpos = j + 1\n\t\t\t-- Skip the first two returned values, which are the indices of\
      \ the\n\t\t\t-- whole match.\n\t\t\treturn i, unpack(return_values, 3)\n\t\tend\n\tend\nend\n\nfunction str.escapebytes(s)\n\treturn (string.gsub(s,\n\t\t'.',\n\t\tfunction(char)\n\t\t\treturn ('\\\\%03d'):format(string.byte(char))\n\t\tend))\nend\n\n\
      function str.URIdecode(frame)\n\treturn mw.uri.decode(frame.args[1], frame.args[2] or \"PATH\")\nend\n\nreturn str</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:27.126Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Atable&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53180 t=1555362447000196
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:27 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 205695441, 829040935, 688899700
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5122966\" pageid=\"5122966\" ns=\"828\" title=\"Module:table\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-14T04:16:37Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"add deepEquals, deepEqualsList for deep comparisons\" xml:space=\"preserve\">--[[\n------------------------------------------------------------------------------------\n--                      table (formerly\
      \ TableTools)                               --\n--                                                                                --\n-- This module inclcudes a number of functions for dealing with Lua tables.        --\n-- It is a meta-module, meant to\
      \ be called from other Lua modules, and should     --\n-- not be called directly from #invoke.                                           --\n------------------------------------------------------------------------------------\n--]]\n\n--[[\n\tInserting\
      \ new values into a table using a local \"index\" variable, which is\n\tincremented each time, is faster than using \"table.insert(t, x)\" or\n\t\"t[#t + 1] = x\". See the talk page.\n]]\n\nlocal libraryUtil = require('libraryUtil')\n\nlocal export = {}\n\
      \n-- Define often-used variables and functions.\nlocal floor = math.floor\nlocal infinity = math.huge\nlocal checkType = libraryUtil.checkType\nlocal checkTypeMulti = libraryUtil.checkTypeMulti\n\nlocal function _check(funcName, expectType)\n\tif type(expectType)\
      \ == \"string\" then\n\t\treturn function(argIndex, arg, nilOk)\n\t\t\tcheckType(funcName, argIndex, arg, expectType, nilOk)\n\t\tend\n\telse\n\t\treturn function(argIndex, arg, expectType, nilOk)\n\t\t\tif type(expectType) == \"table\" then\n\t\t\t\t\
      checkTypeMulti(funcName, argIndex, arg, expectType, nilOk)\n\t\t\telse\n\t\t\t\tcheckType(funcName, argIndex, arg, expectType, nilOk)\n\t\t\tend\n\t\tend\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- isPositiveInteger\n--\n-- This function returns true if the given value is a positive integer, and false\n-- if not. Although it doesn't operate on tables, it is included here as it is\n-- useful for determining whether a given table key is in the array\
      \ part or the\n-- hash part of a table.\n------------------------------------------------------------------------------------\n--]]\nfunction export.isPositiveInteger(v)\n\treturn type(v) == 'number' and v &gt;= 1 and floor(v) == v and v &lt; infinity\n\
      end\n\n--[[\n------------------------------------------------------------------------------------\n-- isNan\n--\n-- This function returns true if the given number is a NaN value, and false\n-- if not. Although it doesn't operate on tables, it is included\
      \ here as it is\n-- useful for determining whether a value can be a valid table key. Lua will\n-- generate an error if a NaN is used as a table key.\n------------------------------------------------------------------------------------\n--]]\nfunction export.isNan(v)\n\
      \tif type(v) == 'number' and tostring(v) == '-nan' then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- shallowClone\n--\n-- This returns a clone of\
      \ a table. The value returned is a new table, but all\n-- subtables and functions are shared. Metamethods are respected, but the returned\n-- table will have no metatable of its own.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.shallowClone(t)\n\tlocal ret = {}\n\tfor k, v in pairs(t) do\n\t\tret[k] = v\n\tend\n\treturn ret\nend\n\n--[[\nShallow copy\n]]\nfunction export.shallowcopy(orig)\n\tlocal orig_type = type(orig)\n\tlocal copy\n\tif orig_type == 'table'\
      \ then\n\t\tcopy = {}\n\t\tfor orig_key, orig_value in pairs(orig) do\n\t\t\tcopy[orig_key] = orig_value\n\t\tend\n\telse -- number, string, boolean, etc\n\t\tcopy = orig\n\tend\n\treturn copy\nend\n\n--[[\n\tRecursive deep copy function\n\tEquivalent\
      \ to mw.clone?\n]]\nlocal function deepcopy(orig, includeMetatable, already_seen)\n\t-- Stores copies of tables indexed by the original table.\n\talready_seen = already_seen or {}\n\t\n\tlocal copy = already_seen[orig]\n\tif copy ~= nil then\n\t\treturn\
      \ copy\n\tend\n\t\n\tif type(orig) == 'table' then\n\t\tcopy = {}\n\t\tfor orig_key, orig_value in pairs(orig) do\n\t\t\tcopy[deepcopy(orig_key, includeMetatable, already_seen)] = deepcopy(orig_value, includeMetatable, already_seen)\n\t\tend\n\t\talready_seen[orig]\
      \ = copy\n\t\t\n\t\tif includeMetatable then\n\t\t\tlocal mt = getmetatable(orig)\n\t\t\tif mt ~= nil then\n\t\t\t\tlocal mt_copy = deepcopy(mt, includeMetatable, already_seen)\n\t\t\t\tsetmetatable(copy, mt_copy)\n\t\t\tend\n\t\tend\n\telse -- number,\
      \ string, boolean, etc\n\t\tcopy = orig\n\tend\n\treturn copy\nend\n\nfunction export.deepcopy(orig, noMetatable, already_seen)\n\tcheckType(\"deepcopy\", 3, already_seen, \"table\", true)\n\t\n\treturn deepcopy(orig, not noMetatable, already_seen)\nend\n\
      \n--[[\n------------------------------------------------------------------------------------\n-- removeDuplicates\n--\n-- This removes duplicate values from an array. Non-positive-integer keys are\n-- ignored. The earliest value is kept, and all subsequent\
      \ duplicate values are\n-- removed, but otherwise the array order is unchanged.\n------------------------------------------------------------------------------------\n--]]\nfunction export.removeDuplicates(t)\n\tcheckType('removeDuplicates', 1, t, 'table')\n\
      \tlocal isNan = export.isNan\n\tlocal ret, exists = {}, {}\n\tlocal index = 1\n\tfor _, v in ipairs(t) do\n\t\tif isNan(v) then\n\t\t\t-- NaNs can't be table keys, and they are also unique, so we don't need to check existence.\n\t\t\tret[index] = v\n\t\
      \t\tindex = index + 1\n\t\telse\n\t\t\tif not exists[v] then\n\t\t\t\tret[index] = v\n\t\t\t\tindex = index + 1\n\t\t\t\texists[v] = true\n\t\t\tend\n\t\tend\n\tend\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- numKeys\n--\n-- This takes a table and returns an array containing the numbers of any numerical\n-- keys that have non-nil values, sorted in numerical order.\n------------------------------------------------------------------------------------\n--]]\n\
      function export.numKeys(t, checked)\n\tif not checked then\n\t\tcheckType('numKeys', 1, t, 'table')\n\tend\n\tlocal isPositiveInteger = export.isPositiveInteger\n\tlocal nums = {}\n\tlocal index = 1\n\tfor k, _ in pairs(t) do\n\t\tif isPositiveInteger(k)\
      \ then\n\t\t\tnums[index] = k\n\t\t\tindex = index + 1\n\t\tend\n\tend\n\ttable.sort(nums)\n\treturn nums\nend\n\nfunction export.maxIndex(t)\n\tcheckType('maxIndex', 1, t, 'table')\n\tlocal positiveIntegerKeys = export.numKeys(t)\n\tif positiveIntegerKeys[1]\
      \ then\n\t\treturn math.max(unpack(positiveIntegerKeys))\n\telse\n\t\treturn 0 -- ???\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- affixNums\n--\n-- This takes a table and returns an array\
      \ containing the numbers of keys with the\n-- specified prefix and suffix.\n-- affixNums({a1 = 'foo', a3 = 'bar', a6 = 'baz'}, \"a\")\n--\t\t↓\n-- {1, 3, 6}.\n------------------------------------------------------------------------------------\n--]]\n\
      function export.affixNums(t, prefix, suffix)\n\tlocal check = _check('affixNums')\n\tcheck(1, t, 'table')\n\tcheck(2, prefix, 'string', true)\n\tcheck(3, suffix, 'string', true)\n\t\n\tlocal function cleanPattern(s)\n\t\t-- Cleans a pattern so that the\
      \ magic characters ()%.[]*+-?^$ are interpreted literally.\n\t\ts = s:gsub('([%(%)%%%.%[%]%*%+%-%?%^%$])', '%%%1')\n\t\treturn s\n\tend\n\t\n\tprefix = prefix or ''\n\tsuffix = suffix or ''\n\tprefix = cleanPattern(prefix)\n\tsuffix = cleanPattern(suffix)\n\
      \tlocal pattern = '^' .. prefix .. '([1-9]%d*)' .. suffix .. '$'\n\t\n\tlocal nums = {}\n\tlocal index = 1\n\tfor k, _ in pairs(t) do\n\t\tif type(k) == 'string' then\n\t\t\tlocal num = mw.ustring.match(k, pattern)\n\t\t\tif num then\n\t\t\t\tnums[index]\
      \ = tonumber(num)\n\t\t\t\tindex = index + 1\n\t\t\tend\n\t\tend\n\tend\n\ttable.sort(nums)\n\treturn nums\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- numData\n--\n-- Given a table with keys like\
      \ (\"foo1\", \"bar1\", \"foo2\", \"baz2\"), returns a table\n-- of subtables in the format\n-- { [1] = {foo = 'text', bar = 'text'}, [2] = {foo = 'text', baz = 'text'} }\n-- Keys that don't end with an integer are stored in a subtable named \"other\".\n\
      -- The compress option compresses the table so that it can be iterated over with\n-- ipairs.\n------------------------------------------------------------------------------------\n--]]\nfunction export.numData(t, compress)\n\tlocal check = _check('numData')\n\
      \tcheck(1, t, 'table')\n\tcheck(2, compress, 'boolean', true)\n\t\n\tlocal ret = {}\n\tfor k, v in pairs(t) do\n\t\tlocal prefix, num = tostring(k):match('^([^0-9]*)([1-9][0-9]*)$')\n\t\tif num then\n\t\t\tnum = tonumber(num)\n\t\t\tlocal subtable = ret[num]\
      \ or {}\n\t\t\tif prefix == '' then\n\t\t\t\t-- Positional parameters match the blank string; put them at the start of the subtable instead.\n\t\t\t\tprefix = 1\n\t\t\tend\n\t\t\tsubtable[prefix] = v\n\t\t\tret[num] = subtable\n\t\telse\n\t\t\tlocal subtable\
      \ = ret.other or {}\n\t\t\tsubtable[k] = v\n\t\t\tret.other = subtable\n\t\tend\n\tend\n\tif compress then\n\t\tlocal other = ret.other\n\t\tret = export.compressSparseArray(ret)\n\t\tret.other = other\n\tend\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n\
      -- compressSparseArray\n--\n-- This takes an array with one or more nil values, and removes the nil values\n-- while preserving the order, so that the array can be safely traversed with\n-- ipairs.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.compressSparseArray(t)\n\tcheckType('compressSparseArray', 1, t, 'table')\n\tlocal ret = {}\n\tlocal index = 1\n\tlocal nums = export.numKeys(t)\n\tfor _, num in ipairs(nums) do\n\t\tret[index] = t[num]\n\t\tindex = index + 1\n\t\
      end\n\treturn ret\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- sparseIpairs\n--\n-- This is an iterator for sparse arrays. It can be used like ipairs, but can\n-- handle nil values.\n------------------------------------------------------------------------------------\n\
      --]]\nfunction export.sparseIpairs(t)\n\tcheckType('sparseIpairs', 1, t, 'table')\n\tlocal nums = export.numKeys(t)\n\tlocal i = 0\n\treturn function()\n\t\ti = i + 1\n\t\tlocal key = nums[i]\n\t\tif key then\n\t\t\treturn key, t[key]\n\t\telse\n\t\t\t\
      return nil, nil\n\t\tend\n\tend\nend\n\n--[[\n------------------------------------------------------------------------------------\n-- size\n--\n-- This returns the size of a key/value pair table. It will also work on arrays,\n-- but for arrays it is more\
      \ efficient to use the # operator.\n------------------------------------------------------------------------------------\n--]]\nfunction export.size(t)\n\tcheckType('size', 1, t, 'table')\n\tlocal i = 0\n\tfor _ in pairs(t) do\n\t\ti = i + 1\n\tend\n\t\
      return i\nend\n\n--[[\n-- This returns the length of a table, or the first integer key n counting from\n-- 1 such that t[n + 1] is nil. It is similar to the operator #, but may return\n-- a different value when there are gaps in the array portion of the\
      \ table.\n-- Intended to be used on data loaded with mw.loadData. For other tables, use #.\n--]]\nfunction export.length(t)\n\tlocal i = 0\n\trepeat\n\t\ti = i + 1\n\tuntil t[i] == nil\n\treturn i - 1\nend\n\n--[[\nTakes table and a value to be found.\n\
      If the value is in the array portion of the table, return true.\nIf the value is in the hashmap or not in the table, return false.\n]]\nfunction export.contains(list, x)\n\tfor _, v in ipairs(list) do\n\t\tif v == x then return true end\n\tend\n\treturn\
      \ false\nend\n\n--[[\nRecursively compare two values that may be tables, including tables with\nnested tables as values. Return true if both values are structurally equal.\nNote that this handles arbitary levels of nesting. If all tables are known\nto\
      \ be lists (with only integral keys), use export.deepEqualsList, which will\nbe more efficient.\n\nNOTE: This is *NOT* smart enough to properly handle cycles; in such a case, it\nwill get into an infinite loop.\n]]\nfunction export.deepEquals(x, y)\n \
      \   if type(x) == \"table\" and type(y) == \"table\" then\n    \t-- Two tables are the same if they have the same number of elements\n    \t-- and all keys that are present in one of the tables compare equal\n    \t-- to the corresponding keys in the other\
      \ table, using structural\n    \t-- comparison.\n    \tlocal sizex = 0\n        for key, value in pairs(x) do\n            if not export.deepEquals(value, y[key]) then\n                return false\n            end\n            sizex = sizex + 1\n    \
      \    end\n        local sizey = export.size(y)\n        if sizex ~= sizey then\n            return false\n        end \n        return true\n    end\n    return x == y\nend\n\n--[[\nRecursively compare two values that may be lists (i.e. tables with integral\n\
      keys), including lists with nested lists as values. Return true if both values\nare structurally equal. Note that this handles arbitary levels of nesting.\nResults are undefined if tables with non-integral keys are present anywhere in\neither structure;\
      \ if that may be the case, use export.deepEquals, which will\nhandle such tables correctly but be less efficient on lists than\nexport.deepEqualsList.\n\nNOTE: This is *NOT* smart enough to properly handle cycles; in such a case, it\nwill get into an infinite\
      \ loop.\n]]\nfunction export.deepEqualsList(x, y)\n    if type(x) == \"table\" and type(y) == \"table\" then\n        if #x ~= #y then\n            return false\n        end \n        for key, value in ipairs(x) do\n            if not export.deepEqualsList(value,\
      \ y[key]) then\n                return false\n            end\n        end\n        return true\n    end\n    return x == y\nend\n\n--[[\n\tFinds key for specified value in a given table.\n\tRoughly equivalent to reversing the key-value pairs in the table\
      \ –\n\t\treversed_table = { [value1] = key1, [value2] = key2, ... }\n\t– and then returning reversed_table[valueToFind].\n\t\n\tThe value can only be a string or a number\n\t(not nil, a boolean, a table, or a function).\n\t\n\tOnly reliable if there is\
      \ just one key with the specified value.\n\tOtherwise, the function returns the first key found,\n\tand the output is unpredictable.\n]]\nfunction export.keyFor(t, valueToFind)\n\tlocal check = _check('keyFor')\n\tcheck(1, t, 'table')\n\tcheck(2, valueToFind,\
      \ { 'string', 'number' })\n\t\n\tfor key, value in pairs(t) do\n\t\tif value == valueToFind then\n\t\t\treturn key\n\t\tend\n\tend\n\t\n\treturn nil\nend\n\n--[[\n\tThe default sorting function used in export.keysToList if no keySort\n\tis defined.\n]]\n\
      local function defaultKeySort(key1, key2)\n\t-- \"number\" &lt; \"string\", so numbers will be sorted before strings.\n\tlocal type1, type2 = type(key1), type(key2)\n\tif type1 ~= type2 then\n\t\treturn type1 &lt; type2\n\telse\n\t\treturn key1 &lt; key2\n\
      \tend\nend\n\n--[[\n\tReturns a list of the keys in a table, sorted using either the default\n\ttable.sort function or a custom keySort function.\n\tIf there are only numerical keys, numKeys is probably more efficient.\n]]\nfunction export.keysToList(t,\
      \ keySort, checked)\n\tif not checked then\n\t\tlocal check = _check('keysToList')\n\t\tcheck(1, t, 'table')\n\t\tcheck(2, keySort, 'function', true)\n\tend\n\t\n\tlocal list = {}\n\tlocal index = 1\n\tfor key, _ in pairs(t) do\n\t\tlist[index] = key\n\
      \t\tindex = index + 1\n\tend\n\t\n\t-- Place numbers before strings, otherwise sort using &lt;.\n\tif not keySort then\n\t\tkeySort = defaultKeySort\n\tend\n\t\n\ttable.sort(list, keySort)\n\t\n\treturn list\nend\n\n--[[\n\tIterates through a table, with\
      \ the keys sorted using the keysToList function.\n\tIf there are only numerical keys, sparseIpairs is probably more efficient.\n]]\nfunction export.sortedPairs(t, keySort)\n\tlocal check = _check('keysToList')\n\tcheck(1, t, 'table')\n\tcheck(2, keySort,\
      \ 'function', true)\n\t\n\tlocal list = export.keysToList(t, keySort, true)\n\t\n\tlocal i = 0\n\treturn function()\n\t\ti = i + 1\n\t\tlocal key = list[i]\n\t\tif key ~= nil then\n\t\t\treturn key, t[key]\n\t\telse\n\t\t\treturn nil, nil\n\t\tend\n\t\
      end\nend\n\nfunction export.reverseIpairs(list)\n\tcheckType('reverse_ipairs', 1, list, 'table')\n\t\n\tlocal i = #list + 1\n\treturn function()\n\t\ti = i - 1\n\t\tif list[i] ~= nil then\n\t\t\treturn i, list[i]\n\t\telse\n\t\t\treturn nil, nil\n\t\t\
      end\n\tend\nend\n\n--[=[\n\tJoins an array with serial comma and serial conjunction, normally \"and\".\n\tAn improvement on mw.text.listToText, which doesn't properly handle serial\n\tcommas.\n\t\n\tOptions:\n\t\t- conj\n\t\t\tConjunction to use; defaults\
      \ to \"and\".\n\t\t- italicizeConj\n\t\t\tItalicize conjunction: for [[Module:Template:also]]\n\t\t- dontTag\n\t\t\tDon't tag the serial comma and serial \"and\". For error messages, in\n\t\t\twhich HTML cannot be used.\n]=]\nfunction export.serialCommaJoin(seq,\
      \ options)\n\tlocal check = _check(\"serialCommaJoin\", \"table\")\n\tcheck(1, seq)\n\tcheck(2, options, true)\n\t\n\tlocal length = #seq\n\t\n\tif not options then\n\t\toptions = {}\n\tend\n\t\n\tlocal conj\n\tif length &gt; 1 then\n\t\tconj = options.conj\
      \ or \"and\"\n\t\tif options.italicizeConj then\n\t\t\tconj = \"''\" .. conj .. \"''\"\n\t\tend\n\tend\n\t\n\tif length == 0 then\n\t\treturn \"\"\n\telseif length == 1 then\n\t\treturn seq[1] -- nothing to join\n\telseif length == 2 then\n\t\treturn seq[1]\
      \ .. \" \" .. conj .. \" \" .. seq[2]\n\telse\n\t\tlocal comma = options.dontTag and \",\" or '&lt;span class=\"serial-comma\"&gt;,&lt;/span&gt;'\n\t\tconj = options.dontTag and ' ' .. conj .. \" \" or '&lt;span class=\"serial-and\"&gt; ' .. conj .. '&lt;/span&gt;\
      \ '\n\t\treturn table.concat(seq, \", \", 1, length - 1) ..\n\t\t\t\tcomma .. conj .. seq[length]\n\tend\nend\n\n--[[\n\tConcatenates all values in the table that are indexed by a number, in order.\n\tsparseConcat{ a, nil, c, d }  =&gt;  \"acd\"\n\tsparseConcat{\
      \ nil, b, c, d }  =&gt;  \"bcd\"\n]]\nfunction export.sparseConcat(t, sep, i, j)\n\tlocal list = {}\n\t\n\tlocal list_i = 0\n\tfor _, v in export.sparseIpairs(t) do\n\t\tlist_i = list_i + 1\n\t\tlist[list_i] = v\n\tend\n\t\n\treturn table.concat(list,\
      \ sep, i, j)\nend\n\n--[[\n\tValues of numberic keys in array portion of table are reversed:\n\t{ \"a\", \"b\", \"c\" } -&gt; { \"c\", \"b\", \"a\" }\n--]]\nfunction export.reverse(t)\n\tcheckType(\"reverse\", 1, t, \"table\")\n\t\n\tlocal new_t = {}\n\
      \tlocal new_t_i = 1\n\tfor i = #t, 1, -1 do\n\t\tnew_t[new_t_i] = t[i]\n\t\tnew_t_i = new_t_i + 1\n\tend\n\treturn new_t\nend\n\nfunction export.reverseConcat(t, sep, i, j)\n\treturn table.concat(export.reverse(t), sep, i, j)\nend\n\n-- { \"a\", \"b\"\
      , \"c\" } -&gt; { a = 1, b = 2, c = 3 }\nfunction export.invert(array)\n\tcheckType(\"invert\", 1, array, \"table\")\n\t\n\tlocal map = {}\n\tfor i, v in ipairs(array) do\n\t\tmap[v] = i\n\tend\n\t\n\treturn map\nend\n\n--[[\n\t{ \"a\", \"b\", \"c\" }\
      \ -&gt; { [\"a\"] = true, [\"b\"] = true, [\"c\"] = true }\n--]]\nfunction export.listToSet(t)\n\tcheckType(\"listToSet\", 1, t, \"table\")\n\t\n\tlocal set = {}\n\tfor _, item in ipairs(t) do\n\t\tset[item] = true\n\tend\n\treturn set\nend\n\n--[[\n\t\
      Returns true if all keys in the table are consecutive integers starting at 1.\n--]]\nfunction export.isArray(t)\n\tcheckType(\"isArray\", 1, t, \"table\")\n\t\n\tlocal i = 0\n\tfor _ in pairs(t) do\n\t\ti = i + 1\n\t\tif t[i] == nil then\n\t\t\treturn\
      \ false\n\t\tend\n\tend\n\treturn true\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:28.599Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alinks%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48256 t=1555362448500631
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:28 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 192214268, 246890100, 690964409
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6246525\" pageid=\"6246525\" ns=\"828\" title=\"Module:links/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-03-13T02:26:26Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"add [[Unsupported titles/MeToo]]\" xml:space=\"preserve\">local data = {}\n\ndata.high_memory_entries = {\n\t\"a\",\n\t\"animal\",\n\t\"book\",\n\t\"coffee\",\n\t\"do\",\n\t\"e\",\n\t\"\
      language\",\n\t\"night\",\n\t\"smoke\",\n\t\"son\",\n\t\"sun\",\n\t\"water\",\n\t\"wind\",\n}\n\n\nlocal U = mw.ustring.char\nlocal soft_hyphen = U(0xAD)\n\n--[[\tThe \"actual title\" is the page name with the prefix \"Unsupported titles/\" removed.\n\t\
      \t[\"displayed_title\"] = \"actual title\"\t]]\ndata.unsupported_titles = {\n\t[\" \"] = \"Space\",\n\t[\"{\"] = \"Left curly bracket\",\n\t[\"}\"] = \"Right curly bracket\",\n\t[\"[\"] = \"Left square bracket\",\n\t[\"]\"] = \"Right square bracket\",\n\
      \t[\"&lt;\"] = \"Less than\",\n\t[\"&gt;\"] = \"Greater than\",\n\t[\"=&lt;\"] = \"Equal less than\",\n\t[\"=&gt;\"] = \"Equal greater than\",\n\t[\"&gt;=\"] = \"Greater than equal\",\n\t[\"&lt;=\"] = \"Less than equal\",\n\t[\"-&gt;\"] = \"Hyphen greater\
      \ than\",\n\t[\"&lt;-\"] = \"Less than hyphen\",\n\t[\"&gt;_&lt;\"] = \"Greater than low line less than\",\n\t[\"::\"] = \"Double colon\",\n\t[\": :\"] = \"Enclosing colons\",\n\t[\":=\"] = \"Colon equals\",\n\t[\":Þ\"] = \"Colon capital thorn\",\n\t[\"\
      :(\"] = \"Colon left paren\",\n\t[\":)\"] = \"Colon right paren\",\n\t[\"&lt;&gt;\"] = \"Less than greater than\",\n\t[\"&lt;3\"] = \"Less than three\",\n\t[\"&lt;/3\"] = \"Less than slash three\",\n\t[\"&lt; &gt;\"] = \"Enclosing less than greater than\"\
      ,\n\t[\"&lt; /&gt;\"] = \"Less than trailing slash greater than\",\n\t[\"&lt; &gt; &lt;/ &gt;\"] = \"HTML start tag end tag\",\n\t[\"&lt;!-- --&gt;\"] = \"HTML comment\",\n\t[\"&lt;g&gt;\"] = \"g tag\",\n\t[\":-(\"] = \"Colon hyphen left paren\",\n\t[\"\
      :-)\"] = \"Colon hyphen right paren\",\n\t[\"|\"] = \"Vertical line\",\n\t[\"||\"] = \"Vertical line vertical line\",\n\t[\"| |\"] = \"Enclosing vertical lines\",\n\t[\"C#\"] = \"C sharp\",\n\t[\"#\"] = \"Number sign\",\n\t[\"# #\"] = \"Enclosing number\
      \ signs\",\n\t[\":\"] = \"Colon\",\n\t[\"..\"] = \"Double period\",\n\t[\".\"] = \"Full stop\",\n\t[\"_\"] = \"Low line\",\n\t[\"-_-\"] = \"Low line interfix\",\n\t[U(0xFFFD)] = \"Replacement character\",\n\t[U(0x1680)] = \"Ogham space\",\n\t[\"[ ]\"]\
      \ = \"Square brackets\",\n\t[\"{ }\"] = \"Curly brackets\",\n\t[\"[…]\"] = \"Square bracketed ellipsis\",\n\t[\"_ _\"] = \"Enclosing low lines\",\n\t[\"C|N&gt;K\"] = \"C through N to K\",\n\t[\"#MeToo\"] = \"MeToo\",\n\t[\"о/.\"] = \"о slash dot\",\n\t\
      [\"กรุงเทพมหานคร อมรรัตนโกสินทร์ มหินทรายุธยา มหาดิลกภพ นพรัตนราชธานีบูรีรมย์ อุดมราชนิเวศน์มหาสถาน อมรพิมานอวตารสถิต สักกะทัตติยวิษณุกรรมประสิทธิ์\"] = \"Thai name of Bangkok\",\n\t[\"λοπαδοτεμαχοσελαχογαλεοκρανιολειψανοδριμυποτριμματοσιλφιοκαραβομελι\
      τοκατακεχυμενοκιχλ\" .. soft_hyphen .. \"επικοσσυφοφαττοπεριστεραλεκτρυονοπτοκεφαλλιοκιγκλοπελειολαγῳοσιραιοβαφητραγανοπτερύγων\"] = \"Ancient Greek dish\",\n\t[\":≠\"] = \":≠\",\n\t[\"S:t\"] = \"S:t\",\n\t[\"S:ta\"] = \"S:ta\",\n\t[\"c:a\"] = \"c:a\"\
      ,\n\t[\"n:a\"] = \"n:a\",\n\t[\"n:o\"] = \"n:o\",\n\t[\"n:r\"] = \"n:r\",\n\t[\"s:a\"] = \"s:a\",\n\t[\"st:a\"] = \"st:a\",\n\t[\"v:a\"] = \"v:a\",\n}\n\nfor i, item in ipairs(data.high_memory_entries) do\n\tdata.high_memory_entries[i] = nil\n\tdata.high_memory_entries[item]\
      \ = true\nend\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:28.781Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ascript+utilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56433 t=1555362448677610
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:28 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1341.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 916312903, 555472150, 701992962
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6149597\" pageid=\"6149597\" ns=\"828\" title=\"Module:script utilities/data\"><revisions><rev user=\"DTLHS\" timestamp=\"2018-03-12T01:54:08Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local data = {}\n\ndata.translit = {\n\t[\"term\"] = {\n--[=[\tcan't be done until Kana transliterations are correctly parsed by [[Module:links]]\n\t\t[\"tag\"\
      ] = \"i\",\n\t\t]=]\n\t\t[\"classes\"] = \"mention-tr\",\n\t},\n\t[\"usex\"] = {\n\t\t[\"tag\"] = \"i\",\n\t\t[\"classes\"] = \"e-transliteration\",\n\t},\n\t[\"head\"] = {\n\t\t[\"classes\"] = \"headword-tr\",\n\t\t[\"dir\"] = \"ltr\",\n\t},\n\t[\"default\"\
      ] = {},\n}\n\ndata.transcription = {\n\t[\"head\"] = {\n\t\t[\"tag\"] = \"span\",\n\t\t[\"classes\"] = \"headword-ts\",\n\t\t[\"dir\"] = \"ltr\",\n\t},\n\t[\"default\"] = {},\n}\n\nfor key, value in pairs(data.translit) do\n\tif not value.tag then\n\t\t\
      value.tag = \"span\"\n\tend\nend\n\ndata.faces = {\n\t[\"term\"] = {\n\t\ttag = \"i\",\n\t\tclass = \"mention\",\n\t},\n\t[\"head\"] = {\n\t\ttag = \"strong\",\n\t\tclass = \"headword\",\n\t},\n\t[\"hypothetical\"] = {\n\t\tprefix = '&lt;span class=\"\
      hypothetical-star\"&gt;*&lt;/span&gt;',\n\t\ttag = \"i\",\n\t\tclass = \"hypothetical\",\n\t},\n\t[\"bold\"] = {\n\t\ttag = \"b\",\n\t},\n\t[\"translation\"] = {\n\t\ttag = \"span\",\n\t},\n\t[\"nil\"] = {\n\t\ttag = \"span\",\n\t},\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:28.944Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aredlink+category&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=37125 t=1555362448859471
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:28 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1339.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 931660924, 642558656, 699572228
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5379564" pageid="5379564" ns="10" title="Template:redlink category"><revisions><rev user="Mnemosientje" timestamp="2019-03-07T14:12:31Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">&lt;!--
      This is a list of entries that won't be checked for redlinks. Usually, they are large entries, where redlink checking can cause module errors.
      --&gt;{{#switch:{{PAGENAME}}|-ere|a|and|animal|book|box|do|dog|fish|heart|e|gold|green|I|iron|language|light|man|me|mies|mouth|one|salt|smoke|sun|te|tea|water|wind|一|人|母|女|水|目|Spanish diminutives of given names|Common Russian verbs|Ancient Greek Swadesh list|Frequency dictionary of the modern Russian language (the Russian National Corpus)/1|Frequency dictionary of the modern Russian language (the Russian National Corpus)/8|=|&lt;!--

      The last five refer to Appendix:Spanish diminutives of given names, Appendix:Common Russian verbs, Appendix:Frequency dictionary of the modern Russian language (the Russian National Corpus)/1, Appendix:Frequency dictionary of the modern Russian language (the Russian National Corpus)/8; the namespace has been stripped.

          --&gt;{{#switch:{{NAMESPACE}}||Reconstruction|Appendix=&lt;!--

              This is the list of languages with redlink checking enabled.
              --&gt;{{#switch:{{{1}}}|afa-pro|ang|cel-pro|egy|es|fi|gem-pro|gml|got|grc|iir-pro|ine-pro|it|itc-pro|map-pro|non|poz-pro|poz-pol-pro|pt|ru|sem-pro|sit-pro|sla-pro|te|zh|cmn|yue|nan|hak=&lt;!-- testing
                  --&gt;{{#ifeq:{{isValidPageName|{{{2|}}}}}|valid|&lt;!--
                      --&gt;{{#invoke:redlink category|cat|{{{1}}}|{{{2}}}|template={{{template|-}}}}}&lt;!--
                  --&gt;}}&lt;!--
              --&gt;}}&lt;!--
          --&gt;}}&lt;!--
      --&gt;}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:29.111Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aq&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=42726 t=1555362449022104
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1047'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1315.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 920666962, 717976894, 691849872
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5235108" pageid="5235108" ns="10" title="Template:q"><revisions><rev user="Mahagaja" timestamp="2016-07-09T17:36:41Z" contentformat="text/x-wiki" contentmodel="wikitext"
      comment="Protected &quot;[[Template:q]]&quot;: Highly visible template/module ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))" xml:space="preserve">#REDIRECT [[Template:qualifier]]</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:07:29.477Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aqualifier&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38853 t=1555362449389915
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1315.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 678300437, 737419537, 684321258
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6098679\" pageid=\"6098679\" ns=\"828\" title=\"Module:qualifier\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-05-08T23:55:07Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"allow string to be supplied to format_qualifier\" xml:space=\"preserve\">local export = {}\n\nfunction export.format_qualifier(list)\n\tif type(list) ~= \"table\" then\n\t\tlist = { list\
      \ }\n\tend\n\t\n\tif #list == 0 then\n\t\treturn ''\n\tend\n\n\treturn '&lt;span class=\"ib-brac qualifier-brac\"&gt;(&lt;/span&gt;' ..\n\t       '&lt;span class=\"ib-content qualifier-content\"&gt;' ..\n\t       table.concat(list, '&lt;span class=\"ib-comma\
      \ qualifier-comma\"&gt;,&lt;/span&gt; ') ..\n\t\t   '&lt;/span&gt;&lt;span class=\"ib-brac qualifier-brac\"&gt;)&lt;/span&gt;'\nend\n\nfunction export.qualifier_t(frame)\n\tlocal params = {\n\t   [1] = {list = true, required = true},\n\t}\n\t\n\tlocal\
      \ args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal subvarieties = mw.loadData(\"Module:qualifier/subvarieties\")\n\t\n\tfor i, label in ipairs(args[1]) do\n\t\tif subvarieties[label] then\n\t\t\trequire(\"Module:debug\"\
      ).track(\"qualifier/subvarieties\")\n\t\t\t--[[\n\t\t\t\tcurrently not working:\n\t\t\tlocal lang = subvarieties[label].languages[1]\n\t\t\trequire(\"Module:debug\").track(\"qualifier/subvarieties/\" .. lang)\n\t\t\t]]\n\t\tend\n\tend\n\n\treturn export.format_qualifier(args[1])\n\
      end\n\nfunction export.sense_t(frame)\n\tlocal params = {\n\t   [1] = {list = true, required = true},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn export.format_qualifier(args[1])\n\t\t.. '&lt;span\
      \ class=\"ib-colon sense-qualifier-colon\"&gt;:&lt;/span&gt;'\nend\n\nfunction export.gloss_t(frame)\n\tlocal params = {\n\t   [1] = {required = true},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\t\
      return '&lt;span class=\"gloss-brac\"&gt;(&lt;/span&gt;&lt;span class=\"gloss-content\"&gt;' ..\n\t\t\targs[1] .. '&lt;/span&gt;&lt;span class=\"gloss-brac\"&gt;)&lt;/span&gt;'\nend\n\nfunction export.non_gloss_definition_t(frame)\n\tlocal params = {\n\
      \t   [1] = {required = true},\n\t}\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\treturn '&lt;span class=\"use-with-mention\"&gt;' .. require(\"Module:links\").english_links(args[1]) .. '&lt;/span&gt;'\nend\n\
      \t\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:29.665Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aqualifier%2Fsubvarieties&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=60379 t=1555362449558738
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 741886978, 834506410, 685106212
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6101539\" pageid=\"6101539\" ns=\"828\" title=\"Module:qualifier/subvarieties\"><revisions><rev user=\"SemperBlotto\" timestamp=\"2017-09-22T06:01:06Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Reverted edits by [[Special:Contributions/94.24.95.67|94.24.95.67]]. If you think this rollback is in error, please leave a message on my [[User talk:SemperBlotto|talk page]].\" xml:space=\"\
      preserve\">local m_subvarieties = require(\"Module:labels/data/subvarieties\")\n\nlocal labels = {}\n\nfor key, val in pairs(m_subvarieties.labels) do\n\tif val.languages then\n\t\tlabels[key] = val\n\tend\nend\n\nreturn labels</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:29.901Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Fsubvarieties&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=65604 t=1555362449743218
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:29 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1222.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 579881138, 259658701, 687564982
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4977892\" pageid=\"4977892\" ns=\"828\" title=\"Module:labels/data/subvarieties\"><revisions><rev user=\"Лорд Алекс\" timestamp=\"2019-03-27T02:05:05Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\nlocal deprecated = {}\n\nlocal m_functions = require(\"Module:labels/data/functions\")\n\nlabels[\"Aeolic\"] = {\n\tWikipedia\
      \ = \"Aeolic Greek\",\n\tplain_categories = {\"Aeolic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Aeolic Greek\"] = \"Aeolic\"\n\nlabels[\"African American Vernacular English\"] = {\n\tdisplay = \"African American Vernacular\",\n\tWikipedia\
      \ = true,\n\tplain_categories = {\"African American Vernacular English\"},\n\tlanguage = \"en\",\n}\naliases[\"AAVE\"] = \"African American Vernacular English\"\naliases[\"ebonics\"] = \"African American Vernacular English\"\n\nlabels[\"Akhmimic\"] = {\n\
      \tWikipedia = \"Coptic language#Akhmimic\",\n\tplain_categories = {\"Akhmimic Coptic\"},\n\tlanguage = \"cop\",\n}\n\nlabels[\"Alsatian German\"] = {\n\tdisplay = \"Alsatian\",\n\tWikipedia = \"Alsatian dialect\",\n\tplain_categories = {\"Alsatian German\"\
      },\n\tlanguage = \"gsw\",\n}\naliases[\"Elsässisch\"] = \"Alsatian German\"\n\nlabels[\"American spelling\"] = {\n\tdisplay = \"American spelling\",\n\tWikipedia = \"American and British English spelling differences\",\n\tplain_categories = {\"American\
      \ English forms\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Anglo-Norman\"] = {\n\tWikipedia = \"Anglo-Norman language\",\n\tplain_categories = {\"Anglo-Norman Old French\"},\n\tlanguage = \"fro\",\n}\n\nlabels[\"Anglian\"] = {\n\tWikipedia = \"Anglian dialect\"\
      ,\n\tplain_categories = { \"Anglian Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Ararat\"] = {\n\tWikipedia = \"Araratian dialect\",\n\tplain_categories = {\"Ararat Armenian\"},\n\tlanguage = \"hy\",\n}\n\nlabels[\"Arbëresh\"] = {\n\tWikipedia\
      \ = \"Arbëresh\",\n\tplain_categories = {\"Arbëresh Albanian\"},\n\tlanguage = \"sq\",\n}\naliases[\"Arbëreshë\"] = \"Arbëresh\"\naliases[\"Arbërisht\"] = \"Arbëresh\"\n\nlabels[\"Arcadocypriot\"] = {\n\tWikipedia = \"Arcadocypriot Greek\",\n\tplain_categories\
      \ = {\"Arcadocypriot Ancient Greek\"},\n\tlanguage = \"grc\"\n}\naliases[\"Arcadocypriot Greek\"] = \"Arcadocypriot\"\n\nlabels[\"Arvanitika\"] = {\n\tWikipedia = \"Arvanitika\",\n\tplain_categories = {\"Arvanitika Albanian\"},\n\tlanguage = \"sq\",\n\
      }\n\nlabels[\"Attic\"] = {\n\tWikipedia = \"Attic Greek\",\n\tplain_categories = {\"Attic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Attic Greek\"] = \"Attic\"\n\nlabels[\"Old Attic\"] = {\n\tWikipedia = \"Attic Greek\",\n\tplain_categories\
      \ = {\"Attic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\n\nlabels[\"Old Hittite\"] = {\n\tWikipedia = true,\n\tlanguage = \"hit\",\n\tplain_categories = { \"Old Hittite\" },\n}\n\nlabels[\"Australian Aboriginal English\"] = {\n\tdisplay = \"Australian\
      \ Aboriginal\",\n\tWikipedia = true,\n\tplain_categories = {\"Australian Aboriginal English\"},\n\tlanguage = \"en\",\n}\naliases[\"Australian Aboriginal\"] = \"Australian Aboriginal English\"\n\nlabels[\"Australian English\"] = {\n\tdisplay = \"Australia\"\
      ,\n\tWikipedia = true,\n\tplain_categories = {\"Australian English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Balhae\"] = {\n\tplain_categories = {\"Balhae Old Korean\"},\n\tlanguage = \"oko\",\n}\n\nlabels[\"Balkar\"] = {\n\tplain_categories = {\"Balkar\"\
      },\n\tlanguage = \"krc\",\n}\n\nlabels[\"Batangas\"] = {\n\tdisplay = \"[[w:Batangas Tagalog|Batangas]]\",\n\tplain_categories = { \"Batangas Tagalog\" },\n\tlanguage = \"tl\",\n}\naliases[\"Batangas Tagalog\"] = \"Batangas\"\naliases[\"Batangueño\"] =\
      \ \"Batangas\"\n\n-- For Standard German as used in Bavaria\nlabels[\"Bavaria\"] = {\n\tWikipedia = \"Bavarian language#Use\",\n\tplain_categories = {\"Bavarian German\"},\n\tlanguage = \"de\",\n}\n\nlabels[\"Bavarian\"] = {\n\tWikipedia = \"Old High German\"\
      ,\n\tplain_categories = { \"Bavarian Old High German\" },\n\tlanguage = \"goh\",\n}\n\nlabels[\"Biblical Hebrew\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Biblical Hebrew\"},\n\tlanguage = \"he\",\n}\naliases[\"hbo\"] = \"Biblical Hebrew\"\n\
      aliases[\"Classical Hebrew\"] = \"Biblical Hebrew\"\naliases[\"Ancient Hebrew\"] = \"Biblical Hebrew\"\naliases[\"Old Hebrew\"] = \"Biblical Hebrew\"\n\nlabels[\"Birmingham\"] = {\n\tdisplay = \"[[wikipedia:Brummie|Birmingham]]\",\n\tplain_categories =\
      \ {\"Birmingham English\"},\n\tlanguage = \"en\",\n}\naliases[\"Brummie\"] = \"Birmingham\"\naliases[\"Brummy\"] = \"Birmingham\"\n\nlabels[\"Boeotian\"] = {\n\tWikipedia = \"Boeotian Greek\",\n\tplain_categories = {\"Boeotian Ancient Greek\"},\n\tlanguage\
      \ = \"grc\",\n}\naliases[\"Boeotian Greek\"] = \"Boeotian\"\n\nlabels[\"Bohairic\"] = {\n\tWikipedia = \"Coptic language#Bohairic\",\n\tplain_categories = {\"Bohairic Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Memphitic\"] = \"Bohairic\"\n\nlabels[\"\
      Bombay\"] = {\n\tWikipedia = \"Bombay Hindi\",\n\tplain_categories = {\"Bombay Hindi\"},\n\tlanguage = \"hi\",\n}\naliases[\"Bambaiyya\"] = \"Bombay\"\naliases[\"Mumbai\"] = \"Bombay\"\n\nlabels[\"Bokmål\"] = {\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Norwegian Bokmål\"},\n\tlanguage = \"nb\",\n}\n\nlabels[\"Border Scots\"] = {\n\tplain_categories = {\"Border Scots\"},\n\tlanguage = \"sco\",\n}\n\nlabels[\"Braj\"] = {\n    display = \"[[w:Braj Bhasha|Braj]]\",\n\tplain_categories = {\"Braj Bhā\
      ṣā\"},\n\tlanguage = \"hi\",\n}\n\nlabels[\"British English\"] = {\n\tdisplay = \"British\",\n\tWikipedia = true,\n\tplain_categories = {\"British English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"British spelling\"] = {\n\tdisplay = \"British spelling\"\
      ,\n\tWikipedia = \"American and British English spelling differences\",\n\tplain_categories = {\"British English forms\"},\n\tlanguage = \"en\",\n}\naliases[\"Commonwealth spelling\"] = \"British spelling\"\n\nlabels[\"Buddhist Hybrid Sanskrit\"] = {\n\
      \    display = \"Buddhist Hybrid Sanskrit\",\n\tWikipedia = true,\n    plain_categories = {\"Buddhist Hybrid Sanskrit\"},\n    language = \"sa\",\n}\naliases[\"BHS\"] = \"Buddhist Hybrid Sanskrit\"\n\nlabels[\"Byzantine\"] = {\n\tWikipedia = \"Medieval\
      \ Greek\",\n\tplain_categories = {\"Byzantine Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Byzantine Greek\"] = \"Byzantine\"\naliases[\"Medieval Greek\"] = \"Byzantine\"\n\nlabels[\"Bzyb\"] = {\n\tdisplay = \"[[w:Bzyb dialect|Bzyb]]\",\n\tplain_categories\
      \ = {\"Bzyb Abkhaz\"},\n\tlanguage = \"ab\",\n}\naliases[\"Bzyp\"] = \"Bzyb\"\n\nlabels[\"Canadian English\"] = {\n\tdisplay = \"Canada\",\n\tWikipedia = true,\n\tplain_categories = {\"Canadian English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Canadian\
      \ spelling\"] = {\n\tdisplay = \"Canadian\",\n\tWikipedia = true,\n\tplain_categories = {\"Canadian English forms\"},\n\tlanguage = \"en\",\n}\n\n-- Two instances of the language code \"yue\" being used with this label\nlabels[\"Cantonese\"] = {\n\tdisplay\
      \ = \"[[Cantonese]]\",\n\tplain_categories = {\"Cantonese Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Catholic\"] = {\n\tdisplay = \"[[w:Goan Catholics|Catholic]]\",\n\tplain_categories = {\"Catholic Konkani\"},\n\tlanguage = \"kok\"\n}\n\nlabels[\"\
      Central Standard\"] = {\n\tdiplay = \"Central Standard\",\n\tplain_categories = {\"Central Standard Assamese\"},\n\tlanguage = \"as\",\n}\n\nlabels[\"Chakavian\"] = {\n\tdisplay = \"[[Chakavian]]\",\n\tplain_categories = {\"Chakavian Serbo-Croatian\"},\n\
      \tlanguage = \"sh\",\n}\naliases[\"Čakavian\"] = \"Chakavian\"\n\nlabels[\"Cham Albanian\"] = {\n\tdisplay = \"Cham\",\n\tWikipedia = \"Cham Albanian dialect\",\n\tplain_categories = {\"Cham Albanian\"},\n\tlanguage = \"sq\",\n}\n\n--[=[ Currently empty:\n\
      labels[\"Chinglish\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Chinglish\"},\n\tlanguage = \"\",\n}\n]=]\n\nlabels[\"Clay Frisian\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Clay Frisian\"},\n\tlanguage = \"fy\",\n}\n\nlabels[\"Cockney\"\
      ] = {\n\tWikipedia = \"Cockney#Speech\",\n\tplain_categories = {\"Cockney English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Cois Fharraige\"] = {\n\tWikipedia = \"Gaeltacht Cois Fharraige\",\n\tplain_categories = {\"Connacht Irish\"},\n\tlanguage = \"ga\"\
      ,\n}\naliases[\"Cois Fhairrge\"] = \"Cois Fharraige\"\n\nlabels[\"Cretan\"] = {\n\tWikipedia = \"Cretan Greek\",\n\tplain_categories = {\"Cretan Greek\"},\n\tlanguage = \"el\",\n}\naliases[\"cretan\"] = \"Cretan\"\n\nlabels[\"Dari\"] = {\n\tdisplay = \"\
      Dari (Afghanistan)\",\n\tWikipedia = \"Dari (Persian)\",\n\tplain_categories = {\"Dari Persian\"},\n\tlanguage = \"fa\",\n}\n\nlabels[\"Datian Min\"] = {\n\tdisplay = \"Datian Min\",\n\tWikipedia = true,\n\tplain_categories = {\"Datian Min Chinese\"},\n\
      \tlanguage = \"zh\",\n}\n\nlabels[\"Daytshmerish\"] = {\n\tdisplay = \"[[דײַטשמעריש|Daytshmerish]]\",\n\tplain_categories = {\"Daytshmerish Yiddish\"},\n\tlanguage = \"yi\",\n}\naliases[\"daytshmerish\"] = \"Daytshmerish\"\n\nlabels[\"De'kwana\"] = {\n\
      \tdisplay = \"De'kwana dialect\",\n\tplain_categories = {\"De'kwana Maquiritari\"},\n\tlanguage = \"mch\",\n}\naliases[\"De'kwana dialect\"] = \"De'kwana\"\n\nlabels[\"Delhi-Meerut\"] = {\n\tWikipedia = \"Ashokan Edicts in Delhi#Delhi-Meerut pillar\",\n\
      \tdisplay = \"Delhi-Meerut\",\n\tplain_categories = {\"Delhi-Meerut Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\naliases[\"Meerut\"] = \"Delhi-Meerut\"\n\nlabels[\"Delhi-Topra\"] = {\n\tWikipedia = \"Ashokan Edicts in Delhi#Delhi-Topra pillar\",\n\
      \tdisplay = \"Delhi-Topra\",\n\tplain_categories = {\"Delhi-Topra Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\naliases[\"Topra\"] = \"Delhi-Topra\"\n\nlabels[\"Dhauli\"] = {\n\tWikipedia = true,\n\tdisplay = \"Dhauli\",\n\tplain_categories = {\"\
      Dhauli Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Digor\"] = {\n\tdisplay = \"Digor dialect\",\n\tplain_categories = {\"Digor Ossetian\"},\n\tlanguage = \"os\",\n}\naliases[\"Digor dialect\"] = \"Digor\"\n\nlabels[\"Doric\"] = {\n\t\
      Wikipedia = \"Doric Greek\",\n\tplain_categories = {\"Doric Ancient Greek\"},\n\tlanguage = \"grc\",\n}\n\nlabels[\"Drasi\"] = {\n\tWikipedia = \"Dras\",\n\tplain_categories = {\"Dras Shina\"},\n\tlanguage = \"scl\",\n}\n\nlabels[\"Early West Saxon\"]\
      \ = {\n\tdisplay = \"Early West Saxon\",\n\tWikipedia = true,\n\tplain_categories = {\"Early West Saxon Old English\"},\n\tlanguage = \"ang\",\n}\n\nlabels[\"Early Middle English\"] = {\n\tdisplay = \"Early Middle English\",\n\tWikipedia = \"Middle English#Early\
      \ Middle English\",\n\tplain_categories = {\"Early Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Early ME\"] = \"Early Middle English\"\naliases[\"Earlier ME\"] = \"Early Middle English\"\naliases[\"early ME\"] = \"Early Middle English\"\n\n\
      labels[\"East Anglian English\"] = {\n\tdisplay = \"East Anglia\",\n\tWikipedia = true,\n\tplain_categories = {\"East Anglian English\"},\n\tlanguage = \"en\",\n}\n\n-- for East Frisian dialectal German Low German, not the Frisianic language\nlabels[\"\
      East Frisian\"] = {\n\tWikipedia = \"East Frisian Low Saxon\",\n\tplain_categories = {\"East Frisian Low German\"},\n\tlanguage = \"nds-de\",\n}\n\nlabels[\"East Germanic\"] = {\n\tWikipedia = \"East Germanic languages\",\n\tplain_categories = {\"East\
      \ Proto-Germanic\"},\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"East Midland Middle English\"] = {\n\tdisplay = \"East Midlands\",\n\tplain_categories = {\"East Midland Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"East Midlands ME\"] = \"East\
      \ Midland Middle English\"\naliases[\"East Midland ME\"] = \"East Midland Middle English\"\n\nlabels[\"East Midlands English\"] = {\n\tdisplay = \"East Midlands\",\n\tWikipedia = true,\n\tplain_categories = {\"East Midlands English\"},\n\tlanguage = \"\
      en\",\n}\n\nlabels[\"East Palatine\"] = {\n\tdisplay = \"Vorderpfälzisch\",\n\tWikipedia = \"Palatine German language\",\n\tplain_categories = {\"East Palatine German\"},\n\tlanguage = \"\",\n}\naliases[\"Vorderpfälzisch\"] = \"East Palatine\"\n\nlabels[\"\
      Eastern Armenian\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Eastern Armenian\"},\n\tlanguage = \"hy\",\n}\n\nlabels[\"Eastern Catalan\"] = {\n\tWikipedia = \"Catalan dialects\",\n\tplain_categories = {\"Eastern Catalan\"},\n\tlanguage = \"ca\"\
      ,\n}\n\nlabels[\"Eastern Standard\"] = {\n\tdiplay = \"Eastern Standard\",\n\tplain_categories = {\"Eastern Standard Assamese\"},\n\tlanguage = \"as\",\n}\n\nlabels[\"Ecclesiastical Latin\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Ecclesiastical\
      \ Latin\"},\n\tlanguage = \"la\",\n}\naliases[\"Church Latin\"] = \"Ecclesiastical Latin\"\n\nlabels[\"Ekavian\"] = {\n\tdisplay = \"[[Ekavian]]\",\n}\n\nlabels[\"Epic\"] = {\n\tWikipedia = \"Homeric Greek\",\n\tplain_categories = {\"Epic Ancient Greek\"\
      },\n\tlanguage = \"grc\",\n}\naliases[\"Homeric\"] = \"Epic\"\naliases[\"Epic Greek\"] = \"Epic\"\naliases[\"Homeric Greek\"] = \"Homeric\"\n\nlabels[\"European French\"] = {\n\tdisplay = \"Europe\",\n\tWikipedia = true,\n\tplain_categories = {\"European\
      \ French\"},\n\tlanguage = \"fr\",\n}\n\nlabels[\"Fante\"] = {\n\tdisplay = \"[[w:Fante dialect|Fante]]\",\n\tplain_categories = {\"Fante Akan\"},\n\tlanguage = \"ak\",\n}\naliases[\"Fantse\"] = \"Fante\"\naliases[\"Fanti\"] = \"Fante\"\naliases[\"Mfantse\"\
      ] = \"Fante\"\n\nlabels[\"Fayyumic\"] = {\n\tWikipedia = \"Coptic language#Fayyumic\",\n\tplain_categories = {\"Fayyumic Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Faiyumic\"] = \"Fayyumic\"\naliases[\"Bashmuric\"] = \"Fayyumic\"\n\nlabels[\"East\
      \ and West Flanders\"] = {\n\tdisplay = \"[[w:East Flanders|East]] and [[w:West Flanders|West Flanders]]\",\n\tplain_categories = {\"East and West Flemish Dutch\"},\n\tlanguage = \"nl\",\n}\naliases[\"Flanders\"] = \"East and West Flanders\"\naliases[\"\
      Flemish\"] = \"East and West Flanders\"\n\nlabels[\"Gan\"] = {\n\tdisplay = \"[[Gan]]\",\n\tplain_categories = {\"Gan Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Geordie\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Geordie English\"},\n\t\
      language = \"en\",\n}\n\nlabels[\"Gheg\"] = {\n\tWikipedia = \"Gheg Albanian\",\n\tplain_categories = {\"Gheg Albanian\"},\n\tlanguage = \"sq\",\n}\n\nlabels[\"Gilgiti\"] = {\n\tWikipedia = \"Gilgit\",\n\tplain_categories = {\"Gilgit Shina\"},\n\tlanguage\
      \ = \"scl\",\n}\n\nlabels[\"Girnar\"] = {\n\tdisplay = \"Girnar\",\n\tWikipedia = true,\n\tplain_categories = {\"Girnar Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Gottscheerisch\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Gottscheerisch\
      \ German\"},\n\tlanguage = \"\",\n}\naliases[\"Gottscheerish\"] = \"Gottscheerisch\"\n\nlabels[\"Guardiol\"] = {\n\tWikipedia = \"Guardia Piemontese\",\n\tplain_categories = {\"Guardiol Occitan\"},\n\tlanguage = \"oc\",\n}\n\nlabels[\"Hainan Min\"] = {\n\
      \tdisplay = \"Hainan Min\",\n\tWikipedia = \"Hainanese\",\n\tplain_categories = {\"Hainan Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Hakka\"] = {\n\tdisplay = \"[[Hakka]]\",\n\tplain_categories = {\"Hakka Chinese\"},\n\tlanguage = \"zh\",\n}\n\
      \nlabels[\"Hamburgisch\"] = {\n\tWikipedia = \"Hamburgisch dialect\",\n\tplain_categories = {\"Hamburgisch Low German\"},\n\tlanguage = \"nds-de\",\n}\n\nlabels[\"Hamshen\"] = {\n\tWikipedia = \"Homshetsi dialect\",\n\tplain_categories = {\"Hamshen Armenian\"\
      },\n\tlanguage = \"hy\",\n}\naliases[\"Homshetsi\"] = \"Hamshen\"\naliases[\"Homshetsma\"] = \"Hamshen\"\n\nlabels[\"Hariyanvi\"] = {\n\tdisplay = \"Hariyāṇvī\",\n\tWikipedia = \"Hariyanvi language\",\n\tplain_categories = {\"Hariyāṇvī\"},\n\tlanguage\
      \ = \"hi\",\n}\naliases[\"Hariyana\"] = \"Hariyanvi\"\n\nlabels[\"Helsinki slang\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Helsinki slang\"},\n\tlanguage = \"fi\",\n}\n\nlabels[\"Hessian\"] = {\n\tWikipedia = \"Hessian dialects\",\n\tplain_categories\
      \ = {\"Hessian German\"},\n\tlanguage = \"de\",\n}\naliases[\"Hessisch\"] = \"Hessian\"\n\nlabels[\"Hong Kong Hakka\"] = {\n\tdisplay = \"Hong Kong [[Hakka]]\",\n\tplain_categories = {\"Hong Kong Hakka\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Huizhou\"\
      ] = {\n\tdisplay = \"[[Huizhou]]\",\n\tplain_categories = {\"Huizhou Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Hulu Pahang\"] = {\n\tplain_categories = {\"Hulu Pahang Malay\"},\n\tlanguage = \"ms\",\n}\n\nlabels[\"Ikavian\"] = {\n\tdisplay = \"\
      [[Ikavian]]\",\n\tplain_categories = {\"Ikavian Serbo-Croatian\"},\n\tlanguage = \"sh\",\n}\n\nlabels[\"Indian English\"] = {\n\tdisplay = \"India\",\n\tWikipedia = true,\n\tplain_categories = {\"Indian English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"\
      Ingilo\"] = {\n\tWikipedia = \"Ingiloy people\",\n\tplain_categories = {\"Ingilo Georgian\"},\n\tlanguage = \"ka\",\n}\naliases[\"Ingiloy\"] = \"Ingilo\"\naliases[\"Saingilo\"] = \"Ingilo\"\n\nlabels[\"Inner Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About\
      \ Mbugu|Ma'a]]\",\n\tplain_categories = {\"Inner Mbugu\"},\n\tlanguage = \"mhd\",\n}\naliases[\"inner Mbugu\"] = \"Inner Mbugu\"\n\nlabels[\"Inuktun\"] = {\n\tplain_categories = {\"Inuktun Inuktitut\"},\n\tlanguage = \"iu\",\n}\naliases[\"Polar Eskimo\"\
      ] = \"Inuktun\"\n\nlabels[\"Inuttut\"] = {\n\tplain_categories = {\"Inuttut Inuktitut\"},\n\tlanguage = \"iu\",\n}\naliases[\"Nunatsiavummiutut\"] = \"Inuttut\"\naliases[\"Labradorimiutut\"] = \"Inuttut\"\n\nlabels[\"Ionic\"] = {\n\tWikipedia = \"Ionic\
      \ Greek\",\n\tplain_categories = {\"Ionic Ancient Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Ionic Greek\"] = \"Ionic\"\n\nlabels[\"Irish English\"] = {\n\tdisplay = \"Ireland\",\n\tWikipedia = true,\n\tplain_categories = {\"Irish English\"},\n\tlanguage\
      \ = \"en\",\n}\n\nlabels[\"Iron\"] = {\n\tdisplay = \"Iron dialect\",\n\tplain_categories = {\"Iron Ossetian\"},\n\tlanguage = \"os\",\n}\naliases[\"Iron dialect\"] = \"Iron\"\n\nlabels[\"Itivimuit\"] = {\n\tplain_categories = {\"Itivimuit Inuktitut\"\
      },\n\tlanguage = \"iu\",\n}\n\nlabels[\"Ivory Coast French\"] = {\n\tdisplay = \"Ivory Coast\",\n\tWikipedia = \"African French#Abidjan French vocabulary\",\n\tplain_categories = {\"Ivorian French\"},\n\tlanguage = \"fr\",\n}\naliases[\"Ivory Coast\"]\
      \ = \"Ivory Coast French\"\naliases[\"Côte d’Ivoire\"] = \"Ivory Coast French\"\naliases[\"Côte d'Ivoire\"] = \"Ivory Coast French\"\naliases[\"Ivorian\"] = \"Ivory Coast French\"\n\nlabels[\"Ivory Coast French slang\"] = {\n\tdisplay = \"Ivory Coast slang\"\
      ,\n\tWikipedia = \"fr:Nouchi\",\n\tplain_categories = {\"Ivorian French\"},\n\tlanguage = \"fr\",\n}\naliases[\"nouchi\"] = \"Ivory Coast French slang\"\naliases[\"Nouchi\"] = \"Ivory Coast French slang\"\naliases[\"noussi\"] = \"Ivory Coast French slang\"\
      \naliases[\"Noussi\"] = \"Ivory Coast French slang\"\naliases[\"Ivory Coast slang\"] = \"Ivory Coast French slang\"\naliases[\"Côte d’Ivoire slang\"] = \"Ivory Coast French slang\"\naliases[\"Côte d'Ivoire slang\"] = \"Ivory Coast French slang\"\naliases[\"\
      Ivorian slang\"] = \"Ivory Coast French slang\"\n\nlabels[\"Jamaican English\"] = {\n\tdisplay = \"Jamaican\",\n\tWikipedia = true,\n\tplain_categories = {\"Jamaican English\"},\n\tlanguage = \"en\",\n}\naliases[\"Jamaican Standard English\"] = \"Jamaican\
      \ English\"\n\nlabels[\"Jaugada\"] = {\n\tdisplay = \"Jaugada\",\n\tWikipedia = true,\n\tplain_categories = {\"Jaugada Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Jewish Babylonian Aramaic\"] = {\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Jewish Babylonian Aramaic\"},\n\tlanguage = \"arc\",\n}\naliases[\"JBA\"] = \"Jewish Babylonian Aramaic\"\naliases[\"Talmudic Aramaic\"] = \"Jewish Babylonian Aramaic\"\naliases[\"Babylonian Talmudic Aramaic\"] = \"Jewish Babylonian Aramaic\"\n\n\
      labels[\"Kajkavian\"] = {\n\tdisplay = \"[[Kajkavian]]\",\n\tplain_categories = {\"Kajkavian Serbo-Croatian\"},\n\tlanguage = \"sh\",\n}\n\nlabels[\"Karabakh\"] = {\n\tWikipedia = \"Karabakh dialect (Armenian)\",\n\tplain_categories = {\"Karabakh Armenian\"\
      },\n\tlanguage = \"hy\",\n}\naliases[\"Gharabagh\"] = \"Karabakh\"\naliases[\"Artsakh\"] = \"Karabakh\"\n\nlabels[\"Kalsi\"] = {\n\tdisplay = \"Kalsi\",\n\tplain_categories = {\"Kalsi Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Kamrupi\"\
      ] = {\n\tdisplay = \"[[w:Kamprui dialect|Kamrupi]]\",\n\tplain_categories = { \"Kamrupi Assamese\" },\n\tlanguage = \"as\",\n}\naliases[\"Kamruipa\"] = \"Kamrupi\"\naliases[\"Kamrupiya\"] = \"Kamrupi\"\naliases[\"Kamrup\"] = \"Kamrupi\"\n\nlabels[\"Kansai\"\
      ] = {\n\tWikipedia = \"Kansai dialect\",\n\tplain_categories = {\"Kansai Japanese\"},\n\tlanguage = \"ja\",\n}\n\nlabels[\"Karachay\"] = {\n\tplain_categories = {\"Karachay\"},\n\tlanguage = \"krc\",\n}\n\nlabels[\"Katharevousa\"] = {\n\tdisplay = \"[[Katharevousa#English|Katharevousa]]\"\
      ,\n\tplain_categories = { \"Katharevousa\" },\n\tlanguage = \"el\",\n}\n\n--[=[\ncategory has been deleted\nlabels[\"Kichwa\"] = {\n\tdisplay = \"Standard Ecuadorian Kichwa\",\n\tWikipedia = \"Kichwa language\",\n\tplain_categories = {\"Standard Kichwa\"\
      },\n\tlanguage = \"\",\n}\n]=]\n\n--[[\tThis will conflict with a Kentish dialect label for Modern English,\n\t\tif someone wants to make one. ]]\nlabels[\"Kentish\"] = {\n\tWikipedia = \"Kentish dialect (Old English)\",\n\tplain_categories = { \"Kentish\
      \ Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Koine\"] = {\n\tdisplay = \"Koine\",\n\tWikipedia = \"Koine Greek\",\n\tplain_categories = {\"Koine Greek\"},\n\tlanguage = \"grc\",\n}\naliases[\"Koine Greek\"] = \"Koine\"\naliases[\"Hellenistic\"\
      ] = \"Koine\"\naliases[\"Hellenistic Koine\"] = \"Koine\"\n\nlabels[\"Kölsch\"] = {\n\tWikipedia = \"Colognian language\",\n\tplain_categories = {\"Kölsch Central Franconian\"},\n\tlanguage = \"gmw-cfr\",\n}\naliases[\"Colognian\"] = \"Kölsch\"\naliases[\"\
      Cologne\"] = \"Kölsch\"\naliases[\"Köln\"] = \"Kölsch\"\n\nlabels[\"Kromanti\"] = {\n\tdisplay = \"Kromanti spirit possession language\",\n\tWikipedia = \"Jamaican Maroon spirit-possession language\",\n\tplain_categories = {\"Kromanti Akan\"},\n\tlanguage\
      \ = \"ak\",\n}\n\nlabels[\"Late Latin\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Late Latin\"},\n\tlanguage = \"la\",\n}\n\nlabels[\"Latin America\"] = {\n\tplain_categories = {\"Latin American Spanish\"},\n\tlanguage = \"es\",\n}\naliases[\"\
      Latin American Spanish\"] = \"Latin America\"\n\nlabels[\"Late West Saxon\"] = {\n\tWikipedia = \"Late West Saxon\",\n\tplain_categories = { \"Late West Saxon Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Late Middle English\"] = {\n\tdisplay\
      \ = \"Late Middle English\",\n\tWikipedia = \"Middle English#Late Middle English\",\n\tplain_categories = {\"Late Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Late ME\"] = \"Late Middle English\"\naliases[\"Later ME\"] = \"Late Middle English\"\
      \naliases[\"late ME\"] = \"Late Middle English\"\n\nlabels[\"Leizhou Min\"] = {\n\tdisplay = \"Leizhou Min\",\n\tWikipedia = true,\n\tplain_categories = {\"Leizhou Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Lorraine Franconian\"] = {\n\tdisplay\
      \ = \"[[w:Lorraine Franconian|Lorraine Franconian]]\",\n\tWikipedia = true,\n\tplain_categories = {\"Lorraine Franconian\"},\n\tlanguage = \"\",\n}\naliases[\"Lorrainian\"] = \"Lorraine Franconian\"\naliases[\"Lothringian\"] = \"Lorraine Franconian\"\n\
      aliases[\"Lothringisch\"] = \"Lorraine Franconian\"\n\n\nlabels[\"Louisiana French\"] = {\n\tdisplay = \"Louisiana\",\n\tWikipedia = \"Cajun French\",\n\tplain_categories = {\"Louisiana French\"},\n\tlanguage = \"fr\",\n}\n\nlabels[\"Low Prussian\"] =\
      \ {\n\tWikipedia = \"Low Prussian dialect\",\n\tplain_categories = {\"Low Prussian German Low German\"},\n\tlanguage = \"nds-de\",\n}\n\nlabels[\"Lowlands Scots\"] = {\n\tplain_categories = {\"Lowlands Scots\"},\n\tlanguage = \"sco\",\n}\n\nlabels[\"Lycopolitan\"\
      ] = {\n\tWikipedia = \"Coptic language#Lycopolitan\",\n\tplain_categories = {\"Lycopolitan Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Subakhmimic\"] = \"Lycopolitan\"\naliases[\"Assiutic\"] = \"Lycopolitan\"\n\nlabels[\"Maastrichtian\"] = {\n\tWikipedia\
      \ = \"Maastrichtian dialect\",\n\tplain_categories = {\"Maastrichtian Limburgish\"},\n\tlanguage = \"li\",\n}\n\nlabels[\"Mandarin\"] = {\n\tdisplay = \"[[Mandarin]]\",\n\tplain_categories = {\"Mandarin Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"\
      Maniot\"] = {\n\tdisplay = \"Maniot dialect\",\n\tWikipedia = \"Maniot dialect\",\n\tplain_categories = {\"Maniot Greek\"},\n\tlanguage = \"el\",\n}\naliases['maniot'] = \"Maniot\"\n\nlabels[\"Mansehra\"] = {\n\tdisplay = \"Mansehra\",\n\tWikipedia = true,\n\
      \tplain_categories = {\"Mansehra Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Mecklenburgisch Low German\"] = {\n\tdisplay = \"Mecklenburgisch\",\n\tWikipedia = \"Mecklenburgisch dialect\",\n\tplain_categories = {\"Mecklenburgisch Low\
      \ German\"},\n\tlanguage = \"nds-de\",\n}\naliases[\"Mecklenburgisch\"] = \"Mecklenburgisch Low German\"\naliases[\"Mecklenburg\"] = \"Mecklenburgisch Low German\"\n\nlabels[\"Medieval Hebrew\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Medieval\
      \ Hebrew\"},\n\tlanguage = \"he\",\n}\n\nlabels[\"Medieval Latin\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Medieval Latin\"},\n\tlanguage = \"la\",\n}\n\nlabels[\"Megarian\"] = {\n\tWikipedia = \"Doric Greek\",\n\tplain_categories = {\"Doric\
      \ Ancient Greek\"},\n\tlanguage = \"grc\",\n}\n\nlabels[\"Mercian\"] = {\n\tWikipedia = \"Mercian dialect\",\n\tplain_categories = { \"Mercian Old English\" },\n\tlanguage = \"ang\",\n}\n\nlabels[\"Middle Hittite\"] = {\n\tWikipedia = true,\n\tlanguage\
      \ = \"hit\",\n\tplain_categories = { \"Middle Hittite\" },\n}\n\nlabels[\"Midlands English\"] = {\n\tdisplay = \"Midlands\",\n\tWikipedia = true,\n\tplain_categories = {\"Midlands English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Min\"] = {\n\tdisplay =\
      \ \"[[Min]]\",\n\tplain_categories = {\"Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Bei\"] = {\n\tdisplay = \"[[Min Bei]]\",\n\tplain_categories = {\"Min Bei Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Dong\"] = {\n\tdisplay = \"\
      [[Min Dong]]\",\n\tplain_categories = {\"Min Dong Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Nan\"] = {\n\tdisplay = \"[[Min Nan]]\",\n\tplain_categories = {\"Min Nan Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Min Zhong\"] = {\n\tdisplay\
      \ = \"[[Min Zhong]]\",\n\tplain_categories = {\"Min Zhong Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Mishnaic Hebrew\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Mishnaic Hebrew\"},\n\tlanguage = \"he\",\n}\naliases[\"Mishnaic\"] = \"Mishnaic\
      \ Hebrew\"\n\nlabels[\"Mistralian\"] = {\n\tWikipedia = \"Occitan language#Writing system\",\n\tplain_categories = {\"Mistralian Occitan\"},\n\tlanguage = \"oc\",\n}\n\nlabels[\"Mooring\"] = {\n\tWikipedia = \"Mooring (North Frisian dialect)\",\n\tplain_categories\
      \ = {\"Mooring North Frisian\"},\n\tlanguage = \"frr\",\n}\naliases[\"Mooring dialect\"] = \"Mooring\"\n\nlabels[\"Moselle Franconian\"] = {\n\tWikipedia = \"Moselle Franconian dialects\",\n\tplain_categories = {\"Moselle Central Franconian\"},\n\tlanguage\
      \ = \"gmw-cfr\",\n}\naliases[\"Moselfränkisch\"] = \"Moselle Franconian\"\n\nlabels[\"Multicultural London English\"] = {\n\tdisplay = \"MLE\",\n\tWikipedia = true,\n\tplain_categories = {\"Multicultural London English\"},\n\tlanguage = \"en\",\n}\naliases[\"\
      MLE\"] = \"Multicultural London English\"\n\nlabels[\"New Hittite\"] = {\n\tWikipedia = true,\n\tlanguage = \"hit\",\n\tplain_categories = { \"New Hittite\" },\n}\naliases[\"Neo-Hittite\"] = \"New Hittite\"\n\nlabels[\"New Latin\"] = {\n\tWikipedia = true,\n\
      \tplain_categories = {\"New Latin\"},\n\tlanguage = \"la\",\n}\n\nlabels[\"New Sanskrit\"] = {\n\tWikipedia = \"Sanskrit Revival\",\n\tplain_categories = {\"New Sanskrit\"},\n\tlanguage = \"sa\",\n}\naliases[\"Neo-Sanskrit\"] = \"New Sanskrit\"\n\nlabels[\"\
      New Zealand English\"] = {\n\tdisplay = \"New Zealand\",\n\tWikipedia = true,\n\tplain_categories = {\"New Zealand English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Non-Oxford British spelling\"] = {\n\tdisplay = \"Non-[[w:Oxford spelling|Oxford]] [[British\
      \ English]]\",\n\tplain_categories = {\"British English forms\"},\n\tlanguage = \"en\",\n}\naliases[\"non-Oxford British spelling\"] = \"Non-Oxford British spelling\"\naliases[\"Non-Oxford\"] = \"Non-Oxford British spelling\"\naliases[\"non-Oxford\"] =\
      \ \"Non-Oxford British spelling\"\n\nlabels[\"Normal Mbugu\"] = {\n\tdisplay = \"[[Wiktionary:About Mbugu|Mbugu]]\",\n\tplain_categories = {\"Normal Mbugu\"},\n\tlanguage = \"mhd\",\n}\naliases[\"normal Mbugu\"] = \"Normal Mbugu\"\n\nlabels[\"North Germanic\"\
      ] = {\n\tWikipedia = \"North Germanic languages\",\n\tplain_categories = {\"North Proto-Germanic\"},\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"Northern Dutch\"] = {\n\tdisplay = \"Northern\",\n\tWikipedia = \"Dutch dialects\",\n\tplain_categories = {\"\
      Northern Dutch\"},\n\tlanguage = \"nl\",\n}\n\nlabels[\"Northern England English\"] = {\n\tdisplay = \"Northern England\",\n\tWikipedia = true,\n\tplain_categories = {\"Northern England English\"},\n\tlanguage = \"en\",\n}\naliases[\"Northern English dialect\"\
      ] = \"Northern England English\"\naliases[\"northern English\"] = \"Northern England English\"\naliases[\"North English\"] = \"Northern England English\"\naliases[\"north English\"] = \"Northern England English\"\n\nlabels[\"Northern Middle English\"]\
      \ = {\n\tdisplay = \"Northern\",\n\tplain_categories = {\"Northern Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Northern ME\"] = \"Northern Middle English\"\naliases[\"North ME\"] = \"Northern Middle English\"\n\nlabels[\"Northern Finnic\"]\
      \ = {\n\tplain_categories = {\"Northern Proto-Finnic\"},\n\tlanguage = \"fiu-fin-pro\",\n}\n\nlabels[\"Northern German\"] = {\n\tplain_categories = {\"Northern German\"},\n\tlanguage = \"de\",\n}\naliases[\"northern German\"] = \"Northern German\"\naliases[\"\
      North German\"] = \"Northern German\"\naliases[\"north German\"] = \"Northern German\"\n\nlabels[\"Northumbrian\"] = {\n\tWikipedia = \"Northumbrian dialect\",\n\tplain_categories = { \"Northumbrian Old English\", \"Anglian Old English\" },\n\tlanguage\
      \ = \"ang\",\n}\n\nlabels[\"Northwest Germanic\"] = {\n\tWikipedia = \"Northwest Germanic languages\",\n\tplain_categories = {\"Northwest Proto-Germanic\"},\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"Nunavik\"] = {\n\tWikipedia = \"Inuktitut#Nunavik\",\n\
      \tplain_categories = {\"Nunavik Inuktitut\"},\n\tlanguage = \"iu\",\n}\naliases[\"Nunavimmiutitut\"] = \"Nunavik\"\naliases[\"Inuttitut\"] = \"Nunavik\"\n\nlabels[\"Nynorsk\"] = {\n\tdisplay = \"Nynorsk\",\n\tplain_categories = {\"Norwegian Nynorsk\"},\n\
      \tlanguage = \"nn\",\n}\n\nlabels[\"Old\"] = {\n    display = \"[[w:Old Avestan|Old Avestan]]\",\n    language = \"ae\",\n    track = true,\n}\naliases[\"Old Avestan\"] = \"Old\"\n\nlabels[\"Old East Norse\"] = {\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Old East Norse\"},\n\tlanguage = \"non\",\n}\naliases[\"East Norse\"] = \"Old East Norse\"\n\nlabels[\"Old Gutnish\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Old Gutnish Norse\"},\n\tlanguage = \"non\",\n}\naliases[\"Old Gotlandic\"] =\
      \ \"Old Gutnish\"\n\nlabels[\"Old West Norse\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Old West Norse\"},\n\tlanguage = \"non\",\n}\naliases[\"West Norse\"] = \"Old West Norse\"\n\nlabels[\"Ormulum\"] = {\n\tWikipedia = \"Ormulum\",\n\tplain_categories\
      \ = {\"Middle English terms unique to the Ormulum\"},\n\tlanguage = \"enm\",\n}\n\nlabels[\"Oxford British spelling\"] = {\n\tdisplay = \"[[w:Oxford spelling|Oxford]] [[British English]]\",\n\tplain_categories = {\"Oxford spellings\"},\n\tlanguage = \"\
      en\",\n}\naliases[\"Oxford\"] = \"Oxford British spelling\"\n\nlabels[\"Oxyrhynchite\"] = {\n\tWikipedia = \"Coptic language#Oxyrhynchite\",\n\tplain_categories = {\"Oxyrhynchite Coptic\"},\n\tlanguage = \"cop\",\n}\naliases[\"Mesokemic\"] = \"Oxyrhynchite\"\
      \n\nlabels[\"Palatine German\"] = {\n\tdisplay = \"Palatine\",\n\tWikipedia = \"Palatine German language\",\n\tplain_categories = {\"Palatine German\"},\n\tlanguage = \"gmw-rfr\",\n}\naliases[\"Palatinate German\"] = \"Palatine German\"\naliases[\"Pälzisch\"\
      ] = \"Palatine German\"\naliases[\"Pfälzisch\"] = \"Palatine German\"\n\nlabels[\"Pennsylvania Dutch English\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Pennsylvania Dutch English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Pinghua\"] = {\n\tdisplay\
      \ = \"Pinghua\",\n\tWikipedia = true,\n\tplain_categories = {\"Pinghua Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Pomeranian Low German\"] = {\n\tdisplay = \"Pomeranian\",\n\tWikipedia = true,\n\tplain_categories = {\"Pomeranian Low German\"},\n\t\
      language = \"nds-de\",\n}\naliases[\"Pomeranian LG\"] = \"Pomeranian Low German\"\n\nlabels[\"Potteries\"] = {\n\tWikipedia = \"Potteries dialect\",\n\tplain_categories = {\"Potteries English\"},\n\tlanguage = \"en\",\n}\naliases[\"Potteries dialect\"\
      ] = \"Potteries\"\n\nlabels[\"Puter\"] = {\n\tWikipedia = \"Putèr\",\n\tplain_categories = {\"Puter Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Ripuarian\"] = {\n\tWikipedia = \"Ripuarian language\",\n\tplain_categories = {\"Ripuarian Central Franconian\"\
      },\n\tlanguage = \"gmw-cfr\",\n}\naliases[\"Ripuarian Franconian\"] = \"Ripuarian\"\naliases[\"Ripuarisch\"] = \"Ripuarian\"\n\n--[[\nThis category has been deleted.\nlabels[\"Royal Thai\"] = {\n\tdisplay = \"royal\",\n\tplain_categories = {\"Thai royal\
      \ vocabulary\"},\n\tlanguage = \"\",\n}\n]]\n\nlabels[\"Rumantsch Grischun\"] = {\n\tWikipedia = true,\n\tlanguage = \"rm\",\n}\n\nlabels[\"Saarlandic\"] = {\n\tdisplay = \"Saarland\",\n\tWikipedia = \"Saarland\",\n\tplain_categories = {\"Saarland German\"\
      },\n\tlanguage = \"\",\n}\naliases[\"Saarländisch\"] = \"Saarlandic\"\naliases[\"Saarlandish\"] = \"Saarlandic\"\n\nlabels[\"Sahidic\"] = {\n\tWikipedia = \"Coptic language#Sahidic\",\n\tplain_categories = {\"Sahidic Coptic\"},\n\tlanguage = \"cop\",\n\
      }\naliases[\"Thebaic\"] = \"Sahidic\"\n\nlabels[\"Scottish English\"] = {\n\tdisplay = \"Scotland\",\n\tWikipedia = true,\n\tplain_categories = {\"Scottish English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"Shahbazgarhi\"] = {\n\tdisplay = \"Shahbazgarhi\"\
      ,\n\tWikipedia = \"Shahbaz Garhi\",\n\tplain_categories = {\"Shahbazgarhi Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Shapsug\"] = {\n\tdisplay = \"Shapsug dialect\",\n\tWikipedia = \"Shapsug Adyghe dialect\",\n\tplain_categories = {\"\
      Shapsug Adyghe\"},\n\tlanguage = \"ady\",\n}\n\nlabels[\"Shopski\"] = {\n\tWikipedia = \"Shopi#Dialects\",\n\tplain_categories = {\"Shopski Bulgarian\"},\n\tlanguage = \"bg\",\n}\n\nlabels[\"Silla\"] = {\n\tplain_categories = {\"Silla Old Korean\"},\n\t\
      language = \"oko\",\n}\n\nlabels[\"Sistani\"] = {\n\tWikipedia = \"Sistani dialect\",\n\tplain_categories = {\"Sistani Persian\"},\n\tlanguage = \"fa\",\n}\n\nlabels[\"Siyi\"] = {\n\tWikipedia = \"Siyi Yue\",\n\tlanguage = \"zh\",\n}\n\nlabels[\"Skiri\
      \ Pawnee\"] = {\n\tplain_categories = {\"Skiri Pawnee\"},\n\tlanguage = \"paw\",\n}\n\nlabels[\"Sopara\"] = {\n\tdisplay = \"Sopara\",\n\tWikipedia = true,\n\tplain_categories = {\"Sopara Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"South\
      \ African English\"] = {\n\tdisplay = \"South Africa\",\n\tWikipedia = true,\n\tplain_categories = {\"South African English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"South Scots\"] = {\n\tWikipedia = \"Southern Scots\",\n\tplain_categories = {\"South Scots\"\
      },\n\tlanguage = \"sco\",\n}\n\nlabels[\"Southern Dutch\"] = {\n\tdisplay = \"Southern\",\n\tWikipedia = \"Dutch dialects\",\n\tplain_categories = {\"Southern Dutch\"},\n\tlanguage = \"nl\",\n}\n\nlabels[\"Southern England English\"] = {\n\tdisplay = \"\
      Southern England\",\n\tWikipedia = \"English in southern England\",\n\tplain_categories = {\"Southern England English\"},\n\tlanguage = \"en\",\n}\naliases[\"Southern English\"] = \"Southern England English\"\naliases[\"Southern English dialect\"] = \"\
      Southern England English\"\n\nlabels[\"Southern German\"] = {\n\tplain_categories = {\"Southern German\"},\n\tlanguage = \"\",\n}\naliases[\"southern German\"] = \"Southern German\"\naliases[\"South German\"] = \"Southern German\"\naliases[\"south German\"\
      ] = \"Southern German\"\n\nlabels[\"Southern Middle English\"] = {\n\tdisplay = \"Southern\",\n\tplain_categories = {\"Southern Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"Southern ME\"] = \"Southern Middle English\"\naliases[\"South ME\"]\
      \ = \"Southern Middle English\"\naliases[\"Southwest ME\"] = \"Southern Middle English\"\n\nlabels[\"Southern US English\"] = {\n\tdisplay = \"Southern US\",\n\tWikipedia = \"Southern American English\",\n\tplain_categories = {\"Southern US English\"},\n\
      \tlanguage = \"en\",\n}\naliases[\"Southern American English\"] = \"Southern US English\"\n\nlabels[\"Surmiran\"] = {\n\tWikipedia = \"Surmiran dialect\",\n\tplain_categories = {\"Surmiran Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Sursilvan\"]\
      \ = {\n\tWikipedia = \"Sursilvan dialects (Romansh)\",\n\tplain_categories = {\"Sursilvan Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Sussex\"] = {\n\tWikipedia = \"Sussex dialect\",\n\tplain_categories = {\"Sussex English\"},\n\tlanguage = \"en\"\
      ,\n}\n\nlabels[\"Sutsilvan\"] = {\n\tWikipedia = \"Sutsilvan dialects (Romansh)\",\n\tplain_categories = {\"Sutsilvan Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Swiss German\"] = {\n\tdisplay = \"Switzerland\",\n\tWikipedia = true,\n\tplain_categories\
      \ = {\"Switzerland German\"},\n\tlanguage = \"de\",\n}\n\nlabels[\"Switzerland and Liechtenstein spelling\"] = {\n\tdisplay = \"[[Switzerland]] and [[Liechtenstein]]\",\n\tplain_categories = {\"Switzerland and Liechtenstein German forms\"},\n\tlanguage\
      \ = \"de\",\n}\naliases[\"SLDE\"] = \"Switzerland and Liechtenstein spelling\"\n\nlabels[\"Taishanese\"] = {\n\tdisplay = \"[[Taishanese]]\",\n\tplain_categories = {\"Taishanese Chinese\"},\n\tlanguage = \"zh\",\n}\naliases[\"Toishanese\"] = \"Taishanese\"\
      \naliases[\"Hoisanese\"] = \"Taishanese\"\n\nlabels[\"Taiwanese Hakka\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Taiwanese Hakka\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwan Hakka\"] = \"Taiwanese Hakka\"\n\nlabels[\"Taiwanese Mandarin\"] =\
      \ {\n\tWikipedia = true,\n\tplain_categories = {\"Taiwanese Mandarin\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwan Mandarin\"] = \"Taiwanese Mandarin\"\n\nlabels[\"Taiwanese Hokkien\"] = {\n\tWikipedia = \"Taiwanese Hokkien\",\n\tplain_categories = {\"\
      Taiwanese Min Nan\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwanese Min Nan\"] = \"Taiwanese Hokkien\"\naliases[\"Taiwan Hokkien\"] = \"Taiwanese Hokkien\"\naliases[\"Taiwan Min Nan\"] = \"Taiwanese Hokkien\"\n\nlabels[\"Taiwanese Hokkien and Hakka\"]\
      \ = {\n\tdisplay = \"[[w:Taiwanese Hokkien|Taiwanese Hokkien]] and [[w:Taiwanese Hakka|Hakka]]\",\n\tplain_categories = {\"Taiwanese Min Nan\", \"Taiwanese Hakka\"},\n\tlanguage = \"zh\",\n}\naliases[\"Taiwanese Min Nan and Hakka\"] = \"Taiwanese Hokkien\
      \ and Hakka\"\naliases[\"Taiwanese Hakka and Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Hakka and Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Min Nan &amp; Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"\
      Taiwanese Hokkien &amp; Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Hakka &amp; Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwanese Hakka &amp; Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hokkien and\
      \ Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka and Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka and Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Min Nan &amp; Hakka\"] = \"Taiwanese Hokkien\
      \ and Hakka\"\naliases[\"Taiwan Hokkien &amp; Hakka\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka &amp; Min Nan\"] = \"Taiwanese Hokkien and Hakka\"\naliases[\"Taiwan Hakka &amp; Hokkien\"] = \"Taiwanese Hokkien and Hakka\"\n\nlabels[\"\
      Teochew\"] = {\n\tdisplay = \"[[Teochew]]\",\n\tplain_categories = {\"Teochew Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Tosk\"] = {\n\tWikipedia = \"Tosk Albanian\",\n\tplain_categories = {\"Tosk Albanian\"},\n\tlanguage = \"sq\",\n}\n\nlabels[\"\
      Twi\"] = {\n\tdisplay = \"[[w:Twi|Twi]]\",\n\tplain_categories = { \"Twi Akan\" },\n\tlanguage = \"ak\",\n}\naliases[\"Akan Kasa\"] = \"Twi\"\n\nlabels[\"Tyneside\"] = {\n\tplain_categories = {\"Geordie English\"},\n\tlanguage = \"en\",\n}\n\nlabels[\"\
      Ulster Scots\"] = {\n\tWikipedia = \"Ulster Scots dialects\",\n\tplain_categories = {\"Ulster Scots\"},\n\tlanguage = \"sco\",\n}\naliases[\"Ullans\"] = \"Ulster Scots\"\n\nlabels[\"US English\"] = {\n\tdisplay = \"US\",\n\tWikipedia = \"American English\"\
      ,\n\tplain_categories = {\"American English\"},\n\tlanguage = \"en\",\n}\naliases[\"U.S. English\"] = \"US English\"\naliases[\"American English\"] = \"US English\"\n\nlabels[\"Vallader\"] = {\n\tWikipedia = \"Vallader dialect (Romansh)\",\n\tplain_categories\
      \ = {\"Vallader Romansch\"},\n\tlanguage = \"rm\",\n}\n\nlabels[\"Vedic\"] = {\n    display = \"[[w:Vedic Sanskrit|Vedic]]\",\n    plain_categories = {\"Vedic Sanskrit\"},\n    language = \"sa\",\n}\n\nlabels[\"Vegliot\"] = {\n\tdisplay = \"[[w:Dalmatian_language#Vegliot_dialect|Vegliot]]\"\
      ,\n\tplain_categories = {\"Vegliot Dalmatian\"},\n\tlanguage = \"dlm\",\n}\naliases[\"Krk\"] = \"Vegliot\"\n\nlabels[\"Vivaro-Alpine\"] = {\n\tWikipedia = \"Vivaro-Alpine dialect\",\n\tplain_categories = {\"Vivaro-Alpine Occitan\"},\n\tlanguage = \"oc\"\
      ,\n}\n\nlabels[\"Walser\"] = {\n\tWikipedia = \"Walser German\",\n\tplain_categories = {\"Walser German\"},\n\tlanguage = \"gsw\"\n}\naliases[\"wae\"] = \"Walser\"\naliases[\"Waser German\"] = \"Walser\"\naliases[\"Walserdeutsch\"] = \"Walser\"\n\nlabels[\"\
      West Arabian\"] = {\n\tdisplay = \"Hejazi\",\n\tplain_categories = {\"Hejazi Arabic\"},\n\tlanguage = \"ar\",\n}\naliases[\"Hejazi Arabic\"] = \"West Arabian\"\n\nlabels[\"West Country English\"] = {\n\tdisplay = \"West Country\",\n\tWikipedia = true,\n\
      \tplain_categories = {\"West Country English\"},\n\tlanguage = \"en\",\n}\naliases[\"West Country dialect\"] = \"West Country English\"\n\nlabels[\"West Germanic\"] = {\n\tWikipedia = \"West Germanic languages\",\n\tplain_categories = {\"West Proto-Germanic\"\
      },\n\tlanguage = \"gem-pro\",\n}\n\nlabels[\"West Midland Middle English\"] = {\n\tdisplay = \"West Midlands\",\n\tplain_categories = {\"West Midland Middle English\"},\n\tlanguage = \"enm\",\n}\naliases[\"West Midlands ME\"] = \"West Midland Middle English\"\
      \naliases[\"West Midland ME\"] = \"West Midland Middle English\"\n\nlabels[\"West Midlands English\"] = {\n\tdisplay = \"West Midlands\",\n\tWikipedia = true,\n\tplain_categories = {\"West Midlands English\"},\n\tlanguage = \"en\",\n}\naliases[\"West Midlands\
      \ dialect\"] = \"West Midlands English\"\n\nlabels[\"West Saxon\"] = {\n\tWikipedia = \"West Saxon dialect\",\n\tplain_categories = { \"West Saxon Old English\" },\n\tlanguage = \"ang\",\n}\n\n--[=[\nNo category exists yet.\nlabels[\"West Palatine\"] =\
      \ {\n\tdisplay = \"Westpfälzisch\",\n\tWikipedia = \"Palatine German language\",\n\tplain_categories = {\"West Palatine German\"},\n\tlanguage = \"\",\n}\naliases[\"Westpfälzisch\"] = \"West Palatine\"\n]=]\n\nlabels[\"Western Armenian\"] = {\n\tWikipedia\
      \ = true,\n\tplain_categories = {\"Western Armenian\"},\n\tlanguage = \"hy\",\n}\n\nlabels[\"Western Catalan\"] = {\n\tWikipedia = \"Catalan dialects\",\n\tplain_categories = {\"Western Catalan\"},\n\tlanguage = \"ca\",\n}\n\nlabels[\"Western Malayo-Polynesian\"\
      ] = {\n\tWikipedia = \"Western Malayo-Polynesian languages\",\n\tplain_categories = {\"Western Proto-Malayo-Polynesian\"},\n\tlanguage = \"poz-pro\",\n}\n\nlabels[\"Western Pomeranian Low German\"] = {\n\tdisplay = \"Western Pomeranian\",\n\tplain_categories\
      \ = {\"Western Pomeranian Low German\"},\n\tlanguage = \"nds-de\",\n}\naliases[\"West Pomeranian Low German\"] = \"Western Pomeranian Low German\"\naliases[\"Western Pomeranian LG\"] = \"Western Pomeranian Low German\"\naliases[\"West Pomeranian LG\"]\
      \ = \"Western Pomeranian Low German\"\n\nlabels[\"Western Samic\"] = {\n\tplain_categories = {\"Western Proto-Samic\"},\n\tlanguage = \"smi-pro\",\n}\n\nlabels[\"Wood Frisian\"] = {\n\tWikipedia = true,\n\tplain_categories = {\"Wood Frisian\"},\n\tlanguage\
      \ = \"fy\",\n}\n\nlabels[\"Wu\"] = {\n\tdisplay = \"[[Wu]]\",\n\tplain_categories = {\"Wu Chinese\"},\n\tlanguage = \"zh\",\n}\n\nlabels[\"Xiang\"] = {\n\tdisplay = \"[[Xiang]]\",\n\tplain_categories = {\"Xiang Chinese\"},\n\tlanguage = \"zh\",\n}\n\n\
      labels[\"Ye'kwana\"] = {\n\tdisplay = \"Ye'kwana dialect\",\n\tplain_categories = {\"Ye'kwana Maquiritari\"},\n\tlanguage = \"mch\",\n}\naliases[\"Ye'kwana dialect\"] = \"Ye'kwana\"\n\nlabels[\"Yerragudi\"] = {\n\tdisplay = \"Yerragudi\",\n\tplain_categories\
      \ = {\"Yerragudi Ashokan Prakrit\"},\n\tlanguage = \"inc-ash\",\n}\n\nlabels[\"Young\"] = {\n    display = \"[[w:Young Avestan|Young Avestan]]\",\n    language = \"ae\",\n}\naliases[\"Young Avestan\"] = \"Young\"\naliases[\"Younger\"] = \"Young\"\naliases[\"\
      Younger Avestan\"] = \"Young\"\n\nlabels[\"Zhongshan Min\"] = {\n\tdisplay = \"Zhongshan Min\",\n\tWikipedia = true,\n\tplain_categories = {\"Zhongshan Min Chinese\"},\n\tlanguage = \"zh\",\n}\n\n--[[\tAdds a \"languages\" field containing [\"&lt;language\
      \ code&gt;\"] = true,\n\t\tif there is a \"language\" field with a non-empty value.\t\t]]\nm_functions.handle_languages(labels)\n\nreturn {\n\t[\"labels\"] = labels,\n\t[\"aliases\"] = aliases,\n\t[\"deprecated\"] = deprecated,\n}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:30.090Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Ffunctions&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=60720 t=1555362449982908
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 671626383, 259724130, 687465929
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6052562\" pageid=\"6052562\" ns=\"828\" title=\"Module:labels/data/functions\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-02-26T03:03:38Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"need to declare field &quot;languages&quot; as table\" xml:space=\"preserve\">export = {}\n\nfunction export.handle_languages(labels)\n\tif type(labels) ~= \"table\" then\n\t\terror('The\
      \ function \"handle_languages\" requires a table as argument.')\n\tend\n\t\n\tfor label, data in pairs(labels) do\n\t\tif data[\"languages\"] then\n\t\t\tfor key, language in ipairs(data[\"languages\"] or {}) do\n\t\t\t\tlabels[label][\"languages\"][language]\
      \ = true\n\t\t\tend\n\t\telseif data[\"language\"] and data[\"language\"] ~= \"\" then\n\t\t\tlabels[label][\"languages\"] = {}\n\t\t\tlabels[label][\"languages\"][data[\"language\"]] = true\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:30.269Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ainh&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52590 t=1555362450170837
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1283.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 929960184, 488492544, 694076367
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4992617" pageid="4992617" ns="10" title="Template:inh"><revisions><rev user="Rua" timestamp="2015-09-22T16:48:56Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Redirected page to [[Template:inherited]]" xml:space="preserve">#REDIRECT [[Template:inherited]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:30.428Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ainherited&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=34465 t=1555362450346859
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1312.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 580275653, 558220891, 692864013
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4992605" pageid="4992605" ns="10" title="Template:inherited"><revisions><rev user="Daniel Carrero" timestamp="2016-07-05T11:05:41Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:etymology/templates|inherited}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:30.642Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51490 t=1555362450516887
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1341.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 930516757, 735553435, 701175488
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4998801\" pageid=\"4998801\" ns=\"828\" title=\"Module:etymology/templates\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-04-07T01:31:40Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"remove term request category from [[Template:desc]] when hyphen (-) is term and there are annotations, for instance in [[σμίλη]]; see [[Wiktionary:Grease pit/2019/April#When a linking\
      \ template is permissibly used with the second parameter being a hyphen but a gloss parameter is present, which I think is not unbeseeming, it categorizes as a term request|Grease Pit discussion]]\" xml:space=\"preserve\">local export = {}\n\nlocal m_languages\
      \ = require(\"Module:languages\")\n\n\nlocal function fetch_lang(lang, parameter)\n\treturn m_languages.getByCode(lang) or m_languages.err(lang, parameter)\nend\n\n\nlocal function fetch_source(code, disallow_family)\n\tlocal source =\n\t\tm_languages.getByCode(code)\n\
      \t\tor require(\"Module:etymology languages\").getByCode(code)\n\t\tor not disallow_family and require(\"Module:families\").getByCode(code)\n\t\n\tif source then\n\t\treturn source\n\telse\n\t\terror(\"The language\" .. (not disallow_family and \", family\"\
      \ or \"\") .. \" or etymology language code \\\"\" .. code .. \"\\\" is not valid.\")\n\tend\nend\n\n\nlocal function fetch_script(sc)\n\tif sc then\n\t\treturn require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\"\
      \ is not valid.\")\n\telse\n\t\treturn nil\n\tend\nend\n\n\nfunction export.etyl(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args,\
      \ params)\n\t\n\tlocal source = fetch_source(args[1])\n\tlocal lang = args[2]\n\tlocal sort_key = args[\"sort\"]\n\t\n\t-- Empty language means English, but \"-\" means no language. Yes, confusing...\n\tif not lang then\n\t\tlang = \"en\"\n\telseif lang\
      \ == \"-\" then\n\t\tlang = nil\n\tend\n\tif lang then\n\t\tlang = fetch_lang(lang, 2)\n\tend\n\tif lang and (lang:getCode() == \"la\" or lang:getCode() == \"nl\") then\n\t\trequire(\"Module:debug\").track(\"etyl/\" .. lang:getCode())\n\t\trequire(\"Module:debug\"\
      ).track(\"etyl/\" .. lang:getCode() .. \"/\" .. source:getCode())\n\tend\n\t\n\treturn require(\"Module:etymology\").format_etyl(lang, source, sort_key)\nend\n\n\nfunction export.cognate(frame)\n\tlocal args = frame:getParent().args\n\t\n\tif args.gloss\
      \ then\n\t\trequire(\"Module:debug\").track(\"cognate/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {},\n\t\t[3] = {alias_of = \"alt\"},\n\t\t[4] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\
      \t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\targs\
      \ = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal source = fetch_source(args[1])\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").format_cognate(\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\t\
      term = args[2],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"]\n\t\t},\n\t\targs[\"\
      sort\"])\nend\n\n\nfunction export.noncognate(frame)\n\treturn export.cognate(frame)\nend\n\n\nfunction export.derived(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3]\
      \ = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\
      \t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\
      \tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_derived(\n\t\tlang, \n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"\
      g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"]\n\t\t},\n\t\targs[\"sort\"])\nend\n\n\nfunction export.inherited(frame)\n\tlocal params = {\n\t\t[1] = {required\
      \ = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"\
      },\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args,\
      \ params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2], \"no family\")\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").format_inherited(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\
      \t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"\
      ]\n\t\t},\n\t\targs[\"sort\"])\nend\n\n\nfunction export.borrowed(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of\
      \ = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\
      \t\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\t\
      return require(\"Module:etymology\").format_borrowed(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts\
      \ = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], false, true, \"plain\")\nend\n\n\nfunction export.learned_borrowed(frame)\n\tlocal args = frame:getParent().args\n\t\n\t\
      if args.gloss then\n\t\trequire(\"Module:debug\").track(\"learned_borrowed/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of\
      \ = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"\
      ] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\
      \tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_borrowed(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\
      \tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"], \"\
      learned\")\nend\n\n\nfunction export.orthographic_borrowed(frame)\n\tlocal args = frame:getParent().args\n\t\n\tif args.gloss then\n\t\trequire(\"Module:debug\").track(\"orthographic_borrowed/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required\
      \ = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"\
      },\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\
      \t}\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_borrowed(\n\
      \t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos\
      \ = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"], \"orthographic\")\nend\n\n\nfunction export.unadapted_borrowed(frame)\n\tlocal args = frame:getParent().args\n\t\n\tif args.gloss then\n\t\t\
      require(\"Module:debug\").track(\"unadapted_borrowed/gloss param\")\n\tend\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5]\
      \ = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"\
      ] = {},\n\t\t\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocap\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source =\
      \ fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\t\n\treturn require(\"Module:etymology\").format_borrowed(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"\
      id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"], \"unadapted\")\n\
      end\n\nfunction export.calque(frame)\n\tlocal args = frame:getParent().args\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t\
      [5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t\n\t\t[\"sort\"] = {},\n\t\t[\"nocap\"] = {type\
      \ = \"boolean\"},\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t}\n\t\n\t-- More informative error message.\n\tif args[\"etyl lang\"] or args[\"etyl term\"] or args[\"etyl t\"] or args[\"etyl tr\"] then\n\t\terror(\"{{[[Template:calque|calque]]}} no longer\
      \ supports parameters beginning with etyl. \" ..\n\t\t\t\"The parameters supported are similar to those used by \" ..\n\t\t\t\"{{[[Template:der|der]]}}, {{[[Template:inh|inh]]}}, \" ..\n\t\t\t\"{{[[Template:bor|bor]]}}. See [[Template:calque/documentation]]\
      \ for more.\")\n\tend\n\t\n\targs = require(\"Module:parameters\").process(args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\t\n\treturn require(\"Module:etymology\").calque(\n\t\tlang,\n\t\t{\n\t\t\tlang\
      \ = source,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"\
      ],\n\t\targs[\"nocap\"],\n\t\targs[\"notext\"])\nend\n\nfunction export.semantic_loan(frame)\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of =\
      \ \"alt\"},\n\t\t[5] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t\
      [\"nocap\"] = {type = \"boolean\"},\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t\t[\"ger\"] = {type = \"boolean\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang\
      \ = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").format_semantic_loan(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\
      \t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\ttr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"\
      nocap\"], args[\"notext\"])\nend\n\nfunction export.psm(frame)\n\t\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"und\"},\n\t\t[3] = {},\n\t\t[4] = {alias_of = \"alt\"},\n\t\t[5] = {alias_of\
      \ = \"t\"},\n\t\t\n\t\t[\"alt\"] = {},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"nocap\"] = {type = \"boolean\"\
      },\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal source = fetch_source(args[2])\n\tlocal\
      \ sc = fetch_script(args[\"sc\"])\n\n\treturn require(\"Module:etymology\").psm(\n\t\tlang,\n\t\t{\n\t\t\tlang = source,\n\t\t\tsc = sc,\n\t\t\tterm = args[3],\n\t\t\talt = args[\"alt\"],\n\t\t\tid = args[\"id\"],\n\t\t\tgenders = args[\"g\"],\n\t\t\t\
      tr = args[\"tr\"],\n\t\t\tts = args[\"ts\"],\n\t\t\tgloss = args[\"t\"],\n\t\t\tpos = args[\"pos\"],\n\t\t\tlit = args[\"lit\"],\n\t\t},\n\t\targs[\"sort\"], args[\"nocap\"], args[\"notext\"])\nend\n\nlocal function qualifier(content)\n\tif content then\n\
      \t\treturn table.concat{\n\t\t\t'&lt;span class=\"ib-brac qualifier-brac\"&gt;(&lt;/span&gt;',\n\t\t\t'&lt;span class=\"ib-content qualifier-content\"&gt;',\n\t\t\tcontent,\n\t\t\t'&lt;/span&gt;',\n\t\t\t'&lt;span class=\"ib-brac qualifier-brac\"&gt;)&lt;/span&gt;'\n\
      \t\t}\n\tend\nend\n\n\nfunction export.descendant(frame)\n\tlocal namespace = mw.title.getCurrentTitle().nsText\n\t\n\tlocal params = {\n\t\t[1] = { required = true },\n\t\t[2] = {},\n\t\t[3] = {},\n\t\t[4] = { alias_of = \"gloss\" },\n\t\t[\"g\"] = {list\
      \ = true},\n\t\t[\"gloss\"] = {},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = { alias_of = \"gloss\" },\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"bor\"] = { type = \"boolean\" },\n\t\t[\"der\"\
      ] = { type = \"boolean\" },\n\t\t[\"clq\"] = { type = \"boolean\" },\n\t\t[\"cal\"] = { alias_of = \"clq\" },\n\t\t[\"calq\"] = { alias_of = \"clq\" },\n\t\t[\"calque\"] = { alias_of = \"clq\" },\n\t\t[\"sl\"] = { type = \"boolean\" },\n\t\t[\"semantic\
      \ loan\"] = { alias_of = \"sl\" },\n\t\t[\"alts\"] = { type = \"boolean\" },\n\t\t[\"sclb\"] = { type = \"boolean\" },\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = args[1]\n\tlocal\
      \ term = args[2]\n\tlocal alt = args[3]\n\tlocal gloss = args[\"gloss\"]\n\tlocal tr = args[\"tr\"]\n\tlocal ts = args[\"ts\"]\n\tlocal sc = args[\"sc\"]\n\t\n\tif namespace == \"Template\" then\n\t\tif not ( sc or lang ) then\n\t\t\tsc = \"Latn\"\n\t\t\
      end\n\t\tif not lang then\n\t\t\tlang = \"en\"\n\t\tend\n\t\tif not term then\n\t\t\tterm = \"word\"\n\t\tend\n\tend\n\t\n\tlang = m_languages.getByCode(lang)\n\t\tor require(\"Module:etymology languages\").getByCode(lang)\n\t\tor m_languages.err(lang,\
      \ 1)\n\t\t\n\tlocal entryLang = require(\"Module:etymology\").getNonEtymological(lang)\n\t\n\tif lang:getCode() ~= entryLang:getCode() then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/descendant/etymological]]\n\t\trequire(\"Module:debug\").track(\"\
      descendant/etymological\")\n\t\trequire(\"Module:debug\").track(\"descendant/etymological/\" .. lang:getCode())\n\tend\n\t\n\tif sc then\n\t\tsc = require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\"\
      )\n\tend\n\t\n\tlocal languageName = lang:getCanonicalName()\n\tlanguageName = mw.ustring.gsub(languageName, \"^Proto%-\", \"\")\n\t\n\tlocal link = \"\"\n\t\n\tif term ~= \"-\" then\n\t\tlink = require(\"Module:links\").full_link(\n\t\t\t{\n\t\t\t\tlang\
      \ = entryLang,\n\t\t\t\tsc = sc,\n\t\t\t\tterm = term,\n\t\t\t\talt = alt,\n\t\t\t\tid = args[\"id\"],\n\t\t\t\ttr = tr,\n\t\t\t\tts = ts,\n\t\t\t\tgenders = args[\"g\"],\n\t\t\t\tgloss = gloss,\n\t\t\t\tpos = args[\"pos\"],\n\t\t\t\tlit = args[\"lit\"\
      ],\n\t\t\t},\n\t\t\tnil,\n\t\t\ttrue)\n\telseif ts or gloss then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/descendant/no term]]\n\t\trequire \"Module:debug\".track(\"descendant/no term\")\n\t\tlink = require(\"Module:links\").full_link(\n\t\t\t\
      {\n\t\t\t\tlang = entryLang,\n\t\t\t\tsc = sc,\n\t\t\t\tts = ts,\n\t\t\t\tgloss = gloss,\n\t\t\t},\n\t\t\tnil,\n\t\t\ttrue)\n\t\tlink = link\n\t\t\t:gsub(\"&lt;small&gt;%[Term%?%]&lt;/small&gt; \", \"\")\n\t\t\t:gsub(\"%[%[Category:[^%[%]]+ term requests%]%]\"\
      , \"\")\n\telse -- display no link at all\n\t\t-- [[Special:WhatLinksHere/Template:tracking/descendant/no term or annotations]]\n\t\trequire \"Module:debug\".track(\"descendant/no term or annotations\")\n\tend\n\t\n\tlocal function add_tooltip(text, tooltip)\n\
      \t\treturn '&lt;span title=\"' .. tooltip .. '\"&gt;' .. text .. '&lt;/span&gt;'\n\tend\n\t\n\tlocal label, arrow, alts, calque, semantic_loan\n\t\n\tif args[\"sclb\"] then\n\t\tif sc then\n\t\t\tlabel = sc:getCanonicalName()\n\t\telse\n\t\t\tlabel = require(\"\
      Module:scripts\").findBestScript(term, lang):getCanonicalName()\n\t\tend\n\telse\n\t\tlabel = languageName\n\tend\n\t\n\tif args[\"bor\"] then\n\t\tarrow = add_tooltip(\"→ \", \"borrowed\")\n\telseif args[\"clq\"] then\n\t\tarrow = add_tooltip(\"→ \",\
      \ \"calque\")\n\telseif args[\"sl\"] then\n\t\tarrow = add_tooltip(\"→ \", \"semantic loan\")\n\telseif args[\"der\"] then\n\t\tarrow = add_tooltip(\"⇒ \", \"derived by addition of morphemes\")\n\telse\n\t\tarrow = \"\"\n\tend\n\t\n\tif args[\"alts\"]\
      \ then\n\t\t-- [[Special:WhatLinksHere/Template:tracking/desc/alts]]\n\t\trequire(\"Module:debug\").track(\"desc/alts\")\n\t\talts = require(\"Module:descendants tree\").getAlternativeForms(entryLang, term)\n\tend\n\t\n\tif args[\"clq\"] then\n\t\tcalque\
      \ = \" \" .. qualifier(\"calque\")\n\telse\n\t\tcalque = \"\"\n\tend\n\t\n\tif args[\"sl\"] then\n\t\tsemantic_loan = \" \" .. qualifier(\"semantic loan\")\n\telse\n\t\tsemantic_loan = \"\"\n\tend\n\t\n\treturn table.concat{arrow, label, \": \", link,\
      \ alts or \"\", calque, semantic_loan}\nend\n\nfunction export.misc_variant(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {},\n\t\t[3] = {alias_of = \"alt\"},\n\t\t[4] = {alias_of = \"t\"},\n\t\t\n\t\t[\"alt\"]\
      \ = {},\n\t\t[\"gloss\"] = {alias_of = \"t\"},\n\t\t[\"g\"] = {list = true},\n\t\t[\"id\"] = {},\n\t\t[\"lit\"] = {},\n\t\t[\"pos\"] = {},\n\t\t[\"t\"] = {},\n\t\t[\"tr\"] = {},\n\t\t[\"ts\"] = {},\n\t\t[\"sc\"] = {},\n\t\t\n\t\t[\"nocap\"] = {type = \"\
      boolean\"}, -- should be processed in the template itself\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocat\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\
      \t\n\tlocal lang = fetch_lang(args[1], 1)\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\tlocal parts = {}\n\tif not args[\"notext\"] then\n\t\ttable.insert(parts, frame.args[\"text\"])\n\tend\n\tif args[2] or args[\"alt\"] then\n\t\tif not args[\"notext\"\
      ] then\n\t\t\ttable.insert(parts, \" \")\n\t\t\ttable.insert(parts, frame.args[\"oftext\"] or \"of\")\n\t\t\ttable.insert(parts, \" \")\n\t\tend\n\t\ttable.insert(parts, require(\"Module:links\").full_link(\n\t\t\t{\n\t\t\t\tlang = lang,\n\t\t\t\tsc =\
      \ sc,\n\t\t\t\tterm = args[2],\n\t\t\t\talt = args[\"alt\"],\n\t\t\t\tid = args[\"id\"],\n\t\t\t\ttr = args[\"tr\"],\n\t\t\t\tts = args[\"ts\"],\n\t\t\t\tgenders = args[\"g\"],\n\t\t\t\tgloss = args[\"t\"],\n\t\t\t\tpos = args[\"pos\"],\n\t\t\t\tlit =\
      \ args[\"lit\"],\n\t\t\t},\n\t\t\t\"term\",\n\t\t\ttrue))\n\tend\n\tif not args[\"nocat\"] and frame.args[\"cat\"] then\n\t\tlocal categories = {}\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" \" .. frame.args[\"cat\"])\n\t\ttable.insert(parts,\
      \ require(\"Module:utilities\").format_categories(categories, lang, args[\"sort\"]))\n\tend\n\n\treturn table.concat(parts)\nend\n\nfunction export.misc_variant_no_link(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\n\t\t\
      [\"title\"] = {},\n\t\t[\"nocap\"] = {type = \"boolean\"}, -- should be processed in the template itself\n\t\t[\"notext\"] = {type = \"boolean\"},\n\t\t[\"nocat\"] = {type = \"boolean\"},\n\t\t[\"sort\"] = {},\n\t}\n\n\tif frame.args[\"title2_alias\"]\
      \ then\n\t\tparams[2] = {alias_of = \"title\"}\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = fetch_lang(args[1], 1)\n\n\tlocal parts = {}\n\tif not args[\"notext\"] then\n\t\ttable.insert(parts,\
      \ args[\"title\"] or frame.args[\"text\"])\n\tend\n\tif not args[\"nocat\"] and frame.args[\"cat\"] then\n\t\tlocal categories = {}\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" \" .. frame.args[\"cat\"])\n\t\ttable.insert(parts, require(\"\
      Module:utilities\").format_categories(categories, lang, args[\"sort\"]))\n\tend\n\n\treturn table.concat(parts)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:30.844Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata3%2Fe&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55445 t=1555362450731117
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:30 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1314.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 663548647, 641153183, 690998952
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4206196\" pageid=\"4206196\" ns=\"828\" title=\"Module:languages/data3/e\"><revisions><rev user=\"Mahagaja\" timestamp=\"2019-04-13T12:32:25Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local u = mw.ustring.char\n\n-- UTF-8 encoded strings for some commonly-used diacritics\nlocal GRAVE     = u(0x0300)\nlocal ACUTE     = u(0x0301)\nlocal CIRC\
      \      = u(0x0302)\nlocal TILDE     = u(0x0303)\nlocal MACRON    = u(0x0304)\nlocal BREVE     = u(0x0306)\nlocal DOTABOVE  = u(0x0307)\nlocal DIAER     = u(0x0308)\nlocal CARON     = u(0x030C)\nlocal DGRAVE    = u(0x030F)\nlocal INVBREVE  = u(0x0311)\n\
      local DOTBELOW  = u(0x0323)\nlocal RINGBELOW = u(0x0325)\nlocal CEDILLA   = u(0x0327)\n\nlocal Latn = {\"Latn\"}\n\nlocal m = {}\n\nm[\"ebg\"] = {\n\t\"Ebughu\",\n\t\"Q35294\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"ebk\"] = {\n\t\"Eastern Bontoc\"\
      ,\n\tnil,\n\t\"phi\",\n\totherNames = {\"Eastern Bontok\"},\n\tscripts = Latn,\n}\n\nm[\"ebo\"] = {\n\t\"Teke-Ebo\",\n\t\"Q36473\",\n\tscripts = Latn,\n}\n\nm[\"ebr\"] = {\n\t\"Ebrié\",\n\t\"Q36644\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"ebu\"\
      ] = {\n\t\"Embu\",\n\t\"Q35318\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ecr\"] = {\n\t\"Eteocretan\",\n\t\"Q35461\",\n\tscripts = {\"Grek\"},\n}\n\nm[\"ecs\"] = {\n\t\"Ecuadorian Sign Language\",\n\t\"Q3436769\",\n\t\"sgn\",\n\tscripts = Latn, -- when\
      \ documented\n}\n\nm[\"ecy\"] = {\n\t\"Eteocypriot\",\n\t\"Q35309\",\n\tscripts = {\"Cprt\"},\n}\n\nm[\"eee\"] = {\n\t\"E\",\n\t\"Q35386\",\n\t\"qfa-mix\",\n\totherNames = {\"Kjang E\"},\n\tscripts = {\"Hani\", \"Latn\"},\n}\n\nm[\"efa\"] = {\n\t\"Efai\"\
      ,\n\t\"Q3813297\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"efe\"] = {\n\t\"Efe\",\n\t\"Q56354\",\n\tscripts = Latn,\n}\n\nm[\"efi\"] = {\n\t\"Efik\",\n\t\"Q35377\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"ega\"] = {\n\t\"Ega\",\n\t\"Q3914927\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"egl\"] = {\n\t\"Emilian\",\n\t\"Q1057898\",\n\t\"roa-git\",\n\totherNames = {\"Emiliano\"},\n\tscripts = Latn,\n\twikimedia_codes = {\"eml\"},\n}\n\nm[\"ego\"] = {\n\t\"Eggon\",\n\t\"Q35300\",\n\t\"nic-bco\",\n\tscripts =\
      \ Latn,\n}\n\nm[\"egy\"] = {\n\t\"Egyptian\",\n\t\"Q50868\",\n\t\"egx\",\n\totherNames = {\"Ancient Egyptian\"},\n\tscripts = {\"Latinx\", \"Egyp\", \"Egyd\"},\n}\n\nm[\"ehu\"] = {\n\t\"Ehueun\",\n\t\"Q3441392\",\n\t\"alv-edo\",\n\tscripts = Latn,\n}\n\
      \nm[\"eip\"] = {\n\t\"Eipomek\",\n\t\"Q5349839\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"eit\"] = {\n\t\"Eitiep\",\n\t\"Q5350030\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"eiv\"] = {\n\t\"Askopan\",\n\t\"Q56324\",\n\tscripts = Latn,\n}\n\nm[\"eja\"\
      ] = {\n\t\"Ejamat\",\n\t\"Q6269820\",\n\tscripts = Latn,\n}\n\nm[\"eka\"] = {\n\t\"Ekajuk\",\n\t\"Q35250\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"eke\"] = {\n\t\"Ekit\",\n\t\"Q3509628\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"ekg\"] = {\n\t\
      \"Ekari\",\n\t\"Q5350305\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"eki\"] = {\n\t\"Eki\",\n\t\"Q5350418\",\n\tscripts = Latn,\n}\n\nm[\"ekl\"] = {\n\t\"Kolhe\",\n\t\"Q6426945\",\n\totherNames = {\"Kol\", \"Kol (Bangladesh)\"},\n\tscripts = Latn,\n}\n\
      \nm[\"ekm\"] = {\n\t\"Elip\",\n\t\"Q12952414\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"eko\"] = {\n\t\"Koti\",\n\t\"Q29930\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"ekp\"] = {\n\t\"Ekpeye\",\n\t\"Q35254\",\n\t\"alv-von\",\n\tscripts = Latn,\n}\n\
      \nm[\"ekr\"] = {\n\t\"Yace\",\n\t\"Q36901\",\n\tscripts = Latn,\n}\n\nm[\"eky\"] = {\n\t\"Eastern Kayah\",\n\t\"Q25559417\",\n\t\"kar\",\n\tscripts = {\"Kali\"},\n}\n\nm[\"ele\"] = {\n\t\"Elepi\",\n\t\"Q5359444\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\
      \nm[\"elh\"] = {\n\t\"El Hugeirat\",\n\t\"Q5351410\",\n\tscripts = Latn,\n}\n\nm[\"eli\"] = {\n\t\"Nding\",\n\t\"Q36176\",\n\tscripts = Latn,\n}\n\nm[\"elk\"] = {\n\t\"Elkei\",\n\t\"Q5364210\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"elm\"] = {\n\t\
      \"Eleme\",\n\t\"Q3914427\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"elo\"] = {\n\t\"El Molo\",\n\t\"Q56719\",\n\t\"cus\",\n\tscripts = Latn,\n}\n\nm[\"elu\"] = {\n\t\"Elu\",\n\t\"Q3364594\",\n\t\"poz-aay\",\n\tscripts = Latn,\n}\n\nm[\"elx\"] = {\n\
      \t\"Elamite\",\n\t\"Q35470\",\n\t\"qfa-iso\",\n\tscripts = {\"Xsux\"},\n}\n\nm[\"ema\"] = {\n\t\"Emai\",\n\t\"Q35428\",\n\t\"alv-edo\",\n\totherNames = {\"Aoma\", \"Ora\", \"Emai-Iuleha-Ora\"},\n\tscripts = Latn,\n}\n\nm[\"emb\"] = {\n\t\"Embaloh\",\n\t\
      \"Q5369424\",\n\t\"poz\",\n\totherNames = {\"Maloh\", \"Malo\", \"Matoh\", \"Mbaloh\", \"Memaloh\", \"Palin\", \"Pari\", \"Sangau\", \"Sanggau\", \"Kalis\"},\n\tscripts = Latn,\n}\n\nm[\"eme\"] = {\n\t\"Emerillon\",\n\t\"Q3588942\",\n\t\"tup-gua\",\n\t\
      otherNames = {\"Emerilon\", \"Emerion\", \"Mereo\", \"Melejo\", \"Mereyo\", \"Teco\"},\n\tscripts = Latn,\n}\n\nm[\"emg\"] = {\n\t\"Eastern Meohang\",\n\t\"Q12952840\",\n\tscripts = {\"Deva\"},\n}\n\nm[\"emi\"] = {\n\t\"Mussau-Emira\",\n\t\"Q6943093\"\
      ,\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"emk\"] = {\n\t\"Eastern Maninkakan\",\n\t\"Q11002130\",\n\tscripts = {\"Latn\", \"Arab\", \"Nkoo\"},\n}\n\nm[\"emm\"] = {\n\t\"Mamulique\",\n\t\"Q3285082\",\n\tscripts = Latn,\n}\n\nm[\"emn\"] = {\n\t\"Eman\"\
      ,\n\t\"Q5368975\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"emp\"] = {\n\t\"Northern Emberá\",\n\t\"Q2391297\",\n\t\"sai-chc\",\n\tscripts = Latn,\n}\n\nm[\"ems\"] = {\n\t\"Alutiiq\",\n\t\"Q27992\",\n\t\"ypk\",\n\tscripts = Latn,\n}\n\nm[\"emu\"] =\
      \ {\n\t\"Eastern Muria\",\n\t\"Q12952883\",\n\t\"dra\",\n\tancestors = {\"gon\"},\n}\n\nm[\"emw\"] = {\n\t\"Emplawas\",\n\t\"Q5374265\",\n\tscripts = Latn,\n}\n\nm[\"emx\"] = {\n\t\"Erromintxela\",\n\t\"Q1122188\",\n\tscripts = Latn,\n}\n\nm[\"emy\"] =\
      \ {\n\t\"Epigraphic Mayan\",\n\t\"Q301355\",\n\t\"myn\",\n\totherNames = {\"Classic Ch'olti'an\", \"Ch'olti'\"},\n\tscripts = {\"Maya\"},\n}\n\nm[\"ena\"] = {\n\t\"Apali\",\n\t\"Q3504201\",\n\tscripts = Latn,\n}\n\nm[\"enb\"] = {\n\t\"Markweeta\",\n\t\"\
      Q56874\",\n\t\"sdv\",\n\tscripts = Latn,\n}\n\nm[\"enc\"] = {\n\t\"En\",\n\t\"Q3504110\",\n\t\"qfa-tak\",\n\tscripts = Latn,\n}\n\nm[\"end\"] = {\n\t\"Ende\",\n\t\"Q2067656\",\n\t\"poz-cet\",\n\tscripts = Latn,\n}\n\nm[\"enf\"] = {\n\t\"Forest Enets\"\
      ,\n\t\"Q30249597\",\n\t\"syd\",\n\tscripts = Latn,\n}\n\nm[\"enh\"] = {\n\t\"Tundra Enets\",\n\t\"Q25559411\",\n\t\"syd\",\n\tscripts = Latn,\n}\n\nm[\"enl\"] = {\n\t\"Enlhet\",\n\t\"Q15462671\",\n\t\"sai-mas\",\n\totherNames = {\"Lengua\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"enm\"] = {\n\t\"Middle English\",\n\t\"Q36395\",\n\t\"gmw\",\n\totherNames = {\"Medieval English\", \"Mediaeval English\"},\n\tscripts = Latn,\n\tancestors = {\"ang\"},\n\tentry_name = {\n\t\tfrom = {\"[ĀÁ]\", \"[āá]\", \"[ǢǼ]\", \"\
      [ǣǽ]\", \"Ċ\", \"ċ\", \"[ĒÉĖ]\", \"[ēéė]\", \"Ġ\", \"ġ\", \"[ĪÍ]\", \"[īí]\", \"[ŌÓ]\", \"[ōó]\", \"[ŪÚ]\", \"[ūú]\", \"[ȲÝ]\", \"[ȳý]\", MACRON, ACUTE, DOTABOVE},\n\t\tto   = {\"A\", \"a\", \"Æ\", \"æ\", \"C\", \"c\", \"E\", \"e\", \"G\", \"g\", \"I\"\
      , \"i\", \"O\", \"o\", \"U\", \"u\", \"Y\", \"y\"}},\n}\n\nm[\"enn\"] = {\n\t\"Engenni\",\n\t\"Q3915365\",\n\t\"alv-edo\",\n\tscripts = Latn,\n}\n\nm[\"eno\"] = {\n\t\"Enggano\",\n\t\"Q2669164\",\n\t\"poz\",\n\tscripts = Latn,\n}\n\nm[\"enq\"] = {\n\t\"\
      Enga\",\n\t\"Q1143040\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"enr\"] = {\n\t\"Emem\",\n\t\"Q5370369\",\n}\n\nm[\"enu\"] = {\n\t\"Enu\",\n\t\"Q5380858\",\n\t\"tbq-lol\",\n}\n\nm[\"env\"] = {\n\t\"Enwan\",\n\t\"Q3438334\",\n\t\"alv-edo\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"enw\"] = {\n\t\"Enwang\",\n\t\"Q11134434\",\n\t\"nic-bco\",\n\totherNames = {\"Enwan\"},\n\tscripts = Latn,\n}\n\nm[\"enx\"] = {\n\t\"Enxet\",\n\t\"Q15462609\",\n\t\"sai-mas\",\n\totherNames = {\"Lengua\"},\n\tscripts = Latn,\n}\n\n\
      m[\"eot\"] = {\n\t\"Eotile\",\n\t\"Q3915347\",\n\t\"alv-kwa\",\n\totherNames = {\"Beti\"},\n\tscripts = Latn,\n}\n\nm[\"epi\"] = {\n\t\"Epie\",\n\t\"Q35291\",\n\t\"alv-edo\",\n\tscripts = Latn,\n}\n\nm[\"era\"] = {\n\t\"Eravallan\",\n\t\"Q5385061\",\n\t\
      \"dra\",\n}\n\nm[\"erg\"] = {\n\t\"Sie\",\n\t\"Q426254\",\n\tscripts = Latn,\n}\n\nm[\"erh\"] = {\n\t\"Eruwa\",\n\t\"Q3441244\",\n\t\"alv-edo\",\n\tscripts = Latn,\n}\n\nm[\"eri\"] = {\n\t\"Ogea\",\n\t\"Q7079984\",\n\t\"ngf-mad\",\n\totherNames = {\"Erima\"\
      },\n\tscripts = Latn,\n}\n\nm[\"erk\"] = {\n\t\"South Efate\",\n\t\"Q3449070\",\n\t\"poz-vnc\",\n\totherNames = {\"Efate\", \"Vate\", \"Vaté\"},\n\tscripts = Latn,\n}\n\nm[\"ero\"] = {\n\t\"Horpa\",\n\t\"Q56854\",\n\t\"sit\",\n\totherNames = {\"Ergong\"\
      , \"Danba\", \"Stau\", \"rTau\", \"Rtau\", \"Daofuhua\", \"Bawang\", \"Bopa\", \"Dawu\", \"Geshitsa\", \"Geshiza\", \"Geshizahua\", \"Hor\", \"Huo'er\", \"Hórsók\", \"Nyagrong-Minyag\", \"Pawang\", \"Rgu\", \"Western rGyalrong\", \"Western Gyarong\", \"\
      Western Jiarong\", \"Xinlong-Muya\"},\n}\n\nm[\"err\"] = {\n\t\"Erre\",\n\t\"Q10488401\",\n\tscripts = Latn,\n}\n\nm[\"ers\"] = {\n\t\"Ersu\",\n\t\"Q12952417\",\n\t\"sit-qia\",\n\totherNames = {\"Duoxu\", \"Erhsu\"},\n\tscripts = Latn, -- also Ersu Shaba\n\
      }\n\nm[\"ert\"] = {\n\t\"Eritai\",\n\t\"Q56376\",\n\t\"paa-lkp\",\n\tscripts = Latn,\n}\n\nm[\"erw\"] = {\n\t\"Erokwanas\",\n\t\"Q5395296\",\n\t\"poz-hce\",\n\tscripts = Latn,\n}\n\nm[\"ese\"] = {\n\t\"Ese Ejja\",\n\t\"Q2980381\",\n\t\"sai-tac\",\n\totherNames\
      \ = {\"Tiatinagua\"},\n\tscripts = Latn,\n}\n\nm[\"esh\"] = {\n\t\"Eshtehardi\",\n\t\"Q12952418\",\n\t\"xme-ttc\",\n\tscripts = {\"fa-Arab\", \"Latn\"},\n\tancestors = {\"xme-azr\"},\n}\n\nm[\"esi\"] = {\n\t\"North Alaskan Inupiatun\",\n\tnil,\n\t\"esx-inu\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"esk\"] = {\n\t\"Northwest Alaska Inupiatun\",\n\t\"Q25559714\",\n\t\"esx-inu\",\n\tscripts = Latn,\n}\n\nm[\"esl\"] = {\n\t\"Egyptian Sign Language\",\n\t\"Q5348443\",\n\t\"sgn\",\n}\n\nm[\"esm\"] = {\n\t\"Esuma\",\n\t\"\
      Q16927555\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"esn\"] = {\n\t\"Salvadoran Sign Language\",\n\t\"Q7406492\",\n\t\"sgn\",\n\tscripts = Latn, -- when documented\n}\n\nm[\"eso\"] = {\n\t\"Estonian Sign Language\",\n\t\"Q3196221\",\n\t\"sgn\",\n\t\
      scripts = Latn, -- when documented\n}\n\nm[\"esq\"] = {\n\t\"Esselen\",\n\t\"Q1294243\",\n\tscripts = Latn,\n}\n\nm[\"ess\"] = {\n\t\"Central Siberian Yupik\",\n\t\"Q27993\",\n\t\"ypk\",\n\totherNames = {\"Central Siberian Yup'ik\", \"St. Lawrence Yupik\"\
      , \"St. Lawrence Yup'ik\", \"St. Lawrence Eskimo\", \"Siberian Yupik\", \"Siberian Yup'ik\", \"Siberian Yupik Eskimo\", \"Siberian Yup'ik Eskimo\", \"St. Lawrence Island Eskimo\", \"St. Lawrence Island Yupik\", \"St. Lawrence Island Yup'ik\"},\n\tscripts\
      \ = {\"Cyrl\"},\n}\n\nm[\"esu\"] = {\n\t\"Yup'ik\",\n\t\"Q21117\",\n\t\"ypk\",\n\tscripts = Latn,\n}\n\nm[\"esy\"] = {\n\t\"Eskayan\",\n\t\"Q867086\",\n\t\"art\",\n\tscripts = Latn, -- also its own native script\n}\n\nm[\"etb\"] = {\n\t\"Etebi\",\n\t\"\
      Q11002851\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"etc\"] = {\n\t\"Etchemin\",\n\t\"Q5402493\",\n\t\"alg\",\n\tscripts = Latn,\n}\n\nm[\"eth\"] = {\n\t\"Ethiopian Sign Language\",\n\t\"Q3501903\",\n\t\"sgn\",\n}\n\nm[\"etn\"] = {\n\t\"Eton (Vanuatu)\"\
      ,\n\t\"Q3059362\",\n\t\"poz-oce\",\n\totherNames = {\"Eton\"},\n\tscripts = Latn,\n}\n\nm[\"eto\"] = {\n\t\"Eton (Cameroon)\",\n\t\"Q35317\",\n\t\"bnt\",\n\totherNames = {\"Eton\"},\n\tscripts = Latn,\n}\n\nm[\"etr\"] = {\n\t\"Edolo\",\n\t\"Q5340184\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"ets\"] = {\n\t\"Yekhee\",\n\t\"Q3915848\",\n\t\"alv-edo\",\n\totherNames = {\"Afenmai\", \"Afemai\", \"Etsako\"},\n\tscripts = Latn,\n}\n\nm[\"ett\"] = {\n\t\"Etruscan\",\n\t\"Q35726\",\n\t\"qfa-tyn\",\n\tscripts = {\"Ital\"\
      },\n\ttranslit_module = \"Ital-translit\",\n}\n\nm[\"etu\"] = {\n\t\"Ejagham\",\n\t\"Q35296\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"etx\"] = {\n\t\"Eten\",\n\t\"Q3915392\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"etz\"] = {\n\t\"Semimi\",\n\
      \t\"Q10950308\",\n\tscripts = Latn,\n}\n\nm[\"eve\"] = {\n\t\"Even\",\n\t\"Q29960\",\n\t\"tuw\",\n\tscripts = {\"Cyrl\", \"Latn\"},\n\tentry_name = {\n\tfrom = {\"[Ӣ]\", \"[ӣ]\", \"[Ӯ]\", \"[ӯ]\", MACRON, DOTBELOW, DOTABOVE},\n\tto   = { \"И\",   \"и\"\
      ,   \"У\",   \"у\" }},\n\ttranslit_module = \"eve-translit\",\n}\n\nm[\"evh\"] = {\n\t\"Uvbie\",\n\t\"Q3441344\",\n\t\"alv-edo\",\n\tscripts = Latn,\n}\n\nm[\"evn\"] = {\n\t\"Evenki\",\n\t\"Q30004\",\n\t\"tuw\",\n\tscripts = {\"Cyrl\"},\n\tentry_name =\
      \ {\n\t\tfrom = {\"[Ӣ]\", \"[ӣ]\", \"[Ӯ]\", \"[ӯ]\", MACRON, DOTBELOW, DOTABOVE},\n\t\tto   = { \"И\",   \"и\",   \"У\",   \"у\" }},\n\ttranslit_module = \"evn-translit\",\n}\n\nm[\"ewo\"] = {\n\t\"Ewondo\",\n\t\"Q35459\",\n\t\"bnt\",\n\totherNames = {\"\
      Kolo\"},\n\tscripts = Latn,\n}\n\nm[\"ext\"] = {\n\t\"Extremaduran\",\n\t\"Q30007\",\n\t\"roa-ibe\",\n\tscripts = Latn,\n}\n\nm[\"eya\"] = {\n\t\"Eyak\",\n\t\"Q27480\",\n\t\"xnd\",\n\tscripts = Latn,\n}\n\nm[\"eyo\"] = {\n\t\"Keiyo\",\n\t\"Q56856\",\n\t\
      \"sdv\",\n\tscripts = Latn,\n}\n\nm[\"eza\"] = {\n\t\"Ezaa\",\n\t\"Q11921436\",\n\t\"alv-von\",\n\totherNames = {\"Ezza\", \"Eza\"},\n\tscripts = Latn,\n}\n\nm[\"eze\"] = {\n\t\"Uzekwe\",\n\t\"Q3502244\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nreturn\
      \ m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:31.031Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=49370 t=1555362450924962
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1224.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 925116353, 644131759, 690086116
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4998763\" pageid=\"4998763\" ns=\"828\" title=\"Module:etymology\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-09-01T22:35:52Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"show language code in error message\" xml:space=\"preserve\">local export = {}\n\n\n--[[\tIf language is an etymology language, iterates through parent languages\n\t\tuntil it finds a\
      \ non-etymology language. ]]\nfunction export.getNonEtymological(lang)\n\twhile lang:getType() == \"etymology language\" do\n\t\tlocal parentCode = lang:getParentCode()\n\t\tlocal parent = require(\"Module:languages\").getByCode(parentCode)\n\t\t\tor require(\"\
      Module:etymology languages\").getByCode(parentCode)\n\t\t\tor require(\"Module:families\").getByCode(parentCode)\n\t\t\n\t\tlang = parent\n--\t\tmw.log(terminfo.lang:getCode() .. \" \" .. terminfo.lang:getType())\n\tend\n\t\n\treturn lang\nend\n\n\nlocal\
      \ function termError(terminfo)\n\tif terminfo.lang:getType() == \"family\" then\n\t\tif terminfo.term and terminfo.term ~= \"-\" then\n\t\t\trequire(\"Module:debug\").track(\"etymology/family/has-term\")\n\t\tend\n\t\t\n\t\tterminfo.term = \"-\"\n\tend\n\
      \treturn terminfo\nend\n\n\nlocal function createLink(terminfo, templateName)\n\tlocal link = \"\"\n\t\n\tif terminfo.term == \"-\" then\n\t\t--[=[\n\t\t[[Special:WhatLinksHere/Template:tracking/cognate/no-term]]\n\t\t[[Special:WhatLinksHere/Template:tracking/derived/no-term]]\n\
      \t\t[[Special:WhatLinksHere/Template:tracking/borrowed/no-term]]\n\t\t[[Special:WhatLinksHere/Template:tracking/calque/no-term]]\n\t\t]=]\n\t\trequire(\"Module:debug\").track(templateName .. \"/no-term\")\n\telse\n--\t\tmw.log(terminfo.term)\n\t\tlink\
      \ = \" \" .. require(\"Module:links\").full_link(terminfo, \"term\", true)\n\tend\n\t\n\treturn link\nend\n\n\nfunction export.format_etyl(lang, source, sort_key, categories)\n\tlocal info = {}\n\t\n\t\n\t-- [[Special:WhatLinksHere/Template:tracking/etymology/sortkey]]\n\
      \tif sort_key then\n\t\trequire(\"Module:debug\").track(\"etymology/sortkey\")\n\tend\n\t\n\tif not categories then\n\t\tcategories = {}\n\tend\n\t\n\tif source:getCode() == \"und\" then\n\t\tinfo = {\n\t\t\tdisplay = \"undetermined\",\n\t\t\tcat_name\
      \ = \"other languages\",\n\t\t}\n\telseif source:getCode() == \"mul-tax\" then\n\t\tinfo = {\n\t\t\tdisplay = \"[[w:taxonomic name|taxonomic name]]\",\n\t\t\tcat_name = \"taxonomic names\",\n\t\t}\n\telse\n\t\tinfo.display = source:makeWikipediaLink()\n\
      \t\t\n\t\tif source:getType() == \"family\" then\n\t\t\tinfo.cat_name = source:getCategoryName()\n\t\telse\n\t\t\tinfo.cat_name = source:getCanonicalName()\n\t\tend\n\tend\n\t\n\t-- Add the categories, but only if there is a current language\n\t\n\tif\
      \ lang then\n\t\tlocal m_utilities = require(\"Module:utilities\")\n\t\t\n\t\tif lang:getCode() == source:getCode() then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" twice-borrowed terms\")\n\t\telse\n\t\t\ttable.insert(categories, lang:getCanonicalName()\
      \ .. \" terms derived from \" .. info.cat_name)\n\t\tend\n\t\t\n\t\tcategories = m_utilities.format_categories(categories, lang, sort_key)\n\telse\n\t\tcategories = \"\"\n\tend\n\t\n\treturn \"&lt;span class=\\\"etyl\\\"&gt;\" .. info.display .. categories\
      \ .. \"&lt;/span&gt;\"\nend\n\n\n-- Internal implementation of {{cognate|...}} template\nfunction export.format_cognate(terminfo, sort_key)\n\treturn export.format_derived(nil, terminfo, sort_key, \"cognate\")\nend\n\n\n-- Internal implementation of {{derived|...}}\
      \ template\nfunction export.format_derived(lang, terminfo, sort_key, templateName)\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\t\n\tlocal link = createLink(terminfo,\
      \ templateName or \"derived\")\n\t\n\treturn export.format_etyl(lang, source, sort_key) .. link\nend\n\n\n-- Internal implementation of {{inherited|...}} template\nfunction export.format_inherited(lang, terminfo, sort_key)\n\tlocal source = terminfo.lang\n\
      \n\tterminfo = termError(terminfo)\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tif not lang:hasAncestor(terminfo.lang) and mw.title.getCurrentTitle().nsText ~= \"Template\" then\n\t\tlocal function showLanguage(lang)\n\t\t\treturn\
      \ (\"[[:Category:%s|%s]] (%s)\")\n\t\t\t\t:format(lang:getCategoryName(), lang:getCanonicalName(), lang:getCode())\n\t\tend\n\t\tlocal postscript\n\t\tlocal ancestors = lang:getAncestors()\n\t\tlocal moduleLink = \"[[Module:\"\n\t\t\t.. require(\"Module:languages\"\
      ).getDataModuleName(lang:getCode())\n\t\t\t.. \"]]\"\n\t\tif not ancestors[1] then\n\t\t\tpostscript = showLanguage(lang) .. \" has no ancestors.\"\n\t\telse\n\t\t\tlocal ancestorList = table.concat(\n\t\t\t\trequire(\"Module:fun\").map(\n\t\t\t\t\tshowLanguage,\n\
      \t\t\t\t\tancestors),\n\t\t\t\t\" and \")\n\t\t\tpostscript = (\"The ancestor%s of %s %s %s.\"):format(\n\t\t\t\tancestors[2] and \"s\" or \"\", lang:getCanonicalName(),\n\t\t\t\tancestors[2] and \"are\" or \"is\", ancestorList)\n\t\tend\n\t\terror((\"\
      %s is not set as an ancestor of %s in %s. %s\")\n\t\t\t:format(showLanguage(terminfo.lang), showLanguage(lang), moduleLink, postscript))\n\tend\n\t\n\tlocal categories = {}\n\t\n\tlocal link = createLink(terminfo, \"inherited\")\n\t\n\ttable.insert(categories,\
      \ lang:getCanonicalName() .. \" terms inherited from \" .. source:getCanonicalName())\n\t\n\treturn export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\n\n-- Internal implementation of {{borrowed|...}} template\nfunction export.format_borrowed(lang,\
      \ terminfo, sort_key, nocap, notext, borrowing_type)\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\t\n\tterminfo = termError(terminfo)\n\t\n\tlocal text = \"\"\n\tlocal categories = {}\n\n\tif lang:getCode()\
      \ == source:getCode() then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" twice-borrowed terms\")\n\telseif source:getType() == \"family\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms borrowed from \" .. source:getCategoryName())\n\
      \telse\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms borrowed from \" .. source:getCanonicalName())\n\tend\n\n\tif not notext then\n\t\tif borrowing_type == \"learned\" then\n\t\t\ttext = \"[[learned borrowing|\" .. (nocap and \"l\"\
      \ or \"L\") .. \"earned borrowing]] from \"\n\t\telseif borrowing_type == \"orthographic\" then\n\t\t\ttext = \"[[orthographic|\" .. (nocap and \"o\" or \"O\") .. \"rthographic]] [[Appendix:Glossary#borrowing|borrowing]] from \"\n\t\telseif borrowing_type\
      \ == \"unadapted\" then\n\t\t\ttext = \"[[Appendix:Glossary#unadapted borrowing|\" .. (nocap and \"u\" or \"U\") .. \"nadapted borrowing]] from \"\n\t\telse\n\t\t\ttext = \"[[Appendix:Glossary#loanword|Borrowing]] from \"\n\t\tend\n\tend\n\n\tif borrowing_type\
      \ == \"learned\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" learnedly borrowed terms\")\n\telseif borrowing_type == \"orthographic\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" orthographically borrowed terms\"\
      )\n\telseif borrowing_type == \"unadapted\" then\n\t\tif source:getType() == \"family\" then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" unadapted borrowings from \" .. source:getCategoryName())\n\t\telse\n\t\t\ttable.insert(categories,\
      \ lang:getCanonicalName() .. \" unadapted borrowings from \" .. source:getCanonicalName())\n\t\tend\n\tend\n\t\n\tlocal link = createLink(terminfo, \"borrowed\")\n\t\n\treturn text .. export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\
      \n\n-- Internal implementation of {{calque|...}} template\nfunction export.calque(lang, terminfo, sort_key, nocap, notext)\n\tlocal result = \"\"\n\t\n\tif not notext then\n\t\tresult = result .. \"[[Appendix:Glossary#calque|\" .. (nocap and \"c\" or \"\
      C\") .. \"alque]] of \"\n\tend\n\t\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\n\tlocal categories = {}\n\n\tif source:getType() == \"family\" then\n\t\ttable.insert(categories,\
      \ lang:getCanonicalName() .. \" terms calqued from \" .. source:getCategoryName())\n\telse\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" terms calqued from \" .. source:getCanonicalName())\n\tend\n\t\n\tlocal link = createLink(terminfo, \"\
      calque\")\n\t\n\tresult = result .. \" \" ..  export.format_etyl(lang, source, sort_key, categories) .. link\n\t\n\treturn result\nend\n\n\n-- Internal implementation of {{semantic loan|...}} template\nfunction export.format_semantic_loan(lang, terminfo,\
      \ sort_key, nocap, notext)\n\tif nocap then\n\t\trequire(\"Module:debug\").track(\"semantic_loan/nocap\")\n\tend\n\t\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\n\
      \tlocal text = \"\"\n\tlocal categories = {}\n\n\tif source:getType() == \"family\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" semantic loans from \" .. source:getCategoryName())\n\telse\n\t\ttable.insert(categories, lang:getCanonicalName()\
      \ .. \" semantic loans from \" .. source:getCanonicalName())\n\tend\n\t\n\tif not notext then\n\t\ttext = \"[[w:Semantic loan|\" .. (nocap and \"s\" or \"S\") .. \"emantic loan]] from \"\n\tend\n\t\n\tlocal link = createLink(terminfo, \"semantic_loan\"\
      )\n\t\n\treturn text .. export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\n-- Internal implementation of {{phono-semantic matching|...}} template\nfunction export.psm(lang, terminfo, sort_key, nocap, notext)\n\tif nocap then\n\t\trequire(\"\
      Module:debug\").track(\"psm/nocap\")\n\tend\n\t\n\tlocal source = terminfo.lang\n\t\n\tterminfo.lang = export.getNonEtymological(terminfo.lang)\n\n\tterminfo = termError(terminfo)\n\n\tlocal text = \"\"\n\tlocal categories = {}\n\n\tif source:getType()\
      \ == \"family\" then\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" phono-semantic matchings \")\n\telse\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" phono-semantic matchings \")\n\tend\n\t\n\tif not notext then\n\t\ttext =\
      \ \"[[w:Phono-semantic matching|\" .. (nocap and \"p\" or \"P\") .. \"hono-semantic matching]] of \"\n\tend\n\t\n\tlocal link = createLink(terminfo, \"psm\")\n\t\n\treturn text .. export.format_etyl(lang, source, sort_key, categories) .. link\nend\n\n\
      return export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:31.413Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=64662 t=1555362451299640
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1317.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 194436605, 815489064, 701339273
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6279245\" pageid=\"6279245\" ns=\"828\" title=\"Module:utilities/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-01-04T05:57:22Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 51192985 by [[Special:Contributions/2601:CD:C101:322D:F03C:8688:907:84|2601:CD:C101:322D:F03C:8688:907:84]] ([[User talk:2601:CD:C101:322D:F03C:8688:907:84|talk]]): ???\"\
      \ xml:space=\"preserve\">local data = {}\n\ndata.notneeded = {\n\t[\"und\"] = true,\n\t[\"cmn\"] = true,\n\t[\"ja\"] = true,\n\t[\"zu\"] = true,\n\t[\"nan\"] = true,\n\t[\"yue\"] = true,\n\t[\"ko\"] = true,\n}\n\ndata.neededhassubpage = {\n\t[\"ga\"] =\
      \ true,\n\t[\"gv\"] = true,\n\t[\"nv\"] = true,\n\t[\"roa-jer\"] = true,\n\t[\"fr\"] = true,\n\t[\"rm\"] = true,\n\t[\"prg\"] = true,\n\t[\"gd\"] = true,\n\t[\"twf\"] = true,\n\t[\"en\"] = true,\n\t[\"ro\"] = true,\n\t[\"egl\"] = true,\n\t[\"roa-tar\"\
      ] = true,\n\t[\"gl\"] = true,\n\t[\"ast\"] = true,\n\t[\"br\"] = true,\n}\n\n--[[\n\tScript that should be applied to links in categories.\n]]\ndata.catfix_scripts = {\n\t[\"ab\"] = \"Cyrl\",\n\t[\"ae\"] = \"Avst\",\n\t[\"ar\"] = \"Arab\",\n\t[\"ary\"\
      ] = \"Arab\",\n\t[\"be\"] = \"Cyrl\",\n\t[\"cu\"] = \"Cyrs\",\n\t[\"el\"] = \"Grek\",\n\t[\"grc\"] = \"polytonic\",\n\t[\"he\"] = \"Hebr\",\n\t[\"ka\"] = \"Geor\",\n\t[\"orv\"] = \"Cyrs\",\n\t[\"ru\"] = \"Cyrl\",\n\t[\"sa\"] = \"Deva\",\n\t[\"syl\"] =\
      \ \"Sylo\",\n\t[\"xfa\"] = \"Ital\",\n\t[\"zle-ono\"] = \"Cyrs\",\n\t[\"hi\"] = \"Deva\",\n\t[\"mr\"] = \"Deva\",\n--[[\n\t[\"\"] = \"\",\n]]\n}\n\n-- Namespaces in which format_categories will add categories.\ndata.allowedNamespaces = {\n\t[\"\"] = true,\n\
      \t[\"Appendix\"] = true,\n\t[\"Reconstruction\"] = true,\n\t[\"Citations\"] = true,\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:31.688Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata3%2Fa&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=67497 t=1555362451513059
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1285.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 606933453, 547058569, 697999534
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4206192\" pageid=\"4206192\" ns=\"828\" title=\"Module:languages/data3/a\"><revisions><rev user=\"Mahagaja\" timestamp=\"2019-04-11T12:36:49Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local u = mw.ustring.char\n\n-- UTF-8 encoded strings for some commonly-used diacritics\nlocal GRAVE     = u(0x0300)\nlocal ACUTE     = u(0x0301)\nlocal CIRC\
      \      = u(0x0302)\nlocal TILDE     = u(0x0303)\nlocal MACRON    = u(0x0304)\nlocal BREVE     = u(0x0306)\nlocal DOTABOVE  = u(0x0307)\nlocal DIAER     = u(0x0308)\nlocal CARON     = u(0x030C)\nlocal DGRAVE    = u(0x030F)\nlocal INVBREVE  = u(0x0311)\n\
      local DOTBELOW  = u(0x0323)\nlocal RINGBELOW = u(0x0325)\nlocal CEDILLA   = u(0x0327)\n\n-- Use these in \"scripts\" to save a little memory.\nlocal Arab = {\"Arab\"}\nlocal Cyrl = {\"Cyrl\"}\nlocal Deva = {\"Deva\"}\nlocal Latn = {\"Latn\"}\n\nlocal m\
      \ = {}\n\nm[\"aaa\"] = {\n\t\"Ghotuo\",\n\t\"Q35463\",\n\t\"alv-edo\",\n\totherNames = {\"Otuo\"},\n\tscripts = Latn,\n}\n\nm[\"aab\"] = {\n\t\"Alumu-Tesu\",\n\t\"Q35034\",\n\t\"nic-bco\",\n\totherNames = {\"Alumu\", \"Tesu\"},\n\tscripts = Latn,\n}\n\n\
      m[\"aac\"] = {\n\t\"Ari\",\n\t\"Q1811224\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"aad\"] = {\n\t\"Amal\",\n\t\"Q56708\",\n\t\"paa-iwm\",\n\totherNames = {\"Alai\"},\n\tscripts = Latn,\n}\n\n-- \"aae\" IS TREATED AS \"sq\", SEE WT:LT\n\nm[\"aaf\"] =\
      \ {\n\t\"Aranadan\",\n\t\"Q3507928\",\n\t\"dra\",\n\totherNames = {\"Eranadan\"},\n\tscripts = {\"Mlym\"},\n}\n\nm[\"aag\"] = {\n\t\"Ambrak\",\n\t\"Q4741706\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"aah\"] = {\n\t\"Abu' Arapesh\",\n\t\"Q4670715\"\
      ,\n\t\"qfa-tor\",\n\totherNames = {\"Abu'\", \"Ua\"},\n\tscripts = Latn,\n}\n\nm[\"aai\"] = {\n\t\"Arifama-Miniafia\",\n\t\"Q4790560\",\n\t\"poz-ocw\",\n\totherNames = {\"Arifama\", \"Miniafia\"},\n\tscripts = Latn,\n}\n\nm[\"aak\"] = {\n\t\"Ankave\",\n\
      \t\"Q3446690\",\n\t\"ngf\",\n\totherNames = {\"Angave\"},\n\tscripts = Latn,\n}\n\nm[\"aal\"] = {\n\t\"Afade\",\n\t\"Q56434\",\n\t\"cdc-cbm\",\n\tscripts = Latn,\n}\n\nm[\"aan\"] = {\n\t\"Anambé\",\n\t\"Q3507873\",\n\t\"tup-gua\",\n\totherNames = {\"Anambe\"\
      },\n\tscripts = Latn,\n}\n\nm[\"aao\"] = {\n\t\"Algerian Saharan Arabic\",\n\t\"Q56725\",\n\t\"sem-arb\",\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652),\
      \ u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"aap\"] = {\n\t\"Pará Arára\",\n\t\"Q56807\",\n\t\"sai-car\",\n\totherNames = {\"Arára\"},\n\tscripts = Latn,\n}\n\nm[\"aaq\"] = {\n\t\"Penobscot\",\n\t\"Q3515185\",\n\t\"alg\",\n\totherNames\
      \ = {\"Eastern Abenaki\", \"Eastern Abnaki\"},\n\tscripts = Latn,\n}\n\nm[\"aas\"] = {\n\t\"Aasax\",\n\t\"Q56620\",\n\t\"cus\",\n\totherNames = {\"Aasáx\", \"Asa\", \"Aramanik\", \"Laramanik\"},\n\tscripts = Latn,\n}\n\n-- \"aat\" IS TREATED AS \"sq\"\
      , SEE WT:LT\n\nm[\"aau\"] = {\n\t\"Abau\",\n\t\"Q3073568\",\n\t\"paa-spk\",\n\tscripts = Latn,\n}\n\nm[\"aaw\"] = {\n\t\"Solong\",\n\t\"Q7558834\",\n\t\"poz-ocw\",\n\totherNames = {\"Arove\", \"Arawe\"},\n\tscripts = Latn,\n}\n\nm[\"aax\"] = {\n\t\"Mandobo\
      \ Atas\",\n\t\"Q12636156\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"aaz\"] = {\n\t\"Amarasi\",\n\t\"Q4740192\",\n\t\"poz-cet\",\n\tscripts = Latn,\n}\n\nm[\"aba\"] = {\n\t\"Abé\",\n\t\"Q34833\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"abb\"] = {\n\
      \t\"Bankon\",\n\t\"Q34860\",\n\t\"bnt\",\n\totherNames = {\"Abo\", \"Bo\", \"Abaw\", \"Miang\", \"Mandouka\"},\n\tscripts = Latn,\n}\n\nm[\"abc\"] = {\n\t\"Ambala Ayta\",\n\t\"Q3448896\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"abd\"] = {\n\t\"Camarines\
      \ Norte Agta\",\n\t\"Q3399682\",\n\t\"phi\",\n\totherNames = {\"Manide\"},\n\tscripts = Latn,\n}\n\nm[\"abe\"] = {\n\t\"Abenaki\",\n\t\"Q17502788\",\n\t\"alg\",\n\totherNames = {\"Western Abenaki\", \"Abnaki\", \"Western Abnaki\"},\n\tscripts = Latn,\n\
      }\n\nm[\"abf\"] = {\n\t\"Abai Sungai\",\n\t\"Q4663287\",\n\t\"poz-san\",\n\tscripts = Latn,\n}\n\nm[\"abg\"] = {\n\t\"Abaga\",\n\t\"Q3507954\",\n\t\"paa-kag\",\n\tscripts = Latn,\n}\n\nm[\"abh\"] = {\n\t\"Tajiki Arabic\",\n\t\"Q56833\",\n\t\"sem-arb\"\
      ,\n\tscripts = Arab,\n}\n\nm[\"abi\"] = {\n\t\"Abidji\",\n\t\"Q34781\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"abj\"] = {\n\t\"Aka-Bea\",\n\t\"Q2356391\",\n\t\"qfa-adm\",\n\totherNames = {\"Bea\", \"Aka-Bea-da\", \"Akabeada\", \"Aka-Bia\", \"Bia\"\
      , \"Aka-Bia-da\", \"Akabiada\", \"Bojingiji\"},\n\tscripts = Latn,\n}\n\nm[\"abl\"] = {\n\t\"Abung\",\n\t\"Q49215\",\n\t\"poz-lgx\",\n\totherNames = {\"Pepadun\", \"Lampung Nyo\"},\n\tscripts = Latn,\n}\n\nm[\"abm\"] = {\n\t\"Abanyom\",\n\t\"Q7502\",\n\
      \t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"abn\"] = {\n\t\"Abua\",\n\t\"Q34835\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"abo\"] = {\n\t\"Abon\",\n\t\"Q35121\",\n\t\"nic-bod\",\n\totherNames = {\"Abɔ̃\"},\n\tscripts = Latn,\n}\n\nm[\"abp\"] = {\n\
      \t\"Abenlen Ayta\",\n\t\"Q3436621\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"abq\"] = {\n\t\"Abaza\",\n\t\"Q27567\",\n\t\"cau-abz\",\n\tscripts = Cyrl,\n\ttranslit_module = \"abq-translit\",\n\toverride_translit = true,\n}\n\nm[\"abr\"] = {\n\t\"Abron\"\
      ,\n\t\"Q34831\",\n\t\"alv-kwa\",\n\totherNames = {\"Brong\"},\n\tscripts = Latn,\n}\n\nm[\"abs\"] = {\n\t\"Ambonese Malay\",\n\t\"Q3124354\",\n\t\"crp\",\n\tscripts = Latn,\n}\n\nm[\"abt\"] = {\n\t\"Ambulas\",\n\t\"Q3508015\",\n\t\"paa-spk\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"abu\"] = {\n\t\"Abure\",\n\t\"Q34767\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"abv\"] = {\n\t\"Baharna Arabic\",\n\t\"Q56576\",\n\t\"sem-arb\",\n\totherNames = {\"Bahrani Arabic\"},\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom\
      \ = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"abw\"] = {\n\t\"Pal\",\n\t\"Q7126121\",\n\t\"ngf-mad\",\n\tscripts = Latn,\n}\n\nm[\"abx\"\
      ] = {\n\t\"Inabaknon\",\n\t\"Q2820163\",\n\t\"poz-sbj\",\n\tscripts = Latn,\n}\n\nm[\"aby\"] = {\n\t\"Aneme Wake\",\n\t\"Q3508107\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"abz\"] = {\n\t\"Abui\",\n\t\"Q2822110\",\n\t\"qfa-tap\",\n\tscripts = Latn,\n\
      }\n\nm[\"aca\"] = {\n\t\"Achagua\",\n\t\"Q2822982\",\n\t\"awd\",\n\totherNames = {\"Achawa\", \"Ajagua\"},\n\tscripts = Latn,\n}\n\nm[\"acb\"] = {\n\t\"Áncá\",\n\t\"Q11130787\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"acd\"] = {\n\t\"Gikyode\",\n\t\
      \"Q35256\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"ace\"] = {\n\t\"Acehnese\",\n\t\"Q27683\",\n\t\"cmc\",\n\totherNames = {\"Achinese\", \"Atjehnese\"},\n\tscripts = {\"Latn\", \"Arab\"},\n}\n\nm[\"ach\"] = {\n\t\"Acholi\",\n\t\"Q34926\",\n\t\"sdv\"\
      ,\n\totherNames = {\"Acoli\", \"Shuli\", \"Acooli\"},\n\tscripts = Latn,\n}\n\nm[\"aci\"] = {\n\t\"Aka-Cari\",\n\t\"Q2670418\",\n\t\"qfa-adm\",\n\totherNames = {\"Cari\", \"Aka-Kari\", \"Kari\", \"Chariar\"},\n\tscripts = Latn,\n}\n\nm[\"ack\"] = {\n\t\
      \"Aka-Kora\",\n\t\"Q3433680\",\n\t\"qfa-adm\",\n\totherNames = {\"Kora\"},\n\tscripts = Latn,\n}\n\nm[\"acl\"] = {\n\t\"Akar-Bale\",\n\t\"Q3436825\",\n\t\"qfa-adm\",\n\totherNames = {\"Bale\", \"Bele\", \"Akar-Bele\", \"Balawa\", \"Balwa\", \"Bojingiji\"\
      },\n\tscripts = Latn,\n}\n\nm[\"acm\"] = {\n\t\"Iraqi Arabic\",\n\t\"Q56232\",\n\t\"sem-arb\",\n\totherNames = {\"Mesopotamian Arabic\"},\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F),\
      \ u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"acn\"] = {\n\t\"Achang\",\n\t\"Q56582\",\n\t\"tbq-brm\",\n\totherNames = {\"Xiandao\", \"Ngochang\", \"Ngachang\"},\n\tscripts = Latn,\n}\n\nm[\"acp\"] = {\n\t\
      \"Eastern Acipa\",\n\t\"Q5329945\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"acq\"] = {\n\t\"Ta'izzi-Adeni Arabic\",\n\t\"Q56579\",\n\t\"sem-arb\",\n\totherNames = {\"Southern Yemeni Arabic\"},\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671),\
      \ u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"acr\"] = {\n\t\"Achi\",\n\t\"Q34774\",\n\t\"myn\",\n\totherNames = {\"Achí\", \"Achi Maya\", \"Cubulco\
      \ Achi\", \"Cubulco Achí\", \"Cubulco Achi'\"},\n\tscripts = Latn,\n}\n\nm[\"acs\"] = {\n\t\"Acroá\",\n\t\"Q2829146\",\n\t\"sai-jee\",\n\totherNames = {\"Akroá\", \"Coroá\", \"Acroa\"},\n\tscripts = Latn,\n}\n\nm[\"acu\"] = {\n\t\"Achuar\",\n\t\"Q2823170\"\
      ,\n\t\"sai-jiv\",\n\totherNames = {\"Achuar-Shiwiar\"},\n\tscripts = Latn,\n}\n\nm[\"acv\"] = {\n\t\"Achumawi\",\n\t\"Q56661\",\n\t\"nai-pal\",\n\tscripts = Latn,\n}\n\nm[\"acw\"] = {\n\t\"Hijazi Arabic\",\n\t\"Q56608\",\n\t\"sem-arb\",\n\totherNames =\
      \ {\"Hejazi Arabic\", \"West Arabian Arabic\"},\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\n\
      m[\"acx\"] = {\n\t\"Omani Arabic\",\n\t\"Q56630\",\n\t\"sem-arb\",\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n\
      }\n\nm[\"acy\"] = {\n\t\"Cypriot Arabic\",\n\t\"Q56416\",\n\t\"sem-arb\",\n\tscripts = Arab,\n\tancestors = {\"acm\"},\n}\n\nm[\"acz\"] = {\n\t\"Acheron\",\n\t\"Q34769\",\n\t\"alv\",\n\totherNames = {\"Asheron\"},\n\tscripts = Latn,\n}\n\nm[\"ada\"] =\
      \ {\n\t\"Adangme\",\n\t\"Q35141\",\n\t\"alv-kwa\",\n\totherNames = {\"Dangme\"},\n\tscripts = Latn,\n}\n\nm[\"adb\"] = { -- rename or remove, see RFM\n\t\"Adabe\",\n\t\"Q36872\",\n\tscripts = Latn,\n}\n\nm[\"add\"] = {\n\t\"Dzodinka\",\n\t\"Q35266\",\n\
      \t\"nic-bod\",\n\totherNames = {\"Lidzonka\"},\n\tscripts = Latn,\n}\n\nm[\"ade\"] = {\n\t\"Adele\",\n\t\"Q27740\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"adf\"] = {\n\t\"Dhofari Arabic\",\n\t\"Q56565\",\n\t\"sem-arb\",\n\tscripts = Arab,\n\tentry_name\
      \ = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"adg\"] = {\n\t\"Andegerebinha\",\n\t\"Q3508123\",\n\t\"aus-pam\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"adh\"] = {\n\t\"Adhola\",\n\t\"Q1971400\",\n\t\"sdv\",\n\tscripts = Latn,\n}\n\nm[\"adi\"] = {\n\t\"Adi\",\n\t\"Q56440\",\n\t\"sit-tan\",\n\totherNames = {\"Abor\", \"Ashing\", \"Minyong\", \"Mising\", \"Padam\", \"Panggi\", \"Pasi\"\
      , \"Shimong\", \"Ajukru\"},\n\tscripts = Latn,\n}\n\nm[\"adj\"] = {\n\t\"Adioukrou\",\n\t\"Q34738\",\n\t\"alv-kwa\",\n\totherNames = {\"Adjukru\", \"Adyoukrou\", \"Adyukru\", \"Ajukru\"},\n\tscripts = Latn,\n}\n\nm[\"adl\"] = {\n\t\"Galo\",\n\t\"Q2857892\"\
      ,\n\t\"sit-tan\",\n\totherNames = {\"Gallong\"},\n\tscripts = Latn,\n}\n\nm[\"adn\"] = {\n\t\"Adang\",\n\t\"Q3398276\",\n\t\"qfa-tap\",\n\tscripts = Latn,\n}\n\nm[\"ado\"] = {\n\t\"Abu\",\n\t\"Q56659\",\n\t\"paa-ram\",\n\totherNames = {\"Adjora\"},\n\t\
      scripts = Latn,\n}\n\nm[\"adp\"] = {\n\t\"Adap\",\n\t\"Q3512402\",\n\t\"tbq\",\n\tscripts = {\"Tibt\"},\n\tancestors = {\"dz\"},\n\twikipedia_article = \"Dzongkha\",\t\t-- Considered a dialect of Dzongkha\n}\n\nm[\"adq\"] = {\n\t\"Adangbe\",\n\t\"Q34730\"\
      ,\n\t\"alv-kwa\",\n\totherNames = {\"Agotime\"},\n\tscripts = Latn,\n}\n\nm[\"adr\"] = {\n\t\"Adonara\",\n\t\"Q4684505\",\n\t\"poz-cet\",\n\tscripts = Latn,\n}\n\nm[\"ads\"] = {\n\t\"Adamorobe Sign Language\",\n\t\"Q27709\",\n\t\"sgn\",\n\tscripts = Latn,\
      \ -- when documented\n}\n\nm[\"adt\"] = {\n\t\"Adnyamathanha\",\n\t\"Q2225391\",\n\t\"aus-psw\",\n\tscripts = Latn,\n}\n\nm[\"adu\"] = {\n\t\"Aduge\",\n\t\"Q34734\",\n\t\"alv-edo\",\n\tscripts = Latn,\n\twikipedia_article = \"Okpamheri language\",\n}\n\
      \nm[\"adw\"] = {\n\t\"Amondawa\",\n\t\"Q12626847\",\n\t\"tup-gua\",\n\totherNames = {\"Amundava\"},\n\tscripts = Latn,\n}\n\nm[\"ady\"] = {\n\t\"Adyghe\",\n\t\"Q27776\",\n\t\"cau-cir\",\n\totherNames = {\"West Circassian\"},\n\tscripts = Cyrl,\n\ttranslit_module\
      \ = \"ady-translit\",\n\toverride_translit = true,\t\n}\n\nm[\"adz\"] = {\n\t\"Adzera\",\n\tnil,\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"aea\"] = {\n\t\"Areba\",\n\t\"Q3509129\",\n\t\"aus-pam\",\n\tscripts = Latn,\n}\n\nm[\"aeb\"] = {\n\t\"Tunisian\
      \ Arabic\",\n\t\"Q56240\",\n\t\"sem-arb\",\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"\
      aec\"] = {\n\t\"Saidi Arabic\",\n\t\"Q56592\",\n\t\"sem-arb\",\n\totherNames = {\"Sa'idi Arabic\", \"Upper Egyptian Arabic\", \"Upper Egypt Arabic\"},\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E),\
      \ u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"aed\"] = {\n\t\"Argentine Sign Language\",\n\t\"Q3322073\",\n\t\"sgn\",\n\tscripts = Latn, -- when documented\n}\n\nm[\"aee\"] = {\n\t\"Northeast Pashayi\"\
      ,\n\t\"Q12642198\",\n\t\"inc-dar\",\n\totherNames = {\"Northeast Pashai\", \"Pashai\"},\n\tscripts = Latn,\n}\n\nm[\"aek\"] = {\n\t\"Haeke\",\n\t\"Q5638166\",\n\t\"poz-cln\",\n\tscripts = Latn,\n}\n\nm[\"ael\"] = {\n\t\"Ambele\",\n\t\"Q34818\",\n\t\"nic-bod\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"aem\"] = {\n\t\"Arem\",\n\t\"Q3507920\",\n\t\"mkh-vie\",\n\tscripts = Latn,\n}\n\nm[\"aen\"] = {\n\t\"Armenian Sign Language\",\n\t\"Q3446604\",\n\t\"sgn\",\n}\n\nm[\"aeq\"] = {\n\t\"Aer\",\n\t\"Q3246741\",\n\t\"inc\",\n\t\
      scripts = Arab,\n\tancestors = {\"psu\"},\n}\n\nm[\"aer\"] = {\n\t\"Eastern Arrernte\",\n\t\"Q10728232\",\n\t\"aus-pam\",\n\tscripts = Latn,\n}\n\nm[\"aes\"] = {\n\t\"Alsea\",\n\t\"Q2395641\",\n\totherNames = {\"Yaquina\", \"Yakwina\", \"Alseya\", \"Yakona\"\
      }, -- names of the two dialects that make up the language\n\tscripts = Latn,\n}\n\nm[\"aeu\"] = {\n\t\"Akeu\",\n\t\"Q4700657\",\n\t\"tbq-lol\",\n\totherNames = {\"Chepya\"},\n\tscripts = Latn,\n}\n\nm[\"aew\"] = {\n\t\"Ambakich\",\n\t\"Q56642\",\n\t\"\
      paa-ram\",\n\totherNames = {\"Aion\", \"Porapora\"},\n\tscripts = Latn,\n}\n\nm[\"aey\"] = {\n\t\"Amele\",\n\t\"Q3508025\",\n\t\"ngf-mad\",\n\tscripts = Latn,\n}\n\nm[\"aez\"] = {\n\t\"Aeka\",\n\t\"Q16110528\",\n\t\"ngf\",\n\totherNames = {\"Aiga\", \"\
      Orokaiva\"}, -- last is the name of a macrolanguage\n\tscripts = Latn,\n\twikipedia_article = \"Orokaiva language\", -- subvariety?\n} \n\nm[\"afb\"] = {\n\t\"Gulf Arabic\",\n\t\"Q56385\",\n\t\"sem-arb\",\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom\
      \ = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"afd\"] = {\n\t\"Andai\",\n\t\"Q4753480\",\n\t\"paa-arf\",\n\tscripts = Latn,\n}\n\nm[\"afe\"\
      ] = {\n\t\"Putukwam\",\n\t\"Q3914930\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"afg\"] = {\n\t\"Afghan Sign Language\",\n\t\"Q4689093\",\n\t\"sgn\",\n}\n\nm[\"afh\"] = {\n\t\"Afrihili\",\n\t\"Q384707\",\n\t\"art\",\n\tscripts = Latn,\n\ttype = \"\
      appendix-constructed\",\n}\n\nm[\"afi\"] = {\n\t\"Akrukay\",\n\t\"Q57003\",\n\t\"paa-ram\",\n\tscripts = Latn,\n}\n\nm[\"afk\"] = {\n\t\"Nanubae\",\n\t\"Q6964416\",\n\t\"paa-arf\",\n\tscripts = Latn,\n}\n\nm[\"afn\"] = {\n\t\"Defaka\",\n\t\"Q35174\",\n\
      \t\"nic\",\n\tscripts = Latn,\n}\n\nm[\"afo\"] = {\n\t\"Eloyi\",\n\t\"Q3914066\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"afp\"] = {\n\t\"Tapei\",\n\t\"Q16887371\",\n\t\"paa-arf\",\n\tscripts = Latn,\n}\n\nm[\"afs\"] = {\n\t\"Afro-Seminole Creole\"\
      ,\n\t\"Q27867\",\n\t\"crp\",\n\tscripts = Latn,\n}\n\nm[\"aft\"] = {\n\t\"Afitti\",\n\t\"Q3400829\",\n\t\"sdv\",\n\totherNames = {\"Affiti\", \"Ditti\"},\n\tscripts = Latn,\n}\n\nm[\"afu\"] = {\n\t\"Awutu\",\n\t\"Q34847\",\n\t\"alv-kwa\",\n\totherNames\
      \ = {\"Efutu\"},\n\tscripts = Latn,\n}\n\nm[\"afz\"] = {\n\t\"Obokuitai\",\n\t\"Q7075258\",\n\t\"paa-lkp\",\n\tscripts = Latn,\n}\n\nm[\"aga\"] = {\n\t\"Aguano\",\n\t\"Q3331203\",\n\tscripts = Latn,\n}\n\nm[\"agb\"] = {\n\t\"Legbo\",\n\t\"Q35584\",\n\t\
      \"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"agc\"] = {\n\t\"Agatu\",\n\t\"Q34732\",\n\t\"alv\",\n\tscripts = Latn,\n}\n\nm[\"agd\"] = {\n\t\"Agarabi\",\n\t\"Q3399642\",\n\t\"paa-kag\",\n\tscripts = Latn,\n}\n\nm[\"age\"] = {\n\t\"Angal\",\n\t\"Q10951553\"\
      ,\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"agf\"] = {\n\t\"Arguni\",\n\t\"Q12473346\",\n\t\"poz-cet\",\n\tscripts = Latn,\n}\n\nm[\"agg\"] = {\n\t\"Angor\",\n\t\"Q3508100\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"agh\"] = {\n\t\"Ngelima\",\n\t\"Q7022266\"\
      ,\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"agi\"] = {\n\t\"Agariya\",\n\t\"Q663586\",\n\t\"mun\",\n\tscripts = Deva,\n}\n\nm[\"agj\"] = {\n\t\"Argobba\",\n\t\"Q29292\",\n\t\"sem-eth\",\n\tscripts = {\"Ethi\"},\n}\n\nm[\"agk\"] = {\n\t\"Isarog Agta\",\n\
      \t\"Q6078982\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"agl\"] = {\n\t\"Fembe\",\n\t\"Q372927\",\n\t\"ngf\",\n\totherNames = {\"Agala\"},\n\tscripts = Latn,\n}\n\nm[\"agm\"] = {\n\t\"Angaataha\",\n\t\"Q3508001\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\n\
      m[\"agn\"] = {\n\t\"Agutaynen\",\n\t\"Q3399717\",\n\t\"phi-kal\",\n\tscripts = Latn,\n}\n\nm[\"ago\"] = {\n\t\"Tainae\",\n\t\"Q7676186\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"agq\"] = {\n\t\"Aghem\",\n\t\"Q34737\",\n\t\"alv\",\n\tscripts = Latn,\n\
      }\n\nm[\"agr\"] = {\n\t\"Aguaruna\",\n\t\"Q1526530\",\n\t\"sai-jiv\",\n\tscripts = Latn,\n}\n\nm[\"ags\"] = {\n\t\"Esimbi\",\n\t\"Q35260\",\n\t\"nic-bod\",\n\totherNames = {\"Isimbi\"},\n\tscripts = Latn,\n}\n\nm[\"agt\"] = {\n\t\"Central Cagayan Agta\"\
      ,\n\t\"Q5017296\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"agu\"] = {\n\t\"Aguacateca\",\n\t\"Q35091\",\n\t\"myn\",\n\totherNames = {\"Aguacatec\", \"Aguacateco\", \"Awakatek\", \"Awakateko\", \"Awakateka\"},\n\tscripts = Latn,\n}\n\nm[\"agv\"] = {\n\t\
      \"Remontado Agta\",\n\t\"Q3508085\",\n\t\"phi\",\n\totherNames = {\"Remontado Dumagat\", \"Sinauna\", \"Hatang Kayey\"},\n\tscripts = Latn,\n}\n\nm[\"agw\"] = {\n\t\"Kahua\",\n\t\"Q3191906\",\n\t\"poz-sls\",\n\tscripts = Latn,\n}\n\nm[\"agx\"] = {\n\t\"\
      Aghul\",\n\t\"Q36498\",\n\t\"cau-lzg\",\n\totherNames = {\"Agul\"},\n\tscripts = Cyrl,\n}\n\nm[\"agy\"] = {\n\t\"Southern Alta\",\n\t\"Q7569611\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"agz\"] = {\n\t\"Mt. Iriga Agta\",\n\t\"Q6921432\",\n\t\"phi\",\n\
      \tscripts = Latn,\n}\n\nm[\"aha\"] = {\n\t\"Ahanta\",\n\t\"Q34729\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"ahb\"] = {\n\t\"Axamb\",\n\t\"Q2874710\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"ahg\"] = {\n\t\"Qimant\",\n\t\"Q35663\",\n\t\"cus\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"ahh\"] = {\n\t\"Aghu\",\n\t\"Q3436645\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"ahi\"] = {\n\t\"Tiagbamrin Aizi\",\n\t\"Q3400073\",\n\t\"kro\",\n\tscripts = Latn,\n}\n\nm[\"ahk\"] = {\n\t\"Akha\",\n\t\"Q56643\",\n\t\"tbq-lol\"\
      ,\n\totherNames = {\"Aka\", \"Ako\"},\n\tscripts = {\"Latn\", \"Mymr\", \"Thai\"},\n\tsort_key = {\n\t\tfrom = {\"%p\", \"[็-๎]\", \"([เแโใไ])([ก-ฮ])\"},\n\t\tto   = {\"\", \"\", \"%2%1\"}},\n}\n\nm[\"ahl\"] = {\n\t\"Igo\",\n\t\"Q35412\",\n\t\"alv-kwa\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"ahm\"] = {\n\t\"Mobumrin Aizi\",\n\t\"Q35967\",\n\t\"kro\",\n\tscripts = Latn,\n}\n\nm[\"ahn\"] = {\n\t\"Àhàn\",\n\t\"Q34723\",\n\t\"nic-bco\",\n\totherNames = {\"Ahan\", \"Ahaan\"},\n\tscripts = Latn,\n}\n\nm[\"aho\"] =\
      \ {\n\t\"Ahom\",\n\t\"Q34778\",\n\t\"tai-swe\",\n\tscripts = {\"Ahom\"},\n\ttranslit_module = \"Ahom-translit\",\n}\n\nm[\"ahp\"] = {\n\t\"Aproumu Aizi\",\n\t\"Q34810\",\n\t\"kro\",\n\tscripts = Latn,\n}\n\nm[\"ahr\"] = {\n\t\"Ahirani\",\n\t\"Q15549890\"\
      ,\n\t\"inc\",\n\totherNames = {\"Khandeshi\", \"Khandesi\"},\n\tscripts = Deva,\n\tancestors = {\"pmh\"},\n}\n\nm[\"ahs\"] = {\n\t\"Ashe\",\n\t\"Q34823\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"aht\"] = {\n\t\"Ahtna\",\n\t\"Q21058\",\n\t\"ath-nor\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"aia\"] = {\n\t\"Arosi\",\n\t\"Q2863483\",\n\t\"poz-sls\",\n\tscripts = Latn,\n}\n\nm[\"aib\"] = {\n\t\"Aynu\",\n\t\"Q27927\",\n\t\"trk\",\n\totherNames = {\"Ainu\", \"Äynu\", \"Ainu (China)\", \"Aini\", \"Eyni\", \"Ejnu\"\
      , \"Abdal\", \"Äynú\"},\n\tscripts = {\"Arab\", \"Latn\"},\n}\n\nm[\"aic\"] = {\n\t\"Ainbai\",\n\t\"Q3332149\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"aid\"] = {\n\t\"Alngith\",\n\t\"Q3279409\",\n\t\"aus-pmn\",\n\tscripts = Latn,\n}\n\nm[\"aie\"] = {\n\
      \t\"Amara\",\n\t\"Q2841180\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"aif\"] = {\n\t\"Agi\",\n\t\"Q3331491\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"aig\"] = {\n\t\"Antigua and Barbuda Creole English\",\n\t\"Q3244184\",\n\t\"crp\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"aih\"] = {\n\t\"Ai-Cham\",\n\t\"Q2827749\",\n\t\"qfa-kms\",\n\tscripts = {\"Latn\", \"Hani\"},\n}\n\nm[\"aii\"] = {\n\t\"Assyrian Neo-Aramaic\",\n\t\"Q29440\",\n\t\"sem-ara\",\n\tscripts = {\"Syrc\"},\n}\n\nm[\"aij\"] = {\n\t\"Lishanid\
      \ Noshan\",\n\t\"Q3436467\",\n\t\"sem-ara\",\n\tscripts = {\"Hebr\"},\n}\n\nm[\"aik\"] = {\n\t\"Ake\",\n\t\"Q34808\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"ail\"] = {\n\t\"Aimele\",\n\t\"Q3327418\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"aim\"\
      ] = {\n\t\"Aimol\",\n\t\"Q4697175\",\n\t\"tbq-kuk\",\n\tscripts = {\"Latn\", \"Beng\"},\n}\n\nm[\"ain\"] = {\n\t\"Ainu\",\n\t\"Q27969\",\n\t\"qfa-iso\",\n\totherNames = {\"Ainu (Japan)\"},\n\tscripts = {\"Kana\", \"Latn\", \"Cyrl\"},\n}\n\nm[\"aio\"] =\
      \ {\n\t\"Aiton\",\n\t\"Q3399725\",\n\t\"tai-swe\",\n\totherNames = {\"Tai Aiton\", \"Tai\"},\n\tscripts = {\"Mymr\"},\n}\n\nm[\"aip\"] = {\n\t\"Burumakok\",\n\t\"Q5000984\",\n\t\"ngf-okk\",\n\tscripts = Latn,\n}\n\nm[\"air\"] = {\n\t\"Airoran\",\n\t\"\
      Q3321131\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"ait\"] = {\n\t\"Arikem\",\n\t\"Q3446679\",\n\t\"tup\",\n\tscripts = Latn,\n}\n\nm[\"aiw\"] = {\n\t\"Aari\",\n\t\"Q7495\",\n\t\"omv\",\n\tscripts = Latn,\n}\n\nm[\"aix\"] = {\n\t\"Aighon\",\n\t\"Q3504287\"\
      ,\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"aiy\"] = {\n\t\"Ali\",\n\t\"Q34814\",\n\t\"alv\",\n\tscripts = Latn,\n}\n\nm[\"aja\"] = {\n\t\"Aja\",\n\t\"Q3237491\",\n\t\"csu\",\n\totherNames = {\"Adja\", \"Aja (Sudan)\"},\n\tscripts = Latn,\n}\n\nm[\"\
      ajg\"] = {\n\t\"Adja\",\n\t\"Q35035\",\n\t\"alv-kwa\",\n\totherNames = {\"Aja\", \"Aja (Benin)\", \"Aja (Togo)\", \"Ajagbe\"},\n\tscripts = Latn,\n}\n\nm[\"aji\"] = {\n\t\"Ajië\",\n\t\"Q2828867\",\n\t\"poz-cln\",\n\totherNames = {\"Houailou\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"ajn\"] = {\n\t\"Andajin\",\n\t\"Q16111302\",\n\tscripts = Latn,\n}\n\nm[\"ajp\"] = {\n\t\"South Levantine Arabic\",\n\tnil,\n\t\"sem-arb\",\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D),\
      \ u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"ajt\"] = {\n\t\"Judeo-Tunisian Arabic\",\n\t\"Q56597\",\n\t\"sem-arb\",\n\tscripts = {\"Hebr\"},\n\tancestors = {\"aeb\"},\n}\n\nm[\"aju\"\
      ] = {\n\t\"Judeo-Moroccan Arabic\",\n\t\"Q56595\",\n\t\"sem-arb\",\n\tscripts = {\"Hebr\"},\n}\n\nm[\"ajw\"] = {\n\t\"Ajawa\",\n\t\"Q56645\",\n\t\"cdc-wst\",\n\tscripts = Latn,\n}\n\nm[\"ajz\"] = {\n\t\"Amri Karbi\",\n\t\"Q3508092\",\n\t\"tbq\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"akb\"] = {\n\t\"Angkola Batak\",\n\t\"Q2640686\",\n\t\"btk\",\n\totherNames = {\"Batak Angkola\"},\n\tscripts = {\"Latn\", \"Batk\"},\n}\n\nm[\"akc\"] = {\n\t\"Mpur\",\n\t\"Q3327139\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"akd\"\
      ] = {\n\t\"Ukpet-Ehom\",\n\t\"Q36618\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"ake\"] = {\n\t\"Akawaio\",\n\t\"Q28059\",\n\t\"sai-car\",\n\totherNames = {\"Acauayo\", \"Acaguayo\", \"Akawai\", \"Acawai\", \"Accawai\"},\n\tscripts = Latn,\n}\n\nm[\"\
      akf\"] = {\n\t\"Akpa\",\n\t\"Q34801\",\n\t\"alv-von\",\n\tscripts = Latn,\n}\n\nm[\"akg\"] = {\n\t\"Anakalangu\",\n\t\"Q4750964\",\n\t\"poz-cet\",\n\tscripts = Latn,\n}\n\nm[\"akh\"] = {\n\t\"Angal Heneng\",\n\t\"Q10950354\",\n\t\"ngf\",\n\tscripts = Latn,\n\
      }\n\nm[\"aki\"] = {\n\t\"Aiome\",\n\t\"Q56735\",\n\t\"paa\",\n\totherNames = {\"Aiom\", \"Ayom\"},\n\tscripts = Latn,\n}\n\nm[\"akj\"] = {\n\t\"Jeru\",\n\t\"Q2919121\",\n\t\"qfa-adm\",\n\totherNames = {\"Aka-Jeru\"},\n\tscripts = Latn,\n}\n\nm[\"akk\"\
      ] = {\n\t\"Akkadian\",\n\t\"Q35518\",\n\t\"sem-eas\",\n\tscripts = {\"Xsux\"},\n}\n\nm[\"akl\"] = {\n\t\"Aklanon\",\n\t\"Q8773\",\n\t\"phi\",\n\totherNames = {\"Aklan\", \"Akeanon\"},\n\tscripts = Latn,\n}\n\nm[\"akm\"] = {\n\t\"Aka-Bo\",\n\t\"Q35361\"\
      ,\n\t\"qfa-adm\",\n\totherNames = {\"Ba\", \"Bo\"},\n\tscripts = Latn,\n}\n\nm[\"ako\"] = {\n\t\"Akurio\",\n\t\"Q56650\",\n\t\"sai-car\",\n\tscripts = Latn,\n}\n\nm[\"akp\"] = {\n\t\"Siwu\",\n\t\"Q36470\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"\
      akq\"] = {\n\t\"Ak\",\n\t\"Q56654\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"akr\"] = {\n\t\"Araki\",\n\t\"Q2699882\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"aks\"] = {\n\t\"Akaselem\",\n\t\"Q34817\",\n\t\"nic-gur\",\n\totherNames = {\"Tchamba\"\
      , \"Akasele\", \"Tsamba\"},\n\tscripts = Latn,\n}\n\nm[\"akt\"] = {\n\t\"Akolet\",\n\t\"Q3330162\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"aku\"] = {\n\t\"Akum\",\n\t\"Q34799\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"akv\"] = {\n\t\"Akhvakh\"\
      ,\n\t\"Q56423\",\n\t\"cau-ava\",\n\tscripts = Cyrl,\n}\n\nm[\"akw\"] = {\n\t\"Akwa\",\n\t\"Q34802\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"akx\"] = {\n\t\"Aka-Kede\",\n\t\"Q3436816\",\n\t\"qfa-adm\",\n\totherNames = {\"Kede\"},\n\tscripts = Latn,\n\
      }\n\nm[\"aky\"] = {\n\t\"Aka-Kol\",\n\t\"Q3436784\",\n\t\"qfa-adm\",\n\totherNames = {\"Kol\", \"Kawl\", \"Aka-Kawl\", \"Bojingiji\"},\n\tscripts = Latn,\n}\n\nm[\"akz\"] = {\n\t\"Alabama\",\n\t\"Q1815020\",\n\t\"nai-mus\",\n\tscripts = Latn,\n}\n\nm[\"\
      ala\"] = {\n\t\"Alago\",\n\t\"Q34813\",\n\t\"alv\",\n\tscripts = Latn,\n}\n\nm[\"alc\"] = {\n\t\"Kawésqar\",\n\t\"Q56544\",\n\t\"aqa\",\n\totherNames = {\"Qawasqar\", \"Alacaluf\"},\n\tscripts = Latn,\n}\n\nm[\"ald\"] = {\n\t\"Alladian\",\n\t\"Q34837\"\
      ,\n\t\"alv-kwa\",\n\totherNames = {\"Alladyan\", \"Allagian\", \"Alaguian\"},\n\tscripts = Latn,\n}\n\nm[\"ale\"] = {\n\t\"Aleut\",\n\t\"Q27210\",\n\t\"esx\",\n\totherNames = {\"Aleutian\"},\n\tscripts = Latn,\n}\n\nm[\"alf\"] = {\n\t\"Alege\",\n\t\"Q34815\"\
      ,\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"alh\"] = {\n\t\"Alawa\",\n\t\"Q2147917\",\n    \"aus-gun\",\n\tscripts = Latn,\n}\n\nm[\"ali\"] = {\n\t\"Amaimon\",\n\t\"Q3327427\",\n\t\"ngf-mad\",\n\tscripts = Latn,\n}\n\nm[\"alj\"] = {\n\t\"Alangan\",\n\
      \t\"Q3327423\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"alk\"] = {\n\t\"Alak\",\n\t\"Q2714690\",\n\t\"mkh\",\n\tscripts = Latn,\n}\n\nm[\"all\"] = {\n\t\"Allar\",\n\t\"Q3393634\",\n\t\"dra\",\n\totherNames = {\"Chatan\"},\n\tscripts = {\"Mlym\"},\n}\n\
      \n-- \"aln\" IS TREATED AS \"sq\", SEE WT:LT\n\nm[\"alm\"] = {\n\t\"Amblong\",\n\t\"Q11022615\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"alo\"] = {\n\t\"Larike-Wakasihu\",\n\t\"Q3217929\",\n\t\"poz-cet\",\n\tscripts = Latn,\n}\n\nm[\"alp\"] = {\n\t\
      \"Alune\",\n\t\"Q3327367\",\n\t\"poz-cet\",\n\tscripts = Latn,\n}\n\nm[\"alq\"] = {\n\t\"Algonquin\",\n\t\"Q28092\",\n\t\"alg\",\n\tscripts = Latn,\n}\n\nm[\"alr\"] = {\n\t\"Alutor\",\n\t\"Q28213\",\n\t\"qfa-cka\",\n\tscripts = Cyrl,\n}\n\nm[\"alt\"] =\
      \ {\n\t\"Southern Altai\",\n\t\"Q1991779\",\n\t\"trk\",\n\totherNames = {\"Southern Altay\", \"Altai\", \"Altay\"},\n\tscripts = Cyrl,\n\ttranslit_module = \"Altai-translit\",\n}\n\nm[\"alu\"] = {\n\t\"'Are'are\",\n\t\"Q5160\",\n\t\"poz-sls\",\n\totherNames\
      \ = {\"Areare\"},\n\tscripts = Latn,\n}\n\nm[\"alw\"] = {\n\t\"Alaba\",\n\t\"Q56652\",\n\t\"cus\",\n\totherNames = {\"Alaba-K'abeena\", \"Alaaba\", \"K'abeena\"},\n\tscripts = Latn,\n}\n\nm[\"alx\"] = {\n\t\"Amol\",\n\t\"Q3504260\",\n\t\"qfa-tor\",\n\t\
      scripts = Latn,\n}\n\nm[\"aly\"] = {\n\t\"Alyawarr\",\n\t\"Q3327389\",\n\t\"aus-pam\",\n\tscripts = Latn,\n}\n\nm[\"alz\"] = {\n\t\"Alur\",\n\t\"Q56507\",\n\t\"sdv\",\n\tscripts = Latn,\n}\n\nm[\"ama\"] = {\n\t\"Amanayé\",\n\t\"Q3508053\",\n\t\"tup-gua\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"amb\"] = {\n\t\"Ambo\",\n\t\"Q3450142\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"amc\"] = {\n\t\"Amahuaca\",\n\t\"Q2669150\",\n\t\"sai-pan\",\n\tscripts = Latn,\n}\n\nm[\"ame\"] = {\n\t\"Yanesha'\",\n\t\"Q3088540\",\n\
      \t\"awd\",\n\totherNames = {\"Amuesha\"},\n\tscripts = Latn,\n}\n\nm[\"amf\"] = {\n\t\"Hamer-Banna\",\n\t\"Q35764\",\n\t\"omv\",\n\tscripts = Latn,\n}\n\nm[\"amg\"] = {\n\t\"Amurdag\",\n\t\"Q3360016\",\n\t\"aus-wdj\",\n\totherNames = {\"Amarag\"},\n\t\
      scripts = Latn,\n}\n\nm[\"ami\"] = {\n\t\"Amis\",\n\t\"Q35132\",\n\t\"map\",\n\totherNames = {\"Nataoran Amis\"},\n\tscripts = Latn,\n}\n\nm[\"amj\"] = {\n\t\"Amdang\",\n\t\"Q28335\",\n\t\"ssa-fur\",\n\totherNames = {\"Biltine\", \"Mimi\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"amk\"] = {\n\t\"Ambai\",\n\t\"Q1875885\",\n\t\"poz-hce\",\n\totherNames = {\"Wadapi-Laut\"},\n\tscripts = Latn,\n}\n\nm[\"aml\"] = {\n\t\"War-Jaintia\",\n\t\"Q56321\",\n\t\"aav\",\n\tscripts = Latn,\n}\n\nm[\"amm\"] = {\n\t\"Ama\",\n\
      \t\"Q3446626\",\n\t\"qfa-mal\",\n\totherNames = {\"Ama (New Guinea)\", \"Ama (Papua New Guinea)\"},\n\tscripts = Latn,\n}\n\nm[\"amn\"] = {\n\t\"Amanab\",\n\t\"Q3327399\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"amo\"] = {\n\t\"Amo\",\n\t\"Q34826\",\n\
      \t\"nic-bco\",\n\totherNames = {\"Timap\", \"Map\", \"Among\", \"Amap\", \"Amon\"},\n\tscripts = Latn,\n}\n\nm[\"amp\"] = {\n\t\"Alamblak\",\n\t\"Q56688\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"amq\"] = {\n\t\"Amahai\",\n\t\"Q3327384\",\n\t\"poz-cet\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"amr\"] = {\n\t\"Amarakaeri\",\n\t\"Q35128\",\n\t\"sai-har\",\n\tscripts = Latn,\n}\n\nm[\"ams\"] = {\n\t\"Southern Amami-Oshima\",\n\t\"Q2840986\",\n\t\"jpx-ryu\",\n\tscripts = {\"Jpan\"},\n}\n\nm[\"amt\"] = {\n\t\"Amto\"\
      ,\n\t\"Q56517\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"amu\"] = {\n\t\"Guerrero Amuzgo\",\n\t\"Q3501942\",\n\t\"omq\",\n\totherNames = {\"Amuzgo\", \"Xochistlahuaca Amuzgo\", \"Northern Amuzgo\", \"Southern Amuzgo\"},\n\tscripts = Latn,\n}\n\nm[\"amv\"\
      ] = {\n\t\"Ambelau\",\n\t\"Q2669214\",\n\t\"poz\",\n\tscripts = Latn,\n}\n\nm[\"amw\"] = {\n\t\"Western Neo-Aramaic\",\n\t\"Q34226\",\n\t\"sem-ara\",\n\tscripts = {\"Armi\", \"Syrc\", \"Latn\"},\n}\n\nm[\"amx\"] = {\n\t\"Anmatyerre\",\n\t\"Q10412317\"\
      ,\n\t\"aus-pam\",\n\totherNames = {\"Namfau\"},\n\tscripts = Latn,\n}\n\nm[\"amy\"] = {\n\t\"Ami\",\n\t\"Q12626835\",\n    \"aus-dal\",\n\totherNames = {\"Ame\", \"Amijangal\"},\n\tscripts = Latn,\n}\n\nm[\"amz\"] = {\n\t\"Atampaya\",\n\t\"Q3446651\",\n\
      \t\"aus-pam\",\n\tscripts = Latn,\n}\n\nm[\"ana\"] = {\n\t\"Andaqui\",\n\t\"Q2846078\",\n\totherNames = {\"Andaquí\", \"Andakí\", \"Andaki\"},\n\tscripts = Latn,\n}\n\nm[\"anb\"] = {\n\t\"Andoa\",\n\t\"Q2846171\",\n\t\"sai-zap\",\n\totherNames = {\"Shimigae\"\
      , \"Semigae\", \"Gae\", \"Gay\", \"Gaye\", \"Siaviri\", \"Katsakáti\"},\n\tscripts = Latn,\n}\n\nm[\"anc\"] = {\n\t\"Ngas\",\n\t\"Q35999\",\n\t\"cdc-wst\",\n\totherNames = {\"Angas\", \"Angass\", \"Hill Ngas\", \"Plain Ngas\", \"Hill Angas\", \"Plain Angas\"\
      , \"Karang\", \"Kerang\"},\n\tscripts = Latn,\n}\n\nm[\"and\"] = {\n\t\"Ansus\",\n\t\"Q3513300\",\n\t\"poz-hce\",\n\tscripts = Latn,\n}\n\nm[\"ane\"] = {\n\t\"Xârâcùù\",\n\t\"Q3571097\",\n\t\"poz-cln\",\n\tscripts = Latn,\n}\n\nm[\"anf\"] = {\n\t\"Animere\"\
      ,\n\t\"Q34783\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"ang\"] = {\n\t\"Old English\",\n\t\"Q42365\",\n\t\"gmw\",\n\totherNames = {\"Anglo-Saxon\"},\n\tscripts = {\"Latinx\"},\n\tentry_name = {\n\t\tfrom = {\"[ĀÁ]\", \"[āá]\", \"[ǢǼ]\", \"[ǣǽ]\"\
      , \"Ċ\", \"ċ\", \"[ĒÉ]\", \"[ēé]\", \"Ġ\", \"ġ\", \"[ĪÍ]\", \"[īí]\", \"[ŌÓ]\", \"[ōó]\", \"[ŪÚ]\", \"[ūú]\", \"[ȲÝ]\", \"[ȳý]\", MACRON, ACUTE, DOTABOVE},\n\t\tto   = {\"A\", \"a\", \"Æ\", \"æ\", \"C\", \"c\", \"E\", \"e\", \"G\", \"g\", \"I\", \"i\"\
      , \"O\", \"o\", \"U\", \"u\", \"Y\", \"y\"}},\n}\n\nm[\"anh\"] = {\n\t\"Nend\",\n\t\"Q6991554\",\n\t\"ngf-mad\",\n\totherNames = {\"Nent\", \"Angaua\"},\n\tscripts = Latn,\n}\n\nm[\"ani\"] = {\n\t\"Andi\",\n\t\"Q34849\",\n\t\"cau-ava\",\n\tscripts = Cyrl,\n\
      }\n\nm[\"anj\"] = {\n\t\"Anor\",\n\t\"Q56458\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"ank\"] = {\n\t\"Goemai\",\n\t\"Q35272\",\n\t\"cdc-wst\",\n\tscripts = Latn,\n}\n\nm[\"anl\"] = {\n\t\"Anu\",\n\t\"Q4777679\",\n\t\"tbq\",\n\totherNames = {\"Khaungtso\"\
      , \"Anu-Hkongso\", \"Anu-Hkongso Chin\"}, -- the last is the ISO's unattested blend of the names of its two dialects and half of the name of the place where it's spoken\n\tscripts = Latn,\n}\n\nm[\"anm\"] = {\n\t\"Anal\",\n\t\"Q56235\",\n\t\"tbq-kuk\"\
      ,\n\totherNames = {\"Anaal\", \"Namfau\"}, -- Namfau is actually a placename\n\tscripts = Latn,\n}\n\nm[\"ann\"] = {\n\t\"Obolo\",\n\t\"Q36614\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"ano\"] = {\n\t\"Andoque\",\n\t\"Q2669225\",\n\t\"qfa-iso\",\n\
      \tscripts = Latn,\n}\n\nm[\"anp\"] = {\n\t\"Angika\",\n\t\"Q28378\",\n\t\"inc\",\n\tscripts = Deva,\n\tancestors = {\"bh\"},\n}\n\nm[\"anq\"] = {\n\t\"Jarawa\",\n\t\"Q2475526\",\n\t\"qfa-adm\",\n\totherNames = {\"Jarawa (India)\"},\n\tscripts = Latn,\n\
      }\n\nm[\"anr\"] = {\n\t\"Andh\",\n\t\"Q4754314\",\n\t\"inc\",\n\tscripts = Deva,\n}\n\nm[\"ans\"] = {\n\t\"Anserma\",\n\t\"Q3446613\",\n\t\"sai-chc\",\n\tscripts = Latn,\n}\n\nm[\"ant\"] = {\n\t\"Antakarinya\",\n\t\"Q921304\",\n\t\"aus-psw\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"anu\"] = {\n\t\"Anuak\",\n\t\"Q56677\",\n\t\"sdv\",\n\totherNames = {\"Anyua\", \"Anywa\", \"Anyuak\"},\n\tscripts = Latn,\n}\n\nm[\"anv\"] = {\n\t\"Denya\",\n\t\"Q35187\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"anw\"] = {\n\t\
      \"Anaang\",\n\t\"Q2845320\",\n\t\"nic-bco\",\n\totherNames = {\"Anang\", \"Annang\", \"Western Ibibio\"},\n\tscripts = Latn,\n}\n\nm[\"anx\"] = {\n\t\"Andra-Hus\",\n\t\"Q2846195\",\n\t\"poz-aay\",\n\tscripts = Latn,\n}\n\nm[\"any\"] = {\n\t\"Anyi\",\n\t\
      \"Q28395\",\n\t\"alv-kwa\",\n\totherNames = {\"Anyin\"},\n\tscripts = Latn,\n}\n\nm[\"anz\"] = {\n\t\"Anem\",\n\t\"Q56512\",\n\t\"paa\",\n\totherNames = {\"Anêm\"},\n\tscripts = Latn,\n}\n\nm[\"aoa\"] = {\n\t\"Angolar\",\n\t\"Q34994\",\n\t\"crp\",\n\t\
      scripts = Latn,\n\tancestors = {\"pt\"},\n}\n\nm[\"aob\"] = {\n\t\"Abom\",\n\t\"Q3446647\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"aoc\"] = {\n\t\"Pemon\",\n\t\"Q10729616\",\n\t\"sai-car\",\n\totherNames = {\"Arekuna\", \"Arecuna\"},\n\tscripts = Latn,\n\
      }\n\nm[\"aod\"] = {\n\t\"Andarum\",\n\t\"Q3507888\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"aoe\"] = {\n\t\"Angal Enen\",\n\t\"Q10951638\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"aof\"] = {\n\t\"Bragat\",\n\t\"Q3507977\",\n\t\"qfa-tor\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"aog\"] = {\n\t\"Angoram\",\n\t\"Q56366\", -- cf \"Q6754745\" for merged dialect\n\t\"paa-lsp\",\n\totherNames = {\"Pondo\", \"Kanda\", \"Maramba\"},\n\tscripts = Latn,\n}\n\nm[\"aoh\"] = {\n\t\"Arma\", -- spurious? \"a possible but\
      \ unattested extinct language\",\n\t\"Q3507971\",\n\t\"sai-chc\",\n\tscripts = Latn,\n}\n\nm[\"aoi\"] = {\n\t\"Anindilyakwa\",\n\t\"Q2714654\",\n\t\"aus-arn\",\n\totherNames = {\"Enindhilyagwa\"},\n\tscripts = Latn,\n}\n\nm[\"aoj\"] = {\n\t\"Mufian\",\n\
      \t\"Q3507881\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"aok\"] = {\n\t\"Arhö\",\n\t\"Q4790086\",\n\t\"poz-cln\",\n\tscripts = Latn,\n}\n\nm[\"aol\"] = {\n\t\"Alor\",\n\t\"Q3332062\",\n\t\"poz\",\n\totherNames = {\"Alorese\"},\n\tscripts = Latn,\n\
      }\n\nm[\"aom\"] = {\n\t\"Ömie\",\n\t\"Q8078975\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"aon\"] = {\n\t\"Bumbita Arapesh\",\n\t\"Q3508044\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"aor\"] = {\n\t\"Aore\",\n\t\"Q12627129\",\n\t\"poz-vnc\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"aos\"] = {\n\t\"Taikat\",\n\t\"Q7676018\",\n\t\"paa\",\n\tscripts = Latn,\n}\n\nm[\"aot\"] = {\n\t\"Atong (India)\",\n\t\"Q5646\",\n\t\"tbq\",\n\totherNames = {\"Atong\", \"A'tong\"},\n\tscripts = Latn,\n}\n\nm[\"aou\"] = {\n\t\"A'ou\"\
      ,\n\t\"Q16109994\",\n\t\"qfa-tak\",\n\totherNames = {\"Ayo\", \"A'ou Gelao\"},\n\tscripts = Latn, -- also Hani?\n\twikipedia_article = \"Gelao language\",\t-- might change, as A'ou is a dialect of Gelao\n}\n\nm[\"aox\"] = {\n\t\"Atorada\",\n\t\"Q3507932\"\
      ,\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"aoz\"] = {\n\t\"Uab Meto\",\n\t\"Q3441962\",\n\t\"poz-cet\",\n\tscripts = Latn,\n}\n\nm[\"apb\"] = {\n\t\"Sa'a\",\n\t\"Q36294\",\n\t\"poz-sls\",\n\totherNames = {\"South Malaita\", \"Apae'aa\"},\n\tscripts = Latn,\n\
      }\n\nm[\"apc\"] = {\n\t\"North Levantine Arabic\",\n\t\"Q22809485\",\n\t\"sem-arb\",\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\
      \t\tto   = {u(0x0627)}},\n}\n\nm[\"apd\"] = {\n\t\"Sudanese Arabic\",\n\t\"Q56573\",\n\t\"sem-arb\",\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670),\
      \ u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"ape\"] = {\n\t\"Bukiyip\",\n\t\"Q3507895\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"apf\"] = {\n\t\"Pahanan Agta\",\n\t\"Q7135432\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"apg\"] = {\n\t\"Ampanang\"\
      ,\n\t\"Q4748035\",\n\t\"poz\",\n\tscripts = Latn,\n}\n\nm[\"aph\"] = {\n\t\"Athpare\",\n\t\"Q3449126\",\n\t\"tbq\",\n\totherNames = {\"Athpariya\"},\n\tscripts = {\"Deva\", \"Latn\"},\n}\n\nm[\"api\"] = {\n\t\"Apiaká\",\n\t\"Q3507941\",\n\t\"tup-gua\"\
      ,\n\totherNames = {\"Apiacá\"},\n\tscripts = Latn,\n}\n\nm[\"apj\"] = {\n\t\"Jicarilla\",\n\t\"Q28277\",\n\t\"apa\",\n\totherNames = {\"Jicarilla Apache\"},\n\tscripts = Latn,\n}\n\nm[\"apk\"] = {\n\t\"Plains Apache\",\n\t\"Q27861\",\n\t\"apa\",\n\totherNames\
      \ = {\"Kiowa Apache\"},\n\tscripts = Latn,\n}\n\nm[\"apl\"] = {\n\t\"Lipan\",\n\t\"Q28269\",\n\t\"apa\",\n\totherNames = {\"Lipan Apache\"},\n\tscripts = Latn,\n}\n\nm[\"apm\"] = {\n\t\"Chiricahua\",\n\t\"Q13368\",\n\t\"apa\",\n\totherNames = {\"Mescalero\"\
      , \"Mescalero-Chiricahua Apache\"}, -- two dialects combined by Ethnologue\n\tscripts = Latn,\n}\n\nm[\"apn\"] = {\n\t\"Apinayé\",\n\t\"Q2858311\",\n\t\"sai-mje\",\n\totherNames = {\"Apinajé\", \"Apinagé\", \"Apinaye\", \"Apinaje\", \"Apinage\"},\n\tscripts\
      \ = Latn,\n}\n\nm[\"apo\"] = {\n\t\"Ambul\",\n\t\"Q12627135\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"app\"] = {\n\t\"Apma\",\n\t\"Q2669188\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"apq\"] = {\n\t\"A-Pucikwar\",\n\t\"Q28466\",\n\t\"qfa-adm\"\
      ,\n\totherNames = {\"Pucikwar\", \"Puchikwar\", \"Aka-Pucikwar\", \"Pujjukar\", \"Bójigiáb\", \"Bojigiab\", \"Bojigyab\"}, -- last three may apply also to other languages\n\tscripts = Latn,\n}\n\nm[\"apr\"] = {\n\t\"Arop-Lokep\",\n\t\"Q2863482\",\n\t\"\
      poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"aps\"] = {\n\t\"Arop-Sissano\",\n\t\"Q12627242\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"apt\"] = {\n\t\"Apatani\",\n\t\"Q56306\",\n\t\"sit-tan\",\n\totherNames = {\"Apa Tani\", \"Tanii\"},\n\tscripts = Latn,\n\
      }\n\nm[\"apu\"] = {\n\t\"Apurinã\",\n\t\"Q2859081\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"apv\"] = {\n\t\"Alapmunte\",\n\t\"Q16110782\",\n\t\"sai-nmk\",\n\tscripts = Latn,\n}\n\nm[\"apw\"] = {\n\t\"Western Apache\",\n\t\"Q28060\",\n\t\"apa\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"apx\"] = {\n\t\"Aputai\",\n\t\"Q12473343\",\n\t\"poz\",\n\tscripts = Latn,\n}\n\nm[\"apy\"] = {\n\t\"Apalaí\",\n\t\"Q2736980\",\n\t\"sai-car\",\n\totherNames = {\"Apalai\"},\n\tscripts = Latn,\n}\n\nm[\"apz\"] = {\n\t\"Safeyoka\",\n\
      \t\"Q7398693\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"aqc\"] = {\n\t\"Archi\",\n\t\"Q34915\",\n\t\"cau-lzg\",\n\tscripts = Cyrl,\n}\n\nm[\"aqd\"] = {\n\t\"Ampari Dogon\",\n\t\"Q4748057\",\n\t\"qfa-dgn\",\n\tscripts = Latn,\n}\n\nm[\"aqg\"] = {\n\t\"\
      Arigidi\",\n\t\"Q34829\",\n\t\"alv-von\",\n\tscripts = Latn,\n}\n\nm[\"aqm\"] = {\n\t\"Atohwaim\",\n\t\"Q11732297\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"aqn\"] = {\n\t\"Northern Alta\",\n\t\"Q7058116\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"aqp\"\
      ] = {\n\t\"Atakapa\",\n\t\"Q10975683\",\n\t\"qfa-iso\",\n\totherNames = {\"Akokisa\", \"Orcoquiza\", \"Eastern Atakapa\", \"Western Atakapa\"},\n\tscripts = Latn,\n}\n\nm[\"aqr\"] = {\n\t\"Arhâ\",\n\t\"Q4790085\",\n\t\"poz-cln\",\n\tscripts = Latn,\n}\n\
      \nm[\"aqt\"] = {\n\t\"Angaité\",\n\t\"Q15736037\",\n\t\"sai-mas\",\n\tscripts = Latn,\n}\n\nm[\"aqz\"] = {\n\t\"Akuntsu\",\n\t\"Q4701960\",\n\t\"tup\",\n\tscripts = Latn,\n}\n\nm[\"arc\"] = {\n\t\"Aramaic\",\n\t\"Q28602\",\n\t\"sem-ara\",\n\totherNames\
      \ = {\"Imperial Aramaic\", \"Official Aramaic\", \"Biblical Aramaic\"},\n\tscripts = {\"Hebr\", \"Armi\", \"Syrc\", \"Palm\", \"Nbat\", \"Phnx\", \"Mand\", \"Samr\"},\n\tentry_name = {\n\t\tfrom = {\"[\" .. u(0x0591) .. \"-\" .. u(0x05BD) .. u(0x05BF)\
      \ .. \"-\" .. u(0x05C5) .. u(0x05C7) .. \"]\", \"[\" .. u(0x0304) .. u(0x0308) .. u(0x0331) .. u(0x0730) .. \"-\" .. u(0x0748) .. \"]\" },\n\t\tto   = {}} ,\n}\n\nm[\"ard\"] = {\n\t\"Arabana\",\n\t\"Q3507959\",\n\t\"aus-kar\",\n\tscripts = Latn,\n}\n\n\
      m[\"are\"] = {\n\t\"Western Arrernte\",\n\t\"Q12645549\",\n\t\"aus-pam\",\n\tscripts = Latn,\n}\n\nm[\"arh\"] = {\n\t\"Arhuaco\",\n\t\"Q2640621\",\n\t\"cba\",\n\totherNames = {\"Ika\"},\n\tscripts = Latn,\n}\n\nm[\"ari\"] = {\n\t\"Arikara\",\n\t\"Q56539\"\
      ,\n\t\"cdd\",\n\tscripts = Latn,\n}\n\nm[\"arj\"] = {\n\t\"Arapaso\",\n\t\"Q12627166\",\n\t\"sai-tuc\",\n\tscripts = Latn,\n}\n\nm[\"ark\"] = {\n\t\"Arikapú\",\n\t\"Q3446640\",\n\t\"sai-mje\",\n\tscripts = Latn,\n}\n\nm[\"arl\"] = {\n\t\"Arabela\",\n\t\
      \"Q2591221\",\n\t\"sai-zap\",\n\tscripts = Latn,\n}\n\nm[\"arn\"] = {\n\t\"Mapudungun\",\n\t\"Q33730\",\n\t\"sai-ara\",\n\tscripts = Latn,\n\totherNames = {\"Mapuche\", \"Mapudungün\", \"Mapuzugün\", \"Mapudungu\", \"Araucanian\"},\n}\n\nm[\"aro\"] = {\n\
      \t\"Araona\",\n\t\"Q958414\",\n\t\"sai-tac\",\n\tscripts = Latn,\n}\n\nm[\"arp\"] = {\n\t\"Arapaho\",\n\t\"Q56417\",\n\t\"alg\",\n\tscripts = Latn,\n}\n\nm[\"arq\"] = {\n\t\"Algerian Arabic\",\n\t\"Q56499\",\n\t\"sem-arb\",\n\tscripts = Arab,\n\tentry_name\
      \ = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"arr\"] = {\n\t\"Arara-Karo\",\n\t\"Q35539\",\n\t\"tup\",\n\totherNames = {\"\
      Karo\", \"Karo (Brazil)\", \"Ramarama\", \"Itanga\", \"Itogapuc\", \"Itogapúk\", \"Ntogapid\", \"Ntogapig\", \"Arára\", \"Arára de Rondonia\", \"Arára do Jiparaná\", \"Uruku\", \"Urukú\"},\n\tscripts = Latn,\n}\n\nm[\"ars\"] = {\n\t\"Najdi Arabic\",\n\t\
      \"Q56574\",\n\t\"sem-arb\",\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"aru\"] = {\n\t\"\
      Arua\",\n\t\"Q2746221\",\n\t\"auf\",\n\totherNames = {\"Aruá\", \"Arawa\", \"Arawá\"}, -- extinct, northern Brazil, cf. 'arx'\n\tscripts = Latn,\n}\n\nm[\"arv\"] = {\n\t\"Arbore\",\n\t\"Q56883\",\n\t\"cus\",\n\tscripts = Latn,\n}\n\nm[\"arw\"] = {\n\t\"\
      Arawak\",\n\t\"Q2655664\",\n\t\"awd-taa\",\n\totherNames = {\"Arowak\", \"Lokono\"},\n\tancestors = {\"awd-taa-pro\"},\n\tscripts = Latn,\n}\n\nm[\"arx\"] = {\n\t\"Aruá\",\n\t\"Q3507907\",\n\t\"tup\",\n\totherNames = {\"Arua\", \"Aruashi\", \"Aruáshi\"\
      , \"Aruachi\"}, -- moribund, central Brazil, cf 'aru'\n\tscripts = Latn,\n}\n\nm[\"ary\"] = {\n\t\"Moroccan Arabic\",\n\t\"Q56426\",\n\t\"sem-arb\",\n\tscripts = {\"Arab\", \"Latn\"},\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D),\
      \ u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"arz\"] = {\n\t\"Egyptian Arabic\",\n\t\"Q29919\",\n\t\"sem-arb\",\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B),\
      \ u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"asa\"] = {\n\t\"Pare\",\n\t\"Q36403\",\n\t\"bnt\",\n\totherNames = {\"Asu\", \"Asu (Tanzania)\", \"Chasu\", \"Kipare\"\
      , \"Southern Pare\", \"South Pare\"},\n\tscripts = Latn,\n}\n\nm[\"asb\"] = {\n\t\"Assiniboine\",\n\t\"Q2591288\",\n\t\"sio\",\n\tscripts = Latn,\n}\n\nm[\"asc\"] = {\n\t\"Casuarina Coast Asmat\",\n\t\"Q11732046\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\n\
      m[\"ase\"] = {\n\t\"American Sign Language\",\n\t\"Q14759\",\n\t\"sgn\",\n\totherNames = {\"Ameslan\", \"ASL\"},\n\tscripts = {\"Sgnw\"},\n}\n\nm[\"asf\"] = {\n\t\"Auslan\",\n\t\"Q29525\",\n\t\"sgn\",\n\totherNames = {\"Australian Sign Language\"},\n\t\
      scripts = Latn, -- when documented\n}\n\nm[\"asg\"] = {\n\t\"Cishingini\",\n\t\"Q35199\",\n\t\"nic-knj\",\n\totherNames = {\"Shingini\"},\n\tscripts = Latn,\n}\n\nm[\"ash\"] = {\n\t\"Abishira\",\n\t\"Q2871740\",\n\t\"qfa-iso\",\n\totherNames = {\"Tequiraca\"\
      , \"Tekiráka\", \"Avishiri\", \"Auishiri\", \"Agouisiri\", \"Avirxiri\", \"Abiquira\", \"Abigira\", \"Aiwa\", \"Aewa\"},\n\tscripts = Latn,\n}\n\nm[\"asi\"] = {\n\t\"Buruwai\",\n\t\"Q5001031\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"asj\"] = {\n\t\"\
      Nsari\",\n\t\"Q36418\",\n\t\"nic-bod\",\n\totherNames = {\"Sari\", \"Saari\"},\n\tscripts = Latn,\n}\n\nm[\"ask\"] = {\n\t\"Ashkun\",\n\t\"Q29379\",\n\t\"nur-sou\",\n\tscripts = {\"Arab\", \"Latn\"},\n}\n\nm[\"asl\"] = {\n\t\"Asilulu\",\n\t\"Q12473347\"\
      ,\n\t\"poz-cet\",\n\tscripts = Latn,\n}\n\nm[\"asn\"] = {\n\t\"Xingú Asuriní\",\n\t\"Q8044571\",\n\t\"tup-gua\",\n\tscripts = Latn,\n}\n\nm[\"aso\"] = {\n\t\"Dano\",\n\t\"Q5220979\",\n\t\"paa-kag\",\n\tscripts = {\"Latn\"},\n}\n\nm[\"asp\"] = {\n\t\"Algerian\
      \ Sign Language\",\n\t\"Q3135421\",\n\t\"sgn\",\n}\n\nm[\"asq\"] = {\n\t\"Austrian Sign Language\",\n\t\"Q36668\",\n\t\"sgn\",\n\tscripts = Latn, -- when documented\n}\n\nm[\"asr\"] = {\n\t\"Asuri\",\n\t\"Q3504321\",\n\t\"mun\",\n\totherNames = {\"Asur\"\
      },\n\tscripts = Latn, -- when documented\n}\n\nm[\"ass\"] = {\n\t\"Ipulo\",\n\t\"Q35408\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"ast\"] = {\n\t\"Asturian\",\n\t\"Q29507\",\n\t\"roa-ibe\",\n\tscripts = Latn,\n\tancestors = {\"roa-ole\"},\n}\n\nm[\"\
      asu\"] = {\n\t\"Tocantins Asurini\",\n\t\"Q32041490\",\n\t\"tup-gua\",\n\totherNames = {\"Asurini\", \"Asuriní\", \"Asuriní of Tocantins\", \"Asuriní do Tocantins\", \"Akwawa\", \"Akwáwa\"},\n\tscripts = Latn,\n}\n\nm[\"asv\"] = {\n\t\"Asoa\",\n\t\"Q56296\"\
      ,\n\t\"csu\",\n\tscripts = Latn,\n}\n\nm[\"asw\"] = {\n\t\"Australian Aboriginal Sign Language\",\n\t\"Q955216\",\n\t\"sgn\",\n\totherNames = {\"Australian Aborigines Sign Language\"},\n\tscripts = Latn, -- when documented\n}\n\nm[\"asx\"] = {\n\t\"Muratayak\"\
      ,\n\t\"Q11732766\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"asy\"] = {\n\t\"Yaosakor Asmat\",\n\t\"Q16113158\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"asz\"] = {\n\t\"As\",\n\t\"Q2866218\",\n\t\"poz-hce\",\n\tscripts = Latn,\n}\n\nm[\"ata\"] = {\n\
      \t\"Pele-Ata\",\n\t\"Q56511\",\n\t\"paa\",\n\totherNames = {\"Ata\", \"Wasi\"},\n\tscripts = Latn,\n}\n\nm[\"atb\"] = {\n\t\"Zaiwa\",\n\t\"Q56594\",\n\t\"tbq-brm\",\n\tscripts = Latn, -- also Hani?\n}\n\nm[\"atc\"] = {\n\t\"Atsahuaca\",\n\t\"Q4817730\"\
      ,\n\t\"sai-pan\",\n\tscripts = Latn,\n}\n\nm[\"atd\"] = {\n\t\"Ata Manobo\",\n\t\"Q12627315\",\n\t\"mno\",\n\tscripts = Latn,\n}\n\nm[\"ate\"] = {\n\t\"Atemble\",\n\t\"Q4813055\",\n\t\"ngf-mad\",\n\tscripts = Latn,\n}\n\nm[\"atg\"] = {\n\t\"Okpela\",\n\
      \t\"Q7082551\",\n\t\"alv-edo\",\n\totherNames = {\"Ivbie North\", \"Arhe\", \"Ivbie North-Okpela-Arhe\"},\n\tscripts = Latn,\n}\n\nm[\"ati\"] = {\n\t\"Attié\",\n\t\"Q34844\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"atj\"] = {\n\t\"Atikamekw\",\n\t\
      \"Q56590\",\n\t\"alg\",\n\tscripts = Latn,\n\tancestors = {\"cr\"},\n}\n\nm[\"atk\"] = {\n\t\"Ati\",\n\t\"Q4815751\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"atl\"] = {\n\t\"Mt. Iraya Agta\",\n\t\"Q6921430\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"\
      atm\"] = {\n\t\"Ata\",\n\t\"Q4812603\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"ato\"] = {\n\t\"Atong (Cameroon)\",\n\t\"Q34824\",\n\t\"nic-grf\",\n\totherNames = {\"Atoŋ\", \"Atong\"},\n\tscripts = Latn,\n}\n\nm[\"atp\"] = {\n\t\"Pudtol Atta\",\n\t\"\
      Q12640726\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"atq\"] = {\n\t\"Aralle-Tabulahan\",\n\t\"Q4783889\",\n\t\"poz-ssw\",\n\tscripts = Latn,\n}\n\nm[\"atr\"] = {\n\t\"Waimiri-Atroari\",\n\t\"Q56865\",\n\t\"sai-car\",\n\tscripts = Latn,\n}\n\nm[\"ats\"\
      ] = {\n\t\"Gros Ventre\",\n\t\"Q56628\",\n\t\"alg\",\n\totherNames = {\"Atsina\"},\n\tscripts = Latn,\n}\n\nm[\"att\"] = {\n\t\"Pamplona Atta\",\n\t\"Q12639245\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"atu\"] = {\n\t\"Reel\",\n\t\"Q7306882\",\n\t\"sdv\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"atv\"] = {\n\t\"Northern Altai\",\n\t\"Q2640863\",\n\t\"trk\",\n\totherNames = {\"Northern Altay\", \"Altai\", \"Altay\"},\n\tscripts = Cyrl,\n\ttranslit_module = \"Altai-translit\",\n}\n\nm[\"atw\"] = {\n\t\"Atsugewi\",\n\
      \t\"Q56718\",\n\t\"nai-pal\",\n\totherNames = {\"Atsugé\"},\n\tscripts = Latn,\n}\n\nm[\"atx\"] = {\n\t\"Arutani\",\n\t\"Q56609\",\n\tscripts = Latn,\n}\n\nm[\"aty\"] = {\n\t\"Aneityum\",\n\t\"Q2379113\",\n\t\"poz-oce\",\n\tscripts = Latn,\n}\n\nm[\"atz\"\
      ] = {\n\t\"Arta\",\n\t\"Q3508067\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"aua\"] = {\n\t\"Asumboa\",\n\t\"Q4811870\",\n\t\"poz-oce\",\n\tscripts = Latn,\n}\n\nm[\"aub\"] = {\n\t\"Alugu\",\n\t\"Q12626798\",\n\t\"tbq-lol\",\n\tscripts = Latn, -- also\
      \ Hani?\n}\n\nm[\"auc\"] = {\n\t\"Huaorani\",\n\t\"Q758570\",\n\t\"qfa-iso\",\n\totherNames = {\"Waorani\", \"Sabela\", \"Wao\", \"Huao\", \"Aushiri\", \"Ssabela\", \"Wao Terero\", \"Auka\", \"Auca\"},\n\tscripts = Latn,\n}\n\nm[\"aud\"] = {\n\t\"Anuta\"\
      ,\n\t\"Q35326\",\n\t\"poz-pnp\",\n\tscripts = Latn,\n}\n\nm[\"aug\"] = {\n\t\"Aguna\",\n\t\"Q34733\",\n\t\"nic-vco\",\n\tscripts = Latn,\n}\n\nm[\"auh\"] = {\n\t\"Aushi\",\n\t\"Q2872082\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"aui\"] = {\n\t\"Anuki\"\
      ,\n\t\"Q3508132\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"auj\"] = {\n\t\"Augila\",\n\t\"Q56398\",\n\t\"ber\",\n\totherNames = {\"Awjilah\", \"Awjila\"},\n\tscripts = {\"Latn\", \"Arab\", \"Tfng\"},\n}\n\nm[\"auk\"] = {\n\t\"Heyo\",\n\t\"Q3504295\"\
      ,\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"aul\"] = {\n\t\"Aulua\",\n\t\"Q427300\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"aum\"] = {\n\t\"Asu\",\n\t\"Q34798\",\n\t\"alv-von\",\n\totherNames = {\"Abewa\", \"Asu (Nigeria)\"},\n\tscripts = Latn,\n\
      }\n\nm[\"aun\"] = {\n\t\"Molmo One\",\n\t\"Q12637224\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"auo\"] = {\n\t\"Auyokawa\",\n\t\"Q56247\",\n\t\"cdc-wst\",\n\tscripts = Latn,\n}\n\nm[\"aup\"] = {\n\t\"Makayam\",\n\t\"Q6738863\",\n\t\"ngf\",\n\totherNames\
      \ = {\"Tirio\", \"Makaeyam\", \"Aturu\", \"Atura\", \"Adulu\"},\n\tscripts = Latn,\n}\n\nm[\"auq\"] = {\n\t\"Anus\",\n\t\"Q23855\",\n\t\"poz-ocw\",\n\totherNames = {\"A\", \"Korur\", \"Korurnus\"}, -- no name attested? lect may be same as 'pdn'\n\tscripts\
      \ = Latn,\n}\n\nm[\"aur\"] = {\n\t\"Aruek\",\n\t\"Q3504279\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"aut\"] = {\n\t\"Austral\",\n\t\"Q2669261\",\n\t\"poz-pep\",\n\tscripts = Latn,\n}\n\nm[\"auu\"] = {\n\t\"Auye\",\n\t\"Q4827334\",\n\t\"ngf\",\n\t\
      otherNames = {\"Auwje\"},\n\tscripts = Latn,\n}\n\nm[\"auw\"] = {\n\t\"Awyi\",\n\t\"Q3513326\",\n\t\"paa\",\n\totherNames = {\"Awye\"},\n\tscripts = Latn,\n}\n\nm[\"aux\"] = {\n\t\"Aurá\",\n\t\"Q3507995\",\n\t\"tup-gua\",\n\tscripts = Latn,\n}\n\nm[\"\
      auy\"] = {\n\t\"Auyana\",\n\t\"Q2873211\",\n\t\"paa-kag\",\n\totherNames = {\"Awiyaana\"},\n\tscripts = Latn,\n}\n\nm[\"auz\"] = {\n\t\"Uzbeki Arabic\",\n\t\"Q3399507\",\n\t\"sem-arb\",\n\totherNames = {\"Uzbek Arabic\"},\n\tscripts = Arab,\n}\n\nm[\"\
      avb\"] = {\n\t\"Avau\",\n\t\"Q12627412\",\n\t\"poz-ocw\",\n\tscripts = Latn,\n}\n\nm[\"avd\"] = {\n\t\"Alviri-Vidari\",\n\t\"Q3327357\",\n\t\"xme\",\n\totherNames = {\"Alviri\", \"Vidari\"},\n\tscripts = {\"fa-Arab\"},\n\tancestors = {\"xme-mid\"},\n}\n\
      \nm[\"avi\"] = {\n\t\"Avikam\",\n\t\"Q34840\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"avk\"] = {\n\t\"Kotava\",\n\t\"Q1377116\",\n\t\"art\",\n\tscripts = Latn,\n\ttype = \"appendix-constructed\",\n}\n\nm[\"avl\"] = {\n\t\"Eastern Egyptian Bedawi\
      \ Arabic\",\n\t\"Q56714\",\n\t\"sem-arb\",\n\totherNames = {\"Bedawi Arabic\", \"Levantine Bedawi Arabic\"},\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652),\
      \ u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"avm\"] = {\n\t\"Angkamuthi\",\n\tnil,\n\t\"aus-pmn\",\n\tscripts = Latn,\n}\n\nm[\"avn\"] = {\n\t\"Avatime\",\n\t\"Q34796\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"avo\"] = {\n\t\"Agavotaguerra\"\
      ,\n\t\"Q3508007\",\n\t\"awd\",\n\tscripts = Latn,\n}\n\nm[\"avs\"] = {\n\t\"Aushiri\",\n\t\"Q3409318\",\n\t\"sai-zap\",\n\tscripts = Latn,\n}\n\nm[\"avt\"] = {\n\t\"Au\",\n\t\"Q3446608\",\n\t\"qfa-tor\",\n\tscripts = Latn,\n}\n\nm[\"avu\"] = {\n\t\"Avokaya\"\
      ,\n\t\"Q56685\",\n\t\"csu\",\n\tscripts = Latn,\n}\n\nm[\"avv\"] = {\n\t\"Avá-Canoeiro\",\n\t\"Q4829584\",\n\t\"tup-gua\",\n\totherNames = {\"Avá\", \"Canoe\"},\n\tscripts = Latn,\n}\n\nm[\"awa\"] = {\n\t\"Awadhi\",\n\t\"Q29579\",\n\t\"inc\",\n\tscripts\
      \ = {\"Deva\", \"Kthi\", \"fa-Arab\"},\n\tancestors = {\"pka\"},\n\ttranslit_module = \"hi-translit\",\n}\n\nm[\"awb\"] = {\n\t\"Awa (New Guinea)\",\n\t\"Q2874650\",\n\t\"paa-kag\",\n\totherNames = {\"Awa\", \"Awa (Papua New Guinea)\"},\n\tscripts = Latn,\n\
      }\n\nm[\"awc\"] = {\n\t\"Cicipu\",\n\t\"Q35193\",\n\t\"nic-knj\",\n\totherNames = {\"Cipu\"},\n\tscripts = Latn,\n}\n\nm[\"awe\"] = {\n\t\"Awetí\",\n\t\"Q4830038\",\n\t\"tup\",\n\tscripts = Latn,\n}\n\nm[\"awg\"] = {\n\t\"Anguthimri\",\n\t\"Q4764288\"\
      ,\n\t\"aus-pam\",\n\totherNames = {\"Alngith\", \"Leningitij\", \"Mpakwithi\"},\n\tscripts = Latn,\n}\n\nm[\"awh\"] = {\n\t\"Awbono\",\n\t\"Q3446684\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"awi\"] = {\n\t\"Aekyom\",\n\t\"Q3399691\",\n\t\"ngf\",\n\t\
      otherNames = {\"Awin\"},\n\tscripts = Latn,\n}\n\nm[\"awk\"] = {\n\t\"Awabakal\",\n\t\"Q3449138\",\n\t\"aus-pam\",\n\tscripts = Latn,\n}\n\nm[\"awm\"] = {\n\t\"Arawum\",\n\t\"Q4784537\",\n\t\"ngf-mad\",\n\tscripts = Latn,\n}\n\nm[\"awn\"] = {\n\t\"Awngi\"\
      ,\n\t\"Q34934\",\n\t\"cus\",\n\tscripts = {\"Ethi\"},\n}\n\nm[\"awo\"] = {\n\t\"Awak\",\n\t\"Q3446643\",\n\t\"alv\",\n\tscripts = Latn,\n}\n\nm[\"awr\"] = {\n\t\"Awera\",\n\t\"Q56379\",\n\t\"paa-lkp\",\n\tscripts = Latn,\n}\n\nm[\"aws\"] = {\n\t\"South\
      \ Awyu\",\n\t\"Q12633986\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"awt\"] = {\n\t\"Araweté\",\n\t\"Q4784535\",\n\t\"tup-gua\",\n\tscripts = Latn,\n}\n\nm[\"awu\"] = {\n\t\"Central Awyu\",\n\t\"Q12628801\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"awv\"\
      ] = {\n\t\"Jair Awyu\",\n\t\"Q16110177\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"aww\"] = {\n\t\"Awun\",\n\t\"Q56369\",\n\t\"paa-spk\",\n\tscripts = Latn,\n}\n\nm[\"awx\"] = {\n\t\"Awara\",\n\t\"Q2874670\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"\
      awy\"] = {\n\t\"Edera Awyu\",\n\t\"Q12630425\",\n\t\"ngf\",\n\tscripts = Latn,\n}\n\nm[\"axb\"] = {\n\t\"Abipon\",\n\t\"Q11252539\",\n\t\"sai-guc\",\n\totherNames = {\"Abipón\", \"Callaga\", \"Kalyaga\"},\n\tscripts = Latn,\n}\n\nm[\"axe\"] = {\n\t\"Ayerrerenge\"\
      ,\n\t\"Q16112737\",\n\t\"aus-pam\",\n\tscripts = Latn,\n}\n\nm[\"axg\"] = {\n\t\"Mato Grosso Arára\",\n\t\"Q3446660\",\n\tscripts = Latn,\n}\n\nm[\"axk\"] = {\n\t\"Aka (Central Africa)\",\n\t\"Q11010149\",\n\t\"bnt\",\n\totherNames = {\"Yaka\", \"Yaka\
      \ (Central African Republic)\", \"Aka\", \"Beka\"}, -- cf 'iyx', 'yaf'\n\tscripts = Latn,\n}\n\nm[\"axl\"] = {\n\t\"Lower Southern Aranda\",\n\t\"Q6693295\",\n\t\"aus-pam\",\n\totherNames = {\"Lower Southern Arrernte\", \"Southern Arrernte\", \"Southern\
      \ Aranda\"},\n\tscripts = Latn,\n}\n\nm[\"axm\"] = {\n\t\"Middle Armenian\",\n\t\"Q4438498\",\n\t\"hyx\",\n\tscripts = {\"Armn\"},\n\tancestors = {\"xcl\"},\n\ttranslit_module = \"Armn-translit\",\n\toverride_translit = true,\n\tentry_name = {\n\t\tfrom\
      \ = {\"և\", \"՞\", \"՜\", \"՛\", \"՟\"},\n\t\tto   = {\"եւ\"}} ,\n}\n\nm[\"axx\"] = {\n\t\"Xaragure\",\n\t\"Q8045635\",\n\t\"poz-cln\",\n\totherNames = {\"Xârâgurè\"},\n\tscripts = Latn,\n}\n\nm[\"aya\"] = {\n\t\"Awar\",\n\t\"Q56876\",\n\t\"paa\",\n\t\
      scripts = Latn,\n}\n\nm[\"ayb\"] = {\n\t\"Ayizo\",\n\t\"Q34841\",\n\t\"alv-von\",\n\totherNames = {\"Ayizo Gbe\"},\n\tscripts = Latn,\n}\n\nm[\"ayd\"] = {\n\t\"Ayabadhu\",\n\t\"Q3509164\",\n\t\"aus-pmn\",\n\totherNames = {\"Ayapathu\", \"Badhu\"},\n\t\
      scripts = Latn,\n}\n\nm[\"aye\"] = {\n\t\"Ayere\",\n\t\"Q34788\",\n\t\"alv-von\",\n\tscripts = Latn,\n}\n\nm[\"ayg\"] = {\n\t\"Nyanga (Togo)\",\n\t\"Q35446\",\n\t\"alv-kwa\",\n\totherNames = {\"Nyanga\", \"Ginyanga\"},\n\tscripts = Latn,\n}\n\nm[\"ayh\"\
      ] = {\n\t\"Hadrami Arabic\",\n\t\"Q3510366\",\n\t\"sem-arb\",\n\totherNames = {\"Hadhrami Arabic\"},\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670),\
      \ u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"ayi\"] = {\n\t\"Leyigha\",\n\t\"Q3914492\",\n\t\"nic-bco\",\n\tscripts = Latn,\n}\n\nm[\"ayk\"] = {\n\t\"Akuku\",\n\t\"Q3450179\",\n\t\"alv-edo\",\n\tscripts = Latn,\n}\n\nm[\"ayl\"] = {\n\t\"Libyan Arabic\"\
      ,\n\t\"Q56503\",\n\t\"sem-arb\",\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"ayn\"] = {\n\
      \t\"Sanaani Arabic\",\n\t\"Q1686766\",\n\t\"sem-arb\",\n\tscripts = Arab,\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n\
      }\n\nm[\"ayo\"] = {\n\t\"Ayoreo\",\n\t\"Q56634\",\n\t\"sai-zam\",\n\totherNames = {\"Morotoco\", \"Moro\", \"Ayoweo\", \"Ayoré\", \"Pyeta Yovai\"},\n\tscripts = Latn,\n}\n\nm[\"ayp\"] = {\n\t\"North Mesopotamian Arabic\",\n\t\"Q56577\",\n\t\"sem-arb\"\
      ,\n\tscripts = Arab,\n\tancestors = {\"acm\"},\n\tentry_name = {\n\t\tfrom = {u(0x0671), u(0x064B), u(0x064C), u(0x064D), u(0x064E), u(0x064F), u(0x0650), u(0x0651), u(0x0652), u(0x0670), u(0x0640)},\n\t\tto   = {u(0x0627)}},\n}\n\nm[\"ayq\"] = {\n\t\"\
      Ayi\",\n\t\"Q56449\",\n\t\"paa-spk\",\n\totherNames = {\"Ayi (New Guinea)\", \"Ayi (Papua New Guinea)\"},\n\tscripts = Latn,\n}\n\nm[\"ays\"] = {\n\t\"Sorsogon Ayta\",\n\t\"Q7563752\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"ayt\"] = {\n\t\"Bataan Ayta\"\
      ,\n\t\"Q4921648\",\n\t\"phi\",\n\totherNames = {\"Magbukun Ayta\", \"Mariveleño\"},\n\tscripts = Latn,\n}\n\nm[\"ayu\"] = {\n\t\"Ayu\",\n\t\"Q34786\",\n\t\"alv\",\n\tscripts = Latn,\n}\n\nm[\"ayy\"] = {\n\t\"Tayabas Ayta\",\n\t\"Q7689745\",\n\t\"phi\"\
      ,\n\tscripts = Latn,\n}\n\nm[\"ayz\"] = {\n\t\"Maybrat\",\n\t\"Q4830892\",\n\t\"paa\",\n\totherNames = {\"Mai Brat\", \"Ajamaru\", \"Ayamaru\"},\n\tscripts = Latn,\n}\n\nm[\"aza\"] = {\n\t\"Azha\",\n\t\"Q4832486\",\n\t\"tbq-lol\",\n\tscripts = Latn,\n\
      }\n\nm[\"azd\"] = {\n\t\"Eastern Durango Nahuatl\",\n\t\"Q16115449\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"azg\"] = {\n\t\"San Pedro Amuzgos Amuzgo\",\n\t\"Q35092\",\n\t\"omq\",\n\totherNames = {\"Upper Eastern Amuzgo\"\
      , \"Oaxaca Amuzgo\"},\n\tscripts = Latn,\n}\n\nm[\"azm\"] = {\n\t\"Ipalapa Amuzgo\",\n\t\"Q12633013\",\n\t\"omq\",\n\totherNames = {\"Lower Eastern Amuzgo\"},\n\tscripts = Latn,\n}\n\nm[\"azn\"] = {\n\t\"Western Durango Nahuatl\",\n\t\"Q12645553\",\n\t\
      \"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nm[\"azo\"] = {\n\t\"Awing\",\n\t\"Q34856\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"azt\"] = {\n\t\"Faire Atta\",\n\t\"Q12630884\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"azz\"] = {\n\
      \t\"Highland Puebla Nahuatl\",\n\t\"Q12953754\",\n\t\"azc-nah\",\n\tscripts = Latn,\n\tancestors = {\"nah\"},\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:31.882Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Abor&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52831 t=1555362451784429
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '921'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:31 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1284.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 199547484, 246694049, 701665171
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4992628" pageid="4992628" ns="10" title="Template:bor"><revisions><rev user="Rua" timestamp="2017-11-12T12:37:23Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Redirected page to [[Template:borrowed]]" xml:space="preserve">#REDIRECT [[Template:borrowed]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:32.044Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aborrowed&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=38185 t=1555362451960658
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1098'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 192570465, 830741908, 698034749
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="2221629" pageid="2221629" ns="10" title="Template:borrowed"><revisions><rev user="Rua" timestamp="2017-11-12T19:36:33Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:etymology/templates|borrowed}}&lt;!--

      --&gt;&lt;includeonly&gt;&lt;!--
      --&gt;{{#if:{{{withtext|}}}|[[Category:bor with withtext]]}}&lt;!--
      --&gt;&lt;/includeonly&gt;&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:32.244Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology+languages&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53372 t=1555362452142976
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1344.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 571629612, 721840850, 697871355
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4111466\" pageid=\"4111466\" ns=\"828\" title=\"Module:etymology languages\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-03-04T19:42:39Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Undo revision 51673717 by [[Special:Contributions/Erutuon|Erutuon]] ([[User talk:Erutuon|talk]])\" xml:space=\"preserve\">local export = {}\n\nlocal EtymologyLanguage = {}\n\n\nfunction\
      \ EtymologyLanguage:getCode()\n\treturn self._code\nend\n\n\nfunction EtymologyLanguage:getCanonicalName()\n\treturn self._rawData.canonicalName\nend\n\n\nfunction EtymologyLanguage:getOtherNames()\n\treturn self._rawData.otherNames or {}\nend\n\n\n--function\
      \ EtymologyLanguage:getAllNames()\n--\treturn self._rawData.names\n--end\n\n\nfunction EtymologyLanguage:getCategoryName()\n\treturn self:getCanonicalName()\nend\n\n\nfunction EtymologyLanguage:getType()\n\treturn \"etymology language\"\nend\n\n\nfunction\
      \ EtymologyLanguage:getParentCode()\n\treturn self._rawData.parent\nend\n\n\nfunction EtymologyLanguage:getAncestors()\n\tif not self._ancestorObjects then\n\t\tself._ancestorObjects = {}\n\t\t\n\t\tfor _, ancestor in ipairs(self._rawData.ancestors or\
      \ {}) do\n\t\t\ttable.insert(self._ancestorObjects, export.getByCode(ancestor) or require(\"Module:languages\").getByCode(ancestor))\n\t\tend\n\tend\n\t\n\treturn self._ancestorObjects\nend\n\nfunction EtymologyLanguage:getWikidataItem()\n\treturn self._rawData.wikidata_item\n\
      end\n\nfunction EtymologyLanguage:getWikipediaArticle()\n\treturn self._rawData.wikipedia_article or \n\t\t(self:getWikidataItem() and mw.wikibase and\n\t     mw.wikibase.sitelink(self:getWikidataItem(), 'enwiki')) or\n\t     self._rawData.canonicalName\n\
      end\n\nfunction EtymologyLanguage:makeWikipediaLink()\n\treturn \"[[w:\" .. self:getWikipediaArticle() .. \"|\" .. self:getCanonicalName() .. \"]]\"\nend\n\n\nfunction EtymologyLanguage:toJSON()\n\tlocal ret = {\n\t\tcanonicalName = self:getCanonicalName(),\n\
      \t\tcategoryName = self:getCategoryName(),\n\t\tcode = self._code,\n\t\totherNames = self:getOtherNames(),\n\t\tparent = self._rawData.parent,\n\t\ttype = self:getType(),\n\t\t}\n\t\n\treturn require(\"Module:JSON\").toJSON(ret)\nend\n\n\nfunction EtymologyLanguage:getRawData()\n\
      \treturn self._rawData\nend\n\n\nEtymologyLanguage.__index = EtymologyLanguage\n\n\nfunction export.makeObject(code, data)\n\treturn data and setmetatable({ _rawData = data, _code = code }, EtymologyLanguage) or nil\nend\n\n\nfunction export.getByCode(code)\n\
      \treturn export.makeObject(code, mw.loadData(\"Module:etymology languages/data\")[code])\nend\n\n\nfunction export.getByCanonicalName(name)\n\tlocal code = mw.loadData(\"Module:etymology languages/by name\")[name]\n\t\n\tif not code then\n\t\treturn nil\n\
      \tend\n\t\n\treturn export.makeObject(code, mw.loadData(\"Module:etymology languages/data\")[code])\nend\n\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:32.482Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aetymology+languages%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=80872 t=1555362452321534
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 490567016, 568037830, 703857160
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4111810\" pageid=\"4111810\" ns=\"828\" title=\"Module:etymology languages/data\"><revisions><rev user=\"Mahagaja\" timestamp=\"2019-04-12T10:13:18Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"to match [[Category:Picard Old French]]\" xml:space=\"preserve\">local m = {}\n\n\n-- Albanian varieties\n\n\nm[\"aln\"] = {\n\tcanonicalName = \"Gheg Albanian\",\n\totherNames = {\"Gheg\"\
      },\n\tparent = \"sq\",\n\twikidata_item = \"Q181037\",\n}\n\nm[\"aae\"] = {\n\tcanonicalName = \"Arbëreshë Albanian\",\n\totherNames = {\"Arbëreshë\", \"Arbëresh\"},\n\tparent = \"sq\",\n\twikidata_item = \"Q1075302\",\n}\n\nm[\"aat\"] = {\n\tcanonicalName\
      \ = \"Arvanitika Albanian\",\n\totherNames = {\"Arvanitika\"},\n\tparent = \"sq\",\n\twikidata_item = \"Q29347\",\n}\n\n-- Akkadian varieties\n\nm[\"akk-old\"] = {\n\tcanonicalName = \"Old Akkadian\",\n\tparent = \"akk\",\n}\n\nm[\"akk-obb\"] = {\n\tcanonicalName\
      \ = \"Old Babylonian\",\n\tparent = \"akk\",\n}\n\nm[\"akk-oas\"] = {\n\tcanonicalName = \"Old Assyrian\",\n\tparent = \"akk\",\n}\n\nm[\"akk-mbb\"] = {\n\tcanonicalName = \"Middle Babylonian\",\n\tparent = \"akk\",\n}\n\nm[\"akk-mas\"] = {\n\tcanonicalName\
      \ = \"Middle Assyrian\",\n\tparent = \"akk\",\n}\n\nm[\"akk-nbb\"] = {\n\tcanonicalName = \"Neo-Babylonian\",\n\tparent = \"akk\",\n}\n\nm[\"akk-nas\"] = {\n\tcanonicalName = \"Neo-Assyrian\",\n\tparent = \"akk\",\n}\n\nm[\"akk-lbb\"] = {\n\tcanonicalName\
      \ = \"Late Babylonian\",\n\tparent = \"akk\",\n}\n\n-- Aramaic varieties\n\nm[\"arc-bib\"] = {\n\tcanonicalName = \"Biblical Aramaic\",\n\tparent = \"arc\",\n}\n\nm[\"arc-imp\"] = {\n\tcanonicalName = \"Imperial Aramaic\",\n\tparent = \"arc\",\n}\n\nm[\"\
      arc-off\"] = {\n\tcanonicalName = \"Official Aramaic\",\n\tparent = \"arc\",\n}\n\nm[\"arc-hat\"] = {\n\tcanonicalName = \"Hatran Aramaic\",\n\tparent = \"arc\",\n}\n\nm[\"sem-jar\"] = {\n\tcanonicalName = \"Jewish Aramaic\",\n\totherNames = {\"Judeo-Aramaic\"\
      },\n\tparent = \"arc\",\n\twikidata_item = \"Q2633045\",\n}\n\nm[\"tmr\"] = {\n\tcanonicalName = \"Jewish Babylonian Aramaic\",\n\tparent = \"arc\",\n\twikidata_item = \"Q33407\",\n}\n\nm[\"jpa\"] = {\n\tcanonicalName = \"Jewish Palestinian Aramaic\",\n\
      \totherNames = {\"Galilean Aramaic\"},\n\tparent = \"arc\",\n\twikidata_item = \"Q948909\",\n}\n\n-- Chinese varieties\n\nm[\"wuu-sha\"] = {\n\tcanonicalName = \"Shanghainese\",\n\tparent = \"wuu\",\n\twikidata_item = \"Q36718\",\n}\nm[\"Sha.\"] = m[\"\
      wuu-sha\"]\n\nm[\"hsn-old\"] = {\n\tcanonicalName = \"Old Xiang\",\n\totherNames = {\"Lou-Shao\"},\n\tparent = \"hsn\",\n\twikidata_item = \"Q7085453\",\n}\n\nm[\"zhx-pin\"] = {\n\tcanonicalName = \"Pinghua\",\n\tparent = \"yue\",\n\twikidata_item = \"\
      Q2735715\",\n}\n\nm[\"nan-hai\"] = {\n\tcanonicalName = \"Hainanese\",\n\tparent = \"nan\",\n\twikidata_item = \"Q934541\",\n}\n\nm[\"nan-hok\"] = {\n\tcanonicalName = \"Hokkien\",\n\tparent = \"nan\",\n\twikidata_item = \"Q1624231\",\n}\n\nm[\"nan-xm\"\
      ] = {\n\tcanonicalName = \"Amoy\",\n\totherNames = {\"Xiamenese\"},\n\tparent = \"nan-hok\",\n\twikidata_item = \"Q68744\",\n}\n\nm[\"nan-zz\"] = {\n\tcanonicalName = \"Zhangzhou Hokkien\",\n\tparent = \"nan-hok\",\n}\n\nm[\"nan-qz\"] = {\n\tcanonicalName\
      \ = \"Quanzhou Hokkien\",\n\tparent = \"nan-hok\",\n}\n\nm[\"nan-jj\"] = {\n\tcanonicalName = \"Jinjiang Hokkien\",\n\tparent = \"nan-qz\",\n}\n\nm[\"nan-ph\"] = {\n\tcanonicalName = \"Philippine Hokkien\",\n\tparent = \"nan-jj\",\n\twikidata_item = \"\
      Q3236692\",\n}\n\n-- Coptic varieties\n\nm[\"cop-akh\"] = {\n\tcanonicalName = \"Akhmimic Coptic\",\n\tparent = \"cop\",\n}\n\nm[\"cop-boh\"] = {\n\tcanonicalName = \"Bohairic Coptic\",\n\totherNames = {\"Memphitic Coptic\"},\n\tparent = \"cop\",\n\twikidata_item\
      \ = \"Q890733\",\n}\n\nm[\"cop-ggg\"] = {\n\tcanonicalName = \"Coptic Dialect G\",\n\tparent = \"cop\",\n}\n\nm[\"cop-jjj\"] = {\n\tcanonicalName = \"Coptic Dialect J\",\n\tparent = \"cop\",\n}\n\nm[\"cop-kkk\"] = {\n\tcanonicalName = \"Coptic Dialect\
      \ K\",\n\tparent = \"cop\",\n}\n\nm[\"cop-ppp\"] = {\n\tcanonicalName = \"Coptic Dialect P\",\n\totherNames = {\"Proto-Theban Coptic\", \"Palaeo-Theban Coptic\"},\n\tparent = \"cop\",\n}\n\nm[\"cop-fay\"] = {\n\tcanonicalName = \"Fayyumic Coptic\",\n\t\
      otherNames = {\"Faiyumic Coptic\", \"Fayumic Coptic\", \"Bashmuric Coptic\"},\n\tparent = \"cop\",\n\twikidata_item = \"Q1399115\",\n}\n\nm[\"cop-her\"] = {\n\tcanonicalName = \"Hermopolitan Coptic\",\n\totherNames = {\"Coptic Dialect H\", \"Ashmuninic\
      \ Coptic\"},\n\tparent = \"cop\",\n}\n\nm[\"cop-lyc\"] = {\n\tcanonicalName = \"Lycopolitan Coptic\",\n\totherNames = {\"Subakhmimic Coptic\", \"Assiutic Coptic\", \"Asyutic Coptic\", \"Lyco-Diospolitan Coptic\"},\n\tparent = \"cop\",\n}\n\nm[\"cop-old\"\
      ] = {\n\tcanonicalName = \"Old Coptic\",\n\tparent = \"cop\",\n}\n\nm[\"cop-oxy\"] = {\n\tcanonicalName = \"Oxyrhynchite Coptic\",\n\totherNames = {\"Mesokemic Coptic\", \"Middle Egyptian Coptic\"},\n\tparent = \"cop\",\n}\n\nm[\"cop-ply\"] = {\n\tcanonicalName\
      \ = \"Proto-Lycopolitan Coptic\",\n\totherNames = {\"Coptic Dialect i\", \"Proto-Lyco-Diospolitan Coptic\"},\n\tparent = \"cop\",\n}\n\nm[\"cop-sah\"] = {\n\tcanonicalName = \"Sahidic Coptic\",\n\totherNames = {\"Thebaic Coptic\"},\n\tparent = \"cop\"\
      ,\n\twikidata_item = \"Q2645851\",\n}\n\n-- Egyptian varieties\n\nm[\"egy-old\"] = {\n\tcanonicalName = \"Old Egyptian\",\n\tparent = \"egy\",\n\twikidata_item = \"Q447117\",\n}\n\nm[\"egy-mid\"] = {\n\tcanonicalName = \"Middle Egyptian\",\n\totherNames\
      \ = {\"Classical Egyptian\"},\n\tparent = \"egy\",\n\twikidata_item = \"Q657330\",\n}\n\nm[\"egy-nmi\"] = {\n\tcanonicalName = \"Neo-Middle Egyptian\",\n\totherNames = {\"Égyptien de tradition\", \"Traditional Egyptian\"},\n\tparent = \"egy\",\n}\n\nm[\"\
      egy-lat\"] = {\n\tcanonicalName = \"Late Egyptian\",\n\tparent = \"egy\",\n\twikidata_item = \"Q1852329\",\n}\n\n-- Elamite varieties\n\nm[\"elx-old\"] = {\n\tcanonicalName = \"Old Elamite\",\n\tparent = \"elx\",\n}\n\nm[\"elx-mid\"] = {\n\tcanonicalName\
      \ = \"Middle Elamite\",\n\tparent = \"elx\",\n}\n\nm[\"elx-neo\"] = {\n\tcanonicalName = \"Neo-Elamite\",\n\tparent = \"elx\",\n}\n\nm[\"elx-ach\"] = {\n\tcanonicalName = \"Achaemenid Elamite\",\n\tparent = \"elx\",\n}\n\n-- English, Scots and Old English\
      \ varieties\n\nm[\"en-GB\"] = {\n\tcanonicalName = \"British English\",\n\tparent = \"en\",\n\twikidata_item = \"Q7979\",\n}\nm[\"British English\"] = m[\"en-GB\"]\nm[\"BE.\"] = m[\"en-GB\"]\n\nm[\"en-US\"] = {\n\tcanonicalName = \"American English\",\n\
      \tparent = \"en\",\n\twikidata_item = \"Q7976\",\n}\nm[\"American English\"] = m[\"en-US\"]\nm[\"AE.\"] = m[\"en-US\"]\n\nm[\"en-geo\"] = {\n\tcanonicalName = \"Geordie English\",\n\tparent = \"en\",\n}\n\n-- Scots varieties\n\nm[\"sco-osc\"] = {\n\tcanonicalName\
      \ = \"Early Scots\",\n\tparent = \"sco\",\n\twikidata_item = \"Q5326738\",\n}\nm[\"Early Scots\"] = m[\"sco-osc\"]\nm[\"Old Scots\"] = m[\"sco-osc\"]\nm[\"O.Sc.\"] = m[\"sco-osc\"]\n\nm[\"sco-smi\"] = {\n\tcanonicalName = \"Middle Scots\",\n\tparent =\
      \ \"sco\",\n\twikidata_item = \"Q3327000\",\n}\nm[\"Middle Scots\"] = m[\"sco-smi\"]\nm[\"Mid.Sc.\"] = m[\"sco-smi\"]\n\nm[\"sco-ins\"] = {\n\tcanonicalName = \"Insular Scots\",\n\tparent = \"sco\",\n\twikidata_item = \"Q16919205\",\n}\nm[\"Insular Scots\"\
      ] = m[\"sco-ins\"]\nm[\"Ins.Sc.\"] = m[\"sco-ins\"]\n\nm[\"sco-uls\"] = {\n\tcanonicalName = \"Ulster Scots\",\n\tparent = \"sco\",\n\twikidata_item = \"Q201966\",\n}\nm[\"Ulster Scots\"] = m[\"sco-uls\"]\nm[\"Uls.Sc.\"] = m[\"sco-uls\"]\n\nm[\"sco-nor\"\
      ] = {\n\tcanonicalName = \"Northern Scots\",\n\tparent = \"sco\",\n\twikidata_item = \"Q16928150\",\n}\nm[\"Northern Scots\"] = m[\"sco-nor\"]\nm[\"Nor.Sc.\"] = m[\"sco-nor\"]\n\nm[\"sco-sou\"] = {\n\tcanonicalName = \"Southern Scots\",\n\tparent = \"\
      sco\",\n\twikidata_item = \"Q7570457\",\n}\nm[\"Southern Scots\"] = m[\"sco-sou\"]\nm[\"Borders Scots\"] = m[\"sco-sou\"]\nm[\"Sou.Sc.\"] = m[\"sco-sou\"]\n\n-- Middle English varieties\nm[\"enm-nor\"] = {\n\tcanonicalName = \"Northern Middle English\"\
      ,\n\totherNames = {\"Northumbrian Middle English\"},\n\tparent = \"enm\",\n}\n\n-- Old English varieties\n\n-- Includes both Mercian and Northumbrian.\nm[\"ang-ang\"] = {\n\tcanonicalName = \"Anglian Old English\",\n\tparent = \"ang\",\n}\n\nm[\"ang-mer\"\
      ] = {\n\tcanonicalName = \"Mercian Old English\",\n\tparent = \"ang\",\n}\n\nm[\"ang-nor\"] = {\n\tcanonicalName = \"Northumbrian Old English\",\n\tparent = \"ang\",\n\twikidata_item = \"Q1798915\",\n}\n\n--[[\nm[\"ang-wsx\"] = {\n\tcanonicalName = \"\
      West Saxon Old English\",\n\tparent = \"ang\",\n}\n]]\n\n\n-- French and Norman varieties\n\nm[\"fro-nor\"] = {\n\tcanonicalName = \"Old Northern French\",\n\totherNames = {\"Old Norman\", \"Old Norman French\"},\n\tparent = \"fro\",\n\twikidata_item =\
      \ \"Q2044917\",\n}\nm[\"Old Northern French\"] = m[\"fro-nor\"]\nm[\"ONF.\"] = m[\"fro-nor\"]\n\nm[\"fro-pic\"] = {\n\tcanonicalName = \"Picard Old French\",\n\tparent = \"fro\",\n}\n\nm[\"xno\"] = {\n\tcanonicalName = \"Anglo-Norman\",\n\tparent = \"\
      fro\",\n\twikidata_item = \"Q35214\",\n}\n\nm[\"fr-CA\"] = {\n\tcanonicalName = \"Canadian French\",\n\tparent = \"fr\",\n\twikidata_item = \"Q1450506\",\n}\nm[\"Canadian French\"] = m[\"fr-CA\"]\nm[\"CF.\"] = m[\"fr-CA\"]\n\nm[\"fr-aca\"] = {\n\tcanonicalName\
      \ = \"Acadian French\",\n\tparent = \"fr\",\n\twikidata_item = \"Q415109\",\n}\nm[\"Acadian French\"] = m[\"fr-aca\"]\nm[\"fra-aca\"] = m[\"fr-aca\"]\n\nm[\"frc\"] = {\n\tcanonicalName = \"Cajun French\",\n\totherNames = {\"Louisiana French\"},\n\tparent\
      \ = \"fr\",\n\twikidata_item = \"Q880301\",\n}\n\n-- Norman varieties\n\nm[\"roa-grn\"] = {\n\tcanonicalName = \"Guernésiais\",\n\tparent = \"nrf\",\n\twikidata_item = \"Q56428\",\n}\n\nm[\"roa-jer\"] = {\n\tcanonicalName = \"Jèrriais\",\n\tparent = \"\
      nrf\",\n\twikidata_item = \"Q56430\",\n}\n\n-- Brythonic\n\nm[\"bry-ear\"] = {\n\tcanonicalName = \"Early Brythonic\",\n\tparent = \"cel-bry-pro\",\n}\n\nm[\"bry-lat\"] = {\n\tcanonicalName = \"Late Brythonic\",\n\tparent = \"cel-bry-pro\",\n}\n\n-- Gaulish\n\
      \nm[\"xcg\"] = {\n\tcanonicalName = \"Cisalpine Gaulish\",\n\tparent = \"cel-gau\",\n\twikidata_item = \"Q3832927\",\n}\n\nm[\"xtg\"] = {\n\tcanonicalName = \"Transalpine Gaulish\",\n\tparent = \"cel-gau\",\n\twikidata_item = \"Q29977\",\n}\n\n\n-- Germanic\
      \ varieties\n-- (modern) German varieties\n\nm[\"de-AT\"] = {\n\tcanonicalName = \"Austrian German\",\n\tparent = \"de\",\n\twikidata_item = \"Q306626\",\n}\nm[\"Austrian German\"] = m[\"de-AT\"]\nm[\"AG.\"] = m[\"de-AT\"]\n\nm[\"de-AT-vie\"] = {\n\tcanonicalName\
      \ = \"Viennese German\",\n\tparent = \"de-AT\",\n\twikidata_item = \"Q56474\",\n}\nm[\"Viennese German\"] = m[\"de-AT-vie\"]\nm[\"VG.\"] = m[\"de-AT-vie\"]\n\nm[\"ksh\"] = {\n\tcanonicalName = \"Kölsch\",\n\tparent = \"gmw-cfr\",\n\twikidata_item = \"\
      Q4624\",\n}\nm[\"Kölsch\"] = m[\"ksh\"]\n\nm[\"pfl\"] = {\n\tcanonicalName = \"Palatine German\",\n\totherNames = {\"Pfälzisch\", \"Pälzisch\", \"Palatinate German\"},\n\tparent = \"gmw-rfr\",\n\twikidata_item = \"Q23014\",\n}\n\nm[\"sli\"] = {\n\tcanonicalName\
      \ = \"Silesian German\",\n\totherNames = {\"Silesian\"},\n\tparent = \"gmw-ecg\",\n\twikidata_item = \"Q152965\",\n}\n\nm[\"sxu\"] = {\n\tcanonicalName = \"Upper Saxon\",\n\t\tparent = \"gmw-ecg\",\n\twikidata_item = \"Q699284\",\n}\n\n-- Old High German\
      \ varieties\n\nm[\"lng\"] = {\n\tcanonicalName = \"Lombardic\",\n\tparent = \"goh\",\n\twikidata_item = \"Q35972\",\n}\nm[\"Lombardic\"] = m[\"lng\"]\nm[\"goh-lng\"] = m[\"lng\"]\n\n-- Old Norse varieties\n\nm[\"non-oen\"] = {\n\tcanonicalName = \"Old\
      \ East Norse\",\n\tparent = \"non\",\n\twikidata_item = \"Q10498031\",\n}\n\nm[\"non-ogt\"] = {\n\tcanonicalName = \"Old Gutnish\",\n\totherNames = {\"Old Gotlandic\"},\n\tparent = \"non\",\n\twikidata_item = \"Q1133488\",\n}\n\nm[\"non-own\"] = {\n\t\
      canonicalName = \"Old West Norse\",\n\tparent = \"non\",\n\twikidata_item = \"Q10498026\",\n}\n\n\n-- Greek varieties\n\nm[\"qfa-sub-grc\"] = {\n\tcanonicalName = \"Pre-Greek\",\n\tparent = \"qfa-sub\",\n\twikidata_item = \"Q965052\",\n}\nm[\"pregrc\"\
      ] = m[\"qfa-sub-grc\"]\n\nm[\"grc-boi\"] = {\n\tcanonicalName = \"Boeotian Greek\",\n\tparent = \"grc\",\n\twikidata_item = \"Q406373\",\n}\n\nm[\"grc-koi\"] = {\n\tcanonicalName = \"Koine Greek\",\n\tparent = \"grc\",\n\twikidata_item = \"Q107358\",\n\
      }\nm[\"Koine\"] = m[\"grc-koi\"]\n\nm[\"gkm\"] = {\n    canonicalName = \"Byzantine Greek\",\n\totherNames = {\"Medieval Greek\"},\n\tparent = \"grc\",\n\twikidata_item = \"Q36387\",\n}\nm[\"Medieval Greek\"] = m[\"gkm\"]\n\nm[\"grc-dor\"] = {\n\tcanonicalName\
      \ = \"Doric Greek\",\n\tparent = \"grc\",\n\twikidata_item = \"Q285494\",\n}\n\nm[\"grc-att\"] = {\n\tcanonicalName = \"Attic Greek\",\n\tparent = \"grc\",\n\twikidata_item = \"Q506588\",\n}\n\nm[\"grc-ion\"] = {\n\tcanonicalName = \"Ionic Greek\",\n\t\
      parent = \"grc\",\n\twikidata_item = \"Q504165\",\n}\n\nm[\"grc-pam\"] = {\n\tcanonicalName = \"Pamphylian Greek\",\n\tparent = \"grc\",\n\twikidata_item = \"Q2271793\",\n}\n\nm[\"grc-kre\"] = { -- code used elsewhere: see [[Module:grc:Dialects]]\n\tcanonicalName\
      \ = \"Cretan Ancient Greek\", -- to distinguish from Cretan Greek below\n\tparent = \"grc\",\n}\n\nm[\"grc-arp\"] = {\n\tcanonicalName = \"Arcadocypriot Greek\",\n\tparent = \"grc\",\n\twikidata_item = \"Q499602\",\n}\n\nm[\"el-arc\"] = {\n\tcanonicalName\
      \ = \"Arcadian Greek\",\n\tparent = \"el\",\n}\n\nm[\"el-cyp\"] = {\n\tcanonicalName = \"Cypriotic Greek\",\n\tparent = \"el\",\n}\n\nm[\"el-pap\"] = {\n\tcanonicalName = \"Paphian Greek\",\n\tparent = \"el\",\n}\n\nm[\"grc-aeo\"] = {\n\tcanonicalName\
      \ = \"Aeolic Greek\",\n\totherNames = {\"Lesbic Greek\", \"Lesbian Greek\", \"Aeolian Greek\"},\n\tparent = \"grc\",\n\twikidata_item = \"Q406373\",\n}\n\nm[\"loc-ozo\"] = {\n\tcanonicalName = \"Ozolian Locrian\",\n\tparent = \"el\",\n}\n\nm[\"loc-opu\"\
      ] = {\n\tcanonicalName = \"Opuntian Locrian\",\n\tparent = \"el\",\n}\n\nm[\"el-ths\"] = {\n\tcanonicalName = \"Thessalian Greek\",\n\tparent = \"el\",\n\twikidata_item = \"Q406373\",\n}\n\nm[\"grc-ela\"] = {\n\tcanonicalName = \"Elean Greek\",\n\tparent\
      \ = \"grc\",\n}\n\nm[\"grc-epc\"] = {\n\tcanonicalName = \"Epic Greek\",\n\tparent = \"grc\",\n\twikidata_item = \"Q990062\",\n}\n\nm[\"grc-hmr\"] = {\n\tcanonicalName = \"Homeric Greek\",\n\tparent = \"grc\",\n\twikidata_item = \"Q990062\",\n}\n\nm[\"\
      el-crt\"] = {\n\tcanonicalName = \"Cretan Greek\",\n\tparent = \"el\",\n\twikidata_item = \"Q588306\",\n}\n\n\n-- Hebrew varieties\n\nm[\"hbo\"] = {\n\tcanonicalName = \"Biblical Hebrew\",\n\totherNames = {\"Classical Hebrew\"},\n\tparent = \"he\",\n\t\
      wikidata_item = \"Q1982248\",\n}\n\nm[\"he-IL\"] = {\n\tcanonicalName = \"Modern Israeli Hebrew\",\n\tparent = \"he\",\n\twikidata_item = \"Q8141\",\n}\n\nm[\"bsh-kat\"] = {\n\tcanonicalName =\"Kativiri\",\n\totherNames = {\"Katə́viri\"},\n\tparent = \"\
      bsh\",\n\twikidata_item =\"Q2605045\",\n}\n\nm[\"bsh-kam\"] = {\n\tcanonicalName =\"Kamviri\",\n\totherNames = {\"Kamvíri\"},\n\tparent = \"bsh\",\n\twikidata_item =\"Q1193495\",\n}\nm[\"xvi\"] = m[\"bsh-kam\"]\n\nm[\"bsh-mum\"] = {\n\tcanonicalName =\"\
      Mumviri\",\n\totherNames = {\" Mumvíri\"},\n\tparent = \"bsh\"\n}\n\n\n-- Iranian varieties:\n-- Historical and current Iranian dialects\n\nm[\"ae-old\"] = {\n\tcanonicalName = \"Old Avestan\",\n\totherNames = {\"Gathic Avestan\"},\n\tparent = \"ae\",\n\
      \twikidata_item = \"Q29572\",\n}\n\nm[\"ae-yng\"] = {\n\tcanonicalName = \"Younger Avestan\",\n\totherNames = {\"Young Avestan\"},\n\tparent = \"ae-old\",\n}\n\nm[\"bcc\"] = {\n\tcanonicalName = \"Southern Balochi\",\n\totherNames = {\"Southern Baluchi\"\
      },\n\tparent = \"bal\",\n\twikidata_item = \"Q33049\",\n}\nm[\"bal-sou\"] = m[\"bcc\"]\n\nm[\"bgp\"] = {\n\tcanonicalName = \"Eastern Balochi\",\n\totherNames = {\"Eastern Baluchi\"},\n\tparent = \"bal\",\n\twikidata_item = \"Q33049\",\n}\nm[\"bal-eas\"\
      ] = m[\"bgp\"]\n\nm[\"bgn\"] = {\n\tcanonicalName = \"Western Balochi\",\n\totherNames = {\"Western Baluchi\"},\n\tparent = \"bal\",\n\twikidata_item = \"Q33049\",\n}\nm[\"bal-wes\"] = m[\"bgn\"]\n\nm[\"bgn\"] = {\n\tcanonicalName = \"Western Balochi\"\
      ,\n\totherNames = {\"Western Baluchi\"},\n\tparent = \"bal\",\n}\n\nm[\"bsg-ban\"] = {\n\tcanonicalName = \"Bandari\",\n\tparent = \"bsg\",\n}\n\nm[\"bsg-bas\"] = {\n\tcanonicalName = \"Bashkardi\",\n\tparent = \"bsg\",\n}\n\nm[\"bsg-hor\"] = {\n\tcanonicalName\
      \ = \"Hormozi\",\n\tparent = \"bsg\",\n}\n\nm[\"bsg-min\"] = {\n\tcanonicalName = \"Minabi\",\n\tparent = \"bsg\",\n}\n\nm[\"ira-mid\"] = {\n\tcanonicalName = \"Middle Iranian\",\n\tparent = \"ira\",\n\twikidata_item = \"Q33527\",\n}\nm[\"MIr.\"] = m[\"\
      ira-mid\"]\n\nm[\"ira-old\"] = {\n\tcanonicalName = \"Old Iranian\",\n\tparent = \"ira\",\n\twikidata_item = \"Q33527\",\n}\nm[\"OIr.\"] = m[\"ira-old\"]\n\nm[\"kho-old\"] = {\n\tcanonicalName = \"Old Khotanese\",\n\tparent = \"kho\",\n}\n\nm[\"kho-lat\"\
      ] = {\n\tcanonicalName = \"Late Khotanese\",\n\tparent = \"kho-old\",\n}\n\nm[\"ps-nwe\"] = {\n\tcanonicalName = \"Northwest Pashto\",\n\tparent = \"ps\",\n}\n\nm[\"ps-cgi\"] = {\n\tcanonicalName = \"Central Ghilzay\",\n\tparent = \"ps-nwe\",\n}\n\nm[\"\
      ps-mah\"] = {\n\tcanonicalName = \"Mahsudi\",\n\tparent = \"ps-nwe\",\n}\n\nm[\"ps-nea\"] = {\n\tcanonicalName = \"Northeast Pashto\",\n\tparent = \"ps\",\n}\n\nm[\"ps-afr\"] = {\n\tcanonicalName = \"Afridi\",\n\tparent = \"ps-nea\",\n}\n\nm[\"ps-bng\"\
      ] = {\n\tcanonicalName = \"Bangash\",\n\tparent = \"ps-nea\",\n}\n\n\nm[\"ps-xat\"] = {\n\tcanonicalName = \"Khatak\",\n\tparent = \"ps-nea\",\n}\n\nm[\"ps-pes\"] = {\n\tcanonicalName = \"Peshawari\",\n\tparent = \"ps-nea\",\n}\n\nm[\"ps-sea\"] = {\n\t\
      canonicalName = \"Southeast Pashto\",\n\tparent = \"ps\",\n}\n\nm[\"ps-ban\"] = {\n\tcanonicalName = \"Bannu\",\n\tparent = \"ps-sea\",\n}\n\nm[\"ps-kak\"] = {\n\tcanonicalName = \"Kakari\",\n\tparent = \"ps-sea\",\n}\n\nm[\"ps-ser\"] = {\n\tcanonicalName\
      \ = \"Sher\",\n\tparent = \"ps-sea\",\n}\n\nm[\"ps-waz\"] = {\n\tcanonicalName = \"Waziri\",\n\tparent = \"ps-sea\",\n}\n\nm[\"ps-swe\"] = {\n\tcanonicalName = \"Southwest Pashto\",\n\tparent = \"ps\",\n}\n\nm[\"ps-kan\"] = {\n\tcanonicalName = \"Kandahari\"\
      ,\n\tparent = \"ps-swe\",\n}\n\nm[\"ps-jad\"] = {\n\tcanonicalName = \"Jadrani\",\n\tparent = \"ps\",\n}\n\nm[\"xmn\"] = {\n\tcanonicalName = \"Manichaean Middle Persian\",\n\tparent = \"pal\",\n}\n\nm[\"fa-ira\"] = {\n\tcanonicalName = \"Iranian Persian\"\
      ,\n\totherNames = {\"Modern Persian\"},\n\tparent = \"fa\",\n}\n\nm[\"fa-cls\"] = {\n\tcanonicalName = \"Classical Persian\",\n\tparent = \"fa\",\n\twikidata_item = \"Q9168\",\n}\n\nm[\"prs\"] = {\n\tcanonicalName = \"Dari\",\n\totherNames = {\"Dari Persian\"\
      , \"Eastern Persian\", \"Afghan Persian\"},\n\tparent = \"fa\",\n\twikidata_item = \"Q178440\",\n}\n\nm[\"os-dig\"] = {\n\tcanonicalName = \"Digor\",\n\totherNames = {\"Digoron\"},\n\tparent = \"os\",\n\twikidata_item = \"Q3027861\",\n}\n\nm[\"os-iro\"\
      ] = {\n\tcanonicalName = \"Iron\",\n\tparent = \"os\",\n}\n\nm[\"sog-ear\"] = {\n\tcanonicalName = \"Early Sogdian\",\n\tparent = \"sog\",\n}\n\nm[\"sog-lat\"] = {\n\tcanonicalName = \"Late Sogdian\",\n\tparent = \"sog-ear\",\n}\n\nm[\"oru-kan\"] = {\n\
      \tcanonicalName = \"Kaniguram\",\n\tparent = \"oru\",\n\twikidata_item = \"Q6363164\",\n}\n\nm[\"oru-log\"] = {\n\tcanonicalName = \"Logar\",\n\tparent = \"oru\",\n}\n\nm[\"xln\"] = {\n\tcanonicalName = \"Alanic\",\n\tparent = \"oos\",\n}\n\nm[\"rdb-rud\"\
      ] = {\n\tcanonicalName = \"Rudbari\",\n\tparent = \"rdb\",\n}\n\nm[\"rdb-jir\"] = {\n\tcanonicalName = \"Jirofti\",\n\tparent = \"rdb\",\n}\n\nm[\"rdb-kah\"] = {\n\tcanonicalName = \"Kahnuji\",\n\tparent = \"rdb\",\n}\n\n-- Southwestern Fars lects\n\n\
      m[\"fay-bur\"] = {\n\tcanonicalName = \"Burenjani\",\n\tparent = \"fay\",\n}\n\nm[\"fay-bsh\"] = {\n\tcanonicalName = \"Bushehri\",\n\tparent = \"fay\",\n}\n\nm[\"fay-dsh\"] = {\n\tcanonicalName = \"Dashtaki\",\n\tparent = \"fay\",\n}\n\nm[\"fay-dav\"\
      ] = {\n\tcanonicalName = \"Davani\",\n\tparent = \"fay\",\n\twikidata_item = \"Q5228140\",\n}\n\nm[\"fay-eze\"] = {\n\tcanonicalName = \"Emamzada Esma’ili\",\n\tparent = \"fay\",\n}\n\nm[\"fay-gav\"] = {\n\tcanonicalName = \"Gavkoshaki\",\n\tparent = \"\
      fay\",\n}\n\nm[\"fay-kho\"] = {\n\tcanonicalName = \"Khollari\",\n\tparent = \"fay\",\n}\n\nm[\"fay-kon\"] = {\n\tcanonicalName = \"Kondazi\",\n\tparent = \"fay\",\n}\n\nm[\"fay-kzo\"] = {\n\tcanonicalName = \"Old Kazeruni\",\n\tparent = \"fay\",\n}\n\n\
      m[\"fay-mas\"] = {\n\tcanonicalName = \"Masarami\",\n\tparent = \"fay\",\n}\n\nm[\"fay-pap\"] = {\n\tcanonicalName = \"Papuni\",\n\tparent = \"fay\",\n}\n\nm[\"fay-sam\"] = {\n\tcanonicalName = \"Samghani\",\n\tparent = \"fay\",\n}\n\nm[\"fay-shr\"] =\
      \ {\n\tcanonicalName = \"Shirazi\",\n\tparent = \"fay\",\n}\n\nm[\"fay-sho\"] = {\n\tcanonicalName = \"Old Shirazi\",\n\tparent = \"fay\",\n}\n\nm[\"fay-sam\"] = {\n\tcanonicalName = \"Samghani\",\n\tparent = \"fay\",\n}\n\nm[\"fay-kar\"] = {\n\tcanonicalName\
      \ = \"Khargi\",\n\tparent = \"fay\",\n}\n\nm[\"fay-sor\"] = {\n\tcanonicalName = \"Sorkhi\",\n\tparent = \"fay\",\n}\n\n-- Kermanic lects\n\nm[\"xme-ast\"] = {\n\tcanonicalName = \"Ashtiani\",\n\tparent = \"xme-ker\",\n\twikipedia_article = \"Ashtiani\
      \ language\",\n\twikidata_item = \"Q3436590\",\n}\nm[\"atn\"] = m[\"xme-ast\"]\n\nm[\"xme-ham\"] = {\n\tcanonicalName = \"Hamadani\",\n\tparent = \"xme-ker\",\n\twikidata_item = \"Q6302426\",\n}\n\nm[\"xme-xun\"] = {\n\tcanonicalName = \"Khunsari\",\n\t\
      parent = \"xme-ker\",\n\twikipedia_article = \"Khunsari language\",\n\twikidata_item = \"Q6403030\",\n}\nm[\"kfm\"] = m[\"xme-xun\"]\n\nm[\"xme-mah\"] = {\n\tcanonicalName = \"Mahallati\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-von\"] = {\n\tcanonicalName\
      \ = \"Vonishuni\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-bdr\"] = {\n\tcanonicalName = \"Badrudi\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-del\"] = {\n\tcanonicalName = \"Delijani\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-kas\"] = {\n\tcanonicalName =\
      \ \"Kashani\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-kes\"] = {\n\tcanonicalName = \"Kesehi\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-mey\"] = {\n\tcanonicalName = \"Meymehi\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-nat\"] = {\n\tcanonicalName = \"Natanzi\"\
      ,\n\tparent = \"xme-ker\",\n\twikipedia_article = \"Natanzi language\",\n\twikidata_item = \"Q6968399\",\n}\nm[\"ntz\"] = m[\"xme-nat\"]\n\nm[\"xme-abz\"] = {\n\tcanonicalName = \"Abuzeydabadi\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-aby\"] = {\n\tcanonicalName\
      \ = \"Abyanehi\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-far\"] = {\n\tcanonicalName = \"Farizandi\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-jow\"] = {\n\tcanonicalName = \"Jowshaqani\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-nas\"] = {\n\tcanonicalName\
      \ = \"Nashalji\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-qoh\"] = {\n\tcanonicalName = \"Qohrudi\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-yar\"] = {\n\tcanonicalName = \"Yarandi\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-soi\"] = {\n\tcanonicalName = \"\
      Soi\",\n\totherNames = {\"Sohi\"},\n\tparent = \"xme-ker\",\n\twikipedia_article = \"Soi language\",\n\twikidata_item = \"Q7930463\",\n}\nm[\"soj\"] = m[\"xme-soi\"]\n\nm[\"xme-tar\"] = {\n\tcanonicalName = \"Tari\",\n\tparent = \"xme-ker\",\n}\n\nm[\"\
      xme-gaz\"] = {\n\tcanonicalName = \"Gazi\",\n\tparent = \"xme-ker\",\n\twikipedia_article = \"Gazi language\",\n\twikidata_item = \"Q5529130\",\n}\nm[\"gzi\"] = m[\"xme-gaz\"]\n\nm[\"xme-sed\"] = {\n\tcanonicalName = \"Sedehi\",\n\tparent = \"xme-ker\"\
      ,\n}\n\nm[\"xme-ard\"] = {\n\tcanonicalName = \"Ardestani\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-zef\"] = {\n\tcanonicalName = \"Zefrehi\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-isf\"] = {\n\tcanonicalName = \"Isfahani\",\n\tparent = \"xme-ker\",\n\
      }\n\nm[\"xme-kaf\"] = {\n\tcanonicalName = \"Kafroni\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-vrz\"] = {\n\tcanonicalName = \"Varzenehi\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-xur\"] = {\n\tcanonicalName = \"Khuri\",\n\tparent = \"xme-ker\",\n}\n\n\
      m[\"xme-nay\"] = {\n\tcanonicalName = \"Nayini\",\n\tparent = \"xme-ker\",\n\twikipedia_article = \"Nayini language\",\n\twikidata_item = \"Q6983146\",\n}\nm[\"nyq\"] = m[\"xme-nay\"]\n\nm[\"xme-ana\"] = {\n\tcanonicalName = \"Anaraki\",\n\tparent = \"\
      xme-ker\",\n}\n\nm[\"xme-dar\"] = {\n\tcanonicalName = \"Zoroastrian Dari\",\n\totherNames = {\"Behdināni\", \"Gabri\", \"Gavrŭni\", \"Gabrōni\"},\n\tparent = \"xme-ker\",\n\twikipedia_article = \"Zoroastrian Dari language\",\n\twikidata_item = \"Q32389\"\
      ,\n}\nm[\"gbz\"] = m[\"xme-dar\"]\n\nm[\"xme-krm\"] = {\n\tcanonicalName = \"Kermani\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-yaz\"] = {\n\tcanonicalName = \"Yazdi\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-bid\"] = {\n\tcanonicalName = \"Bidhandi\",\n\
      \tparent = \"xme-ker\",\n}\n\nm[\"xme-bij\"] = {\n\tcanonicalName = \"Bijagani\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-cim\"] = {\n\tcanonicalName = \"Chimehi\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-han\"] = {\n\tcanonicalName = \"Hanjani\",\n\tparent\
      \ = \"xme-ker\",\n}\n\nm[\"xme-kom\"] = {\n\tcanonicalName = \"Komjani\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-nar\"] = {\n\tcanonicalName = \"Naraqi\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-qal\"] = {\n\tcanonicalName = \"Qalhari\",\n\tparent = \"\
      xme-ker\",\n}\n\nm[\"xme-tre\"] = {\n\tcanonicalName = \"Tarehi\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-val\"] = {\n\tcanonicalName = \"Valujerdi\",\n\tparent = \"xme-ker\",\n}\n\nm[\"xme-var\"] = {\n\tcanonicalName = \"Varani\",\n\tparent = \"xme-ker\"\
      ,\n}\n\nm[\"xme-zor\"] = {\n\tcanonicalName = \"Zori\",\n\tparent = \"xme-ker\",\n}\n\n-- Shughni dialects\n\nm[\"sgh-bro\"] = {\n\tcanonicalName = \"Bartangi-Oroshori\",\n\tparent = \"sgh\",\n}\n\nm[\"sgh-bar\"] = {\n\tcanonicalName = \"Bartangi\",\n\t\
      parent = \"sgh-bro\",\n}\n\nm[\"sgh-oro\"] = {\n\tcanonicalName = \"Oroshori\",\n\tparent = \"sgh-bro\",\n\totherNames = {\"Roshorvi\"},\n}\n\nm[\"srh-srt\"] = {\n\tcanonicalName = \"Sarikoli-Tajik\",\n\tparent = \"srh\",\n}\n\nm[\"sgh-rsx\"] = {\n\tcanonicalName\
      \ = \"Roshani-Khufi\",\n\tparent = \"sgh\",\n}\n\nm[\"sgh-xuf\"] = {\n\tcanonicalName = \"Khufi\",\n\tparent = \"sgh-rsx\",\n}\n\nm[\"sgh-ros\"] = {\n\tcanonicalName = \"Roshani\",\n\tparent = \"sgh-rsx\",\n}\n\nm[\"sgh-sgb\"] = {\n\tcanonicalName = \"\
      Shughni-Bajui\",\n\tparent = \"sgh\",\n}\n\nm[\"sgh-baj\"] = {\n\tcanonicalName = \"Bajui\",\n\tparent = \"sgh-sgb\",\n}\n\n-- Indo-Aryan varieties\n\nm[\"awa-old\"] = {\n\tcanonicalName = \"Old Awadhi\",\n\tparent = \"awa\",\n}\n\nm[\"bra-old\"] = {\n\
      \tcanonicalName = \"Old Braj\",\n\tparent = \"bra\",\n}\n\nm[\"gu-kat\"] = {\n\tcanonicalName = \"Kathiyawadi\",\n\totherNames = {\"Kathiyawadi Gujarati\", \"Kathiawadi\"},\n\tparent = \"gu\",\n}\n\nm[\"gu-lda\"] = {\n\tcanonicalName = \"Lisan ud-Dawat\
      \ Gujarati\",\n\totherNames = {\"Lisan ud-Dawat\", \"LDA\"},\n\tparent = \"gu\",\n}\n\nm[\"hi-mum\"] = {\n\tcanonicalName = \"Bombay Hindi\",\n\totherNames = {\"Mumbai Hindi\", \"Bambaiyya Hindi\"},\n\tparent = \"hi\",\n\twikidata_item = \"Q3543151\",\n\
      }\n\nm[\"hi-mid\"] = {\n\tcanonicalName = \"Middle Hindi\",\n\tparent = \"hi\",\n}\n\nm[\"pa-old\"] = {\n\tcanonicalName = \"Old Punjabi\",\n\tparent = \"pa\",\n}\n\nm[\"bn-old\"] = {\n\tcanonicalName = \"Old Bengali\",\n\tparent = \"bn\",\n}\n\nm[\"bn-mid\"\
      ] = {\n\tcanonicalName = \"Middle Bengali\",\n\tparent = \"bn\",\n}\n\nm[\"or-old\"] = {\n\tcanonicalName = \"Old Oriya\",\n\tparent = \"or\",\n}\n\nm[\"or-mid\"] = {\n\tcanonicalName = \"Middle Oriya\",\n\tparent = \"or\",\n}\n\nm[\"sa-bhs\"] = {\n\t\
      canonicalName = \"Buddhist Hybrid Sanskrit\",\n\tparent = \"sa\",\n\twikidata_item = \"Q248758\",\n}\n\nm[\"sa-cls\"] = {\n\tcanonicalName = \"Classical Sanskrit\",\n\tparent = \"sa\",\n\twikidata_item = \"Q11059\",\n}\n\nm[\"sa-neo\"] = {\n\tcanonicalName\
      \ = \"New Sanskrit\",\n\tparent = \"sa\",\n\twikidata_item = \"Q11059\",\n}\n\nm[\"sa-ved\"] = {\n\tcanonicalName = \"Vedic Sanskrit\",\n\tparent = \"sa\",\n\twikidata_item = \"Q36858\",\n}\n\nm[\"si-med\"] = {\n\tcanonicalName = \"Medieval Sinhalese\"\
      ,\n\totherNames = {\"Medieval Sinhala\"},\n\tparent = \"si\",\n}\n\nm[\"kok-mid\"] = {\n\tcanonicalName = \"Middle Konkani\",\n\totherNames = {\"Medieval Konkani\"},\n\tparent = \"kok\",\n}\n\nm[\"kok-old\"] = {\n\tcanonicalName = \"Old Konkani\",\n\t\
      otherNames = {\"Early Konkani\"},\n\tparent = \"kok\",\n}\n\n\n-- Indian subcontinent languages\n\n\n-- Dhivehi varieties\n\nm[\"mlk-dv\"] = {\n\tcanonicalName = \"Mulaku Dhivehi\",\n\totherNames = {\"Mulaku Divehi\", \"Mulaku Bas\"},\n\tparent = \"dv\"\
      ,\n}\n\nm[\"hvd-dv\"] = {\n\tcanonicalName = \"Huvadhu Dhivehi\",\n\totherNames = {\"Huvadhu Divehi\", \"Huvadhu Bas\"},\n\tparent = \"dv\",\n}\n\nm[\"add-dv\"] = {\n\tcanonicalName = \"Addu Dhivehi\",\n\totherNames = {\"Addu Divehi\", \"Addu Bas\"},\n\
      \tparent = \"dv\",\n}\n\n-- Dravidian varieties\n\nm[\"ta-mid\"] = {\n\tcanonicalName = \"Middle Tamil\",\n\tparent = \"ta\",\n\twikidata_item = \"Q20987434\",\n}\n\n-- Prakrits\n\nm[\"psc-prk\"] = {\n\tcanonicalName = \"Paisaci\",\n\totherNames = {\"\
      Paisaci Prakrit\"},\n\tparent = \"sa\",\n\twikidata_item = \"Q2995607\",\n}\n\nm[\"prk-avt\"] = {\n\tcanonicalName = \"Avanti\",\n\totherNames = {\"Avanti Prakrit\"},\n\tparent = \"sa\",\n}\n\nm[\"prc-prk\"] = {\n\tcanonicalName = \"Pracya\",\n\totherNames\
      \ = {\"Pracya Prakrit\"},\n\tparent = \"sa\",\n}\n\nm[\"bhl-prk\"] = {\n\tcanonicalName = \"Bahliki\",\n\totherNames = {\"Bahliki Prakrit\"},\n\tparent = \"sa\",\n}\n\nm[\"dks-prk\"] = {\n\tcanonicalName = \"Daksinatya\",\n\totherNames = {\"Daksinatya\
      \ Prakrit\"},\n\tparent = \"sa\",\n}\n\nm[\"skr-prk\"] = {\n\tcanonicalName = \"Sakari\",\n\totherNames = {\"Sakari Prakrit\"},\n\tparent = \"sa\",\n}\n\nm[\"cnd-prk\"] = {\n\tcanonicalName = \"Candali\",\n\totherNames = {\"Candali Prakrit\"},\n\tparent\
      \ = \"sa\",\n}\n\nm[\"sbr-prk\"] = {\n\tcanonicalName = \"Sabari\",\n\totherNames = {\"Sabari Prakrit\"},\n\tparent = \"sa\",\n}\n\nm[\"abh-prk\"] = {\n\tcanonicalName = \"Abhiri\",\n\totherNames = {\"Abhiri Prakrit\"},\n\tparent = \"sa\",\n}\n\nm[\"drm-prk\"\
      ] = {\n\tcanonicalName = \"Dramili\",\n\totherNames = {\"Dramili Prakrit\"},\n\tparent = \"sa\",\n}\n\nm[\"odr-prk\"] = {\n\tcanonicalName = \"Odri\",\n\totherNames = {\"Odri Prakrit\"},\n\tparent = \"sa\",\n}\n\n\n-- Italian, Latin and other Italic varieties\n\
      \nm[\"it-oit\"] = {\n\tcanonicalName = \"Old Italian\",\n\tparent = \"it\",\n\twikidata_item = \"Q652\",\n}\nm[\"roa-oit\"] = m[\"it-oit\"]\n\n-- Latin varieties by period\n\nm[\"la-lat\"] = {\n\tcanonicalName = \"Late Latin\",\n\tparent = \"la\",\n\t\
      wikidata_item = \"Q1503113\",\n}\nm[\"Late Latin\"] = m[\"la-lat\"]\nm[\"LL.\"] = m[\"la-lat\"]\nm[\"LL\"] = m[\"la-lat\"]\n\nm[\"la-vul\"] = {\n\tcanonicalName = \"Vulgar Latin\",\n\tparent = \"la\",\n\twikidata_item = \"Q37560\",\n}\nm[\"Vulgar Latin\"\
      ] = m[\"la-vul\"]\nm[\"VL.\"] = m[\"la-vul\"]\n\nm[\"la-med\"] = {\n\tcanonicalName = \"Medieval Latin\",\n\tparent = \"la\",\n\twikidata_item = \"Q1163234\",\n}\nm[\"Medieval Latin\"] = m[\"la-med\"]\nm[\"ML.\"] = m[\"la-med\"]\nm[\"ML\"] = m[\"la-med\"\
      ]\n\nm[\"la-ecc\"] = {\n\tcanonicalName = \"Ecclesiastical Latin\",\n\totherNames = {\"Church Latin\"},\n\tparent = \"la\",\n\twikidata_item = \"Q1247932\",\n}\nm[\"Ecclesiastical Latin\"] = m[\"la-ecc\"]\nm[\"EL.\"] = m[\"la-ecc\"]\n\nm[\"la-ren\"] =\
      \ {\n\tcanonicalName = \"Renaissance Latin\",\n\tparent = \"la\",\n\twikidata_item = \"Q499083\",\n}\nm[\"Renaissance Latin\"] = m[\"la-ren\"]\nm[\"RL.\"] = m[\"la-ren\"]\n\nm[\"la-new\"] = {\n\tcanonicalName = \"New Latin\",\n\totherNames = {\"Modern\
      \ Latin\"},\n\tparent = \"la\",\n\twikidata_item = \"Q1248221\",\n}\nm[\"New Latin\"] = m[\"la-new\"]\nm[\"NL.\"] = m[\"la-new\"]\n\n-- other Italic lects\n\nm[\"osc-luc\"] = {\n\tcanonicalName = \"Lucanian\",\n\tparent = \"osc\",\n}\n\nm[\"osc-sam\"]\
      \ = {\n\tcanonicalName = \"Samnite\",\n\tparent = \"osc\",\n}\n\nm[\"xum-her\"] = {\n\tcanonicalName = \"Hernician\",\n\tparent = \"xum\",\n}\n\n\n-- Mongolic lects\n\nm[\"mn-kha\"] = {\n\tcanonicalName = \"Khalkha Mongolian\",\n\tparent = \"mn\",\n\t\
      wikidata_item = \"Q6399808\",\n}\n\nm[\"mn-ord\"] = {\n\tcanonicalName = \"Ordos Mongolian\",\n\tparent = \"mn\",\n\twikidata_item = \"Q716904\",\n}\n\nm[\"mn-cha\"] = {\n\tcanonicalName = \"Chakhar Mongolian\",\n\tparent = \"mn\",\n\twikidata_item = \"\
      Q907425\",\n}\n\nm[\"mn-khr\"] = {\n\tcanonicalName = \"Khorchin Mongolian\",\n\tparent = \"mn\",\n\twikidata_item = \"Q3196210\",\n}\n\nm[\"mjg-huz\"] = {\n\tcanonicalName = \"Mongghul\",\n\totherNames = {\"Huzhu Monguor\"},\n\tparent = \"mjg\",\n\twikidata_item\
      \ = \"Q34214\",\n}\n\nm[\"mjg-min\"] = {\n\tcanonicalName = \"Mangghuer\",\n\totherNames = {\"Minhe Monguor\"},\n\tparent = \"mjg\",\n\twikidata_item = \"Q34214\",\n}\n\n\n-- Phillipine varieties\n\nm[\"tl-old\"] = {\n\tcanonicalName = \"Old Tagalog\"\
      ,\n\tparent = \"tl\",\n\twikidata_item = \"Q12967437\",\n}\n\nm[\"tl-cls\"] = {\n\tcanonicalName = \"Classical Tagalog\",\n\tparent = \"tl\",\n}\n\n\n-- Pre-Roman substrates\n\nm[\"qfa-sub-ibe\"] = {\n\tcanonicalName = \"a pre-Roman substrate of Iberia\"\
      ,\n\tparent = \"qfa-sub\",\n\twikidata_item = \"Q530799\",\n}\n\nm[\"qfa-sub-bal\"] = {\n\tcanonicalName = \"a pre-Roman substrate of the Balkans\",\n\tparent = \"qfa-sub\",\n}\n\n\n-- Slavic varieties\n\nm[\"zle-oru\"] = {\n\tcanonicalName = \"Old Russian\"\
      ,\n\tparent = \"orv\",\n\twikidata_item = \"Q35228\",\n}\n\nm[\"zle-obe\"] = {\n\tcanonicalName = \"Old Belarusian\",\n\tparent = \"orv\",\n\twikidata_item = \"Q13211\",\n}\n\nm[\"zle-ouk\"] = {\n\tcanonicalName = \"Old Ukrainian\",\n\tparent = \"orv\"\
      ,\n\twikidata_item = \"Q13211\",\n}\n\n\n-- Turkic lects\n\nm[\"trk-cmn\"] = {\n\tcanonicalName = \"Common Turkic\",\n\tparent = \"trk-pro\",\n\twikidata_item = \"Q1126028\",\n}\n\nm[\"trk-ogz-pro\"] = {\n\tcanonicalName = \"Proto-Oghuz\",\n\totherNames\
      \ = {\"Southwestern Common Turkic\"},\n\tparent = \"trk-pro\",\n\tancestors = {\"trk-pro\"},\n\twikidata_item = \"Q494600\",\n}\n\nm[\"otk-kir\"] = {\n\tcanonicalName = \"Old Kirghiz\",\n\tparent = \"otk\",\n\twikidata_item = \"Q83142\",\n}\n\nm[\"klj-arg\"\
      ] = {\n\tcanonicalName = \"Arghu\",\n\tparent = \"klj\",\n\twikidata_item = \"Q33455\",\n}\n\n-- Other lects\n\nm[\"alv-kro\"] = {\n\tcanonicalName = \"Kromanti\",\n\tparent = \"crp\",\n\twikidata_item = \"Q1093206\",\n}\n\nm[\"bat-pro\"] = {\n\tcanonicalName\
      \ = \"Proto-Baltic\",\n\tparent = \"ine-bsl-pro\",\n\twikidata_item = \"Q1703347\",\n}\n\nm[\"es-lun\"] = {\n\tcanonicalName = \"Lunfardo\",\n\tparent = \"es\",\n\twikidata_item = \"Q1401612\",\n}\nm[\"Lunfardo\"] = m[\"es-lun\"]\n\nm[\"fiu-pro\"] = {\n\
      \tcanonicalName = \"Proto-Finno-Ugric\",\n\tparent = \"urj-pro\",\n\twikidata_item = \"Q79890\",\n}\n\nm[\"gem-sue\"] = {\n\tcanonicalName = \"Suevic\",\n\totherNames = {\"Suebian\"},\n\tparent = \"gmw\",\n\twikidata_item = \"Q155085\",\n}\n\nm[\"mkh-okm-A\"\
      ] = {\n\tcanonicalName = \"Angkorian Old Khmer\",\n\tparent = \"mkh-okm\",\n\twikipedia_article = \"Khmer language#Historical periods\",\n\twikidata_item = \"Q9205\",\n}\n\nm[\"mkh-okm-P\"] = {\n\tcanonicalName = \"Pre-Angkorian Old Khmer\",\n\tparent\
      \ = \"mkh-okm\",\n\twikipedia_article = \"Khmer language#Historical periods\",\n\twikidata_item = \"Q9205\",\n}\n\nm[\"mul-tax\"] = {\n\tcanonicalName = \"taxonomic name\",\n\tparent= \"mul\",\n}\nm[\"Tax.\"] = m[\"mul-tax\"]\n\nm[\"prv\"] = {\n\tcanonicalName\
      \ = \"Provençal\",\n\tparent = \"oc\",\n\twikidata_item = \"Q241243\",\n}\n\nm[\"qfa-pyg\"] = {\n\tcanonicalName = \"a substrate language originally spoken by the Pygmies\",\n\tparent = \"qfa-sub\",\n\twikipedia_article = \"Classification of Pygmy languages#Original\
      \ Pygmy language(s)\",\n}\nm[\"pygmy\"] = m[\"qfa-pyg\"]\n\nm[\"tai-shz\"] = {\n\tcanonicalName = \"Shangsi Zhuang\",\n\tparent = \"za\",\n\twikidata_item = \"Q13216\",\n}\n\nm[\"und-idn\"] = {\n\tcanonicalName = \"Idiom Neutral\",\n\tparent = \"und\"\
      , -- or \"vo\"\n\twikipedia_article = \"Idiom Neutral\",\n\twikidata_item = \"Q35847\",\n}\n\nm[\"und-tdl\"] = {\n\tcanonicalName = \"Turduli\",\n\tparent = \"und\",\n\twikipedia_article = \"Turduli\",\n}\n\nm[\"und-tdt\"] = {\n\tcanonicalName = \"Turdetani\"\
      ,\n\tparent = \"und\",\n\twikipedia_article = \"Turdetani\",\n}\n\nm[\"und-xbi\"] = {\n\tcanonicalName = \"Xianbei\",\n\tparent = \"und\",\n\twikipedia_article = \"Xianbei\",\n}\n\nm[\"und-xnu\"] = {\n\tcanonicalName = \"Xiongnu\",\n\tparent = \"und\"\
      ,\n\twikipedia_article = \"Xiongnu\",\n}\n\nm[\"urj-fpr-pro\"] = {\n\tcanonicalName = \"Proto-Finno-Permic\",\n\tparent = \"urj-pro\",\n}\n\nm[\"woy\"] = {\n\tcanonicalName = \"Weyto\",\n\tparent = \"und\",\n\twikidata_item = \"Q3915918\",\n}\n\n\nreturn\
      \ m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:32.669Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Ader&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54150 t=1555362452569428
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1347.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 670318700, 505223493, 701075710
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5021749" pageid="5021749" ns="10" title="Template:der"><revisions><rev user="Rua" timestamp="2015-10-19T13:33:41Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Redirected page to [[Template:derived]]" xml:space="preserve">#REDIRECT [[Template:derived]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:32.837Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aderived&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44215 t=1555362452746408
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:32 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1223.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 926389948, 819577800, 694698317
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="5021747" pageid="5021747" ns="10" title="Template:derived"><revisions><rev user="Daniel Carrero" timestamp="2016-06-30T12:20:18Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:etymology/templates|derived}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:33.035Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Acompound&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53055 t=1555362452936908
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:33 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 512820579, 243260255, 702025991
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="1062383" pageid="1062383" ns="10" title="Template:compound"><revisions><rev user="Ungoliant MMDCCLXIV" timestamp="2015-11-21T23:33:14Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:compound/templates|compound}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:33.243Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Acompound%2Ftemplates&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=60844 t=1555362453122076
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:33 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1287.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 915168481, 723445567, 696528487
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4534570\" pageid=\"4534570\" ns=\"828\" title=\"Module:compound/templates\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-19T19:54:13Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"all uses of lang= in remaining templates in [[Module:compound/templates]] converted\" xml:space=\"preserve\">local export = {}\n\nlocal m_compound = require(\"Module:compound\")\nlocal\
      \ m_languages = require(\"Module:languages\")\nlocal m_debug = require(\"Module:debug\")\n\nlocal rsplit = mw.text.split\n\n\nlocal function if_not_empty(val)\n\tif val == \"\" then\n\t\treturn nil\n\telse\n\t\treturn val\n\tend\nend\n\n\nlocal function\
      \ to_boolean(val)\n\tif not val or val == \"\" then\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\n\n\nlocal function fetch_lang(args, allow_compat)\n\tlocal compat = true\n\n\tif not allow_compat and args[\"lang\"] then\n\t\terror('The |lang=\
      \ parameter is not used by this template. Place the language code in parameter 1 instead.')\n\tend\n\t\n\tlocal lang = allow_compat and if_not_empty(args[\"lang\"]) or nil\n\tif not lang then\n\t\tcompat = false\n\t\tlang = if_not_empty(args[1])\n\tend\n\
      \t\n\tif not lang and mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\tlang = \"und\"\n\tend\n\t\n\tlang = lang and m_languages.getByCode(lang) or m_languages.err(lang, compat and \"lang\" or 1)\n\treturn lang, compat\nend\n\n\t\nlocal function\
      \ fetch_script(sc)\n\tsc = if_not_empty(sc)\n\tif sc then\n\t\treturn require(\"Module:scripts\").getByCode(sc) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")\n\telse\n\t\treturn nil\n\tend\nend\n\n\nlocal function parse_args(args,\
      \ allow_compat, hack_params)\n\tlocal compat = args[\"lang\"]\n\tif compat and not allow_compat then\n\t\terror('The |lang= parameter is not used by this template. Place the language code in parameter 1 instead.')\n\tend\n\n\tlocal params = {\n\t\t[compat\
      \ and \"lang\" or 1] = {required = true, default = \"und\"},\n\t\t[compat and 1 or 2] = {list = true, allow_holes = true},\n\t\t\n\t\t[\"t\"] = {list = true, allow_holes = true, require_index = true},\n\t\t[\"gloss\"] = {list = true, allow_holes = true,\
      \ require_index = true, alias_of = \"t\"},\n\t\t[\"tr\"] = {list = true, allow_holes = true, require_index = true},\n\t\t[\"ts\"] = {list = true, allow_holes = true, require_index = true},\n\t\t[\"g\"] = {list = true, allow_holes = true, require_index\
      \ = true},\n\t\t[\"id\"] = {list = true, allow_holes = true, require_index = true},\n\t\t[\"alt\"] = {list = true, allow_holes = true, require_index = true},\n\t\t[\"q\"] = {list = true, allow_holes = true, require_index = true},\n\t\t[\"lit\"] = {list\
      \ = true, allow_holes = true, require_index = true},\n\t\t[\"pos\"] = {},\n\t\t-- Note, pos1=, pos2=, ... are different from pos=\n\t\t[\"partpos\"] = {list = \"pos\", allow_holes = true, require_index = true},\n\t\t-- Note, lang1=, lang2=, ... are different\
      \ from lang=; the former apply to\n\t\t-- individual arguments, while the latter applies to all arguments\n\t\t[\"partlang\"] = {list = \"lang\", allow_holes = true, require_index = true},\n\t\t[\"sc\"] = {},\n\t\t-- Note, sc1=, sc2=, ... are different\
      \ from sc=; the former apply to\n\t\t-- individual arguments when lang1=, lang2=, ... is specified, while\n\t\t-- the latter applies to all arguments where langN=... isn't specified\n\t\t[\"partsc\"] = {list = \"sc\", allow_holes = true, require_index\
      \ = true},\n\t\t[\"pos\"] = {},\n\t\t[\"sort\"] = {},\n\t\t[\"nocat\"] = {type = \"boolean\"},\n\t}\n\n\tif hack_params then\n\t\thack_params(params)\n\tend\n\n\targs = require(\"Module:parameters\").process(args, params)\n\treturn args, compat and args[1]\
      \ or args[2], fetch_lang(args, allow_compat), fetch_script(args[\"sc\"])\nend\n\n\nlocal function get_parsed_part(template, args, terms, i)\n\tlocal term = terms[i]\n\tlocal alt = args[\"alt\"][i]\n\tlocal id = args[\"id\"][i]\n\tlocal lang = args[\"partlang\"\
      ][i]\n\tlocal sc = fetch_script(args[\"partsc\"][i])\n\t\n\tlocal tr = args[\"tr\"][i]\n\tlocal ts = args[\"ts\"][i]\n\tlocal gloss = args[\"t\"][i]\n\tlocal pos = args[\"partpos\"][i]\n\tlocal lit = args[\"lit\"][i]\n\tlocal q = args[\"q\"][i]\n\tlocal\
      \ g = args[\"g\"][i]\n\n\tif lang then\n\t\tlang =\n\t\t\tm_languages.getByCode(lang) or\n\t\t\trequire(\"Module:etymology languages\").getByCode(lang) or\n\t\t\tm_languages.err(lang, \"lang\" .. i)\n\tend\n\t\n\tif not (term or alt or tr or ts) then\n\
      \t\trequire(\"Module:debug\").track(template .. \"/no term or alt or tr\")\n\t\treturn nil\n\telse\n\t\treturn { term = term, alt = alt, id = id, lang = lang, sc = sc, tr = tr,\n\t\t\tts = ts, gloss = gloss, pos = pos, lit = lit, q = q,\n\t\t\tgenders\
      \ = g and rsplit(g, \",\") or {}\n\t\t}\n\tend\nend\n\n\nlocal function get_parsed_parts(template, args, terms, start_index)\n\tlocal parts = {}\n\tstart_index = start_index or 1\n\n\t-- Find the maximum index among any of the list parameters.\n\tlocal\
      \ maxmaxindex = 0\n\tfor k, v in pairs(args) do\n\t\tif type(v) == \"table\" and v.maxindex and v.maxindex &gt; maxmaxindex then\n\t\t\tmaxmaxindex = v.maxindex\n\t\tend\n\tend\n\n\tfor index = start_index, maxmaxindex do\n\t\tlocal part = get_parsed_part(template,\
      \ args, terms, index)\n\t\tparts[index - start_index + 1] = part\n\tend\n\t\n\treturn parts\nend\n\n\nfunction export.affix(frame)\n\tlocal args, terms, lang, sc = parse_args(frame:getParent().args)\n\n\tlocal parts = get_parsed_parts(\"affix\", args,\
      \ terms)\n\t\n\t-- There must be at least one part to display. If there are gaps, a term\n\t-- request will be shown.\n\tif not next(parts) then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tparts = { {term = \"prefix-\"}, {term\
      \ = \"base\"}, {term = \"-suffix\"} }\n\t\telse\n\t\t\terror(\"You must provide at least one part.\")\n\t\tend\n\tend\n\t\n\treturn m_compound.show_affixes(lang, sc, parts, args[\"pos\"], args[\"sort\"], args[\"nocat\"])\nend\n\n\nfunction export.compound(frame)\n\
      \tlocal args, terms, lang, sc = parse_args(frame:getParent().args)\n\n\tlocal parts = get_parsed_parts(\"compound\", args, terms)\n\t\n\t-- There must be at least one part to display. If there are gaps, a term\n\t-- request will be shown.\n\tif not next(parts)\
      \ then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tparts = { {term = \"first\"}, {term = \"second\"} }\n\t\telse\n\t\t\terror(\"You must provide at least one part of a compound.\")\n\t\tend\n\tend\n\t\n\treturn m_compound.show_compound(lang,\
      \ sc, parts, args[\"pos\"], args[\"sort\"], args[\"nocat\"])\nend\n\n\nfunction export.compound_like(frame)\n\tlocal function hack_params(params)\n\t\tparams[\"pos\"] = nil\n\t\tparams[\"nocap\"] = {type = \"boolean\"}\n\t\tparams[\"notext\"] = {type =\
      \ \"boolean\"}\n\tend\n\n\tlocal args, terms, lang, sc = parse_args(frame:getParent().args, nil, hack_params)\n\n\tlocal template = frame.args[\"template\"]\n\tlocal nocat = args[\"nocat\"]\n\tlocal notext = args[\"notext\"]\n\tlocal text = not notext\
      \ and frame.args[\"text\"]\n\tlocal oftext = not notext and (frame.args[\"oftext\"] or text and \"of\")\n\tlocal cat = not nocat and frame.args[\"cat\"]\n\n\tlocal parts = get_parsed_parts(template, args, terms)\n\n\tif not next(parts) then\n\t\tif mw.title.getCurrentTitle().nsText\
      \ == \"Template\" then\n\t\t\tparts = { {term = \"first\"}, {term = \"second\"} }\n\t\tend\n\tend\n\t\n\treturn m_compound.show_compound_like(lang, sc, parts, args[\"sort\"], text, oftext, cat)\nend\n\n\nfunction export.interfix_compound(frame)\n\tlocal\
      \ args, terms, lang, sc = parse_args(frame:getParent().args)\n\n\tlocal parts = get_parsed_parts(\"interfix-compound\", args, terms)\n\tlocal base1 = parts[1]\n\tlocal interfix = parts[2]\n\tlocal base2 = parts[3]\n\t\n\t-- Just to make sure someone didn't\
      \ use the template in a silly way\n\tif not (base1 and interfix and base2) then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tbase1 = {term = \"base1\"}\n\t\t\tinterfix = {term = \"interfix\"}\n\t\t\tbase2 = {term = \"base2\"}\n\
      \t\telse\n\t\t\terror(\"You must provide a base term, an interfix and a second base term.\")\n\t\tend\n\tend\n\t\n\treturn m_compound.show_interfix_compound(lang, sc, base1, interfix, base2, args[\"pos\"], args[\"sort\"], args[\"nocat\"])\nend\n\n\nfunction\
      \ export.circumfix(frame)\n\tlocal args, terms, lang, sc = parse_args(frame:getParent().args)\n\n\tlocal parts = get_parsed_parts(\"circumfix\", args, terms)\n\tlocal prefix = parts[1]\n\tlocal base = parts[2]\n\tlocal suffix = parts[3]\n\t\n\t-- Just\
      \ to make sure someone didn't use the template in a silly way\n\tif not (prefix and base and suffix) then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tprefix = {term = \"circumfix\", alt = \"prefix\"}\n\t\t\tbase = {term = \"base\"\
      }\n\t\t\tsuffix = {term = \"circumfix\", alt = \"suffix\"}\n\t\telse\n\t\t\terror(\"You must specify a prefix part, a base term and a suffix part.\")\n\t\tend\n\tend\n\t\t\n\treturn m_compound.show_circumfix(lang, sc, prefix, base, suffix, args[\"pos\"\
      ], args[\"sort\"], args[\"nocat\"])\nend\n\n\nfunction export.confix(frame)\n\tlocal args, terms, lang, sc = parse_args(frame:getParent().args)\n\n\tlocal parts = get_parsed_parts(\"confix\", args, terms)\n\tlocal prefix = parts[1]\n\tlocal base = #parts\
      \ &gt;= 3 and parts[2] or nil\n\tlocal suffix = #parts &gt;= 3 and parts[3] or parts[2]\n\t\n\t-- Just to make sure someone didn't use the template in a silly way\n\tif not (prefix and suffix) then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\"\
      \ then\n\t\t\tprefix = {term = \"prefix\"}\n\t\t\tsuffix = {term = \"suffix\"}\n\t\telse\n\t\t\terror(\"You must specify a prefix part, an optional base term and a suffix part.\")\n\t\tend\n\tend\n\t\t\n\treturn m_compound.show_confix(lang, sc, prefix,\
      \ base, suffix, args[\"pos\"], args[\"sort\"], args[\"nocat\"])\nend\n\n\nfunction export.infix(frame)\n\tlocal args, terms, lang, sc = parse_args(frame:getParent().args)\n\n\tlocal parts = get_parsed_parts(\"infix\", args, terms)\n\tlocal base = parts[1]\n\
      \tlocal infix = parts[2]\n\t\n\t-- Just to make sure someone didn't use the template in a silly way\n\tif not (base and infix) then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tbase = {term = \"base\"}\n\t\t\tinfix = {term = \"\
      infix\"}\n\t\telse\n\t\t\terror(\"You must provide a base term and an infix.\")\n\t\tend\n\tend\n\t\n\treturn m_compound.show_infix(lang, sc, base, infix, args[\"pos\"], args[\"sort\"], args[\"nocat\"])\nend\n\n\nfunction export.prefix(frame)\n\tlocal\
      \ args, terms, lang, sc = parse_args(frame:getParent().args)\n\n\tlocal prefixes = get_parsed_parts(\"prefix\", args, terms)\n\tlocal base = nil\n\t\n\tif #prefixes &gt;= 2 then\n\t\tbase = prefixes[#prefixes]\n\t\tprefixes[#prefixes] = nil\n\tend\n\n\t\
      -- Just to make sure someone didn't use the template in a silly way\n\tif #prefixes == 0 then\n\t\tif mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\t\tbase = {term = \"base\"}\n\t\t\tprefixes = { {term = \"prefix\"} }\n\t\telse\n\t\t\terror(\"\
      You must provide at least one prefix.\")\n\t\tend\n\tend\n\t\n\treturn m_compound.show_prefixes(lang, sc, prefixes, base, args[\"pos\"], args[\"sort\"], args[\"nocat\"])\nend\n\n\nfunction export.suffix(frame)\n\tlocal args, terms, lang, sc = parse_args(frame:getParent().args)\n\
      \n\tlocal base = get_parsed_part(\"suffix\", args, terms, 1)\n\tlocal suffixes = get_parsed_parts(\"suffix\", args, terms, 2)\n\t\n\t-- Just to make sure someone didn't use the template in a silly way\n\tif #suffixes == 0 then\n\t\tif mw.title.getCurrentTitle().nsText\
      \ == \"Template\" then\n\t\t\tbase = {term = \"base\"}\n\t\t\tsuffixes = { {term = \"suffix\"} }\n\t\telse\n\t\t\terror(\"You must provide at least one suffix.\")\n\t\tend\n\tend\n\t\n\treturn m_compound.show_suffixes(lang, sc, base, suffixes, args[\"\
      pos\"], args[\"sort\"], args[\"nocat\"])\nend\n\n\nfunction export.transfix(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"base\"},\n\t\t[3] = {required = true, default = \"transfix\"\
      },\n\t\t\n\t\t[\"nocat\"] = {type = \"boolean\"},\n\t\t[\"pos\"] = {},\n\t\t[\"sc\"] = {},\n\t\t[\"sort\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = m_languages.getByCode(args[1])\
      \ or m_languages.err(lang, 1)\n\tlocal sc = fetch_script(args[\"sc\"])\n\n\tlocal base = {term = args[2]}\n\tlocal transfix = {term = args[3]}\n\t\n\treturn m_compound.show_transfix(lang, sc, base, transfix, args[\"pos\"], args[\"sort\"], args[\"nocat\"\
      ])\nend\n\n\nfunction export.derivsee(frame)\n\tlocal args = frame:getParent().args\n\t\n\tlocal derivtype = frame.args[\"derivtype\"]\n\tlocal mode = if_not_empty(frame.args[\"mode\"])\n\tlocal lang\n\tlocal term\n\t\n\tif derivtype == \"PIE root\" then\n\
      \t\tlang = m_languages.getByCode(\"ine-pro\")\n\t\tterm = if_not_empty(args[1] or args[\"head\"])\n\n\t\tif term then\n\t\t\tterm = \"*\" .. term .. \"-\"\n\t\tend\n\telse\n\t\tlang = fetch_lang(args)\n\t\tterm = if_not_empty(args[2] or args[\"head\"])\n\
      \tend\n\t\n\tlocal id = if_not_empty(args[\"id\"])\n\tlocal sc = fetch_script(args[\"sc\"])\n\tlocal pos = if_not_empty(args[\"pos\"])\n\n\tpos = pos or \"word\"\n\t\n\t-- Pluralize the part of speech name\n\tif pos:find(\"[sx]$\") then\n\t\tpos = pos\
      \ .. \"es\"\n\telse\n\t\tpos = pos .. \"s\"\n\tend\n\t\n\tif not term then\n\t\tif lang:getType() == \"reconstructed\" then\n\t\t\tterm = \"*\" .. mw.title.getCurrentTitle().subpageText\n\t\telseif lang:getType() == \"appendix-constructed\" then\n\t\t\t\
      term = mw.title.getCurrentTitle().subpageText\n\t\telseif mw.title.getCurrentTitle().nsText == \"Reconstruction\" then\n\t\t\tterm = \"*\" .. mw.title.getCurrentTitle().subpageText\n\t\telse\n\t\t\tterm = mw.title.getCurrentTitle().subpageText\n\t\tend\n\
      \tend\n\t\n\tlocal category = nil\n\t\n\tif derivtype == \"PIE root\" then\n\t\treturn frame:callParserFunction{\n\t\t\tname = \"#categorytree\",\n\t\t\targs = {\n\t\t\t\t\"Terms derived from the PIE root \" .. term .. (id and \" (\" .. id .. \")\" or\
      \ \"\"),\n\t\t\t\tdepth = 0,\n\t\t\t\tclass = \"\\\"derivedterms\\\"\",\n\t\t\t\tmode = mode,\n\t\t\t\t}\n\t\t\t}\n\tend\n\t\n\tif derivtype == \"compound\" then\n\t\tcategory = lang:getCanonicalName() .. \" compounds with \" .. term\n\telse\n\t\tcategory\
      \ = lang:getCanonicalName() .. \" \" .. pos .. \" \" .. derivtype .. \"ed with \" .. term .. (id and \" (\" .. id .. \")\" or \"\")\n\tend\n\t\n\treturn frame:callParserFunction{\n\t\tname = \"#categorytree\",\n\t\targs = {\n\t\t\tcategory,\n\t\t\tdepth\
      \ = 0,\n\t\t\tclass = \"\\\"derivedterms\" .. (sc and \" \" .. sc:getCode() or \"\") .. \"\\\"\",\n\t\t\tnamespaces = \"-\" .. (mw.title.getCurrentTitle().nsText == \"Reconstruction\" and \" Reconstruction\" or \"\"),\n\t\t\t}\n\t\t}\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:33.448Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Acompound&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=50495 t=1555362453322259
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:33 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1287.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 590908859, 262153779, 703563125
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4105621\" pageid=\"4105621\" ns=\"828\" title=\"Module:compound\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-04-13T02:09:52Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"fix error with etymology languages\" xml:space=\"preserve\">local m_links = require(\"Module:links\")\nlocal m_utilities = require(\"Module:utilities\")\n\nlocal export = {}\n\nlocal u\
      \ = mw.ustring.char\nlocal rsub = mw.ustring.gsub\nlocal usub = mw.ustring.sub\nlocal ulen = mw.ustring.len\nlocal rfind = mw.ustring.find\nlocal rmatch = mw.ustring.match\n\n-- ABOUT TEMPLATE AND DISPLAY HYPHENS:\n--\n-- The \"template hyphen\" is the\
      \ per-script hyphen character that is used in\n-- template calls to indicate that a term is an affix. This is always a single\n-- Unicode char, but there may be multiple possible hyphens for a given script.\n-- Normally this is just the regular hyphen\
      \ character \"-\", but for some\n-- non-Latin-script languages (currently only right-to-left languages), it\n-- is different.\n--\n-- The \"display hyphen\" is the string (which might be an empty string) that\n-- is added onto a term as displayed (and\
      \ linked), to indicate that a term\n-- is an affix. Currently this is always either the same as the template\n-- hyphen or an empty string, but the code below is written generally enough\n-- to handle arbitrary display hyphens. Specifically:\n--\n-- (1)\
      \ For East Asian languages, the display hyphen is always blank.\n-- (2) For Arabic-script languages, either tatweel (ـ) or ZWNJ (zero-width\n--     non-joiner) are allowed as template hyphens, where ZWNJ is supported\n--     primarily for Farsi, because\
      \ some suffixes have non-joining behavior.\n--     The display hyphen corresponding to tatweel is also tatweel, but the\n--     display hyphen corresponding to ZWNJ is blank (tatweel is also the\n--     default display hyphen, for calls to {{prefix}}/{{suffix}}/etc.\
      \ that\n--     don't include an explicit hyphen).\n\n-- List of all Arabic scripts.\nlocal arab_scripts = {\n\t\"Arab\",\n\t-- WTF? Why are there a zillion language-specific variants of the\n\t-- Arabic script?\n\t\"fa-Arab\",\n\t\"kk-Arab\",\n\t\"ks-Arab\"\
      ,\n\t\"ku-Arab\",\n\t\"ms-Arab\",\n\t\"mzn-Arab\",\n\t\"ota-Arab\",\n\t\"pa-Arab\",\n\t\"ps-Arab\",\n\t\"sd-Arab\",\n\t\"tt-Arab\",\n\t\"ug-Arab\",\n\t\"ur-Arab\",\n}\n\n-- Per-script template hyphens. The template hyphen is what appears in the\n-- {{affix}}/{{prefix}}/{{suffix}}/etc.\
      \ template (in the wikicode). See below.\n--\n-- The value below is a string consisting of one or more hyphen characters.\n-- If there is more than one character, a non-default function must be\n-- specified for the script in display_hyphens[] so the correct\
      \ display\n-- hyphen will be specified when no template hyphen is given (in {{suffix}}/\n-- {{prefix}}/etc.).\n--\n-- Script detection is normally done when linking, but we need to do it\n-- earlier. However, under most circumstances we don't need to do\
      \ script\n-- detection. Specifically, we only need to do script detection for a given\n-- language if\n--\n-- (a) the language has multiple scripts; and\n-- (b) at least one of those scripts is listed below or in display_hyphens.\n\nlocal ZWNJ = u(0x200C)\
      \ -- zero-width non-joiner\nlocal arab_hyphens = \"ـ\" .. ZWNJ .. \"-\"\nlocal template_hyphens = {\n\t-- Arabic scripts get added below\n\t[\"Hebr\"] = \"־\",\n\t-- FIXME! What about the following right-to-left scripts?\n\t-- Adlm (Adlam)\n\t-- Armi (Imperial\
      \ Aramaic)\n\t-- Avst (Avestan)\n\t-- Cprt (Cypriot)\n\t-- Khar (Kharoshthi)\n\t-- Mand (Mandaic/Mandaean)\n\t-- Mani (Manichaean)\n\t-- Mend (Mende/Mende Kikakui)\n\t-- Narb (Old North Arabian)\n\t-- Nbat (Nabataean/Nabatean)\n\t-- Nkoo (N'Ko)\n\t-- Orkh\
      \ (Orkhon runes)\n\t-- Phli (Inscriptional Pahlavi)\n\t-- Phlp (Psalter Pahlavi)\n\t-- Phlv (Book Pahlavi)\n\t-- Phnx (Phoenician)\n\t-- Prti (Inscriptional Parthian)\n\t-- Rohg (Hanifi Rohingya)\n\t-- Samr (Samaritan)\n\t-- Sarb (Old South Arabian)\n\t\
      -- Sogd (Sogdian)\n\t-- Sogo (Old Sogdian)\n\t-- Syrc (Syriac)\n\t-- Thaa (Thaana)\n}\nfor _, script in ipairs(arab_scripts) do\n\ttemplate_hyphens[script] = arab_hyphens\nend\n\n-- Default display-hyphen funct\nlocal function default_display_hyphen(script,\
      \ hyph)\n\tif not hyph then\n\t\treturn template_hyphens[script] or \"-\"\n\tend\n\treturn hyph\nend\n\nlocal function no_display_hyphen(script, hyph)\n\treturn \"\"\nend\n\nlocal function arab_get_display_hyphen(script, hyph)\n\tif not hyph then\n\t\t\
      return \"ـ\" -- tatweel\n\telseif hyph == ZWNJ then\n\t\treturn \"\"\n\telse\n\t\treturn hyph\n\tend\nend\n\n-- Per-script function to return the correct display hyphen given the\n-- script and template hyphen. The function should also handle the case\n\
      -- where the passed-in template hyphen is nil, corresponding to the\n-- situation in {{prefix}}/{{suffix}}/etc. where no template hyphen is\n-- specified.\nlocal display_hyphens = {\n\t-- Arabic scripts get added below\n\t[\"Hani\"] = no_display_hyphen,\n\
      \t-- The following two are mixtures of several scripts. Hopefully\n\t-- the specs here are correct!\n\t[\"Jpan\"] = no_display_hyphen,\n\t[\"Kore\"] = no_display_hyphen,\n\t[\"Laoo\"] = no_display_hyphen,\n\t[\"Nshu\"] = no_display_hyphen,\n\t[\"Thai\"\
      ] = no_display_hyphen,\n}\nfor _, script in ipairs(arab_scripts) do\n\tdisplay_hyphens[script] = arab_get_display_hyphen\nend\n\nlocal function pluralize(pos)\n\tif pos ~= \"nouns\" and usub(pos, -5) ~= \"verbs\" and usub(pos, -4) ~= \"ives\" then\n\t\t\
      if pos:find(\"[sx]$\") then\n\t\t\tpos = pos .. \"es\"\n\t\telse\n\t\t\tpos = pos .. \"s\"\n\t\tend\n\tend\n\treturn pos\nend\n\nlocal function link_term(terminfo, display_term, lang, sc, sort_key)\n\tlocal terminfo_new = require(\"Module:table\").shallowcopy(terminfo)\n\
      \tlocal result\n\n\tterminfo_new.term = display_term\t\n\tif terminfo_new.lang then\n\t\tresult = require(\"Module:etymology\").format_borrowed(lang, terminfo_new, sort_key, false, true, \"plain\")\n\telse\n\t\tterminfo_new.lang = lang\n\t\tterminfo_new.sc\
      \ = terminfo_new.sc or sc\n\t\tresult = m_links.full_link(terminfo_new, \"term\", false)\n\tend\n\t\n\tif terminfo_new.q then\n\t\tresult = result .. \" \" .. require(\"Module:qualifier\").format_qualifier(terminfo_new.q)\n\tend\n\t\n\treturn result\n\
      end\n\n-- Figure out the appropriate script for the given affix and language (unless\n-- the script is explicitly passed in), and return the values of\n-- template_hyphens[] and display_hyphens[] for that script, substituting\n-- default values as appropriate.\
      \ Three values are returned:\n--\tDETECTED_SCRIPT, TEMPLATE_HYPHEN, DISPLAY_HYPHEN\nlocal function get_template_and_display_hyphens(text, lang, sc)\n\tlocal scode\n\t-- 1. If the script is explicitly passed in, use it.\n\tif sc then\n\t\tscode = sc:getCode()\n\
      \telse\n\t\tlang = require(\"Module:languages\").getNonEtymological(lang)\n\t\t-- If we don't call shallowClone here, #possible_scripts always == 0.\n\t\t-- Something weird to do with the metatable that's set on the table,\n\t\t-- coming from loadData.\n\
      \t\tlocal possible_scripts = require(\"Module:table\").shallowClone(lang:getScriptCodes())\n\t\tif #possible_scripts == 0 then\n\t\t\t-- This shouldn't happen; if the language has no script codes,\n\t\t\t-- the list {\"None\"} should be returned.\n\t\t\
      \terror(\"Something is majorly wrong! Language \" .. lang:getCanonicalName() .. \" has no script codes.\")\n\t\tend\n\t\tif #possible_scripts == 1 then\n\t\t\t-- 2. If the language has only one possible script, use it.\n\t\t\tscode = possible_scripts[1]\n\
      \t\telse\n\t\t\t-- 3. Check if any of the possible scripts for the language have\n\t\t\t--    non-default values for template_hyphens[] or\n\t\t\t--    display_hyphens[]. If so, we need to do script detection on\n\t\t\t--    the text. If not, just use\
      \ \"Latn\", which may not be\n\t\t\t--    technically correct but produces the right results because\n\t\t\t--    Latn has all default values for template_hyphens[] and\n\t\t\t--    display_hyphens[].\n\t\t\tlocal may_have_nondefault_hyphen = false\n\t\
      \t\tfor _, script in ipairs(possible_scripts) do\n\t\t\t\tif template_hyphens[script] or display_hyphens[script] then\n\t\t\t\t\tmay_have_nondefault_hyphen = true\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\t\tif not may_have_nondefault_hyphen then\n\t\
      \t\t\tscode = \"Latn\"\n\t\t\telse\n\t\t\t\tscode = require(\"Module:scripts\").findBestScript(text, lang):getCode()\n\t\t\tend\n\t\tend\n\tend\n\tlocal template_hyphen = template_hyphens[scode] or \"-\"\n\tlocal display_hyphen = display_hyphens[scode]\
      \ or default_display_hyphen\n\treturn scode, template_hyphen, display_hyphen\nend\n\n-- Find the type of affix (\"prefix\", \"infix\", \"suffix\", \"circumfix\" or nil\n-- for non-affix). Return the affix type and the displayed/linked equivalent\n-- of\
      \ the part (normally the same as the part but will be different for some\n-- East Asian languages that use a regular hyphen as an affix-signaling\n-- hyphen but have no display hyphen).\nlocal function get_affix_type(lang, sc, part)\n\tif not part then\n\
      \t\treturn nil, nil\n\tend\n\t\n\tlocal scode, thyph, dhyph = get_template_and_display_hyphens(part, lang, sc)\n\tthyph = \"([\" .. thyph .. \"])\"\n\tlocal hyphen_space_hyphen = thyph .. \" \" .. thyph\n\n\tif part:find(\"^%^\") then\n\t\t-- If part begins\
      \ with ^, it's not an affix no matter what.\n\t\t-- Strip off the ^ and return \"no affix\".\n\t\treturn nil, usub(part, 2)\n\tend\n\n\t-- Remove an asterisk if the morpheme is reconstructed and add it in the end.\n\tlocal reconstructed = \"\"\n\tif part:find(\"\
      ^%*\") then \n\t\treconstructed = \"*\"\n\t\tpart = part:gsub(\"^%*\", \"\")\n\tend\n\n\tlocal affix_type = nil\n\n\tlocal beginning_hyphen = rmatch(part, \"^\" .. thyph .. \".*$\")\n\tlocal ending_hyphen = rmatch(part, \"^.*\" .. thyph .. \"$\")\n\tlocal\
      \ beginning_dhyph = dhyph(scode, beginning_hyphen)\n\tlocal ending_dhyph = dhyph(scode, ending_hyphen)\n\n\tif rfind(part, hyphen_space_hyphen) then\n\t\taffix_type = \"circumfix\"\n\t\t-- FIXME! Change to display hyphens?\n\telseif beginning_hyphen and\
      \ ending_hyphen then\n\t\taffix_type = \"infix\"\n\t\t-- Don't do anything if the part is a single hyphen.\n\t\t-- This is probably correct.\n\t\tif (beginning_hyphen ~= beginning_dhyph or\n\t\t\tending_hyphen ~= ending_dhyph) and ulen(part) &gt; 1 then\n\
      \t\t\tpart = beginning_dhyph .. rsub(part, \"^.(.-).$\", \"%1\") .. ending_dhyph\n\t\tend\n\telseif ending_hyphen then\n\t\taffix_type = \"prefix\"\n\t\tif ending_hyphen ~= ending_dhyph then\n\t\t\tpart = rsub(part, \"^(.-).$\", \"%1\") .. ending_dhyph\n\
      \t\tend\n\telseif beginning_hyphen then\n\t\taffix_type = \"suffix\"\n\t\tif beginning_hyphen ~= beginning_dhyph then\n\t\t\tpart = beginning_dhyph .. usub(part, 2)\n\t\tend\n\tend\n\n\tpart = reconstructed .. part\n\treturn affix_type, part\nend\n\n\n\
      -- Iterate an array up to the greatest integer index found.\nlocal function ipairs_with_gaps(t)\n\tlocal max_index = math.max(unpack(require(\"Module:table\").numKeys(t)))\n\tlocal i = 0\n\treturn function()\n\t\twhile i &lt; max_index do\n\t\t\ti = i\
      \ + 1\n\t\t\treturn i, t[i]\n\t\tend\n\tend\nend\n\nexport.ipairs_with_gaps = ipairs_with_gaps\n\n\nfunction export.show_affixes(lang, sc, parts, pos, sort_key, nocat)\n\tpos = pos or \"word\"\n\t\n\tpos = pluralize(pos)\n\t\n\t-- Process each part\n\t\
      local parts_formatted = {}\n\tlocal categories_formatted = {}\n\tlocal whole_words = 0\n\t\n\tfor i, part in ipairs_with_gaps(parts) do\n\t\tpart = part or {}\n\t\tlocal part_lang = part.lang or lang\n\t\tlocal part_sc = part.sc or sc\n\t\t\n\t\t-- Is\
      \ it an affix, and if so, what type of affix?\n\t\tlocal affix_type, display_term = get_affix_type(part_lang, part_sc, part.term)\n\t\t\n\t\t-- Make a link for the part\n\t\tif display_term == \"\" then\n\t\t\t-- If a bare ^ was specified, then insert\
      \ a blank string. A + will still\n\t\t\t-- appear next to it. This lets us directly convert things such as\n\t\t\t-- {{suffix|mul||idae}} to {{affix|mul|^|-idae}}.\n\t\t\ttable.insert(parts_formatted, \"\")\n\t\telse\n\t\t\ttable.insert(parts_formatted,\
      \ link_term(part, display_term, lang, sc, sort_key))\n\t\tend\n\t\t\n\t\tif affix_type then\n\t\t\t-- Make a sort key\n\t\t\t-- For the first part, use the second part as the sort key\n\t\t\tlocal part_sort_base = nil\n\t\t\tlocal part_sort = part.sort\
      \ or sort_key\n\t\t\t\n\t\t\tif i == 1 and parts[2] and parts[2].term then\n\t\t\t\tlocal part2_lang = parts[2].lang or lang\n\t\t\t\tlocal part2_sc = parts[2].sc or sc\n\t\t\t\tlocal part2_affix_type, part2_display_term = get_affix_type(part2_lang, part2_sc,\
      \ parts[2].term)\n\t\t\t\tpart_sort_base = part2_lang:makeEntryName(part2_display_term)\n\t\t\tend\n\t\t\t\n\t\t\tif affix_type == \"infix\" then affix_type = \"interfix\" end\n\t\t\t\n\t\t\tif part.pos and rfind(part.pos, \"patronym\") then\n\t\t\t\t\
      table.insert(categories_formatted, m_utilities.format_categories({lang:getCanonicalName() .. \" patronymics\"}, lang, part_sort, part_sort_base))\n\t\t\tend\n\t\t\t\n\t\t\tif pos ~= \"words\" and part.pos and rfind(part.pos, \"diminutive\") then\n\t\t\t\
      \ttable.insert(categories_formatted, m_utilities.format_categories({lang:getCanonicalName() .. \" diminutive \" .. pos}, lang, part_sort, part_sort_base))\n\t\t\tend\n\t\t\t\n\t\t\ttable.insert(categories_formatted, m_utilities.format_categories({lang:getCanonicalName()\
      \ .. \" \" .. pos .. \" \" .. affix_type .. \"ed with \" .. part_lang:makeEntryName(display_term) .. (part.id and \" (\" .. part.id .. \")\" or \"\")}, lang, part_sort, part_sort_base))\n\t\telse\n\t\t\twhole_words = whole_words + 1\n\t\t\t\n\t\t\tif whole_words\
      \ == 2 then\n\t\t\t\ttable.insert(categories_formatted, m_utilities.format_categories({lang:getCanonicalName() .. \" compound \" .. pos}, lang, sort_key))\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- If there are no categories, then there were no actual affixes,\
      \ only regular words.\n\t-- This function does not support compounds (yet?), so show an error.\n\tif #categories_formatted == 0 then\n\t\terror(\"The parameters did not include any affixes, and the word is not a compound. Please provide at least one affix.\"\
      )\n\tend\n\t\n\treturn table.concat(parts_formatted, \" +&amp;lrm; \") .. (nocat and \"\" or table.concat(categories_formatted))\nend\n\n\nfunction export.show_compound(lang, sc, parts, pos, sort_key, nocat)\n\tpos = pos or \"words\"\n\tlocal parts_formatted\
      \ = {}\n\tlocal categories_formatted = {}\n\ttable.insert(categories_formatted, m_utilities.format_categories({lang:getCanonicalName() .. \" compound words\"}, lang, sort_key))\n\t\n\t-- Make links out of all the parts\n\tlocal whole_words = 0\n\tfor i,\
      \ part in ipairs(parts) do\n\t\tlocal part_lang = part.lang or lang\n\t\tlocal part_sc = part.sc or sc\n\t\tlocal affix_type, display_term = get_affix_type(part_lang, part_sc, part.term)\n\n\t\t-- If the word is an infix, recognize it as such (which means\n\
      \t\t-- e.g. that we will display the word without hyphens for\n\t\t-- East Asian languages). Otherwise, ignore the fact that it\n\t\t-- looks like an affix and display as specified in the template\n\t\t-- (but pay attention to the detected affix type for\
      \ certain\n\t\t-- tracking purposes)\n\t\tif affix_type == \"infix\" then\n\t\t\ttable.insert(categories_formatted, m_utilities.format_categories({lang:getCanonicalName() .. \" \" .. pos .. \" interfixed with \" .. part_lang:makeEntryName(display_term)},\
      \ lang, part.sort or sort_key))\n\t\telse\n\t\t\tdisplay_term = part.term\n\t\t\tif affix_type then\n\t\t\t\trequire(\"Module:debug\").track{\n\t\t\t\t\t\"compound\",\n\t\t\t\t\t\"compound/\" .. affix_type,\n\t\t\t\t\t\"compound/\" .. affix_type .. \"\
      /lang/\" .. lang:getCode()\n\t\t\t\t}\n\t\t\telse\n\t\t\t\twhole_words = whole_words + 1\n\t\t\tend\n\t\tend\n\t\ttable.insert(parts_formatted, link_term(part, display_term, lang, sc, sort_key))\n\tend\n\n\tif whole_words == 1 then\n\t\trequire(\"Module:debug\"\
      ).track(\"compound/one whole word\")\n\telseif whole_words == 0 then\n\t\trequire(\"Module:debug\").track(\"compound/looks like confix\")\n\tend\n\t\n\treturn table.concat(parts_formatted, \" +&amp;lrm; \") .. (nocat and \"\" or table.concat(categories_formatted))\n\
      end\n\n\nfunction export.show_compound_like(lang, sc, parts, sort_key, text, oftext, cat)\n\tlocal parts_formatted = {}\n\tlocal categories_formatted = {}\n\n\tif cat then\t\n\t\ttable.insert(categories_formatted, m_utilities.format_categories({lang:getCanonicalName()\
      \ .. \" \" .. cat}, lang, sort_key))\n\tend\n\t\n\t-- Make links out of all the parts\n\tfor i, part in ipairs(parts) do\n\t\ttable.insert(parts_formatted, link_term(part, part.term, lang, sc, sort_key))\n\tend\n\n\tlocal text_sections = {}\n\tif text\
      \ then\n\t\ttable.insert(text_sections, text)\n\tend\n\tif #parts &gt; 0 and oftext then\n\t\ttable.insert(text_sections, \" \")\n\t\ttable.insert(text_sections, oftext)\n\t\ttable.insert(text_sections, \" \")\n\tend\n\ttable.insert(text_sections, table.concat(parts_formatted,\
      \ \" +&amp;lrm; \"))\n\ttable.insert(text_sections, table.concat(categories_formatted, \"\"))\n\treturn table.concat(text_sections, \"\")\nend\n\n\n-- Make a given part into an affix of a specific type. For example, if the desired affix type\n-- is \"\
      suffix\", this will (in general) add a hyphen onto the beginning of the term, alt, tr and ts\n-- components of the part if not already present. The hyphen that's added is the \"display hyphen\"\n-- (see above) and may be language-specific. In the case\
      \ of East Asian languages, the display\n-- hyphen is an empty string whereas the template hyphen is the regular hyphen, meaning that any\n-- regular hyphen at the beginning of the part will be effectively removed.\nlocal function make_part_affix(part,\
      \ lang, sc, affix_type)\n\tlocal part_lang = part.lang or lang\n\tlocal part_sc = part.sc or sc\n\n\tpart.term = export.make_affix(part.term, part_lang, part_sc, affix_type)\n\tpart.alt = export.make_affix(part.alt, part_lang, part_sc, affix_type)\n\t\
      part.tr = export.make_affix(part.tr, part_lang, require(\"Module:scripts\").getByCode(\"Latn\"), affix_type)\n\tpart.ts = export.make_affix(part.ts, part_lang, require(\"Module:scripts\").getByCode(\"Latn\"), affix_type)\nend\n\n\nlocal function track_wrong_affix_type(template,\
      \ part, lang, sc, expected_affix_type, part_name)\n\tif part then\n\t\tlocal affix_type = get_affix_type(part.lang or lang, part.sc or sc, part.term)\n\t\tif affix_type ~= expected_affix_type then\n\t\t\trequire(\"Module:debug\").track{\n\t\t\t\ttemplate,\n\
      \t\t\t\ttemplate .. \"/\" .. part_name,\n\t\t\t\ttemplate .. \"/\" .. part_name .. \"/\" .. (affix_type or \"none\"),\n\t\t\t\ttemplate .. \"/\" .. part_name .. \"/\" .. (affix_type or \"none\") .. \"/lang/\" .. lang:getCode()\n\t\t\t}\n\t\tend\n\tend\n\
      end\n\n\nlocal function insert_affix_category(categories, lang, pos, affix_type, part)\n\tif part.term then\n\t\tlocal part_lang = part.lang or lang\n\t\ttable.insert(categories, lang:getCanonicalName() .. \" \" .. pos .. \" \" .. affix_type .. \"ed with\
      \ \" .. part_lang:makeEntryName(part.term) .. (part.id and \" (\" .. part.id .. \")\" or \"\"))\n\tend\nend\n\n\nfunction export.show_circumfix(lang, sc, prefix, base, suffix, pos, sort_key, nocat)\n\tlocal categories = {}\n\tpos = pos or \"word\"\n\t\n\
      \tpos = pluralize(pos)\n\t\n\t-- Hyphenate the affixes\n\tmake_part_affix(prefix, lang, sc, \"prefix\")\n\tmake_part_affix(suffix, lang, sc, \"suffix\")\n\t\n\ttrack_wrong_affix_type(\"circumfix\", prefix, lang, sc, \"prefix\", \"prefix\")\n\ttrack_wrong_affix_type(\"\
      circumfix\", base, lang, sc, nil, \"base\")\n\ttrack_wrong_affix_type(\"circumfix\", suffix, lang, sc, \"suffix\", \"suffix\")\n\t\n\t-- Create circumfix term\n\tlocal circumfix = nil\n\t\n\tif prefix.term and suffix.term then\n\t\tcircumfix = prefix.term\
      \ .. \" \" .. suffix.term\n\t\tprefix.alt = prefix.alt or prefix.term\n\t\tsuffix.alt = suffix.alt or suffix.term\n\t\tprefix.term = circumfix\n\t\tsuffix.term = circumfix\n\tend\n\t\n\t-- Make links out of all the parts\n\tlocal parts_formatted = {}\n\
      \tlocal sort_base = (base.lang or lang):makeEntryName(base.term)\n\t\n\ttable.insert(parts_formatted, link_term(prefix, prefix.term, lang, sc, sort_key))\n\ttable.insert(parts_formatted, link_term(base, base.term, lang, sc, sort_key))\n\ttable.insert(parts_formatted,\
      \ link_term(suffix, suffix.term, lang, sc, sort_key))\n\t\n\t-- Insert the categories\n\ttable.insert(categories, lang:getCanonicalName() .. \" \" .. pos .. \" circumfixed with \" .. (prefix.lang or lang):makeEntryName(circumfix))\n\t\n\treturn table.concat(parts_formatted,\
      \ \" +&amp;lrm; \") .. (nocat and \"\" or m_utilities.format_categories(categories, lang, sort_key, sort_base))\nend\n\n\nfunction export.show_confix(lang, sc, prefix, base, suffix, pos, sort_key, nocat)\n\tpos = pos or \"word\"\n\t\n\tpos = pluralize(pos)\n\
      \t\n\t-- Hyphenate the affixes\n\tmake_part_affix(prefix, lang, sc, \"prefix\")\n\tmake_part_affix(suffix, lang, sc, \"suffix\")\n\t\n\ttrack_wrong_affix_type(\"confix\", prefix, lang, sc, \"prefix\", \"prefix\")\n\ttrack_wrong_affix_type(\"confix\", base,\
      \ lang, sc, nil, \"base\")\n\ttrack_wrong_affix_type(\"confix\", suffix, lang, sc, \"suffix\", \"suffix\")\n\t\n\t-- Make links out of all the parts\n\tlocal parts_formatted = {}\n\tlocal prefix_sort_base\n\tif suffix.term then\n\t\tprefix_sort_base =\
      \ (suffix.lang or lang):makeEntryName(suffix.term)\n\tend\n\tlocal prefix_categories = {}\n\tlocal suffix_categories = {}\n\t\n\ttable.insert(parts_formatted, link_term(prefix, prefix.term, lang, sc, sort_key))\n\tinsert_affix_category(prefix_categories,\
      \ lang, pos, \"prefix\", prefix)\n\t\n\tif base then\n\t\tif base.term then\n\t\t\tprefix_sort_base = (base.lang or lang):makeEntryName(base.term)\n\t\tend\n\t\ttable.insert(parts_formatted, link_term(base, base.term, lang, sc, sort_key))\n\tend\n\t\n\t\
      table.insert(parts_formatted, link_term(suffix, suffix.term, lang, sc, sort_key))\n\tinsert_affix_category(suffix_categories, lang, pos, \"suffix\", suffix)\n\t\n\treturn table.concat(parts_formatted, \" +&amp;lrm; \") .. (nocat and \"\" or m_utilities.format_categories(prefix_categories,\
      \ lang, sort_key, prefix_sort_base) .. m_utilities.format_categories(suffix_categories, lang, sort_key))\nend\n\n\nfunction export.show_infix(lang, sc, base, infix, pos, sort_key, nocat)\n\tlocal categories = {}\n\tpos = pos or \"word\"\n\t\n\tpos = pluralize(pos)\n\
      \t\n\t-- Hyphenate the affixes\n\tmake_part_affix(infix, lang, sc, \"infix\")\n\t\n\ttrack_wrong_affix_type(\"infix\", base, lang, sc, nil, \"base\")\n\ttrack_wrong_affix_type(\"infix\", infix, lang, sc, \"infix\", \"infix\")\n\t\n\t-- Make links out of\
      \ all the parts\n\tlocal parts_formatted = {}\n\t\n\ttable.insert(parts_formatted, link_term(base, base.term, lang, sc, sort_key))\n\ttable.insert(parts_formatted, link_term(infix, infix.term, lang, sc, sort_key))\n\t\n\t-- Insert the categories\n\tinsert_affix_category(categories,\
      \ lang, pos, \"infix\", infix)\n\t\n\treturn table.concat(parts_formatted, \" +&amp;lrm; \") .. (nocat and \"\" or m_utilities.format_categories(categories, lang, sort_key))\nend\n\n\nfunction export.show_prefixes(lang, sc, prefixes, base, pos, sort_key,\
      \ nocat)\n\tpos = pos or \"word\"\n\t\n\tpos = pluralize(pos)\n\t\n\t-- Hyphenate the affixes\n\tfor i, prefix in ipairs(prefixes) do\n\t\tmake_part_affix(prefix, lang, sc, \"prefix\")\n\tend\n\t\n\tfor i, prefix in ipairs(prefixes) do\n\t\ttrack_wrong_affix_type(\"\
      prefix\", prefix, lang, sc, \"prefix\", \"prefix\")\n\tend\n\n\ttrack_wrong_affix_type(\"prefix\", base, lang, sc, nil, \"base\")\n\n\t-- Make links out of all the parts\n\tlocal parts_formatted = {}\n\tlocal first_sort_base = nil\n\tlocal categories =\
      \ {}\n\t\n\tfor i, prefix in ipairs(prefixes) do\n\t\ttable.insert(parts_formatted, link_term(prefix, prefix.term, lang, sc, sort_key))\n\t\tinsert_affix_category(categories, lang, pos, \"prefix\", prefix)\n\t\t\n\t\tif i &gt; 1 and first_sort_base ==\
      \ nil then\n\t\t\tfirst_sort_base = (prefix.lang or lang):makeEntryName(prefix.term)\n\t\tend\n\tend\n\t\n\tif base then\n\t\tif first_sort_base == nil then\n\t\t\tfirst_sort_base = (base.lang or lang):makeEntryName(base.term)\n\t\tend\n\t\t\n\t\ttable.insert(parts_formatted,\
      \ link_term(base, base.term, lang, sc, sort_key))\n\telse\n\t\ttable.insert(parts_formatted, \"\")\n\tend\n\t\n\tlocal first_category = table.remove(categories, 1)\n\treturn table.concat(parts_formatted, \" +&amp;lrm; \") .. (nocat and \"\" or m_utilities.format_categories({first_category},\
      \ lang, sort_key, first_sort_base) .. m_utilities.format_categories(categories, lang, sort_key))\nend\n\n\nfunction export.show_suffixes(lang, sc, base, suffixes, pos, sort_key, nocat)\n\tlocal categories = {}\n\tpos = pos or \"word\"\n\t\n\tpos = pluralize(pos)\n\
      \t\n\t-- Hyphenate the affixes\n\tfor i, suffix in ipairs(suffixes) do\n\t\tmake_part_affix(suffix, lang, sc, \"suffix\")\n\tend\n\t\n\ttrack_wrong_affix_type(\"suffix\", base, lang, sc, nil, \"base\")\n\n\tfor i, suffix in ipairs(suffixes) do\n\t\ttrack_wrong_affix_type(\"\
      suffix\", suffix, lang, sc, \"suffix\", \"suffix\")\n\tend\n\t\n\t-- Make links out of all the parts\n\tlocal parts_formatted = {}\n\t\n\tif base then\n\t\ttable.insert(parts_formatted, link_term(base, base.term, lang, sc, sort_key))\n\telse\n\t\ttable.insert(parts_formatted,\
      \ \"\")\n\tend\n\t\n\tfor i, suffix in ipairs(suffixes) do\n\t\ttable.insert(parts_formatted, link_term(suffix, suffix.term, lang, sc, sort_key))\n\tend\n\t\n\t-- Insert the categories\n\tfor i, suffix in ipairs(suffixes) do\n\t\tif suffix.term then\n\t\
      \t\tinsert_affix_category(categories, lang, pos, \"suffix\", suffix)\n\t\tend\n\t\t\n\t\tif suffix.pos and rfind(suffix.pos, \"patronym\") then\n\t\t\ttable.insert(categories, lang:getCanonicalName() .. \" patronymics\")\n\t\tend\n\tend\n\t\n\treturn table.concat(parts_formatted,\
      \ \" +&amp;lrm; \") .. (nocat and \"\" or m_utilities.format_categories(categories, lang, sort_key))\nend\n\n\nfunction export.show_transfix(lang, sc, base, transfix, pos, sort_key, nocat)\n\tlocal categories = {}\n\tpos = pos or \"word\"\n\t\n\tpos =\
      \ pluralize(pos)\n\t\n\t-- Hyphenate the affixes\n\tmake_part_affix(transfix, lang, sc, \"transfix\")\n\t\n\t-- Make links out of all the parts\n\tlocal parts_formatted = {}\n\t\n\ttable.insert(parts_formatted, link_term(base, base.term, lang, sc, sort_key))\n\
      \ttable.insert(parts_formatted, link_term(transfix, transfix.term, lang, sc, sort_key))\n\t\n\t-- Insert the categories\n\tinsert_affix_category(categories, lang, pos, \"transfix\", transfix)\n\t\n\treturn table.concat(parts_formatted, \" +&amp;lrm; \"\
      ) .. (nocat and \"\" or m_utilities.format_categories(categories, lang, sort_key))\nend\n\n\n-- Add a hyphen to a word in the appropriate place, based on the specified\n-- affix type. For example, if `affix_type` == \"prefix\", we'll add a hyphen\n-- onto\
      \ the end if it's not already there. In general, if the template and\n-- display hyphens are the same and the appropriate hyphen is already\n-- present, we leave it, else we strip off the template hyphen if present\n-- and add the display hyphen.\nfunction\
      \ export.make_affix(term, lang, sc, affix_type)\n\tif not (affix_type == \"prefix\" or affix_type == \"suffix\" or\n\t\taffix_type == \"circumfix\" or affix_type == \"infix\" or\n\t\taffix_type == \"interfix\" or affix_type == \"transfix\") then\n\t\t\
      error(\"Internal error: Invalid affix type \" .. (affix_type or \"(nil)\"))\n\tend\n\t\n\tif not term then\n\t\treturn nil\n\tend\n\n\t-- If the term begins with ^, leave it exactly as-is except for removing the ^.\n\tif usub(term, 1, 1) == \"^\" then\n\
      \t\treturn usub(term, 2)\n\tend\n\t\t\n\tif affix_type == \"circumfix\" or affix_type == \"transfix\" then\n\t\treturn term\n\telseif affix_type == \"interfix\" then\n\t\taffix_type = \"infix\"\n\tend\n\t\n\tlocal scode, thyph, dhyph = get_template_and_display_hyphens(term,\
      \ lang, sc)\n\tthyph = \"([\" .. thyph .. \"])\"\n\t\n\t-- Remove an asterisk if the morpheme is reconstructed and add it in the end.\n\tlocal reconstructed = \"\"\n\tif term:find(\"^%*\") then \n\t\treconstructed = \"*\"\n\t\tterm = term:gsub(\"^%*\"\
      , \"\")\n\tend\n\t\n\tlocal beginning_hyphen = rmatch(term, \"^\" .. thyph .. \".*$\")\n\tlocal ending_hyphen = rmatch(term, \"^.*\" .. thyph .. \"$\")\n\tlocal beginning_dhyph = dhyph(scode, beginning_hyphen)\n\tlocal ending_dhyph = dhyph(scode, ending_hyphen)\n\
      \n\tif affix_type == \"suffix\" then\n\t\tif beginning_hyphen and beginning_hyphen == beginning_dhyph then\n\t\t\t-- leave term alone\n\t\telse\n\t\t\tlocal term_no_hyphen = beginning_hyphen and usub(term, 2) or term\n\t\t\tterm = beginning_dhyph .. term_no_hyphen\n\
      \t\tend\n\telseif affix_type == \"prefix\" then\n\t\tif ending_hyphen and ending_hyphen == ending_dhyph then\n\t\t\t-- leave term alone\n\t\telse\n\t\t\tlocal term_no_hyphen = ending_hyphen and rsub(term, \"^(.-).$\", \"%1\") or term\n\t\t\tterm = term_no_hyphen\
      \ .. ending_dhyph\n\t\tend\n\telseif affix_type == \"infix\" then\n\t\tif (beginning_hyphen and ending_hyphen and\n\t\t\tbeginning_hyphen == beginning_dhyph and\n\t\t\tending_hyphen == ending_dhyph) then\n\t\t\t-- leave term alone\n\t\telseif term == beginning_hyphen\
      \ or term == ending_hyphen then\n\t\t\t-- term is a single hyphen; should probably leave alone\n\t\telse\n\t\t\tlocal term_no_hyphen = beginning_hyphen and usub(term, 2) or term\n\t\t\tterm_no_hyphen = ending_hyphen and rsub(term_no_hyphen, \"^(.-).$\"\
      , \"%1\") or term_no_hyphen\n\t\t\tterm = beginning_dhyph .. term_no_hyphen .. ending_dhyph\n\t\tend\n\telse\n\t\terror(\"Internal error: Bad affix type \" .. affix_type)\n\tend\n\t\n\treturn reconstructed .. term\nend\n\nreturn export\n\n-- For Vim, so\
      \ we get 4-space tabs\n-- vim: set ts=4 sw=4 noet:</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:33.888Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Adoublet&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=65658 t=1555362453776496
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '1034'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:33 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 479883401, 242702646, 687431620
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4993318" pageid="4993318" ns="10" title="Template:doublet"><revisions><rev user="Benwing2" timestamp="2019-03-12T15:25:03Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:etymology/templates|misc_variant|text=[[Appendix:Glossary#doublet|{{#if:{{{nocap|}}}|d|D}}oublet]]|cat=doublets}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:34.120Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata3%2Ff&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=63586 t=1555362454003331
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:34 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 672508215, 731101035, 697480174
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4206197\" pageid=\"4206197\" ns=\"828\" title=\"Module:languages/data3/f\"><revisions><rev user=\"Mahagaja\" timestamp=\"2019-04-11T12:33:39Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local u = mw.ustring.char\n\n-- UTF-8 encoded strings for some commonly-used diacritics\nlocal GRAVE     = u(0x0300)\nlocal ACUTE     = u(0x0301)\nlocal CIRC\
      \      = u(0x0302)\nlocal TILDE     = u(0x0303)\nlocal MACRON    = u(0x0304)\nlocal BREVE     = u(0x0306)\nlocal DOTABOVE  = u(0x0307)\nlocal DIAER     = u(0x0308)\nlocal CARON     = u(0x030C)\nlocal DGRAVE    = u(0x030F)\nlocal INVBREVE  = u(0x0311)\n\
      local DOTBELOW  = u(0x0323)\nlocal RINGBELOW = u(0x0325)\nlocal CEDILLA   = u(0x0327)\n\nlocal Latn = {\"Latn\"}\n\nlocal m = {}\n\nm[\"faa\"] = {\n\t\"Fasu\",\n\t\"Q3446687\",\n\totherNames = {\"Namumi\", \"Namome\", \"Namo Me\", \"Kaipu\", \"Kaibu\"\
      , \"Some\"},\n\tscripts = Latn,\n}\n\nm[\"fab\"] = {\n\t\"Annobonese\",\n\t\"Q34992\",\n\t\"crp\",\n\totherNames = {\"Fa d'Ambu\"},\n\tscripts = Latn,\n\tancestors = {\"pt\"},\n}\n\nm[\"fad\"] = {\n\t\"Wagi\",\n\t\"Q7959569\",\n\t\"ngf-mad\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"faf\"] = {\n\t\"Fagani\",\n\t\"Q3063759\",\n\t\"poz-sls\",\n\totherNames = {\"Faghani\"},\n\tscripts = Latn,\n}\n\nm[\"fag\"] = {\n\t\"Finongan\",\n\t\"Q3450761\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"fah\"] = {\n\t\"Baissa\
      \ Fali\",\n\t\"Q3446632\",\n\tscripts = Latn,\n}\n\nm[\"fai\"] = {\n\t\"Faiwol\",\n\t\"Q3501773\",\n\tscripts = Latn,\n}\n\nm[\"faj\"] = {\n\t\"Faita\",\n\t\"Q976953\",\n\tscripts = Latn,\n}\n\nm[\"fak\"] = {\n\t\"Fang (Cameroon)\",\n\t\"Q5433811\",\n\t\
      \"nic-bod\",\n\totherNames = {\"Fang\"},\n\tscripts = Latn,\n}\n\nm[\"fal\"] = {\n\t\"South Fali\",\n\t\"Q15637351\",\n\tscripts = Latn,\n}\n\nm[\"fam\"] = {\n\t\"Fam\",\n\t\"Q35290\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"fan\"] = {\n\t\"Fang (Guinea)\"\
      ,\n\t\"Q33484\",\n\t\"bnt\",\n\totherNames = {\"Pahouin\", \"Fang (Equatorial Guinea)\", \"Fang\"},\n\tscripts = Latn,\n}\n\nm[\"fap\"] = {\n\t\"Palor\",\n\t\"Q36318\",\n\t\"alv-sng\",\n\totherNames = {\"Paloor\", \"Falor\", \"Palar\", \"Sili\", \"Sili-Sili\"\
      , \"Waro\"},\n\tscripts = Latn,\n}\n\nm[\"far\"] = {\n\t\"Fataleka\",\n\t\"Q3067168\",\n\t\"poz-sls\",\n\tscripts = Latn,\n}\n\n-- \"fat\" IS TREATED AS \"ak\", SEE WT:LT\n\nm[\"fau\"] = {\n\t\"Fayu\",\n\t\"Q5439113\",\n\t\"paa-lkp\",\n\tscripts = Latn,\n\
      }\n\nm[\"fax\"] = {\n\t\"Fala\",\n\t\"Q300402\",\n\t\"roa-ibe\",\n\tscripts = Latn,\n\tancestors = {\"roa-opt\"},\n}\n\nm[\"fay\"] = {\n\t\"Southwestern Fars\",\n\t\"Q5228140\",\n\t\"ira-swi\",\n}\n\nm[\"faz\"] = {\n\t\"Northwestern Fars\",\n\t\"Q7060307\"\
      ,\n\t\"ira-swi\",\n}\n\nm[\"fbl\"] = {\n\t\"West Albay Bikol\",\n\t\"Q18603801\",\n\t\"phi\",\n\tscripts = Latn,\n}\n\nm[\"fcs\"] = {\n\t\"Quebec Sign Language\",\n\t\"Q13193\",\n\t\"sgn\",\n\tscripts = Latn, -- when documented\n}\n\nm[\"fer\"] = {\n\t\
      \"Feroge\",\n\t\"Q35287\",\n\tscripts = Latn,\n}\n\nm[\"ffi\"] = {\n\t\"Foia Foia\",\n\t\"Q8564176\",\n\tscripts = Latn,\n}\n\n-- \"ffm\" IS TREATED AS \"ff\", SEE WT:LT\n\nm[\"fgr\"] = {\n\t\"Fongoro\",\n\t\"Q3437645\",\n\tscripts = Latn,\n}\n\nm[\"fia\"\
      ] = {\n\t\"Nobiin\",\n\t\"Q36503\",\n\t\"nub\",\n\tscripts = Latn,\n\tancestors = {\"onw\"},\n}\n\nm[\"fie\"] = {\n\t\"Fyer\",\n\t\"Q56273\",\n\t\"cdc-wst\",\n\tscripts = Latn,\n}\n\n-- \"fil\" IS TREATED AS \"tl\", SEE WT:LT\n\nm[\"fip\"] = {\n\t\"Fipa\"\
      ,\n\t\"Q667747\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"fir\"] = {\n\t\"Firan\",\n\t\"Q3915847\",\n\tscripts = Latn,\n}\n\nm[\"fit\"] = {\n\t\"Meänkieli\",\n\t\"Q13357\",\n\t\"fiu-fin\",\n\tscripts = Latn,\n\tancestors = {\"fi\"},\n}\n\nm[\"fiw\"] =\
      \ {\n\t\"Fiwaga\",\n\t\"Q5456292\",\n\tscripts = Latn,\n}\n\nm[\"fkk\"] = {\n\t\"Kirya-Konzel\",\n\t\"Q6416310\",\n\t\"cdc-cbm\",\n\totherNames = {\"Kirya-Konzəl\"},\n\tscripts = Latn,\n}\n\nm[\"fkv\"] = {\n\t\"Kven\",\n\t\"Q165795\",\n\t\"fiu-fin\",\n\
      \tscripts = Latn,\n\tancestors = {\"fi\"},\n}\n\nm[\"fla\"] = {\n\t\"Montana Salish\",\n\t\"Q3111983\",\n\t\"sal\",\n\totherNames = {\"Flathead\", \"Salish\", \"Séliš\", \"Kalispel-Pend d'oreille\", \"Kalispel\"},\n\tscripts = Latn,\n}\n\nm[\"flh\"] =\
      \ {\n\t\"Foau\",\n\t\"Q5463819\",\n\t\"paa-lkp\",\n\tscripts = Latn,\n}\n\nm[\"fli\"] = {\n\t\"Fali\",\n\t\"Q56244\",\n\tscripts = Latn,\n}\n\nm[\"fll\"] = {\n\t\"North Fali\",\n\t\"Q12952419\",\n\tscripts = Latn,\n}\n\nm[\"fln\"] = {\n\t\"Flinders Island\"\
      ,\n\t\"Q3915702\",\n\t\"aus-pmn\",\n\totherNames = {\"Yalgawarra\", \"Wurima\", \"Mutumui\"},\n\tscripts = Latn,\n}\n\nm[\"flr\"] = {\n\t\"Fuliiru\",\n\t\"Q7166821\",\n\tscripts = Latn,\n}\n\nm[\"fly\"] = {\n\t\"Tsotsitaal\",\n\t\"Q12643960\",\n\totherNames\
      \ = {\"Flaaitaal\"},\n\tscripts = Latn,\n}\n\nm[\"fmp\"] = {\n\t\"Fe'fe'\",\n\t\"Q35276\",\n\t\"bai\",\n\tscripts = Latn,\n}\n\nm[\"fmu\"] = {\n\t\"Far Western Muria\",\n\t\"Q42589412\",\n\t\"dra\",\n\tancestors = {\"gon\"},\n}\n\nm[\"fng\"] = {\n\t\"\
      Fanagalo\",\n\t\"Q35727\",\n\t\"crp\",\n\tscripts = Latn,\n}\n\nm[\"fni\"] = {\n\t\"Fania\",\n\t\"Q317642\",\n\tscripts = Latn,\n}\n\nm[\"fod\"] = {\n\t\"Foodo\",\n\t\"Q5465566\",\n\tscripts = Latn,\n}\n\nm[\"foi\"] = {\n\t\"Foi\",\n\t\"Q5464146\",\n\t\
      scripts = Latn,\n}\n\nm[\"fom\"] = {\n\t\"Foma\",\n\t\"Q5464911\",\n\t\"bnt\",\n\tscripts = Latn,\n}\n\nm[\"fon\"] = {\n\t\"Fon\",\n\t\"Q33291\",\n\t\"alv-kwa\",\n\tscripts = Latn,\n}\n\nm[\"for\"] = {\n\t\"Fore\",\n\t\"Q3077126\",\n\t\"paa-kag\",\n\t\
      scripts = Latn,\n}\n\nm[\"fos\"] = {\n\t\"Siraya\",\n\t\"Q716604\",\n\t\"map\",\n\tscripts = Latn,\n}\n\nm[\"fpe\"] = {\n\t\"Pichinglis\",\n\t\"Q35288\",\n\t\"crp\",\n\tscripts = Latn,\n}\n\nm[\"fqs\"] = {\n\t\"Fas\",\n\t\"Q56320\",\n\tscripts = Latn,\n\
      }\n\n-- \"frc\" IS TREATED AS \"fr\" (or as etymology-only), SEE WT:LT\n\nm[\"frd\"] = {\n\t\"Fordata\",\n\t\"Q5468035\",\n\t\"poz\",\n\tscripts = Latn,\n}\n\nm[\"frk\"] = {\n\t\"Frankish\",\n\t\"Q10860505\",\n\t\"gmw\",\n\totherNames = {\"Old Frankish\"\
      },\n\tscripts = {\"Latn\", \"Runr\"}, -- It is attested in Runr, but most of our entries are reconstructed Latn\n}\n\nm[\"frm\"] = {\n\t\"Middle French\",\n\t\"Q1473289\",\n\t\"roa-oil\",\n\tscripts = Latn,\n\tancestors = {\"fro\"},\n\tsort_key = {\n\t\
      \tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"'\"},\n\t\tto   = {\"a\"\t , \"e\"\t , \"i\"\t , \"o\"\t , \"u\"\t , \"y\"\t , \"c\"}} ,\n}\n\nm[\"fro\"] = {\n\t\"Old French\",\n\t\"Q35222\",\n\t\"roa-oil\",\n\
      \totherNames = {\"Judeo-French\", \"Zarphatic\"},\n\tscripts = {\"Latn\", \"Hebr\"},\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"'\"},\n\t\tto   = {\"a\"\t , \"e\"\t , \"i\"\t , \"o\"\t\
      \ , \"u\"\t , \"y\"\t , \"c\"}} ,\n}\n\nm[\"frp\"] = {\n\t\"Franco-Provençal\",\n\t\"Q15087\",\n\t\"roa\",\n\totherNames = {\"Arpetan\", \"Arpitan\"},\n\tscripts = Latn,\n\tsort_key = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï]\", \"[óòôö]\", \"[úù\
      ûü]\", \"[ýỳŷÿ]\", \"ç\", \"'\"},\n\t\tto   = {\"a\"\t , \"e\"\t , \"i\"\t , \"o\"\t , \"u\"\t , \"y\"\t , \"c\"}} ,\n}\n\nm[\"frq\"] = {\n\t\"Forak\",\n\t\"Q5467173\",\n\t\"ngf-fin\",\n\tscripts = Latn,\n}\n\nm[\"frr\"] = {\n\t\"North Frisian\",\n\t\"\
      Q28224\",\n\t\"gmw-fri\",\n\tscripts = Latn,\n}\n\n-- \"frs\" IS NOT USED, SEE WT:LT\n\nm[\"frt\"] = {\n\t\"Fortsenal\",\n\t\"Q2666835\",\n\t\"poz-vnc\",\n\tscripts = Latn,\n}\n\nm[\"fse\"] = {\n\t\"Finnish Sign Language\",\n\t\"Q33225\",\n\t\"sgn\",\n\
      \tscripts = Latn, -- when documented\n}\n\nm[\"fsl\"] = {\n\t\"French Sign Language\",\n\t\"Q33302\",\n\t\"sgn-fsl\",\n\tscripts = Latn, -- when documented\n}\n\nm[\"fss\"] = {\n\t\"Finnish-Swedish Sign Language\",\n\t\"Q5450448\",\n\t\"sgn\",\n\tscripts\
      \ = Latn, -- when documented\n}\n\n-- \"fub\" IS TREATED AS \"ff\", SEE WT:LT\n\n-- \"fuc\" IS TREATED AS \"ff\", SEE WT:LT\n\nm[\"fud\"] = {\n\t\"East Futuna\",\n\t\"Q35334\",\n\t\"poz-pnp\",\n\totherNames = {\"Futunan\", \"Futunian\", \"Futuna\"},\n\t\
      scripts = Latn,\n}\n\n-- \"fue\" IS TREATED AS \"ff\", SEE WT:LT\n\n-- \"fuf\" IS TREATED AS \"ff\", SEE WT:LT\n\n-- \"fuh\" IS TREATED AS \"ff\", SEE WT:LT\n\n-- \"fui\" IS TREATED AS \"ff\", SEE WT:LT\n\nm[\"fuj\"] = {\n\t\"Ko\",\n\t\"Q35693\",\n\tscripts\
      \ = Latn,\n}\n\nm[\"fum\"] = {\n\t\"Fum\",\n\t\"Q11011870\",\n\t\"nic-bod\",\n\tscripts = Latn,\n}\n\nm[\"fun\"] = {\n\t\"Fulniô\",\n\t\"Q774441\",\n\t\"qfa-iso\",\n\tscripts = Latn,\n}\n\n-- \"fuq\" IS TREATED AS \"ff\", SEE WT:LT\n\nm[\"fur\"] = {\n\t\
      \"Friulian\",\n\t\"Q33441\",\n\t\"roa-rhe\",\n\tscripts = Latn,\n}\n\nm[\"fut\"] = {\n\t\"Futuna-Aniwa\",\n\t\"Q3064409\",\n\t\"poz-pnp\",\n\tscripts = Latn,\n}\n\nm[\"fuu\"] = {\n\t\"Furu\",\n\t\"Q3441160\",\n\tscripts = Latn,\n}\n\n-- \"fuv\" IS TREATED\
      \ AS \"ff\", SEE WT:LT\n\nm[\"fuy\"] = {\n\t\"Fuyug\",\n\t\"Q3073472\",\n\tscripts = Latn,\n}\n\nm[\"fvr\"] = {\n\t\"Fur\",\n\t\"Q33364\",\n\tscripts = Latn,\n}\n\nm[\"fwa\"] = {\n\t\"Fwâi\",\n\t\"Q3091331\",\n\t\"poz-cln\",\n\tscripts = Latn,\n}\n\nm[\"\
      fwe\"] = {\n\t\"Fwe\",\n\t\"Q5511159\",\n\tscripts = Latn,\n}\n\nreturn m</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:34.298Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fborrowed%2Fno-term&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=54385 t=1555362454199812
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '159'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:34 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 513114499, 244928072, 700519422
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/borrowed/no-term" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:07:35.196Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Fdata%2Fsymbols&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41889 t=1555362455081023
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:35 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1231.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 207039623, 554917053, 701993225
    body: !!binary |-
      
- recorded: 2019-04-15T21:07:35.370Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3AIPA%2Ftracking&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=36579 t=1555362455285329
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:35 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1235.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 591443924, 831069258, 701273093
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6315460\" pageid=\"6315460\" ns=\"828\" title=\"Module:IPA/tracking\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-11-21T19:51:11Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"fixing module error in [[pianoforte]]\" xml:space=\"preserve\">local export = {}\n\n--[[\n\tsymb is what is tracked. It can be a literal symbol or a Lua pattern.\n\tIf it is a table, tracking\
      \ is added for any of the symbols in the list.\n\t\n\tcat is the subtemplate that is added to the default path \"IPA/\" + language code + \"/\".\n]]\n\nlocal U = mw.ustring.char\n\nlocal syllabic = U(0x329)\n\nexport.tracking = {\n\ten = {\n\t\t{\n\t\t\
      \tsymb = \"iə\",\n\t\t\tcat = \"ambig\",\n\t\t},\n\t\t{\n\t\t\tsymb = { \"ɪi\", \"ʊu\", \"ɪj\", \"ʊw\" },\n\t\t\tcat = \"eeoo\",\n\t\t},\n\t\t{\n\t\t\tsymb = { \"r\" },\n\t\t\tcat = \"plain r\",\n\t\t},\n\t},\n\tcs = {\n\t\t{\n\t\t\tsymb = \"[mnrl]\" ..\
      \ syllabic,\n\t\t\tcat = \"syllabic-consonant\",\n\t\t},\n\t},\n\tps = {\n\t\t{\n\t\t\tsymb = \"ɤ\",\n\t\t\tcat = \"Pashto\",\n\t\t},\n\t},\n\tfa = {\n\t\t{\n\t\t\tsymb = \"ʔ\",\n\t\t\tcat = \"glottal-stop\",\n\t\t},\n\t},\n\t{\n\t\t{\n\t\t\tsymb = \"\"\
      ,\n\t\t\tcat = \"\",\n\t\t},\n\t},\n}\n\nfunction export.run_tracking(IPA, lang)\n\tif not IPA or IPA == \"\" then\n\t\treturn nil\n\tend\n\t\n\tlang = lang:getCode()\n\t\n\tif not export.tracking[lang] or type(export.tracking[lang]) ~= \"table\" then\n\
      \t\treturn nil\n\tend\n\t\n\tfor i, arguments in ipairs(export.tracking[lang]) do\n\t\tif type(arguments) == \"table\" then\n\t\t\tlocal required = { \"symb\", \"cat\" }\n\t\t\t\n\t\t\thasArgs = true\n\t\t\t\n\t\t\tfor i, arg in pairs(required) do\n\t\t\
      \t\tif not arguments[arg] or arguments[arg] == \"\" then\n\t\t\t\t\thasArgs = false\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\tif hasArgs == true then\n\t\t\t\tlocal symbols = arguments.symb\n\t\t\t\tlocal category = arguments.cat\n\t\t\t\t\n\t\t\t\tif type(symbols)\
      \ == \"string\" then\n\t\t\t\t\tsymbols = { symbols }\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tfor _, symbol in pairs(symbols) do\n\t\t\t\t\tif type(symbol) ~= \"string\" then\n\t\t\t\t\t\treturn nil\n\t\t\t\t\tend\n\t\t\t\t\tif mw.ustring.find(IPA, symbol) then\n\
      \t\t\t\t\t\trequire(\"Module:debug\").track(\"IPA/\" .. lang .. \"/\" .. category)\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:35.545Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Asyllables&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=34806 t=1555362455453338
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:35 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1343.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 509449676, 226294408, 696105331
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5882110\" pageid=\"5882110\" ns=\"828\" title=\"Module:syllables\"><revisions><rev user=\"Hazarasp\" timestamp=\"2018-08-21T12:20:37Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n\nlocal vowels = mw.loadData(\"Module:IPA/data/symbols\").vowels .. \"ᵻ\" .. \"ᵿ\"\n\nlocal U = mw.ustring.char\n\n--[[\nAdd diphthongs to\
      \ the list if they do not contain semivowel symbols: /j w ɰ ɥ/.\nDo not include non-syllabic diacritics: /au/, not /au̯/.\nThe module automatically does not count vowels with non-syllabic diacritics.\n]]--\nlocal diphthongs = {\n\t[\"de\"] = {\n\t\t\"\
      a[ɪʊ]\",\n\t\t\"ɔ[ʏɪ]\",\n\t\t},\n\t[\"ca\"] = {\t-- Catalan has diphthongs, but they are generally transcribed using\n\t\t\t\t-- /w/ and /j/, so do not need to be listed (see [[w:Catalan language#Diphthongs and triphthongs]].\n\t\t},\n\t[\"cs\"] = { --\
      \ [[w:Czech phonology#Diphthongs]]\n\t\t\"[aeo]u\",\n\t\t},\n\t[\"en\"] = { -- from [[Appendix:English pronunciation]] mostly, but /ʌɪ/ is from the OED\n\t\t\"[aɑeɛoɔʌ][ɪi]\",\n\t\t\"[ɑɒæo]e\",\n\t\t\"[əɐ]ʉ\",\n\t\t\"[aɒəoɔʌ]ʊ\",\n\t\t\"æo\",\n\t\t\"[ɛ\
      eɪiɔʊʉ]ə\",\t-- /iə/ is a diphthong in NZE, but a disyllabic sequence in GA.\n\t\t\t\t\t\t-- /ɪə/ is both a disyllabic sequence and a diphthong in old-fashioned RP.\n\t\t\"[aʌ][ʊɪ]ə\",\t-- May be a disyllabic sequence in some or all dialects?\n\t\t},\n\
      \t[\"fi\"] = {\t\t\t-- [[w:Finnish phonology#Diphthongs]]\n\t\t\"[ɑeouyæø]i\",\n\t\t\"[ɑoei]u\",\n\t\t\"[eiæø]y\",\n\t\t\"uo\",\n\t\t\"ie\",\n\t\t\"yø\",\n\t\t},\n\t[\"fr\"] = {\t\t\t-- French has diphthongs, but they are transcribed\n\t\t},\t\t\t\t--\
      \ with semivowel symbols: [[w:French phonology#Glides and diphthongs]].\n\t[\"grc\"] = {\n\t\t\"[aeyo]i\",\n\t\t\"[ae]u\",\n\t\t\"[ɛɔa]ː[iu]\",\n\t\t},\n\t[\"is\"] = {\t\t\t-- [[w:Icelandic phonology#Vowels]]\n\t\t\"[aeø][iɪy]\",\t-- Wikipedia is oddly\
      \ specific about the second element: ei and ai, but øɪ.\n\t\t\"[ao]u\",\n\t\t},\n\t[\"it\"] = {\n\t\t\"[aeɛoɔu]i\",\n\t\t\"[aeɛioɔ]u\",\n\t\t},\n\t[\"la\"] = {\n\t\t\"[eaou]i\",\n\t\t\"[eao]u\",\n\t\t\"[ao]e\",\n\t\t},\n\t[\"lb\"] = {\n\t\t\"[iu]ə\",\n\
      \t\t\"[ɜoæɑ]ɪ\",\n\t\t\"[əæɑ]ʊ\",\n\t},\n\t[\"sl\"] = {\t\t\t-- No diphthongs, properly speaking; sequences of a vowel, /j/ and /w/ though\n\t},\n\t[\"sk\"] = {\t\t\t-- Slovak has rising diphthongs, /i̯e, i̯a, i̯u, u̯o/, which are probably always spelled\
      \ with the nonsyllabic diacritic, so do not need to be listed.\n\t},\n\t[\"ru\"] = {\t\t\t-- No diphthongs, properly speaking; sequences of a vowel and /j/ though.\n\t},\n\t[\"sq\"] = {\t\t\t-- [[w:Albanian language#Vowels]] doesn't mention anything about\
      \ diphthongs.\n\t},\n\t[\"ug\"] = {\t\t\t-- No diphthongs.\n\t},\n}\n\n--[[ No use for this at the moment, though it is an interesting catalogue.\n\tIt might be usable for phonetic transcriptions.\n\tDiacritics added to vowels:\n\tinverted breve above,\
      \ inverted breve below,\n\tup tack, down tack,\n\tleft tack, right tack,\n\tdiaeresis (above), diaeresis below,\n\tright half ring, left half ring,\n\tplus sign below, minus sign below,\n\tcombining x above, rhotic hook,\n\ttilde (above), tilde below\n\
      \tligature tie (combining double breve), ligature tie below\n\t]]\nlocal diacritics = U(0x311)..U(0x32F)\n\t..U(0x31D)..U(0x31E)\n\t..U(0x318)..U(0x319)\n\t..U(0x308)..U(0x324)\n\t..U(0x339)..U(0x31C)\n\t..U(0x31F)..U(0x320)\n\t..U(0x33D)..U(0x2DE)\n\t\
      ..U(0x303)..U(0x330)\n\t..U(0x361)..U(0x35C)\n\n--[[\ncombining acute and grave tone marks, circumflex\n]]--\nlocal tone = \"[\" .. U(0x341) .. U(0x340) ..U (0x302) .. \"]\"\nlocal nonsyllabicDiacritics = U(0x311) .. U(0x32F)\nlocal syllabicDiacritics\
      \ = U(0x0329) .. U(0x030D)\nlocal ties = U(0x361) .. U(0x35C)\n\n-- long, half-long, extra short\nlocal lengthDiacritics = U(0x2D0) .. U(0x2D1) .. U(0x306)\nlocal vowel = \"[\" .. vowels .. \"]\" .. tone .. \"?\"\nlocal tie = \"[\" .. ties .. \"]\"\nlocal\
      \ nonsyllabicDiacritic = \"[\" .. nonsyllabicDiacritics .. \"]\"\nlocal syllabicDiacritic = \"[\" .. syllabicDiacritics .. \"]\"\n\nlocal UTF8Char = \"[\\1-\\127\\194-\\244][\\128-\\191]*\"\n\n\nfunction export.getVowels(remainder, lang)\n\tif string.find(remainder,\
      \ \"^[%\\[/]?%-\") or string.find(remainder, \"%-[%\\[/]?$\") then\n\t\treturn nil\n\tend\t-- If a hyphen is at the beginning or end of the transcription, do not count syllables.\n\t\n\tlocal count = 0\n\tlocal diphs = diphthongs[lang:getCode()] or {}\n\
      \t\n\tremainder = mw.ustring.toNFD(remainder)\n\tremainder = string.gsub(remainder, \"%((.*)%)\", \"%1\") -- Remove parentheses.\n\n\twhile remainder ~= \"\" do\n\t\t-- Ignore nonsyllabic vowels\n\t\tremainder = mw.ustring.gsub(remainder, \"^\" .. vowel\
      \ .. nonsyllabicDiacritic, \"\")\n\t\t\n\t\tlocal m =\n\t\t\tmw.ustring.match(remainder, \"^.\" .. syllabicDiacritic) or  -- Syllabic consonant\n\t\t\tmw.ustring.match(remainder, \"^\" .. vowel .. tie .. vowel)  -- Tie bar\n\t\t\n\t\t-- Starts with a recognised\
      \ diphthong?\n\t\tfor _, diph in ipairs(diphs) do\n\t\t\tif m then\n\t\t\t\tbreak\n\t\t\tend\n\t\t\t\n\t\t\tm = m or mw.ustring.match(remainder, \"^\" .. diph)\n\t\tend\n\t\t\n\t\t-- If we haven't found anything yet, just match on a single vowel\n\t\t\
      m = m or mw.ustring.match(remainder, \"^\" .. vowel)\n\t\t\n\t\tif m then\n\t\t\t-- Found a vowel, add it\n\t\t\tcount = count + 1\n\t\t\tremainder = string.sub(remainder, #m + 1)\n\t\telse\n\t\t\t-- Found a non-vowel, skip it\n\t\t\tremainder = string.gsub(remainder,\
      \ \"^\" .. UTF8Char, \"\")\n\t\tend\n\tend\n\t\n\tif count ~= 0 then return count end\n\t\n\treturn nil\n\t\nend\n\n\nfunction export.countVowels2Test(frame)\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {default = \"\"},\n\t}\n\t\n\tlocal\
      \ args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\tlocal lang = require(\"Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal count = export.getVowels(args[2], lang)\n\t\n\treturn\
      \ 'The text \"' .. args[2] .. '\" contains ' .. count .. ' vowels.'\nend\n\n\nlocal function countVowels(text)\n\ttext = mw.ustring.toNFD(text) or error(\"Invalid UTF-8\")\n\t\n\tlocal _, count = mw.ustring.gsub(text, vowel, \"\")\n\tlocal _, sequenceCount\
      \ = mw.ustring.gsub(text, vowel..\"+\", \"\")\n\tlocal _, nonsyllabicCount = mw.ustring.gsub(text, vowel .. nonsyllabicDiacritic, \"\")\n\tlocal _, tieCount = mw.ustring.gsub(text, vowel .. tie .. vowel, \"\")\n\t\n\tlocal diphthongCount = count - (nonsyllabicCount\
      \ + tieCount)\n\t\n\treturn count, sequenceCount, diphthongCount\nend\n\n\nlocal function countDiphthongs(text, lang)\n\ttext = mw.ustring.toNFD(text) or error(\"Invalid UTF-8\")\n\t\n\tlocal diphthongs = diphthongs[lang:getCode()] or {}\n\t\n\tlocal _,\
      \ count\n\tlocal total = 0\n\t\n\tif diphthongs then\n\t\tfor i, diphthong in pairs(diphthongs) do\n\t\t\t_, count = mw.ustring.gsub(text, diphthong, \"\")\n\t\t\ttotal = total + count\n\t\tend\n\tend\n\t\n\treturn total\nend\n\n-- Used by [[Module:IPA]]\n\
      function export.hasDiphthongs(lang)\n\tif  (diphthongs[lang:getCode()]) then\n\t\treturn true\n\tend\n\treturn false\nend\n\nfunction export.countVowels(frame)\n\tlocal params = {\n\t\t[1] = {default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\"\
      ).process(frame.args, params)\n\t\n\tlocal count, sequenceCount, diphthongCount = countVowels(args[1])\n\t\n\tlocal outputs = {}\n\ttable.insert(outputs, (count or 'an unknown number of') .. ' vowels')\n\ttable.insert(outputs, (sequenceCount or 'an unknown\
      \ number of') .. ' vowel sequences')\n\ttable.insert(outputs, (diphthongCount or 'an unknown number of') .. ' vowels or vowels and diphthongs')\n\t\n\treturn 'The text \"' .. args[1] .. '\" contains ' .. mw.text.listToText(outputs) .. \".\"\nend\n\n\n\
      function export.countVowelsDiphthongs(frame)\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {default = \"\"},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame.args, params)\n\t\n\tlocal lang = require(\"Module:languages\"\
      ).getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\tlocal vowels = countVowels(args[2])\n\tlocal count = vowels - countDiphthongs(args[2], lang) or 0\n\t\n\tlocal out = 'The text \"' .. args[2] .. '\" contains ' .. (count or 'an\
      \ unknown number of')\n\t\n\tif count == 1 then\n\t\tout = out .. ' vowel or diphthong.'\n\telse\n\t\tout = out .. ' vowels or diphthongs.'\n\tend\n\t\n\treturn out\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:35.947Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Arhymes&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=44321 t=1555362455853185
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:35 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1227.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 404354016, 498970894, 693224566
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4542843\" pageid=\"4542843\" ns=\"828\" title=\"Module:rhymes\"><revisions><rev user=\"Benwing2\" timestamp=\"2019-03-27T14:39:13Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"support 1= for language as well as lang=\" xml:space=\"preserve\">local export = {}\n\nlocal m_IPA = require(\"Module:IPA\")\n\nlocal function make_rhyme_link(lang, link_IPA, display_IPA)\n\tif not link_IPA\
      \ then\n\t\treturn table.concat{'[[Rhymes:', lang:getCanonicalName(), '|', lang:getCanonicalName(), ']]'}\n\telse\n\t\tlocal formatted_IPA, cat = m_IPA.format_IPA(lang, display_IPA or link_IPA, true)\n\t\treturn table.concat{'[[Rhymes:', lang:getCanonicalName(),\
      \ '/', link_IPA, '|', formatted_IPA, ']]', cat}\n\tend\nend\n\nfunction export.show_row(frame)\n\tlocal params = {\n\t\t[1] = {required = true},\n\t\t[2] = {required = true},\n\t\t[3] = {},\n\t}\n\t\n\tlocal args = frame.getParent and frame:getParent().args\
      \ or frame\n\t\n\tif (not args[1] or args[1] == '') and mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\treturn '[[Rhymes:English/aɪmz|&lt;span class=\"IPA\"&gt;-aɪmz&lt;/span&gt;]]'\n\tend\n\t\n\tlocal args = require(\"Module:parameters\").process(args,\
      \ params)\n\tlocal lang = require(\"Module:languages\").getByCode(args[1]) or require(\"Module:languages\").err(args[1], 1)\n\t\n\treturn make_rhyme_link(lang, args[2], '-' .. args[2]) .. (args[3] and (\" (''\" .. args[3] .. \"'')\") or '')\nend\n\nfunction\
      \ export.show(frame)\n\tlocal args = frame.getParent and frame:getParent().args or frame\n\tlocal compat = args[\"lang\"]\n\tlocal offset = compat and 0 or 1\n\t\n\tlocal params = {\n\t\t[1 + offset] = {required = true, list = true},\n\t\t[compat and \"\
      lang\" or 1] = {required = true},\n\t}\n\t\n\tif (not args[1 + offset] or args[1 + offset] == '') and mw.title.getCurrentTitle().nsText == \"Template\" then\n\t\treturn 'Rhymes: [[Rhymes:English/aɪmz|&lt;span class=\"IPA\"&gt;-aɪmz&lt;/span&gt;]]'\n\t\
      end\n\t\n\tlocal args = require(\"Module:parameters\").process(args, params)\n\tlocal lang = args[compat and \"lang\" or 1]\n\tlocal lang = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, compat and \"lang\" or\
      \ 1)\n\t\n\tlocal links = {}\n\tfor _, r in ipairs(args[1 + offset]) do\n\t\ttable.insert(links, make_rhyme_link(lang, r, '-' .. r))\n\tend\n\t\n\treturn \"Rhymes: \" .. table.concat(links, ', ')\nend\n\n-- {{rhymes nav}}\nfunction export.show_nav(frame)\n\
      \t-- Gather parameters\n\tlocal args = frame:getParent().args\n\tlocal lang = args[1] or (mw.title.getCurrentTitle().nsText == \"Template\" and \"und\") or error(\"Language code has not been specified. Please pass parameter 1 to the template.\")\n\tlang\
      \ = require(\"Module:languages\").getByCode(lang) or require(\"Module:languages\").err(lang, 1)\n\t\n\tlocal parts = {}\n\tlocal i = 2\n\t\n\twhile args[i] do\n\t\tlocal part = args[i]; if part == \"\" then part = nil end\n\t\ttable.insert(parts, part)\n\
      \t\ti = i + 1\n\tend\n\t\n\t-- Create steps\n\tlocal steps = {\"» [[Wiktionary:Rhymes|Rhymes]]\", \"» \" .. make_rhyme_link(lang)}\n\tlocal categories = {}\n\t\n\tif #parts &gt; 0 then\n\t\tlocal last = parts[#parts]\n\t\tparts[#parts] = nil\n\t\tlocal\
      \ prefix = \"\"\n\n\t\tfor i, part in ipairs(parts) do\n\t\t\tprefix = prefix .. part\n\t\t\tparts[i] = prefix\n\t\tend\n\t\t\n\t\tfor _, part in ipairs(parts) do\n\t\t\ttable.insert(steps, \"» \" .. make_rhyme_link(lang, part .. '-', '-' .. part .. '-'))\n\
      \t\tend\n\t\t\n\t\tif last == \"-\" then\n\t\t\ttable.insert(steps, \"» \" .. make_rhyme_link(lang, prefix, '-' .. prefix))\n\t\t\ttable.insert(categories, \"[[Category:\" .. lang:getCanonicalName() .. \" rhymes\" .. (prefix == \"\" and \"\" or \"/\" ..\
      \ prefix .. \"-\") .. \"| ]]\")\n\t\telseif mw.title.getCurrentTitle().text == lang:getCanonicalName() .. \"/\" .. prefix .. last .. \"-\" then\n\t\t\ttable.insert(steps, \"» \" .. make_rhyme_link(lang, prefix .. last .. '-', \"-\" .. prefix .. last ..\
      \ \"-\"))\n\t\t\ttable.insert(categories, \"[[Category:\" .. lang:getCanonicalName() .. \" rhymes/\" .. prefix .. last .. \"-|-]]\")\n\t\telse\n\t\t\ttable.insert(steps, \"» \" .. make_rhyme_link(lang, prefix .. last, \"-\" .. prefix .. last))\n\t\t\t\
      table.insert(categories, \"[[Category:\" .. lang:getCanonicalName() .. \" rhymes\" .. (prefix == \"\" and \"\" or \"/\" .. prefix .. \"-\") .. \"|\" .. last .. \"]]\")\n\t\tend\n\telseif lang ~= \"und\" then\n\t\ttable.insert(categories, \"[[Category:\"\
      \ .. lang:getCanonicalName() .. \" rhymes| ]]\")\n\tend\n\t\n\tframe:callParserFunction(\"DISPLAYTITLE\", mw.title.getCurrentTitle().fullText:gsub(\"/(.+)$\", '/&lt;span class=\"IPA\"&gt;%1&lt;/span&gt;'))\n\t\n\treturn table.concat(steps, \" \") .. table.concat(categories)\n\
      end\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:36.736Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aheadword%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45477 t=1555362456625157
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:36 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 568062880, 820204631, 685141696
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6074448\" pageid=\"6074448\" ns=\"828\" title=\"Module:headword/data\"><revisions><rev user=\"Surjection\" timestamp=\"2019-01-11T21:27:17Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"they are not lemmas just because you say they are\" xml:space=\"preserve\">local data = {}\n\ndata.invariable = {\n\t\"cmavo\",\n\t\"cmene\",\n\t\"fu'ivla\",\n\t\"gismu\",\n\t\"Han tu\"\
      ,\n\t\"hanzi\",\n\t\"hanja\",\n\t\"jyutping\",\n\t\"kanji\",\n\t\"lujvo\",\n\t\"phrasebook\",\n\t\"pinyin\",\n\t\"rafsi\",\n\t\"romaji\",\n}\n\ndata.lemmas = {\n\t\"abbreviations\",\n\t\"acronyms\",\n\t\"adjectives\",\n\t\"adnominals\",\n\t\"adpositions\"\
      ,\n\t\"adverbs\",\n\t\"affixes\",\n\t\"ambipositions\",\n\t\"articles\",\n\t\"circumfixes\",\n\t\"circumpositions\",\n\t\"classifiers\",\n\t\"cmavo\",\n\t\"cmavo clusters\",\n\t\"cmene\",\n\t\"combining forms\",\n\t\"conjunctions\",\n\t\"counters\",\n\t\
      \"determiners\",\n\t\"diacritical marks\",\n\t\"equative adjectives\",\n\t\"fu'ivla\",\n\t\"gismu\",\n\t\"Han characters\",\n\t\"Han tu\",\n\t\"hanzi\",\n\t\"hanja\",\n\t\"idioms\",\n\t\"infixes\",\n\t\"interfixes\",\n\t\"initialisms\",\n\t\"interjections\"\
      ,\n\t\"kanji\",\n\t\"letters\",\n\t\"ligatures\",\n\t\"lujvo\",\n\t\"morphemes\",\n\t\"non-constituents\",\n\t\"nouns\",\n\t\"numbers\",\n\t\"numeral symbols\",\n\t\"numerals\",\n\t\"particles\",\n\t\"phrases\",\n\t\"postpositions\",\n\t\"predicatives\"\
      ,\n\t\"prefixes\",\n\t\"prepositions\",\n\t\"prepositional phrases\",\n\t\"preverbs\",\n\t\"pronominal adverbs\",\n\t\"pronouns\",\n\t\"proverbs\",\n\t\"proper nouns\",\n\t\"punctuation marks\",\n\t\"relatives\",\n\t\"roots\",\n\t\"stems\",\n\t\"suffixes\"\
      ,\n\t\"syllables\",\n\t\"symbols\",\n\t\"verbs\",\n}\n\ndata.nonlemmas = {\n\t\"active participles\",\n\t\"adjectival participles\",\n\t\"adjective forms\",\n\t\"adjective comparative forms\", -- TODO: replace with \"comparative adjectives\" or \"comparative\
      \ adjective forms\", depending on which one the word is\n\t\"adjective feminine forms\",\n\t\"adjective equative forms\",\n\t\"adjective plural forms\",\n\t\"adjective superlative forms\", -- TODO: replace with \"superlative adjectives\" or \"superlative\
      \ adjective forms\", depending on which one the word is\n\t\"adverb forms\",\n\t\"adverb comparative forms\", -- TODO: replace with \"comparative adverbs\" or \"comparative adverb forms\", depending on which one the word is\n\t\"adverb superlative forms\"\
      , -- TODO: replace with \"superlative adverbs\" or \"superlative adverb forms\", depending on which one the word is\n\t\"adverbial participles\",\n\t\"agent participles\",\n\t\"article forms\",\n\t\"circumfix forms\",\n\t\"combined forms\",\n\t\"comparative\
      \ adjective forms\",\n\t\"comparative adjectives\",\n\t\"comparative adverb forms\",\n\t\"comparative adverbs\",\n\t\"contractions\",\n\t\"converbs\",\n\t\"determiner comparative forms\",\n\t\"determiner forms\",\n\t\"determiner superlative forms\",\n\t\
      \"diminutive nouns\",\n\t\"future participles\",\n\t\"gerunds\",\n\t\"infinitive forms\",\n\t\"infinitives\",\n\t\"interjection forms\",\n\t\"jyutping\",\n\t\"kanji readings\",\n\t\"misspellings\",\n\t\"negative participles\",\n\t\"nominal participles\"\
      ,\n\t\"noun case forms\",\n\t\"noun dual forms\",\n\t\"noun forms\",\n\t\"noun plural forms\",\n\t\"noun possessive forms\",\n\t\"noun singulative forms\",\n\t\"numeral forms\",\n\t\"participles\",\n\t\"participle forms\",\n\t\"particle forms\",\n\t\"\
      passive participles\",\n\t\"past active participles\",\n\t\"past participles\",\n\t\"past participle forms\",\n\t\"past passive participles\",\n\t\"perfect active participles\",\n\t\"perfect participles\",\n\t\"perfect passive participles\",\n\t\"pinyin\"\
      ,\n\t\"plurals\",\n\t\"postposition forms\",\n\t\"prefix forms\",\n\t\"preposition contractions\",\n\t\"preposition forms\",\n\t\"prepositional pronouns\",\n\t\"present active participles\",\n\t\"present participles\",\n\t\"present passive participles\"\
      ,\n\t\"pronoun forms\",\n\t\"pronoun possessive forms\",\n\t\"proper noun forms\",\n\t\"proper noun plural forms\",\n\t\"rafsi\",\n\t\"romanizations\",\n        \"root forms\",\n\t\"singulatives\",\n\t\"suffix forms\",\n\t\"superlative adjective forms\"\
      ,\n\t\"superlative adjectives\",\n\t\"superlative adverb forms\",\n\t\"superlative adverbs\",\n\t\"verb forms\",\n\t\"verbal nouns\",\n}\n\ndata.notranslit = {\n\t\"ams\",\n\t\"az\",\n\t\"bbc\",\n\t\"bug\",\n\t\"cia\",\n\t\"cjm\",\n\t\"cmn\",\n\t\"hak\"\
      ,\n\t\"ja\",\n\t\"kzg\",\n\t\"lad\",\n\t\"lzh\",\n\t\"ms\",\n\t\"mul\",\n\t\"mvi\",\n\t\"nan\",\n\t\"oj\",\n\t\"okn\",\n\t\"pi\",\n\t\"ro\",\n\t\"ryn\",\n\t\"rys\",\n\t\"ryu\",\n\t\"sh\",\n\t\"tgt\",\n\t\"th\",\n\t\"tkn\",\n\t\"tly\",\n\t\"und\",\n\t\"\
      vi\",\n\t\"xug\",\n\t\"yue\",\n\t\"yoi\",\n\t\"yox\",\n\t\"za\",\n\t\"zh\",\n}\n\n-- Script codes for which a script-tagged display title will be added.\t\ndata.toBeTagged = {\n\t\"Ahom\",\n\t\"Arab\",\n\t\"Avst\",\n\t\"Bali\",\n\t\"Cham\",\n\t\"Copt\"\
      ,\n\t\"Kali\",\n\t\"Hani\",\n\t\"Hebr\",\n\t\"Lana\",\n\t\"Linb\",\n\t\"Mand\",\n\t\"Mong\",\n\t\"polytonic\",\n\t\"Rjng\",\n\t\"Samr\",\n\t\"Sund\",\n\t\"Sylo\",\n\t\"Tang\",\n\t\"Tavt\",\n\t\"Xsux\",\n}\n\nfor key, list in pairs(data) do\n\tdata[key]\
      \ = require(\"Module:utils\").list_to_set(list)\nend\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:36.950Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Autils&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=56955 t=1555362456839898
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:36 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 212370994, 235270704, 699016367
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4882600\" pageid=\"4882600\" ns=\"828\" title=\"Module:utils\"><revisions><rev user=\"Metaknowledge\" timestamp=\"2017-09-23T01:00:56Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Protected &quot;[[Module:utils]]&quot;: Highly visible template/module ([Edit=Allow only autoconfirmed users] (indefinite) [Move=Allow only autoconfirmed users] (indefinite))\" xml:space=\"\
      preserve\">--[=[\n  Module:utils v0.3.1\n  Date: 2015-08-14\n\n  This module contains some common useful functions.\n  Fill free to add another universal functions here.\n]=]--\n\nlocal export = {}\n\n-- Function to clone table (sometimes it works better\
      \ then mw.clone)\nfunction export.clone(original)\n    local copy = {}\n    for key, value in pairs(original) do\n        copy[key] = value\n    end\n    return copy\nend\n\n-- Function to get current PAGENAME and related\nfunction export.get_base()\n\t\
      local PAGENAME = mw.title.getCurrentTitle().text\n\tlocal SUBPAGENAME = mw.title.getCurrentTitle().subpageText\n\tlocal NAMESPACE = mw.title.getCurrentTitle().nsText\n\t\n\tif NAMESPACE == 'User' or NAMESPACE == 'Участник' then\n\t\treturn SUBPAGENAME\n\
      \tend\n\treturn PAGENAME\nend\n\n-- Function to iterate table with sorted keys (sorting function can be different)\nfunction export.spairs(t, order)\n    -- collect the keys\n    local keys = {}\n    for k in pairs(t) do keys[#keys+1] = k end\n    -- sort\n\
      \    if order then\n        table.sort(keys, function(a,b) return order(t, a, b) end)\n    else\n        table.sort(keys)\n    end\n    -- return the iterator function\n    local i = 0\n    return function()\n        i = i + 1\n        if keys[i] then\n\
      \            return keys[i], t[keys[i]]\n        end\n    end\nend\n\n-- Functions to measure working time of scripts (start)\nfunction export.start()\n\texport.started = os.clock()\nend\n\n-- Functions to measure working time of scripts (stop)\nfunction\
      \ export.stop(desc)\n\texport.stoped = os.clock()\n\texport.delta = export.stoped - export.started\n\tif desc == nil then\n\t\tdesc = 'time delta'\n\tend\n\tmw.log('™ ' .. desc .. ' = ' .. export.delta)\nend\n\n-- Function to find common part (length)\
      \ of two strings\n-- (common part from the beginning of strings)\nfunction export.find_common(str_1, str_2)\n\tif not str_1 or not str_2 then\n\t\treturn 1\n\tend\n\tfor pos = 1, #str_1 do\n\t    local char_1 = str_1:sub(pos, pos)\n\t    local char_2 =\
      \ str_2:sub(pos, pos)\n\t    if char_1 ~= char_2 then\n\t    \treturn pos\n\t    end\n\tend\n\treturn 1\nend\n\n-- Function that allows easily add values into dict of dicts of lists\n-- Example of this structure:\n--   dict = {\n--     key1 = {\n--   \
      \    sub_key1 = {value1, value2, value3},\n--       sub_key2 = {value4, value5},\n--     },\n--     key2 = {\n--       sub_key3 = {value6},\n--       sub_key4 = {value7, value8},\n--     },\n--   }\nfunction export.put_value(dict, key, sub_key, value)\n\
      \tif not dict[key] then\n\t\tdict[key] = {}\n\tend\n\tif not dict[key][sub_key] then\n\t\tdict[key][sub_key] = {}\n\tend\n\ttable.insert(dict[key][sub_key], value)\nend\n\n-- Compare two items, recursively comparing lists.\n-- FIXME, doesn't work for tables\
      \ that aren't lists.\nfunction export.equals(x, y)\n    if type(x) == \"table\" and type(y) == \"table\" then\n        if #x ~= #y then\n            return false\n        end \n        for key, value in ipairs(x) do\n            if not export.equals(value,\
      \ y[key]) then\n                return false\n            end\n        end\n        return true\n    end\n    return x == y\nend\n\n-- true if list contains item\nfunction export.contains(tab, item)\n    for _, value in pairs(tab) do\n        if export.equals(value,\
      \ item) then\n            return true\n        end\n    end\n    return false\nend\n\n-- append to list if element not already present\nfunction export.insert_if_not(tab, item)\n    if not export.contains(tab, item) then\n        table.insert(tab, item)\n\
      \    end\nend\n\n-- convert list to set\nfunction export.list_to_set(list)\n\tlocal set = {}\n\tfor _, item in ipairs(list) do\n\t\tset[item] = true\n\tend\n\treturn set\nend\n\n-- Inhibit Regular Expression magic characters ^$()%.[]*+-?)\nfunction export.escape(value)\n\
      \    -- Prefix every non-alphanumeric character (%W) with a % escape character, \n    -- where %% is the % escape, and %1 is original character\n    return mw.ustring.gsub(value, \"(%W)\",\"%%%1\")\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:37.132Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Apalindromes&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48337 t=1555362457034292
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1283.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 584460999, 506697232, 697347319
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5783859\" pageid=\"5783859\" ns=\"828\" title=\"Module:palindromes\"><revisions><rev user=\"TheDaveRoss\" timestamp=\"2016-10-25T20:04:19Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Changed protection level for &quot;[[Module:palindromes]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors\
      \ and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefini...\" xml:space=\"preserve\">local export = {}\n\nlocal data = mw.loadData(\"Module:palindromes/data\")\n\nlocal function ignoreCharacters(term, lang, sc,\
      \ langdata)\n\tterm = mw.ustring.lower(term)\n\tterm = mw.ustring.gsub(term, \"[ ,%.%?!%%%-'\\\"]\", \"\")\n\t\n\t-- Language-specific substitutions\n\n\t-- Ignore entire scripts (e.g. romaji in Japanese)\n\tif langdata.ignore then\n\t\tsc_name = sc and\
      \ sc:getCode() or require(\"Module:scripts\").findBestScript(term, lang):getCode()\n\t\tfor _, script in ipairs(langdata.ignore) do\n\t\t\tif script == sc_name then\n\t\t\t\treturn \"\"\n\t\t\tend\n\t\tend\n\tend\n\t\n\tfor i, from in ipairs(langdata.from\
      \ or {}) do\n\t\tterm = mw.ustring.gsub(term, from, langdata.to[i] or \"\")\n\tend\n\t\n\treturn term\nend\n\nfunction export.is_palindrome(term, lang, sc)\n\tlocal langdata = data[lang:getCode()] or {}\n\n\t-- Affixes aren't palindromes\n\tif mw.ustring.find(term,\
      \ \"^%-\") or mw.ustring.find(term, \"%-$\") then\n\t\treturn false\n\tend\n\t\n\t-- Remove punctuation and casing\n\tterm = ignoreCharacters(term, lang, sc, langdata)\n\tlocal len = mw.ustring.len(term)\n\t\n\tif langdata.allow_repeated_char then\n\t\t\
      -- Ignore single-character terms\n\t\tif len &lt; 2 then\n\t\t\treturn false\n\t\tend\n\telse\n\t\t-- Ignore terms that consist of just one character repeated\n\t\t-- This also excludes terms consisting of fewer than 3 characters\n\t\tif term == mw.ustring.rep(mw.ustring.sub(term,\
      \ 1, 1), len) then\n\t\t\treturn false\n\t\tend\n\tend\n\t\n\tlocal charlist = {}\n\t\n\tfor c in mw.ustring.gmatch(term, \".\") do\n\t\ttable.insert(charlist, c)\n\tend\n\t\n\tfor i = 1, math.floor(len / 2) do\n        if charlist[i] ~= charlist[len -\
      \ i + 1] then\n        \treturn false\n        end\n    end\n    \n    return true\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:37.316Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Apalindromes%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48329 t=1555362457216817
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1339.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 794431493, 502471122, 691850286
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5786862\" pageid=\"5786862\" ns=\"828\" title=\"Module:palindromes/data\"><revisions><rev user=\"PiefPafPier\" timestamp=\"2018-08-08T16:43:32Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"from [[:fy:Module:palindromes/data]]\" xml:space=\"preserve\">local u = mw.ustring.char\n\nlocal data = {\n\t[\"ar\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"[أإآ]\"\
      ,\n\t\t\t\"ؤ\",\n\t\t\t\"[ئى]\",\n\t\t\t\"ة\",\n\t\t\t\"ء\",\n\t\t},\n\t\tto = {\n\t\t\t\"ا\",\n\t\t\t\"و\",\n\t\t\t\"ي\",\n\t\t\t\"ه\",\n\t\t},\n\t},\n\t[\"arc\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"ם\",\n\t\t\t\"ן\",\n\t\t\t\"\
      ך\",\n\t\t\t\"ף\",\n\t\t\t\"ץ\",\n\t\t\t\"ﭏ\",\n\t\t\t\"װ\",\n\t\t\t\"ױ\",\n\t\t\t\"ײ\",\n\t\t\t\"[״׳־]\",\n\t\t},\n\t\tto = {\n\t\t\t\"מ\",\n\t\t\t\"נ\",\n\t\t\t\"כ\", \n\t\t\t\"פ\",\n\t\t\t\"צ\",\n\t\t\t\"אל\",\n\t\t\t\"וו\",\n\t\t\t\"וי\",\n\t\t\t\"\
      יי\",\n\t\t}\n\t},\n\t[\"axm\"] = {\n\t\tfrom = {\"ու\"},\n\t\tto   = {\"ŭ\"},\n\t},\n\t[\"ca\"] = {\n\t\tfrom = {\"à\", \"[èé]\", \"[íï]\", \"[òó]\", \"[úü]\", \"ç\", \"l·l\"},\n\t\tto   = {\"a\", \"e\",    \"i\",    \"o\",    \"u\",    \"c\", \"ll\"\
      },\n\t},\n\t[\"cmn\"] = {ignore = {\"Latn\"}},\n\t[\"cs\"] = {\n\t\tfrom = {\"á\", \"é\", \"í\", \"ó\", \"[úů]\", \"ý\", \"ch\"},\n\t\tto   = {\"a\", \"e\", \"i\", \"o\", \"u\",    \"y\", \"χ\"},\n\t},\n\t[\"de\"] = {\n\t\tfrom = {\"ä\", \"ö\", \"ü\",\
      \ \"[ßẞ]\"},\n\t\tto   = {\"a\", \"o\", \"u\", \"ss\"},\n\t},\n\t[\"el\"] = {\n\t\tfrom = {\n\t\t\t\"[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇᾱᾰἈᾈἌᾌἊᾊἎᾎἉᾉἍᾍἋᾋἏᾏᾹᾸ]\", --uppercase characters are included due to this bug: https://bugs.php.net/bug.php?id=69267\n\t\t\t\"[έ\
      ὲἐἔἒἑἕἓἘἜἚἙἝἛ]\",\n\t\t\t\"[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗἨᾘἬᾜἪᾚἮᾞἩᾙἭᾝἫᾛἯᾟ]\",\n\t\t\t\"[ίὶῖἰἴἲἶἱἵἳἷϊΐῒῗῑῐἸἼἺἾἹἽἻἿῙῘ]\", \n\t\t\t\"[όὸὀὄὂὁὅὃὈὌὊὉὍὋ]\",\n\t\t\t\"[ύὺῦὐὔὒὖὑὕὓὗϋΰῢῧῡῠὙὝὛὟῩῨ]\",\n\t\t\t\"[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧὨᾨὬᾬὪᾪὮᾮὩᾩὭᾭὫᾫὯᾯ]\",\n\t\t\t\"[ῥῤῬ]\"\
      ,\n\t\t\t\"[ς]\",\n\t\t\t\"[́͂]\"\n\t\t},\n\t\tto = {\n\t\t\t\"α\",\n\t\t\t\"ε\",\n\t\t\t\"η\",\n\t\t\t\"ι\",\n\t\t\t\"ο\",\n\t\t\t\"υ\",\n\t\t\t\"ω\",\n\t\t\t\"ρ\",\n\t\t\t\"σ\"\n\t\t},\n\t},\n\t[\"en\"] = {\n\t\tfrom = {\"[äàáâåā]\", \"[ëèéêē]\", \"\
      [ïìíîī]\", \"[öòóôō]\", \"[üùúûū]\", \"æ\" , \"œ\" , \"[çč]\", \"ñ\", \"'\"},\n\t\tto   = {\"a\",        \"e\",       \"i\",       \"o\",       \"u\",       \"ae\", \"oe\", \"c\",    \"n\"},\n\t},\n\t[\"fr\"] = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"\
      [íìîï]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"ç\", \"æ\",  \"œ\", \"'\"},\n\t\tto   = {\"a\",       \"e\",     \"i\",      \"o\",      \"u\",      \"y\",      \"c\", \"ae\", \"oe\"},\n\t},\n\t[\"fy\"] = {\n\t\tfrom = {\"[áàâä]\", \"[éèêë]\", \"[íìîï\
      ]\", \"[óòôö]\", \"[úùûü]\", \"[ýỳŷÿ]\", \"æ\",  \"'\"},\n\t\tto   = {\"a\",       \"e\",     \"i\",      \"o\",      \"u\",      \"y\",      \"ae\"},\n\t},\n\t[\"grc\"] = {\n\t\tfrom = {\n\t\t\t\"[ᾳάᾴὰᾲᾶᾷἀᾀἄᾄἂᾂἆᾆἁᾁἅᾅἃᾃἇᾇᾱᾰἈᾈἌᾌἊᾊἎᾎἉᾉἍᾍἋᾋἏᾏᾹᾸ]\", --uppercase\
      \ characters are included due to this bug: https://bugs.php.net/bug.php?id=69267\n\t\t\t\"[έὲἐἔἒἑἕἓἘἜἚἙἝἛ]\",\n\t\t\t\"[ῃήῄὴῂῆῇἠᾐἤᾔἢᾒἦᾖἡᾑἥᾕἣᾓἧᾗἨᾘἬᾜἪᾚἮᾞἩᾙἭᾝἫᾛἯᾟ]\",\n\t\t\t\"[ίὶῖἰἴἲἶἱἵἳἷϊΐῒῗῑῐἸἼἺἾἹἽἻἿῙῘ]\", \n\t\t\t\"[όὸὀὄὂὁὅὃὈὌὊὉὍὋ]\",\n\t\t\t\"[ύὺῦὐὔὒ\
      ὖὑὕὓὗϋΰῢῧῡῠὙὝὛὟῩῨ]\",\n\t\t\t\"[ῳώῴὼῲῶῷὠᾠὤᾤὢᾢὦᾦὡᾡὥᾥὣᾣὧᾧὨᾨὬᾬὪᾪὮᾮὩᾩὭᾭὫᾫὯᾯ]\",\n\t\t\t\"[ῥῤῬ]\",\n\t\t\t\"[ς]\",\n\t\t\t\"[́͂]\"\n\t\t},\n\t\tto = {\n\t\t\t\"α\",\n\t\t\t\"ε\",\n\t\t\t\"η\",\n\t\t\t\"ι\",\n\t\t\t\"ο\",\n\t\t\t\"υ\",\n\t\t\t\"ω\",\n\t\t\t\"\
      ρ\",\n\t\t\t\"σ\"\n\t\t}\n\t},\n\t[\"he\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"ם\",\n\t\t\t\"ן\",\n\t\t\t\"ך\",\n\t\t\t\"ף\",\n\t\t\t\"ץ\",\n\t\t\t\"ﭏ\",\n\t\t\t\"װ\",\n\t\t\t\"ױ\",\n\t\t\t\"ײ\",\n\t\t\t\"[״׳־]\",\n\t\t},\n\t\t\
      to = {\n\t\t\t\"מ\",\n\t\t\t\"נ\",\n\t\t\t\"כ\", \n\t\t\t\"פ\",\n\t\t\t\"צ\",\n\t\t\t\"אל\",\n\t\t\t\"וו\",\n\t\t\t\"וי\",\n\t\t\t\"יי\",\n\t\t}\n\t},\n\t[\"hu\"] = {\n\t\tfrom = {\"á\", \"é\", \"í\", \"ó\", \"ú\", \"ő\", \"ű\", \"cs\", \"dz\", \"gy\"\
      , \"ly\", \"ny\", \"sz\", \"ty\", \"zs\", \"dzs\"},\n\t\tto   = {\"a\", \"e\", \"i\", \"o\", \"u\", \"ö\", \"ü\", \"č\",  \"ď\",  \"ǰ\",  \"ľ\",  \"ň\",  \"š\",  \"ť\",  \"ž\",  \"ǯ\"},\n\t},\n\t[\"hy\"] = {\n\t\tfrom = {\"ու\", \"եւ\"},\n\t\tto   = {\"\
      ŭ\",  \"և\"},\n\t},\n\t[\"ja\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {'が', 'ぎ', 'ぐ', 'げ', 'ご', 'ざ', 'じ', 'ず', 'ぜ', 'ぞ', 'だ', 'ぢ', 'づ', 'で', 'ど', 'ば', 'び', 'ぶ', 'べ', 'ぼ', 'ぱ', 'ぴ', 'ぷ', 'ぺ', 'ぽ', 'ゔ'},\n\t\tto   = {'か', 'き', 'く', 'け', 'こ', 'さ\
      ', 'し', 'す', 'せ', 'そ', 'た', 'ち', 'つ', 'て', 'と', 'は', 'ひ', 'ふ', 'へ', 'ほ', 'は', 'ひ', 'ふ', 'へ', 'ほ', 'う'},\n\t\tignore = {\"Latn\"},\n\t},\n\t[\"la\"] = {\n\t\tfrom = {\"v\", \"j\"},\n\t\tto   = {\"u\", \"i\"}\n\t},\n\t[\"nl\"] = {\n\t\tfrom = {\"[áàä]\"\
      , \"[éèë]\", \"[íìï]\", \"[óòö]\", \"[úùü]\"},\n\t\tto   = {\"a\",     \"e\",     \"i\",     \"o\",     \"u\"},\n\t},\n\t[\"pl\"] = {\n\t\tfrom = {\"ć\", \"ę\", \"ł\", \"ń\", \"ó\", \"ś\", \"[źż]\"},\n\t\tto   = {\"c\", \"e\", \"l\", \"n\", \"o\", \"s\"\
      , \"z\"},\n\t},\n\t[\"ru\"] = {\n\t\tfrom = {\"ё\"},\n\t\tto   = {\"е\"},\n\t},\n\t[\"xcl\"] = {\n\t\tfrom = {\"ու\"},\n\t\tto   = {\"ŭ\"},\n\t},\n\t[\"yi\"] = {\n\t\tallow_repeated_char = true,\n\t\tfrom = {\n\t\t\t\"ם\",\n\t\t\t\"ן\",\n\t\t\t\"ך\",\n\
      \t\t\t\"ף\",\n\t\t\t\"ץ\",\n\t\t\t\"ﭏ\",\n\t\t\t\"װ\",\n\t\t\t\"ױ\",\n\t\t\t\"ײ\",\n\t\t\t\"[״׳־]\",\n\t\t\t\"[ִַָּֿׁׂ]\",\n\t\t},\n\t\tto = {\n\t\t\t\"מ\",\n\t\t\t\"נ\",\n\t\t\t\"כ\", \n\t\t\t\"פ\",\n\t\t\t\"צ\",\n\t\t\t\"אל\",\n\t\t\t\"וו\",\n\t\t\t\"\
      וי\",\n\t\t\t\"יי\",\n\t\t}\n\t},\n\t[\"zh\"] = {\n\t\tignore = {\"Latn\"},\n\t},\n}\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:37.470Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=37527 t=1555362457387979
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1344.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 499704814, 260083494, 690797672
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:07:37.631Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc%2Fredundant&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41814 t=1555362457540821
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1344.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 599246167, 568854989, 688082331
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc/redundant" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:07:37.780Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Flinks%2Fsc%2Fredundant%2FLatn&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=30255 t=1555362457705199
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1346.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 671202905, 254422506, 686908297
    body: <?xml version="1.0"?><api batchcomplete=""><query><pages><page _idx="-1" ns="10" title="Template:tracking/links/sc/redundant/Latn" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:07:37.943Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alb&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=39881 t=1555362457855842
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:37 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1341.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 931628595, 498052125, 692374231
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="4376313" pageid="4376313" ns="10" title="Template:lb"><revisions><rev user="-sche" timestamp="2016-09-15T04:39:16Z" contentformat="text/x-wiki" contentmodel="wikitext"
      comment="Protected &quot;[[Template:lb]]&quot;: Highly visible template/module: if for some reason someone needs to edit this, post in the [[WT:GP]] or [[WT:BP]] ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))"
      xml:space="preserve">#REDIRECT [[Template:label]]</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:07:38.117Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Alabel&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52261 t=1555362458019834
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:38 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 600878403, 567676938, 697838806
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="3734544" pageid="3734544" ns="10" title="Template:label"><revisions><rev user="Ungoliant MMDCCLXIV" timestamp="2017-09-15T19:24:35Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Protected &quot;[[Template:label]]&quot;: Highly visible template/module ([Edit=Allow only template editors and administrators] (indefinite) [Move=Allow only template editors and administrators] (indefinite))" xml:space="preserve">{{#invoke:labels/templates|show}}&lt;!--

      --&gt;&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:39.449Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alabels%2Fdata%2Ftopical&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51038 t=1555362459237621
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:39 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1342.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 493903784, 495267727, 687859811
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5967302\" pageid=\"5967302\" ns=\"828\" title=\"Module:labels/data/topical\"><revisions><rev user=\"King of Hearts\" timestamp=\"2019-04-09T07:56:12Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"better link for bridge\" xml:space=\"preserve\">local labels = {}\nlocal aliases = {}\nlocal deprecated = {}\n\n-- This file is split into two sections: topical labels and labels for set-type\
      \ categories.\n-- Each section is sorted alphabetically.\n\n\n-- Topical labels\n\nlabels[\"accounting\"] = {\n\tdisplay = \"[[accounting#Noun|accounting]]\",\n\ttopical_categories = {\"Accounting\"},\n}\n\nlabels[\"acoustics\"] = {\n\tdisplay = \"[[acoustics]]\"\
      ,\n\ttopical_categories = {\"Acoustics\"},\n}\n\nlabels[\"acting\"] = {\n\tdisplay = \"[[acting#Noun|acting]]\",\n\ttopical_categories = {\"Acting\"},\n}\n\nlabels[\"advertising\"] = {\n\tdisplay = \"[[advertising#Noun|advertising]]\",\n\ttopical_categories\
      \ = {\"Advertising\"},\n}\n\nlabels[\"aeronautics\"] = {\n\tdisplay = \"[[aeronautics]]\",\n\ttopical_categories = {\"Aeronautics\"},\n}\n\nlabels[\"aerospace\"] = {\n\tdisplay = \"[[aeronautics]], [[space science|space]]\",\n\ttopical_categories = {\"\
      Aerospace\"},\n}\n\nlabels[\"agriculture\"] = {\n\tdisplay = \"[[agriculture]]\",\n\ttopical_categories = {\"Agriculture\"},\n}\n\nlabels[\"aircraft\"] = {\n\tdisplay = \"[[aircraft]]\",\n\ttopical_categories = {\"Aircraft\"},\n}\n\nlabels[\"alchemy\"\
      ] = {\n\tdisplay = \"[[alchemy]]\",\n\ttopical_categories = {\"Alchemy\"},\n}\n\nlabels[\"alcoholism\"] = {\n\tdisplay = \"[[alcoholism]]\",\n\ttopical_categories = {\"Alcoholism\"},\n}\naliases[\"alcohol\"] = \"alcoholism\"\n\nlabels[\"algebra\"] = {\n\
      \tdisplay = \"[[algebra]]\",\n\ttopical_categories = {\"Algebra\"},\n}\n\nlabels[\"algebraic geometry\"] = {\n\tdisplay = \"[[algebraic geometry]]\",\n\ttopical_categories = {\"Algebraic geometry\"},\n}\n\nlabels[\"alternative medicine\"] = {\n\tdisplay\
      \ = \"[[alternative medicine]]\",\n\ttopical_categories = {\"Alternative medicine\"},\n}\n\nlabels[\"amateur radio\"] = {\n\tdisplay = \"[[amateur radio]]\",\n\ttopical_categories = {\"Amateur radio\"},\n}\naliases[\"ham radio\"] = \"amateur radio\"\n\n\
      labels[\"American football\"] = {\n\tdisplay = \"[[American football]]\",\n\ttopical_categories = {\"Football (American)\"},\n}\n\nlabels[\"analytic geometry\"] = {\n\tdisplay = \"[[analytic geometry]]\",\n\ttopical_categories = {\"Geometry\"},\n}\n\n\
      labels[\"analytical chemistry\"] = {\n\tdisplay = \"[[analytical]] [[chemistry]]\",\n\ttopical_categories = {\"Analytical chemistry\"},\n}\n\nlabels[\"anarchism\"] = {\n\tdisplay = \"[[anarchism]]\",\n\ttopical_categories = {\"Anarchism\"},\n}\n\nlabels[\"\
      anatomy\"] = {\n\tdisplay = \"[[anatomy]]\",\n\ttopical_categories = {\"Anatomy\"},\n}\n\nlabels[\"Ancient Greece\"] = {\n\tdisplay = \"[[Ancient Greece]]\",\n\ttopical_categories = {\"Ancient Greece\"},\n}\n\nlabels[\"Ancient Rome\"] = {\n\tdisplay =\
      \ \"[[Ancient Rome]]\",\n\ttopical_categories = {\"Ancient Rome\"},\n}\n\nlabels[\"Anglicanism\"] = {\n\tdisplay = \"[[Anglicanism]]\",\n\ttopical_categories = {\"Anglicanism\"},\n}\n\nlabels[\"animation\"] = {\n\tdisplay = \"[[animation]]\",\n\ttopical_categories\
      \ = {\"Animation\"},\n}\n\nlabels[\"anime\"] = {\n\tdisplay = \"[[anime]]\",\n\ttopical_categories = {\"Japanese fiction\"},\n}\n\nlabels[\"anthropology\"] = {\n\tdisplay = \"[[anthropology]]\",\n\ttopical_categories = {\"Anthropology\"},\n}\n\nlabels[\"\
      arachnology\"] = {\n\tdisplay = \"[[arachnology]]\",\n\ttopical_categories = {\"Arachnology\"},\n}\n\nlabels[\"archaeology\"] = {\n\tdisplay = \"[[archaeology]]\",\n\ttopical_categories = {\"Archaeology\"},\n}\n\nlabels[\"archery\"] = {\n\tdisplay = \"\
      [[archery]]\",\n\ttopical_categories = {\"Archery\"},\n}\n\nlabels[\"architecture\"] = {\n\tdisplay = \"[[architecture]]\",\n\ttopical_categories = {\"Architecture\"},\n}\n\nlabels[\"arithmetic\"] = {\n\tdisplay = \"[[arithmetic]]\",\n\ttopical_categories\
      \ = {\"Arithmetic\"},\n}\n\nlabels[\"Armenian mythology\"] = {\n\tdisplay = \"[[Armenian]] [[mythology]]\",\n\ttopical_categories = {\"Armenian mythology\"},\n}\n\nlabels[\"art\"] = {\n\tdisplay = \"[[art]]\",\n\ttopical_categories = {\"Art\"},\n}\naliases[\"\
      arts\"] = \"art\"\n\nlabels[\"artificial intelligence\"] = {\n\tdisplay = \"[[artificial intelligence]]\",\n\ttopical_categories = {\"Artificial intelligence\"},\n}\n\nlabels[\"Arthurian legend\"] = {\n\tdisplay = \"[[w:Arthurian legend|Arthurian legend]]\"\
      ,\n\ttopical_categories = {\"Arthurian mythology\"},\n}\naliases[\"Arthurian mythology\"] = \"Arthurian legend\"\n\nlabels[\"astrology\"] = {\n\tdisplay = \"[[astrology]]\",\n\ttopical_categories = {\"Astrology\"},\n}\naliases[\"horoscope\"] = \"astrology\"\
      \naliases[\"zodiac\"] = \"astrology\"\n\nlabels[\"astronautics\"] = {\n\tdisplay = \"[[astronautics]]\",\n\ttopical_categories = {\"Astronautics\"},\n}\n\nlabels[\"astronomy\"] = {\n\tdisplay = \"[[astronomy]]\",\n\ttopical_categories = {\"Astronomy\"\
      },\n}\n\nlabels[\"astrophysics\"] = {\n\tdisplay = \"[[astrophysics]]\",\n\ttopical_categories = {\"Astrophysics\"},\n}\n\nlabels[\"Asturian mythology\"] = {\n\tdisplay = \"[[Asturian]] [[mythology]]\",\n\ttopical_categories = {\"Asturian mythology\"},\n\
      }\n\nlabels[\"athletics\"] = {\n\tdisplay = \"[[athletics]]\",\n\ttopical_categories = {\"Athletics\"},\n}\n\nlabels[\"Australian Aboriginal mythology\"] = {\n\tdisplay = \"[[w:Australian Aboriginal religion and mythology|Australian Aboriginal mythology]]\"\
      ,\n\ttopical_categories = {\"Australian Aboriginal mythology\"},\n}\n\nlabels[\"Australian rules football\"] = {\n\tdisplay = \"[[Australian rules football]]\",\n\ttopical_categories = {\"Australian rules football\"},\n}\n\nlabels[\"automotive\"] = {\n\
      \tdisplay = \"[[automotive]]\",\n\ttopical_categories = {\"Automotive\"},\n}\naliases[\"automotives\"] = \"automotive\"\n\nlabels[\"aviation\"] = {\n\tdisplay = \"[[aviation]]\",\n\ttopical_categories = {\"Aviation\"},\n}\n\nlabels[\"backgammon\"] = {\n\
      \tdisplay = \"[[backgammon]]\",\n\ttopical_categories = {\"Backgammon\"},\n}\n\nlabels[\"bacteriology\"] = {\n\tdisplay = \"[[bacteriology]]\",\n\ttopical_categories = {\"Bacteriology\"},\n}\naliases[\"bacteria\"] = \"bacteriology\"\n\nlabels[\"badminton\"\
      ] = {\n\tdisplay = \"[[badminton]]\",\n\ttopical_categories = {\"Badminton\"},\n}\n\nlabels[\"baking\"] = {\n\tdisplay = \"[[baking#Noun|baking]]\",\n\ttopical_categories = {\"Baking\"},\n}\n\nlabels[\"ball games\"] = {\n\tdisplay = \"[[ball game]]s\"\
      ,\n\ttopical_categories = {\"Ball games\"},\n}\n\nlabels[\"ballet\"] = {\n\tdisplay = \"[[ballet]]\",\n\ttopical_categories = {\"Ballet\"},\n}\n\nlabels[\"banking\"] = {\n\tdisplay = \"[[banking#Noun|banking]]\",\n\ttopical_categories = {\"Banking\"},\n\
      }\n\nlabels[\"baseball\"] = {\n\tdisplay = \"[[baseball]]\",\n\ttopical_categories = {\"Baseball\"},\n}\n\nlabels[\"basketball\"] = {\n\tdisplay = \"[[basketball]]\",\n\ttopical_categories = {\"Basketball\"},\n}\n\nlabels[\"BDSM\"] = {\n\tdisplay = \"\
      [[BDSM]]\",\n\ttopical_categories = {\"BDSM\"},\n}\n\nlabels[\"beekeeping\"] = {\n\tdisplay = \"[[beekeeping]]\",\n\ttopical_categories = {\"Beekeeping\"},\n}\n\nlabels[\"beer\"] = {\n\tdisplay = \"[[beer]]\",\n\ttopical_categories = {\"Beer\"},\n}\n\n\
      labels[\"betting\"] = {\n\tdisplay = \"[[gambling#Noun|gambling]]\",\n\ttopical_categories = {\"Betting\"},\n}\n\nlabels[\"biblical\"] = {\n\tdisplay = \"[[Bible|biblical]]\",\n\ttopical_categories = {\"Bible\"},\n}\naliases[\"Bible\"] = \"biblical\"\n\
      aliases[\"Biblical\"] = \"biblical\"\n\nlabels[\"billiards\"] = {\n\tdisplay = \"[[billiards]]\",\n\ttopical_categories = {\"Billiards\"},\n}\n\nlabels[\"bingo\"] = {\n\tdisplay = \"[[bingo]]\",\n\ttopical_categories = {\"Bingo\"},\n}\n\nlabels[\"biochemistry\"\
      ] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Biochemistry\"},\n}\n\nlabels[\"biology\"] = {\n\tdisplay = \"[[biology]]\",\n\ttopical_categories = {\"Biology\"},\n}\n\nlabels[\"biotechnology\"] = {\n\tdisplay = \"[[biotechnology]]\"\
      ,\n\ttopical_categories = {\"Biotechnology\"},\n}\n\nlabels[\"birdwatching\"] = {\n\tdisplay = \"[[birdwatching#Noun|birdwatching]]\",\n\ttopical_categories = {\"Birdwatching\"},\n}\n\nlabels[\"blogging\"] = {\n\tdisplay = \"[[blogging#Noun|blogging]]\"\
      ,\n\ttopical_categories = {\"Internet\"},\n}\n\nlabels[\"board games\"] = {\n\tdisplay = \"[[board game]]s\",\n\ttopical_categories = {\"Board games\"},\n}\naliases[\"board game\"] = \"board games\"\n\nlabels[\"board sports\"] = {\n\tdisplay = \"[[boardsport|board\
      \ sports]]\",\n\ttopical_categories = {\"Board sports\"},\n}\n\nlabels[\"bodybuilding\"] = {\n\tdisplay = \"[[bodybuilding#Noun|bodybuilding]]\",\n\ttopical_categories = {\"Bodybuilding\"},\n}\n\nlabels[\"botany\"] = {\n\tdisplay = \"[[botany]]\",\n\t\
      topical_categories = {\"Botany\"},\n}\n\nlabels[\"bowling\"] = {\n\tdisplay = \"[[bowling#Noun|bowling]]\",\n\ttopical_categories = {\"Bowling\"},\n}\n\nlabels[\"boxing\"] = {\n\tdisplay = \"[[boxing#Noun|boxing]]\",\n\ttopical_categories = {\"Boxing\"\
      },\n}\n\nlabels[\"brewing\"] = {\n\tdisplay = \"[[brewing#Noun|brewing]]\",\n\ttopical_categories = {\"Brewing\"},\n}\n\nlabels[\"bridge\"] = {\n\tdisplay = \"[[bridge#English-game|bridge]]\",\n\ttopical_categories = {\"Bridge\"},\n}\n\nlabels[\"broadcasting\"\
      ] = {\n\tdisplay = \"[[broadcasting#Noun|broadcasting]]\",\n\ttopical_categories = {\"Broadcasting\"},\n}\n\nlabels[\"bryology\"] = {\n\tdisplay = \"[[bryology]]\",\n\ttopical_categories = {\"Bryology\"},\n}\n\nlabels[\"Buddhism\"] = {\n\tdisplay = \"\
      [[Buddhism]]\",\n\ttopical_categories = {\"Buddhism\"},\n}\n\nlabels[\"bullfighting\"] = {\n\tdisplay = \"[[bullfighting]]\",\n\ttopical_categories = {\"Bullfighting\"},\n}\n\nlabels[\"business\"] = {\n\tdisplay = \"[[business]]\",\n\ttopical_categories\
      \ = {\"Business\"},\n}\n\nlabels[\"Byzantine Empire\"] = {\n\tdisplay = \"[[Byzantine Empire]]\",\n\ttopical_categories = {\"Byzantine Empire\"},\n}\n\nlabels[\"calculus\"] = {\n\tdisplay = \"[[calculus]]\",\n\ttopical_categories = {\"Calculus\"},\n}\n\
      \nlabels[\"calligraphy\"] = {\n\tdisplay = \"[[calligraphy]]\",\n\ttopical_categories = {\"Calligraphy\"},\n}\n\nlabels[\"Canadian football\"] = {\n\tdisplay = \"[[Canadian football]]\",\n\ttopical_categories = {\"Canadian football\"},\n}\n\nlabels[\"\
      canoeing\"] = {\n\tdisplay = \"[[canoeing#Noun|canoeing]]\",\n\ttopical_categories = {\"Water sports\"},\n}\n\nlabels[\"card games\"] = {\n\tdisplay = \"[[card game]]s\",\n\ttopical_categories = {\"Card games\"},\n}\naliases[\"cards\"] = \"card games\"\
      \naliases[\"playing card\"] = \"card games\"\n\nlabels[\"cardiology\"] = {\n\tdisplay = \"[[cardiology]]\",\n\ttopical_categories = {\"Cardiology\"},\n}\n\nlabels[\"carpentry\"] = {\n\tdisplay = \"[[carpentry]]\",\n\ttopical_categories = {\"Carpentry\"\
      },\n}\n\nlabels[\"cartography\"] = {\n\tdisplay = \"[[cartography]]\",\n\ttopical_categories = {\"Cartography\"},\n}\n\nlabels[\"cartomancy\"] = {\n\tdisplay = \"[[cartomancy]]\",\n\ttopical_categories = {\"Cartomancy\"},\n}\n\nlabels[\"category theory\"\
      ] = {\n\tdisplay = \"[[category theory]]\",\n\ttopical_categories = {\"Category theory\"},\n}\n\nlabels[\"Catholicism\"] = {\n\tdisplay = \"[[Catholicism]]\",\n\ttopical_categories = {\"Catholicism\"},\n}\naliases[\"Catholic\"] = \"Catholicism\"\n\nlabels[\"\
      caving\"] = {\n\tdisplay = \"[[caving#Noun|caving]]\",\n\ttopical_categories = {\"Caving\"},\n}\n\nlabels[\"Celtic mythology\"] = {\n\tdisplay = \"[[Celtic]] [[mythology]]\",\n\ttopical_categories = {\"Celtic mythology\"},\n}\n\nlabels[\"ceramics\"] =\
      \ {\n\tdisplay = \"[[ceramics]]\",\n\ttopical_categories = {\"Ceramics\"},\n}\n\nlabels[\"cheerleading\"] = {\n\tdisplay = \"[[cheerleading#Noun|cheerleading]]\",\n\ttopical_categories = {\"Cheerleading\"},\n}\n\nlabels[\"chemical element\"] = {\n\tdisplay\
      \ = \"[[chemistry]]\",\n\ttopical_categories = {\"Chemical elements\"},\n}\n\nlabels[\"chemical engineering\"] = {\n\tdisplay = \"[[chemical engineering]]\",\n\ttopical_categories = {\"Chemical engineering\"},\n}\n\nlabels[\"chemistry\"] = {\n\tdisplay\
      \ = \"[[chemistry]]\",\n\ttopical_categories = {\"Chemistry\"},\n}\n\nlabels[\"chess\"] = {\n\tdisplay = \"[[chess]]\",\n\ttopical_categories = {\"Chess\"},\n}\n\nlabels[\"Chinese astronomy\"] = {\n\tdisplay = \"[[Chinese]] [[astronomy]]\",\n\ttopical_categories\
      \ = {\"Chinese astronomy\"},\n}\n\nlabels[\"Chinese calligraphy\"] = {\n\tdisplay = \"[[Chinese]] [[calligraphy]]\",\n\ttopical_categories = {\"Calligraphy\"},\n}\n\nlabels[\"Chinese constellation\"] = {\n\tdisplay = \"[[Chinese]] [[astronomy]]\",\n\t\
      topical_categories = {\"Constellations\"},\n}\n\nlabels[\"Chinese folk religion\"] = {\n\tdisplay = \"[[Chinese]] [[folk religion]]\",\n\ttopical_categories = {\"Religion\"},\n}\n\nlabels[\"Chinese linguistics\"] = {\n\tdisplay = \"[[Chinese]] [[linguistics]]\"\
      ,\n\ttopical_categories = {\"Linguistics\"},\n}\n\nlabels[\"Chinese mythology\"] = {\n\tdisplay = \"[[Chinese]] [[mythology]]\",\n\ttopical_categories = {\"Chinese mythology\"},\n}\n\nlabels[\"Chinese philosophy\"] = {\n\tdisplay = \"[[Chinese]] [[philosophy]]\"\
      ,\n\ttopical_categories = {\"Chinese philosophy\"},\n}\n\nlabels[\"Chinese phonetics\"] = {\n\tdisplay = \"[[Chinese]] [[phonetics]]\",\n\ttopical_categories = {\"Phonetics\"},\n}\n\nlabels[\"Chinese religion\"] = {\n\tdisplay = \"[[Chinese]] [[religion]]\"\
      ,\n\ttopical_categories = {\"Religion\"},\n}\n\nlabels[\"Chinese star\"] = {\n\tdisplay = \"[[Chinese]] [[astronomy]]\",\n\ttopical_categories = {\"Stars\"},\n}\n\nlabels[\"Christianity\"] = {\n\tdisplay = \"[[Christianity]]\",\n\ttopical_categories =\
      \ {\"Christianity\"},\n}\naliases[\"christianity\"] = \"Christianity\"\ndeprecated[\"christianity\"] = true\n\nlabels[\"cinematography\"] = {\n\tdisplay = \"[[cinematography]]\",\n\ttopical_categories = {\"Cinematography\"},\n}\naliases[\"filmology\"]\
      \ = \"cinematography\"\n\nlabels[\"cladistics\"] = {\n\tdisplay = \"[[cladistics]]\",\n\ttopical_categories = {\"Systematics\"},\n}\n\nlabels[\"classical mechanics\"] = {\n\tdisplay = \"[[classical mechanics]]\",\n\ttopical_categories = {\"Classical mechanics\"\
      },\n}\n\nlabels[\"classical studies\"] = {\n\tdisplay = \"[[classical studies]]\",\n\ttopical_categories = {\"Classical studies\"},\n}\n\nlabels[\"climatology\"] = {\n\tdisplay = \"[[climatology]]\",\n\ttopical_categories = {\"Climatology\"},\n}\n\nlabels[\"\
      climbing\"] = {\n\tdisplay = \"[[climbing#Noun|climbing]]\",\n\ttopical_categories = {\"Climbing\"},\n}\n\nlabels[\"clinical psychology\"] = {\n\tdisplay = \"[[clinical]] [[psychology]]\",\n\ttopical_categories = {\"Clinical psychology\"},\n}\n\nlabels[\"\
      clothing\"] = {\n\tdisplay = \"[[clothing#Noun|clothing]]\",\n\ttopical_categories = {\"Clothing\"},\n}\n\nlabels[\"color\"] = {\n\tdisplay = \"[[color]]\",\n\ttopical_categories = {\"Colors\"},\n}\n\nlabels[\"colour\"] = {\n   \tdisplay = \"[[colour]]\"\
      ,\n   topical_categories = {\"Colors\"},\n}\n\nlabels[\"combinatorics\"] = {\n\tdisplay = \"[[combinatorics]]\",\n\ttopical_categories = {\"Combinatorics\"},\n}\n\nlabels[\"comedy\"] = {\n\tdisplay = \"[[comedy]]\",\n\ttopical_categories = {\"Comedy\"\
      },\n}\n\nlabels[\"commercial law\"] = {\n\tdisplay = \"[[commercial#Adjective|commercial]] [[law]]\",\n\ttopical_categories = {\"Commercial law\"},\n}\nlabels[\"comics\"] = {\n\tdisplay = \"[[comics]]\",\n\ttopical_categories = {\"Comics\"},\n}\n\nlabels[\"\
      communication\"] = {\n\tdisplay = \"[[communication]]\",\n\ttopical_categories = {\"Communication\"},\n}\naliases[\"communications\"] = \"communication\"\n\nlabels[\"communism\"] = {\n\tdisplay = \"[[communism]]\",\n\ttopical_categories = {\"Communism\"\
      },\n}\naliases[\"Communism\"] = \"communism\"\n\nlabels[\"compilation\"] = {\n\tdisplay = \"[[software]] [[compilation]]\",\n\ttopical_categories = {\"Compilation\"},\n}\n\nlabels[\"complex analysis\"] = {\n\tdisplay = \"[[complex analysis]]\",\n\ttopical_categories\
      \ = {\"Complex analysis\"},\n}\n\nlabels[\"computational linguistics\"] = {\n\tdisplay = \"[[computational linguistics]]\",\n\ttopical_categories = {\"Computational linguistics\"},\n}\n\t\nlabels[\"computer games\"] = {\n\tdisplay = \"[[computer game]]s\"\
      ,\n\ttopical_categories = {\"Video games\"},\n}\n\nlabels[\"computer graphics\"] = {\n\tdisplay = \"[[computer graphics]]\",\n\ttopical_categories = {\"Computer graphics\"},\n}\n\nlabels[\"computer hardware\"] = {\n\tdisplay = \"[[computer]] [[hardware]]\"\
      ,\n\ttopical_categories = {\"Computer hardware\"},\n}\n\nlabels[\"computer languages\"] = {\n\tdisplay = \"[[computer language]]s\",\n\ttopical_categories = {\"Computer languages\"},\n}\naliases[\"computer language\"] = \"computer languages\"\n\nlabels[\"\
      computer science\"] = {\n\tdisplay = \"[[computer science]]\",\n\ttopical_categories = {\"Computer science\"},\n}\naliases[\"comp sci\"] = \"computer science\"\n\nlabels[\"computer security\"] = {\n\tdisplay = \"[[computer security]]\",\n\ttopical_categories\
      \ = {\"Computer security\"},\n}\n\nlabels[\"computing\"] = {\n\tdisplay = \"[[computing#Noun|computing]]\",\n\ttopical_categories = {\"Computing\"},\n}\naliases[\"computer\"] = \"computing\"\naliases[\"computers\"] = \"computing\"\n\nlabels[\"computing\
      \ theory\"] = {\n\tdisplay = \"[[computing#Noun|computing]] [[theory]]\",\n\ttopical_categories = {\"Theory of computing\"},\n}\naliases[\"comptheory\"] = \"computing theory\"\n\nlabels[\"conchology\"] = {\n\tdisplay = \"[[conchology]]\",\n\ttopical_categories\
      \ = {\"Conchology\"},\n}\n\nlabels[\"Confucianism\"] = {\n\tdisplay = \"[[Confucianism]]\",\n\ttopical_categories = {\"Confucianism\"},\n}\n\nlabels[\"construction\"] = {\n\tdisplay = \"[[construction]]\",\n\ttopical_categories = {\"Construction\"},\n\
      }\n\nlabels[\"cooking\"] = {\n\tdisplay = \"[[cooking#Noun|cooking]]\",\n\ttopical_categories = {\"Cooking\"},\n}\naliases[\"culinary\"] = \"cooking\"\naliases[\"cuisine\"] = \"cooking\"\naliases[\"cookery\"] = \"cooking\"\naliases[\"gastronomy\"] = \"\
      cooking\"\n\nlabels[\"copyright\"] = {\n\tdisplay = \"[[copyright]] [[law]]\",\n\ttopical_categories = {\"Copyright\"},\n}\n\nlabels[\"cosmetics\"] = {\n\tdisplay = \"[[cosmetics]]\",\n\ttopical_categories = {\"Cosmetics\"},\n}\naliases[\"cosmetology\"\
      ] = \"cosmetics\"\n\nlabels[\"cribbage\"] = {\n\tdisplay = \"[[cribbage]]\",\n\ttopical_categories = {\"Cribbage\"},\n}\n\nlabels[\"cricket\"] = {\n\tdisplay = \"[[cricket]]\",\n\ttopical_categories = {\"Cricket\"},\n}\n\nlabels[\"crime\"] = {\n\tdisplay\
      \ = \"[[crime]]\",\n\ttopical_categories = {\"Crime\"},\n}\n\nlabels[\"criminal law\"] = {\n\tdisplay = \"[[criminal law]]\",\n\ttopical_categories = {\"Criminal law\"},\n}\n\nlabels[\"criminology\"] = {\n\tdisplay = \"[[criminology]]\",\n\ttopical_categories\
      \ = {\"Criminology\"},\n}\n\nlabels[\"cryptography\"] = {\n\tdisplay = \"[[cryptography]]\",\n\ttopical_categories = {\"Cryptography\"},\n}\n\nlabels[\"cryptozoology\"] = {\n\tdisplay = \"[[cryptozoology]]\",\n\ttopical_categories = {\"Cryptozoology\"\
      },\n}\n\nlabels[\"crystallography\"] = {\n\tdisplay = \"[[crystallography]]\",\n\ttopical_categories = {\"Crystallography\"},\n}\n\nlabels[\"cultural anthropology\"] = {\n\tdisplay = \"[[cultural anthropology]]\",\n\ttopical_categories = {\"Cultural anthropology\"\
      },\n}\n\nlabels[\"curling\"] = {\n\tdisplay = \"[[curling]]\",\n\ttopical_categories = {\"Curling\"},\n}\n\nlabels[\"cybernetics\"] = {\n\tdisplay = \"[[cybernetics]]\",\n\ttopical_categories = {\"Cybernetics\"},\n}\n\nlabels[\"cycle racing\"] = {\n\t\
      display = \"[[w:cycle sport|cycle racing]]\",\n\ttopical_categories = {\"Cycle racing\"},\n}\n\nlabels[\"cycling\"] = {\n\tdisplay = \"[[cycling#Noun|cycling]]\",\n\ttopical_categories = {\"Cycling\"},\n}\n\nlabels[\"cytology\"] = {\n\tdisplay = \"[[cytology]]\"\
      ,\n\ttopical_categories = {\"Cytology\"},\n}\n\nlabels[\"dance\"] = {\n\tdisplay = \"[[dance#Noun|dance]]\",\n\ttopical_categories = {\"Dance\"},\n}\n\nlabels[\"darts\"] = {\n\tdisplay = \"[[darts]]\",\n\ttopical_categories = {\"Darts\"},\n}\n\nlabels[\"\
      data management\"] = {\n\tdisplay = \"[[data management]]\",\n\ttopical_categories = {\"Data management\"},\n}\n\nlabels[\"data modeling\"] = {\n\tdisplay = \"[[data modeling]]\",\n\ttopical_categories = {\"Data modeling\"},\n}\n\nlabels[\"databases\"\
      ] = {\n\tdisplay = \"[[database]]s\",\n\ttopical_categories = {\"Databases\"},\n}\naliases[\"database\"] = \"databases\"\n\nlabels[\"deltiology\"] = {\n\tdisplay = \"[[deltiology]]\",\n\ttopical_categories = {\"Deltiology\"},\n}\n\nlabels[\"demography\"\
      ] = {\n\tdisplay = \"[[demography]]\",\n\ttopical_categories = {\"Demography\"},\n}\n\nlabels[\"demoscene\"] = {\n\ttopical_categories = {\"Demoscene\"},\n}\n\nlabels[\"dentistry\"] = {\n\tdisplay = \"[[dentistry]]\",\n\ttopical_categories = {\"Dentistry\"\
      },\n}\n\nlabels[\"dermatology\"] = {\n\tdisplay = \"[[dermatology]]\",\n\ttopical_categories = {\"Dermatology\"},\n}\n\nlabels[\"design\"] = {\n\tdisplay = \"[[design#Noun|design]]\",\n\ttopical_categories = {\"Design\"},\n}\n\nlabels[\"dice games\"] =\
      \ {\n\tdisplay = \"[[dice game]]s\",\n\ttopical_categories = {\"Dice games\"},\n}\naliases[\"dice\"] = \"dice games\"\n\nlabels[\"dictation\"] = {\n\tdisplay = \"[[dictation]]\",\n\ttopical_categories = {\"Dictation\"},\n}\n\nlabels[\"diplomacy\"] = {\n\
      \tdisplay = \"[[diplomacy]]\",\n\ttopical_categories = {\"Diplomacy\"},\n}\n\nlabels[\"disc golf\"] = {\n\tdisplay = \"[[disc golf]]\",\n\ttopical_categories = {\"Disc golf\"},\n}\n\nlabels[\"divination\"] = {\n\tdisplay = \"[[divination]]\",\n\ttopical_categories\
      \ = {\"Divination\"},\n}\n\nlabels[\"diving\"] = {\n\tdisplay = \"[[diving#Noun|diving]]\",\n\ttopical_categories = {\"Diving\"},\n}\n\nlabels[\"dominoes\"] = {\n\tdisplay = \"[[dominoes]]\",\n\ttopical_categories = {\"Dominoes\"},\n}\n\nlabels[\"drama\"\
      ] = {\n\tdisplay = \"[[drama]]\",\n\ttopical_categories = {\"Drama\"},\n}\n\nlabels[\"dressage\"] = {\n\tdisplay = \"[[dressage]]\",\n\ttopical_categories = {\"Dressage\"},\n}\n\nlabels[\"earth science\"] = {\n\tdisplay = \"[[earth science]]\",\n\ttopical_categories\
      \ = {\"Earth sciences\"},\n}\n\nlabels[\"Eastern Catholicism\"] = {\n\tdisplay = \"[[w:Eastern Catholic Churches|Eastern Catholicism]]\",\n\ttopical_categories = {\"Eastern Catholicism\"},\n}\naliases[\"Eastern Catholic\"] = \"Eastern Catholicism\"\n\n\
      labels[\"Eastern Orthodoxy\"] = {\n\tdisplay = \"[[Eastern Orthodoxy]]\",\n\ttopical_categories = {\"Eastern Orthodoxy\"},\n}\n\nlabels[\"ecclesiastical\"] = {\n\tdisplay = \"[[ecclesiastical]]\",\n\ttopical_categories = {\"Christianity\"},\n}\n\nlabels[\"\
      ecology\"] = {\n\tdisplay = \"[[ecology]]\",\n\ttopical_categories = {\"Ecology\"},\n}\n\nlabels[\"economics\"] = {\n\tdisplay = \"[[economics]]\",\n\ttopical_categories = {\"Economics\"},\n}\n\nlabels[\"education\"] = {\n\tdisplay = \"[[education]]\"\
      ,\n\ttopical_categories = {\"Education\"},\n}\n\nlabels[\"Egyptian mythology\"] = {\n\tdisplay = \"[[Egyptian]] [[mythology]]\",\n\ttopical_categories = {\"Egyptian mythology\"},\n}\n\nlabels[\"Egyptology\"] = {\n\tdisplay = \"[[Egyptology]]\",\n\ttopical_categories\
      \ = {\"Ancient Egypt\"},\n}\n\nlabels[\"electrencephalography\"] = {\n\tdisplay = \"[[electrencephalography]]\",\n\ttopical_categories = {\"Electrencephalography\"},\n}\n\nlabels[\"electrical engineering\"] = {\n\tdisplay = \"[[electrical engineering]]\"\
      ,\n\ttopical_categories = {\"Electrical engineering\"},\n}\n\nlabels[\"electricity\"] = {\n\tdisplay = \"[[electricity]]\",\n\ttopical_categories = {\"Electricity\"},\n}\n\nlabels[\"electrodynamics\"] = {\n\tdisplay = \"[[electrodynamics]]\",\n\ttopical_categories\
      \ = {\"Electrodynamics\"},\n}\n\nlabels[\"electromagnetism\"] = {\n\tdisplay = \"[[electromagnetism]]\",\n\ttopical_categories = {\"Electromagnetism\"},\n}\n\nlabels[\"electronics\"] = {\n\tdisplay = \"[[electronics]]\",\n\ttopical_categories = {\"Electronics\"\
      },\n}\n\nlabels[\"embryology\"] = {\n\tdisplay = \"[[embryology]]\",\n\ttopical_categories = {\"Embryology\"},\n}\n\nlabels[\"emergency medicine\"] = {\n\tdisplay = \"[[emergency medicine]]\",\n\ttopical_categories = {\"Emergency medicine\"},\n}\naliases[\"\
      emergency\"] = \"emergency medicine\"\n\nlabels[\"endocrinology\"] = {\n\tdisplay = \"[[endocrinology]]\",\n\ttopical_categories = {\"Endocrinology\"},\n}\n\nlabels[\"engineering\"] = {\n\tdisplay = \"[[engineering#Noun|engineering]]\",\n\ttopical_categories\
      \ = {\"Engineering\"},\n}\n\nlabels[\"enterprise engineering\"] = {\n\tdisplay = \"[[enterprise engineering]]\",\n\ttopical_categories = {\"Enterprise engineering\"},\n}\n\nlabels[\"entomology\"] = {\n\tdisplay = \"[[entomology]]\",\n\ttopical_categories\
      \ = {\"Entomology\"},\n}\n\nlabels[\"epidemiology\"] = {\n\tdisplay = \"[[epidemiology]]\",\n\ttopical_categories = {\"Epidemiology\"},\n}\n\nlabels[\"epistemology\"] = {\n\tdisplay = \"[[epistemology]]\",\n\ttopical_categories = {\"Epistemology\"},\n\
      }\n\nlabels[\"equestrianism\"] = {\n\tdisplay = \"[[equestrianism]]\",\n\ttopical_categories = {\"Equestrianism\"},\n}\n\nlabels[\"espionage\"] = {\n\tdisplay = \"[[espionage]]\",\n\ttopical_categories = {\"Espionage\"},\n}\n\nlabels[\"ethics\"] = {\n\t\
      display = \"[[ethics]]\",\n\ttopical_categories = {\"Ethics\"},\n}\n\nlabels[\"ethnography\"] = {\n\tdisplay = \"[[ethnography]]\",\n\ttopical_categories = {\"Ethnography\"},\n}\n\nlabels[\"European folklore\"] = {\n\tdisplay = \"[[European]] [[folklore]]\"\
      ,\n\ttopical_categories = {\"European folklore\"},\n}\n\nlabels[\"evolutionary theory\"] = {\n\tdisplay = \"[[evolutionary theory]]\",\n\ttopical_categories = {\"Evolutionary theory\"},\n}\n\nlabels[\"exercise\"] = {\n\tdisplay = \"[[exercise|exercise\
      \ (sport)]]\",\n\ttopical_categories = {\"Exercise\"},\n}\n\nlabels[\"falconry\"] = {\n\tdisplay = \"[[falconry]]\",\n\ttopical_categories = {\"Falconry\"},\n}\n\nlabels[\"fantasy\"] = {\n\tdisplay = \"[[fantasy]]\",\n\ttopical_categories = {\"Fantasy\"\
      },\n}\n\nlabels[\"fascism\"] = {\n\tdisplay = \"[[fascism]]\",\n\ttopical_categories = {\"Fascism\"},\n}\n\nlabels[\"fashion\"] = {\n\tdisplay = \"[[fashion]]\",\n\ttopical_categories = {\"Fashion\"},\n}\n\nlabels[\"feminism\"] = {\n\tdisplay = \"[[feminism]]\"\
      ,\n\ttopical_categories = {\"Feminism\"},\n}\n\nlabels[\"fencing\"] = {\n\tdisplay = \"[[fencing#Noun|fencing]]\",\n\ttopical_categories = {\"Fencing\"},\n}\n\nlabels[\"fiction\"] = {\n\tdisplay = \"[[fiction]]\",\n\ttopical_categories = {\"Fiction\"},\n\
      }\n\nlabels[\"field hockey\"] = {\n\tdisplay = \"[[field hockey]]\",\n\ttopical_categories = {\"Field hockey\"},\n}\n\nlabels[\"figure skating\"] = {\n\tdisplay = \"[[figure skating]]\",\n\ttopical_categories = {\"Figure skating\"},\n}\n\nlabels[\"film\"\
      ] = {\n\tdisplay = \"[[film#Noun|film]]\",\n\ttopical_categories = {\"Film\"},\n}\naliases[\"cinema\"] = \"film\"\n\nlabels[\"finance\"] = {\n\tdisplay = \"[[finance#Noun|finance]]\",\n\ttopical_categories = {\"Finance\"},\n}\n\nlabels[\"Finnish mythology\"\
      ] = {\n\tdisplay = \"[[Finnish]] [[mythology]]\",\n\ttopical_categories = {\"Finnish mythology\"},\n}\n\nlabels[\"firearms\"] = {\n\tdisplay = \"[[firearm]]s\",\n\ttopical_categories = {\"Firearms\"}\n}\naliases[\"firearm\"] = \"firearms\"\n\nlabels[\"\
      firefighting\"] = {\n\ttopical_categories = {\"Firefighting\"},\n}\n\nlabels[\"fishing\"] = {\n\tdisplay = \"[[fishing#Noun|fishing]]\",\n\ttopical_categories = {\"Fishing\"},\n}\naliases[\"angling\"] = \"fishing\"\n\nlabels[\"fluid dynamics\"] = {\n\t\
      display = \"[[fluid dynamics]]\",\n\ttopical_categories = {\"Fluid dynamics\"},\n}\n\nlabels[\"fluid mechanics\"] = {\n\tdisplay = \"[[fluid mechanics]]\",\n\ttopical_categories = {\"Mechanics\"},\n}\n\nlabels[\"folklore\"] = {\n\tdisplay = \"[[folklore]]\"\
      ,\n\ttopical_categories = {\"Folklore\"},\n}\n\nlabels[\"forestry\"] = {\n\ttopical_categories = {\"Forestry\"},\n}\n\nlabels[\"freemasonry\"] = {\n\ttopical_categories = {\"Freemasonry\"},\n}\n\nlabels[\"functional analysis\"] = {\n\ttopical_categories\
      \ = {\"Functional analysis\"},\n}\n\nlabels[\"furniture\"] = {\n\ttopical_categories = {\"Furniture\"},\n}\n\nlabels[\"fuzzy logic\"] = {\n\ttopical_categories = {\"Fuzzy logic\"},\n}\n\nlabels[\"Gaelic football\"] = {\n\tdisplay = \"[[Gaelic football]]\"\
      ,\n\ttopical_categories = {\"Gaelic football\"},\n}\n\nlabels[\"gambling\"] = {\n\tdisplay = \"[[gambling#Noun|gambling]]\",\n\ttopical_categories = {\"Gambling\"},\n}\n\nlabels[\"game of go\"] = {\n\tdisplay = \"[[Go|game of Go]]\",\n\ttopical_categories\
      \ = {\"Go\"},\n}\n\nlabels[\"game theory\"] = {\n\tdisplay = \"[[game theory]]\",\n\ttopical_categories = {\"Game theory\"},\n}\n\nlabels[\"games\"] = {\n\tdisplay = \"[[game]]s\",\n\ttopical_categories = {\"Games\"},\n}\naliases[\"game\"] = \"games\"\n\
      \nlabels[\"gaming\"] = {\n\tdisplay = \"[[gaming#Noun|gaming]]\",\n\ttopical_categories = {\"Gaming\"},\n}\n\nlabels[\"genealogy\"] = {\n\tdisplay = \"[[genealogy]]\",\n\ttopical_categories = {\"Genealogy\"},\n}\n\nlabels[\"genetics\"] = {\n\tdisplay =\
      \ \"[[genetics]]\",\n\ttopical_categories = {\"Genetics\"},\n}\n\nlabels[\"geography\"] = {\n\tdisplay = \"[[geography]]\",\n\ttopical_categories = {\"Geography\"},\n}\n\nlabels[\"geology\"] = {\n\tdisplay = \"[[geology]]\",\n\ttopical_categories = {\"\
      Geology\"},\n}\n\nlabels[\"geometry\"] = {\n\tdisplay = \"[[geometry]]\",\n\ttopical_categories = {\"Geometry\"},\n}\n\nlabels[\"geomorphology\"] = {\n\tdisplay = \"[[geomorphology]]\",\n\ttopical_categories = {\"Geomorphology\"},\n}\n\nlabels[\"gerontology\"\
      ] = {\n\tdisplay = \"[[gerontology]]\",\n\ttopical_categories = {\"Gerontology\"},\n}\n\nlabels[\"glassblowing\"] = {\n\tdisplay = \"[[glassblowing]]\",\n\ttopical_categories = {\"Glassblowing\"},\n}\n\nlabels[\"Gnosticism\"] = {\n\tdisplay = \"[[Gnosticism]]\"\
      ,\n\ttopical_categories = {\"Gnosticism\"},\n}\naliases[\"gnosticism\"] = \"Gnosticism\"\n\nlabels[\"go\"] = {\n\tdisplay = \"[[go]]\",\n\ttopical_categories = {\"Go\"},\n}\naliases[\"Go\"] = \"go\"\n\nlabels[\"golf\"] = {\n\tdisplay = \"[[golf]]\",\n\t\
      topical_categories = {\"Golf\"},\n}\n\nlabels[\"government\"] = {\n\tdisplay = \"[[government]]\",\n\ttopical_categories = {\"Government\"},\n}\n\nlabels[\"grammar\"] = {\n\tdisplay = \"[[grammar]]\",\n\ttopical_categories = {\"Grammar\"},\n}\n\nlabels[\"\
      grammatical mood\"] = {\n\tdisplay = \"[[grammar]]\",\n\ttopical_categories = {\"Grammatical moods\"},\n}\n\nlabels[\"graph theory\"] = {\n\tdisplay = \"[[graph theory]]\",\n\ttopical_categories = {\"Graph theory\"},\n}\n\nlabels[\"graphic design\"] =\
      \ {\n\tdisplay = \"[[graphic design]]\",\n\ttopical_categories = {\"Graphic design\"},\n}\n\nlabels[\"graphical user interface\"] = {\n\tdisplay = \"[[graphical user interface]]\",\n\ttopical_categories = {\"Graphical user interface\"},\n}\naliases[\"\
      GUI\"] = \"graphical user interface\"\n\nlabels[\"Greek mythology\"] = {\n\tdisplay = \"[[Greek]] [[mythology]]\",\n\ttopical_categories = {\"Greek mythology\"},\n}\naliases[\"greekmyth\"] = \"Greek mythology\"\ndeprecated[\"greekmyth\"] = true\n\nlabels[\"\
      group theory\"] = {\n\tdisplay = \"[[group theory]]\",\n\ttopical_categories = {\"Group theory\"},\n}\n\nlabels[\"gun mechanisms\"] = {\n\tdisplay = \"[[firearm]]s\",\n\ttopical_categories = {\"Gun mechanisms\"}\n}\naliases[\"firearm mechanism\"] = \"\
      Gun mechanisms\"\naliases[\"firearm mechanisms\"] = \"Gun mechanisms\"\naliases[\"gun mechanism\"] = \"Gun mechanisms\"\n\nlabels[\"gymnastics\"] = {\n\tdisplay = \"[[gymnastics]]\",\n\ttopical_categories = {\"Gymnastics\"},\n}\n\nlabels[\"gynaecology\"\
      ] = {\n\tdisplay = \"[[gynaecology]]\",\n\ttopical_categories = {\"Gynaecology\"},\n}\naliases[\"gynecology\"] = \"gynaecology\"\n\nlabels[\"handball\"] = {\n\tdisplay = \"[[handball]]\",\n\ttopical_categories = {\"Handball\"},\n}\n\nlabels[\"Hawaiian\
      \ mythology\"] = {\n\tdisplay = \"[[Hawaiian]] [[mythology]]\",\n\ttopical_categories = {\"Hawaiian mythology\"},\n}\n\nlabels[\"healthcare\"] = {\n\tdisplay = \"[[healthcare]]\",\n\ttopical_categories = {\"Healthcare\"},\n}\n\nlabels[\"hematology\"] =\
      \ {\n\tdisplay = \"[[hematology]]\",\n\ttopical_categories = {\"Hematology\"},\n}\naliases[\"haematology\"] = \"hematology\"\n\nlabels[\"heraldry\"] = {\n\tdisplay = \"[[heraldry]]\",\n\ttopical_categories = {\"Heraldry\"},\n}\n\nlabels[\"herbalism\"]\
      \ = {\n\tdisplay = \"[[herbalism]]\",\n\ttopical_categories = {\"Herbalism\"},\n}\n\nlabels[\"herpetology\"] = {\n\tdisplay = \"[[herpetology]]\",\n\ttopical_categories = {\"Herpetology\"},\n}\n\nlabels[\"Hinduism\"] = {\n\tdisplay = \"[[Hinduism]]\",\n\
      \ttopical_categories = {\"Hinduism\"},\n}\n\nlabels[\"historiography\"] = {\n\tdisplay = \"[[historiography]]\",\n\ttopical_categories = {\"Historiography\"},\n}\n\nlabels[\"history\"] = {\n\tdisplay = \"[[history]]\",\n\ttopical_categories = {\"History\"\
      },\n}\n\nlabels[\"hockey\"] = {\n\tdisplay = \"[[field hockey]] or [[ice hockey]]\",\n\ttopical_categories = {\"Field hockey\", \"Ice hockey\"},\n}\n\nlabels[\"homeopathy\"] = {\n\tdisplay = \"[[homeopathy]]\",\n\ttopical_categories = {\"Homeopathy\"},\n\
      }\n\nlabels[\"horse racing\"] = {\n\tdisplay = \"[[horse racing]]\",\n\ttopical_categories = {\"Horse racing\"},\n}\n\nlabels[\"horticulture\"] = {\n\tdisplay = \"[[horticulture]]\",\n\ttopical_categories = {\"Horticulture\"},\n}\naliases[\"gardening\"\
      ] = \"horticulture\"\n\nlabels[\"HTML\"] = {\n\tdisplay = \"[[Hypertext Markup Language|HTML]]\",\n\ttopical_categories = {\"HTML\"},\n}\n\nlabels[\"human resources\"] = {\n\tdisplay = \"[[human resources]]\",\n\ttopical_categories = {\"Human resources\"\
      },\n}\n\nlabels[\"humanities\"] = {\n\tdisplay = \"[[humanities]]\",\n\ttopical_categories = {\"Humanities\"},\n}\n\nlabels[\"hunting\"] = {\n\tdisplay = \"[[hunting#Noun|hunting]]\",\n\ttopical_categories = {\"Hunting\"},\n}\n\nlabels[\"hurling\"] = {\n\
      \tdisplay = \"[[hurling#Noun|hurling]]\",\n\ttopical_categories = {\"Hurling\"},\n}\n\nlabels[\"hydrology\"] = {\n\tdisplay = \"[[hydrology]]\",\n\ttopical_categories = {\"Hydrology\"},\n}\n\nlabels[\"ice hockey\"] = {\n\tdisplay = \"[[ice hockey]]\",\n\
      \ttopical_categories = {\"Ice hockey\"},\n}\n\nlabels[\"ichthyology\"] = {\n\tdisplay = \"[[ichthyology]]\",\n\ttopical_categories = {\"Ichthyology\"},\n}\n\nlabels[\"immunochemistry\"] = {\n\tdisplay = \"[[immunochemistry]]\",\n\ttopical_categories =\
      \ {\"Immunochemistry\"},\n}\n\nlabels[\"immunology\"] = {\n\tdisplay = \"[[immunology]]\",\n\ttopical_categories = {\"Immunology\"},\n}\n\nlabels[\"import/export\"] = {\n\tdisplay = \"[[import#Noun|import]]/[[export#Noun|export]]\",\n\ttopical_categories\
      \ = {\"Import/export\"},\n}\n\nlabels[\"Indo-European studies\"] = {\n\tdisplay = \"[[Indo-European studies]]\",\n\ttopical_categories = {\"Indo-European studies\"},\n}\naliases[\"indo-european studies\"] = \"Indo-European studies\"\n\nlabels[\"information\
      \ science\"] = {\n\tdisplay = \"[[information science]]\",\n\ttopical_categories = {\"Information science\"},\n}\n\nlabels[\"information theory\"] = {\n\tdisplay = \"[[information theory]]\",\n\ttopical_categories = {\"Information theory\"},\n}\n\nlabels[\"\
      inorganic chemistry\"] = {\n\tdisplay = \"[[inorganic chemistry]]\",\n\ttopical_categories = {\"Inorganic chemistry\"},\n}\n\nlabels[\"insurance\"] = {\n\tdisplay = \"[[insurance]]\",\n\ttopical_categories = {\"Insurance\"},\n}\n\nlabels[\"international\
      \ law\"] = {\n\tdisplay = \"[[international law]]\",\n\ttopical_categories = {\"International law\"},\n}\n\nlabels[\"Internet\"] = {\n\tdisplay = \"[[Internet]]\",\n\ttopical_categories = {\"Internet\"},\n}\naliases[\"internet\"] = \"Internet\"\naliases[\"\
      online\"] = \"Internet\"\n\nlabels[\"Iranian mythology\"] = {\n\tdisplay = \"[[Iranian]] [[mythology]]\",\n\ttopical_categories = {\"Iranian mythology\"},\n}\n\nlabels[\"Irish mythology\"] = {\n\tdisplay = \"[[Irish]] [[mythology]]\",\n\ttopical_categories\
      \ = {\"Irish mythology\"},\n}\n\nlabels[\"Islam\"] = {\n\tdisplay = \"[[Islam]]\",\n\ttopical_categories = {\"Islam\"},\n}\naliases[\"islam\"] = \"Islam\"\ndeprecated[\"islam\"] = true\n\nlabels[\"Jainism\"] = {\n\t\tdisplay = \"[[Jainism]]\",\n\ttopical_categories\
      \ = {\"Jainism\"},\n}\n\nlabels[\"Japanese mythology\"] = {\n\tdisplay = \"[[Japanese]] [[mythology]]\",\n\ttopical_categories = {\"Japanese mythology\"},\n}\n\nlabels[\"Java programming language\"] = {\n\tdisplay = \"[[w:Java (programming language)|Java\
      \ programming language]]\",\n\ttopical_categories = {\"Java programming language\"},\n}\naliases[\"JavaPL\"] = \"Java programming language\"\naliases[\"Java PL\"] = \"Java programming language\"\n\nlabels[\"jazz\"] = {\n\tdisplay = \"[[jazz#Noun|jazz]]\"\
      ,\n\ttopical_categories = {\"Jazz\"},\n}\n\nlabels[\"Jewish law\"] = {\n\tdisplay = \"[[Jewish]] [[law]]\",\n\ttopical_categories = {\"Jewish law\"},\n}\naliases[\"Halacha\"] = \"Jewish law\"\naliases[\"Halachah\"] = \"Jewish law\"\naliases[\"Halakha\"\
      ] = \"Jewish law\"\naliases[\"Halakhah\"] = \"Jewish law\"\naliases[\"halacha\"] = \"Jewish law\"\naliases[\"halachah\"] = \"Jewish law\"\naliases[\"halakha\"] = \"Jewish law\"\naliases[\"halakhah\"] = \"Jewish law\"\naliases[\"jewish law\"] = \"Jewish\
      \ law\"\naliases[\"Jewish Law\"] = \"Jewish law\"\n\nlabels[\"journalism\"] = {\n\tdisplay = \"[[journalism]]\",\n\ttopical_categories = {\"Mass media\"},\n}\n\nlabels[\"Judaism\"] = {\n\tdisplay = \"[[Judaism]]\",\n\ttopical_categories = {\"Judaism\"\
      },\n}\n\nlabels[\"judo\"] = {\n\tdisplay = \"[[judo]]\",\n\ttopical_categories = {\"Judo\"},\n}\n\nlabels[\"juggling\"] = {\n\tdisplay = \"[[juggling#Noun|juggling]]\",\n\ttopical_categories = {\"Juggling\"},\n}\n\nlabels[\"knitting\"] = {\n\tdisplay =\
      \ \"[[knitting#Noun|knitting]]\",\n\ttopical_categories = {\"Knitting\"},\n}\n\nlabels[\"lacrosse\"] = {\n\tdisplay = \"[[lacrosse]]\",\n\ttopical_categories = {\"Lacrosse\"},\n}\n\nlabels[\"law\"] = {\n\tdisplay = \"[[law]]\",\n\ttopical_categories =\
      \ {\"Law\"},\n}\naliases[\"legal\"] = \"law\"\n\nlabels[\"law enforcement\"] = {\n\tdisplay = \"[[law enforcement]]\",\n\ttopical_categories = {\"Law enforcement\"},\n}\naliases[\"police\"] = \"law enforcement\"\naliases[\"policing\"] = \"law enforcement\"\
      \n\nlabels[\"letterpress\"] = {\n\tdisplay = \"[[letterpress]] [[typography]]\",\n\ttopical_categories = {\"Typography\"},\n}\naliases[\"metal type\"] = \"letterpress\"\naliases[\"metal typesetting\"] = \"letterpress\"\n\nlabels[\"lexicography\"] = {\n\
      \tdisplay = \"[[lexicography]]\",\n\ttopical_categories = {\"Lexicography\"},\n}\n\nlabels[\"LGBT\"] = {\n\tdisplay = \"[[LGBT]]\",\n\ttopical_categories = {\"LGBT\"},\n}\n\nlabels[\"liberalism\"] = {\n\tdisplay = \"[[liberalism]]\",\n\ttopical_categories\
      \ = {\"Liberalism\"},\n}\n\nlabels[\"library science\"] = {\n\tdisplay = \"[[library science]]\",\n\ttopical_categories = {\"Library science\"},\n}\n\nlabels[\"lichenology\"] = {\n\tdisplay = \"[[lichenology]]\",\n\ttopical_categories = {\"Lichenology\"\
      },\n}\n\nlabels[\"limnology\"] = {\n\tdisplay = \"[[limnology]]\",\n\ttopical_categories = {\"Ecology\"},\n}\n\nlabels[\"lipid\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Lipids\"},\n}\n\nlabels[\"linear algebra\"] = {\n\tdisplay\
      \ = \"[[linear algebra]]\",\n\ttopical_categories = {\"Linear algebra\"},\n}\naliases[\"vector\"] = \"linear algebra\"\naliases[\"vector algebra\"] = \"linear algebra\"\ndeprecated[\"vector\"] = true\n\nlabels[\"linguistic morphology\"] = {\n\tdisplay\
      \ = \"[[linguistic]] [[morphology]]\",\n\ttopical_categories = {\"Linguistic morphology\"},\n}\naliases[\"morphology\"] = \"linguistic morphology\"\ndeprecated[\"morphology\"] = true\n\nlabels[\"linguistics\"] = {\n\tdisplay = \"[[linguistics]]\",\n\t\
      topical_categories = {\"Linguistics\"},\n}\n\nlabels[\"literature\"] = {\n\tdisplay = \"[[literature]]\",\n\ttopical_categories = {\"Literature\"},\n}\n\nlabels[\"logic\"] = {\n\tdisplay = \"[[logic]]\",\n\ttopical_categories = {\"Logic\"},\n}\n\nlabels[\"\
      luge\"] = {\n\tdisplay = \"[[luge]]\",\n\ttopical_categories = {\"Luge\"},\n}\n\nlabels[\"machining\"] = {\n\tdisplay = \"[[machining#Noun|machining]]\",\n\ttopical_categories = {\"Machining\"},\n}\n\nlabels[\"mahjong\"] = {\n\tdisplay = \"[[mahjong]]\"\
      ,\n\ttopical_categories = {\"Mahjong\"},\n}\n\nlabels[\"malacology\"] = {\n\tdisplay = \"[[malacology]]\",\n\ttopical_categories = {\"Malacology\"},\n}\n\nlabels[\"mammalogy\"] = {\n\tdisplay = \"[[mammalogy]]\",\n\ttopical_categories = {\"Mammalogy\"\
      },\n}\n\nlabels[\"management\"] = {\n\tdisplay = \"[[management]]\",\n\ttopical_categories = {\"Management\"},\n}\n\nlabels[\"manga\"] = {\n\tdisplay = \"[[manga]]\",\n\ttopical_categories = {\"Japanese fiction\"},\n}\n\nlabels[\"manufacturing\"] = {\n\
      \tdisplay = \"[[manufacturing#Noun|manufacturing]]\",\n\ttopical_categories = {\"Manufacturing\"},\n}\naliases[\"industry\"] = \"manufacturing\"\ndeprecated[\"industry\"] = true\n\nlabels[\"marching\"] = {\n\tdisplay = \"[[marching#Noun|marching]]\",\n\
      \ttopical_categories = {\"Marching\"},\n}\n\nlabels[\"marine biology\"] = {\n\tdisplay = \"[[marine biology]]\",\n\ttopical_categories = {\"Marine biology\"},\n}\naliases[\"coral science\"] = \"marine biology\"\n\nlabels[\"marketing\"] = {\n\tdisplay =\
      \ \"[[marketing#Noun|marketing]]\",\n\ttopical_categories = {\"Marketing\"},\n}\n\nlabels[\"martial arts\"] = {\n\tdisplay = \"[[martial arts]]\",\n\ttopical_categories = {\"Martial arts\"},\n}\n\nlabels[\"Marxism\"] = {\n\tdisplay = \"[[Marxism]]\",\n\
      \ttopical_categories = {\"Marxism\"},\n}\n\nlabels[\"massage\"] = {\n\tdisplay = \"[[massage]]\",\n\ttopical_categories = {\"Massage\"},\n}\n\nlabels[\"materials science\"] = {\n\tdisplay = \"[[materials science]]\",\n\ttopical_categories = {\"Materials\
      \ science\"},\n}\n\nlabels[\"mathematical analysis\"] = {\n\tdisplay = \"[[mathematical analysis]]\",\n\ttopical_categories = {\"Mathematical analysis\"},\n}\naliases[\"analysis\"] = \"mathematical analysis\"\n\nlabels[\"mathematics\"] = {\n\tdisplay =\
      \ \"[[mathematics]]\",\n\ttopical_categories = {\"Mathematics\"},\n}\naliases[\"math\"] = \"mathematics\"\naliases[\"maths\"] = \"mathematics\"\n\nlabels[\"mechanical engineering\"] = {\n\tdisplay = \"[[mechanical engineering]]\",\n\ttopical_categories\
      \ = {\"Mechanical engineering\"},\n}\n\nlabels[\"mechanics\"] = {\n\tdisplay = \"[[mechanics]]\",\n\ttopical_categories = {\"Mechanics\"},\n}\n\nlabels[\"media\"] = {\n\tdisplay = \"[[media]]\",\n\ttopical_categories = {\"Media\"},\n}\n\nlabels[\"mediaeval\
      \ folklore\"] = {\n\tdisplay = \"[[mediaeval]] [[folklore]]\",\n\ttopical_categories = {\"European folklore\"},\n}\naliases[\"medieval folklore\"] = \"mediaeval folklore\"\n\nlabels[\"medical genetics\"] = {\n\tdisplay = \"[[medical]] [[genetics]]\",\n\
      \ttopical_categories = {\"Medical genetics\"},\n}\n\nlabels[\"medical sign\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories = {\"Medical signs and symptoms\"},\n}\n\nlabels[\"medicine\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories\
      \ = {\"Medicine\"},\n}\naliases[\"medical\"] = \"medicine\"\n\nlabels[\"Mesopotamian mythology\"] = {\n\tdisplay = \"[[Mesopotamian]] [[mythology]]\",\n\ttopical_categories = {\"Mesopotamian mythology\"},\n}\n\nlabels[\"metadata\"] = {\n\tdisplay = \"\
      [[metadata]]\",\n\ttopical_categories = {\"Data management\"},\n}\n\nlabels[\"metallurgy\"] = {\n\tdisplay = \"[[metallurgy]]\",\n\ttopical_categories = {\"Metallurgy\"},\n}\n\nlabels[\"metaphysics\"] = {\n\tdisplay = \"[[metaphysics]]\",\n\ttopical_categories\
      \ = {\"Metaphysics\"},\n}\n\nlabels[\"meteorology\"] = {\n\tdisplay = \"[[meteorology]]\",\n\ttopical_categories = {\"Meteorology\"},\n}\n\nlabels[\"metrology\"] = {\n\tdisplay = \"[[metrology]]\",\n\ttopical_categories = {\"Metrology\"},\n}\n\nlabels[\"\
      microbiology\"] = {\n\tdisplay = \"[[microbiology]]\",\n\ttopical_categories = {\"Microbiology\"},\n}\n\nlabels[\"microelectronics\"] = {\n\tdisplay = \"[[microelectronics]]\",\n\ttopical_categories = {\"Microelectronics\"},\n}\n\nlabels[\"microscopy\"\
      ] = {\n\tdisplay = \"[[microscopy]]\",\n\ttopical_categories = {\"Microscopy\"},\n}\n\nlabels[\"military\"] = {\n\tdisplay = \"[[military]]\",\n\ttopical_categories = {\"Military\"},\n}\n\nlabels[\"mineralogy\"] = {\n\tdisplay = \"[[mineralogy]]\",\n\t\
      topical_categories = {\"Mineralogy\"},\n}\n\nlabels[\"mining\"] = {\n\tdisplay = \"[[mining#Noun|mining]]\",\n\ttopical_categories = {\"Mining\"},\n}\n\nlabels[\"molecular biology\"] = {\n\tdisplay = \"[[molecular biology]]\",\n\ttopical_categories = {\"\
      Molecular biology\"},\n}\n\nlabels[\"monarchy\"] = {\n\tdisplay = \"[[monarchy]]\",\n\ttopical_categories = {\"Monarchy\"},\n}\n\nlabels[\"money\"] = {\n\tdisplay = \"[[money]]\",\n\ttopical_categories = {\"Money\"},\n}\n\nlabels[\"Mormonism\"] = {\n\t\
      display = \"[[Mormonism]]\",\n\ttopical_categories = {\"Mormonism\"},\n}\n\nlabels[\"motorcycling\"] = {\n\tdisplay = \"[[motorcycling#Noun|motorcycling]]\",\n\ttopical_categories = {\"Motorcycles\"},\n}\n\nlabels[\"motor racing\"] = {\n\tdisplay = \"\
      [[motor racing]]\",\n\ttopical_categories = {\"Motor racing\"},\n}\naliases[\"motor sport\"] = \"motor racing\"\n\nlabels[\"music\"] = {\n\tdisplay = \"[[music]]\",\n\ttopical_categories = {\"Music\"},\n}\n\nlabels[\"mycology\"] = {\n\tdisplay = \"[[mycology]]\"\
      ,\n\ttopical_categories = {\"Mycology\"},\n}\n\nlabels[\"mythology\"] = {\n\tdisplay = \"[[mythology]]\",\n\ttopical_categories = {\"Mythology\"},\n}\n\nlabels[\"nanotechnology\"] = {\n\tdisplay = \"[[nanotechnology]]\",\n\ttopical_categories = {\"Nanotechnology\"\
      },\n}\n\nlabels[\"narratology\"] = {\n\tdisplay = \"[[narratology]]\",\n\ttopical_categories = {\"Narratology\"},\n}\n\nlabels[\"nautical\"] = {\n\tdisplay = \"[[nautical]]\",\n\ttopical_categories = {\"Nautical\"},\n}\n\nlabels[\"navigation\"] = {\n\t\
      display = \"[[navigation]]\",\n\ttopical_categories = {\"Navigation\"},\n}\n\nlabels[\"Nazism\"] = { -- but also this is often used to indicate Nazi-used jargon; cf \"white supremacist ideology\"\n\tdisplay = \"[[w:Nazism|Nazism]]\",\n\ttopical_categories\
      \ = {\"Nazism\"},\n}\naliases[\"Nazi\"] = \"Nazism\"\naliases[\"nazi\"] = \"Nazism\"\naliases[\"nazism\"] = \"Nazism\"\naliases[\"neo-Nazism\"] = \"Nazism\"\naliases[\"neo-nazism\"] = \"Nazism\"\naliases[\"neo-Nazi\"] = \"Nazism\"\naliases[\"neo-nazi\"\
      ] = \"Nazism\"\naliases[\"neoNazism\"] = \"Nazism\"\naliases[\"neoNazi\"] = \"Nazism\"\naliases[\"neonazism\"] = \"Nazism\"\naliases[\"neonazi\"] = \"Nazism\"\n\nlabels[\"nematology\"] = {\n\tdisplay = \"[[nematology]]\",\n\ttopical_categories = {\"Zoology\"\
      },\n}\n\nlabels[\"netball\"] = {\n\tdisplay = \"[[netball]]\",\n\ttopical_categories = {\"Netball\"},\n}\n\nlabels[\"networking\"] = {\n\tdisplay = \"[[networking#Noun|networking]]\",\n\ttopical_categories = {\"Networking\"},\n}\n\nlabels[\"neuroanatomy\"\
      ] = {\n\tdisplay = \"[[neuroanatomy]]\",\n\ttopical_categories = {\"Neuroanatomy\"},\n}\n\nlabels[\"neurology\"] = {\n\tdisplay = \"[[neurology]]\",\n\ttopical_categories = {\"Neurology\"},\n}\n\nlabels[\"neuroscience\"] = {\n\tdisplay = \"[[neuroscience]]\"\
      ,\n\ttopical_categories = {\"Neuroscience\"},\n}\n\nlabels[\"neurosurgery\"] = {\n\tdisplay = \"[[neurosurgery]]\",\n\ttopical_categories = {\"Neurosurgery\"},\n}\n\nlabels[\"newspapers\"] = {\n\tdisplay = \"[[newspaper]]s\",\n\ttopical_categories = {\"\
      Newspapers\"},\n}\n\nlabels[\"Norse mythology\"] = {\n\tdisplay = \"[[Norse]] [[mythology]]\",\n\ttopical_categories = {\"Norse mythology\"},\n}\n\nlabels[\"nuclear physics\"] = {\n\tdisplay = \"[[nuclear physics]]\",\n\ttopical_categories = {\"Nuclear\
      \ physics\"},\n}\n\nlabels[\"number theory\"] = {\n\tdisplay = \"[[number theory]]\",\n\ttopical_categories = {\"Number theory\"},\n}\n\nlabels[\"numismatics\"] = {\n\tdisplay = \"[[numismatics]]\",\n\ttopical_categories = {\"Currency\"},\n}\naliases[\"\
      currency\"] = \"numismatics\"\ndeprecated[\"currency\"] = true\n\nlabels[\"nutrition\"] = {\n\tdisplay = \"[[nutrition]]\",\n\ttopical_categories = {\"Nutrition\"},\n}\n\nlabels[\"object-oriented programming\"] = {\n\tdisplay = \"[[w:Object-oriented programming|object-oriented\
      \ programming]]\",\n\ttopical_categories = {\"Object-oriented programming\"},\n}\naliases[\"object-oriented\"] = \"object-oriented programming\"\n\nlabels[\"obstetrics\"] = {\n\tdisplay = \"[[obstetrics]]\",\n\ttopical_categories = {\"Obstetrics\"},\n\
      }\naliases[\"obstetric\"] = \"obstetrics\"\n\nlabels[\"occult\"] = {\n\tdisplay = \"[[occult]]\",\n\ttopical_categories = {\"Occult\"},\n}\n\nlabels[\"oceanography\"] = {\n\tdisplay = \"[[oceanography]]\",\n\ttopical_categories = {\"Oceanography\"},\n\
      }\n\nlabels[\"oenology\"] = {\n\tdisplay = \"[[oenology]]\",\n\ttopical_categories = {\"Oenology\"},\n}\n\nlabels[\"oil industry\"] = {\n\tdisplay = \"[[w:Petroleum industry|oil industry]]\",\n\ttopical_categories = {\"Oil industry\"},\n}\naliases[\"oil\
      \ drilling\"] = \"oil industry\"\n\nlabels[\"oncology\"] = {\n\tdisplay = \"[[oncology]]\",\n\ttopical_categories = {\"Oncology\"},\n}\n\nlabels[\"online gaming\"] = {\n\tdisplay = \"[[online]] [[gaming#Noun|gaming]]\",\n\ttopical_categories = {\"Video\
      \ games\"},\n}\naliases[\"online games\"] = \"online gaming\"\naliases[\"MMO\"] = \"online gaming\"\naliases[\"MMORPG\"] = \"online gaming\"\n\nlabels[\"opera\"] = {\n\tdisplay = \"[[opera]]\",\n\ttopical_categories = {\"Opera\"},\n}\n\nlabels[\"operating\
      \ systems\"] = {\n\tdisplay = \"[[operating system]]s\",\n\ttopical_categories = {\"Software\"},\n}\n\nlabels[\"ophthalmology\"] = {\n\tdisplay = \"[[ophthalmology]]\",\n\ttopical_categories = {\"Ophthalmology\"},\n}\n\nlabels[\"optics\"] = {\n\tdisplay\
      \ = \"[[optics]]\",\n\ttopical_categories = {\"Optics\"},\n}\n\nlabels[\"organic chemistry\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Organic chemistry\"},\n}\n\nlabels[\"ornithology\"] = {\n\tdisplay = \"[[ornithology]]\"\
      ,\n\ttopical_categories = {\"Ornithology\"},\n}\n\nlabels[\"orthodontics\"] = {\n\tdisplay = \"[[orthodontics]]\",\n\ttopical_categories = {\"Dentistry\"},\n}\n\nlabels[\"orthography\"] = {\n\tdisplay = \"[[orthography]]\",\n\ttopical_categories = {\"\
      Orthography\"},\n}\n\nlabels[\"paganism\"] = {\n\tdisplay = \"[[paganism]]\",\n\ttopical_categories = {\"Paganism\"},\n}\naliases[\"pagan\"] = \"paganism\"\naliases[\"neopagan\"] = \"paganism\"\naliases[\"neopaganism\"] = \"paganism\"\naliases[\"neo-pagan\"\
      ] = \"paganism\"\naliases[\"neo-paganism\"] = \"paganism\"\n\nlabels[\"pain\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories = {\"Pain\"},\n}\n\nlabels[\"paintball\"] = {\n\tdisplay = \"[[paintball]]\",\n\ttopical_categories = {\"Paintball\"\
      },\n}\n\nlabels[\"painting\"] = {\n\tdisplay = \"[[painting#Noun|painting]]\",\n\ttopical_categories = {\"Painting\"},\n}\n\nlabels[\"palaeography\"] = {\n\tdisplay = \"[[palaeography]]\",\n\ttopical_categories = {\"Palaeography\"},\n}\naliases[\"paleography\"\
      ] = \"palaeography\"\n\nlabels[\"paleontology\"] = {\n\tdisplay = \"[[paleontology]]\",\n\ttopical_categories = {\"Paleontology\"},\n}\naliases[\"palaeontology\"] = \"paleontology\"\n\nlabels[\"palmistry\"] = {\n\tdisplay = \"[[palmistry]]\",\n\ttopical_categories\
      \ = {\"Palmistry\"},\n}\n\nlabels[\"palynology\"] = {\n\tdisplay = \"[[palynology]]\",\n\ttopical_categories = {\"Palynology\"},\n}\n\nlabels[\"parapsychology\"] = {\n\tdisplay = \"[[parapsychology]]\",\n\ttopical_categories = {\"Parapsychology\"},\n}\n\
      \nlabels[\"particle physics\"] = {\n\tdisplay = \"[[particle physics]]\",\n\ttopical_categories = {\"Particle physics\"},\n}\n\nlabels[\"pasteurisation\"] = {\n\tdisplay = \"[[pasteurisation]]\",\n\ttopical_categories = {\"Pasteurisation\"},\n}\n\nlabels[\"\
      patent law\"] = {\n\tdisplay = \"[[patent#Noun|patent]] [[law]]\",\n\ttopical_categories = {\"Patent law\"},\n}\naliases[\"patents\"] = \"patent law\"\n\nlabels[\"pathology\"] = {\n\tdisplay = \"[[pathology]]\",\n\ttopical_categories = {\"Pathology\"},\n\
      }\n\nlabels[\"pensions\"] = {\n\tdisplay = \"[[pension]]s\",\n\ttopical_categories = {\"Pensions\"},\n}\n\nlabels[\"pesäpallo\"] = {\n\tdisplay = \"[[pesäpallo]]\",\n\ttopical_categories = {\"Pesäpallo\"},\n}\naliases[\"pesapallo\"] = \"pesäpallo\"\n\n\
      labels[\"petrochemistry\"] = {\n\tdisplay = \"[[petrochemistry]]\",\n\ttopical_categories = {\"Petrochemistry\"},\n}\n\nlabels[\"petrology\"] = {\n\tdisplay = \"[[petrology]]\",\n\ttopical_categories = {\"Petrology\"},\n}\n\nlabels[\"pharmacology\"] =\
      \ {\n\tdisplay = \"[[pharmacology]]\",\n\ttopical_categories = {\"Pharmacology\"},\n}\n\nlabels[\"pharmacy\"] = {\n\tdisplay = \"[[pharmacy]]\",\n\ttopical_categories = {\"Pharmacy\"},\n}\n\nlabels[\"pharyngology\"] = {\n\tdisplay = \"[[pharyngology]]\"\
      ,\n\ttopical_categories = {\"Pharyngology\"},\n}\n\nlabels[\"philately\"] = {\n\tdisplay = \"[[philately]]\",\n\ttopical_categories = {\"Philately\"},\n}\n\nlabels[\"philosophy\"] = {\n\tdisplay = \"[[philosophy]]\",\n\ttopical_categories = {\"Philosophy\"\
      },\n}\n\nlabels[\"phonetics\"] = {\n\tdisplay = \"[[phonetics]]\",\n\ttopical_categories = {\"Phonetics\"},\n}\n\nlabels[\"phonology\"] = {\n\tdisplay = \"[[phonology]]\",\n\ttopical_categories = {\"Phonology\"},\n}\n\nlabels[\"photography\"] = {\n\tdisplay\
      \ = \"[[photography]]\",\n\ttopical_categories = {\"Photography\"},\n}\n\nlabels[\"phrenology\"] = {\n\tdisplay = \"[[phrenology]]\",\n\ttopical_categories = {\"Phrenology\"},\n}\n\nlabels[\"physical chemistry\"] = {\n\tdisplay = \"[[physical chemistry]]\"\
      ,\n\ttopical_categories = {\"Physical chemistry\"},\n}\n\nlabels[\"physics\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Physics\"},\n}\n\nlabels[\"physiology\"] = {\n\tdisplay = \"[[physiology]]\",\n\ttopical_categories = {\"Physiology\"\
      },\n}\n\nlabels[\"phytopathology\"] = {\n\tdisplay = \"[[phytopathology]]\",\n\ttopical_categories = {\"Phytopathology\"},\n}\n\nlabels[\"pinball\"] = {\n\tdisplay = \"[[pinball]]\",\n\ttopical_categories = {\"Pinball\"},\n}\n\nlabels[\"planetology\"]\
      \ = {\n\tdisplay = \"[[planetology]]\",\n\ttopical_categories = {\"Planetology\"},\n}\n\nlabels[\"poetry\"] = {\n\tdisplay = \"[[poetry]]\",\n\ttopical_categories = {\"Poetry\"},\n}\n\nlabels[\"Pokémon\"] = {\n\tdisplay = \"[[w:Pokémon|Pokémon]]\",\n\t\
      topical_categories = {\"Pokémon\"},\n}\n\nlabels[\"poker\"] = {\n\tdisplay = \"[[poker]]\",\n\ttopical_categories = {\"Poker\"},\n}\n\nlabels[\"poker slang\"] = {\n\tdisplay = \"[[poker]] [[slang]]\",\n\ttopical_categories = {\"Poker\"},\n}\n\nlabels[\"\
      political science\"] = {\n\tdisplay = \"[[political science]]\",\n\ttopical_categories = {\"Political science\"},\n}\n\nlabels[\"politics\"] = {\n\tdisplay = \"[[politics]]\",\n\ttopical_categories = {\"Politics\"},\n}\naliases[\"political\"] = \"politics\"\
      \n\nlabels[\"polymer science\"] = {\n\tdisplay = \"[[polymer]] [[science]]\",\n\ttopical_categories = {\"Polymer science\"},\n}\n\nlabels[\"pornography\"] = {\n\tdisplay = \"[[pornography]]\",\n\ttopical_categories = {\"Pornography\"},\n}\n\nlabels[\"\
      Portuguese folklore\"] = {\n\tdisplay = \"[[Portuguese#Adjective|Portuguese]] [[folklore]]\",\n\ttopical_categories = {\"European folklore\"},\n}\n\nlabels[\"pottery\"] = {\n\tdisplay = \"[[pottery]]\",\n\ttopical_categories = {\"Ceramics\"},\n}\n\nlabels[\"\
      pragmatics\"] = {\n\tdisplay = \"[[pragmatics]]\",\n\ttopical_categories = {\"Pragmatics\"},\n}\n\nlabels[\"printing\"] = {\n\tdisplay = \"[[printing#Noun|printing]]\",\n\ttopical_categories = {\"Printing\"},\n}\n\nlabels[\"probability theory\"] = {\n\t\
      display = \"[[probability theory]]\",\n\ttopical_categories = {\"Probability theory\"},\n}\n\nlabels[\"programming\"] = {\n\tdisplay = \"[[programming#Noun|programming]]\",\n\ttopical_categories = {\"Programming\"},\n}\naliases[\"computer programming\"\
      ] = \"programming\"\n\nlabels[\"property law\"] = {\n\tdisplay = \"[[property law]]\",\n\ttopical_categories = {\"Property law\"},\n}\n\nlabels[\"prosody\"] = {\n\tdisplay = \"[[prosody]]\",\n\ttopical_categories = {\"Prosody\"},\n}\n\nlabels[\"Protestantism\"\
      ] = {\n\tdisplay = \"[[Protestantism]]\",\n\ttopical_categories = {\"Protestantism\"},\n}\n\nlabels[\"pseudoscience\"] = {\n\tdisplay = \"[[pseudoscience]]\",\n\ttopical_categories = {\"Pseudoscience\"},\n}\n\nlabels[\"psychiatry\"] = {\n\tdisplay = \"\
      [[psychiatry]]\",\n\ttopical_categories = {\"Psychiatry\"},\n}\n\nlabels[\"psychoanalysis\"] = {\n\tdisplay = \"[[psychoanalysis]]\",\n\ttopical_categories = {\"Psychoanalysis\"},\n}\n\nlabels[\"psychology\"] = {\n\tdisplay = \"[[psychology]]\",\n\ttopical_categories\
      \ = {\"Psychology\"},\n}\n\nlabels[\"psychotherapy\"] = {\n\tdisplay = \"[[psychotherapy]]\",\n\ttopical_categories = {\"Psychotherapy\"},\n}\n\nlabels[\"publishing\"] = {\n\tdisplay = \"[[publishing#Noun|publishing]]\",\n\ttopical_categories = {\"Publishing\"\
      },\n}\n\nlabels[\"pyrotechnics\"] = {\n\tdisplay = \"[[pyrotechnics]]\",\n\ttopical_categories = {\"Pyrotechnics\"},\n}\n\nlabels[\"Quakerism\"] = {\n\ttopical_categories = {\"Quakerism\"},\n}\n\nlabels[\"quantum mechanics\"] = {\n\ttopical_categories\
      \ = {\"Quantum mechanics\"},\n}\naliases[\"quantum physics\"] = \"quantum mechanics\"\naliases[\"quantum\"] = \"quantum mechanics\"\ndeprecated[\"quantum\"] = true\n\n-- TODO: What kind of topic is \"radiation\"? Is it specific kinds of radiation? That\
      \ would be a set-type category.\nlabels[\"radiation\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Radiation\"},\n}\n\nlabels[\"radio\"] = {\n\tdisplay = \"[[radio]]\",\n\ttopical_categories = {\"Radio\"},\n}\n\nlabels[\"Raëlism\"] = {\n\
      \tdisplay = \"[[Raëlism]]\",\n\ttopical_categories = {\"Raëlism\"},\n}\n\nlabels[\"rail transport\"] = {\n\tdisplay = \"[[rail transport]]\",\n\ttopical_categories = {\"Rail transportation\"},\n}\naliases[\"rail\"] = \"rail transport\"\naliases[\"railroading\"\
      ] = \"rail transport\"\naliases[\"railroads\"] = \"rail transport\"\n\nlabels[\"Rastafari\"] = {\n\tdisplay = \"[[Rastafari]]\",\n\ttopical_categories = {\"Rastafari\"},\n}\naliases[\"Rasta\"] = \"Rastafari\"\naliases[\"rasta\"] = \"Rastafari\"\naliases[\"\
      Rastafarian\"] = \"Rastafari\"\naliases[\"rastafarian\"] = \"Rastafari\"\naliases[\"Rastafariamism\"] = \"Rastafari\"\n\nlabels[\"real estate\"] = {\n\tdisplay = \"[[real estate]]\",\n\ttopical_categories = {\"Real estate\"},\n}\n\nlabels[\"real tennis\"\
      ] = {\n\tdisplay = \"[[real tennis]]\",\n\ttopical_categories = {\"Tennis\"},\n}\n\nlabels[\"recreational mathematics\"] = {\n\tdisplay = \"[[recreational mathematics]]\",\n\ttopical_categories = {\"Mathematics\"},\n}\n\nlabels[\"regular expressions\"\
      ] = {\n\tdisplay = \"[[regular expression]]s\",\n\ttopical_categories = {\"Regular expressions\"},\n}\naliases[\"regex\"] = \"regular expressions\"\n\nlabels[\"relativity\"] = {\n\tdisplay = \"[[relativity]]\",\n\ttopical_categories = {\"Relativity\"},\n\
      }\n\nlabels[\"religion\"] = {\n\tdisplay = \"[[religion]]\",\n\ttopical_categories = {\"Religion\"},\n}\n\nlabels[\"rhetoric\"] = {\n\tdisplay = \"[[rhetoric]]\",\n\ttopical_categories = {\"Rhetoric\"},\n}\n\nlabels[\"road transport\"] = {\n\tdisplay =\
      \ \"[[w:road transport|road transport]]\",\n\ttopical_categories = {\"Road transport\"},\n}\n\nlabels[\"robotics\"] = {\n\tdisplay = \"[[robotics]]\",\n\ttopical_categories = {\"Robotics\"},\n}\n\nlabels[\"rock paper scissors\"] = {\n\ttopical_categories\
      \ = {\"Rock paper scissors\"},\n}\n\nlabels[\"role-playing games\"] = {\n\tdisplay = \"[[role-playing game]]s\",\n\ttopical_categories = {\"Role-playing games\"},\n}\naliases[\"role playing games\"] = \"role-playing games\"\naliases[\"RPG\"] = \"role-playing\
      \ games\"\n\nlabels[\"roller derby\"] = {\n\tdisplay = \"[[roller derby]]\",\n\ttopical_categories = {\"Roller derby\"},\n}\n\nlabels[\"Roman Catholicism\"] = {\n\tdisplay = \"[[Roman Catholicism]]\",\n\ttopical_categories = {\"Roman Catholicism\"},\n\
      }\naliases[\"Roman Catholic\"] = \"Roman Catholicism\"\n\nlabels[\"Roman mythology\"] = {\n\tdisplay = \"[[Roman]] [[mythology]]\",\n\ttopical_categories = {\"Roman mythology\"},\n}\n\nlabels[\"Roman numerals\"] = {\n\tdisplay = \"[[Roman numeral]]s\"\
      ,\n\ttopical_categories = {\"Roman numerals\"},\n}\n\nlabels[\"roofing\"] = {\n\tdisplay = \"[[roofing#Noun|roofing]]\",\n\ttopical_categories = {\"Roofing\"},\n}\n\nlabels[\"rosiculture\"] = {\n\tdisplay = \"[[rosiculture]]\",\n\ttopical_categories =\
      \ {\"Rosiculture\"},\n}\n\nlabels[\"rowing\"] = {\n\tdisplay = \"[[rowing#Noun|rowing]]\",\n\ttopical_categories = {\"Rowing\"},\n}\n\nlabels[\"Rubik's Cube\"] = {\n\tdisplay = \"[[Rubik's Cube]]\",\n\ttopical_categories = {\"Rubik's Cube\"},\n}\naliases[\"\
      Rubik's cubes\"] = \"Rubik's Cube\"\n\nlabels[\"rugby\"] = {\n\tdisplay = \"[[rugby]]\",\n\ttopical_categories = {\"Rugby\"},\n}\n\nlabels[\"rugby league\"] = {\n\tdisplay = \"[[rugby league]]\",\n\ttopical_categories = {\"Rugby league\"},\n}\n\nlabels[\"\
      rugby union\"] = {\n\tdisplay = \"[[rugby union]]\",\n\ttopical_categories = {\"Rugby union\"},\n}\n\nlabels[\"sailing\"] = {\n\tdisplay = \"[[sailing#Noun|sailing]]\",\n\ttopical_categories = {\"Sailing\"},\n}\n\nlabels[\"science fiction\"] = {\n\tdisplay\
      \ = \"[[science fiction]]\",\n\ttopical_categories = {\"Science fiction\"},\n}\naliases[\"scifi\"] = \"science fiction\"\naliases[\"sci fi\"] = \"science fiction\"\n\nlabels[\"sciences\"] = {\n\tdisplay = \"[[sciences]]\",\n\ttopical_categories = {\"Sciences\"\
      },\n}\naliases[\"science\"] = \"sciences\"\naliases[\"scientific\"] = \"sciences\"\n\nlabels[\"Scientology\"] = {\n\tdisplay = \"[[Scientology]]\",\n\ttopical_categories = {\"Scientology\"},\n}\n\nlabels[\"Scouting\"] = {\n\tdisplay = \"[[Scouting]]\"\
      ,\n\ttopical_categories = {\"Scouting\"},\n}\naliases[\"scouting\"] = \"Scouting\"\n\nlabels[\"scrapbooks\"] = {\n\tdisplay = \"[[scrapbook]]s\",\n\ttopical_categories = {\"Scrapbooks\"},\n}\n\nlabels[\"sculpture\"] = {\n\tdisplay = \"[[sculpture]]\",\n\
      \ttopical_categories = {\"Sculpture\"},\n}\n\nlabels[\"seduction community\"] = {\n\tdisplay = \"[[w:Seduction community|seduction community]]\",\n\ttopical_categories = {\"Seduction community\"},\n}\n\nlabels[\"seismology\"] = {\n\tdisplay = \"[[seismology]]\"\
      ,\n\ttopical_categories = {\"Seismology\"},\n}\n\nlabels[\"semantics\"] = {\n\tdisplay = \"[[semantics]]\",\n\ttopical_categories = {\"Semantics\"},\n}\n\nlabels[\"semiotics\"] = {\n\tdisplay = \"[[semiotics]]\",\n\ttopical_categories = {\"Semiotics\"\
      },\n}\n\nlabels[\"set theory\"] = {\n\tdisplay = \"[[set theory]]\",\n\ttopical_categories = {\"Set theory\"},\n}\n\nlabels[\"sewing\"] = {\n\tdisplay = \"[[sewing#Noun|sewing]]\",\n\ttopical_categories = {\"Sewing\"},\n}\n\nlabels[\"sexology\"] = {\n\t\
      display = \"[[sexology]]\",\n\ttopical_categories = {\"Sexology\"},\n}\n\nlabels[\"sexuality\"] = {\n\tdisplay = \"[[sexuality]]\",\n\ttopical_categories = {\"Sexuality\"},\n}\n\nlabels[\"shamanism\"] = {\n\tdisplay = \"[[shamanism]]\",\n\ttopical_categories\
      \ = {\"Shamanism\"},\n}\naliases[\"Shamanism\"] = \"shamanism\"\n\nlabels[\"Shinto\"] = {\n\tdisplay = \"[[Shinto]]\",\n\ttopical_categories = {\"Shinto\"},\n}\n\nlabels[\"shipping\"] = {\n\tdisplay = \"[[shipping#Noun|shipping]]\",\n\ttopical_categories\
      \ = {\"Shipping\"},\n}\n\nlabels[\"shogi\"] = {\n\tdisplay = \"[[shogi]]\",\n\ttopical_categories = {\"Shogi\"},\n}\n\nlabels[\"signal processing\"] = {\n\tdisplay = \"[[w:Signal processing|signal processing]]\",\n\ttopical_categories = {\"Signal processing\"\
      },\n}\n\nlabels[\"Sikhism\"] = {\n\tdisplay = \"[[Sikhism]]\",\n\ttopical_categories = {\"Sikhism\"},\n}\n\nlabels[\"singing\"] = {\n\tdisplay = \"[[singing#Noun|singing]]\",\n\ttopical_categories = {\"Singing\"},\n}\n\nlabels[\"skateboarding\"] = {\n\t\
      display = \"[[skateboarding#Noun|skateboarding]]\",\n\ttopical_categories = {\"Skateboarding\"},\n}\n\nlabels[\"skating\"] = {\n\tdisplay = \"[[skating#Noun|skating]]\",\n\ttopical_categories = {\"Skating\"},\n}\n\nlabels[\"skiing\"] = {\n\tdisplay = \"\
      [[skiing#Noun|skiing]]\",\n\ttopical_categories = {\"Skiing\"},\n}\n\nlabels[\"smoking\"] = {\n\tdisplay = \"[[smoking#Noun|smoking]]\",\n\ttopical_categories = {\"Smoking\"},\n}\n\nlabels[\"snooker\"] = {\n\tdisplay = \"[[snooker#Noun|snooker]]\",\n\t\
      topical_categories = {\"Snooker\"},\n}\n\nlabels[\"snowboarding\"] = {\n\tdisplay = \"[[snowboarding#Noun|snowboarding]]\",\n\ttopical_categories = {\"Snowboarding\"},\n}\n\nlabels[\"soccer\"] = {\n\tdisplay = \"[[soccer]]\",\n\ttopical_categories = {\"\
      Football (soccer)\"},\n}\naliases[\"football\"] = \"soccer\"\naliases[\"association football\"] = \"soccer\"\n\nlabels[\"social sciences\"] = {\n\tdisplay = \"[[social sciences]]\",\n\ttopical_categories = {\"Social sciences\"},\n}\naliases[\"social science\"\
      ] = \"social sciences\"\n\nlabels[\"socialism\"] = {\n\tdisplay = \"[[socialism]]\",\n\ttopical_categories = {\"Socialism\"},\n}\n\nlabels[\"sociolinguistics\"] = {\n\tdisplay = \"[[sociolinguistics]]\",\n\ttopical_categories = {\"Sociolinguistics\"},\n\
      }\n\nlabels[\"sociology\"] = {\n\tdisplay = \"[[sociology]]\",\n\ttopical_categories = {\"Sociology\"},\n}\n\nlabels[\"softball\"] = {\n\tdisplay = \"[[softball]]\",\n\ttopical_categories = {\"Softball\"},\n}\n\nlabels[\"software\"] = {\n\tdisplay = \"\
      [[software]]\",\n\ttopical_categories = {\"Software\"},\n}\n\nlabels[\"software architecture\"] = {\n\tdisplay = \"[[software architecture]]\",\n\ttopical_categories = {\"Software engineering\", \"Programming\"},\n}\n\nlabels[\"software engineering\"]\
      \ = {\n\tdisplay = \"[[software engineering]]\",\n\ttopical_categories = {\"Software engineering\"},\n}\n\nlabels[\"soil science\"] = {\n\tdisplay = \"[[soil science]]\",\n\ttopical_categories = {\"Soil science\"},\n}\n\nlabels[\"sound\"] = {\n\tdisplay\
      \ = \"[[sound#Noun|sound]]\",\n\ttopical_categories = {\"Sound\"},\n}\n\nlabels[\"sound engineering\"] = {\n\tdisplay = \"[[sound engineering]]\",\n\ttopical_categories = {\"Sound engineering\"},\n}\n\nlabels[\"Soviet Union\"] = {\n\tdisplay = \"[[Soviet\
      \ Union]]\",\n\ttopical_categories = {\"Soviet Union\"},\n}\naliases[\"USSR\"] = \"Soviet Union\"\n\nlabels[\"space flight\"] = {\n\tdisplay = \"[[space flight]]\",\n\ttopical_categories = {\"Space\"},\n}\n\nlabels[\"space science\"] = {\n\tdisplay = \"\
      [[space science]]\",\n\ttopical_categories = {\"Space\"},\n}\naliases[\"space\"] = \"space science\"\n\nlabels[\"spectroscopy\"] = {\n\tdisplay = \"[[spectroscopy]]\",\n\ttopical_categories = {\"Spectroscopy\"},\n}\n\nlabels[\"spiritualism\"] = {\n\tdisplay\
      \ = \"[[spiritualism]]\",\n\ttopical_categories = {\"Spiritualism\"},\n}\n\nlabels[\"sports\"] = {\n\tdisplay = \"[[sports]]\",\n\ttopical_categories = {\"Sports\"},\n}\naliases[\"sport\"] = \"sports\"\n\nlabels[\"squash\"] = {\n\tdisplay = \"[[squash#Noun|squash\
      \ (sport)]]\",\n\ttopical_categories = {\"Squash\"},\n}\n\nlabels[\"statistics\"] = {\n\tdisplay = \"[[statistics]]\",\n\ttopical_categories = {\"Statistics\"},\n}\n\nlabels[\"Star Wars\"] = {\n\tdisplay = \"[[Star Wars]]\",\n\ttopical_categories = {\"\
      Star Wars\"},\n}\n\nlabels[\"stock market\"] = {\n\tdisplay = \"[[stock market]]\",\n\ttopical_categories = {\"Stock market\"},\n}\n\nlabels[\"stock ticker symbol\"] = {\n\tdisplay = \"[[stock ticker symbol]]\",\n\ttopical_categories = {\"Stock symbols\
      \ for companies\"},\n}\naliases[\"stock symbol\"] = \"stock ticker symbol\"\n\nlabels[\"subculture\"] = {\n\tdisplay = \"[[subculture]]\",\n\ttopical_categories = {\"Culture\"},\n}\n\nlabels[\"sumo\"] = {\n\tdisplay = \"[[sumo]]\",\n\ttopical_categories\
      \ = {\"Sumo\"},\n}\n\nlabels[\"surfing\"] = {\n\tdisplay = \"[[surfing#Noun|surfing]]\",\n\ttopical_categories = {\"Surfing\"},\n}\n\nlabels[\"surgery\"] = {\n\tdisplay = \"[[surgery]]\",\n\ttopical_categories = {\"Surgery\"},\n}\n\nlabels[\"surveying\"\
      ] = {\n\tdisplay = \"[[surveying#Noun|surveying]]\",\n\ttopical_categories = {\"Surveying\"},\n}\n\nlabels[\"sushi\"] = {\n\tdisplay = \"[[sushi]]\",\n\ttopical_categories = {\"Sushi\"},\n}\n\nlabels[\"swimming\"] = {\n\tdisplay = \"[[swimming#Noun|swimming]]\"\
      ,\n\ttopical_categories = {\"Swimming\"},\n}\n\nlabels[\"swords\"] = {\n\tdisplay = \"[[sword]]s\",\n\ttopical_categories = {\"Swords\"},\n}\n\nlabels[\"systematics\"] = {\n\tdisplay = \"[[systematics]]\",\n\ttopical_categories = {\"Systematics\"},\n}\n\
      \nlabels[\"systems engineering\"] = {\n\tdisplay = \"[[systems engineering]]\",\n\ttopical_categories = {\"Systems engineering\"},\n}\n\nlabels[\"systems theory\"] = {\n\tdisplay = \"[[systems theory]]\",\n\ttopical_categories = {\"Systems theory\"},\n\
      }\n\nlabels[\"table tennis\"] = {\n\tdisplay = \"[[table tennis]]\",\n\ttopical_categories = {\"Table tennis\"},\n}\n\nlabels[\"Taoism\"] = {\n\tdisplay = \"[[Taoism]]\",\n\ttopical_categories = {\"Taoism\"},\n}\naliases[\"Daoism\"] = \"Taoism\"\n\nlabels[\"\
      tarot\"] = {\n\tdisplay = \"[[tarot]]\",\n\ttopical_categories = {\"Cartomancy\"},\n}\n\nlabels[\"taxation\"] = {\n\tdisplay = \"[[taxation]]\",\n\ttopical_categories = {\"Law\"},\n}\naliases[\"tax\"] = \"taxation\"\naliases[\"taxes\"] = \"taxation\"\n\
      \nlabels[\"taxonomy\"] = {\n\tdisplay = \"[[taxonomy]]\",\n\ttopical_categories = {\"Taxonomy\"},\n}\n\nlabels[\"technology\"] = {\n\tdisplay = \"[[technology]]\",\n\ttopical_categories = {\"Technology\"},\n}\n\nlabels[\"telecommunications\"] = {\n\tdisplay\
      \ = \"[[telecommunications]]\",\n\ttopical_categories = {\"Telecommunications\"},\n}\naliases[\"telecommunication\"] = \"telecommunications\"\naliases[\"telecom\"] = \"telecommunications\"\n\nlabels[\"telegraphy\"] = {\n\tdisplay = \"[[telegraphy]]\",\n\
      \ttopical_categories = {\"Telegraphy\"},\n}\n\nlabels[\"telephony\"] = {\n\tdisplay = \"[[telephony]]\",\n\ttopical_categories = {\"Telephony\"},\n}\naliases[\"telephone\"] = \"telephony\"\naliases[\"telephones\"] = \"telephony\"\n\nlabels[\"television\"\
      ] = {\n\tdisplay = \"[[television]]\",\n\ttopical_categories = {\"Television\"},\n}\naliases[\"TV\"] = \"television\"\n\nlabels[\"tennis\"] = {\n\tdisplay = \"[[tennis]]\",\n\ttopical_categories = {\"Tennis\"},\n}\n\nlabels[\"teratology\"] = {\n\tdisplay\
      \ = \"[[teratology]]\",\n\ttopical_categories = {\"Teratology\"},\n}\n\nlabels[\"Tetris\"] = {\n\tdisplay = \"[[Tetris]]\",\n\ttopical_categories = {\"Tetris\"},\n}\n\nlabels[\"textiles\"] = {\n\tdisplay = \"[[textiles]]\",\n\ttopical_categories = {\"\
      Textiles\"},\n}\n\nlabels[\"theater\"] = {\n\tdisplay = \"[[theater]]\",\n\ttopical_categories = {\"Theater\"},\n}\naliases[\"theatre\"] = \"theater\"\n\nlabels[\"theology\"] = {\n\tdisplay = \"[[theology]]\",\n\ttopical_categories = {\"Theology\"},\n\
      }\n\nlabels[\"thermodynamics\"] = {\n\tdisplay = \"[[thermodynamics]]\",\n\ttopical_categories = {\"Thermodynamics\"},\n}\n\nlabels[\"Tibetan Buddhism\"] = {\n\tdisplay = \"[[Tibetan Buddhism]]\",\n\ttopical_categories = {\"Buddhism\"},\n}\n\nlabels[\"\
      topology\"] = {\n\tdisplay = \"[[topology]]\",\n\ttopical_categories = {\"Topology\"},\n}\n\nlabels[\"tourism\"] = {\n\tdisplay = \"[[tourism]]\",\n\ttopical_categories = {\"Tourism\"},\n}\n\nlabels[\"toxicology\"] = {\n\tdisplay = \"[[toxicology]]\",\n\
      \ttopical_categories = {\"Toxicology\"},\n}\n\nlabels[\"trading\"] = {\n\tdisplay = \"[[trading#Noun|trading]]\",\n\ttopical_categories = {\"Trading\"},\n}\n\nlabels[\"trading cards\"] = {\n\tdisplay = \"[[trading card]]s\",\n\ttopical_categories = {\"\
      Trading cards\"},\n}\n\nlabels[\"traditional Chinese medicine\"] = {\n\tdisplay = \"[[traditional Chinese medicine]]\",\n\ttopical_categories = {\"Traditional Chinese medicine\"},\n}\naliases[\"TCM\"] = \"traditional Chinese medicine\"\naliases[\"Chinese\
      \ medicine\"] = \"traditional Chinese medicine\"\n\nlabels[\"transgender\"] = {\n\tdisplay = \"[[transgender]]\",\n\ttopical_categories = {\"Transgender\"},\n}\n\nlabels[\"translation studies\"] = {\n\tdisplay = \"[[translation studies]]\",\n\ttopical_categories\
      \ = {\"Translation studies\"},\n}\n\nlabels[\"transport\"] = {\n\tdisplay = \"[[transport]]\",\n\ttopical_categories = {\"Transport\"},\n}\naliases[\"transportation\"] = \"transport\"\n\nlabels[\"traumatology\"] = {\n\tdisplay = \"[[traumatology]]\",\n\
      \ttopical_categories = {\"Emergency medicine\"},\n}\n\nlabels[\"travel\"] = {\n\tdisplay = \"[[travel]]\",\n\ttopical_categories = {\"Travel\"},\n}\n\nlabels[\"trigonometry\"] = {\n\tdisplay = \"[[trigonometry]]\",\n\ttopical_categories = {\"Trigonometry\"\
      },\n}\n\nlabels[\"two-up\"] = {\n\tdisplay = \"[[two-up]]\",\n\ttopical_categories = {\"Two-up\"},\n}\n\nlabels[\"typography\"] = {\n\tdisplay = \"[[typography]]\",\n\ttopical_categories = {\"Typography\"},\n}\naliases[\"typesetting\"] = \"typography\"\
      \n\nlabels[\"ufology\"] = {\n\tdisplay = \"[[ufology]]\",\n\ttopical_categories = {\"Ufology\"},\n}\n\nlabels[\"underwater diving\"] = {\n\tdisplay = \"[[underwater]] [[diving#Noun|diving]]\",\n\ttopical_categories = {\"Underwater diving\"},\n}\naliases[\"\
      scuba\"] = \"underwater diving\"\naliases[\"scuba diving\"] = \"underwater diving\"\n\nlabels[\"Valentinianism\"] = {\n\tdisplay = \"[[w:Valentinianism|Valentinianism]]\",\n\ttopical_categories = {\"Valentinianism\"},\n}\naliases[\"valentinianism\"] =\
      \ \"Valentinianism\"\n\nlabels[\"vegetable\"] = {\n\tdisplay = \"[[vegetable]]\",\n\ttopical_categories = {\"Vegetables\"},\n}\naliases[\"vegetables\"] = \"vegetable\"\n\nlabels[\"vehicles\"] = {\n\tdisplay = \"[[vehicle]]s\",\n\ttopical_categories = {\"\
      Vehicles\"},\n}\naliases[\"vehicle\"] = \"vehicles\"\n\nlabels[\"veterinary medicine\"] = {\n\tdisplay = \"[[veterinary medicine]]\",\n\ttopical_categories = {\"Veterinary medicine\"},\n}\n\nlabels[\"video games\"] = {\n\tdisplay = \"[[video game]]s\"\
      ,\n\ttopical_categories = {\"Video games\"},\n}\naliases[\"video gaming\"] = \"video games\"\n\nlabels[\"virology\"] = {\n\tdisplay = \"[[virology]]\",\n\ttopical_categories = {\"Virology\"},\n}\n\nlabels[\"viticulture\"] = {\n\tdisplay = \"[[viticulture]]\"\
      ,\n\ttopical_categories = {\"Horticulture\", \"Wine\"},\n}\n\nlabels[\"volcanology\"] = {\n\tdisplay = \"[[volcanology]]\",\n\ttopical_categories = {\"Volcanology\"},\n}\naliases[\"vulcanology\"] = \"volcanology\"\n\nlabels[\"volleyball\"] = {\n\tdisplay\
      \ = \"[[volleyball]]\",\n\ttopical_categories = {\"Volleyball\"},\n}\n\nlabels[\"voodoo\"] = {\n\tdisplay = \"[[voodoo]]\",\n\ttopical_categories = {\"Voodoo\"},\n}\n\nlabels[\"weather\"] = {\n\ttopical_categories = {\"Weather\"},\n}\n\nlabels[\"weaving\"\
      ] = {\n\ttopical_categories = {\"Weaving\"},\n}\n\nlabels[\"web design\"] = {\n\ttopical_categories = {\"Web design\"},\n}\n\nlabels[\"web development\"] = {\n\ttopical_categories = {\"Programming\", \"Web design\"},\n}\n\nlabels[\"weightlifting\"] = {\n\
      \ttopical_categories = {\"Weightlifting\"},\n}\n\nlabels[\"white supremacist ideology\"] = { -- but also this is often used to indicate white-supremacist-used jargon; cf \"Nazism\"\n\tdisplay = \"[[w:White supremacy|white supremacist ideology]]\",\n\t\
      topical_categories = {\"White supremacist ideology\"},\n}\naliases[\"white nationalism\"] = \"white supremacist ideology\"\naliases[\"white nationalist\"] = \"white supremacist ideology\"\naliases[\"white power\"] = \"white supremacist ideology\"\naliases[\"\
      white racism\"] = \"white supremacist ideology\"\naliases[\"white supremacy\"] = \"white supremacist ideology\"\naliases[\"white supremacism\"] = \"white supremacist ideology\"\naliases[\"white supremacist\"] = \"white supremacist ideology\"\n\nlabels[\"\
      wine\"] = {\n\tdisplay = \"[[wine]]\",\n\ttopical_categories = {\"Wine\"},\n}\n\nlabels[\"woodworking\"] = {\n\ttopical_categories = {\"Woodworking\"},\n}\n\nlabels[\"wrestling\"] = {\n\ttopical_categories = {\"Wrestling\"},\n}\n\nlabels[\"writing\"] =\
      \ {\n\ttopical_categories = {\"Writing\"},\n}\n\nlabels[\"yoga\"] = {\n\ttopical_categories = {\"Yoga\"},\n}\n\nlabels[\"zoology\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Zoology\"},\n}\n\nlabels[\"zootomy\"] = {\n\tdisplay = \"[[zootomy]]\"\
      ,\n\ttopical_categories = {\"Animal body parts\"},\n}\n\nlabels[\"Zoroastrianism\"] = {\n\tdisplay = \"[[Zoroastrianism]]\",\n\ttopical_categories = {\"Zoroastrianism\"},\n}\n\n\n-- Labels with set-type categories\n\n-- TODO: These are probably misuses\
      \ of the label template, and should be deprecated\n\nlabels[\"amino acid\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Amino acids\"},\n}\n\nlabels[\"architectural element\"] = {\n\tdisplay = \"[[architecture]]\",\n\ttopical_categories\
      \ = {\"Architectural elements\"},\n}\naliases[\"architectural elements\"] = \"architectural element\"\n\nlabels[\"asterism\"] = {\n\tdisplay = \"[[uranography]]\",\n\ttopical_categories = {\"Asterisms\"},\n}\n\nlabels[\"biblical character\"] = {\n\tdisplay\
      \ = \"[[Bible|biblical]]\",\n\ttopical_categories = {\"Biblical characters\"},\n}\naliases[\"Biblical character\"] = \"biblical character\"\naliases[\"biblical figure\"] = \"biblical character\"\naliases[\"Biblical figure\"] = \"biblical character\"\n\n\
      labels[\"book of the bible\"] = {\n\tdisplay = \"[[Bible|biblical]]\",\n\ttopical_categories = {\"Books of the Bible\"},\n}\n\nlabels[\"canid\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Canids\"},\n}\n\nlabels[\"carbohydrate\"] = {\n\
      \tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Carbohydrates\"},\n}\n\nlabels[\"coenzyme\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Coenzymes\"},\n}\n\nlabels[\"constellation\"] = {\n\tdisplay = \"[[astronomy]]\"\
      ,\n\ttopical_categories = {\"Constellations\"},\n}\n\nlabels[\"cookware\"] = {\n\tdisplay = \"[[cooking#Noun|cooking]]\",\n\ttopical_categories = {\"Cookware and bakeware\"},\n}\n\nlabels[\"disease\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories\
      \ = {\"Diseases\"},\n}\naliases[\"diseases\"] = \"disease\"\n\nlabels[\"E number\"] = {\n\tdisplay = \"[[food]] [[manufacture]]\",\n\tplain_categories = {\"E numbers\"},\n}\n\nlabels[\"element symbol\"] = {\n\tdisplay = \"[[chemistry]]\",\n\tplain_categories\
      \ = {\"Symbols for chemical elements\"},\n}\n\nlabels[\"enzyme\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Enzymes\"},\n}\n\nlabels[\"fatty acid\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Fatty acids\"\
      },\n}\n\nlabels[\"felid\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Felids\"},\n}\naliases[\"cat\"] = \"felid\"\n\nlabels[\"fictional character\"] = {\n\tdisplay = \"[[fiction]]\",\n\ttopical_categories = {\"Fictional characters\"},\n\
      }\n\nlabels[\"figure of speech\"] = {\n\tdisplay = \"[[rhetoric]]\",\n\ttopical_categories = {\"Figures of speech\"},\n}\n\nlabels[\"fish\"] = {\n\tdisplay = \"[[zoology]]\",\n\ttopical_categories = {\"Fish\"},\n}\n\nlabels[\"footwear\"] = {\n\tdisplay\
      \ = \"[[clothing#Noun|clothing]]\",\n\ttopical_categories = {\"Footwear\"},\n}\n\nlabels[\"functional group prefix\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Functional group prefixes\"},\n}\n\nlabels[\"functional group suffix\"\
      ] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Functional group suffixes\"},\n}\n\nlabels[\"galaxy\"] = {\n\tdisplay = \"[[astronomy]]\",\n\ttopical_categories = {\"Galaxies\"},\n}\n\nlabels[\"genetic disorder\"] = {\n\tdisplay\
      \ = \"[[medical]] [[genetics]]\",\n\ttopical_categories = {\"Genetic disorders\"},\n}\n\nlabels[\"Greek god\"] = {\n\tdisplay = \"[[Greek]] [[mythology]]\",\n\ttopical_categories = {\"Greek deities\"},\n}\n\nlabels[\"heraldic charge\"] = {\n\tdisplay =\
      \ \"[[heraldry]]\",\n\ttopical_categories = {\"Heraldic charges\"},\n}\naliases[\"heraldiccharge\"] = \"heraldic charge\"\n\nlabels[\"Hindu god\"] = {\n\tdisplay = \"[[Hinduism]]\",\n\ttopical_categories = {\"Hindu deities\"},\n}\n\nlabels[\"hormone\"\
      ] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Hormones\"},\n}\n\nlabels[\"hydrocarbon chain prefix\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Hydrocarbon chain prefixes\"},\n}\n\nlabels[\"hydrocarbon\
      \ chain suffix\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Hydrocarbon chain suffixes\"},\n}\n\nlabels[\"incoterm\"] = {\n\tdisplay = \"[[incoterm]]\",\n\ttopical_categories = {\"Incoterms\"},\n}\n\nlabels[\"inorganic compound\"\
      ] = {\n\tdisplay = \"[[inorganic chemistry]]\",\n\ttopical_categories = {\"Inorganic compounds\"},\n}\n\nlabels[\"isotope\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Isotopes\"},\n}\n\nlabels[\"landforms\"] = {\n\tdisplay = \"[[geography]]\"\
      ,\n\ttopical_categories = {\"Landforms\"},\n}\n\nlabels[\"logical fallacy\"] = {\n\tdisplay = \"[[rhetoric]]\",\n\ttopical_categories = {\"Logical fallacies\"},\n}\n\nlabels[\"lutherie\"] = {\n\tdisplay = \"[[lutherie]]\",\n\ttopical_categories = {\"Lutherie\"\
      },\n}\n\nlabels[\"Mesopotamian god\"] = {\n\tdisplay = \"[[Mesopotamian]] [[mythology]]\",\n\ttopical_categories = {\"Mesopotamian deities\"},\n}\n\nlabels[\"metamaterial\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Metamaterials\"},\n\
      }\n\nlabels[\"military ranks\"] = {\n\tdisplay = \"[[military]]\",\n\ttopical_categories = {\"Military ranks\"},\n}\naliases[\"military rank\"] = \"military ranks\"\n\nlabels[\"military unit\"] = {\n\tdisplay = \"[[military]]\",\n\ttopical_categories =\
      \ {\"Military units\"},\n}\n\nlabels[\"mineral\"] = {\n\tdisplay = \"[[mineralogy]]\",\n\ttopical_categories = {\"Minerals\"},\n}\n\nlabels[\"mobile phones\"] = {\n\tdisplay = \"[[mobile telephone|mobile telephony]]\",\n\ttopical_categories = {\"Mobile\
      \ phones\"},\n}\naliases[\"cell phone\"] = \"mobile phones\"\naliases[\"cell phones\"] = \"mobile phones\"\naliases[\"mobile phone\"] = \"mobile phones\"\naliases[\"mobile telephony\"] = \"mobile phones\"\n\nlabels[\"muscle\"] = {\n\tdisplay = \"[[anatomy]]\"\
      ,\n\ttopical_categories = {\"Muscles\"},\n}\n\nlabels[\"mushroom\"] = {\n\tdisplay = \"[[mycology]]\",\n\ttopical_categories = {\"Mushrooms\"},\n}\naliases[\"mushrooms\"] = \"mushroom\"\n\nlabels[\"musical instruments\"] = {\n\tdisplay = \"[[music]]\"\
      ,\n\ttopical_categories = {\"Musical instruments\"},\n}\naliases[\"musical instrument\"] = \"musical instruments\"\naliases[\"musici\"] = \"musical instruments\"\ndeprecated[\"musici\"] = true\n\nlabels[\"music genre\"] = {\n\tdisplay = \"[[music]]\",\n\
      \ttopical_categories = {\"Musical genres\"},\n}\n\nlabels[\"musician\"] = {\n\tdisplay = \"[[music]]\",\n\ttopical_categories = {\"Musicians\"},\n}\n\nlabels[\"mythological creature\"] = {\n\tdisplay = \"[[mythology]]\",\n\ttopical_categories = {\"Mythological\
      \ creatures\"},\n}\n\nlabels[\"neurotoxin\"] = {\n\tdisplay = \"[[neurotoxicology]]\",\n\ttopical_categories = {\"Neurotoxins\"},\n}\n\nlabels[\"neurotransmitter\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Neurotransmitters\"},\n\
      }\n\nlabels[\"organic compound\"] = {\n\tdisplay = \"[[organic chemistry]]\",\n\ttopical_categories = {\"Organic compounds\"},\n}\n\nlabels[\"part of speech\"] = {\n\tdisplay = \"[[grammar]]\",\n\ttopical_categories = {\"Parts of speech\"},\n}\n\nlabels[\"\
      particle\"] = {\n\tdisplay = \"[[physics]]\",\n\ttopical_categories = {\"Subatomic particles\"},\n}\n\nlabels[\"pharmaceutical drug\"] = {\n\tdisplay = \"[[pharmacology]]\",\n\ttopical_categories = {\"Pharmaceutical drugs\"},\n}\n\nlabels[\"plant\"] =\
      \ {\n\tdisplay = \"[[botany]]\",\n\ttopical_categories = {\"Plants\"},\n}\n\nlabels[\"plant disease\"] = {\n\tdisplay = \"[[phytopathology]]\",\n\ttopical_categories = {\"Plant diseases\"},\n}\n\nlabels[\"poison\"] = {\n\tdisplay = \"[[toxicology]]\",\n\
      \ttopical_categories = {\"Poisons\"},\n}\n\nlabels[\"political subdivision\"] = {\n\tdisplay = \"[[government]]\",\n\ttopical_categories = {\"Political subdivisions\"},\n}\n\nlabels[\"protein\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories\
      \ = {\"Proteins\"},\n}\naliases[\"proteins\"] = \"protein\"\n\nlabels[\"rock\"] = {\n\tdisplay = \"[[petrology]]\",\n\ttopical_categories = {\"Rocks\"},\n}\n\nlabels[\"Roman god\"] = {\n\tdisplay = \"[[Roman]] [[mythology]]\",\n\ttopical_categories = {\"\
      Roman deities\"},\n}\n\nlabels[\"schools\"] = {\n\tdisplay = \"[[education]]\",\n\ttopical_categories = {\"Schools\"},\n}\n\nlabels[\"skeleton\"] = {\n\tdisplay = \"[[anatomy]]\",\n\ttopical_categories = {\"Skeleton\"},\n}\n\nlabels[\"standard of identity\"\
      ] = {\n\tdisplay = \"[[standard of identity|standards of identity]]\",\n\ttopical_categories = {\"Standards of identity\"},\n}\n\nlabels[\"star\"] = {\n\tdisplay = \"[[astronomy]]\",\n\ttopical_categories = {\"Stars\"},\n}\n\nlabels[\"steroid\"] = {\n\t\
      display = \"[[biochemistry]]\",\n\ttopical_categories = {\"Steroids\"},\n}\n\nlabels[\"steroid hormone\"] = {\n\tdisplay = \"[[biochemistry]], [[steroids]]\",\n\ttopical_categories = {\"Hormones\"},\n}\naliases[\"steroid drug\"] = \"steroid hormone\"\n\
      \nlabels[\"surface feature\"] = {\n\tdisplay = \"[[planetology]]\",\n\ttopical_categories = {\"Planetary nomenclature\"},\n}\n\nlabels[\"symptom\"] = {\n\tdisplay = \"[[medicine]]\",\n\ttopical_categories = {\"Medical signs and symptoms\"},\n}\n\nlabels[\"\
      taxonomic name\"] = {\n\tdisplay = \"[[taxonomy]]\",\n\ttopical_categories = {\"Taxonomic names\"},\n}\n\nlabels[\"tincture\"] = {\n\tdisplay = \"[[heraldry]]\",\n\ttopical_categories = {\"Heraldic tinctures\"},\n}\n\nlabels[\"video game genre\"] = {\n\
      \tdisplay = \"[[video game]]s\",\n\ttopical_categories = {\"Video game genres\"},\n}\n\nlabels[\"vitamin\"] = {\n\tdisplay = \"[[biochemistry]]\",\n\ttopical_categories = {\"Vitamins\"},\n}\n\nlabels[\"watercraft\"] = {\n\tdisplay = \"[[nautical]]\",\n\
      \ttopical_categories = {\"Watercraft\"},\n}\n\nlabels[\"weaponry\"] = {\n\tdisplay = \"[[weaponry]]\",\n\ttopical_categories = {\"Weapons\"},\n}\naliases[\"weapons\"] = \"weaponry\"\n\nlabels[\"Wiktionary and WMF jargon\"] = {\n\tdisplay = \"[[Wiktionary]]\
      \ and [[Appendix:Glossary#W|WMF]] [[jargon]]\",\n\ttopical_categories = {\"Wiki\"},\n}\naliases[\"WMF\"] = \"Wiktionary and WMF jargon\"\naliases[\"WMF jargon\"] = \"Wiktionary and WMF jargon\"\naliases[\"Wiktionary\"] = \"Wiktionary and WMF jargon\"\n\
      aliases[\"Wiktionary jargon\"] = \"Wiktionary and WMF jargon\"\n\nlabels[\"yoga pose\"] = {\n\tdisplay = \"[[yoga]]\",\n\ttopical_categories = {\"Yoga poses\"},\n}\naliases[\"asana\"] = \"yoga pose\"\n\nlabels[\"zodiac constellations\"] = {\n\tdisplay\
      \ = \"[[astronomy]]\",\n\ttopical_categories = {\"Constellations in the zodiac\"},\n}\n\nreturn {labels = labels, aliases = aliases, deprecated = deprecated}</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:48.289Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fescape_wiki%2Ffrom+Template%3Atrans-top&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=33349 t=1555362468210968
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:48 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1227.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 201541175, 565715771, 699216238
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/escape_wiki/from Template:trans-top" to="Template:tracking/ugly hacks/escape wiki/from Template:trans-top" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/escape wiki/from Template:trans-top" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:07:41.745Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AisValidPageName&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=40756 t=1555362461658784
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:41 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 509354227, 560020156, 696889193
    body: '<?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and
      breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated,
      and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="288906" pageid="288906" ns="10" title="Template:isValidPageName"><revisions><rev user="TheDaveRoss" timestamp="2016-10-25T18:15:16Z" contentformat="text/x-wiki"
      contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:isValidPageName]]&quot;: Adjusting the protection level from &#039;sysop&#039; to &#039;template editor&#039;. ([Edit=Allow only template editors and administrators] (indefinite)
      [Move=Allow only template editors and administrators] (in..." xml:space="preserve">{{#ifeq:{{{1}}}|-||{{#invoke:ugly hacks|is_valid_page_name|{{{1}}}}}}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>'
- recorded: 2019-04-15T21:07:48.491Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fis_valid_page_name&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=39652 t=1555362468407085
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:48 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 201440957, 557337764, 703694645
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/is_valid_page_name" to="Template:tracking/ugly hacks/is valid page name" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/is valid page name" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:07:48.654Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Atracking%2Fugly+hacks%2Fis_valid_page_name%2Ffrom+Template%3AisValidPageName&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46856 t=1555362468562026
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:48 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 420228375, 560740522, 693059569
    body: <?xml version="1.0"?><api batchcomplete=""><query><normalized><n from="Template:tracking/ugly hacks/is_valid_page_name/from Template:isValidPageName" to="Template:tracking/ugly hacks/is valid page name/from Template:isValidPageName" /></normalized><pages><page _idx="-1" ns="10" title="Template:tracking/ugly hacks/is valid page name/from Template:isValidPageName" missing="" /></pages></query></api>
- recorded: 2019-04-15T21:07:42.254Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aredlink+category&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=51930 t=1555362462155446
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:42 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 209885929, 563163504, 699147033
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5376702\" pageid=\"5376702\" ns=\"828\" title=\"Module:redlink category\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-01-27T00:37:29Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"protected-calling mw.incrementExpensiveFunctionCount doesn&#039;t really work as a way to test if the expensive function count is at or above the limit; index link_object.exists in a protected\
      \ function instead\" xml:space=\"preserve\">local export = {}\n\nfunction export.cat (frame)\n\tlocal redlink_category = \"\"\n\n\tlocal m_languages = require(\"Module:languages\")\n\tlocal code = frame.args[1] -- language code\n\tlocal template = frame.args[\"\
      template\"]\n\n\tlocal lang = m_languages.getByCode(frame.args[1])\n\tlocal entry = require(\"Module:links\").getLinkPage(frame.args[2], lang) -- entry name (parameter 2 in Template:m, Template:l)\n\n\tlocal link_object = mw.title.new (entry)\n\t\n\t--\
      \ Prevent an expensive parser function error. Unfortunately, we can't check\n\t-- the expensive parser function count before running the preceding code\n\t-- in this function.\n\tlocal success, exists\n\tif link_object then\n\t\tsuccess, exists = pcall(function\
      \ () return link_object.exists end)\n\tend\n\n\tif success and not exists then\n\t\tlocal langname = lang:getCanonicalName()\n\t\t\n\t\tredlink_category = \"[[Category:\" .. langname .. \" redlinks]]\"\n\t\tif template and template ~= \"-\" then\n\t\t\t\
      redlink_category = redlink_category .. \"[[Category:\" .. langname .. \" redlinks/\" .. template .. \"]]\"\n\t\tend\n\tend\n\n\treturn redlink_category\n\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:42.836Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Alanguages%2Fdata3%2Fg&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=57160 t=1555362462696075
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:42 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 422522014, 832966854, 693026560
    body: !!binary |-
      
- recorded: 2019-04-15T21:07:43.022Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Atranslit-redirect&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=48082 t=1555362462927457
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:43 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1312.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 197549046, 638077061, 689855720
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6114267\" pageid=\"6114267\" ns=\"828\" title=\"Module:translit-redirect\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-07-15T19:49:12Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"not sure &quot;wrong script&quot; error is wanted\" xml:space=\"preserve\">local export = {}\n\nfunction export.tr(text, lang, sc, debug_mode)\n\tif not sc then\n\t\tsc = require(\"Module:scripts\"\
      ).findBestScript(text, require(\"Module:languages\").getByCode(lang)):getCode()\n\tend\n\t\n\tlocal language_data = mw.loadData(\"Module:translit-redirect/data\")[lang]\n\t\n\tif language_data then\n\t\tscript_data = language_data[sc]\n\t\t\n\t\tif script_data\
      \ then\n\t\t\tif script_data.module then\n\t\t\t\tlocal success, translit_module = pcall(require, \"Module:\" .. script_data.module)\n\t\t\t\n\t\t\t\tif success then\n\t\t\t\t\treturn translit_module.tr(text, lang, sc, debug_mode)\n\t\t\t\telse\n\t\t\t\
      \t\terror(translit_module)\n\t\t\t\tend\n\t\t\telse\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\trequire(\"Module:debug\").track{\n\t\t\t\t\"translit-redirect/incorrect-script/\" .. lang,\n\t\t\t\t\"translit-redirect/incorrect-script/\" .. lang .. \"\
      /\" .. sc,\n\t\t\t}\n\t\t\tmw.log(\"script code (\" .. sc .. \") for language code \" .. lang .. \" not found in Module:translit-redirect/data; text: \" .. text)\n\t\tend\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:43.206Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Atranslit-redirect%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=57310 t=1555362463099852
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:43 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1279.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 424385169, 506857642, 320789113
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6313843\" pageid=\"6313843\" ns=\"828\" title=\"Module:translit-redirect/data\"><revisions><rev user=\"Sardarmann\" timestamp=\"2018-12-21T03:56:18Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">result = {\n\t[\"grc\"] = {\n\t\t[\"polytonic\"] = {\n\t\t\t[\"module\"] = \"grc-translit\",\n\t\t},\n\t\t[\"Cprt\"] = {\n\t\t\t[\"module\"] = \"Cprt-translit\"\
      ,\n\t\t},\n\t\t[\"noError\"] = true,\n\t},\n\t[\"khb\"] = {\n\t\t[\"Talu\"] = {\n\t\t\t[\"module\"] = \"Talu-translit\",\n\t\t},\n\t\t[\"Lana\"] = {\n--\t\t\t[\"module\"] = \"Lana-translit\",\n\t\t},\n\t},\n\t[\"ku\"] = {\n\t\t[\"Latn\"] = {\n\t\t},\n\t\
      \t[\"ku-Arab\"] = {\n\t\t\tmodule = \"ckb-translit\",\n\t\t},\n\t\t[\"Arab\"] = {\n\t\t},\n\t\t[\"Armn\"] = {\n\t\t\tmodule = \"Armn-translit\",\n\t\t},\n\t\t[\"Cyrl\"] = {\n\t\t\tmodule = \"kmr-translit\",\n\t\t},\n\t},\n\t[\"pa\"] = {\n\t\t[\"debug_mode\"\
      ] = true,\n\t\t[\"Guru\"] = {\n\t\t\t[\"module\"] = \"Guru-translit\",\n\t\t},\n\t\t[\"Deva\"] = {\n\t\t\t[\"module\"] = \"hi-translit\",\n\t\t},\n\t\t[\"pa-Arab\"] = {\n\t\t\t[\"module\"] = \"pa-Arab-translit\",\n\t\t},\n\t\t[\"Shah\"] = {\n\t\t\t[\"\
      module\"] = \"pa-Arab-translit\",\n\t\t},\n\t},\n\t[\"pal\"] = {\n\t\t[\"Latn\"] = {\n\t\t},\n\t\t[\"Phli\"] = {\n\t\t\t[\"module\"] = \"Phli-translit\",\n\t\t},\n\t\t[\"Avst\"] = {\n\t\t\t[\"module\"] = \"Avst-translit\",\n\t\t},\n\t\t[\"Mani\"] = {\n\
      \t\t\t[\"module\"] = \"Mani-translit\",\n\t\t},\n\t\t[\"Phlv\"] = {\n\t\t\t[\"module\"] = \"Phlv-translit\",\n\t\t},\n\t\t[\"Phlp\"] = {\n--\t\t\t[\"module\"] = \"Phlp-translit\",\n\t\t},\n\t},\n\t[\"pi\"] = {\n\t\t[\"Brah\"] = {\n\t\t\t[\"module\"] =\
      \ \"Brah-translit\",\n\t\t},\n\t\t[\"Deva\"] = {\n\t\t\t[\"module\"] = \"sa-translit\",\n\t\t},\n\t\t[\"Sinh\"] = {\n\t\t\t[\"module\"] = \"si-translit\",\n\t\t},\n\t},\n\t[\"qwm\"] = {\n\t\t[\"Latn\"] = {\n\t\t},\n\t\t[\"Arab\"] = {\n\t\t},\n\t\t[\"Armn\"\
      ] = {\n\t\t\t[\"module\"] = \"Armn-translit\",\n\t\t},\n\t},\n\t[\"rmi\"] = {\n\t\t[\"Latn\"] = {\n\t\t},\n\t\t[\"Armn\"] = {\n\t\t\t[\"module\"] = \"Armn-translit\",\n\t\t},\n\t},\n\t[\"sa\"] = {\n\t\t[\"Deva\"] = {\n\t\t\t[\"module\"] = \"sa-translit\"\
      ,\n\t\t},\n\t\t[\"Gujr\"] = {\n\t\t\t[\"module\"] = \"sa-Gujr-translit\",\n\t\t},\n\t\t[\"as-Beng\"] = {\n\t\t\t[\"module\"] = \"sa-Beng-translit\",\n\t\t},\n\t\t[\"Beng\"] = {\n\t\t\t[\"module\"] = \"sa-Beng-translit\",\n\t\t},\n\t\t[\"Orya\"] = {\n\t\
      \t\t[\"module\"] = \"sa-Orya-translit\",\n\t\t},\n\t\t[\"Java\"] = {\n\t\t\t[\"module\"] = \"sa-Java-translit\",\n\t\t},\n\t\t[\"noError\"] = true,\n\t},\n\t[\"udi\"] = {\n\t\t[\"Latn\"] = {\n\t\t},\n\t\t[\"Armn\"] = {\n\t\t\t[\"module\"] = \"Armn-translit\"\
      ,\n\t\t},\n\t\t[\"Geor\"] = {\n\t\t\t[\"module\"] = \"Geor-translit\",\n\t\t},\n\t\t[\"Cyrl\"] = {\n\t\t\t[\"module\"] = \"udi-translit\",\n\t\t},\n\t},\n\t[\"xpr\"] = {\n\t\t[\"Mani\"] = {\n\t\t\t[\"module\"] = \"Mani-translit\",\n\t\t},\n\t\t[\"Latn\"\
      ] = {\n\t\t},\n\t\t[\"Prti\"] = {\n\t\t\t[\"module\"] = \"Prti-translit\",\n\t\t},\n\t\t[\"Phlv\"] = {\n\t\t},\n\t\t[\"None\"] = {\n\t\t},\n\t},\n\t[\"sog\"] = {\n\t\t[\"Sogd\"] = {\n\t\t\t[\"module\"] = \"Sogd-translit\",\n\t\t},\n\t\t[\"Mani\"] = {\n\
      \t\t\t[\"module\"] = \"Mani-translit\",\n\t\t},\n\t\t[\"Sogo\"] = {\n\t\t},\n\t\t[\"Syrc\"] = {\n\t\t},\n\t},\n\t[\"inc-ash\"] = {\n\t\t[\"Brah\"] = {\n\t\t\t[\"module\"] = \"Brah-translit\",\n\t\t},\n\t\t[\"Khar\"] = {\n\t\t\t[\"module\"] = \"Khar-translit\"\
      ,\n\t\t},\n\t},\n\t[\"kok\"] = {\n\t\t[\"Deva\"] = {\n--\t\t\t[\"module\"] = \"kok-translit\",\n\t\t},\n\t\t[\"Knda\"] = {\n\t\t\t[\"module\"] = \"kn-translit\",\n\t\t},\n\t\t[\"Mlym\"] = {\n\t\t\t[\"module\"] = \"ml-translit\",\n\t\t},\n\t\t[\"Arab\"\
      ] = {\n--\t\t\t[\"module\"] = \"kok-Arab-translit\",\n\t\t},\n\t},\n\t[\"omr\"] = {\n\t\t[\"Deva\"] = {\n\t\t\t[\"module\"] = \"sa-translit\",\n\t\t},\n\t\t[\"Modi\"] = {\n\t\t\t[\"module\"] = \"Modi-translit\",\n\t\t},\n\t},\n\t[\"bho\"] = {\n\t\t[\"\
      Deva\"] = {\n\t\t\t[\"module\"] = \"bho-translit\",\n\t\t},\n\t\t[\"Kthi\"] = {\n\t\t\t[\"module\"] = \"bho-Kthi-translit\",\n\t\t},\n\t},\n\t[\"wbl\"] = {\n\t\t[\"Arab\"] = {\n--\t\t\t[\"module\"] = \"Arab-translit\",\n\t\t},\n\t\t[\"Cyrl\"] = {\n\t\t\
      \t[\"module\"] = \"tg-translit\",\n\t\t},\n\t\t[\"Latn\"] = {\n\t\t},\n\t},\n\t[\"ks\"] = {\n\t\t[\"ks-Arab\"] = {\n\t\t\t[\"module\"] = \"ks-Arab-translit\",\n\t\t},\n\t\t[\"Deva\"] = {\n\t\t\t[\"module\"] = \"ks-Deva-translit\",\n\t\t},\n\t\t[\"Shrd\"\
      ] = {\n\t\t\t[\"module\"] = \"Shrd-translit\",\n\t\t},\n\t\t[\"Latn\"] = {\n\t\t},\n\t},\n}\n\nresult[\"kmr\"] = result[\"ku\"]\n\nreturn result</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:43.409Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Agrc-translit&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=74497 t=1555362463285256
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:43 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 669926147, 564208733, 694473941
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4134647\" pageid=\"4134647\" ns=\"828\" title=\"Module:grc-translit\"><revisions><rev user=\"Erutuon\" timestamp=\"2019-01-05T23:24:23Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"remove Cprt support because only the testcases transclude the tracking template\" xml:space=\"preserve\">local export = {}\n\nlocal m_data = require('Module:grc-utilities/data')\nlocal\
      \ tokenize = require('Module:grc-utilities').tokenize\n\nlocal ufind = mw.ustring.find\nlocal ugsub = mw.ustring.gsub\nlocal U = mw.ustring.char\nlocal ulower = mw.ustring.lower\nlocal uupper = mw.ustring.upper\n\nlocal UTF8char = '[%z\\1-\\127\\194-\\\
      244][\\128-\\191]*'\n\n-- Diacritics\nlocal diacritics = m_data.named\n\n-- Greek\nlocal acute = diacritics.acute\nlocal grave = diacritics.grave\nlocal circumflex = diacritics.circum\nlocal diaeresis = diacritics.diaeresis\nlocal smooth = diacritics.smooth\n\
      local rough = diacritics.rough\nlocal macron = diacritics.macron\nlocal breve = diacritics.breve\nlocal subscript = diacritics.subscript\n\n-- Latin\nlocal hat = diacritics.Latin_circum\n\nlocal macron_diaeresis = macron .. diaeresis .. \"?\" .. hat\n\
      local a_subscript = '^[αΑ].*' .. subscript .. '$'\nlocal velar = 'κγχξ'\n\nlocal tt = {\n\t-- Vowels\n\t[\"α\"] = \"a\",\n\t[\"ε\"] = \"e\",\n\t[\"η\"] = \"e\" .. macron,\n\t[\"ι\"] = \"i\",\n\t[\"ο\"] = \"o\",\n\t[\"υ\"] = \"u\",\n\t[\"ω\"] = \"o\" ..\
      \ macron,\n\n\t-- Consonants\n\t[\"β\"] = \"b\",\n\t[\"γ\"] = \"g\",\n\t[\"δ\"] = \"d\",\n\t[\"ζ\"] = \"z\",\n\t[\"θ\"] = \"th\",\n\t[\"κ\"] = \"k\",\n\t[\"λ\"] = \"l\",\n\t[\"μ\"] = \"m\",\n\t[\"ν\"] = \"n\",\n\t[\"ξ\"] = \"x\",\n\t[\"π\"] = \"p\",\n\t\
      [\"ρ\"] = \"r\",\n\t[\"σ\"] = \"s\",\n\t[\"ς\"] = \"s\",\n\t[\"τ\"] = \"t\",\n\t[\"φ\"] = \"ph\",\n\t[\"χ\"] = \"kh\",\n\t[\"ψ\"] = \"ps\",\n\t\n\t-- Archaic letters\n\t[\"ϝ\"] = \"w\",\n\t[\"ϻ\"] = \"ś\",\n\t[\"ϙ\"] = \"q\",\n\t[\"ϡ\"] = \"š\",\n\t[\"\
      ͷ\"] = \"v\",\n\t\n\t-- Incorrect characters: see [[Wiktionary:About Ancient Greek#Miscellaneous]].\n\t-- These are tracked by [[Module:script utilities]].\n\t[\"ϐ\"] = \"b\",\n\t[\"ϑ\"] = \"th\",\n\t[\"ϰ\"] = \"k\",\n\t[\"ϱ\"] = \"r\",\n\t[\"ϲ\"] = \"\
      s\",\n\t[\"ϕ\"] = \"ph\",\n\t\n\t-- Diacritics\n\t-- unchanged: macron, diaeresis, grave, acute\n\t[breve] = '',\n\t[smooth] = '',\n\t[rough] = '',\n\t[circumflex] = hat,\n\t[subscript] = 'i',\n}\n\nfunction export.tr(text, lang, sc)\n\tif text == '῾'\
      \ then\n\t\treturn 'h'\n\tend\n\t\n\t--[[\n\t\tReplace semicolon or Greek question mark with regular question mark,\n\t\texcept after an ASCII alphanumeric character (to avoid converting\n\t\tsemicolons in HTML entities).\n\t]]\n\ttext = ugsub(text, \"\
      ([^A-Za-z0-9])[;\" .. U(0x37E) .. \"]\", \"%1?\")\n\t\n\t-- Handle the middle dot. It is equivalent to semicolon or colon, but semicolon is probably more common.\n\ttext = text:gsub(\"·\", \";\")\n\t\n\tlocal tokens = tokenize(text)\n\n\t--now read the\
      \ tokens\n\tlocal output = {}\n\tfor i, token in pairs(tokens) do\n\t\t-- Convert token to lowercase and substitute each character\n\t\t-- for its transliteration\n\t\tlocal translit = ulower(token):gsub(UTF8char, tt)\n\t\t\n\t\tlocal next_token = tokens[i\
      \ + 1]\n\t\t\n\t\tif token == 'γ' and next_token and velar:find(next_token, 1, true) then\n\t\t\t-- γ before a velar should be &lt;n&gt;\n\t\t\ttranslit = 'n'\n\t\telseif token == 'ρ' and tokens[i - 1] == 'ρ' then\n\t\t\t-- ρ after ρ should be &lt;rh&gt;\n\
      \t\t\ttranslit = 'rh'\n\t\telseif ufind(token, a_subscript) then\n\t\t\t-- add macron to ᾳ\n\t\t\ttranslit = ugsub(translit, '([aA])', '%1' .. macron)\n\t\tend\n\t\t\n\t\tif token:find(rough) then\n\t\t\tif ufind(token, '^[Ρρ]') then\n\t\t\t\ttranslit\
      \ = translit .. 'h'\n\t\t\telse -- vowel\n\t\t\t\ttranslit = 'h' .. translit\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Remove macron from a vowel that has a circumflex.\n\t\tif ufind(translit, macron_diaeresis) then\n\t\t\ttranslit = translit:gsub(macron, '')\n\
      \t\tend\n\t\t\n\t\t-- Capitalize first character of transliteration.\n\t\tif token ~= ulower(token) then\n\t\t\ttranslit = translit:gsub(\"^\" .. UTF8char, uupper)\n\t\tend\n\t\t\n\t\ttable.insert(output, translit)\n\tend\n\toutput = table.concat(output)\n\
      \t\n\treturn output\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:43.603Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Agrc-utilities%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=66624 t=1555362463487441
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:43 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1316.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 211717098, 561884870, 696958234
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6030412\" pageid=\"6030412\" ns=\"828\" title=\"Module:grc-utilities/data\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-10-22T23:20:51Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"making diacritical_conversions usable in &quot;replacement&quot; parameter of gsub\" xml:space=\"preserve\">local data = {}\n\nlocal U = mw.ustring.char\nlocal macron = U(0x304)\nlocal\
      \ spacing_macron = U(0xAF)\nlocal modifier_macron = U(0x2C9)\nlocal breve = U(0x306)\nlocal spacing_breve = U(0x2D8)\nlocal rough = U(0x314)\nlocal smooth = U(0x313)\nlocal diaeresis = U(0x308)\nlocal acute = U(0x301)\nlocal grave = U(0x300)\nlocal circum\
      \ = U(0x342)\nlocal Latin_circum = U(0x302)\nlocal coronis = U(0x343)\nlocal subscript = U(0x345)\nlocal undertie = mw.ustring.char(0x35C) -- actually \"combining double breve below\"\n\ndata[\"diacritics\"] = {\n\t[\"macron\"] = macron,\n\t[\"spacing_macron\"\
      ] = spacing_macron,\n\t[\"modifier_macron\"] = modifier_macron,\n\t[\"breve\"] = breve,\n\t[\"spacing_breve\"] = spacing_breve,\n\t[\"rough\"] = rough,\n\t[\"smooth\"] = smooth,\n\t[\"diaeresis\"] = diaeresis,\n\t[\"acute\"] = acute,\n\t[\"grave\"] = grave,\n\
      \t[\"circum\"] = circum,\n\t[\"Latin_circum\"] = Latin_circum,\n\t[\"coronis\"] = coronis,\n\t[\"subscript\"] = subscript,\n}\n\ndata.diacritics.all = \"\"\nfor name, diacritic in pairs(data.diacritics) do\n\tdata.diacritics.all = data.diacritics.all ..\
      \ diacritic\nend\n\ndata[\"named\"] = data[\"diacritics\"]\n\ndata[\"diacritic\"] = \"[\" .. data.diacritics.all .. \"]\"\ndata[\"all\"] = data[\"diacritic\"]\n\ndata[\"diacritic_groups\"] = {\n\t[1] = \"[\".. macron .. breve ..\"]\",\n\t[2] = \"[\"..\
      \ diaeresis .. smooth .. rough ..\"]\",\n\t[3] = \"[\".. acute .. grave .. circum .. \"]\",\n\t[4] = subscript,\n}\ndata[\"groups\"] = data[\"diacritic_groups\"]\ndata[\"diacritic_groups\"][\"accents\"] = data[\"groups\"][3]\n\ndata[\"diacritic_order\"\
      ] = {\n\t[macron] = 1,\n\t[breve] = 1,\n\t[rough] = 2,\n\t[smooth] = 2,\n\t[diaeresis] = 2,\n\t[acute] = 3,\n\t[grave] = 3,\n\t[circum] = 3,\n\t[subscript] = 4,\n}\n\ndata[\"diacritical_conversions\"] = {\n\t-- Convert spacing to combining diacritics\n\
      \t[spacing_macron] = macron, -- macron\n\t[modifier_macron] = macron,\n\t[spacing_breve] = breve, -- breve\n\t[\"῾\"] = rough, -- rough breathing, modifier letter reversed comma\n\t[\"ʽ\"] = rough,\n\t[\"᾿\"] = smooth, -- smooth breathing, modifier letter\
      \ apostrophe, coronis, combining coronis\n\t[\"ʼ\"] = smooth,\n\t[coronis] = smooth,\n\t[\"´\"] = acute, -- acute\n\t[\"`\"] = grave, -- grave\n\t[\"῀\"] = circum, -- Greek circumflex (perispomeni), circumflex, combining circumflex\n\t[\"ˆ\"] = circum,\n\
      \t[Latin_circum] = circum,\n\t[\"῎\"] = smooth ..  acute, -- smooth and acute\n\t[\"῍\"] = smooth ..  grave, -- smooth and grave\n\t[\"῏\"] = smooth ..  circum, -- smooth and circumflex\n\t[\"῞\"] = rough ..  acute, -- rough and acute\n\t[\"῝\"] = rough\
      \ ..  grave, -- rough and grave\n\t[\"῟\"] = rough ..  circum, -- rough and circumflex\n\t[\"¨\"] = diaeresis,\n\t[\"΅\"] = diaeresis ..  acute,\n\t[\"῭\"] = diaeresis ..  grave,\n\t[\"῁\"] = diaeresis ..  circum,\n}\ndata[\"conversions\"] = data[\"diacritical_conversions\"\
      ]\n\ndata[\"consonants\"] = \"ΒβΓγΔδΖζΘθΚκΛλΜμΝνΞξΠπΡρΣσςΤτΦφΧχΨψ\"\ndata[\"consonant\"] = \"[\" .. data.consonants .. \"]\"\ndata[\"vowels\"] = \"ΑαΕεΗηΙιΟοΥυΩω\"\ndata[\"vowel\"] = \"[\" .. data.vowels .. \"]\"\ndata[\"combining_diacritics\"] = table.concat{\n\
      \tmacron, breve,\n\trough, smooth, diaeresis,\n\tacute, grave, circum,\n\tsubscript\n}\ndata[\"combining_diacritic\"] = \"[\" .. data.combining_diacritics .. \"]\"\n\n-- Basic letters with and without diacritics\nlocal letters_with_diacritics = 'ΆΈ-ώϜϝ\
      ἀ-ᾼῂ-ῌῐ-' ..\n\t-- capital iota with oxia, normalized to capital iota with tonos if entered\n\t-- literally in a string\n\tU(0x1FDB) ..\n\t'Ὶῠ-Ῥῲ-ῼ'\ndata.word_characters = letters_with_diacritics .. data.combining_diacritics ..\n\tundertie\ndata.word_character\
      \ = \"[\" .. data.word_characters .. \"]\"\n\nreturn data</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:43.807Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Agrc-utilities&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=68812 t=1555362463681102
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:43 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1233.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 608177809, 815328045, 691588393
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6027615\" pageid=\"6027615\" ns=\"828\" title=\"Module:grc-utilities\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-12-08T07:34:50Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"logging not needed\" xml:space=\"preserve\">local export = {}\n\nlocal m_script_utils = require(\"Module:script utilities\")\nlocal m_links = require(\"Module:links\")\nlocal lang = require(\"\
      Module:languages\").getByCode(\"grc\")\nlocal sc = require(\"Module:scripts\").getByCode(\"polytonic\")\n\nlocal m_data = mw.loadData(\"Module:grc-utilities/data\")\nlocal groups = m_data.groups\nlocal diacritic_order = m_data.diacritic_order\nlocal conversions\
      \ = m_data.conversions\nlocal diacritics = m_data.diacritics\nlocal diacritic = m_data.diacritic\nlocal macron = diacritics.macron\nlocal breve = diacritics.breve\nlocal spacing_macron = diacritics.spacing_macron\nlocal spacing_breve = diacritics.spacing_breve\n\
      local rough = diacritics.rough\nlocal smooth = diacritics.smooth\nlocal diaeresis = diacritics.diaeresis\nlocal acute = diacritics.acute\nlocal grave = diacritics.grave\nlocal circumflex = diacritics.circum\nlocal subscript = diacritics.subscript\nlocal\
      \ combining_diacritic = m_data.combining_diacritic\n\nlocal UTF8_char = \"[\\1-\\127\\194-\\244][\\128-\\191]*\"\nlocal basic_Greek = \"[\\206-\\207][\\128-\\191]\" -- excluding first line of Greek and Coptic block: ͰͱͲͳʹ͵Ͷͷͺͻͼͽ;Ϳ\n\nlocal find = mw.ustring.find\n\
      local match = mw.ustring.match\nlocal gmatch = mw.ustring.gmatch\nlocal sub = mw.ustring.sub\nlocal gsub = mw.ustring.gsub\nlocal toNFC = mw.ustring.toNFC\nlocal decompose = mw.ustring.toNFD\n\nlocal info = {}\n-- The tables are shared among different\
      \ characters so that they can be checked\n-- for equality if needed, and to use less space.\nlocal vowel_t = { vowel = true }\nlocal iota_t = { vowel = true, offglide = true }\nlocal upsilon_t = { vowel = true, offglide = true }\n-- These don't need any\
      \ contents.\nlocal rho_t = {}\n-- local consonant_t = {}\nlocal diacritic_t = { diacritic = true }\n-- Needed for equality comparisons.\nlocal breathing_t = { diacritic = true }\n\nlocal function add_info(characters, t)\n\tif type(characters) == \"string\"\
      \ then\n\t\tfor character in string.gmatch(characters, UTF8_char) do\n\t\t\tinfo[character] = t\n\t\tend\n\telse\n\t\tfor i, character in ipairs(characters) do\n\t\t\tinfo[character] = t\n\t\tend\n\tend\nend\n\nadd_info({ macron, breve,\n\t\tdiaeresis,\n\
      \t\tacute, grave, circumflex,\n\t\tsubscript,\n\t}, diacritic_t)\n\nadd_info({rough, smooth}, breathing_t)\nadd_info(\"ΑΕΗΟΩαεηοω\", vowel_t)\nadd_info(\"Ιι\", iota_t)\nadd_info(\"Υυ\", upsilon_t)\n-- add_info(\"ΒΓΔΖΘΚΛΜΝΞΠΡΣΤΦΧΨϜϘϺϷͶϠβγδζθκλμνξπρσςτφχ\
      ψϝϙϻϸͷϡ\", consonant_t)\nadd_info(\"Ρρ\", rho_t)\n\nlocal not_recognized = {}\nsetmetatable(info, { __index =\n\tfunction(t, key)\n\t\treturn not_recognized\n\tend\n})\n\nlocal sparseConcat = require(\"Module:table\").sparseConcat\n\nlocal checkType =\
      \ require \"libraryUtil\".checkType\n\nlocal function _check(funcName)\n\treturn function(argIndex, arg, expectType, nilOk)\n\t\treturn checkType(funcName, argIndex, arg, expectType, nilOk)\n\tend\nend\n\n-- Perform a function on each Unicode character\
      \ in a string.\nlocal function forEach(str, func)\n\tfor char in string.gmatch(str, UTF8_char) do\n\t\tfunc(char)\n\tend\nend\n\n-- This concatenates or inserts a character, then removes it from the text.\nlocal function add(list, index, chars, text)\n\
      \tif not chars then\n\t\terror(\"The function add cannot act on a nil character.\")\n\tend\n\tif list[index] then\n\t\tlist[index] = list[index] .. chars\n\telse\n\t\tlist[index] = chars\n\tend\n\t-- Basic string function works here.\n\treturn text:sub(#chars\
      \ + 1)\nend\n\nfunction export.tag(term, face)\n\treturn m_script_utils.tag_text(term, lang, sc, face)\nend\n\nfunction export.link(term, face, alt, tr)\n\treturn m_links.full_link( { term = term, alt = alt, lang = lang, sc = sc, tr = tr }, face)\nend\n\
      \nlocal function linkNoTag(term, alt)\n\treturn m_links.language_link{ term = term, lang = lang, alt = alt }\nend\n\n-- Convert spacing to combining diacritics, and nonstandard to standard polytonic Greek.\nfunction export.standardDiacritics(text)\n\t\
      text = decompose(text)\n\t\n\ttext = text:gsub(UTF8_char, conversions)\n\t\n\treturn text\nend\n\n--[=[\tThis function arranges diacritics in the following order:\n\t\t\t1. macron or breve\n\t\t\t2. breathings or diaeresis\n\t\t\t3. acute, circumflex,\
      \ or grave\n\t\t\t4. iota subscript\n\t\tUsed by [[Module:typing-aids]].\n\t\t\n\t\tReturns an error if a sequence of diacritics contains more than one\n\t\tof each category.\n]=]\nlocal function reorderDiacriticSequence(diacritics)\n\tlocal output = {}\n\
      \tforEach(diacritics,\n\t\tfunction (diacritic)\n\t\t\tlocal index = diacritic_order[diacritic]\n\t\t\tif not output[index] then\n\t\t\t\toutput[index] = diacritic\n\t\t\telse\n\t\t\t\t-- Place breve after macron.\n\t\t\t\tif diacritic == breve then\n\t\
      \t\t\t\tindex = index + 1\n\t\t\t\tend\n\t\t\t\t-- The following might have odd results when there\n\t\t\t\t-- are three or more diacritics.\n\t\t\t\ttable.insert(output, index, diacritic)\n\t\t\t\t-- [[Special:WhatLinksHere/Template:tracking/grc-utils/too\
      \ many diacritics]]\n\t\t\t\trequire(\"Module:debug\").track(\"grc-utils/too many diacritics\")\n\t\t\t\t--[[\n\t\t\t\tlocal m_templates = require(\"Module:grc-utilities/templates\")\n\t\t\t\terror(\"There are two diacritics, \" ..\n\t\t\t\t\t\tm_templates.addDottedCircle(output[index])\
      \ .. \" and \" ..\n\t\t\t\t\t\tm_templates.addDottedCircle(diacritic) ..\n\t\t\t\t\t\t\" that belong in the same position. There should be only one.\"\n\t\t\t\t)\n\t\t\t\t--]]\n\t\t\tend\n\t\tend)\n\treturn sparseConcat(output)\nend\n\nfunction export.reorderDiacritics(text)\n\
      \tlocal d = diacritics\n\t\n\treturn (gsub(decompose(text),\n\t\tcombining_diacritic .. combining_diacritic .. \"+\",\n\t\treorderDiacriticSequence))\nend\n\n--[=[\n\t\tThis breaks a word into meaningful \"tokens\", which are\n\t\tindividual letters or\
      \ diphthongs with their diacritics.\n\t\tUsed by [[Module:grc-accent]] and [[Module:grc-pronunciation]].\n--]=]\nlocal function make_tokens(text)\n\tlocal tokens, prev_info = {}, {}\n\tlocal token_i, vowel_count = 1, 0 -- Vowel count tracks .\n\tlocal\
      \ prev\n\tfor character in string.gmatch(decompose(text), UTF8_char) do\n\t\tlocal curr_info = info[character]\n\t\t-- Split vowels between tokens if not a diphthong.\n\t\tif curr_info.vowel then\n\t\t\tvowel_count = vowel_count + 1\n\t\t\tif prev and\
      \ (not (vowel_count == 2 and curr_info.offglide and prev_info.vowel)\n\t\t\t\t\t-- υυ → υ, υ\n\t\t\t\t\t-- ιυ → ι, υ\n\t\t\t\t\tor prev_info.offglide and curr_info == upsilon_t) then\n\t\t\t\ttoken_i = token_i + 1\n\t\t\t\tif prev_info.vowel then\n\t\t\
      \t\t\tvowel_count = 1\n\t\t\t\tend\n\t\t\telseif vowel_count == 2 then\n\t\t\t\tvowel_count = 0\n\t\t\tend\n\t\t\ttokens[token_i] = (tokens[token_i] or \"\") .. character\n\t\telseif curr_info.diacritic then\n\t\t\tvowel_count = 0\n\t\t\ttokens[token_i]\
      \ = (tokens[token_i] or \"\") .. character\n\t\t\tif prev_info.diacritic or prev_info.vowel then\n\t\t\t\tif character == diaeresis then\n\t\t\t\t\t-- Split the diphthong in the current token if a diaeresis was found:\n\t\t\t\t\t-- the first letter, then\
      \ the second letter plus any diacritics.\n\t\t\t\t\tlocal previous_vowel, vowel_with_diaeresis =\n\t\t\t\t\t\tstring.match(tokens[token_i],\n\t\t\t\t\t\t\t\"^(\" .. basic_Greek .. \")(\" .. basic_Greek .. \".+)\")\n\t\t\t\t\tif previous_vowel then\n\t\t\
      \t\t\t\ttokens[token_i], tokens[token_i + 1] = previous_vowel, vowel_with_diaeresis\n\t\t\t\t\t\ttoken_i = token_i + 1\n\t\t\t\t\telse\n\t\t\t\t\t\t-- The vowel preceding the vowel with the diaeresis will already be\n\t\t\t\t\t\t-- placed in the previous\
      \ token if it has a diacritic:\n\t\t\t\t\t\t-- Περικλῆῐ̈ → Π ε ρ ι κ λ ῆ ῐ̈\n\t\t\t\t\t\t--[[\n\t\t\t\t\t\tmw.log('Diaeresis was found in ' .. text .. ', but the previous token ' ..\n\t\t\t\t\t\t\trequire(\"Module:Unicode data\").add_dotted_circle(tokens[token_i])\
      \ ..\n\t\t\t\t\t\t\t' couldn’t be split because it does not consist of two Basic Greek characters followed by other characters.')\n\t\t\t\t\t\t--]]\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\telseif prev_info == rho_t then\n\t\t\t\tif curr_info ~= breathing_t then\n\
      \t\t\t\t\tmw.log(string.format(\"The character %s in %s should not have the accent %s on it.\",\n\t\t\t\t\t\tprev, text, require(\"Module:grc-utilities/templates\").addDottedCircle(character)))\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tmw.log(\"The character \"\
      \ .. prev .. \" cannot have a diacritic on it.\")\n\t\t\tend\n\t\telse\n\t\t\tvowel_count = 0\n\t\t\tif prev then\n\t\t\t\ttoken_i = token_i + 1\n\t\t\tend\n\t\t\ttokens[token_i] = (tokens[token_i] or \"\") .. character\n\t\tend\n\t\tprev = character\n\
      \t\tprev_info = curr_info\n\tend\n\treturn tokens\nend\n\nlocal cache = {}\nfunction export.tokenize(text)\n\tlocal decomposed = decompose(text)\n\tif not cache[decomposed] then\n\t\tcache[decomposed] = make_tokens(text)\n\tend\n\treturn cache[decomposed]\n\
      end\n\n--[=[\tPlaces diacritics in the following order:\n\t\t\t1. breathings or diaeresis\n\t\t\t2. acute, circumflex, or grave\n\t\t\t3. macron or breve\n\t\t\t4. iota subscript\n\t\tUsed by [[Module:grc-pronunciation]].\t\t]=]\nfunction export.pronunciationOrder(text)\n\
      \ttext = export.standardDiacritics(text)\n\t\n\tif find(text, groups[1]) then\n\t\n\t\ttext = gsub(text,\n\t\t\tdiacritic .. diacritic .. \"+\",\n\t\t\tfunction(sequence)\n\t\t\t\t-- Put breathing and diaeresis first, then accents, then macron or breve\n\
      \t\t\t\treturn table.concat{\n\t\t\t\t\tmatch(sequence, groups[2]) or \"\",\n\t\t\t\t\tmatch(sequence, groups[3]) or \"\",\n\t\t\t\t\tmatch(sequence, groups[1]) or \"\",\n\t\t\t\t\tmatch(sequence, groups[4]) or \"\"\n\t\t\t\t}\n\t\t\tend)\n\t\t\n\t\ttext\
      \ = gsub(text, macron, spacing_macron) -- combining to spacing macron\n\t\ttext = gsub(text, breve, spacing_breve) -- combining to spacing breve\n\tend\n\t\n\treturn toNFC(text)\nend\n\n\n-- Returns a table of any ambiguous vowels in the text, language-tagged.\n\
      function export.findAmbig(text, noTag)\n\tif (not text) or type(text) ~= \"string\" then\n\t\terror(\"The input to function findAmbig is nonexistent or not a string\")\n\tend\n\t\n\tlocal lengthDiacritic = \"[\" .. macron .. breve .. circumflex .. subscript\
      \ .. \"]\"\n\tlocal aiu_diacritic = \"^([\" .. \"αιυ\" .. \"])(\" .. diacritic .. \"*)$\"\n\t\n\t-- breaks the word into units\n\tlocal output, vowels = {}, {}\n\tfor _, token in ipairs(export.tokenize(text)) do\n\t\tif not find(token, m_data.consonant)\
      \ then\n\t\t\tlocal vowel, diacritics = match(\n\t\t\t\ttoken,\n\t\t\t\taiu_diacritic\n\t\t\t)\n\t\t\t\n\t\t\tif vowel and (diacritics == \"\" or\n\t\t\t\t\tnot find(diacritics, lengthDiacritic)) then\n\t\t\t\tlocal diacriticked_vowel\n\t\t\t\tif not noTag\
      \ then\n\t\t\t\t\tdiacriticked_vowel = export.tag(vowel .. diacritics)\n\t\t\t\telse\n\t\t\t\t\tdiacriticked_vowel = vowel\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\ttable.insert(output, diacriticked_vowel)\n\t\t\t\t\n\t\t\t\t-- Lists the vowel letters that are ambiguous,\
      \ for categorization purposes.\n\t\t\t\tvowels[mw.ustring.lower(vowel)] = true\n\t\t\tend\n\t\tend\n\tend\n\t\t\n\treturn output, vowels\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:44.922Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ako-translit&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=55431 t=1555362464818192
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:44 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1290.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 604382705, 738659027, 697347676
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3918700\" pageid=\"3918700\" ns=\"828\" title=\"Module:ko-translit\"><revisions><rev user=\"Erutuon\" timestamp=\"2017-09-20T10:39:31Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"return nil if [[Module:ko-pron]] fails\" xml:space=\"preserve\">local export = {}\nlocal gsub = mw.ustring.gsub\nlocal match = mw.ustring.match\n\nfunction export.tr(word, sc, lang)\n\t\
      word = gsub(word, \"%([一丁-龯㐀-䶵]+%)\", \"\")\n\tword = gsub(word, \"—\", \"-\")\n\t\n\tif match(word, \"^[ㅂㅈㄷㄱㅅㅁㄴㅇㄹㅎㅋㅌㅊㅍㄸㅃㅉㄲㅆㅛㅕㅑㅐㅔㅗㅓㅏㅣㅠㅜㅡㅖㅒ%-]+$\") then\n\t\treturn (gsub(word,\n\t\t\t\"[ㅂㅈㄷㄱㅅㅁㄴㅇㄹㅎㅋㅌㅊㅍㄸㅃㅉㄲㅆㅛㅕㅑㅐㅔㅗㅓㅏㅣㅠㅜㅡㅖㅒ]\", {\n\t\t\t\t[\"ㅂ\"] = \"b\",\
      \ [\"ㅈ\"] = \"j\", [\"ㄷ\"] = \"d\", [\"ㄱ\"] = \"g\", [\"ㅅ\"] = \"s\", \n\t\t\t\t[\"ㅁ\"] = \"m\", [\"ㄴ\"] = \"n\", [\"ㅇ\"] = \"/\", [\"ㄹ\"] = \"l\", [\"ㅎ\"] = \"h\", \n\t\t\t\t[\"ㅋ\"] = \"k\", [\"ㅌ\"] = \"t\", [\"ㅊ\"] = \"ch\", [\"ㅍ\"] = \"p\", \n\t\t\t\
      \t[\"ㄸ\"] = \"tt\", [\"ㅃ\"] = \"pp\", [\"ㅉ\"] = \"jj\", [\"ㄲ\"] = \"kk\", [\"ㅆ\"] = \"ss\", \n\t\t\t\t[\"ㅛ\"] = \"yo\", [\"ㅕ\"] = \"yeo\", [\"ㅑ\"] = \"ya\", [\"ㅐ\"] = \"ae\", [\"ㅔ\"] = \"e\", \n\t\t\t\t[\"ㅗ\"] = \"o\", [\"ㅓ\"] = \"eo\", [\"ㅏ\"] = \"a\"\
      , [\"ㅣ\"] = \"i\", [\"ㅠ\"] = \"yu\", \n\t\t\t\t[\"ㅜ\"] = \"u\", [\"ㅡ\"] = \"eu\", [\"ㅖ\"] = \"ye\", [\"ㅒ\"] = \"yae\" }\n\t\t\t))\n\tend\n\t\n\tif not match(word, \"[가-힣]\") then\n\t\treturn nil\n\tend\n\tlocal m_pron = require(\"Module:ko-pron\")\n\t\
      local revised = m_pron.romanise(word, 2, {}, true)\n\t\n\tif not revised then\n\t\treturn nil\n\tend\n\t\n\tif match(revised, \"[%.%?%!]\") then\n\t\trevised = mw.ustring.upper(mw.ustring.sub(revised, 1, 1)) .. mw.ustring.sub(revised, 2, -1)\n\t\trevised\
      \ = gsub(revised, \"([%.%?%!]) ([a-z%'])\", \"%1 ^%2\")\n\t\trevised = gsub(revised, \"^%'%'%'\", \"'''^\")\n\tend\n\trevised = gsub(revised, \"%^%'%'%'\", \"'''^\")\n\trevised = gsub(revised, \"%^%l\", mw.ustring.upper)\n\trevised = gsub(revised, '%^',\
      \ '')\n\trevised = gsub(revised, \"%-'''%-\", \"'''-\")\n\trevised = gsub(revised, \"%-%-\", \"-\")\n\t\n\treturn revised\nend\n\nexport.tr_revised = export.tr\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:45.102Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ako-pron&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=45492 t=1555362464994212
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:45 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1232.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1079 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 678432595, 241256669, 703596134
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"4403125\" pageid=\"4403125\" ns=\"828\" title=\"Module:ko-pron\"><revisions><rev user=\"Wyang\" timestamp=\"2018-11-06T04:23:01Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\nlocal m_ko_utilities = require(\"Module:ko\")\nlocal m_data = mw.loadData(\"Module:ko-pron/data\")\n\nlocal gsub = mw.ustring.gsub\nlocal match = mw.ustring.match\n\
      local sub = mw.ustring.sub\nlocal char = mw.ustring.char\nlocal codepoint = mw.ustring.codepoint\n\nlocal PAGENAME = mw.title.getCurrentTitle().text\n\nlocal system_lookup = {\n\t[\"ph\"] = 1, [\"rr\"] = 2, [\"rrr\"] = 3,\n\t[\"mr\"] = 4, [\"yr\"] = 5,\
      \ [\"ipa\"] = 6,\n}\n\nlocal question_mark = \"&lt;sup&gt;&lt;small&gt;[[Wiktionary:About Korean/Romanization|?]]&lt;/small&gt;&lt;/sup&gt;\"\n\nlocal system_list = {\n\t{ \n\t\tseq = 1,\n\t\tabbreviation = \"ph\", \n\t\tdisplay = \"Phonetic Hangul\",\
      \ \n\t\tseparator = \"/\",\n\t},\n\t{ \n\t\tseq = 2,\n\t\tabbreviation = \"rr\", \n\t\tdisplay = \"Revised Romanization\" .. question_mark, \n\t\tseparator = \"/\",\n\t},\n\t{ \n\t\tseq = 3,\n\t\tabbreviation = \"rrr\", \n\t\tdisplay = \"Revised Romanization\
      \ (translit.)\" .. question_mark, \n\t\tseparator = \"/\"\n\t},\n\t{ \n\t\tseq = 4,\n\t\tabbreviation = \"mc\", \n\t\tdisplay = \"McCune–Reischauer\" .. question_mark,\n\t\tseparator = \"/\"\n\t},\n\t{ \n\t\tseq = 5,\n\t\tabbreviation = \"yr\", \n\t\t\
      display = \"Yale Romanization\" .. question_mark,\n\t\tseparator = \"/\"\n\t},\n\t{ \n\t\tseq = 6,\n\t\tabbreviation = \"ipa\", \n\t\tdisplay = \"[[Wiktionary:International Phonetic Alphabet|IPA]]&lt;sup&gt;([[Appendix:Korean pronunciation|key]])&lt;/sup&gt;\"\
      , \n\t\tseparator = \"] ~ [\"\n\t}\n}\n\nlocal final_syllable_conversion = { [\"\"] = \"Ø\", [\"X\"] = \"\" }\nlocal com_mc = { [\"g\"] = \"k\", [\"d\"] = \"t\", [\"b\"] = \"p\", [\"j\"] = \"ch\", [\"sy\"] = \"s\", [\"s\"] = \"ss\" }\nlocal com_ph = {\
      \ [\"ᄀ\"] = \"ᄁ\", [\"ᄃ\"] = \"ᄄ\", [\"ᄇ\"] = \"ᄈ\", [\"ᄉ\"] = \"ᄊ\", [\"ᄌ\"] = \"ᄍ\" }\nlocal vowel_variation = { [7] = -56, [11] = 112, [16] = 0 }\nlocal allowed_vowel_scheme = { [\"7-1\"] = 1, [\"7-6\"] = 1, [\"11-1\"] = 1, [\"11-6\"] = 1, [\"16-6\"\
      ] = 1 }\nlocal ambiguous_intersyllabic_rr = { [\"oe\"] = 1, [\"eo\"] = 1, [\"eu\"] = 1, [\"ae\"] = 1, [\"ui\"] = 1 }\n\nlocal function decompose_syllable(word)\n\tlocal decomposed_syllables = {}\n\tfor syllable in mw.text.gsplit(word, \"\") do\n\t\ttable.insert(decomposed_syllables,\
      \ m_ko_utilities.decompose_jamo(syllable))\n\tend\n\treturn decomposed_syllables\nend\n\nlocal function tidy_phonetic(original, romanised)\n\tlocal j, k, w = 1, 1, {}\n\tfor i = 1, mw.ustring.len(romanised) do\n\t\tlocal romanised_syllable = mw.ustring.sub(romanised,\
      \ k, k)\n\t\tlocal original_syllable = mw.ustring.sub(original, j, j)\n\t\tif romanised_syllable ~= original_syllable then\n\t\t\ttable.insert(w, '&lt;span style=\"font-size:110%; color:#BF0218\"&gt;&lt;b&gt;'..romanised_syllable..'&lt;/b&gt;&lt;/span&gt;')\n\
      \t\t\tif match(original_syllable, \"[^: ]\") then k = k + 1 end\n\t\t\tif match(romanised_syllable, \"[^: ]\") then j = j + 1 end\n\t\telse\n\t\t\ttable.insert(w, '&lt;span style=\"font-size:110%\"&gt;'..romanised_syllable..'&lt;/span&gt;')\n\t\t\tj, k\
      \ = j + 1, k + 1\n\t\tend\n\tend\n\treturn table.concat(w)\nend\n\nlocal function tidy_ipa(set)\n\tlocal ipa = table.concat(set, system_list[6].separator)\n\tipa = gsub(ipa, \"ʌ̹ː\", \"ɘː\")\n\tipa = gsub(ipa, \"ɭɭ([ji])\", \"ɭʎ%1\")\n\tipa = gsub(ipa,\
      \ \"s([͈]?)ʰɥi\" ,\"ʃ%1ʰɥi\")\n\tipa = gsub(ipa, \"s([ʰ͈])([ji])\" ,\"ɕ%1%2\")\n\tipa = gsub(ipa, \"nj\", \"ɲj\")\n\t\n\tipa = gsub(ipa, \"kʰ[ijɯ]\", { \n\t\t[\"kʰi\"] = \"kçi\", \n\t\t[\"kʰj\"] = \"kçj\", \n\t\t[\"kʰɯ\"] = \"kxɯ\" }\n\t)\n\tipa = gsub(ipa,\
      \ \"[hɦ][ijɯouw]\", {\n\t\t[\"hi\"] = \"çi\",\n\t\t[\"hj\"] = \"çj\",\n\t\t[\"hɯ\"] = \"xɯ\",\n\t\t[\"ho\"] = \"ɸʷo\",\n\t\t[\"hu\"] = \"ɸʷu\",\n\t\t[\"hw\"] = \"ɸw\",\n\t\t[\"ɦi\"] = \"ʝi\",\n\t\t[\"ɦj\"] = \"ʝj\",\n\t\t[\"ɦɯ\"] = \"ɣɯ\",\n\t\t[\"ɦo\"\
      ] = \"βo\",\n\t\t[\"ɦu\"] = \"βu\",\n\t\t[\"ɦw\"] = \"βw\" }\n\t)\n\t\n\tif match(ipa, \"ɥi\") then\n\t\tlocal midpoint = math.floor(mw.ustring.len(ipa) / 2)\n\t\tipa = sub(ipa, 1, midpoint) .. gsub(sub(ipa, midpoint+1, -1), \"ɥi\", \"y\")\n\tend\n\t\n\
      \treturn ipa\nend\n\nfunction export.romanise(text_param, system_index, args)\n\tlocal p, optional_params = {}, { \"nn\", \"l\", \"com\", \"cap\", \"ni\" }\n\tfor _, pm in ipairs(optional_params) do\n\t\tp[pm] = { }\n\t\tif args[pm] then\n\t\t\tfor pp\
      \ in mw.text.gsplit(args[pm], \",\") do p[pm][tonumber(pp) or pp] = 1 end\n\t\tend\n\tend\n\t\t\n\tlocal vowel_ui_i, vowel_ui_e, no_batchim, batchim_reduce, s_variation, iotation, yeo_reduce = \n\t\targs.ui, args.uie, args.nobc, args.bcred, args.svar,\
      \ args.iot, args.yeored\n\t\n\tsystem_index = system_lookup[system_index] or system_index\n\ttext_param = gsub(text_param, '[%-\"](.)', \"%1\")\n\t\n\tfor primitive_word in mw.ustring.gmatch(text_param, \"[ᄀ-ᄒ\"..\"ᅡ-ᅵ\"..\"ᆨ-ᇂ\" .. \"ㄱ-ㆎ가-힣' ]+\") do\n\
      \t\tlocal the_original = primitive_word\n\t\tprimitive_word = gsub(primitive_word, \"'''\", \"ß\")\n\t\tlocal bold_position, bold_count = {}, 0\n\t\twhile match(primitive_word, \"ß\") do\n\t\t\tbold_position[(mw.ustring.find(primitive_word, \"ß\")) + bold_count]\
      \ = true\n\t\t\tprimitive_word = gsub(primitive_word, \"ß\", \"\", 1)\n\t\t\tbold_count = bold_count + 1\n\t\tend\n\t\t\n\t\tlocal has_vowel = {}\n\t\tfor ch in mw.ustring.gmatch(primitive_word, \".\") do\n\t\t\tlocal jungseong = math.floor(((codepoint(ch)\
      \ - 0xAC00) % 588) / 28)\n\t\t\tif not match(ch, \"[예옛례롄]\") and match(ch, \"[가-힣]\") then has_vowel[jungseong] = true end\n\t\tend\n\t\tlocal word_set = { primitive_word }\n\t\t\n\t\tlocal function add_respelling(variable, modification, modification2)\n\
      \t\t\tmodification2 = modification2 or function(x) return x end\n\t\t\tif variable and match(system_index, \"[16]\") then\n\t\t\t\tvariable = tonumber(variable)\n\t\t\t\tlocal pre_length = #word_set\n\t\t\t\tfor i = 1, pre_length do\n\t\t\t\t\tlocal item\
      \ = mw.text.split(word_set[i], \"\")\n\t\t\t\t\titem[variable] = modification(item[variable])\n\t\t\t\t\titem[variable + 1] = modification2(item[variable + 1])\n\t\t\t\t\tword_set[pre_length + i] = table.concat(item)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\
      \tadd_respelling(vowel_ui_i, function(x) return \"이\" end)\n\t\tadd_respelling(vowel_ui_e, function(x) return \"에\" end)\n\t\t\n\t\tadd_respelling(no_batchim, \n\t\t\tfunction(x) return char(codepoint(x) - (codepoint(x) - 0xAC00) % 28) end, \n\t\t\tfunction(y)\
      \ return char(codepoint(y) + 588) end)\n\t\t\n\t\tadd_respelling(s_variation, function(x) return char(codepoint(x) - 12) end)\n\t\tadd_respelling(iotation, function(x) return char(codepoint(x) + 56) end)\n\t\tadd_respelling(yeo_reduce, function(x) return\
      \ char(codepoint(x) - 56) end)\n\t\t\n\t\tfor _, vowel_id in ipairs({ 7, 11, 16 }) do\n\t\t\tif has_vowel[vowel_id] and allowed_vowel_scheme[vowel_id .. \"-\" .. system_index] then\n\t\t\t\tlocal pre_length = #word_set\n\t\t\t\tfor i = 1, pre_length do\n\
      \t\t\t\t\tlocal item = mw.text.split(word_set[i], \"\")\n\t\t\t\t\tfor num, it in ipairs(item) do\n\t\t\t\t\t\tif math.floor(((codepoint(it) - 0xAC00) % 588) / 28) == vowel_id then\n\t\t\t\t\t\t\titem[num] = char(codepoint(it) + vowel_variation[vowel_id])\n\
      \t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\t\tif vowel_id == 11 then\n\t\t\t\t\t\ttable.insert(word_set, i, table.concat(item))\n\t\t\t\t\telse\n\t\t\t\t\t\ttable.insert(word_set, table.concat(item))\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\
      \tlocal word_set_romanisations = {}\n\t\tfor _, respelling in ipairs(word_set) do\n\t\t\tlocal decomposed_syllables = decompose_syllable(respelling)\n\t\t\tlocal romanisation = {}\n\t\t\tlocal bold_insert_count = 0\n\t\t\tfor index = 0, #decomposed_syllables,\
      \ 1 do\n\t\t\t\tlocal this_syllable = index ~= 0 and sub(respelling, index, index) or \"\"\n\t\t\t\t\tlocal syllable = decomposed_syllables[index] or { initial = \"Ø\", vowel = \"Ø\", final = \"X\" }\n\t\t\t\t\tlocal next_syllable = decomposed_syllables[index\
      \ + 1] or { initial = \"Ø\", vowel = \"Ø\", final = \"Ø\" }\n\t\t\t\t\tsyllable.final = final_syllable_conversion[syllable.final] or syllable.final\n\t\t\t\t\t\n\t\t\t\t\tif system_index == 5 and syllable.vowel == \"ᅮ\" and match(syllable.initial, \"[ᄆ\
      ᄇᄈᄑ]\") then\n\t\t\t\t\t\tsyllable.vowel = \"ᅳ\"\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tif match(system_index, \"[16]\") then\n\t\t\t\t\t\tif syllable.vowel == \"ᅴ\" and this_syllable ~= \"의\" then\n\t\t\t\t\t\t\tsyllable.vowel = \"ᅵ\"\n\t\t\t\t\t\tend\n\
      \t\t\t\t\t\tif this_syllable == \"넓\" then\n\t\t\t\t\t\t\tif match(next_syllable.initial, \"[ᄌᄉ]\") then\n\t\t\t\t\t\t\t\tsyllable.final = \"ᆸ\"\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telseif next_syllable.initial == \"ᄃ\" then\n\t\t\t\t\t\t\t\tif match(next_syllable.vowel,\
      \ \"[^ᅡᅵ]\") then\n\t\t\t\t\t\t\t\t\tsyllable.final = \"ᆸ\"\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\n\t\t\t\t\tlocal vowel = m_data.vowels[syllable.vowel][system_index]\n\t\t\t\t\t\n\t\t\t\t\tif p.nn[index + 1] then\n\
      \t\t\t\t\t\tnext_syllable.initial = \"ᄂ\"\n\t\t\t\t\tend\n\t\t\t\t\tif p.com[index] and match(system_index, \"[16]\") then\n\t\t\t\t\t\tnext_syllable.initial = com_ph[next_syllable.initial] or next_syllable.initial\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\t\
      if p.ni[index + 1] and system_index ~= 3 then\n\t\t\t\t\t\tnext_syllable.initial = (system_index == 5 and syllable.final == \"ᆯ\") and \"ᄅ\" or \"ᄂ\"\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tif match(system_index, \"[^35]\") then\n\t\t\t\t\t\tif tonumber(batchim_reduce\
      \ or -1) == index then\n\t\t\t\t\t\t\tsyllable.final = m_data.boundary[syllable.final .. \"-Ø\"][1]\n\t\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\t\tif index ~= 0 and this_syllable == \"밟\" then\n\t\t\t\t\t\t\tsyllable.final = \"ᆸ\"\n\t\t\t\t\t\tend\n\t\t\t\t\
      \t\t\n\t\t\t\t\t\tif match(syllable.final .. next_syllable.initial .. next_syllable.vowel, \"[ᇀᆴ][ᄋᄒ]ᅵ\") then\n\t\t\t\t\t\t\tsyllable.final = \"ᆾ\"\n\t\t\t\t\t\t\n\t\t\t\t\t\telseif match(syllable.final .. next_syllable.initial .. next_syllable.vowel,\
      \ \"ᆮ이\") then\n\t\t\t\t\t\t\tsyllable.final = \"ᆽ\"\n\t\t\t\t\t\t\n\t\t\t\t\t\telseif match(syllable.final .. next_syllable.initial .. next_syllable.vowel, \"ᆮ히\") then\n\t\t\t\t\t\t\tsyllable.final = \"ᆾ\"\n\t\t\t\t\t\t\n\t\t\t\t\t\telseif syllable.final\
      \ .. next_syllable.initial == \"ᆺᄋ\" and not\n\t\t\t\t\t\t\tmatch(sub(respelling, index+1, index+1), \"[이아어은으음읍을었았있없에입의]\") then\n\t\t\t\t\t\t\t\tsyllable.final = \"ᆮ\"\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tlocal bound = syllable.final\
      \ .. \"-\" .. next_syllable.initial\n\t\t\t\t\tif not m_data.boundary[bound] then\n\t\t\t\t\t\trequire(\"Module:debug\").track(\"ko-pron/no boundary data\")\n\t\t\t\t\t\tmw.log(\"No boundary data for \" .. bound .. \".\")\n\t\t\t\t\t\treturn nil\n\t\t\t\
      \t\tend\n\t\t\t\t\tlocal junction = m_data.boundary[bound][system_index]\n\t\t\t\t\t\n\t\t\t\t\tif bold_position[index + bold_insert_count + 1] and system_index == 2 then\n\t\t\t\t\t\tjunction = gsub(junction, \"^.*$\", function(matched)\n\t\t\t\t\t\t\t\
      local a, b = match(matched, \"^(ng%-?)(.?)$\")\n\t\t\t\t\t\t\tif not a or not b then a, b = match(matched, \"^(.?%-?)(.*)$\") end\n\t\t\t\t\t\t\treturn match(syllable.final .. next_syllable.initial, \"^Ø?[ᄀ-ᄒ]$\")\n\t\t\t\t\t\t\t\tand \"'''\" .. (a or\
      \ \"\") .. (b or \"\")\n\t\t\t\t\t\t\t\tor (a or \"\") .. \"'''\" .. (b or \"\") end)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tbold_insert_count = bold_insert_count + 1\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tif p.l[index] or (p.l[\"y\"] and index == 1) then\n\t\t\t\
      \t\t\tif system_index == 1 then\n\t\t\t\t\t\t\tjunction = gsub(junction, \"^(.)(.?)$\", function(a, b)\n\t\t\t\t\t\t\t\treturn match(a, \"[ᆨ-ᇂ]\") and a .. \":\" .. b or \":\" .. a .. b end)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\telseif system_index == 5 then\n\t\
      \t\t\t\t\t\tvowel = gsub(vowel, \"([aeiou])\", \"%1̄\")\n\t\t\t\t\t\t\t\n\t\t\t\t\t\telseif system_index == 6 then\n\t\t\t\t\t\t\tvowel = vowel .. \"ː\"\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\tif (p.l[\"y\"] or p.l[1]) and index == 0 and\
      \ system_index == 6 and #decomposed_syllables &gt; 1 then\n\t\t\t\t\t\tvowel = vowel .. \"ˈ\"\n\t\t\t\t\tend\n\t\t\t\t\n\t\t\t\t\tif p.com[index] then\n\t\t\t\t\t\tjunction = gsub(junction, \"(.)$\", function(next_letter)\n\t\t\t\t\t\t\treturn \n\t\t\t\
      \t\t\t\t\t(system_index == 5 and \"q\" or \"\") .. \n\t\t\t\t\t\t\t\t(system_index == 4\n\t\t\t\t\t\t\t\t\tand (com_mc[next_letter..(p.cap[\"y\"] or \"\")] or com_mc[next_letter] or next_letter)\n\t\t\t\t\t\t\t\t\tor next_letter) end)\n\t\t\t\t\tend\n\t\
      \t\t\t\t\n\t\t\t\t\tif p.ni[index + 1] and system_index == 5 then\n\t\t\t\t\t\tjunction = gsub(junction, \"([nl])$\", \"&lt;sup&gt;%1&lt;/sup&gt;\")\n\t\t\t\t\tend\n\t\t\t\t\t\n\t\t\t\t\ttable.insert(romanisation, vowel .. junction)\n\t\t\t\tend\n\t\t\t\
      \n\t\t\tlocal temp_romanisation = table.concat(romanisation)\n\t\t\tif p.cap[\"y\"] and match(system_index, \"[^16]\") then\n\t\t\t\ttemp_romanisation = mw.ustring.upper(sub(temp_romanisation, 1, 1)) .. sub(temp_romanisation, 2, -1)\n\t\t\tend\n\t\t\t\n\
      \t\t\tif system_index == 1 then\n\t\t\t\ttemp_romanisation = tidy_phonetic(primitive_word, mw.ustring.toNFC(temp_romanisation))\n\t\t\t\n\t\t\telseif match(system_index, \"[23]\") then\n\t\t\t\tfor i = 1, 2 do\n\t\t\t\t\ttemp_romanisation = gsub(temp_romanisation,\
      \ \"(.)…(.)\", function(a, b)\n\t\t\t\t\t\treturn a .. (ambiguous_intersyllabic_rr[a .. b] and \"-\" or \"\") .. b end)\n\t\t\t\tend\n\t\t\t\n\t\t\telseif system_index == 4 then\n\t\t\t\ttemp_romanisation = gsub(temp_romanisation, \"swi\", \"shwi\")\n\t\
      \t\tend\n\t\t\t\n\t\t\ttable.insert(word_set_romanisations, temp_romanisation)\n\t\tend\n\t\t\n\t\ttext_param = gsub(\n\t\t\ttext_param, \n\t\t\tthe_original, \n\t\t\ttable.concat(word_set_romanisations, system_list[system_index].separator), \n\t\t\t1\n\
      \t\t)\n\tend\n\t\n\treturn text_param\nend\n\nfunction export.make(frame, scheme)\n\tlocal params = {\n\t\t[1] = { default = PAGENAME, list = true },\n\t\t\n\t\t[\"a\"] = {},\n\t\t[\"audio\"] = { alias_of = \"a\" },\n\t\t\n\t\t[\"nn\"] = {},\n\t\t[\"l\"\
      ] = {},\n\t\t[\"com\"] = {},\n\t\t[\"cap\"] = {},\n\t\t[\"ui\"] = {},\n\t\t[\"uie\"] = {},\n\t\t[\"nobc\"] = {},\n\t\t[\"ni\"] = {},\n\t\t[\"bcred\"] = {},\n\t\t[\"svar\"] = {},\n\t\t[\"iot\"] = {},\n\t\t[\"yeored\"] = {},\n\t}\n\t\n\tlocal args = require(\"\
      Module:parameters\").process(frame:getParent().args, params)\n\ttable.sort(system_list, function(first, second) return first.seq &lt; second.seq end)\n\t\n\tlocal results = {}\n\tfor _, text_param in ipairs(args[1]) do\n\t\tlocal current_word_dataset =\
      \ {}\n\t\tfor _, system in pairs(system_list) do\n\t\t\tlocal romanised = export.romanise(text_param, system.seq, args)\n\t\t\ttable.insert(current_word_dataset, romanised)\n\t\tend\n\t\ttable.insert(results, current_word_dataset)\n\tend\n\t\n\tlocal output_result\
      \ = { [1] = {}, [2] = {}, [3] = {}, [4] = {}, [5] = {}, [6] = {} }\n\tfor _, result in ipairs(results) do\n\t\tfor result_index, value in ipairs(result) do\n\t\t\ttable.insert(output_result[result_index], value)\n\t\tend\n\tend\n\t\n\tlocal output_text\
      \ = {}\n\t\n\tlocal ipa_output = table.concat(output_result[6], system_list[6].separator)\n\tlocal width = 15 * mw.ustring.len(ipa_output)\n\twidth = width &lt; 400 and 400 or (width &gt; 800 and 800 or width)\n\t\n\ttable.insert(output_text, \n\t\t'*\
      \ ' .. tostring( mw.html.create( \"span\" )\n\t\t\t:css( \"padding-right\", \".5em\" )\n\t\t\t:css( \"color\", \"#8F390A\" )\n\t\t\t:css( \"font-family\", \"DejaVu Sans, sans-serif\" )\n\t\t\t:css( \"font-weight\", \"bold\" )\n\t\t\t:wikitext( system_list[6].display\
      \ )) ..\n\t\t\n\t\ttostring( mw.html.create( \"span\" )\n\t\t\t:attr( \"class\", \"IPA\" )\n\t\t\t:wikitext( \"[\" .. tidy_ipa(output_result[6]) .. \"]\" )) ..\n\t\t\n\t\t\"\\n* \" .. tostring( mw.html.create( \"span\" )\n\t\t\t:css( \"padding-right\"\
      , \".5em\" )\n\t\t\t:css( \"color\", \"#8F390A\" )\n\t\t\t:css( \"font-family\", \"DejaVu Sans, sans-serif\" )\n\t\t\t:css( \"font-weight\", \"bold\" )\n\t\t\t:wikitext( system_list[1].display )) .. \"[\" ..\n\t\t\n\t\ttostring( mw.html.create( \"span\"\
      \ )\n\t\t\t:attr( \"class\", \"Kore\" )\n\t\t\t:attr( \"lang\", \"ko\" )\n\t\t\t:wikitext( table.concat(output_result[1], system_list[1].separator) )) .. \"]\\n\" .. \n\t\t\n[=[{| style=\"margin: 0 1em .5em 1.6em\"\n|\n&lt;table cellpadding=1 style=\"\
      border: 1px solid #DFDFDF; line-height: 25pt; padding: .1em .3em .1em .3em\"&gt;]=])\n\t\t\n\tfor roman_index = 2, 5 do\n\t\ttable.insert(output_text, \n\t\t\t\"\\n&lt;tr&gt;\" .. \n\t\t\t\n\t\t\ttostring( mw.html.create( \"td\" )\n\t\t\t\t:css( \"padding-right\"\
      , \".5em\" )\n\t\t\t\t:css( \"font-size\", \"10pt\" )\n\t\t\t\t:css( \"font-family\", \"DejaVu Sans, sans-serif\" )\n\t\t\t\t:css( \"color\", \"#555\" )\n\t\t\t\t:css( \"font-weight\", \"bold\" )\n\t\t\t\t:css( \"background-color\", \"#F8F9F8\" )\n\t\t\
      \t\t:wikitext( system_list[roman_index].display )) .. \"\\n\" ..\n\t\t\t\n\t\t\ttostring( mw.html.create( \"td\" )\n\t\t\t\t:attr( \"class\", \"IPA\" )\n\t\t\t\t:css( \"padding-left\", \".7em\" )\n\t\t\t\t:css( \"padding-right\", \".7em\" )\n\t\t\t\t:css(\
      \ \"font-size\", \"100%\" )\n\t\t\t\t:wikitext( table.concat(output_result[roman_index], system_list[roman_index].separator) )) ..\n\t\t\t\n\t\t\t\"&lt;/tr&gt;\")\n\tend\n\t\n\ttable.insert(output_text, \n\t\t(args.a \n\t\t\tand \"\\n&lt;tr&gt;\" .. \n\
      \t\t\t\n\t\t\ttostring( mw.html.create( \"td\" )\n\t\t\t\t:css( \"padding-right\", \".5em\" )\n\t\t\t\t:css( \"font-size\", \"10pt\" )\n\t\t\t\t:css( \"font-family\", \"DejaVu Sans\" )\n\t\t\t\t:css( \"color\", \"#555\" )\n\t\t\t\t:css( \"font-weight\"\
      , \"bold\" )\n\t\t\t\t:css( \"background-color\", \"#F8F9F8\" )\n\t\t\t\t:wikitext( \"Audio\" )) .. \n\t\t\t\n\t\t\ttostring( mw.html.create( \"td\" )\n\t\t\t\t:css( \"padding-left\", \".7em\" )\n\t\t\t\t:css( \"padding-right\", \".7em\" )\n\t\t\t\t:wikitext(\
      \ mw.getCurrentFrame():expandTemplate{ \n\t\t\t\t\ttitle = \"Template:audio\", \n\t\t\t\t\targs = { args.a == \"y\" and \"Ko-\" .. PAGENAME .. \".ogg\" or args.a, lang = \"ko\" }} )) ..\n\t\t\t\n\t\t\t\"&lt;/tr&gt;\"\n\t\t\t\n\t\t\tor \"\"\n\n\t\t) ..\
      \ \"&lt;/table&gt;\\n|}\")\n\t\t\n\treturn table.concat(output_text)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:45.306Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ako&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=60049 t=1555362465180090
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:45 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1288.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1083 pass, cp3033 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 930548396, 484401243, 699735603
    body: !!binary |-
      
- recorded: 2019-04-15T21:07:45.559Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Ako-pron%2Fdata&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=69055 t=1555362465387829
      Cache-control: private, must-revalidate, max-age=0
      Connection: close
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:45 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1089 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 193425930, 817816120, 261782660
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6106865\" pageid=\"6106865\" ns=\"828\" title=\"Module:ko-pron/data\"><revisions><rev user=\"Wyang\" timestamp=\"2018-06-04T07:32:34Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Is there a source for this? AFAIK, the RR transliteration is an official variant of RR transcription and differs from transcription in consonants only: [http://www.korean.go.kr/front_eng/roman/roman_01.do]\
      \ (#8). ᅯ is not treated as a compound vowel from ᅮ and ᅥ (which strictly would be &#039;ueo&#039; anyway).\" xml:space=\"preserve\">local export = {}\n\nexport.vowels = {\n\t[\"Ø\"]\t= { \"\",\t\"\",\t\"\",\t\"\",\t\"\",\t\"\" },\n\t[\" \"]\t= { \" \"\
      ,\t\" \",\t\" \",\t\" \",\t\" \",\t\" \" },\n\t[\"ᅡ\"]\t= { \"ᅡ\",\t\"a\",\t\"a\",\t\"a\",\t\"a\",\t\"a̠\" },\n\t[\"ᅢ\"]\t= { \"ᅢ\",\t\"ae\",\t\"ae\",\t\"ae\",\t\"ay\",\t\"e̞\" },\n\t[\"ᅣ\"]\t= { \"ᅣ\",\t\"ya\",\t\"ya\",\t\"ya\",\t\"ya\",\t\"ja̠\" },\n\
      \t[\"ᅤ\"]\t= { \"ᅤ\",\t\"yae\",\t\"yae\",\t\"yae\",\t\"yay\",\t\"je̞\" },\n\t[\"ᅥ\"]\t= { \"ᅥ\",\t\"eo\",\t\"eo\",\t\"ŏ\",\t\"e\",\t\"ʌ̹\" },\n\t[\"ᅦ\"]\t= { \"ᅦ\",\t\"e\",\t\"e\",\t\"e\",\t\"ey\",\t\"e̞\" },\n\t[\"ᅧ\"]\t= { \"ᅧ\",\t\"yeo\",\t\"yeo\",\t\
      \"yŏ\",\t\"ye\",\t\"jʌ̹\" },\n\t[\"ᅨ\"]\t= { \"ᅨ\",\t\"ye\",\t\"ye\",\t\"ye\",\t\"yey\",\t\"je̞\" },\n\t[\"ᅩ\"]\t= { \"ᅩ\",\t\"o\",\t\"o\",\t\"o\",\t\"o\",\t\"o̞\" },\n\t[\"ᅪ\"]\t= { \"ᅪ\",\t\"wa\",\t\"wa\",\t\"wa\",\t\"wa\",\t\"wa̠\" },\n\t[\"ᅫ\"]\t=\
      \ { \"ᅫ\",\t\"wae\",\t\"wae\",\t\"wae\",\t\"way\",\t\"we̞\" },\n\t[\"ᅬ\"]\t= { \"ᅬ\",\t\"oe\",\t\"oe\",\t\"oe\",\t\"oy\",\t\"ø̞\" },\n\t[\"ᅭ\"]\t= { \"ᅭ\",\t\"yo\",\t\"yo\",\t\"yo\",\t\"yo\",\t\"jo\" },\n\t[\"ᅮ\"]\t= { \"ᅮ\",\t\"u\",\t\"u\",\t\"u\",\t\"\
      wu\",\t\"u\" },\n\t[\"ᅯ\"]\t= { \"ᅯ\",\t\"wo\",\t\"wo\",\t\"wŏ\",\t\"we\",\t\"wʌ̹\" },\n\t[\"ᅰ\"]\t= { \"ᅰ\",\t\"we\",\t\"we\",\t\"we\",\t\"wey\",\t\"we̞\" },\n\t[\"ᅱ\"]\t= { \"ᅱ\",\t\"wi\",\t\"wi\",\t\"wi\",\t\"wi\",\t\"ɥi\" },\n\t[\"ᅲ\"]\t= { \"ᅲ\",\t\
      \"yu\",\t\"yu\",\t\"yu\",\t\"yu\",\t\"ju\" },\n\t[\"ᅳ\"]\t= { \"ᅳ\",\t\"eu\",\t\"eu\",\t\"ŭ\",\t\"u\",\t\"ɯ\" },\n\t[\"ᅴ\"]\t= { \"ᅴ\",\t\"ui\",\t\"ui\",\t\"ŭi\",\t\"uy\",\t\"ɰi\" },\n\t[\"ᅵ\"]\t= { \"ᅵ\",\t\"i\",\t\"i\",\t\"i\",\t\"i\",\t\"i\" },\n}\n\
      \nexport.boundary = {\n\t-- note: Ø represents different things when used for initials and finals.\n\t-- For initials, Ø = the next syllable is absent.\n\t-- For finals, Ø = the absence of a jongseong jamo, but the previous syllable exists.\n\t-- The equivalent\
      \ of initial Ø is final \"\" (nothing).\n\t[\"Ø-Ø\"] \t = { \"\",\t\"\",\t\"\",\t\"\",\t\"\",\t\"\" },\n\t[\"-Ø\"] \t = { \"\",\t\"\",\t\"\",\t\"\",\t\"\",\t\"\" },\n\t[\"-ᄀ\"] \t = { \"ᄀ\",\t\"g\",\t\"g\",\t\"k\",\t\"k\",\t\"k\" },\n\t[\"-ᄁ\"] \t = {\
      \ \"ᄁ\",\t\"kk\",\t\"kk\",\t\"kk\",\t\"kk\",\t\"k͈\" },\n\t[\"-ᄂ\"] \t = { \"ᄂ\",\t\"n\",\t\"n\",\t\"n\",\t\"n\",\t\"n\" },\n\t[\"-ᄃ\"] \t = { \"ᄃ\",\t\"d\",\t\"d\",\t\"t\",\t\"t\",\t\"t\" },\n\t[\"-ᄄ\"] \t = { \"ᄄ\",\t\"tt\",\t\"tt\",\t\"tt\",\t\"tt\"\
      ,\t\"t͈\" },\n\t[\"-ᄅ\"] \t = { \"ᄅ\",\t\"r\",\t\"l\",\t\"r\",\t\"l\",\t\"ɾ\" },\n\t[\"-ᄆ\"] \t = { \"ᄆ\",\t\"m\",\t\"m\",\t\"m\",\t\"m\",\t\"m\" },\n\t[\"-ᄇ\"] \t = { \"ᄇ\",\t\"b\",\t\"b\",\t\"p\",\t\"p\",\t\"p\" },\n\t[\"-ᄈ\"] \t = { \"ᄈ\",\t\"pp\",\t\
      \"pp\",\t\"pp\",\t\"pp\",\t\"p͈\" },\n\t[\"-ᄉ\"] \t = { \"ᄉ\",\t\"s\",\t\"s\",\t\"s\",\t\"s\",\t\"sʰ\" },\n\t[\"-ᄊ\"] \t = { \"ᄊ\",\t\"ss\",\t\"ss\",\t\"ss\",\t\"ss\",\t\"s͈\" },\n\t[\"-ᄋ\"] \t = { \"ᄋ\",\t\"\",\t\"\",\t\"\",\t\"\",\t\"\" },\n\t[\"-ᄌ\"\
      ] \t = { \"ᄌ\",\t\"j\",\t\"j\",\t\"ch\",\t\"c\",\t\"t͡ɕ\" },\n\t[\"-ᄍ\"] \t = { \"ᄍ\",\t\"jj\",\t\"jj\",\t\"tch\",\t\"cc\",\t\"t͡ɕ͈\" },\n\t[\"-ᄎ\"] \t = { \"ᄎ\",\t\"ch\",\t\"ch\",\t\"ch'\",\t\"ch\",\t\"t͡ɕʰ\" },\n\t[\"-ᄏ\"] \t = { \"ᄏ\",\t\"k\",\t\"k\"\
      ,\t\"k'\",\t\"kh\",\t\"kʰ\" },\n\t[\"-ᄐ\"] \t = { \"ᄐ\",\t\"t\",\t\"t\",\t\"t'\",\t\"th\",\t\"tʰ\" },\n\t[\"-ᄑ\"] \t = { \"ᄑ\",\t\"p\",\t\"p\",\t\"p'\",\t\"ph\",\t\"pʰ\" },\n\t[\"-ᄒ\"] \t = { \"ᄒ\",\t\"h\",\t\"h\",\t\"h\",\t\"h\",\t\"h\" },\n\t[\"Ø-ᄀ\"\
      ] \t = { \"ᄀ\",\t\"g\",\t\"g\",\t\"g\",\t\"k\",\t\"ɡ\" },\n\t[\"Ø-ᄁ\"] \t = { \"ᄁ\",\t\"kk\",\t\"kk\",\t\"kk\",\t\"kk\",\t\"k͈\" },\n\t[\"Ø-ᄂ\"] \t = { \"ᄂ\",\t\"n\",\t\"n\",\t\"n\",\t\"n\",\t\"n\" },\n\t[\"Ø-ᄃ\"] \t = { \"ᄃ\",\t\"d\",\t\"d\",\t\"d\",\t\
      \"t\",\t\"d\" },\n\t[\"Ø-ᄄ\"] \t = { \"ᄄ\",\t\"tt\",\t\"tt\",\t\"tt\",\t\"tt\",\t\"t͈\" },\n\t[\"Ø-ᄅ\"] \t = { \"ᄅ\",\t\"r\",\t\"l\",\t\"r\",\t\"l\",\t\"ɾ\" },\n\t[\"Ø-ᄆ\"] \t = { \"ᄆ\",\t\"m\",\t\"m\",\t\"m\",\t\"m\",\t\"m\" },\n\t[\"Ø-ᄇ\"] \t = { \"ᄇ\
      \",\t\"b\",\t\"b\",\t\"b\",\t\"p\",\t\"b\" },\n\t[\"Ø-ᄈ\"] \t = { \"ᄈ\",\t\"pp\",\t\"pp\",\t\"pp\",\t\"pp\",\t\"p͈\" },\n\t[\"Ø-ᄉ\"] \t = { \"ᄉ\",\t\"s\",\t\"s\",\t\"s\",\t\"s\",\t\"sʰ\" },\n\t[\"Ø-ᄊ\"] \t = { \"ᄊ\",\t\"ss\",\t\"ss\",\t\"ss\",\t\"ss\"\
      ,\t\"s͈\" },\n\t[\"Ø-ᄋ\"] \t = { \"ᄋ\",\t\"…\",\t\"…\",\t\"\",\t\"\",\t\"\" },\n\t[\"Ø-ᄌ\"] \t = { \"ᄌ\",\t\"j\",\t\"j\",\t\"j\",\t\"c\",\t\"d͡ʑ\" },\n\t[\"Ø-ᄍ\"] \t = { \"ᄍ\",\t\"jj\",\t\"jj\",\t\"tch\",\t\"cc\",\t\"t͡ɕ͈\" },\n\t[\"Ø-ᄎ\"] \t = { \"ᄎ\"\
      ,\t\"ch\",\t\"ch\",\t\"ch'\",\t\"ch\",\t\"t͡ɕʰ\" },\n\t[\"Ø-ᄏ\"] \t = { \"ᄏ\",\t\"k\",\t\"k\",\t\"k'\",\t\"kh\",\t\"kʰ\" },\n\t[\"Ø-ᄐ\"] \t = { \"ᄐ\",\t\"t\",\t\"t\",\t\"t'\",\t\"th\",\t\"tʰ\" },\n\t[\"Ø-ᄑ\"] \t = { \"ᄑ\",\t\"p\",\t\"p\",\t\"p'\",\t\"\
      ph\",\t\"pʰ\" },\n\t[\"Ø-ᄒ\"] \t = { \"ᄒ\",\t\"h\",\t\"h\",\t\"h\",\t\"h\",\t\"ɦ\" },\n\t[\"ᆨ-Ø\"] \t = { \"ᆨ\",\t\"k\",\t\"g\",\t\"k\",\t\"k\",\t\"k̚\" },\n\t[\"ᆨ-ᄀ\"] \t = { \"ᆨᄁ\",\t\"kg\",\t\"gg\",\t\"kk\",\t\"kqk\",\t\"k̚k͈\" },\n\t[\"ᆨ-ᄁ\"] \t =\
      \ { \"ᆨᄁ\",\t\"kkk\",\t\"gkk\",\t\"kk\",\t\"kkk\",\t\"k̚k͈\" },\n\t[\"ᆨ-ᄂ\"] \t = { \"ᆼᄂ\",\t\"ngn\",\t\"gn\",\t\"ngn\",\t\"kn\",\t\"ŋn\" },\n\t[\"ᆨ-ᄃ\"] \t = { \"ᆨᄄ\",\t\"kd\",\t\"gd\",\t\"kt\",\t\"kqt\",\t\"k̚t͈\" },\n\t[\"ᆨ-ᄄ\"] \t = { \"ᆨᄄ\",\t\"ktt\"\
      ,\t\"gtt\",\t\"ktt\",\t\"ktt\",\t\"k̚t͈\" },\n\t[\"ᆨ-ᄅ\"] \t = { \"ᆼᄂ\",\t\"ngn\",\t\"gl\",\t\"ngn\",\t\"kl\",\t\"ŋn\" },\n\t[\"ᆨ-ᄆ\"] \t = { \"ᆼᄆ\",\t\"ngm\",\t\"gm\",\t\"ngm\",\t\"km\",\t\"ŋm\" },\n\t[\"ᆨ-ᄇ\"] \t = { \"ᆨᄈ\",\t\"kb\",\t\"gb\",\t\"kp\"\
      ,\t\"kqp\",\t\"k̚p͈\" },\n\t[\"ᆨ-ᄈ\"] \t = { \"ᆨᄈ\",\t\"kpp\",\t\"gpp\",\t\"kpp\",\t\"kpp\",\t\"k̚p͈\" },\n\t[\"ᆨ-ᄉ\"] \t = { \"ᆨᄊ\",\t\"ks\",\t\"gs\",\t\"ks\",\t\"kqs\",\t\"ks͈\" },\n\t[\"ᆨ-ᄊ\"] \t = { \"ᆨᄊ\",\t\"kss\",\t\"gss\",\t\"kss\",\t\"kss\",\t\
      \"ks͈\" },\n\t[\"ᆨ-ᄋ\"] \t = { \"ᄀ\",\t\"g\",\t\"g-\",\t\"g\",\t\"k.\",\t\"ɡ\" },\n\t[\"ᆨ-ᄌ\"] \t = { \"ᆨᄍ\",\t\"kj\",\t\"gj\",\t\"kch\",\t\"kqc\",\t\"k̚t͡ɕ͈\" },\n\t[\"ᆨ-ᄍ\"] \t = { \"ᆨᄍ\",\t\"kjj\",\t\"gjj\",\t\"ktch\",\t\"kcc\",\t\"k̚t͡ɕ͈\" },\n\t[\"\
      ᆨ-ᄎ\"] \t = { \"ᆨᄎ\",\t\"kch\",\t\"gch\",\t\"kch'\",\t\"kch\",\t\"k̚t͡ɕʰ\" },\n\t[\"ᆨ-ᄏ\"] \t = { \"ᆨᄏ\",\t\"kk\",\t\"gk\",\t\"kk'\",\t\"kkh\",\t\"k̚kʰ\" },\n\t[\"ᆨ-ᄐ\"] \t = { \"ᆨᄐ\",\t\"kt\",\t\"gt\",\t\"kt'\",\t\"kth\",\t\"k̚tʰ\" },\n\t[\"ᆨ-ᄑ\"] \t\
      \ = { \"ᆨᄑ\",\t\"kp\",\t\"gp\",\t\"kp'\",\t\"kph\",\t\"k̚pʰ\" },\n\t[\"ᆨ-ᄒ\"] \t = { \"ᄏ\",\t\"kh\",\t\"g-h\",\t\"kh\",\t\"k.h\",\t\"kʰ\" },\n\t[\"ᆩ-Ø\"] \t = { \"ᆨ\",\t\"k\",\t\"kk\",\t\"k\",\t\"kk\",\t\"k̚\" },\n\t[\"ᆩ-ᄀ\"] \t = { \"ᆨᄁ\",\t\"kg\",\t\"\
      kkg\",\t\"kk\",\t\"kkqk\",\t\"k̚k͈\" },\n\t[\"ᆩ-ᄁ\"] \t = { \"ᆨᄁ\",\t\"kkk\",\t\"kkkk\",\t\"kk\",\t\"kkkk\",\t\"k̚k͈\" },\n\t[\"ᆩ-ᄂ\"] \t = { \"ᆼᄂ\",\t\"ngn\",\t\"kkn\",\t\"ngn\",\t\"kkn\",\t\"ŋn\" },\n\t[\"ᆩ-ᄃ\"] \t = { \"ᆨᄄ\",\t\"kd\",\t\"kkd\",\t\"\
      kt\",\t\"kkqt\",\t\"k̚t͈\" },\n\t[\"ᆩ-ᄄ\"] \t = { \"ᆨᄄ\",\t\"ktt\",\t\"kktt\",\t\"ktt\",\t\"kktt\",\t\"k̚t͈\" },\n\t[\"ᆩ-ᄅ\"] \t = { \"ᆼᄂ\",\t\"ngn\",\t\"kkl\",\t\"ngn\",\t\"kkl\",\t\"ŋn\" },\n\t[\"ᆩ-ᄆ\"] \t = { \"ᆼᄆ\",\t\"ngm\",\t\"kkm\",\t\"ngm\",\t\"\
      kkm\",\t\"ŋm\" },\n\t[\"ᆩ-ᄇ\"] \t = { \"ᆨᄈ\",\t\"kb\",\t\"kkb\",\t\"kp\",\t\"kkqp\",\t\"k̚p͈\" },\n\t[\"ᆩ-ᄈ\"] \t = { \"ᆨᄈ\",\t\"kpp\",\t\"kkpp\",\t\"kpp\",\t\"kkpp\",\t\"k̚p͈\" },\n\t[\"ᆩ-ᄉ\"] \t = { \"ᆨᄊ\",\t\"ks\",\t\"kks\",\t\"ks\",\t\"kkqs\",\t\"\
      ks͈\" },\n\t[\"ᆩ-ᄊ\"] \t = { \"ᆨᄊ\",\t\"kss\",\t\"kkss\",\t\"kss\",\t\"kkss\",\t\"ks͈\" },\n\t[\"ᆩ-ᄋ\"] \t = { \"ᄁ\",\t\"kk\",\t\"kk-\",\t\"kk\",\t\"kk.\",\t\"k͈\" },\n\t[\"ᆩ-ᄌ\"] \t = { \"ᆨᄍ\",\t\"kj\",\t\"kkj\",\t\"kch\",\t\"kkqc\",\t\"k̚t͡ɕ͈\" },\n\t\
      [\"ᆩ-ᄍ\"] \t = { \"ᆨᄍ\",\t\"kjj\",\t\"kkjj\",\t\"ktch\",\t\"kkcc\",\t\"k̚t͡ɕ͈\" },\n\t[\"ᆩ-ᄎ\"] \t = { \"ᆨᄎ\",\t\"kch\",\t\"kkch\",\t\"kch'\",\t\"kkch\",\t\"k̚t͡ɕʰ\" },\n\t[\"ᆩ-ᄏ\"] \t = { \"ᆨᄏ\",\t\"kk\",\t\"kkk\",\t\"kk'\",\t\"kkkh\",\t\"k̚kʰ\" },\n\t\
      [\"ᆩ-ᄐ\"] \t = { \"ᆨᄐ\",\t\"kt\",\t\"kkt\",\t\"kt'\",\t\"kkth\",\t\"k̚tʰ\" },\n\t[\"ᆩ-ᄑ\"] \t = { \"ᆨᄑ\",\t\"kp\",\t\"kkp\",\t\"kp'\",\t\"kkph\",\t\"k̚pʰ\" },\n\t[\"ᆩ-ᄒ\"] \t = { \"ᄏ\",\t\"kh\",\t\"kk-h\",\t\"kh\",\t\"kk.h\",\t\"kʰ\" },\n\t[\"ᆪ-Ø\"] \t\
      \ = { \"ᆨ\",\t\"k\",\t\"gs\",\t\"k\",\t\"ks\",\t\"k̚\" },\n\t[\"ᆪ-ᄀ\"] \t = { \"ᆨᄁ\",\t\"kg\",\t\"gsg\",\t\"kk\",\t\"ksqk\",\t\"k̚k͈\" },\n\t[\"ᆪ-ᄁ\"] \t = { \"ᆨᄁ\",\t\"kkk\",\t\"gskk\",\t\"kk\",\t\"kskk\",\t\"k̚k͈\" },\n\t[\"ᆪ-ᄂ\"] \t = { \"ᆼᄂ\",\t\"\
      ngn\",\t\"gsn\",\t\"ngn\",\t\"ksn\",\t\"ŋn\" },\n\t[\"ᆪ-ᄃ\"] \t = { \"ᆨᄄ\",\t\"kd\",\t\"gsd\",\t\"kt\",\t\"ksqt\",\t\"k̚t͈\" },\n\t[\"ᆪ-ᄄ\"] \t = { \"ᆨᄄ\",\t\"ktt\",\t\"gstt\",\t\"ktt\",\t\"kstt\",\t\"k̚t͈\" },\n\t[\"ᆪ-ᄅ\"] \t = { \"ᆼᄂ\",\t\"ngn\",\t\"\
      gsl\",\t\"ngn\",\t\"ksl\",\t\"ŋn\" },\n\t[\"ᆪ-ᄆ\"] \t = { \"ᆼᄆ\",\t\"ngm\",\t\"gsm\",\t\"ngm\",\t\"ksm\",\t\"ŋm\" },\n\t[\"ᆪ-ᄇ\"] \t = { \"ᆨᄈ\",\t\"kb\",\t\"gsb\",\t\"kp\",\t\"ksqp\",\t\"k̚p͈\" },\n\t[\"ᆪ-ᄈ\"] \t = { \"ᆨᄈ\",\t\"kpp\",\t\"gspp\",\t\"kpp\"\
      ,\t\"kspp\",\t\"k̚p͈\" },\n\t[\"ᆪ-ᄉ\"] \t = { \"ᆨᄊ\",\t\"ks\",\t\"gss\",\t\"ks\",\t\"ksqs\",\t\"ks͈\" },\n\t[\"ᆪ-ᄊ\"] \t = { \"ᆨᄊ\",\t\"kss\",\t\"gsss\",\t\"kss\",\t\"ksss\",\t\"ks͈\" },\n\t[\"ᆪ-ᄋ\"] \t = { \"ᆨᄊ\",\t\"ks\",\t\"gs-\",\t\"ks\",\t\"ks.\"\
      ,\t\"ks͈\" },\n\t[\"ᆪ-ᄌ\"] \t = { \"ᆨᄍ\",\t\"kj\",\t\"gsj\",\t\"kch\",\t\"ksqc\",\t\"k̚t͡ɕ͈\" },\n\t[\"ᆪ-ᄍ\"] \t = { \"ᆨᄍ\",\t\"kjj\",\t\"gsjj\",\t\"ktch\",\t\"kscc\",\t\"k̚t͡ɕ͈\" },\n\t[\"ᆪ-ᄎ\"] \t = { \"ᆨᄎ\",\t\"kch\",\t\"gsch\",\t\"kch'\",\t\"ksch\"\
      ,\t\"k̚t͡ɕʰ\" },\n\t[\"ᆪ-ᄏ\"] \t = { \"ᆨᄏ\",\t\"kk\",\t\"gsk\",\t\"kk'\",\t\"kskh\",\t\"k̚kʰ\" },\n\t[\"ᆪ-ᄐ\"] \t = { \"ᆨᄐ\",\t\"kt\",\t\"gst\",\t\"kt'\",\t\"ksth\",\t\"k̚tʰ\" },\n\t[\"ᆪ-ᄑ\"] \t = { \"ᆨᄑ\",\t\"kp\",\t\"gsp\",\t\"kp'\",\t\"ksph\",\t\"k̚\
      pʰ\" },\n\t[\"ᆪ-ᄒ\"] \t = { \"ᄏ\",\t\"kh\",\t\"gs-h\",\t\"kh\",\t\"ks.h\",\t\"kʰ\" },\n\t[\"ᆫ-Ø\"] \t = { \"ᆫ\",\t\"n\",\t\"n\",\t\"n\",\t\"n\",\t\"n\" },\n\t[\"ᆫ-ᄀ\"] \t = { \"ᆫᄀ\",\t\"n-g\",\t\"ng\",\t\"n'g\",\t\"nk\",\t\"nɡ\" },\n\t[\"ᆫ-ᄁ\"] \t = {\
      \ \"ᆫᄁ\",\t\"nkk\",\t\"nkk\",\t\"nkk\",\t\"nkk\",\t\"nk͈\" },\n\t[\"ᆫ-ᄂ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"nn\",\t\"nn\",\t\"nn\",\t\"nn\" },\n\t[\"ᆫ-ᄃ\"] \t = { \"ᆫᄃ\",\t\"nd\",\t\"nd\",\t\"nd\",\t\"nt\",\t\"nd\" },\n\t[\"ᆫ-ᄄ\"] \t = { \"ᆫᄄ\",\t\"ntt\",\t\"\
      ntt\",\t\"ntt\",\t\"ntt\",\t\"nt͈\" },\n\t[\"ᆫ-ᄅ\"] \t = { \"ᆯᄅ\",\t\"ll\",\t\"nl\",\t\"ll\",\t\"nl\",\t\"ɭɭ\" },\n\t[\"ᆫ-ᄆ\"] \t = { \"ᆫᄆ\",\t\"nm\",\t\"nm\",\t\"nm\",\t\"nm\",\t\"nm\" },\n\t[\"ᆫ-ᄇ\"] \t = { \"ᆫᄇ\",\t\"nb\",\t\"nb\",\t\"nb\",\t\"np\"\
      ,\t\"nb\" },\n\t[\"ᆫ-ᄈ\"] \t = { \"ᆫᄈ\",\t\"npp\",\t\"npp\",\t\"npp\",\t\"npp\",\t\"np͈\" },\n\t[\"ᆫ-ᄉ\"] \t = { \"ᆫᄉ\",\t\"ns\",\t\"ns\",\t\"ns\",\t\"ns\",\t\"nsʰ\" },\n\t[\"ᆫ-ᄊ\"] \t = { \"ᆫᄊ\",\t\"nss\",\t\"nss\",\t\"nss\",\t\"nss\",\t\"ns͈\" },\n\t\
      [\"ᆫ-ᄋ\"] \t = { \"ᄂ\",\t\"n\",\t\"n-\",\t\"n\",\t\"n.\",\t\"n\" },\n\t[\"ᆫ-ᄌ\"] \t = { \"ᆫᄌ\",\t\"nj\",\t\"nj\",\t\"nj\",\t\"nc\",\t\"nd͡ʑ\" },\n\t[\"ᆫ-ᄍ\"] \t = { \"ᆫᄍ\",\t\"njj\",\t\"njj\",\t\"ntch\",\t\"ncc\",\t\"nt͡ɕ͈\" },\n\t[\"ᆫ-ᄎ\"] \t = { \"ᆫᄎ\
      \",\t\"nch\",\t\"nch\",\t\"nch'\",\t\"nch\",\t\"nt͡ɕʰ\" },\n\t[\"ᆫ-ᄏ\"] \t = { \"ᆫᄏ\",\t\"nk\",\t\"nk\",\t\"nk'\",\t\"nkh\",\t\"nkʰ\" },\n\t[\"ᆫ-ᄐ\"] \t = { \"ᆫᄐ\",\t\"nt\",\t\"nt\",\t\"nt'\",\t\"nth\",\t\"ntʰ\" },\n\t[\"ᆫ-ᄑ\"] \t = { \"ᆫᄑ\",\t\"np\",\t\
      \"np\",\t\"np'\",\t\"nph\",\t\"npʰ\" },\n\t[\"ᆫ-ᄒ\"] \t = { \"ᆫᄒ\",\t\"nh\",\t\"n-h\",\t\"nh\",\t\"n.h\",\t\"nɦ\" },\n\t[\"ᆬ-Ø\"] \t = { \"ᆫ\",\t\"n\",\t\"nj\",\t\"n\",\t\"nc\",\t\"n\" },\n\t[\"ᆬ-ᄀ\"] \t = { \"ᆫᄁ\",\t\"ng\",\t\"njg\",\t\"nk\",\t\"ncqk\"\
      ,\t\"nk͈\" },\n\t[\"ᆬ-ᄁ\"] \t = { \"ᆫᄁ\",\t\"nkk\",\t\"njkk\",\t\"nkk\",\t\"nckk\",\t\"nk͈\" },\n\t[\"ᆬ-ᄂ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"njn\",\t\"nn\",\t\"ncn\",\t\"nn\" },\n\t[\"ᆬ-ᄃ\"] \t = { \"ᆫᄄ\",\t\"nd\",\t\"njd\",\t\"nt\",\t\"ncqt\",\t\"nt͈\" },\n\
      \t[\"ᆬ-ᄄ\"] \t = { \"ᆫᄄ\",\t\"ntt\",\t\"njtt\",\t\"ntt\",\t\"nctt\",\t\"nt͈\" },\n\t[\"ᆬ-ᄅ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"njl\",\t\"nn\",\t\"ncl\",\t\"nn\" },\n\t[\"ᆬ-ᄆ\"] \t = { \"ᆫᄆ\",\t\"nm\",\t\"njm\",\t\"nm\",\t\"ncm\",\t\"nm\" },\n\t[\"ᆬ-ᄇ\"] \t =\
      \ { \"ᆫᄈ\",\t\"nb\",\t\"njb\",\t\"np\",\t\"ncqp\",\t\"np͈\" },\n\t[\"ᆬ-ᄈ\"] \t = { \"ᆫᄈ\",\t\"npp\",\t\"njpp\",\t\"npp\",\t\"ncpp\",\t\"np͈\" },\n\t[\"ᆬ-ᄉ\"] \t = { \"ᆫᄊ\",\t\"ns\",\t\"njs\",\t\"ns\",\t\"ncqs\",\t\"ns͈\" },\n\t[\"ᆬ-ᄊ\"] \t = { \"ᆫᄊ\",\t\
      \"nss\",\t\"njss\",\t\"nss\",\t\"ncss\",\t\"ns͈\" },\n\t[\"ᆬ-ᄋ\"] \t = { \"ᆫᄌ\",\t\"nj\",\t\"nj-\",\t\"nj\",\t\"nc.\",\t\"nd͡ʑ\" },\n\t[\"ᆬ-ᄌ\"] \t = { \"ᆫᄍ\",\t\"nj\",\t\"njj\",\t\"nch\",\t\"ncqc\",\t\"nt͡ɕ͈\" },\n\t[\"ᆬ-ᄍ\"] \t = { \"ᆫᄍ\",\t\"njj\",\t\
      \"njjj\",\t\"ntch\",\t\"nccc\",\t\"nt͡ɕ͈\" },\n\t[\"ᆬ-ᄎ\"] \t = { \"ᆫᄎ\",\t\"nch\",\t\"njch\",\t\"nch'\",\t\"ncch\",\t\"nt͡ɕʰ\" },\n\t[\"ᆬ-ᄏ\"] \t = { \"ᆫᄏ\",\t\"nk\",\t\"njk\",\t\"nk'\",\t\"nckh\",\t\"nkʰ\" },\n\t[\"ᆬ-ᄐ\"] \t = { \"ᆫᄐ\",\t\"nt\",\t\"\
      njt\",\t\"nt'\",\t\"ncth\",\t\"ntʰ\" },\n\t[\"ᆬ-ᄑ\"] \t = { \"ᆫᄑ\",\t\"np\",\t\"njp\",\t\"np'\",\t\"ncph\",\t\"npʰ\" },\n\t[\"ᆬ-ᄒ\"] \t = { \"ᆫᄎ\",\t\"nch\",\t\"nj-h\",\t\"nch'\",\t\"nc.h\",\t\"nt͡ɕʰ\" },\n\t[\"ᆭ-Ø\"] \t = { \"ᆫ\",\t\"n\",\t\"nh\",\t\"\
      n\",\t\"nh\",\t\"n\" },\n\t[\"ᆭ-ᄀ\"] \t = { \"ᆫᄏ\",\t\"nk\",\t\"nhg\",\t\"nk'\",\t\"nhk\",\t\"nkʰ\" },\n\t[\"ᆭ-ᄁ\"] \t = { \"ᆫᄏ\",\t\"nk\",\t\"nhkk\",\t\"nk'\",\t\"nhkk\",\t\"nkʰ\" },\n\t[\"ᆭ-ᄂ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"nhn\",\t\"nn\",\t\"nhn\",\t\"\
      nn\" },\n\t[\"ᆭ-ᄃ\"] \t = { \"ᆫᄐ\",\t\"nt\",\t\"nhd\",\t\"nt'\",\t\"nht\",\t\"ntʰ\" },\n\t[\"ᆭ-ᄄ\"] \t = { \"ᆫᄐ\",\t\"nt\",\t\"nhtt\",\t\"nt'\",\t\"nhtt\",\t\"ntʰ\" },\n\t[\"ᆭ-ᄅ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"nhl\",\t\"nn\",\t\"nhl\",\t\"nn\" },\n\t[\"ᆭ\
      -ᄆ\"] \t = { \"ᆫᄆ\",\t\"nm\",\t\"nhm\",\t\"nm\",\t\"nhm\",\t\"nm\" },\n\t[\"ᆭ-ᄇ\"] \t = { \"ᆫᄑ\",\t\"np\",\t\"nhb\",\t\"np'\",\t\"nhp\",\t\"npʰ\" },\n\t[\"ᆭ-ᄈ\"] \t = { \"ᆫᄑ\",\t\"np\",\t\"nhpp\",\t\"np'\",\t\"nhpp\",\t\"npʰ\" },\n\t[\"ᆭ-ᄉ\"] \t = { \"\
      ᆫᄊ\",\t\"ns\",\t\"nhs\",\t\"nss\",\t\"nhs\",\t\"ns͈\" },\n\t[\"ᆭ-ᄊ\"] \t = { \"ᆫᄊ\",\t\"nss\",\t\"nhss\",\t\"nss\",\t\"nhss\",\t\"ns͈\" },\n\t[\"ᆭ-ᄋ\"] \t = { \"ᄂ\",\t\"n\",\t\"nh-\",\t\"n\",\t\"nh.\",\t\"n\" },\n\t[\"ᆭ-ᄌ\"] \t = { \"ᆫᄎ\",\t\"nch\",\t\"\
      nhj\",\t\"nch'\",\t\"nhc\",\t\"nt͡ɕʰ\" },\n\t[\"ᆭ-ᄍ\"] \t = { \"ᆫᄎ\",\t\"nch\",\t\"nhjj\",\t\"nch'\",\t\"nhcc\",\t\"nt͡ɕʰ\" },\n\t[\"ᆭ-ᄎ\"] \t = { \"ᆫᄎ\",\t\"nch\",\t\"nhch\",\t\"nch'\",\t\"nhch\",\t\"nt͡ɕʰ\" },\n\t[\"ᆭ-ᄏ\"] \t = { \"ᆫᄏ\",\t\"nk\",\t\"\
      nhk\",\t\"nk'\",\t\"nhkh\",\t\"nkʰ\" },\n\t[\"ᆭ-ᄐ\"] \t = { \"ᆫᄐ\",\t\"nt\",\t\"nht\",\t\"nt'\",\t\"nhth\",\t\"ntʰ\" },\n\t[\"ᆭ-ᄑ\"] \t = { \"ᆫᄑ\",\t\"np\",\t\"nhp\",\t\"np'\",\t\"nhph\",\t\"npʰ\" },\n\t[\"ᆭ-ᄒ\"] \t = { \"ᆫᄒ\",\t\"nh\",\t\"nhh\",\t\"nh\"\
      ,\t\"nhh\",\t\"nɦ\" },\n\t[\"ᆮ-Ø\"] \t = { \"ᆮ\",\t\"t\",\t\"d\",\t\"t\",\t\"t\",\t\"t̚\" },\n\t[\"ᆮ-ᄀ\"] \t = { \"ᆮᄁ\",\t\"tg\",\t\"dg\",\t\"tk\",\t\"tqk\",\t\"t̚k͈\" },\n\t[\"ᆮ-ᄁ\"] \t = { \"ᆮᄁ\",\t\"tkk\",\t\"dkk\",\t\"tkk\",\t\"tkk\",\t\"t̚k͈\" },\n\
      \t[\"ᆮ-ᄂ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"dn\",\t\"nn\",\t\"tn\",\t\"nn\" },\n\t[\"ᆮ-ᄃ\"] \t = { \"ᆮᄄ\",\t\"td\",\t\"dd\",\t\"tt\",\t\"tqt\",\t\"t̚t͈\" },\n\t[\"ᆮ-ᄄ\"] \t = { \"ᆮᄄ\",\t\"ttt\",\t\"dtt\",\t\"tt\",\t\"ttt\",\t\"t̚t͈\" },\n\t[\"ᆮ-ᄅ\"] \t = {\
      \ \"ᆫᄂ\",\t\"nn\",\t\"dl\",\t\"nn\",\t\"tl\",\t\"nn\" },\n\t[\"ᆮ-ᄆ\"] \t = { \"ᆫᄆ\",\t\"nm\",\t\"dm\",\t\"nm\",\t\"tm\",\t\"nm\" },\n\t[\"ᆮ-ᄇ\"] \t = { \"ᆮᄈ\",\t\"tb\",\t\"db\",\t\"tp\",\t\"tqp\",\t\"t̚p͈\" },\n\t[\"ᆮ-ᄈ\"] \t = { \"ᆮᄈ\",\t\"tpp\",\t\"\
      dpp\",\t\"tpp\",\t\"tpp\",\t\"t̚p͈\" },\n\t[\"ᆮ-ᄉ\"] \t = { \"ᆮᄊ\",\t\"ts\",\t\"ds\",\t\"ss\",\t\"tqs\",\t\"t̚s͈\" },\n\t[\"ᆮ-ᄊ\"] \t = { \"ᆮᄊ\",\t\"tss\",\t\"dss\",\t\"ss\",\t\"tss\",\t\"t̚s͈\" },\n\t[\"ᆮ-ᄋ\"] \t = { \"ᄃ\",\t\"d\",\t\"d-\",\t\"d\",\t\"\
      t.\",\t\"d\" },\n\t[\"ᆮ-ᄌ\"] \t = { \"ᆮᄍ\",\t\"tj\",\t\"dj\",\t\"tch\",\t\"tqc\",\t\"t̚t͡ɕ͈\" },\n\t[\"ᆮ-ᄍ\"] \t = { \"ᆮᄍ\",\t\"tjj\",\t\"djj\",\t\"tch\",\t\"tcc\",\t\"t̚t͡ɕ͈\" },\n\t[\"ᆮ-ᄎ\"] \t = { \"ᆮᄎ\",\t\"tch\",\t\"dch\",\t\"tch'\",\t\"tch\",\t\"\
      t̚t͡ɕʰ\" },\n\t[\"ᆮ-ᄏ\"] \t = { \"ᆮᄏ\",\t\"tk\",\t\"dk\",\t\"tk'\",\t\"tkh\",\t\"t̚kʰ\" },\n\t[\"ᆮ-ᄐ\"] \t = { \"ᆮᄐ\",\t\"tt\",\t\"dt\",\t\"tt'\",\t\"tth\",\t\"t̚tʰ\" },\n\t[\"ᆮ-ᄑ\"] \t = { \"ᆮᄑ\",\t\"tp\",\t\"dp\",\t\"tp'\",\t\"tph\",\t\"t̚pʰ\" },\n\t\
      [\"ᆮ-ᄒ\"] \t = { \"ᄐ\",\t\"th\",\t\"d-h\",\t\"th\",\t\"t.h\",\t\"tʰ\" },\n\t[\"ᆯ-Ø\"] \t = { \"ᆯ\",\t\"l\",\t\"l\",\t\"l\",\t\"l\",\t\"ɭ\" },\n\t[\"ᆯ-ᄀ\"] \t = { \"ᆯᄀ\",\t\"lg\",\t\"lg\",\t\"lg\",\t\"lk\",\t\"ɭɡ\" },\n\t[\"ᆯ-ᄁ\"] \t = { \"ᆯᄁ\",\t\"lkk\"\
      ,\t\"lkk\",\t\"lkk\",\t\"lkk\",\t\"ɭk͈\" },\n\t[\"ᆯ-ᄂ\"] \t = { \"ᆯᄅ\",\t\"ll\",\t\"ln\",\t\"ll\",\t\"ln\",\t\"ɭɭ\" },\n\t[\"ᆯ-ᄃ\"] \t = { \"ᆯᄃ\",\t\"ld\",\t\"ld\",\t\"ld\",\t\"lt\",\t\"ɭd\" },\n\t[\"ᆯ-ᄄ\"] \t = { \"ᆯᄄ\",\t\"ltt\",\t\"ltt\",\t\"ltt\",\t\
      \"ltt\",\t\"ɭt͈\" },\n\t[\"ᆯ-ᄅ\"] \t = { \"ᆯᄅ\",\t\"ll\",\t\"ll\",\t\"ll\",\t\"ll\",\t\"ɭɭ\" },\n\t[\"ᆯ-ᄆ\"] \t = { \"ᆯᄆ\",\t\"lm\",\t\"lm\",\t\"lm\",\t\"lm\",\t\"ɭm\" },\n\t[\"ᆯ-ᄇ\"] \t = { \"ᆯᄇ\",\t\"lb\",\t\"lb\",\t\"lb\",\t\"lp\",\t\"ɭb\" },\n\t[\"\
      ᆯ-ᄈ\"] \t = { \"ᆯᄈ\",\t\"lpp\",\t\"lpp\",\t\"lpp\",\t\"lpp\",\t\"ɭp͈\" },\n\t[\"ᆯ-ᄉ\"] \t = { \"ᆯᄉ\",\t\"ls\",\t\"ls\",\t\"ls\",\t\"ls\",\t\"ɭsʰ\" },\n\t[\"ᆯ-ᄊ\"] \t = { \"ᆯᄊ\",\t\"lss\",\t\"lss\",\t\"lss\",\t\"lss\",\t\"ɭs͈\" },\n\t[\"ᆯ-ᄋ\"] \t = { \"\
      ᄅ\",\t\"r\",\t\"l-\",\t\"r\",\t\"l.\",\t\"ɾ\" },\n\t[\"ᆯ-ᄌ\"] \t = { \"ᆯᄌ\",\t\"lj\",\t\"lj\",\t\"lj\",\t\"lc\",\t\"ɭd͡ʑ\" },\n\t[\"ᆯ-ᄍ\"] \t = { \"ᆯᄍ\",\t\"ljj\",\t\"ljj\",\t\"ltch\",\t\"lcc\",\t\"ɭt͡ɕ͈\" },\n\t[\"ᆯ-ᄎ\"] \t = { \"ᆯᄎ\",\t\"lch\",\t\"lch\"\
      ,\t\"lch'\",\t\"lch\",\t\"ɭt͡ɕʰ\" },\n\t[\"ᆯ-ᄏ\"] \t = { \"ᆯᄏ\",\t\"lk\",\t\"lk\",\t\"lk'\",\t\"lkh\",\t\"ɭkʰ\" },\n\t[\"ᆯ-ᄐ\"] \t = { \"ᆯᄐ\",\t\"lt\",\t\"lt\",\t\"lt'\",\t\"lth\",\t\"ɭtʰ\" },\n\t[\"ᆯ-ᄑ\"] \t = { \"ᆯᄑ\",\t\"lp\",\t\"lp\",\t\"lp'\",\t\"\
      lph\",\t\"ɭpʰ\" },\n\t[\"ᆯ-ᄒ\"] \t = { \"ᆯᄒ\",\t\"lh\",\t\"l-h\",\t\"rh\",\t\"l.h\",\t\"ɾɦ\" },\n\t[\"ᆰ-Ø\"] \t = { \"ᆨ\",\t\"k\",\t\"lg\",\t\"k\",\t\"lk\",\t\"k̚\" },\n\t[\"ᆰ-ᄀ\"] \t = { \"ᆯᄁ\",\t\"lg\",\t\"lgg\",\t\"lg\",\t\"lkqk\",\t\"ɭk͈\" },\n\t[\"\
      ᆰ-ᄁ\"] \t = { \"ᆯᄁ\",\t\"lkk\",\t\"lgkk\",\t\"lkk\",\t\"lkkk\",\t\"ɭk͈\" },\n\t[\"ᆰ-ᄂ\"] \t = { \"ᆼᄂ\",\t\"ngn\",\t\"lgn\",\t\"ngn\",\t\"lkn\",\t\"ŋn\" },\n\t[\"ᆰ-ᄃ\"] \t = { \"ᆨᄄ\",\t\"kd\",\t\"lgd\",\t\"kt\",\t\"lkqt\",\t\"k̚t͈\" },\n\t[\"ᆰ-ᄄ\"] \t =\
      \ { \"ᆨᄄ\",\t\"ktt\",\t\"lgtt\",\t\"ktt\",\t\"lktt\",\t\"k̚t͈\" },\n\t[\"ᆰ-ᄅ\"] \t = { \"ᆼᄂ\",\t\"ngn\",\t\"lgl\",\t\"ngn\",\t\"lkl\",\t\"ŋn\" },\n\t[\"ᆰ-ᄆ\"] \t = { \"ᆼᄆ\",\t\"ngm\",\t\"lgm\",\t\"ngm\",\t\"lkm\",\t\"ŋm\" },\n\t[\"ᆰ-ᄇ\"] \t = { \"ᆨᄈ\"\
      ,\t\"kb\",\t\"lgb\",\t\"kp\",\t\"lkqp\",\t\"k̚p͈\" },\n\t[\"ᆰ-ᄈ\"] \t = { \"ᆨᄈ\",\t\"kpp\",\t\"lgpp\",\t\"kpp\",\t\"lkpp\",\t\"k̚p͈\" },\n\t[\"ᆰ-ᄉ\"] \t = { \"ᆨᄊ\",\t\"ks\",\t\"lgs\",\t\"ks\",\t\"lkqs\",\t\"ks͈\" },\n\t[\"ᆰ-ᄊ\"] \t = { \"ᆨᄊ\",\t\"kss\"\
      ,\t\"lgss\",\t\"kss\",\t\"lkss\",\t\"ks͈\" },\n\t[\"ᆰ-ᄋ\"] \t = { \"ᆯᄀ\",\t\"lg\",\t\"lg-\",\t\"lg\",\t\"lk.\",\t\"ɭɡ\" },\n\t[\"ᆰ-ᄌ\"] \t = { \"ᆨᄍ\",\t\"kj\",\t\"lgj\",\t\"kch\",\t\"lkqc\",\t\"k̚t͡ɕ͈\" },\n\t[\"ᆰ-ᄍ\"] \t = { \"ᆨᄍ\",\t\"kjj\",\t\"lgjj\"\
      ,\t\"ktch\",\t\"lkcc\",\t\"k̚t͡ɕ͈\" },\n\t[\"ᆰ-ᄎ\"] \t = { \"ᆨᄎ\",\t\"kch\",\t\"lgch\",\t\"kch'\",\t\"lkch\",\t\"k̚t͡ɕʰ\" },\n\t[\"ᆰ-ᄏ\"] \t = { \"ᆯᄏ\",\t\"lk\",\t\"lgk\",\t\"lk'\",\t\"lkkh\",\t\"ɭkʰ\" },\n\t[\"ᆰ-ᄐ\"] \t = { \"ᆨᄐ\",\t\"kt\",\t\"lgt\",\t\
      \"kt'\",\t\"lkth\",\t\"k̚tʰ\" },\n\t[\"ᆰ-ᄑ\"] \t = { \"ᆨᄑ\",\t\"kp\",\t\"lgp\",\t\"kp'\",\t\"lkph\",\t\"k̚pʰ\" },\n\t[\"ᆰ-ᄒ\"] \t = { \"ᆯᄏ\",\t\"lk\",\t\"lg-h\",\t\"lk'\",\t\"lk.h\",\t\"ɭkʰ\" },\n\t[\"ᆱ-Ø\"] \t = { \"ᆷ\",\t\"m\",\t\"lm\",\t\"m\",\t\"lm\"\
      ,\t\"m\" },\n\t[\"ᆱ-ᄀ\"] \t = { \"ᆷᄀ\",\t\"mg\",\t\"lmg\",\t\"mg\",\t\"lmqk\",\t\"mɡ\" },\n\t[\"ᆱ-ᄁ\"] \t = { \"ᆷᄁ\",\t\"mkk\",\t\"lmkk\",\t\"mkk\",\t\"lmkk\",\t\"mk͈\" },\n\t[\"ᆱ-ᄂ\"] \t = { \"ᆷᄂ\",\t\"mn\",\t\"lmn\",\t\"mn\",\t\"lmn\",\t\"mn\" },\n\t\
      [\"ᆱ-ᄃ\"] \t = { \"ᆷᄄ\",\t\"md\",\t\"lmd\",\t\"mt\",\t\"lmt\",\t\"mt͈\" },\n\t[\"ᆱ-ᄄ\"] \t = { \"ᆷᄄ\",\t\"mtt\",\t\"lmtt\",\t\"mtt\",\t\"lmtt\",\t\"mt͈\" },\n\t[\"ᆱ-ᄅ\"] \t = { \"ᆷᄂ\",\t\"mn\",\t\"lml\",\t\"mn\",\t\"lml\",\t\"mn\" },\n\t[\"ᆱ-ᄆ\"] \t =\
      \ { \"ᆷᄆ\",\t\"mm\",\t\"lmm\",\t\"mm\",\t\"lmm\",\t\"mm\" },\n\t[\"ᆱ-ᄇ\"] \t = { \"ᆷᄇ\",\t\"mb\",\t\"lmb\",\t\"mb\",\t\"lmqp\",\t\"mb\" },\n\t[\"ᆱ-ᄈ\"] \t = { \"ᆷᄈ\",\t\"mpp\",\t\"lmpp\",\t\"mpp\",\t\"lmpp\",\t\"mp͈\" },\n\t[\"ᆱ-ᄉ\"] \t = { \"ᆷᄉ\",\t\"\
      ms\",\t\"lms\",\t\"ms\",\t\"lmqs\",\t\"msʰ\" },\n\t[\"ᆱ-ᄊ\"] \t = { \"ᆷᄊ\",\t\"mss\",\t\"lmss\",\t\"mss\",\t\"lmss\",\t\"ms͈\" },\n\t[\"ᆱ-ᄋ\"] \t = { \"ᆯᄆ\",\t\"lm\",\t\"lm-\",\t\"lm\",\t\"lm.\",\t\"ɭm\" },\n\t[\"ᆱ-ᄌ\"] \t = { \"ᆷᄌ\",\t\"mj\",\t\"lmj\"\
      ,\t\"mj\",\t\"lmqc\",\t\"md͡ʑ\" },\n\t[\"ᆱ-ᄍ\"] \t = { \"ᆷᄍ\",\t\"mjj\",\t\"lmjj\",\t\"mtch\",\t\"lmcc\",\t\"mt͡ɕ͈\" },\n\t[\"ᆱ-ᄎ\"] \t = { \"ᆷᄎ\",\t\"mch\",\t\"lmch\",\t\"mch'\",\t\"lmch\",\t\"mt͡ɕʰ\" },\n\t[\"ᆱ-ᄏ\"] \t = { \"ᆷᄏ\",\t\"mk\",\t\"lmk\",\t\
      \"mk'\",\t\"lmkh\",\t\"mkʰ\" },\n\t[\"ᆱ-ᄐ\"] \t = { \"ᆷᄐ\",\t\"mt\",\t\"lmt\",\t\"mt'\",\t\"lmth\",\t\"mtʰ\" },\n\t[\"ᆱ-ᄑ\"] \t = { \"ᆷᄑ\",\t\"mp\",\t\"lmp\",\t\"mp'\",\t\"lmph\",\t\"mpʰ\" },\n\t[\"ᆱ-ᄒ\"] \t = { \"ᆯᄒ\",\t\"mh\",\t\"lm-h\",\t\"mh\",\t\"\
      lm.h\",\t\"ɾɦ\" },\n\t[\"ᆲ-Ø\"] \t = { \"ᆯ\",\t\"l\",\t\"lb\",\t\"l\",\t\"lp\",\t\"ɭ\" },\n\t[\"ᆲ-ᄀ\"] \t = { \"ᆯᄁ\",\t\"lg\",\t\"lbg\",\t\"lk\",\t\"lpqk\",\t\"ɭk͈\" },\n\t[\"ᆲ-ᄁ\"] \t = { \"ᆯᄁ\",\t\"lkk\",\t\"lbkk\",\t\"lkk\",\t\"lpkk\",\t\"ɭk͈\" },\n\
      \t[\"ᆲ-ᄂ\"] \t = { \"ᆯᄅ\",\t\"ll\",\t\"lbn\",\t\"ll\",\t\"lpn\",\t\"ɭɭ\" },\n\t[\"ᆲ-ᄃ\"] \t = { \"ᆯᄄ\",\t\"ld\",\t\"lbd\",\t\"lt\",\t\"lpqt\",\t\"ɭt͈\" },\n\t[\"ᆲ-ᄄ\"] \t = { \"ᆯᄄ\",\t\"ltt\",\t\"lbtt\",\t\"ltt\",\t\"lptt\",\t\"ɭt͈\" },\n\t[\"ᆲ-ᄅ\"] \t\
      \ = { \"ᆯᄅ\",\t\"ll\",\t\"lbl\",\t\"ll\",\t\"lpl\",\t\"ɭɭ\" },\n\t[\"ᆲ-ᄆ\"] \t = { \"ᆯᄆ\",\t\"lm\",\t\"lbm\",\t\"lm\",\t\"lpm\",\t\"ɭm\" },\n\t[\"ᆲ-ᄇ\"] \t = { \"ᆯᄈ\",\t\"lb\",\t\"lbb\",\t\"lp\",\t\"lpqp\",\t\"ɭp͈\" },\n\t[\"ᆲ-ᄈ\"] \t = { \"ᆯᄈ\",\t\"lpp\"\
      ,\t\"lbpp\",\t\"lpp\",\t\"lppp\",\t\"ɭp͈\" },\n\t[\"ᆲ-ᄉ\"] \t = { \"ᆯᄊ\",\t\"ls\",\t\"lbs\",\t\"ls\",\t\"lpqs\",\t\"ɭs͈\" },\n\t[\"ᆲ-ᄊ\"] \t = { \"ᆯᄊ\",\t\"lss\",\t\"lbss\",\t\"lss\",\t\"lpss\",\t\"ɭs͈\" },\n\t[\"ᆲ-ᄋ\"] \t = { \"ᆯᄇ\",\t\"lb\",\t\"lb-\"\
      ,\t\"lb\",\t\"lp.\",\t\"ɭb\" },\n\t[\"ᆲ-ᄌ\"] \t = { \"ᆯᄍ\",\t\"lj\",\t\"lbj\",\t\"lch\",\t\"lpqc\",\t\"ɭt͡ɕ͈\" },\n\t[\"ᆲ-ᄍ\"] \t = { \"ᆯᄍ\",\t\"ljj\",\t\"lbjj\",\t\"ltch\",\t\"lpcc\",\t\"ɭt͡ɕ͈\" },\n\t[\"ᆲ-ᄎ\"] \t = { \"ᆯᄎ\",\t\"lch\",\t\"lbch\",\t\"\
      lch'\",\t\"lpch\",\t\"ɭt͡ɕʰ\" },\n\t[\"ᆲ-ᄏ\"] \t = { \"ᆯᄏ\",\t\"lk\",\t\"lbk\",\t\"lk'\",\t\"lpkh\",\t\"ɭkʰ\" },\n\t[\"ᆲ-ᄐ\"] \t = { \"ᆯᄐ\",\t\"lt\",\t\"lbt\",\t\"lt'\",\t\"lpth\",\t\"ɭtʰ\" },\n\t[\"ᆲ-ᄑ\"] \t = { \"ᆯᄑ\",\t\"lp\",\t\"lbp\",\t\"lp'\",\t\"\
      lpph\",\t\"ɭpʰ\" },\n\t[\"ᆲ-ᄒ\"] \t = { \"ᆯᄑ\",\t\"lph\",\t\"lb-h\",\t\"lp'\",\t\"lp.h\",\t\"ɭpʰ\" },\n\t[\"ᆳ-Ø\"] \t = { \"ᆯ\",\t\"l\",\t\"ls\",\t\"l\",\t\"ls\",\t\"ɭ\" },\n\t[\"ᆳ-ᄀ\"] \t = { \"ᆯᄀ\",\t\"lg\",\t\"lsg\",\t\"lg\",\t\"lsk\",\t\"ɭɡ\" },\n\t\
      [\"ᆳ-ᄁ\"] \t = { \"ᆯᄁ\",\t\"lkk\",\t\"lskk\",\t\"lkk\",\t\"lskk\",\t\"ɭk͈\" },\n\t[\"ᆳ-ᄂ\"] \t = { \"ᆯᄂ\",\t\"ln\",\t\"lsn\",\t\"ln\",\t\"lsn\",\t\"ɭn\" },\n\t[\"ᆳ-ᄃ\"] \t = { \"ᆯᄃ\",\t\"ld\",\t\"lsd\",\t\"ld\",\t\"lst\",\t\"ɭd\" },\n\t[\"ᆳ-ᄄ\"] \t = {\
      \ \"ᆯᄄ\",\t\"ltt\",\t\"lstt\",\t\"ltt\",\t\"lstt\",\t\"ɭt͈\" },\n\t[\"ᆳ-ᄅ\"] \t = { \"ᆯᄂ\",\t\"ln\",\t\"lsl\",\t\"ln\",\t\"lsl\",\t\"ɭn\" },\n\t[\"ᆳ-ᄆ\"] \t = { \"ᆯᄆ\",\t\"lm\",\t\"lsm\",\t\"lm\",\t\"lsm\",\t\"ɭm\" },\n\t[\"ᆳ-ᄇ\"] \t = { \"ᆯᄇ\",\t\"lb\"\
      ,\t\"lsb\",\t\"lb\",\t\"lsp\",\t\"ɭb\" },\n\t[\"ᆳ-ᄈ\"] \t = { \"ᆯᄈ\",\t\"lpp\",\t\"lspp\",\t\"lpp\",\t\"lspp\",\t\"ɭp͈\" },\n\t[\"ᆳ-ᄉ\"] \t = { \"ᆯᄉ\",\t\"ls\",\t\"lss\",\t\"ls\",\t\"lss\",\t\"ɭsʰ\" },\n\t[\"ᆳ-ᄊ\"] \t = { \"ᆯᄊ\",\t\"lss\",\t\"lsss\",\t\
      \"lss\",\t\"lsss\",\t\"ɭs͈\" },\n\t[\"ᆳ-ᄋ\"] \t = { \"ᆯᄊ\",\t\"ls\",\t\"ls-\",\t\"ls\",\t\"ls.\",\t\"ɭs͈\" },\n\t[\"ᆳ-ᄌ\"] \t = { \"ᆯᄌ\",\t\"lj\",\t\"lsj\",\t\"lj\",\t\"lsc\",\t\"ɭd͡ʑ\" },\n\t[\"ᆳ-ᄍ\"] \t = { \"ᆯᄍ\",\t\"ljj\",\t\"lsjj\",\t\"ltch\",\t\"\
      lscc\",\t\"ɭt͡ɕ͈\" },\n\t[\"ᆳ-ᄎ\"] \t = { \"ᆯᄎ\",\t\"lch\",\t\"lsch\",\t\"lch'\",\t\"lsch\",\t\"ɭt͡ɕʰ\" },\n\t[\"ᆳ-ᄏ\"] \t = { \"ᆯᄏ\",\t\"lk\",\t\"lsk\",\t\"lk'\",\t\"lskh\",\t\"ɭkʰ\" },\n\t[\"ᆳ-ᄐ\"] \t = { \"ᆯᄐ\",\t\"lt\",\t\"lst\",\t\"lt'\",\t\"lsth\"\
      ,\t\"ɭtʰ\" },\n\t[\"ᆳ-ᄑ\"] \t = { \"ᆯᄑ\",\t\"lp\",\t\"lsp\",\t\"lp'\",\t\"lsph\",\t\"ɭpʰ\" },\n\t[\"ᆳ-ᄒ\"] \t = { \"ᆯᄊ\",\t\"lh\",\t\"lsh\",\t\"lh\",\t\"lsh\",\t\"ɭs͈\" },\n\t[\"ᆴ-Ø\"] \t = { \"ᆯ\",\t\"l\",\t\"lt\",\t\"l\",\t\"lth\",\t\"ɭ\" },\n\t[\"ᆴ\
      -ᄀ\"] \t = { \"ᆯᄁ\",\t\"lg\",\t\"ltg\",\t\"lk\",\t\"lthqk\",\t\"ɭk͈\" },\n\t[\"ᆴ-ᄁ\"] \t = { \"ᆯᄁ\",\t\"lkk\",\t\"ltkk\",\t\"lkk\",\t\"lthkk\",\t\"ɭk͈\" },\n\t[\"ᆴ-ᄂ\"] \t = { \"ᆯᄅ\",\t\"ll\",\t\"ltn\",\t\"ll\",\t\"lthn\",\t\"ɭɭ\" },\n\t[\"ᆴ-ᄃ\"] \t =\
      \ { \"ᆯᄄ\",\t\"ld\",\t\"ltd\",\t\"lt\",\t\"lthqt\",\t\"ɭt͈\" },\n\t[\"ᆴ-ᄄ\"] \t = { \"ᆯᄄ\",\t\"ltt\",\t\"lttt\",\t\"ltt\",\t\"lthtt\",\t\"ɭt͈\" },\n\t[\"ᆴ-ᄅ\"] \t = { \"ᆯᄅ\",\t\"ll\",\t\"ltl\",\t\"ll\",\t\"lthl\",\t\"ɭɭ\" },\n\t[\"ᆴ-ᄆ\"] \t = { \"ᆯᄆ\"\
      ,\t\"lm\",\t\"ltm\",\t\"lm\",\t\"lthm\",\t\"ɭm\" },\n\t[\"ᆴ-ᄇ\"] \t = { \"ᆯᄈ\",\t\"lb\",\t\"ltb\",\t\"lp\",\t\"lthqp\",\t\"ɭp͈\" },\n\t[\"ᆴ-ᄈ\"] \t = { \"ᆯᄈ\",\t\"lpp\",\t\"ltpp\",\t\"lpp\",\t\"lthpp\",\t\"ɭp͈\" },\n\t[\"ᆴ-ᄉ\"] \t = { \"ᆯᄊ\",\t\"ls\",\t\
      \"lts\",\t\"ls\",\t\"lthqs\",\t\"ɭs͈\" },\n\t[\"ᆴ-ᄊ\"] \t = { \"ᆯᄊ\",\t\"lss\",\t\"ltss\",\t\"lss\",\t\"lthss\",\t\"ɭs͈\" },\n\t[\"ᆴ-ᄋ\"] \t = { \"ᆯᄐ\",\t\"lt\",\t\"lt-\",\t\"lt\",\t\"lth.\",\t\"ɭtʰ\" },\n\t[\"ᆴ-ᄌ\"] \t = { \"ᆯᄍ\",\t\"lj\",\t\"ltj\",\t\
      \"lch\",\t\"lthqc\",\t\"ɭt͡ɕ͈\" },\n\t[\"ᆴ-ᄍ\"] \t = { \"ᆯᄍ\",\t\"ljj\",\t\"ltjj\",\t\"ltch\",\t\"lthcc\",\t\"ɭt͡ɕ͈\" },\n\t[\"ᆴ-ᄎ\"] \t = { \"ᆯᄎ\",\t\"lch\",\t\"ltch\",\t\"lch'\",\t\"lthch\",\t\"ɭt͡ɕʰ\" },\n\t[\"ᆴ-ᄏ\"] \t = { \"ᆯᄏ\",\t\"lk\",\t\"ltk\"\
      ,\t\"lk'\",\t\"lthkh\",\t\"ɭkʰ\" },\n\t[\"ᆴ-ᄐ\"] \t = { \"ᆯᄐ\",\t\"lt\",\t\"ltt\",\t\"lt'\",\t\"lthth\",\t\"ɭtʰ\" },\n\t[\"ᆴ-ᄑ\"] \t = { \"ᆯᄑ\",\t\"lp\",\t\"ltp\",\t\"lp'\",\t\"lthph\",\t\"ɭpʰ\" },\n\t[\"ᆴ-ᄒ\"] \t = { \"ᆯᄐ\",\t\"lh\",\t\"lt-h\",\t\"lh\"\
      ,\t\"lth.h\",\t\"ɭtʰ\" },\n\t[\"ᆵ-Ø\"] \t = { \"ᆸ\",\t\"p\",\t\"lp\",\t\"p\",\t\"lph\",\t\"p̚\" },\n\t[\"ᆵ-ᄀ\"] \t = { \"ᆸᄁ\",\t\"pg\",\t\"lpg\",\t\"pk\",\t\"lphqk\",\t\"p̚k͈\" },\n\t[\"ᆵ-ᄁ\"] \t = { \"ᆸᄁ\",\t\"pkk\",\t\"lpkk\",\t\"pkk\",\t\"lphkk\",\t\
      \"p̚k͈\" },\n\t[\"ᆵ-ᄂ\"] \t = { \"ᆷᄂ\",\t\"mn\",\t\"lpn\",\t\"mn\",\t\"lphn\",\t\"mn\" },\n\t[\"ᆵ-ᄃ\"] \t = { \"ᆸᄄ\",\t\"pd\",\t\"lpd\",\t\"pt\",\t\"lphqt\",\t\"p̚t͈\" },\n\t[\"ᆵ-ᄄ\"] \t = { \"ᆸᄄ\",\t\"ptt\",\t\"lptt\",\t\"ptt\",\t\"lphtt\",\t\"p̚t͈\"\
      \ },\n\t[\"ᆵ-ᄅ\"] \t = { \"ᆷᄂ\",\t\"mn\",\t\"lpl\",\t\"mn\",\t\"lphl\",\t\"mn\" },\n\t[\"ᆵ-ᄆ\"] \t = { \"ᆷᄆ\",\t\"mm\",\t\"lpm\",\t\"mm\",\t\"lphm\",\t\"mm\" },\n\t[\"ᆵ-ᄇ\"] \t = { \"ᆸᄈ\",\t\"pb\",\t\"lpb\",\t\"pp\",\t\"lphqp\",\t\"p̚p͈\" },\n\t[\"ᆵ-ᄈ\"\
      ] \t = { \"ᆸᄈ\",\t\"ppp\",\t\"lppp\",\t\"pp\",\t\"lphpp\",\t\"p̚p͈\" },\n\t[\"ᆵ-ᄉ\"] \t = { \"ᆸᄊ\",\t\"ps\",\t\"lps\",\t\"ps\",\t\"lphqs\",\t\"ps͈\" },\n\t[\"ᆵ-ᄊ\"] \t = { \"ᆸᄊ\",\t\"pss\",\t\"lpss\",\t\"pss\",\t\"lphss\",\t\"ps͈\" },\n\t[\"ᆵ-ᄋ\"] \t =\
      \ { \"ᆯᄑ\",\t\"lp\",\t\"lp-\",\t\"lp\",\t\"lph.\",\t\"ɭpʰ\" },\n\t[\"ᆵ-ᄌ\"] \t = { \"ᆸᄍ\",\t\"pj\",\t\"lpj\",\t\"pch\",\t\"lphqc\",\t\"p̚t͡ɕ͈\" },\n\t[\"ᆵ-ᄍ\"] \t = { \"ᆸᄍ\",\t\"pjj\",\t\"lpjj\",\t\"ptch\",\t\"lphcc\",\t\"p̚t͡ɕ͈\" },\n\t[\"ᆵ-ᄎ\"] \t =\
      \ { \"ᆸᄎ\",\t\"pch\",\t\"lpch\",\t\"pch'\",\t\"lphch\",\t\"p̚t͡ɕʰ\" },\n\t[\"ᆵ-ᄏ\"] \t = { \"ᆸᄏ\",\t\"pk\",\t\"lpk\",\t\"pk'\",\t\"lphkh\",\t\"p̚kʰ\" },\n\t[\"ᆵ-ᄐ\"] \t = { \"ᆸᄐ\",\t\"pt\",\t\"lpt\",\t\"pt'\",\t\"lphth\",\t\"p̚tʰ\" },\n\t[\"ᆵ-ᄑ\"] \t =\
      \ { \"ᆸᄑ\",\t\"pp\",\t\"lpp\",\t\"pp'\",\t\"lphph\",\t\"p̚pʰ\" },\n\t[\"ᆵ-ᄒ\"] \t = { \"ᆯᄑ\",\t\"ph\",\t\"lp-h\",\t\"ph\",\t\"lph.h\",\t\"ɭpʰ\" },\n\t[\"ᆶ-Ø\"] \t = { \"ᆯ\",\t\"l\",\t\"lh\",\t\"l\",\t\"lh\",\t\"ɭ\" },\n\t[\"ᆶ-ᄀ\"] \t = { \"ᆯᄏ\",\t\"lk\"\
      ,\t\"lhg\",\t\"lk'\",\t\"lhk\",\t\"ɭkʰ\" },\n\t[\"ᆶ-ᄁ\"] \t = { \"ᆯᄏ\",\t\"lk\",\t\"lhkk\",\t\"lk'\",\t\"lhkk\",\t\"ɭkʰ\" },\n\t[\"ᆶ-ᄂ\"] \t = { \"ᆯᄅ\",\t\"ll\",\t\"lhn\",\t\"ll\",\t\"lhn\",\t\"ɭɭ\" },\n\t[\"ᆶ-ᄃ\"] \t = { \"ᆯᄐ\",\t\"lt\",\t\"lhd\",\t\"\
      lt'\",\t\"lht\",\t\"ɭtʰ\" },\n\t[\"ᆶ-ᄄ\"] \t = { \"ᆯᄐ\",\t\"lt\",\t\"lhtt\",\t\"lt'\",\t\"lhtt\",\t\"ɭtʰ\" },\n\t[\"ᆶ-ᄅ\"] \t = { \"ᆯᄅ\",\t\"ll\",\t\"lhl\",\t\"ll\",\t\"lhl\",\t\"ɭɭ\" },\n\t[\"ᆶ-ᄆ\"] \t = { \"ᆯᄆ\",\t\"lm\",\t\"lhm\",\t\"lm\",\t\"lhm\"\
      ,\t\"ɭm\" },\n\t[\"ᆶ-ᄇ\"] \t = { \"ᆯᄑ\",\t\"lp\",\t\"lhb\",\t\"lp'\",\t\"lhp\",\t\"ɭpʰ\" },\n\t[\"ᆶ-ᄈ\"] \t = { \"ᆯᄑ\",\t\"lp\",\t\"lhpp\",\t\"lp'\",\t\"lhpp\",\t\"ɭpʰ\" },\n\t[\"ᆶ-ᄉ\"] \t = { \"ᆯᄊ\",\t\"ls\",\t\"lhs\",\t\"lss\",\t\"lhs\",\t\"ɭs͈\" },\n\
      \t[\"ᆶ-ᄊ\"] \t = { \"ᆯᄊ\",\t\"lss\",\t\"lhss\",\t\"lss\",\t\"lhss\",\t\"ɭs͈\" },\n\t[\"ᆶ-ᄋ\"] \t = { \"ᄅ\",\t\"r\",\t\"lh-\",\t\"r\",\t\"lh.\",\t\"ɾ\" },\n\t[\"ᆶ-ᄌ\"] \t = { \"ᆯᄎ\",\t\"lch\",\t\"lhj\",\t\"lch'\",\t\"lhc\",\t\"ɭt͡ɕʰ\" },\n\t[\"ᆶ-ᄍ\"] \t\
      \ = { \"ᆯᄎ\",\t\"lch\",\t\"lhjj\",\t\"lch'\",\t\"lhcc\",\t\"ɭt͡ɕʰ\" },\n\t[\"ᆶ-ᄎ\"] \t = { \"ᆯᄎ\",\t\"lch\",\t\"lhch\",\t\"lch'\",\t\"lhch\",\t\"ɭt͡ɕʰ\" },\n\t[\"ᆶ-ᄏ\"] \t = { \"ᆯᄏ\",\t\"lk\",\t\"lhk\",\t\"lk'\",\t\"lhkh\",\t\"ɭkʰ\" },\n\t[\"ᆶ-ᄐ\"] \t\
      \ = { \"ᆯᄐ\",\t\"lt\",\t\"lht\",\t\"lt'\",\t\"lhth\",\t\"ɭtʰ\" },\n\t[\"ᆶ-ᄑ\"] \t = { \"ᆯᄑ\",\t\"lp\",\t\"lhp\",\t\"lp'\",\t\"lhph\",\t\"ɭpʰ\" },\n\t[\"ᆶ-ᄒ\"] \t = { \"ᆯᄒ\",\t\"lh\",\t\"lhh\",\t\"lh\",\t\"lhh\",\t\"ɾɦ\" },\n\t[\"ᆷ-Ø\"] \t = { \"ᆷ\",\t\"\
      m\",\t\"m\",\t\"m\",\t\"m\",\t\"m\" },\n\t[\"ᆷ-ᄀ\"] \t = { \"ᆷᄀ\",\t\"mg\",\t\"mg\",\t\"mg\",\t\"mk\",\t\"mɡ\" },\n\t[\"ᆷ-ᄁ\"] \t = { \"ᆷᄁ\",\t\"mkk\",\t\"mkk\",\t\"mkk\",\t\"mkk\",\t\"mk͈\" },\n\t[\"ᆷ-ᄂ\"] \t = { \"ᆷᄂ\",\t\"mn\",\t\"mn\",\t\"mn\",\t\"\
      mn\",\t\"mn\" },\n\t[\"ᆷ-ᄃ\"] \t = { \"ᆷᄃ\",\t\"md\",\t\"md\",\t\"md\",\t\"mt\",\t\"md\" },\n\t[\"ᆷ-ᄄ\"] \t = { \"ᆷᄄ\",\t\"mtt\",\t\"mtt\",\t\"mtt\",\t\"mtt\",\t\"mt͈\" },\n\t[\"ᆷ-ᄅ\"] \t = { \"ᆷᄂ\",\t\"mn\",\t\"ml\",\t\"mn\",\t\"ml\",\t\"mn\" },\n\t[\"\
      ᆷ-ᄆ\"] \t = { \"ᆷᄆ\",\t\"mm\",\t\"mm\",\t\"mm\",\t\"mm\",\t\"mm\" },\n\t[\"ᆷ-ᄇ\"] \t = { \"ᆷᄇ\",\t\"mb\",\t\"mb\",\t\"mb\",\t\"mp\",\t\"mb\" },\n\t[\"ᆷ-ᄈ\"] \t = { \"ᆷᄈ\",\t\"mpp\",\t\"mpp\",\t\"mpp\",\t\"mpp\",\t\"mp͈\" },\n\t[\"ᆷ-ᄉ\"] \t = { \"ᆷᄉ\",\t\
      \"ms\",\t\"ms\",\t\"ms\",\t\"ms\",\t\"msʰ\" },\n\t[\"ᆷ-ᄊ\"] \t = { \"ᆷᄊ\",\t\"mss\",\t\"mss\",\t\"mss\",\t\"mss\",\t\"ms͈\" },\n\t[\"ᆷ-ᄋ\"] \t = { \"ᄆ\",\t\"m\",\t\"m-\",\t\"m\",\t\"m.\",\t\"m\" },\n\t[\"ᆷ-ᄌ\"] \t = { \"ᆷᄌ\",\t\"mj\",\t\"mj\",\t\"mj\"\
      ,\t\"mc\",\t\"md͡ʑ\" },\n\t[\"ᆷ-ᄍ\"] \t = { \"ᆷᄍ\",\t\"mjj\",\t\"mjj\",\t\"mtch\",\t\"mcc\",\t\"mt͡ɕ͈\" },\n\t[\"ᆷ-ᄎ\"] \t = { \"ᆷᄎ\",\t\"mch\",\t\"mch\",\t\"mch'\",\t\"mch\",\t\"mt͡ɕʰ\" },\n\t[\"ᆷ-ᄏ\"] \t = { \"ᆷᄏ\",\t\"mk\",\t\"mk\",\t\"mk'\",\t\"mkh\"\
      ,\t\"mkʰ\" },\n\t[\"ᆷ-ᄐ\"] \t = { \"ᆷᄐ\",\t\"mt\",\t\"mt\",\t\"mt'\",\t\"mth\",\t\"mtʰ\" },\n\t[\"ᆷ-ᄑ\"] \t = { \"ᆷᄑ\",\t\"mp\",\t\"mp\",\t\"mp'\",\t\"mph\",\t\"mpʰ\" },\n\t[\"ᆷ-ᄒ\"] \t = { \"ᆷᄒ\",\t\"mh\",\t\"mh\",\t\"mh\",\t\"mh\",\t\"mɦ\" },\n\t[\"ᆸ\
      -Ø\"] \t = { \"ᆸ\",\t\"p\",\t\"b\",\t\"p\",\t\"p\",\t\"p̚\" },\n\t[\"ᆸ-ᄀ\"] \t = { \"ᆸᄁ\",\t\"pg\",\t\"bg\",\t\"pk\",\t\"pqk\",\t\"p̚k͈\" },\n\t[\"ᆸ-ᄁ\"] \t = { \"ᆸᄁ\",\t\"pkk\",\t\"bkk\",\t\"pkk\",\t\"pkk\",\t\"p̚k͈\" },\n\t[\"ᆸ-ᄂ\"] \t = { \"ᆷᄂ\",\t\"\
      mn\",\t\"bn\",\t\"mn\",\t\"pn\",\t\"mn\" },\n\t[\"ᆸ-ᄃ\"] \t = { \"ᆸᄄ\",\t\"pd\",\t\"bd\",\t\"pt\",\t\"pqt\",\t\"p̚t͈\" },\n\t[\"ᆸ-ᄄ\"] \t = { \"ᆸᄄ\",\t\"ptt\",\t\"btt\",\t\"ptt\",\t\"ptt\",\t\"p̚t͈\" },\n\t[\"ᆸ-ᄅ\"] \t = { \"ᆷᄂ\",\t\"mn\",\t\"bl\",\t\"\
      mn\",\t\"pl\",\t\"mn\" },\n\t[\"ᆸ-ᄆ\"] \t = { \"ᆷᄆ\",\t\"mm\",\t\"bm\",\t\"mm\",\t\"pm\",\t\"mm\" },\n\t[\"ᆸ-ᄇ\"] \t = { \"ᆸᄈ\",\t\"pb\",\t\"bb\",\t\"pp\",\t\"pqp\",\t\"p̚p͈\" },\n\t[\"ᆸ-ᄈ\"] \t = { \"ᆸᄈ\",\t\"ppp\",\t\"bpp\",\t\"pp\",\t\"ppp\",\t\"p̚\
      p͈\" },\n\t[\"ᆸ-ᄉ\"] \t = { \"ᆸᄊ\",\t\"ps\",\t\"bs\",\t\"ps\",\t\"pqs\",\t\"ps͈\" },\n\t[\"ᆸ-ᄊ\"] \t = { \"ᆸᄊ\",\t\"pss\",\t\"bss\",\t\"pss\",\t\"pss\",\t\"ps͈\" },\n\t[\"ᆸ-ᄋ\"] \t = { \"ᄇ\",\t\"b\",\t\"b-\",\t\"b\",\t\"p.\",\t\"b\" },\n\t[\"ᆸ-ᄌ\"] \t\
      \ = { \"ᆸᄍ\",\t\"pj\",\t\"bj\",\t\"pch\",\t\"pqc\",\t\"p̚t͡ɕ͈\" },\n\t[\"ᆸ-ᄍ\"] \t = { \"ᆸᄍ\",\t\"pjj\",\t\"bjj\",\t\"ptch\",\t\"pcc\",\t\"p̚t͡ɕ͈\" },\n\t[\"ᆸ-ᄎ\"] \t = { \"ᆸᄎ\",\t\"pch\",\t\"bch\",\t\"pch'\",\t\"pch\",\t\"p̚t͡ɕʰ\" },\n\t[\"ᆸ-ᄏ\"] \t =\
      \ { \"ᆸᄏ\",\t\"pk\",\t\"bk\",\t\"pk'\",\t\"pkh\",\t\"p̚kʰ\" },\n\t[\"ᆸ-ᄐ\"] \t = { \"ᆸᄐ\",\t\"pt\",\t\"bt\",\t\"pt'\",\t\"pth\",\t\"p̚tʰ\" },\n\t[\"ᆸ-ᄑ\"] \t = { \"ᆸᄑ\",\t\"pp\",\t\"bp\",\t\"pp'\",\t\"pph\",\t\"p̚pʰ\" },\n\t[\"ᆸ-ᄒ\"] \t = { \"ᄑ\",\t\"\
      ph\",\t\"b-h\",\t\"ph\",\t\"p.h\",\t\"pʰ\" },\n\t[\"ᆹ-Ø\"] \t = { \"ᆸ\",\t\"p\",\t\"bs\",\t\"p\",\t\"ps\",\t\"p̚\" },\n\t[\"ᆹ-ᄀ\"] \t = { \"ᆸᄁ\",\t\"pg\",\t\"bsg\",\t\"pk\",\t\"psqk\",\t\"p̚k͈\" },\n\t[\"ᆹ-ᄁ\"] \t = { \"ᆸᄁ\",\t\"pkk\",\t\"bskk\",\t\"pkk\"\
      ,\t\"pskk\",\t\"p̚k͈\" },\n\t[\"ᆹ-ᄂ\"] \t = { \"ᆷᄂ\",\t\"mn\",\t\"bsn\",\t\"mn\",\t\"psn\",\t\"mn\" },\n\t[\"ᆹ-ᄃ\"] \t = { \"ᆸᄄ\",\t\"pd\",\t\"bsd\",\t\"pt\",\t\"psqt\",\t\"p̚t͈\" },\n\t[\"ᆹ-ᄄ\"] \t = { \"ᆸᄄ\",\t\"ptt\",\t\"bstt\",\t\"ptt\",\t\"pstt\"\
      ,\t\"p̚t͈\" },\n\t[\"ᆹ-ᄅ\"] \t = { \"ᆷᄂ\",\t\"mn\",\t\"bsl\",\t\"mn\",\t\"psl\",\t\"mn\" },\n\t[\"ᆹ-ᄆ\"] \t = { \"ᆷᄆ\",\t\"mm\",\t\"bsm\",\t\"mm\",\t\"psm\",\t\"mm\" },\n\t[\"ᆹ-ᄇ\"] \t = { \"ᆸᄈ\",\t\"pb\",\t\"bsb\",\t\"pp\",\t\"psqp\",\t\"p̚p͈\" },\n\t\
      [\"ᆹ-ᄈ\"] \t = { \"ᆸᄈ\",\t\"ppp\",\t\"bspp\",\t\"pp\",\t\"pspp\",\t\"p̚p͈\" },\n\t[\"ᆹ-ᄉ\"] \t = { \"ᆸᄊ\",\t\"ps\",\t\"bss\",\t\"ps\",\t\"psqs\",\t\"ps͈\" },\n\t[\"ᆹ-ᄊ\"] \t = { \"ᆸᄊ\",\t\"pss\",\t\"bsss\",\t\"pss\",\t\"psss\",\t\"ps͈\" },\n\t[\"ᆹ-ᄋ\"\
      ] \t = { \"ᆸᄊ\",\t\"ps\",\t\"bs-\",\t\"ps\",\t\"ps.\",\t\"ps͈\" },\n\t[\"ᆹ-ᄌ\"] \t = { \"ᆸᄍ\",\t\"pj\",\t\"bsj\",\t\"pch\",\t\"psqc\",\t\"p̚t͡ɕ͈\" },\n\t[\"ᆹ-ᄍ\"] \t = { \"ᆸᄍ\",\t\"pjj\",\t\"bsjj\",\t\"ptch\",\t\"pscc\",\t\"p̚t͡ɕ͈\" },\n\t[\"ᆹ-ᄎ\"] \t\
      \ = { \"ᆸᄎ\",\t\"pch\",\t\"bsch\",\t\"pch'\",\t\"psch\",\t\"p̚t͡ɕʰ\" },\n\t[\"ᆹ-ᄏ\"] \t = { \"ᆸᄏ\",\t\"pk\",\t\"bsk\",\t\"pk'\",\t\"pskh\",\t\"p̚kʰ\" },\n\t[\"ᆹ-ᄐ\"] \t = { \"ᆸᄐ\",\t\"pt\",\t\"bst\",\t\"pt'\",\t\"psth\",\t\"p̚tʰ\" },\n\t[\"ᆹ-ᄑ\"] \t =\
      \ { \"ᆸᄑ\",\t\"pp\",\t\"bsp\",\t\"pp'\",\t\"psph\",\t\"p̚pʰ\" },\n\t[\"ᆹ-ᄒ\"] \t = { \"ᄑ\",\t\"ph\",\t\"bsh\",\t\"ph\",\t\"psh\",\t\"pʰ\" },\n\t[\"ᆺ-Ø\"] \t = { \"ᆮ\",\t\"t\",\t\"s\",\t\"t\",\t\"s\",\t\"t̚\" },\n\t[\"ᆺ-ᄀ\"] \t = { \"ᆮᄁ\",\t\"tg\",\t\"\
      sg\",\t\"tk\",\t\"sqk\",\t\"t̚k͈\" },\n\t[\"ᆺ-ᄁ\"] \t = { \"ᆮᄁ\",\t\"tkk\",\t\"skk\",\t\"tkk\",\t\"skk\",\t\"t̚k͈\" },\n\t[\"ᆺ-ᄂ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"sn\",\t\"nn\",\t\"sn\",\t\"nn\" },\n\t[\"ᆺ-ᄃ\"] \t = { \"ᆮᄄ\",\t\"td\",\t\"sd\",\t\"tt\",\t\"\
      sqt\",\t\"t̚t͈\" },\n\t[\"ᆺ-ᄄ\"] \t = { \"ᆮᄄ\",\t\"ttt\",\t\"stt\",\t\"tt\",\t\"stt\",\t\"t̚t͈\" },\n\t[\"ᆺ-ᄅ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"sl\",\t\"nn\",\t\"sl\",\t\"nn\" },\n\t[\"ᆺ-ᄆ\"] \t = { \"ᆫᄆ\",\t\"nm\",\t\"sm\",\t\"nm\",\t\"sm\",\t\"nm\" },\n\t\
      [\"ᆺ-ᄇ\"] \t = { \"ᆮᄈ\",\t\"tb\",\t\"sb\",\t\"tp\",\t\"sqp\",\t\"t̚p͈\" },\n\t[\"ᆺ-ᄈ\"] \t = { \"ᆮᄈ\",\t\"tpp\",\t\"spp\",\t\"tpp\",\t\"spp\",\t\"t̚p͈\" },\n\t[\"ᆺ-ᄉ\"] \t = { \"ᆮᄊ\",\t\"ts\",\t\"ss\",\t\"ss\",\t\"sqs\",\t\"t̚s͈\" },\n\t[\"ᆺ-ᄊ\"] \t =\
      \ { \"ᆮᄊ\",\t\"tss\",\t\"sss\",\t\"ss\",\t\"sss\",\t\"t̚s͈\" },\n\t[\"ᆺ-ᄋ\"] \t = { \"ᄉ\",\t\"s\",\t\"s-\",\t\"s\",\t\"s.\",\t\"sʰ\" },\n\t[\"ᆺ-ᄌ\"] \t = { \"ᆮᄍ\",\t\"tj\",\t\"sj\",\t\"tch\",\t\"sqc\",\t\"t̚t͡ɕ͈\" },\n\t[\"ᆺ-ᄍ\"] \t = { \"ᆮᄍ\",\t\"tjj\"\
      ,\t\"sjj\",\t\"tch\",\t\"scc\",\t\"t̚t͡ɕ͈\" },\n\t[\"ᆺ-ᄎ\"] \t = { \"ᆮᄎ\",\t\"tch\",\t\"sch\",\t\"tch'\",\t\"sch\",\t\"t̚t͡ɕʰ\" },\n\t[\"ᆺ-ᄏ\"] \t = { \"ᆮᄏ\",\t\"tk\",\t\"sk\",\t\"tk'\",\t\"skh\",\t\"t̚kʰ\" },\n\t[\"ᆺ-ᄐ\"] \t = { \"ᆮᄐ\",\t\"tt\",\t\"st\"\
      ,\t\"tt'\",\t\"sth\",\t\"t̚tʰ\" },\n\t[\"ᆺ-ᄑ\"] \t = { \"ᆮᄑ\",\t\"tp\",\t\"sp\",\t\"tp'\",\t\"sph\",\t\"t̚pʰ\" },\n\t[\"ᆺ-ᄒ\"] \t = { \"ᄐ\",\t\"th\",\t\"sh\",\t\"th\",\t\"sh\",\t\"tʰ\" },\n\t[\"ᆻ-Ø\"] \t = { \"ᆮ\",\t\"t\",\t\"ss\",\t\"t\",\t\"ss\",\t\"\
      t̚\" },\n\t[\"ᆻ-ᄀ\"] \t = { \"ᆮᄁ\",\t\"tg\",\t\"ssg\",\t\"tk\",\t\"ssqk\",\t\"t̚k͈\" },\n\t[\"ᆻ-ᄁ\"] \t = { \"ᆮᄁ\",\t\"tkk\",\t\"sskk\",\t\"tkk\",\t\"sskk\",\t\"t̚k͈\" },\n\t[\"ᆻ-ᄂ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"ssn\",\t\"nn\",\t\"ssn\",\t\"nn\" },\n\t\
      [\"ᆻ-ᄃ\"] \t = { \"ᆮᄄ\",\t\"td\",\t\"ssd\",\t\"tt\",\t\"ssqt\",\t\"t̚t͈\" },\n\t[\"ᆻ-ᄄ\"] \t = { \"ᆮᄄ\",\t\"ttt\",\t\"sstt\",\t\"tt\",\t\"sstt\",\t\"t̚t͈\" },\n\t[\"ᆻ-ᄅ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"ssl\",\t\"nn\",\t\"ssl\",\t\"nn\" },\n\t[\"ᆻ-ᄆ\"] \t\
      \ = { \"ᆫᄆ\",\t\"nm\",\t\"ssm\",\t\"nm\",\t\"ssm\",\t\"nm\" },\n\t[\"ᆻ-ᄇ\"] \t = { \"ᆮᄈ\",\t\"tb\",\t\"ssb\",\t\"tp\",\t\"ssqp\",\t\"t̚p͈\" },\n\t[\"ᆻ-ᄈ\"] \t = { \"ᆮᄈ\",\t\"tpp\",\t\"sspp\",\t\"tpp\",\t\"sspp\",\t\"t̚p͈\" },\n\t[\"ᆻ-ᄉ\"] \t = { \"ᆮᄊ\"\
      ,\t\"ts\",\t\"sss\",\t\"ss\",\t\"ssqs\",\t\"t̚s͈\" },\n\t[\"ᆻ-ᄊ\"] \t = { \"ᆮᄊ\",\t\"tss\",\t\"ssss\",\t\"ss\",\t\"ssss\",\t\"t̚s͈\" },\n\t[\"ᆻ-ᄋ\"] \t = { \"ᄊ\",\t\"ss\",\t\"ss-\",\t\"ss\",\t\"ss.\",\t\"s͈\" },\n\t[\"ᆻ-ᄌ\"] \t = { \"ᆮᄍ\",\t\"tj\",\t\"\
      ssj\",\t\"tch\",\t\"ssqc\",\t\"t̚t͡ɕ͈\" },\n\t[\"ᆻ-ᄍ\"] \t = { \"ᆮᄍ\",\t\"tjj\",\t\"ssjj\",\t\"tch\",\t\"sscc\",\t\"t̚t͡ɕ͈\" },\n\t[\"ᆻ-ᄎ\"] \t = { \"ᆮᄎ\",\t\"tch\",\t\"ssch\",\t\"tch'\",\t\"ssch\",\t\"t̚t͡ɕʰ\" },\n\t[\"ᆻ-ᄏ\"] \t = { \"ᆮᄏ\",\t\"tk\",\t\
      \"ssk\",\t\"tk'\",\t\"sskh\",\t\"t̚kʰ\" },\n\t[\"ᆻ-ᄐ\"] \t = { \"ᆮᄐ\",\t\"tt\",\t\"sst\",\t\"tt'\",\t\"ssth\",\t\"t̚tʰ\" },\n\t[\"ᆻ-ᄑ\"] \t = { \"ᆮᄑ\",\t\"tp\",\t\"ssp\",\t\"tp'\",\t\"ssph\",\t\"t̚pʰ\" },\n\t[\"ᆻ-ᄒ\"] \t = { \"ᄐ\",\t\"th\",\t\"ss-h\",\t\
      \"th\",\t\"ss.h\",\t\"tʰ\" },\n\t[\"ᆼ-Ø\"] \t = { \"ᆼ\",\t\"ng\",\t\"ng\",\t\"ng\",\t\"ng\",\t\"ŋ\" },\n\t[\"ᆼ-ᄀ\"] \t = { \"ᆼᄀ\",\t\"ngg\",\t\"ngg\",\t\"ngg\",\t\"ngk\",\t\"ŋɡ\" },\n\t[\"ᆼ-ᄁ\"] \t = { \"ᆼᄁ\",\t\"ngkk\",\t\"ngkk\",\t\"ngkk\",\t\"ngkk\"\
      ,\t\"ŋk͈\" },\n\t[\"ᆼ-ᄂ\"] \t = { \"ᆼᄂ\",\t\"ngn\",\t\"ngn\",\t\"ngn\",\t\"ngn\",\t\"ŋn\" },\n\t[\"ᆼ-ᄃ\"] \t = { \"ᆼᄃ\",\t\"ngd\",\t\"ngd\",\t\"ngd\",\t\"ngt\",\t\"ŋd\" },\n\t[\"ᆼ-ᄄ\"] \t = { \"ᆼᄄ\",\t\"ngtt\",\t\"ngtt\",\t\"ngtt\",\t\"ngtt\",\t\"ŋt͈\"\
      \ },\n\t[\"ᆼ-ᄅ\"] \t = { \"ᆼᄂ\",\t\"ngn\",\t\"ngl\",\t\"ngn\",\t\"ngl\",\t\"ŋn\" },\n\t[\"ᆼ-ᄆ\"] \t = { \"ᆼᄆ\",\t\"ngm\",\t\"ngm\",\t\"ngm\",\t\"ngm\",\t\"ŋm\" },\n\t[\"ᆼ-ᄇ\"] \t = { \"ᆼᄇ\",\t\"ngb\",\t\"ngb\",\t\"ngb\",\t\"ngp\",\t\"ŋb\" },\n\t[\"ᆼ-ᄈ\"\
      ] \t = { \"ᆼᄈ\",\t\"ngpp\",\t\"ngpp\",\t\"ngpp\",\t\"ngpp\",\t\"ŋp͈\" },\n\t[\"ᆼ-ᄉ\"] \t = { \"ᆼᄉ\",\t\"ngs\",\t\"ngs\",\t\"ngs\",\t\"ngs\",\t\"ŋsʰ\" },\n\t[\"ᆼ-ᄊ\"] \t = { \"ᆼᄊ\",\t\"ngss\",\t\"ngss\",\t\"ngss\",\t\"ngss\",\t\"ŋs͈\" },\n\t[\"ᆼ-ᄋ\"] \t\
      \ = { \"ᆼᄋ\",\t\"ng-\",\t\"ng-\",\t\"ng\",\t\"ng.\",\t\"ŋ\" },\n\t[\"ᆼ-ᄌ\"] \t = { \"ᆼᄌ\",\t\"ngj\",\t\"ngj\",\t\"ngj\",\t\"ngc\",\t\"ŋd͡ʑ\" },\n\t[\"ᆼ-ᄍ\"] \t = { \"ᆼᄍ\",\t\"ngjj\",\t\"ngjj\",\t\"ngtch\",\t\"ngcc\",\t\"ŋt͡ɕ͈\" },\n\t[\"ᆼ-ᄎ\"] \t = { \"\
      ᆼᄎ\",\t\"ngch\",\t\"ngch\",\t\"ngch'\",\t\"ngch\",\t\"ŋt͡ɕʰ\" },\n\t[\"ᆼ-ᄏ\"] \t = { \"ᆼᄏ\",\t\"ngk\",\t\"ngk\",\t\"ngk'\",\t\"ngkh\",\t\"ŋkʰ\" },\n\t[\"ᆼ-ᄐ\"] \t = { \"ᆼᄐ\",\t\"ngt\",\t\"ngt\",\t\"ngt'\",\t\"ngth\",\t\"ŋtʰ\" },\n\t[\"ᆼ-ᄑ\"] \t = { \"ᆼ\
      ᄑ\",\t\"ngp\",\t\"ngp\",\t\"ngp'\",\t\"ngph\",\t\"ŋpʰ\" },\n\t[\"ᆼ-ᄒ\"] \t = { \"ᆼᄒ\",\t\"ngh\",\t\"ngh\",\t\"ngh\",\t\"ngh\",\t\"ŋɦ\" },\n\t[\"ᆽ-Ø\"] \t = { \"ᆮ\",\t\"t\",\t\"j\",\t\"t\",\t\"c\",\t\"t̚\" },\n\t[\"ᆽ-ᄀ\"] \t = { \"ᆮᄁ\",\t\"tg\",\t\"jg\"\
      ,\t\"tk\",\t\"cqk\",\t\"t̚k͈\" },\n\t[\"ᆽ-ᄁ\"] \t = { \"ᆮᄁ\",\t\"tkk\",\t\"jkk\",\t\"tkk\",\t\"ckk\",\t\"t̚k͈\" },\n\t[\"ᆽ-ᄂ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"jn\",\t\"nn\",\t\"cn\",\t\"nn\" },\n\t[\"ᆽ-ᄃ\"] \t = { \"ᆮᄄ\",\t\"td\",\t\"jd\",\t\"tt\",\t\"cqt\"\
      ,\t\"t̚t͈\" },\n\t[\"ᆽ-ᄄ\"] \t = { \"ᆮᄄ\",\t\"ttt\",\t\"jtt\",\t\"tt\",\t\"ctt\",\t\"t̚t͈\" },\n\t[\"ᆽ-ᄅ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"jl\",\t\"nn\",\t\"cl\",\t\"nn\" },\n\t[\"ᆽ-ᄆ\"] \t = { \"ᆫᄆ\",\t\"nm\",\t\"jm\",\t\"nm\",\t\"cm\",\t\"nm\" },\n\t[\"ᆽ\
      -ᄇ\"] \t = { \"ᆮᄈ\",\t\"tb\",\t\"jb\",\t\"tp\",\t\"cqp\",\t\"t̚p͈\" },\n\t[\"ᆽ-ᄈ\"] \t = { \"ᆮᄈ\",\t\"tpp\",\t\"jpp\",\t\"tpp\",\t\"cpp\",\t\"t̚p͈\" },\n\t[\"ᆽ-ᄉ\"] \t = { \"ᆮᄊ\",\t\"ts\",\t\"js\",\t\"ss\",\t\"cqs\",\t\"t̚s͈\" },\n\t[\"ᆽ-ᄊ\"] \t = { \"\
      ᆮᄊ\",\t\"tss\",\t\"jss\",\t\"ss\",\t\"css\",\t\"t̚s͈\" },\n\t[\"ᆽ-ᄋ\"] \t = { \"ᄌ\",\t\"j\",\t\"j-\",\t\"j\",\t\"c.\",\t\"d͡ʑ\" },\n\t[\"ᆽ-ᄌ\"] \t = { \"ᆮᄍ\",\t\"tj\",\t\"jj\",\t\"tch\",\t\"cqc\",\t\"t̚t͡ɕ͈\" },\n\t[\"ᆽ-ᄍ\"] \t = { \"ᆮᄍ\",\t\"tjj\",\t\"\
      jjj\",\t\"tch\",\t\"ccc\",\t\"t̚t͡ɕ͈\" },\n\t[\"ᆽ-ᄎ\"] \t = { \"ᆮᄎ\",\t\"tch\",\t\"jch\",\t\"tch'\",\t\"cch\",\t\"t̚t͡ɕʰ\" },\n\t[\"ᆽ-ᄏ\"] \t = { \"ᆮᄏ\",\t\"tk\",\t\"jk\",\t\"tk'\",\t\"ckh\",\t\"t̚kʰ\" },\n\t[\"ᆽ-ᄐ\"] \t = { \"ᆮᄐ\",\t\"tt\",\t\"jt\",\t\
      \"tt'\",\t\"cth\",\t\"t̚tʰ\" },\n\t[\"ᆽ-ᄑ\"] \t = { \"ᆮᄑ\",\t\"tp\",\t\"jp\",\t\"tp'\",\t\"cph\",\t\"t̚pʰ\" },\n\t[\"ᆽ-ᄒ\"] \t = { \"ᄎ\",\t\"ch\",\t\"j-h\",\t\"ch'\",\t\"c.h\",\t\"t͡ɕʰ\" },\n\t[\"ᆾ-Ø\"] \t = { \"ᆮ\",\t\"t\",\t\"ch\",\t\"t\",\t\"ch\",\t\
      \"t̚\" },\n\t[\"ᆾ-ᄀ\"] \t = { \"ᆮᄁ\",\t\"tg\",\t\"chg\",\t\"tk\",\t\"chqk\",\t\"t̚k͈\" },\n\t[\"ᆾ-ᄁ\"] \t = { \"ᆮᄁ\",\t\"tkk\",\t\"chkk\",\t\"tkk\",\t\"chkk\",\t\"t̚k͈\" },\n\t[\"ᆾ-ᄂ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"chn\",\t\"nn\",\t\"chn\",\t\"nn\" },\n\t\
      [\"ᆾ-ᄃ\"] \t = { \"ᆮᄄ\",\t\"td\",\t\"chd\",\t\"tt\",\t\"chqt\",\t\"t̚t͈\" },\n\t[\"ᆾ-ᄄ\"] \t = { \"ᆮᄄ\",\t\"ttt\",\t\"chtt\",\t\"tt\",\t\"chtt\",\t\"t̚t͈\" },\n\t[\"ᆾ-ᄅ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"chl\",\t\"nn\",\t\"chl\",\t\"nn\" },\n\t[\"ᆾ-ᄆ\"] \t\
      \ = { \"ᆫᄆ\",\t\"nm\",\t\"chm\",\t\"nm\",\t\"chm\",\t\"nm\" },\n\t[\"ᆾ-ᄇ\"] \t = { \"ᆮᄈ\",\t\"tb\",\t\"chb\",\t\"tp\",\t\"chqp\",\t\"t̚p͈\" },\n\t[\"ᆾ-ᄈ\"] \t = { \"ᆮᄈ\",\t\"tpp\",\t\"chpp\",\t\"tpp\",\t\"chpp\",\t\"t̚p͈\" },\n\t[\"ᆾ-ᄉ\"] \t = { \"ᆮᄊ\"\
      ,\t\"ts\",\t\"chs\",\t\"ss\",\t\"chqs\",\t\"t̚s͈\" },\n\t[\"ᆾ-ᄊ\"] \t = { \"ᆮᄊ\",\t\"tss\",\t\"chss\",\t\"ss\",\t\"chss\",\t\"t̚s͈\" },\n\t[\"ᆾ-ᄋ\"] \t = { \"ᄎ\",\t\"ch\",\t\"ch-\",\t\"ch\",\t\"ch.\",\t\"t͡ɕʰ\" },\n\t[\"ᆾ-ᄌ\"] \t = { \"ᆮᄍ\",\t\"tj\",\t\
      \"chj\",\t\"tch\",\t\"chqc\",\t\"t̚t͡ɕ͈\" },\n\t[\"ᆾ-ᄍ\"] \t = { \"ᆮᄍ\",\t\"tjj\",\t\"chjj\",\t\"tch\",\t\"chcc\",\t\"t̚t͡ɕ͈\" },\n\t[\"ᆾ-ᄎ\"] \t = { \"ᆮᄎ\",\t\"tch\",\t\"chch\",\t\"tch'\",\t\"chch\",\t\"t̚t͡ɕʰ\" },\n\t[\"ᆾ-ᄏ\"] \t = { \"ᆮᄏ\",\t\"tk\"\
      ,\t\"chk\",\t\"tk'\",\t\"chkh\",\t\"t̚kʰ\" },\n\t[\"ᆾ-ᄐ\"] \t = { \"ᆮᄐ\",\t\"tt\",\t\"cht\",\t\"tt'\",\t\"chth\",\t\"t̚tʰ\" },\n\t[\"ᆾ-ᄑ\"] \t = { \"ᆮᄑ\",\t\"tp\",\t\"chp\",\t\"tp'\",\t\"chph\",\t\"t̚pʰ\" },\n\t[\"ᆾ-ᄒ\"] \t = { \"ᄎ\",\t\"th\",\t\"ch-h\"\
      ,\t\"th\",\t\"ch.h\",\t\"t͡ɕʰ\" },\n\t[\"ᆿ-Ø\"] \t = { \"ᆨ\",\t\"k\",\t\"k\",\t\"k\",\t\"kh\",\t\"k̚\" },\n\t[\"ᆿ-ᄀ\"] \t = { \"ᆨᄁ\",\t\"kg\",\t\"kg\",\t\"kk\",\t\"khqk\",\t\"k̚k͈\" },\n\t[\"ᆿ-ᄁ\"] \t = { \"ᆨᄁ\",\t\"kkk\",\t\"kkk\",\t\"kk\",\t\"khkk\"\
      ,\t\"k̚k͈\" },\n\t[\"ᆿ-ᄂ\"] \t = { \"ᆼᄂ\",\t\"ngn\",\t\"kn\",\t\"ngn\",\t\"khn\",\t\"ŋn\" },\n\t[\"ᆿ-ᄃ\"] \t = { \"ᆨᄄ\",\t\"kd\",\t\"kd\",\t\"kt\",\t\"khqt\",\t\"k̚t͈\" },\n\t[\"ᆿ-ᄄ\"] \t = { \"ᆨᄄ\",\t\"ktt\",\t\"ktt\",\t\"ktt\",\t\"khtt\",\t\"k̚t͈\" },\n\
      \t[\"ᆿ-ᄅ\"] \t = { \"ᆼᄂ\",\t\"ngn\",\t\"kl\",\t\"ngn\",\t\"khl\",\t\"ŋn\" },\n\t[\"ᆿ-ᄆ\"] \t = { \"ᆼᄆ\",\t\"ngm\",\t\"km\",\t\"ngm\",\t\"khm\",\t\"ŋm\" },\n\t[\"ᆿ-ᄇ\"] \t = { \"ᆨᄈ\",\t\"kb\",\t\"kb\",\t\"kp\",\t\"khqp\",\t\"k̚p͈\" },\n\t[\"ᆿ-ᄈ\"] \t =\
      \ { \"ᆨᄈ\",\t\"kpp\",\t\"kpp\",\t\"kpp\",\t\"khpp\",\t\"k̚p͈\" },\n\t[\"ᆿ-ᄉ\"] \t = { \"ᆨᄊ\",\t\"ks\",\t\"ks\",\t\"ks\",\t\"khqs\",\t\"ks͈\" },\n\t[\"ᆿ-ᄊ\"] \t = { \"ᆨᄊ\",\t\"kss\",\t\"kss\",\t\"kss\",\t\"khss\",\t\"ks͈\" },\n\t[\"ᆿ-ᄋ\"] \t = { \"ᄏ\",\t\
      \"k\",\t\"k-\",\t\"k'\",\t\"kh.\",\t\"kʰ\" },\n\t[\"ᆿ-ᄌ\"] \t = { \"ᆨᄍ\",\t\"kj\",\t\"kj\",\t\"kch\",\t\"khqc\",\t\"k̚t͡ɕ͈\" },\n\t[\"ᆿ-ᄍ\"] \t = { \"ᆨᄍ\",\t\"kjj\",\t\"kjj\",\t\"ktch\",\t\"khcc\",\t\"k̚t͡ɕ͈\" },\n\t[\"ᆿ-ᄎ\"] \t = { \"ᆨᄎ\",\t\"kch\",\t\
      \"kch\",\t\"kch'\",\t\"khch\",\t\"k̚t͡ɕʰ\" },\n\t[\"ᆿ-ᄏ\"] \t = { \"ᆨᄏ\",\t\"kk\",\t\"kk\",\t\"kk'\",\t\"khkh\",\t\"k̚kʰ\" },\n\t[\"ᆿ-ᄐ\"] \t = { \"ᆨᄐ\",\t\"kt\",\t\"kt\",\t\"kt'\",\t\"khth\",\t\"k̚tʰ\" },\n\t[\"ᆿ-ᄑ\"] \t = { \"ᆨᄑ\",\t\"kp\",\t\"kp\",\t\
      \"kp'\",\t\"khph\",\t\"k̚pʰ\" },\n\t[\"ᆿ-ᄒ\"] \t = { \"ᄏ\",\t\"kh\",\t\"k-h\",\t\"kh\",\t\"kh.h\",\t\"kʰ\" },\n\t[\"ᇀ-Ø\"] \t = { \"ᆮ\",\t\"t\",\t\"t\",\t\"t\",\t\"th\",\t\"t̚\" },\n\t[\"ᇀ-ᄀ\"] \t = { \"ᆮᄁ\",\t\"tg\",\t\"tg\",\t\"tk\",\t\"thqk\",\t\"t̚\
      k͈\" },\n\t[\"ᇀ-ᄁ\"] \t = { \"ᆮᄁ\",\t\"tkk\",\t\"tkk\",\t\"tkk\",\t\"thkk\",\t\"t̚k͈\" },\n\t[\"ᇀ-ᄂ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"tn\",\t\"nn\",\t\"thn\",\t\"nn\" },\n\t[\"ᇀ-ᄃ\"] \t = { \"ᆮᄄ\",\t\"td\",\t\"td\",\t\"tt\",\t\"thqt\",\t\"t̚t͈\" },\n\t[\"ᇀ\
      -ᄄ\"] \t = { \"ᆮᄄ\",\t\"ttt\",\t\"ttt\",\t\"tt\",\t\"thtt\",\t\"t̚t͈\" },\n\t[\"ᇀ-ᄅ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"tl\",\t\"nn\",\t\"thl\",\t\"nn\" },\n\t[\"ᇀ-ᄆ\"] \t = { \"ᆫᄆ\",\t\"nm\",\t\"tm\",\t\"nm\",\t\"thm\",\t\"nm\" },\n\t[\"ᇀ-ᄇ\"] \t = { \"ᆮᄈ\"\
      ,\t\"tb\",\t\"tb\",\t\"tp\",\t\"thqp\",\t\"t̚p͈\" },\n\t[\"ᇀ-ᄈ\"] \t = { \"ᆮᄈ\",\t\"tpp\",\t\"tpp\",\t\"tpp\",\t\"thpp\",\t\"t̚p͈\" },\n\t[\"ᇀ-ᄉ\"] \t = { \"ᆮᄊ\",\t\"ts\",\t\"ts\",\t\"ss\",\t\"thqs\",\t\"t̚s͈\" },\n\t[\"ᇀ-ᄊ\"] \t = { \"ᆮᄊ\",\t\"tss\",\t\
      \"tss\",\t\"ss\",\t\"thss\",\t\"t̚s͈\" },\n\t[\"ᇀ-ᄋ\"] \t = { \"ᄐ\",\t\"t\",\t\"t-\",\t\"t'\",\t\"th.\",\t\"tʰ\" },\n\t[\"ᇀ-ᄌ\"] \t = { \"ᆮᄍ\",\t\"tj\",\t\"tj\",\t\"tch\",\t\"thqc\",\t\"t̚t͡ɕ͈\" },\n\t[\"ᇀ-ᄍ\"] \t = { \"ᆮᄍ\",\t\"tjj\",\t\"tjj\",\t\"tch\"\
      ,\t\"thcc\",\t\"t̚t͡ɕ͈\" },\n\t[\"ᇀ-ᄎ\"] \t = { \"ᆮᄎ\",\t\"tch\",\t\"tch\",\t\"tch'\",\t\"thch\",\t\"t̚t͡ɕʰ\" },\n\t[\"ᇀ-ᄏ\"] \t = { \"ᆮᄏ\",\t\"tk\",\t\"tk\",\t\"tk'\",\t\"thkh\",\t\"t̚kʰ\" },\n\t[\"ᇀ-ᄐ\"] \t = { \"ᆮᄐ\",\t\"tt\",\t\"tt\",\t\"tt'\",\t\"\
      thth\",\t\"t̚tʰ\" },\n\t[\"ᇀ-ᄑ\"] \t = { \"ᆮᄑ\",\t\"tp\",\t\"tp\",\t\"tp'\",\t\"thph\",\t\"t̚pʰ\" },\n\t[\"ᇀ-ᄒ\"] \t = { \"ᄐ\",\t\"th\",\t\"t-h\",\t\"th\",\t\"th.h\",\t\"tʰ\" },\n\t[\"ᇁ-Ø\"] \t = { \"ᆸ\",\t\"p\",\t\"p\",\t\"p\",\t\"ph\",\t\"p̚\" },\n\t\
      [\"ᇁ-ᄀ\"] \t = { \"ᆸᄁ\",\t\"pg\",\t\"pg\",\t\"pk\",\t\"phqk\",\t\"p̚k͈\" },\n\t[\"ᇁ-ᄁ\"] \t = { \"ᆸᄁ\",\t\"pkk\",\t\"pkk\",\t\"pkk\",\t\"phkk\",\t\"p̚k͈\" },\n\t[\"ᇁ-ᄂ\"] \t = { \"ᆷᄂ\",\t\"mn\",\t\"pn\",\t\"mn\",\t\"phn\",\t\"mn\" },\n\t[\"ᇁ-ᄃ\"] \t =\
      \ { \"ᆸᄄ\",\t\"pd\",\t\"pd\",\t\"pt\",\t\"phqt\",\t\"p̚t͈\" },\n\t[\"ᇁ-ᄄ\"] \t = { \"ᆸᄄ\",\t\"ptt\",\t\"ptt\",\t\"ptt\",\t\"phtt\",\t\"p̚t͈\" },\n\t[\"ᇁ-ᄅ\"] \t = { \"ᆷᄂ\",\t\"mn\",\t\"pl\",\t\"mn\",\t\"phl\",\t\"mn\" },\n\t[\"ᇁ-ᄆ\"] \t = { \"ᆷᄆ\",\t\"\
      mm\",\t\"pm\",\t\"mm\",\t\"phm\",\t\"mm\" },\n\t[\"ᇁ-ᄇ\"] \t = { \"ᆸᄈ\",\t\"pb\",\t\"pb\",\t\"pp\",\t\"phqp\",\t\"p̚p͈\" },\n\t[\"ᇁ-ᄈ\"] \t = { \"ᆸᄈ\",\t\"ppp\",\t\"ppp\",\t\"pp\",\t\"phpp\",\t\"p̚p͈\" },\n\t[\"ᇁ-ᄉ\"] \t = { \"ᆸᄊ\",\t\"ps\",\t\"ps\",\t\
      \"ps\",\t\"phqs\",\t\"ps͈\" },\n\t[\"ᇁ-ᄊ\"] \t = { \"ᆸᄊ\",\t\"pss\",\t\"pss\",\t\"pss\",\t\"phss\",\t\"ps͈\" },\n\t[\"ᇁ-ᄋ\"] \t = { \"ᄑ\",\t\"p\",\t\"p-\",\t\"p'\",\t\"ph.\",\t\"pʰ\" },\n\t[\"ᇁ-ᄌ\"] \t = { \"ᆸᄍ\",\t\"pj\",\t\"pj\",\t\"pch\",\t\"phqc\"\
      ,\t\"p̚t͡ɕ͈\" },\n\t[\"ᇁ-ᄍ\"] \t = { \"ᆸᄍ\",\t\"pjj\",\t\"pjj\",\t\"ptch\",\t\"phcc\",\t\"p̚t͡ɕ͈\" },\n\t[\"ᇁ-ᄎ\"] \t = { \"ᆸᄎ\",\t\"pch\",\t\"pch\",\t\"pch'\",\t\"phch\",\t\"p̚t͡ɕʰ\" },\n\t[\"ᇁ-ᄏ\"] \t = { \"ᆸᄏ\",\t\"pk\",\t\"pk\",\t\"pk'\",\t\"phkh\"\
      ,\t\"p̚kʰ\" },\n\t[\"ᇁ-ᄐ\"] \t = { \"ᆸᄐ\",\t\"pt\",\t\"pt\",\t\"pt'\",\t\"phth\",\t\"p̚tʰ\" },\n\t[\"ᇁ-ᄑ\"] \t = { \"ᆸᄑ\",\t\"pp\",\t\"pp\",\t\"pp'\",\t\"phph\",\t\"p̚pʰ\" },\n\t[\"ᇁ-ᄒ\"] \t = { \"ᄑ\",\t\"ph\",\t\"p-h\",\t\"ph\",\t\"ph.h\",\t\"pʰ\" },\n\
      \t[\"ᇂ-Ø\"] \t = { \"ᆮ\",\t\"\",\t\"h\",\t\"\",\t\"h\",\t\"t̚\" },\n\t[\"ᇂ-ᄀ\"] \t = { \"ᄏ\",\t\"k\",\t\"hg\",\t\"k'\",\t\"hk\",\t\"kʰ\" },\n\t[\"ᇂ-ᄁ\"] \t = { \"ᄏ\",\t\"k\",\t\"hkk\",\t\"k'\",\t\"hkk\",\t\"kʰ\" },\n\t[\"ᇂ-ᄂ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\
      \"hn\",\t\"nn\",\t\"hn\",\t\"nn\" },\n\t[\"ᇂ-ᄃ\"] \t = { \"ᄐ\",\t\"t\",\t\"hd\",\t\"t'\",\t\"ht\",\t\"tʰ\" },\n\t[\"ᇂ-ᄄ\"] \t = { \"ᄐ\",\t\"t\",\t\"htt\",\t\"t'\",\t\"htt\",\t\"tʰ\" },\n\t[\"ᇂ-ᄅ\"] \t = { \"ᆫᄂ\",\t\"nn\",\t\"hl\",\t\"nn\",\t\"hl\",\t\"\
      nn\" },\n\t[\"ᇂ-ᄆ\"] \t = { \"ᆷᄆ\",\t\"nm\",\t\"hm\",\t\"nm\",\t\"hm\",\t\"mm\" },\n\t[\"ᇂ-ᄇ\"] \t = { \"ᄑ\",\t\"p\",\t\"hb\",\t\"p'\",\t\"hp\",\t\"pʰ\" },\n\t[\"ᇂ-ᄈ\"] \t = { \"ᄑ\",\t\"p\",\t\"hpp\",\t\"p'\",\t\"hpp\",\t\"pʰ\" },\n\t[\"ᇂ-ᄉ\"] \t = { \"\
      ᄊ\",\t\"s\",\t\"hs\",\t\"ss\",\t\"hs\",\t\"s͈\" },\n\t[\"ᇂ-ᄊ\"] \t = { \"ᆮᄊ\",\t\"ss\",\t\"hss\",\t\"ss\",\t\"hss\",\t\"t̚s͈\" },\n\t[\"ᇂ-ᄋ\"] \t = { \"ᄋ\",\t\"\",\t\"h-\",\t\"\",\t\"h.\",\t\"\" },\n\t[\"ᇂ-ᄌ\"] \t = { \"ᄎ\",\t\"ch\",\t\"hj\",\t\"ch'\"\
      ,\t\"hc\",\t\"t͡ɕʰ\" },\n\t[\"ᇂ-ᄍ\"] \t = { \"ᄎ\",\t\"ch\",\t\"hjj\",\t\"ch'\",\t\"hcc\",\t\"t͡ɕʰ\" },\n\t[\"ᇂ-ᄎ\"] \t = { \"ᆮᄎ\",\t\"tch\",\t\"hch\",\t\"tch'\",\t\"hch\",\t\"t̚t͡ɕʰ\" },\n\t[\"ᇂ-ᄏ\"] \t = { \"ᆮᄏ\",\t\"k\",\t\"hk\",\t\"k'\",\t\"hkh\",\t\
      \"t̚kʰ\" },\n\t[\"ᇂ-ᄐ\"] \t = { \"ᆮᄐ\",\t\"t\",\t\"ht\",\t\"t'\",\t\"hth\",\t\"t̚tʰ\" },\n\t[\"ᇂ-ᄑ\"] \t = { \"ᆮᄑ\",\t\"p\",\t\"hp\",\t\"p'\",\t\"hph\",\t\"t̚pʰ\" },\n\t[\"ᇂ-ᄒ\"] \t = { \"ᄐ\",\t\"h\",\t\"h-h\",\t\"h\",\t\"h.h\",\t\"tʰ\" },\n}\n\nreturn\
      \ export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:45.870Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Amk-translit&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=47954 t=1555362465774497
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:45 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1277.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 418529002, 637259834, 689700938
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"3931165\" pageid=\"3931165\" ns=\"828\" title=\"Module:mk-translit\"><revisions><rev user=\"Rua\" timestamp=\"2014-07-04T17:58:01Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"\" xml:space=\"preserve\">local export = {}\n \nlocal tt = {\n\t[\"А\"]='A', [\"а\"]='a',\n\t[\"Б\"]='B', [\"б\"]='b',\n\t[\"В\"]='V', [\"в\"]='v',\n\t[\"Г\"]='G', [\"г\"]='g',\n\t[\"Ѓ\"]='Ǵ', [\"ѓ\"]='ǵ\
      ', \n\t[\"Д\"]='D', [\"д\"]='d',\n\t[\"Е\"]='E', [\"е\"]='e', [\"Ѐ\"]='È', [\"ѐ\"]='è',\n\t[\"Ж\"]='Ž', [\"ж\"]='ž',\n\t[\"З\"]='Z', [\"з\"]='z',\n\t[\"Ѕ\"]='Dz', [\"ѕ\"]='dz', \n\t[\"И\"]='I', [\"и\"]='i', [\"Ѝ\"]='Ì', [\"ѝ\"]='ì',\n\t[\"Ј\"]='J', [\"\
      ј\"]='j',\n\t[\"К\"]='K', [\"к\"]='k',\n\t[\"Л\"]='L', [\"л\"]='l',\n\t[\"Љ\"]='Lj', [\"љ\"]='lj', \n\t[\"М\"]='M', [\"м\"]='m',\n\t[\"Н\"]='N', [\"н\"]='n',\n\t[\"Њ\"]='Nj', [\"њ\"]='nj',\n\t[\"О\"]='O', [\"о\"]='o',\n\t[\"П\"]='P', [\"п\"]='p', \n\t\
      [\"Р\"]='R', [\"р\"]='r',\n\t[\"С\"]='S', [\"с\"]='s',\n\t[\"Т\"]='T', [\"т\"]='t',\n\t[\"Ќ\"]='Ḱ', [\"ќ\"]='ḱ',\n\t[\"У\"]='U', [\"у\"]='u', \n\t[\"Ф\"]='F', [\"ф\"]='f',\n\t[\"Х\"]='H', [\"х\"]='h',\n\t[\"Ц\"]='C', [\"ц\"]='c',\n\t[\"Ч\"]='Č', [\"ч\"\
      ]='č',\n\t[\"Џ\"]='Dž', [\"џ\"]='dž', \n\t[\"Ш\"]='Š', [\"ш\"]='š',\n};\n\nfunction export.tr(text, lang, sc)\n\treturn (mw.ustring.gsub(text, '.', tt))\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:48.883Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AR%3AEtymonline&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=41847 t=1555362468796145
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '973'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:48 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1231.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 576737172, 740852555, 699735734
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="1408644" pageid="1408644" ns="10" title="Template:R:Etymonline"><revisions><rev user="MaEr" timestamp="2009-09-04T17:47:02Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Redirected page to [[Template:R:Online Etymology Dictionary]]" xml:space="preserve">#redirect [[Template:R:Online Etymology Dictionary]]</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:49.056Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AR%3AOnline+Etymology+Dictionary&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46665 t=1555362468963370
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:49 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1077 pass, cp3042 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 405891378, 833198398, 688665373
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="497144" pageid="497144" ns="10" title="Template:R:Online Etymology Dictionary"><revisions><rev user="JohnC5" timestamp="2018-05-08T17:46:36Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Changed protection level for &quot;[[Template:R:Online Etymology Dictionary]]&quot;: oops ([Edit=Allow only administrators] (indefinite) [Move=Allow only administrators] (indefinite))" xml:space="preserve">{{R:Reference-meta
      |entry      = {{{entry|{{{1|{{PAGENAME}}}}}}}}
      |url        = {{#if:{{{url|}}}{{{2|}}}
          | {{{url|{{{2|}}}}}}
          | https://www.etymonline.com/word/{{urlencode:{{{entry|{{{1|{{PAGENAME}}}}}}}}|PATH}}
        }}
      |author     = Douglas Harper
      |reference  = Online Etymology Dictionary
      |date       = 2001–{{CURRENTYEAR}}
      |accessdate = {{{accessdate|{{{3|}}}}}}
      |passage    = {{{passage|{{{4|}}}}}}
      |nodot      = {{{nodot|}}}
      }}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:49.228Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3AR%3AReference-meta&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=46284 t=1555362469135053
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:49 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1282.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 488239581, 642723355, 704250000
    body: |-
      <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="6050378" pageid="6050378" ns="10" title="Template:R:Reference-meta"><revisions><rev user="Sgconlaw" timestamp="2019-04-10T17:48:18Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="Updated template" xml:space="preserve">“{{#ifeq:{{{url}}}|none
        | {{{entry}}}
        | [{{{url}}} {{{entry}}}]
      }}” {{#if:{{{in|}}}|{{{in}}}|in}}{{#if:{{{source|}}}
        | &amp;#32;{{{source}}}; reproduced {{#if:{{{on|}}}|{{{on}}}|on}}
      }}{{#if:{{{author|}}}
        | &amp;#32;{{{author}}}{{#if:{{{editor|}}}{{{editors|}}}|&lt;nowiki&gt;;&lt;/nowiki&gt;|,}}&amp;#32;
      }}{{#if:{{{editor|}}}
        | &amp;#32;{{{editor}}}, editor,
        | {{#if:{{{editors|}}}
            | &amp;#32;{{{editors}}}, editors,
          }}
      }} &lt;cite&gt;{{#invoke:italics|unitalicize_brackets|{{{reference}}}}}&lt;/cite&gt;{{#if:{{{trans-reference|}}}
        | &amp;#32;[''{{{trans-reference}}}'']
      }}{{#if:{{{reference-url|}}}
        |&lt;sup&gt;[{{{reference-url}}}]&lt;/sup&gt;
      }}{{#if:{{{volume|}}}
        |, volume {{{volume}}}
      }}{{#if:{{{edition|}}}
        |, {{{edition}}} edition
      }}{{#if:{{{location|}}}
        |, {{{location}}}
      }}{{#if:{{{publisher|}}}
        | {{#if:{{{location|}}}|&lt;nowiki&gt;:&lt;/nowiki&gt;|,}} {{{publisher}}}
      }}{{#if:{{{date|}}}
        |, {{{date}}}
      }}{{#if:{{{isbn|}}}
        |, &lt;small&gt;{{ISBN|{{{isbn}}}}}&lt;/small&gt;
      }}{{#if:{{{oclc|}}}
        |, &lt;small&gt;{{OCLC|{{{oclc}}}}}&lt;/small&gt;
      }}{{#if:{{{accessdate|}}}
        |, retrieved {{#formatdate:{{{accessdate}}}}}
      }}{{#if:{{{page|}}}
        |, {{#if:{{{pageurl|}}}
             | [{{{pageurl}}} page {{{page}}}]
             | page {{{page}}}
           }}
        | {{#if:{{{pages|}}}
            |, {{#if:{{{pageurl|}}}
                 | [{{{pageurl}}} pages {{{pages}}}]
                 | pages {{{pages}}}
               }}
          }}
      }}{{#if:{{{column|}}}
        |, column {{{column}}}
        | {{#if:{{{columns|}}}
            |, columns {{{columns}}}
          }}
      }}{{#if:{{{passage|}}}
        |&lt;nowiki&gt;:&lt;/nowiki&gt; “{{{passage}}}”
      }}{{#if:{{{nodot|}}}||.}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:49.428Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aitalics&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=63972 t=1555362469314949
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:49 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1276.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 750527992, 240672876, 692079676
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5880637\" pageid=\"5880637\" ns=\"828\" title=\"Module:italics\"><revisions><rev user=\"Erutuon\" timestamp=\"2018-12-26T23:15:23Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"fix case starting with bolding\" xml:space=\"preserve\">local export = {}\nlocal find = mw.ustring.find\nlocal match = mw.ustring.match\nlocal gsub = mw.ustring.gsub\n\nfunction export.i(text)\n\tif text\
      \ == \"\" or text == nil then\n\t\treturn nil\n\tend\n\t\n\tif type(text) == \"table\" and text.args then\n\t\ttext = text.args[1]\n\tend\n\t\n\t-- Remove whitespace from beginning and end of text.\n\ttext = mw.text.trim(text)\n\t\n\t-- Find parenthesized\
      \ text.\n\tlocal parenthesis = \"\"\n\tif find(text, \"%b()$\") then\n\t\ttext, parenthesis = match(text, \"^(.*)(%b())$\")\n\t\tif text == \"\" or text == nil then\n\t\t\terror(\"Malformed page name: \" .. text)\n\t\tend\n\tend\n\t\n\ttext = \"''\" ..\
      \ text .. \"''\"\n\t\n\t--[[ Adds italics toggle ('') around the whitespace\n\t\tthat surrounds various things that aren't supposed to be italicized:\n\t\tfor instance, Fragaria × ananassa becomes ''Fragaria'' × ''ananassa''.\n\t\t(The hybridization symbol\
      \ × isn't supposed to be italicized.) ]]\n\tlocal notItalicized = {\n\t\t[\"subsp.\"] = true, [\"ssp.\"] = true, [\"var.\"] = true, [\"f.\"] = true,\n\t\t[\"sect.\"] = true, [\"subsect.\"] = true, [\"subg.\"] = true,\n\t}\n\tlocal hybrid = \"×\"\n\t\n\t\
      text = text:gsub(\"(%s*([a-z]+%.)%s*)\",\n\t\tfunction(wholeMatch, abbreviation)\n\t\t\tif notItalicized[abbreviation] then\n\t\t\t\treturn \"''\" .. wholeMatch .. \"''\"\n\t\t\tend\n\t\tend)\n\t\n\ttext = text:gsub(\"%s*\" .. hybrid .. \"%s*\", \"''%0''\"\
      ):gsub(\"%f[']''''%f[^']\", \"\")\n\t\n\treturn text .. parenthesis\nend\n\nfunction export.unitalicize_brackets(text)\n\tif type(text) == \"table\" and text.args then\n\t\ttext = text.args[1]\n\tend\n\t\n\tif not text or text == \"\" then\n\t\treturn\
      \ nil\n\tend\n\t\n\tlocal function unitalicize(text)\n\t\treturn '&lt;span style=\"font-style: normal;\"&gt;' .. text .. '&lt;/span&gt;'\n\tend\n\t\n\tlocal function process(text)\n\t\tif text:find(\"[[\", 1, true) then\n\t\t\tif text:find(\"|\") then\n\
      \t\t\t\treturn text:gsub(\n\t\t\t\t\t\"|.-%]%]\",\n\t\t\t\t\tfunction (piping)\n\t\t\t\t\t\treturn piping:gsub(\"%b[]\", process)\n\t\t\t\t\tend)\n\t\t\tend\n\t\t\t-- do nothing with un-piped wikilinks\n\t\t--[=[\n\t\telseif text:find(\"[http\", 1, true)\
      \ then\n\t\t\treturn text:gsub(\n\t\t\t\t\"%[([^ ]+ )([^%]]+)%]\",\n\t\t\t\tfunction (URL, link_text)\n\t\t\t\t\treturn \"[\" .. URL .. process(link_text) .. \"]\"\n\t\t\t\tend)\n\t\t--]=]\n\t\telseif text:find(\"^%[https?://\") then\n\t\t\t\treturn text:gsub(\n\
      \t\t\t\t\t\" .+\",\n\t\t\t\t\tfunction (link_text)\n\t\t\t\t\t\treturn link_text:gsub(\"%b[]\", process)\n\t\t\t\t\tend)\n\t\telse\n\t\t\tlocal inside_brackets = text:sub(2, -2)\n\t\t\tif inside_brackets == \"...\" or inside_brackets == \"…\" then\n\t\t\
      \t\treturn unitalicize(text)\n\t\t\telse\n\t\t\t\treturn unitalicize(\"[\") .. inside_brackets .. unitalicize(\"]\")\n\t\t\tend\n\t\tend\n\tend\n\t\n\ttext = text:gsub(\"%b[]\", process)\n\t\n\treturn text\nend\n\nfunction export.test(frame)\n\tlocal text\
      \ = frame.args[1]\n\tlocal quote = require(\"Module:yesno\")(frame.args.quote)\n\tif quote then\n\t\treturn export.unitalicize_brackets(text)\n\telse\n\t\treturn export.i(text)\n\tend\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:49.944Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Awikipedia&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=40941 t=1555362469851595
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:49 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1289.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1087 pass, cp3040 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 741069469, 558744070, 696762022
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"5872615\" pageid=\"5872615\" ns=\"828\" title=\"Module:wikipedia\"><revisions><rev user=\"Julia\" timestamp=\"2018-12-08T23:00:16Z\" contentformat=\"\
      text/plain\" contentmodel=\"Scribunto\" comment=\"make slim version same length as other interwiki links\" xml:space=\"preserve\">local export = {}\n\n\nlocal function process_links(linkdata, prefix, name, wmlang, sc)\n\tprefix = prefix .. \":\" .. (wmlang:getCode()\
      \ == \"en\" and \"\" or wmlang:getCode() .. \":\")\n\t\n\tlocal links = {}\n\tlocal iplinks = {}\n\t\n\tlocal m_links = require(\"Module:links\")\n\tlocal lang = wmlang:getWiktionaryLanguage()\n\tlocal ipalt = name .. \" \" .. (wmlang:getCode() == \"en\"\
      \ and \"\" or \"&lt;sup&gt;\" .. wmlang:getCode() .. \"&lt;/sup&gt;\")\n\t\n\tfor i, link in ipairs(linkdata) do\n\t\tlink.lang = lang\n\t\tlink.sc = sc\n\t\tlink.term = prefix .. link.term\n\t\tlink.tr = \"-\"\n\t\ttable.insert(iplinks, \"&lt;span class=\\\
      \"interProject\\\"&gt;[[\" .. link.term .. \"|\" .. ipalt .. \"]]&lt;/span&gt;\")\n\t\ttable.insert(links, m_links.full_link(link, \"bold\"))\n\tend\n\t\n\treturn links, iplinks\nend\n\n\nfunction export.wikipedia_box(frame)\n\tlocal params = {\n\t\t[1]\
      \ = {},\n\t\t[2] = {},\n\t\t\n\t\t[\"cat\"] = {},\n\t\t[\"category\"] = {alias_of = \"cat\"},\n\t\t[\"dab\"] = {},\n\t\t[\"disambiguation\"] = {alias_of = \"dab\"},\n\t\t[\"i\"] = {type = \"boolean\"},\n\t\t[\"lang\"] = {default = \"en\"},\n\t\t[\"mul\"\
      ] = {},\n\t\t[\"mullabel\"] = {},\n\t\t[\"mulcat\"] = {},\n\t\t[\"mulcatlabel\"] = {},\n\t\t[\"portal\"] = {},\n\t\t[\"sc\"] = {},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal wmlang = require(\"\
      Module:wikimedia languages\").getByCodeWithFallback(args[\"lang\"]) or error(\"The Wikimedia language code \\\"\" .. args[\"lang\"] .. \"\\\" is not valid.\")\n\tlocal sc = args[\"sc\"] and (require(\"Module:scripts\").getByCode(args[\"sc\"]) or error(\"\
      The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil\n\t\n\tlocal linkdata = {}\n\t\n\tif args[\"cat\"] then\n\t\ttable.insert(linkdata, {term = \"Category:\" .. args[\"cat\"], alt = args[1] or args[\"cat\"]})\n\telseif args[\"portal\"] then\n\
      \t\ttable.insert(linkdata, {term = \"Portal:\" .. args[\"portal\"], alt = args[1] or args[\"portal\"]})\n\telse\n\t\ttable.insert(linkdata, {term = args[\"dab\"] or args[1] or mw.title.getCurrentTitle().text, alt = args[2] or args[1] or args[\"dab\"] or\
      \ mw.title.getCurrentTitle().text})\n\tend\n\t\n\tif args[\"mul\"] or args[\"mulcat\"] then\n\t\tif args[\"mulcat\"] then\n\t\t\ttable.insert(linkdata, {term = \"Category:\" .. args[\"mulcat\"], alt = args[\"mulcatlabel\"] or args[\"mulcat\"]})\n\t\telse\n\
      \t\t\ttable.insert(linkdata, {term = args[\"mul\"], alt = args[\"mullabel\"] or args[\"mul\"]})\n\t\tend\n\tend\n\t\n\tlocal links, iplinks = process_links(linkdata, \"w\", \"Wikipedia\", wmlang, sc)\n\t\n\tif frame.args[\"slim\"] then\n\t\treturn\n\t\t\
      \t\"&lt;div class=\\\"sister-wikipedia sister-project noprint floatright\\\" style=\\\"border: solid #aaa 1px; font-size: 90%; background: #f9f9f9; width: 250px; padding: 4px; text-align: left;\\\"&gt;\" ..\n\t\t\t\"&lt;div style=\\\"float: left;\\\"&gt;[[File:Wikipedia-logo.png|14px|none|\
      \ ]]&lt;/div&gt;\" ..\n\t\t\t\"&lt;div style=\\\"margin-left: 15px;\\\"&gt;\" ..\n\t\t\t\" &amp;nbsp;\" ..\n\t\t\ttable.concat(links, \" and \") ..\n\t\t\t\" on \" ..\n\t\t\t(wmlang:getCode() == \"en\" and \"\" or wmlang:getCanonicalName() .. \"&amp;nbsp;\"\
      ) ..\n\t\t\t\"Wikipedia\" ..\n\t\t\t\"&lt;/div&gt;\" ..\n\t\t\t\"&lt;/div&gt;\"\n\telse\n\t\tlocal linktype\n\t\t\n\t\tif args[\"cat\"] then\n\t\t\tlinktype = \"a category\"\n\t\telseif args[\"mul\"] or args[\"dab\"] then\n\t\t\tlinktype = \"articles\"\
      \n\t\telseif args[\"mulcat\"] then\n\t\t\tlinktype = \"categories\"\n\t\telseif args[\"portal\"] then\n\t\t\tlinktype = \"a portal\"\n\t\telse\n\t\t\tlinktype = \"an article\"\n\t\tend\n\t\t\n\t\treturn\n\t\t\t\"&lt;div class=\\\"sister-wikipedia sister-project\
      \ noprint floatright\\\" style=\\\"border: 1px solid #aaa; font-size: 90%; background: #f9f9f9; width: 250px; padding: 4px; text-align: left;\\\"&gt;\" ..\n\t\t\t\"&lt;div style=\\\"float: left;\\\"&gt;[[File:Wikipedia-logo.png|44px|none|link=|alt=]]&lt;/div&gt;\"\
      \ ..\n\t\t\t\"&lt;div style=\\\"margin-left: 60px;\\\"&gt;\" ..\n\t\t\twmlang:getCanonicalName() .. \" [[Wikipedia]] has \" .. linktype .. \" on:\" ..\n\t\t\t\"&lt;div style=\\\"margin-left: 10px;\\\"&gt;\" .. table.concat(links, \" and \") .. \"&lt;/div&gt;\"\
      \ ..\n\t\t\t\"&lt;/div&gt;\" ..\n\t\t\ttable.concat(iplinks) .. ((args[1] == mw.title.getCurrentTitle().text and not (args[2] or args[\"dab\"])) and \"[[Category:wikipedia with redundant first parameter]]\" or \"\") ..\n\t\t\t\"&lt;/div&gt;\"\n\tend\n\
      end\n\n\nfunction export.projectlink(frame)\n\tlocal params = {\n\t\t[1] = {},\n\t\t[2] = {},\n\t\t\n\t\t[\"dab\"] = {},\n\t\t[\"i\"] = {type = \"boolean\"},\n\t\t[\"lang\"] = {default = \"en\"},\n\t\t[\"nodot\"] = {},\n\t\t[\"sc\"] = {},\n\t}\n\t\n\t\
      local args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal wmlang = require(\"Module:wikimedia languages\").getByCodeWithFallback(args[\"lang\"]) or error(\"The Wikimedia language code \\\"\" .. args[\"lang\"] .. \"\
      \\\" is not valid.\")\n\tlocal sc = args[\"sc\"] and (require(\"Module:scripts\").getByCode(args[\"sc\"]) or error(\"The script code \\\"\" .. sc .. \"\\\" is not valid.\")) or nil\n\t\n\tlocal linkdata = {term = args[1] or args[\"dab\"] or mw.title.getCurrentTitle().text,\
      \ alt = args[2] or args[1] or args[\"dab\"] or mw.title.getCurrentTitle().text}\n\t\n\tif args[\"i\"] then\n\t\tlinkdata.alt = \"''\" .. linkdata.alt .. \"''\"\n\tend\n\t\n\tlocal links, iplinks = process_links({linkdata}, frame.args[\"prefix\"], frame.args[\"\
      name\"], wmlang, sc)\n\t\n\treturn\n\t\t\"[[Image:\" .. frame.args[\"image\"] .. \"|15px|link=\" .. linkdata.term .. \"]] \" ..\n\t\ttable.concat(links, \" and \") ..\n\t\t\" on \" ..\n\t\t(wmlang:getCode() == \"en\" and \"\" or \"the \" .. wmlang:getCanonicalName()\
      \ .. \" \") ..\n\t\t\" \" .. frame.args[\"name\"] .. (args[\"nodot\"] and \"\" or \".\") ..\n\t\ttable.concat(iplinks)\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:50.499Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Template%3Aanagrams&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=53427 t=1555362470400227
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:50 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1313.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1075 pass, cp3041 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 592829410, 732215325, 695552935
    body: <?xml version="1.0"?><api batchcomplete=""><warnings><main xml:space="preserve">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space="preserve">Because "rvslots" was not specified, a legacy format has been used for the output. This format is deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx="6228034" pageid="6228034" ns="10" title="Template:anagrams"><revisions><rev user="Rua" timestamp="2017-12-15T16:44:58Z" contentformat="text/x-wiki" contentmodel="wikitext" comment="" xml:space="preserve">{{#invoke:anagrams|show}}&lt;noinclude&gt;{{documentation}}&lt;/noinclude&gt;</rev></revisions></page></pages></query></api>
- recorded: 2019-04-15T21:07:50.684Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=Module%3Aanagrams&prop=revisions&rvprop=timestamp%7Cuser%7Ccomment%7Ccontent
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=52219 t=1555362470586201
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:50 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1345.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Transfer-Encoding: chunked
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1085 pass, cp3032 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 572809534, 248758001, 687860086
    body: "<?xml version=\"1.0\"?><api batchcomplete=\"\"><warnings><main xml:space=\"preserve\">Subscribe to the mediawiki-api-announce mailing list at &lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&gt; for notice of API deprecations\
      \ and breaking changes. Use [[Special:ApiFeatureUsage]] to see usage of deprecated features by your application.</main><revisions xml:space=\"preserve\">Because \"rvslots\" was not specified, a legacy format has been used for the output. This format is\
      \ deprecated, and in the future the new format will always be used.</revisions></warnings><query><pages><page _idx=\"6228029\" pageid=\"6228029\" ns=\"828\" title=\"Module:anagrams\"><revisions><rev user=\"Metaknowledge\" timestamp=\"2018-12-08T02:47:59Z\"\
      \ contentformat=\"text/plain\" contentmodel=\"Scribunto\" comment=\"Do not make changes like this without discussing them first. Do not edit war, especially with experienced editors. And also, it looks silly.\" xml:space=\"preserve\">local m_languages\
      \ = require(\"Module:languages\")\nlocal m_links = require('Module:links')\n\nlocal export = {}\n\nfunction export.show(frame)\n\tlocal params = {\n\t\t[1] = {required = true, default = \"und\"},\n\t\t[2] = {required = true, default = \"anagram\", list\
      \ = true},\n\t\t[\"a\"] = {required = false},\n\t}\n\t\n\tlocal args = require(\"Module:parameters\").process(frame:getParent().args, params)\n\t\n\tlocal lang = m_languages.getByCode(args[1])\n\t\n\tfor i, val in ipairs(args[2]) do\n\t\targs[2][i] = m_links.full_link({lang\
      \ = lang, term = val})\n\tend\n\n\tlocal result = table.concat(args[2], ', ')\n\n\treturn result\n\t\t\nend\n\nreturn export</rev></revisions></page></pages></query></api>"
- recorded: 2019-04-15T21:07:51.231Z
  request:
    method: GET
    uri: https://en.wiktionary.org/w/api.php?format=xml&action=query&continue=&titles=File%3AWikipedia-logo.svg&prop=imageinfo&iiprop=url&iiurlwidth=15
    headers:
      Connection: Keep-Alive
      Content-Length: '0'
      Cookie: GeoIP=DE:BW:Laufenburg:47.57:8.06:v4; WMF-Last-Access=15-Apr-2019; WMF-Last-Access-Global=15-Apr-2019
      Cookie2: $Version=1
      Host: en.wiktionary.org
      User-Agent: JavaWikipediaAPI/3.1-SNAPSHOT https://bitbucket.org/axelclk/info.bliki.wiki/
  response:
    status: 200
    headers:
      Accept-Ranges: bytes
      Age: '0'
      Backend-Timing: D=61748 t=1555362471124668
      Cache-control: private, must-revalidate, max-age=0
      Connection: keep-alive
      Content-Disposition: inline; filename=api-result.xml
      Content-Length: '648'
      Content-Type: text/xml; charset=utf-8
      Date: Mon, 15 Apr 2019 21:07:51 GMT
      P3P: CP="This is not a P3P policy! See https://en.wiktionary.org/wiki/Special:CentralAutoLogin/P3P for more info."
      Server: mw1286.eqiad.wmnet
      Server-Timing: cache;desc="pass"
      Strict-Transport-Security: max-age=106384710; includeSubDomains; preload
      Vary: Accept-Encoding,Treat-as-Untrusted,X-Forwarded-Proto,Cookie,Authorization,X-Seven
      X-Analytics: ns=-1;special=Badtitle;WMF-Last-Access=15-Apr-2019;WMF-Last-Access-Global=15-Apr-2019;https=1
      X-Cache: cp1081 pass, cp3030 pass, cp3040 pass
      X-Cache-Status: pass
      X-Client-IP: 217.233.11.52
      X-Content-Type-Options: nosniff
      X-Frame-Options: DENY
      X-Powered-By: HHVM/3.18.6-dev
      X-Varnish: 502120465, 633105437, 693225121
    body: <?xml version="1.0"?><api><continue iistart="2010-06-15T23:28:41Z" continue="||" /><query><pages><page _idx="-1" ns="6" title="File:Wikipedia-logo.svg" missing="" known="" imagerepository="shared"><imageinfo><ii thumburl="https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Wikipedia-logo-v2.svg/15px-Wikipedia-logo-v2.svg.png" thumbwidth="15" thumbheight="14" url="https://upload.wikimedia.org/wikipedia/commons/8/80/Wikipedia-logo-v2.svg" descriptionurl="https://commons.wikimedia.org/wiki/File:Wikipedia-logo-v2.svg" descriptionshorturl="https://commons.wikimedia.org/w/index.php?curid=10337301" /></imageinfo></page></pages></query></api>
